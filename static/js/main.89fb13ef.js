/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 316:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var _slicedToArray = (__webpack_require__(424)["default"]);
var _createClass = (__webpack_require__(728)["default"]);
var _classCallCheck = (__webpack_require__(690)["default"]);
// Generated by CoffeeScript 2.5.1
(function () {
  /* arg =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  z
   General description
  -------------------
  Returns the angle of complex z.
   */
  /*
   Argument (angle) of complex z
     z    arg(z)
    -    ------
     a    0
     -a    -pi      See note 3 below
     (-1)^a    a pi
     exp(a + i b)  b
     a b    arg(a) + arg(b)
     a + i b    arctan(b/a)
   Result by quadrant
     z    arg(z)
    -    ------
     1 + i    1/4 pi
     1 - i    -1/4 pi
     -1 + i    3/4 pi
     -1 - i    -3/4 pi
   Notes
     1. Handles mixed polar and rectangular forms, e.g. 1 + exp(i pi/3)
     2. Symbols in z are assumed to be positive and real.
     3. Negative direction adds -pi to angle.
        Example: z = (-1)^(1/3), abs(z) = 1/3 pi, abs(-z) = -2/3 pi
     4. jean-francois.debroux reports that when z=(a+i*b)/(c+i*d) then
       arg(numerator(z)) - arg(denominator(z))
        must be used to get the correct answer. Now the operation is
       automatic.
  */
  /*
   Returns the coefficient of the imaginary part of complex z
     z    imag(z)
    -    -------
     a + i b    b
     exp(i a)  sin(a)
  */
  /* Power function
     Input:    push  Base
         push  Exponent
     Output:    Result on stack
  */
  /*
  Convert complex z to rectangular form
     Input:    push  z
     Output:    Result on stack
  */
  /* det =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  m
   General description
  -------------------
  Returns the determinant of matrix m.
  Uses Gaussian elimination for numerical matrices.
   Example:
     det(((1,2),(3,4)))
    > -2
   */
  /* adj =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  m
   General description
  -------------------
  Returns the adjunct of matrix m. The inverse of m is equal to adj(m) divided by det(m).
   */
  /*
   Guesses a rational for each float in the passed expression
  */
  /* arccos =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  x
   General description
  -------------------
  Returns the inverse cosine of x.
   */
  /* arccosh =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  x
   General description
  -------------------
  Returns the inverse hyperbolic cosine of x.
   */
  /* arcsin =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  x
   General description
  -------------------
  Returns the inverse sine of x.
   */
  /* arcsinh =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  x
   General description
  -------------------
  Returns the inverse hyperbolic sine of x.
   */
  /* arctan =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  x
   General description
  -------------------
  Returns the inverse tangent of x.
   */
  /* arctanh =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  x
   General description
  -------------------
  Returns the inverse hyperbolic tangent of x.
   */
  /* besselj =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  x,n
   General description
  -------------------
   Returns a solution to the Bessel differential equation (Bessel function of first kind).
   Recurrence relation:
     besselj(x,n) = (2/x) (n-1) besselj(x,n-1) - besselj(x,n-2)
     besselj(x,1/2) = sqrt(2/pi/x) sin(x)
     besselj(x,-1/2) = sqrt(2/pi/x) cos(x)
   For negative n, reorder the recurrence relation as:
     besselj(x,n-2) = (2/x) (n-1) besselj(x,n-1) - besselj(x,n)
   Substitute n+2 for n to obtain
     besselj(x,n) = (2/x) (n+1) besselj(x,n+1) - besselj(x,n+2)
   Examples:
     besselj(x,3/2) = (1/x) besselj(x,1/2) - besselj(x,-1/2)
     besselj(x,-3/2) = -(1/x) besselj(x,-1/2) - besselj(x,1/2)
   */
  /* bessely =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  x,n
   General description
  -------------------
   Bessel function of second kind.
   */
  /* ceiling =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  x
   General description
  -------------------
   Returns the smallest integer not less than x.
   */
  /* check =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  p
   General description
  -------------------
  Returns whether the predicate p is true/false or unknown:
  0 if false, 1 if true or remains unevaluated if unknown.
  Note that if "check" is passed an assignment, it turns it into a test,
  i.e. check(a = b) is turned into check(a==b) 
  so "a" is not assigned anything.
  Like in many programming languages, "check" also gives truthyness/falsyness
  for numeric values. In which case, "true" is returned for non-zero values.
  Potential improvements: "check" can't evaluate strings yet.
   */
  /* choose =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  n,k
   General description
  -------------------
   Returns the number of combinations of n items taken k at a time.
   For example, the number of five card hands is choose(52,5)
   ```
                            n!
        choose(n,k) = -------------
                       k! (n - k)!
  ```
  */
  /* circexp =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  x
   General description
  -------------------
   Returns expression x with circular and hyperbolic functions converted to exponential forms. Sometimes this will simplify an expression.
   */
  /* clear =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  x
   General description
  -------------------
   Completely wipes a variable from the environment (while doing x = quote(x) just unassigns it).
   */
  /* clearall =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   General description
  -------------------
   Completely wipes all variables from the environment.
   */
  /* cofactor =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  m,i,j
   General description
  -------------------
  Cofactor of a matrix component.
  Let c be the cofactor matrix of matrix m, i.e. tranpose(c) = adj(m).
  This function returns c[i,j].
   */
  /* conj =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  z
   General description
  -------------------
  Returns the complex conjugate of z.
   */
  /* contract =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  a,i,j
   General description
  -------------------
  Contract across tensor indices i.e. returns "a" summed over indices i and j.
  If i and j are omitted then 1 and 2 are used.
  contract(m) is equivalent to the trace of matrix m.
   */
  /* cosh =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  x
   General description
  -------------------
  Returns the hyperbolic cosine of x
   ```
              exp(x) + exp(-x)
    cosh(x) = ----------------
                     2
  ```
   */
  /* deg =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  p,x
   General description
  -------------------
  Returns the degree of polynomial p(x).
   */
  /* denominator =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  x
   General description
  -------------------
  Returns the denominator of expression x.
   */
  /* dim =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  m,n
   General description
  -------------------
  Returns the cardinality of the nth index of tensor "m".
   */
  /* do =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  a,b,...
   General description
  -------------------
  Evaluates each argument from left to right. Returns the result of the last argument.
   */
  /* eigenval =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  m
   General description
  -------------------
  Compute eigenvalues of m. See "eigen" for more info.
   */
  /* eigenvec =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  m
   General description
  -------------------
  Compute eigenvectors of m. See "eigen" for more info.
   */
  /* erf =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Authors
  -------
  philippe.billet@noos.fr
   Parameters
  ----------
  x
   General description
  -------------------
  Error function erf(x).
  erf(-x)=erf(x)
   */
  /*
  Remove terms that involve a given symbol or expression. For example...
     filter(x^2 + x + 1, x)    =>  1
     filter(x^2 + x + 1, x^2)  =>  x + 1
  */
  /* dot =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  a,b,...
   General description
  -------------------
   The inner (or dot) operator gives products of vectors,
  matrices, and tensors.
   Note that for Algebrite, the elements of a vector/matrix
  can only be scalars. This allows for example to flesh out
  matrix multiplication using the usual multiplication.
  So for example block-representations are not allowed.
   There is an aweful lot of confusion between sw packages on
  what dot and inner do.
   First off, the "dot" operator is different from the
  mathematical notion of dot product, which can be
  slightly confusing.
   The mathematical notion of dot product is here:
    http://mathworld.wolfram.com/DotProduct.html
   However, "dot" does that and a bunch of other things,
  i.e. in Algebrite
  dot/inner does what the dot of Mathematica does, i.e.:
   scalar product of vectors:
     inner((a, b, c), (x, y, z))
    > a x + b y + c z
   products of matrices and vectors:
     inner(((a, b), (c,d)), (x, y))
    > (a x + b y,c x + d y)
     inner((x, y), ((a, b), (c,d)))
    > (a x + c y,b x + d y)
     inner((x, y), ((a, b), (c,d)), (r, s))
    > a r x + b s x + c r y + d s y
   matrix product:
     inner(((a,b),(c,d)),((r,s),(t,u)))
    > ((a r + b t,a s + b u),(c r + d t,c s + d u))
   the "dot/inner" operator is associative and
  distributive but not commutative.
   In Mathematica, Inner is a generalisation of Dot where
  the user can specify the multiplication and the addition
  operators.
  But here in Algebrite they do the same thing.
    https://reference.wolfram.com/language/ref/Dot.html
   https://reference.wolfram.com/language/ref/Inner.html
    http://uk.mathworks.com/help/matlab/ref/dot.html
   http://uk.mathworks.com/help/matlab/ref/mtimes.html
   */
  /*
   Laguerre function
   Example
     laguerre(x,3)
   Result
        1   3    3   2
    - --- x  + --- x  - 3 x + 1
       6        2
   The computation uses the following recurrence relation.
     L(x,0,k) = 1
     L(x,1,k) = -x + k + 1
     n*L(x,n,k) = (2*(n-1)+1-x+k)*L(x,n-1,k) - (n-1+k)*L(x,n-2,k)
   In the "for" loop i = n-1 so the recurrence relation becomes
     (i+1)*L(x,n,k) = (2*i+1-x+k)*L(x,n-1,k) - (i+k)*L(x,n-2,k)
  */
  /*
   Return the leading coefficient of a polynomial.
   Example
     leading(5x^2+x+1,x)
   Result
     5
   The result is undefined if P is not a polynomial.
  */
  /*
   Legendre function
   Example
     legendre(x,3,0)
   Result
      5   3    3
    --- x  - --- x
     2        2
   The computation uses the following recurrence relation.
     P(x,0) = 1
     P(x,1) = x
     n*P(x,n) = (2*(n-1)+1)*x*P(x,n-1) - (n-1)*P(x,n-2)
   In the "for" loop we have i = n-1 so the recurrence relation becomes
     (i+1)*P(x,n) = (2*i+1)*x*P(x,n-1) - i*P(x,n-2)
   For m > 0
     P(x,n,m) = (-1)^m * (1-x^2)^(m/2) * d^m/dx^m P(x,n)
  */
  /*
  Convert complex z to polar form
     Input:    push  z
     Output:    Result on stack
     polar(z) = abs(z) * exp(i * arg(z))
  */
  /*
   Returns the real part of complex z
     z    real(z)
    -    -------
     a + i b    a
     exp(i a)  cos(a)
  */
  /*
  Taylor expansion of a function
     push(F)
    push(X)
    push(N)
    push(A)
    taylor()
  */
  /*
  // up to 100 blocks of 100,000 atoms
   #define M 100
  #define N 100000
   U *mem[M]
  int mcount
   U *free_list
  int free_count
   U *
  alloc(void)
  {
    U *p
    if (free_count == 0) {
      if (mcount == 0)
        alloc_mem()
      else {
        gc()
        if (free_count < N * mcount / 2)
          alloc_mem()
      }
      if (free_count == 0)
        stop("atom space exhausted")
    }
    p = free_list
    free_list = free_list->u.cons.cdr
    free_count--
    return p
  }
   */
  /*
   Compare adjacent terms in s[] and combine if possible.
     Returns the number of terms remaining in s[].
     n  number of terms in s[] initially
  */
  /* cross =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept, script_defined
   Parameters
  ----------
  u,v
   General description
  -------------------
  Returns the cross product of vectors u and v.
   */
  /* curl =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept, script_defined
   Parameters
  ----------
  u
   General description
  -------------------
  Returns the curl of vector u.
   */
  /*
    Clear all patterns
  */
  /*
  if 0
    * left brace
     for (i = 0; i < h; i++) {
      if (yindex == YMAX)
        break
      chartab[yindex].c = '|'
      chartab[yindex].x = x - 2
      chartab[yindex].y = y + i
      yindex++
    }
    * right brace
     emit_x++
     for (i = 0; i < h; i++) {
      if (yindex == YMAX)
        break
      chartab[yindex].c = '|'
      chartab[yindex].x = emit_x
      chartab[yindex].y = y + i
      yindex++
    }
     emit_x++
   endif
   */
  /*
   For example...
     push(F)
    push(X)
    filter()
    F = pop()
  */
  /*
   Symbolic addition
     Terms in a sum are combined if they are identical modulo rational
    coefficients.
     For example, A + 2A becomes 3A.
     However, the sum A + sqrt(2) A is not modified.
     Combining terms can lead to second-order effects.
     For example, consider the case of
       1/sqrt(2) A + 3/sqrt(2) A + sqrt(2) A
     The first two terms are combined to yield 2 sqrt(2) A.
     This result can now be combined with the third term to yield
       3 sqrt(2) A
  */
  /*
   Table of integrals
   The symbol f is just a dummy symbol for creating a list f(A,B,C,C,...) where
     A  is the template expression
     B  is the result expression
     C  is an optional list of conditional expressions
  */
  /*
   Partition a term
     Input stack:
       term (factor or product of factors)
       free variable
     Output stack:
       constant expression
       variable expression
  */
  /*
    Substitute new expr for old expr in expr.
     Input:  push  expr
       push  old expr
       push  new expr
     Output:  Result on stack
  */
  var $,
    ABS,
    ADD,
    ADJ,
    AND,
    APPROXRATIO,
    ARCCOS,
    ARCCOSH,
    ARCSIN,
    ARCSINH,
    ARCTAN,
    ARCTANH,
    ARG,
    ASSUME_REAL_VARIABLES,
    ATOMIZE,
    AUTOEXPAND,
    BAKE,
    BESSELJ,
    BESSELY,
    BINDING,
    BINOMIAL,
    BINOM_check_args,
    BUF,
    C1,
    C2,
    C3,
    C4,
    C5,
    C6,
    CEILING,
    CHECK,
    CHOOSE,
    CIRCEXP,
    CLEAR,
    CLEARALL,
    CLEARPATTERNS,
    CLOCK,
    COEFF,
    COFACTOR,
    CONDENSE,
    CONJ,
    CONS,
    CONTRACT,
    COS,
    COSH,
    Condense,
    DEBUG,
    DEBUG_ABS,
    DEBUG_ARG,
    DEBUG_CLOCKFORM,
    DEBUG_IMAG,
    DEBUG_IS,
    DEBUG_MULTIPLY,
    DEBUG_POWER,
    DEBUG_RATIONALIZE,
    DEBUG_RECT,
    DEBUG_SIMPLIFY,
    DECOMP,
    DEFINT,
    DEGREE,
    DENOMINATOR,
    DERIVATIVE,
    DET,
    DET_check_arg,
    DIM,
    DIRAC,
    DIVISORS,
    DO,
    DOT,
    DOUBLE,
    DRAW,
    DRAWX,
    DSOLVE,
    E,
    EIGEN,
    EIGENVAL,
    EIGENVEC,
    EIG_N,
    EIG_check_arg,
    EIG_yydd,
    EIG_yyqq,
    ERF,
    ERFC,
    EVAL,
    EXP,
    EXPAND,
    EXPCOS,
    EXPSIN,
    Eval,
    Eval_Eval,
    Eval_abs,
    Eval_add,
    Eval_adj,
    Eval_and,
    Eval_approxratio,
    Eval_arccos,
    Eval_arccosh,
    Eval_arcsin,
    Eval_arcsinh,
    Eval_arctan,
    Eval_arctanh,
    Eval_arg,
    Eval_besselj,
    Eval_bessely,
    Eval_binding,
    Eval_binomial,
    Eval_ceiling,
    Eval_check,
    Eval_choose,
    Eval_circexp,
    Eval_clear,
    Eval_clearall,
    Eval_clearpatterns,
    Eval_clock,
    Eval_coeff,
    Eval_cofactor,
    Eval_condense,
    Eval_conj,
    Eval_cons,
    Eval_contract,
    Eval_cos,
    Eval_cosh,
    Eval_decomp,
    Eval_defint,
    Eval_degree,
    Eval_denominator,
    Eval_derivative,
    Eval_det,
    Eval_dim,
    Eval_dirac,
    Eval_divisors,
    Eval_do,
    Eval_dsolve,
    Eval_eigen,
    Eval_eigenval,
    Eval_eigenvec,
    Eval_erf,
    Eval_erfc,
    Eval_exp,
    Eval_expand,
    Eval_expcos,
    Eval_expsin,
    Eval_factor,
    Eval_factorial,
    Eval_factorpoly,
    Eval_filter,
    Eval_float,
    Eval_floor,
    Eval_for,
    Eval_function_reference,
    Eval_gamma,
    Eval_gcd,
    Eval_hermite,
    Eval_hilbert,
    Eval_imag,
    Eval_index,
    _Eval_inner,
    Eval_integral,
    Eval_inv,
    Eval_invg,
    Eval_isinteger,
    Eval_isprime,
    Eval_laguerre,
    Eval_lcm,
    Eval_leading,
    Eval_legendre,
    Eval_log,
    Eval_lookup,
    Eval_mod,
    Eval_multiply,
    Eval_noexpand,
    Eval_not,
    Eval_nroots,
    Eval_number,
    Eval_numerator,
    Eval_operator,
    Eval_or,
    Eval_outer,
    Eval_pattern,
    Eval_patternsinfo,
    Eval_polar,
    Eval_power,
    Eval_predicate,
    Eval_prime,
    Eval_print,
    Eval_print2dascii,
    Eval_printcomputer,
    Eval_printhuman,
    Eval_printlatex,
    Eval_printlist,
    Eval_product,
    Eval_quote,
    Eval_quotient,
    Eval_rank,
    Eval_rationalize,
    Eval_real,
    Eval_rect,
    Eval_roots,
    Eval_round,
    Eval_setq,
    Eval_sgn,
    Eval_shape,
    Eval_silentpattern,
    Eval_simfac,
    Eval_simplify,
    Eval_sin,
    Eval_sinh,
    Eval_sqrt,
    Eval_stop,
    Eval_subst,
    Eval_sum,
    Eval_sym,
    Eval_symbolsinfo,
    Eval_tan,
    Eval_tanh,
    Eval_taylor,
    Eval_tensor,
    Eval_test,
    Eval_testeq,
    Eval_testge,
    Eval_testgt,
    Eval_testle,
    Eval_testlt,
    Eval_transpose,
    Eval_unit,
    Eval_user_function,
    Eval_zero,
    Evalpoly,
    FACTOR,
    FACTORIAL,
    FACTORPOLY,
    FILTER,
    FLOATF,
    FLOOR,
    FOR,
    FORCE_FIXED_PRINTOUT,
    FUNCTION,
    _Find,
    GAMMA,
    GCD,
    HERMITE,
    HILBERT,
    IMAG,
    INDEX,
    INNER,
    INTEGRAL,
    INV,
    INVG,
    INV_check_arg,
    INV_decomp,
    ISINTEGER,
    ISPRIME,
    LAGUERRE,
    LAST,
    LAST_2DASCII_PRINT,
    LAST_FULL_PRINT,
    LAST_LATEX_PRINT,
    LAST_LIST_PRINT,
    LAST_PLAIN_PRINT,
    LAST_PRINT,
    LCM,
    LEADING,
    LEGENDRE,
    LOG,
    LOOKUP,
    M,
    MAXDIM,
    MAXPRIMETAB,
    MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES,
    MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE,
    MAX_FIXED_PRINTOUT_DIGITS,
    MAX_PROGRAM_SIZE,
    MEQUAL,
    METAA,
    METAB,
    METAX,
    MLENGTH,
    MOD,
    MSIGN,
    MULTIPLY,
    MZERO,
    N,
    NIL,
    NOT,
    NROOTS,
    NROOTS_ABS,
    NROOTS_DELTA,
    NROOTS_EPSILON,
    NROOTS_RANDOM,
    NROOTS_YMAX,
    NROOTS_divpoly,
    NSYM,
    NUM,
    NUMBER,
    NUMERATOR,
    OPERATOR,
    OR,
    OUTER,
    PATTERN,
    PATTERNSINFO,
    PI,
    POLAR,
    POWER,
    PRIME,
    PRINT,
    PRINT2DASCII,
    PRINTFULL,
    PRINTLATEX,
    PRINTLIST,
    PRINTMODE_2DASCII,
    PRINTMODE_COMPUTER,
    PRINTMODE_HUMAN,
    PRINTMODE_LATEX,
    PRINTMODE_LIST,
    PRINTOUTRESULT,
    PRINTPLAIN,
    PRINT_LEAVE_E_ALONE,
    PRINT_LEAVE_X_ALONE,
    PRODUCT,
    QUOTE,
    QUOTIENT,
    RANK,
    RATIONALIZE,
    REAL,
    ROOTS,
    ROUND,
    SECRETX,
    SELFTEST,
    SETQ,
    SGN,
    SHAPE,
    SILENTPATTERN,
    SIMPLIFY,
    SIN,
    SINH,
    SPACE_BETWEEN_COLUMNS,
    SPACE_BETWEEN_ROWS,
    SQRT,
    STOP,
    STR,
    SUBST,
    SUM,
    SYM,
    SYMBOLSINFO,
    SYMBOL_A,
    SYMBOL_A_UNDERSCORE,
    SYMBOL_B,
    SYMBOL_B_UNDERSCORE,
    SYMBOL_C,
    SYMBOL_D,
    SYMBOL_I,
    SYMBOL_IDENTITY_MATRIX,
    SYMBOL_J,
    SYMBOL_N,
    SYMBOL_R,
    SYMBOL_S,
    SYMBOL_T,
    SYMBOL_X,
    SYMBOL_X_UNDERSCORE,
    SYMBOL_Y,
    SYMBOL_Z,
    TAN,
    TANH,
    TAYLOR,
    TENSOR,
    TEST,
    TESTEQ,
    TESTGE,
    TESTGT,
    TESTLE,
    TESTLT,
    TIMING_DEBUGS,
    TOS,
    TRACE,
    TRANSPOSE,
    T_DOUBLE,
    T_EQ,
    T_FUNCTION,
    T_GTEQ,
    T_INTEGER,
    T_LTEQ,
    T_NEQ,
    T_NEWLINE,
    T_QUOTASSIGN,
    T_STRING,
    T_SYMBOL,
    U,
    UNIT,
    USR_SYMBOLS,
    VERSION,
    YMAX,
    YYE,
    YYRECT,
    ZERO,
    __emit_char,
    __emit_str,
    __factor_add,
    __factorial,
    __is_negative,
    __is_radical_number,
    __lcm,
    __legendre,
    __legendre2,
    __legendre3,
    __normalize_radical_factors,
    __rationalize_tensor,
    _print,
    abs,
    absValFloat,
    _absval,
    absval_tensor,
    add,
    addSymbolLeftOfAssignment,
    addSymbolRightOfAssignment,
    add_all,
    add_factor_to_accumulator,
    add_numbers,
    add_terms,
    addf,
    adj,
    alloc_tensor,
    allocatedId,
    any_denominators,
    approxAll,
    approxLogs,
    approxLogsOfRationals,
    approxOneRatioOnly,
    approxRadicals,
    approxRadicalsOfRationals,
    approxRationalsOfLogs,
    approxRationalsOfPowersOfE,
    approxRationalsOfPowersOfPI,
    approxRationalsOfRadicals,
    approxSineOfRationalMultiplesOfPI,
    approxSineOfRationals,
    approxTrigonometric,
    approx_just_an_integer,
    approx_logarithmsOfRationals,
    approx_nothingUseful,
    approx_radicalOfRatio,
    approx_ratioOfRadical,
    approx_rationalOfE,
    approx_rationalOfPi,
    approx_rationalsOfLogarithms,
    approx_sine_of_pi_times_rational,
    approx_sine_of_rational,
    _approxratioRecursive,
    arccos,
    arccosh,
    arcsin,
    arcsinh,
    _arctan,
    arctanh,
    areunivarpolysfactoredorexpandedform,
    arg,
    arglist,
    assignmentFound,
    avoidCalculatingPowersIntoArctans,
    _bake,
    bake_poly,
    bake_poly_term,
    besselj,
    bessely,
    bigInt,
    bignum_factorial,
    bignum_float,
    bignum_power_number,
    bignum_scan_float,
    bignum_scan_integer,
    bignum_truncate,
    binding,
    binomial,
    buffer,
    build_tensor,
    caaddr,
    caadr,
    caar,
    cadaddr,
    cadadr,
    cadar,
    caddaddr,
    caddadr,
    caddar,
    caddddr,
    cadddr,
    caddr,
    cadr,
    called_from_Algebra_block,
    car,
    cdaddr,
    cdadr,
    cdar,
    cddaddr,
    cddar,
    cdddaddr,
    cddddr,
    cdddr,
    cddr,
    cdr,
    ceiling,
    chainOfUserSymbolsNotFunctionsBeingEvaluated,
    charTabIndex,
    chartab,
    checkFloatHasWorkedOutCompletely,
    check_esc_flag,
    check_stack,
    check_tensor_dimensions,
    choose,
    choose_check_args,
    _circexp,
    clearAlgebraEnvironment,
    clearRenamedVariablesToAvoidBindingToExternalScope,
    clear_symbols,
    clear_term,
    clearall,
    clockform,
    cmpGlyphs,
    cmp_args,
    _cmp_expr,
    cmp_terms,
    cmp_terms_count,
    codeGen,
    coeff,
    cofactor,
    collectLatexStringFromReturnValue,
    _collectUserSymbols,
    combine_factors,
    combine_gammas,
    combine_terms,
    compareState,
    compare_numbers,
    compare_rationals,
    compare_tensors,
    compatible,
    computeDependenciesFromAlgebra,
    computeResultsAndJavaScriptFromAlgebra,
    compute_fa,
    conjugate,
    cons,
    consCount,
    contract,
    convert_bignum_to_double,
    convert_rational_to_double,
    copy_tensor,
    cosine,
    cosine_of_angle,
    cosine_of_angle_sum,
    _count,
    _countOccurrencesOfSymbol,
    count_denominators,
    counter,
    countsize,
    d_scalar_scalar,
    d_scalar_scalar_1,
    d_scalar_tensor,
    d_tensor_scalar,
    d_tensor_tensor,
    dabs,
    darccos,
    darccosh,
    darcsin,
    darcsinh,
    darctan,
    darctanh,
    dbesselj0,
    dbesseljn,
    dbessely0,
    dbesselyn,
    dcos,
    dcosh,
    dd,
    _decomp,
    decomp_product,
    decomp_sum,
    defineSomeHandyConstants,
    define_user_function,
    defn,
    defn_str,
    degree,
    _denominator,
    derf,
    derfc,
    derivative,
    derivative_of_integral,
    det,
    determinant,
    detg,
    dfunction,
    dhermite,
    dirac,
    display,
    display_flag,
    displaychar,
    divide,
    divide_numbers,
    divisors,
    divisors_onstack,
    divpoly,
    dlog,
    do_clearPatterns,
    do_clearall,
    do_simplify_nested_radicals,
    dontCreateNewRadicalsInDenominatorWhenEvalingMultiplication,
    dotprod_unicode,
    doubleToReasonableString,
    dpow,
    dpower,
    dproduct,
    draw_flag,
    draw_stop_return,
    dsgn,
    dsin,
    dsinh,
    dsum,
    dtan,
    dtanh,
    dupl,
    eigen,
    elelmIndex,
    elem,
    emit_denominator,
    emit_denominators,
    emit_expr,
    emit_factor,
    emit_factorial_function,
    emit_flat_tensor,
    emit_fraction,
    emit_function,
    emit_index_function,
    emit_multiply,
    emit_number,
    emit_numerators,
    emit_numerical_fraction,
    emit_power,
    emit_string,
    emit_subexpr,
    emit_symbol,
    emit_tensor,
    _emit_tensor_inner,
    emit_term,
    emit_top_expr,
    emit_unsigned_expr,
    emit_x,
    equal,
    equaln,
    equalq,
    erfc,
    errorMessage,
    esc_flag,
    evaluatingAsFloats,
    evaluatingPolar,
    exec,
    _expand,
    expand_get_A,
    expand_get_AF,
    expand_get_B,
    expand_get_C,
    expand_get_CF,
    expand_tensor,
    expanding,
    expcos,
    exponential,
    expr_level,
    expsin,
    f1,
    f10,
    f2,
    f3,
    f4,
    f5,
    f9,
    f_equals_a,
    factor,
    factor_a,
    factor_again,
    factor_b,
    factor_number,
    factor_small_number,
    factor_term,
    factorial,
    factorpoly,
    factors,
    fill_buf,
    filter,
    filter_main,
    filter_sum,
    filter_tensor,
    findDependenciesInScript,
    _findPossibleClockForm,
    _findPossibleExponentialForm,
    findroot,
    fixup_fraction,
    fixup_power,
    flag,
    floatToRatioRoutine,
    fmt_index,
    fmt_level,
    fmt_x,
    frame,
    freeze,
    functionInvokationsScanningStack,
    gamma,
    gamma_of_sum,
    gammaf,
    gcd,
    gcd_main,
    gcd_numbers,
    gcd_polys,
    gcd_powers_with_same_base,
    gcd_product_product,
    gcd_product_sum,
    gcd_sum,
    gcd_sum_product,
    gcd_sum_sum,
    _gen,
    getSimpleRoots,
    getStateHash,
    get_binding,
    get_factor_from_complex_root,
    get_factor_from_real_root,
    _get_innerprod_factors,
    get_next_token,
    get_printname,
    get_size,
    get_token,
    getdisplaystr,
    glyph,
    gp,
    guess,
    hasImaginaryCoeff,
    hasNegativeRationalExponent,
    hash_addition,
    hash_function,
    hash_multiplication,
    hash_power,
    hashcode_values,
    hashed_itab,
    hermite,
    hilbert,
    i1,
    imag,
    imaginaryunit,
    index_function,
    init,
    initNRoots,
    inited,
    _inner,
    inner_f,
    input_str,
    integral,
    integral_of_form,
    integral_of_product,
    integral_of_sum,
    _inv,
    inverse,
    invert_number,
    invg,
    isNumberOneOverSomething,
    isNumericAtom,
    _isNumericAtomOrTensor,
    isSimpleRoot,
    isSmall,
    isSymbolLeftOfAssignment,
    isSymbolReclaimable,
    isZeroAtom,
    isZeroAtomOrTensor,
    isZeroLikeOrNonZeroLikeOrUndetermined,
    isZeroTensor,
    is_denominator,
    is_factor,
    is_small_integer,
    is_square_matrix,
    is_usr_symbol,
    isadd,
    isalnumorunderscore,
    isalpha,
    isalphaOrUnderscore,
    iscomplexnumber,
    iscomplexnumberdouble,
    iscons,
    isdenominator,
    isdigit,
    isdouble,
    iseveninteger,
    isfactor,
    isfactorial,
    _isfloating,
    isfraction,
    isidentitymatrix,
    isimaginarynumber,
    isimaginarynumberdouble,
    isimaginaryunit,
    isinnerordot,
    isinteger,
    isintegerfactor,
    isintegerorintegerfloat,
    isinv,
    iskeyword,
    isminusone,
    isminusoneoversqrttwo,
    isminusoneovertwo,
    isminussqrtthreeovertwo,
    ismultiply,
    isnegative,
    isnegativenumber,
    isnegativeterm,
    isnonnegativeinteger,
    isnpi,
    isone,
    isoneover,
    isoneoversqrttwo,
    isoneovertwo,
    isplusone,
    isplustwo,
    ispolyexpandedform,
    ispolyexpandedform_expr,
    ispolyexpandedform_factor,
    ispolyexpandedform_term,
    ispolyfactoredorexpandedform,
    ispolyfactoredorexpandedform_factor,
    ispolyfactoredorexpandedform_power,
    isposint,
    ispositivenumber,
    ispower,
    isquarterturn,
    isrational,
    isspace,
    issqrtthree,
    issqrtthreeovertwo,
    isstr,
    issymbol,
    _issymbolic,
    istensor,
    istranspose,
    isunderscore,
    isunivarpolyfactoredorexpandedform,
    itab,
    italu_hashcode,
    j1,
    laguerre,
    laguerre2,
    lastFoundSymbol,
    latexErrorSign,
    lcm,
    leading,
    legendre,
    length,
    lessp,
    level,
    list,
    listLength,
    logarithm,
    logbuf,
    lookupsTotal,
    lu_decomp,
    madd,
    makePositive,
    makeSignSameAs,
    make_hashed_itab,
    mask,
    mcmp,
    mcmpint,
    mdiv,
    mdivrem,
    meta_mode,
    mgcd,
    mini_solve,
    mint,
    mmod,
    mmul,
    mod,
    monic,
    move,
    moveTos,
    mp_clr_bit,
    mp_denominator,
    mp_numerator,
    mp_set_bit,
    mpow,
    mprime,
    mroot,
    mshiftright,
    msub,
    mtotal,
    _multinomial_sum,
    multiply,
    multiply_all,
    multiply_all_noexpand,
    multiply_consecutive_constants,
    multiply_denominators,
    multiply_denominators_factor,
    multiply_denominators_term,
    multiply_noexpand,
    multiply_numbers,
    n_factor_number,
    negate,
    negate_expand,
    negate_noexpand,
    negate_number,
    new_integer,
    new_string,
    newline_flag,
    nil_symbols,
    normaliseDots,
    normalisedCoeff,
    normalize_angle,
    nroots_a,
    nroots_b,
    nroots_c,
    nroots_df,
    nroots_dx,
    nroots_fa,
    nroots_fb,
    nroots_x,
    nroots_y,
    nterms,
    nthCadr,
    _numerator,
    numericRootOfPolynomial,
    o,
    one,
    oneElement,
    one_as_double,
    out_buf,
    out_count,
    out_of_memory,
    outer,
    p0,
    p1,
    p2,
    p3,
    p4,
    p5,
    p6,
    p7,
    p8,
    p9,
    parse,
    parse_internal,
    parse_p1,
    parse_p2,
    parse_time_simplifications,
    partition,
    patternHasBeenFound,
    patternsinfo,
    performing_roots,
    polar,
    _polarRectAMinusOneBase,
    _polyform,
    pop,
    pop_double,
    pop_frame,
    pop_integer,
    power,
    power_str,
    power_sum,
    power_tensor,
    predefinedSymbolsInGlobalScope_doNotTrackInDependencies,
    prime,
    primetab,
    print2dascii,
    printMode,
    print_ABS_latex,
    print_ARCCOS_codegen,
    print_ARCSIN_codegen,
    print_ARCTAN_codegen,
    print_BINOMIAL_latex,
    print_COS_codegen,
    print_DEFINT_latex,
    print_DOT_codegen,
    print_DOT_latex,
    print_DO_codegen,
    print_FOR_codegen,
    print_INV_codegen,
    print_INV_latex,
    print_PRODUCT_codegen,
    print_PRODUCT_latex,
    print_SETQ_codegen,
    print_SIN_codegen,
    print_SQRT_latex,
    print_SUM_codegen,
    print_SUM_latex,
    print_TAN_codegen,
    print_TESTEQ_latex,
    print_TESTGE_latex,
    print_TESTGT_latex,
    print_TESTLE_latex,
    print_TESTLT_latex,
    print_TEST_codegen,
    print_TEST_latex,
    print_TRANSPOSE_codegen,
    print_TRANSPOSE_latex,
    print_UNIT_codegen,
    print_a_over_b,
    print_base,
    print_base_of_denom,
    print_char,
    print_denom,
    print_double,
    print_expo_of_denom,
    print_exponent,
    print_expr,
    _print_factor,
    print_factorial_function,
    print_glyphs,
    print_index_function,
    _print_list,
    print_multiply_sign,
    print_number,
    _print_power,
    print_str,
    print_subexpr,
    print_tensor,
    _print_tensor_inner3,
    _print_tensor_inner_latex,
    print_tensor_latex,
    print_term,
    printchar,
    printchar_nowrap,
    printline,
    program_buf,
    promote_tensor,
    push,
    pushTryNotToDuplicate,
    push_cars,
    push_double,
    push_factor,
    push_frame,
    push_identity_matrix,
    push_integer,
    push_rational,
    push_symbol,
    push_term_factors,
    push_terms,
    push_zero_matrix,
    qadd,
    qdiv,
    qmul,
    qpow,
    qpowf,
    quickfactor,
    quickpower,
    rational,
    rationalize,
    rationalize_coefficients,
    real,
    reciprocate,
    _rect,
    recursionLevelNestedRadicalsRemoval,
    _recursiveDependencies,
    ref,
    ref1,
    rememberPrint,
    remove_negative_exponents,
    reset_after_error,
    restore,
    restoreMetaBindings,
    _rewrite_args,
    rewrite_args_tensor,
    roots,
    roots2,
    roots3,
    run,
    runUserDefinedSimplifications,
    save,
    saveMetaBindings,
    scalar_times_tensor,
    scan,
    scan_error,
    scan_expression,
    scan_factor,
    scan_function_call_with_function_name,
    scan_function_call_without_function_name,
    scan_index,
    scan_meta,
    scan_power,
    scan_relation,
    scan_stmt,
    scan_str,
    scan_string,
    scan_subexpr,
    scan_symbol,
    scan_tensor,
    scan_term,
    scanned,
    scanningParameters,
    setM,
    setSignTo,
    set_binding,
    set_component,
    setq_indexed,
    sfac_product,
    sfac_product_f,
    sgn,
    shape,
    show_power_debug,
    sign,
    sign_of_term,
    simfac,
    simfac_term,
    simpleComplexityMeasure,
    simplify,
    simplifyForCodeGeneration,
    simplify_1_in_products,
    simplify_main,
    simplify_nested_radicals,
    simplify_polar,
    simplify_polarRect,
    simplify_rational_expressions,
    simplify_rectToClock,
    simplify_tensor,
    simplify_trig,
    _simplifyfactorials,
    sine,
    sine_of_angle,
    sine_of_angle_sum,
    skipRootVariableToBeSolved,
    sort_stack,
    square,
    ssqrt,
    stack,
    stackAddsCount,
    std_symbol,
    step,
    step2,
    stop,
    strcmp,
    stringsEmittedByUserPrintouts,
    subf,
    _subst,
    subtract,
    subtract_numbers,
    swap,
    symbol,
    symbolsDependencies,
    symbolsHavingReassignments,
    symbolsInExpressionsWithoutAssignments,
    symbolsLeftOfAssignment,
    symbolsRightOfAssignment,
    symbolsinfo,
    symnum,
    symtab,
    _take_care_of_nested_radicals,
    tangent,
    taylor,
    tensor,
    tensor_plus_tensor,
    tensor_times_scalar,
    testApprox,
    test_flag,
    text_metric,
    theRandom,
    token,
    token_buf,
    token_str,
    top,
    top_level_eval,
    tos,
    _transform,
    _transpose,
    transpose_unicode,
    trigmode,
    trivial_divide,
    try_kth_prime,
    turnErrorMessageToLatex,
    ucmp,
    unfreeze,
    unique,
    _unique_f,
    update_token_buf,
    userSimplificationsInListForm,
    userSimplificationsInStringForm,
    usr_symbol,
    verbosing,
    version,
    will_be_displayed_as_fraction,
    ybinomial,
    ycosh,
    ydirac,
    yerf,
    yerfc,
    yfloor,
    yindex,
    yround,
    ysinh,
    yyarg,
    yybesselj,
    yybessely,
    yyceiling,
    yycondense,
    yycontract,
    yycosh,
    _yydegree,
    yydetg,
    yydivpoly,
    yyerf,
    yyerfc,
    yyexpand,
    yyfactorpoly,
    _yyfloat,
    yyfloor,
    yyhermite,
    yyhermite2,
    yyinvg,
    yylcm,
    yylog,
    yymultiply,
    yyouter,
    yypower,
    yyrationalize,
    yyround,
    yysgn,
    yysimfac,
    yysinh,
    yytangent,
    zero,
    zzfloat,
    hasProp = {}.hasOwnProperty;
  bigInt = __webpack_require__(523);

  // also change the version in the package.json file
  version = "1.4.0";
  SELFTEST = 1;

  // size of the symbol table
  NSYM = 1000;
  DEBUG = false;
  PRINTOUTRESULT = false;

  // printing-related constants
  PRINTMODE_LATEX = "PRINTMODE_LATEX";
  PRINTMODE_2DASCII = "PRINTMODE_2DASCII";
  PRINTMODE_COMPUTER = "PRINTMODE_COMPUTER";
  PRINTMODE_HUMAN = "PRINTMODE_HUMAN";
  PRINTMODE_LIST = "PRINTMODE_LIST";

  // when the user uses the generic "print" statement
  // this setting kicks-in.
  printMode = PRINTMODE_COMPUTER;
  dontCreateNewRadicalsInDenominatorWhenEvalingMultiplication = true;
  recursionLevelNestedRadicalsRemoval = 0;
  do_simplify_nested_radicals = true;
  avoidCalculatingPowersIntoArctans = true;
  rational = function () {
    // Symbolic expressions are built by connecting U structs.
    // For example, (a b + c) is built like this:
    //           _______      _______                                _______
    //          |CONS   |--->|CONS   |----------------------------->|CONS   |
    //          |       |    |       |                              |       |
    //          |_______|    |_______|                              |_______|
    //              |            |                                      |
    //           ___v___      ___v___      _______      _______      ___v___
    //          |ADD    |    |CONS   |--->|CONS   |--->|CONS   |    |SYM c  |
    //          |       |    |       |    |       |    |       |    |       |
    //          |_______|    |_______|    |_______|    |_______|    |_______|
    //                           |            |            |
    //                        ___v___      ___v___      ___v___
    //                       |MUL    |    |SYM a  |    |SYM b  |
    //                       |       |    |       |    |       |
    //                       |_______|    |_______|    |_______|
    var rational = /*#__PURE__*/_createClass(function rational() {
      "use strict";

      _classCallCheck(this, rational);
    });
    ;
    rational.prototype.a = null; // a bigInteger

    rational.prototype.b = null; // a bigInteger

    return rational;
  }.call(this);
  U = function () {
    var U = /*#__PURE__*/function () {
      "use strict";

      function U() {
        _classCallCheck(this, U);
        this.cons = {};
        this.cons.car = null;
        this.cons.cdr = null;
        this.q = new rational();
      }
      _createClass(U, [{
        key: "toString",
        value: function toString() {
          return print_expr(this);
        }
      }, {
        key: "toLatexString",
        value: function toLatexString() {
          return collectLatexStringFromReturnValue(this);
        }
      }]);
      return U;
    }();
    ;
    U.prototype.cons = null; // will have a car and cdr

    U.prototype.printname = "";
    U.prototype.str = "";
    U.prototype.tensor = null;

    // rational number a over b
    U.prototype.q = null; // will point to a rational

    U.prototype.d = 0.0; // a double

    U.prototype.k = 0;
    U.prototype.tag = 0;
    return U;
  }.call(this);
  errorMessage = "";

  // the following enum is for struct U, member k
  CONS = 0;
  NUM = 1;
  DOUBLE = 2;
  STR = 3;
  TENSOR = 4;
  SYM = 5;

  // the following enum is for indexing the symbol table

  // standard functions first, then nil, then everything else
  counter = 0;
  ABS = counter++;
  ADD = counter++;
  ADJ = counter++;
  AND = counter++;
  APPROXRATIO = counter++;
  ARCCOS = counter++;
  ARCCOSH = counter++;
  ARCSIN = counter++;
  ARCSINH = counter++;
  ARCTAN = counter++;
  ARCTANH = counter++;
  ARG = counter++;
  ATOMIZE = counter++;
  BESSELJ = counter++;
  BESSELY = counter++;
  BINDING = counter++;
  BINOMIAL = counter++;
  CEILING = counter++;
  CHECK = counter++;
  CHOOSE = counter++;
  CIRCEXP = counter++;
  CLEAR = counter++;
  CLEARALL = counter++;
  CLEARPATTERNS = counter++;
  CLOCK = counter++;
  COEFF = counter++;
  COFACTOR = counter++;
  CONDENSE = counter++;
  CONJ = counter++;
  CONTRACT = counter++;
  COS = counter++;
  COSH = counter++;
  DECOMP = counter++;
  DEFINT = counter++;
  DEGREE = counter++;
  DENOMINATOR = counter++;
  DERIVATIVE = counter++;
  DET = counter++;
  DIM = counter++;
  DIRAC = counter++;
  DIVISORS = counter++;
  DO = counter++;
  DOT = counter++;
  DRAW = counter++;
  DSOLVE = counter++;
  EIGEN = counter++;
  EIGENVAL = counter++;
  EIGENVEC = counter++;
  ERF = counter++;
  ERFC = counter++;
  EVAL = counter++;
  EXP = counter++;
  EXPAND = counter++;
  EXPCOS = counter++;
  EXPSIN = counter++;
  FACTOR = counter++;
  FACTORIAL = counter++;
  FACTORPOLY = counter++;
  FILTER = counter++;
  FLOATF = counter++;
  FLOOR = counter++;
  FOR = counter++;
  FUNCTION = counter++;
  GAMMA = counter++;
  GCD = counter++;
  HERMITE = counter++;
  HILBERT = counter++;
  IMAG = counter++;
  INDEX = counter++;
  INNER = counter++;
  INTEGRAL = counter++;
  INV = counter++;
  INVG = counter++;
  ISINTEGER = counter++;
  ISPRIME = counter++;
  LAGUERRE = counter++;

  //  LAPLACE = counter++
  LCM = counter++;
  LEADING = counter++;
  LEGENDRE = counter++;
  LOG = counter++;
  LOOKUP = counter++;
  MOD = counter++;
  MULTIPLY = counter++;
  NOT = counter++;
  NROOTS = counter++;
  NUMBER = counter++;
  NUMERATOR = counter++;
  OPERATOR = counter++;
  OR = counter++;
  OUTER = counter++;
  PATTERN = counter++;
  PATTERNSINFO = counter++;
  POLAR = counter++;
  POWER = counter++;
  PRIME = counter++;
  PRINT_LEAVE_E_ALONE = counter++;
  PRINT_LEAVE_X_ALONE = counter++;
  PRINT = counter++;
  PRINT2DASCII = counter++;
  PRINTFULL = counter++;
  PRINTLATEX = counter++;
  PRINTLIST = counter++;
  PRINTPLAIN = counter++;
  PRODUCT = counter++;
  QUOTE = counter++;
  QUOTIENT = counter++;
  RANK = counter++;
  RATIONALIZE = counter++;
  REAL = counter++;
  ROUND = counter++;
  YYRECT = counter++;
  ROOTS = counter++;
  SETQ = counter++;
  SGN = counter++;
  SILENTPATTERN = counter++;
  SIMPLIFY = counter++;
  SIN = counter++;
  SINH = counter++;
  SHAPE = counter++;
  SQRT = counter++;
  STOP = counter++;
  SUBST = counter++;
  SUM = counter++;
  SYMBOLSINFO = counter++;
  TAN = counter++;
  TANH = counter++;
  TAYLOR = counter++;
  TEST = counter++;
  TESTEQ = counter++;
  TESTGE = counter++;
  TESTGT = counter++;
  TESTLE = counter++;
  TESTLT = counter++;
  TRANSPOSE = counter++;
  UNIT = counter++;
  ZERO = counter++;

  // ALL THE SYMBOLS ABOVE NIL ARE KEYWORDS,
  // WHICH MEANS THAT USER CANNOT REDEFINE THEM
  NIL = counter++; // nil goes here, after standard functions

  LAST = counter++;
  LAST_PRINT = counter++;
  LAST_2DASCII_PRINT = counter++;
  LAST_FULL_PRINT = counter++;
  LAST_LATEX_PRINT = counter++;
  LAST_LIST_PRINT = counter++;
  LAST_PLAIN_PRINT = counter++;
  AUTOEXPAND = counter++;
  BAKE = counter++;
  ASSUME_REAL_VARIABLES = counter++;
  TRACE = counter++;
  FORCE_FIXED_PRINTOUT = counter++;
  MAX_FIXED_PRINTOUT_DIGITS = counter++;
  YYE = counter++;
  DRAWX = counter++; // special purpose internal symbols

  METAA = counter++;
  METAB = counter++;
  METAX = counter++;
  SECRETX = counter++;
  VERSION = counter++;
  PI = counter++;
  SYMBOL_A = counter++;
  SYMBOL_B = counter++;
  SYMBOL_C = counter++;
  SYMBOL_D = counter++;
  SYMBOL_I = counter++;
  SYMBOL_J = counter++;
  SYMBOL_N = counter++;
  SYMBOL_R = counter++;
  SYMBOL_S = counter++;
  SYMBOL_T = counter++;
  SYMBOL_X = counter++;
  SYMBOL_Y = counter++;
  SYMBOL_Z = counter++;
  SYMBOL_IDENTITY_MATRIX = counter++;
  SYMBOL_A_UNDERSCORE = counter++;
  SYMBOL_B_UNDERSCORE = counter++;
  SYMBOL_X_UNDERSCORE = counter++;
  C1 = counter++;
  C2 = counter++;
  C3 = counter++;
  C4 = counter++;
  C5 = counter++;
  C6 = counter++;
  USR_SYMBOLS = counter++; // this must be last

  E = YYE;

  // TOS cannot be arbitrarily large because the OS seg faults on deep recursion.
  // For example, a circular evaluation like x=x+1 can cause a seg fault.
  // At this setting (100,000) the evaluation stack overruns before seg fault.
  TOS = 100000;
  BUF = 10000;
  MAX_PROGRAM_SIZE = 100001;
  MAXPRIMETAB = 10000;
  MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES = 5;
  MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE = 10;

  //define _USE_MATH_DEFINES // for MS C++
  MAXDIM = 24;

  // needed for the mechanism to
  // find all dependencies between variables
  // in a script
  symbolsDependencies = {};
  symbolsHavingReassignments = [];
  symbolsInExpressionsWithoutAssignments = [];
  patternHasBeenFound = false;
  predefinedSymbolsInGlobalScope_doNotTrackInDependencies = ["rationalize", "abs", "e", "i", "pi", "sin", "ceiling", "cos", "roots", "integral", "derivative", "defint", "sqrt", "eig", "cov", "deig", "dcov", "float", "floor", "product", "root", "round", "sum", "test", "unit"];

  // you can do some little simplifications
  // at parse time, such as calculating away
  // immediately simple operations on
  // constants, removing 1s from products
  // etc.
  parse_time_simplifications = true;
  chainOfUserSymbolsNotFunctionsBeingEvaluated = [];
  stringsEmittedByUserPrintouts = "";

  // flag use to potentially switch on/off some quirks "deep"
  // in the code due to call from Algebra block.
  // Currently not used.
  called_from_Algebra_block = false;
  tensor = function () {
    var tensor = /*#__PURE__*/_createClass(function tensor() {
      "use strict";

      _classCallCheck(this, tensor);
      this.dim = function () {
        var o, ref, results;
        results = [];
        for (o = 0, ref = MAXDIM; 0 <= ref ? o <= ref : o >= ref; 0 <= ref ? o++ : o--) {
          results.push(0);
        }
        return results;
      }();
      this.elem = [];
    });
    ;
    tensor.prototype.ndim = 0; // number of dimensions

    tensor.prototype.dim = null; // dimension length, for each dimension

    tensor.prototype.nelem = 0; // total number of elements

    tensor.prototype.elem = null; // an array containing all the data

    return tensor;
  }.call(this);
  display = function () {
    var display = /*#__PURE__*/_createClass(function display() {
      "use strict";

      _classCallCheck(this, display);
    });
    ;
    display.prototype.h = 0;
    display.prototype.w = 0;
    display.prototype.n = 0;
    display.prototype.a = []; // will contain an array of c,x,y (color,x,y)

    return display;
  }.call(this);
  text_metric = function () {
    var text_metric = /*#__PURE__*/_createClass(function text_metric() {
      "use strict";

      _classCallCheck(this, text_metric);
    });
    ;
    text_metric.prototype.ascent = 0;
    text_metric.prototype.descent = 0;
    text_metric.prototype.width = 0;
    return text_metric;
  }.call(this);
  tos = 0; // top of stack

  expanding = 0;
  evaluatingAsFloats = 0;
  evaluatingPolar = 0;
  fmt_x = 0;
  fmt_index = 0;
  fmt_level = 0;
  verbosing = 0;
  primetab = function () {
    var ceil, i, j, primes;
    primes = [2];
    i = 3;
    while (primes.length < MAXPRIMETAB) {
      j = 0;
      ceil = Math.sqrt(i);
      while (j < primes.length && primes[j] <= ceil) {
        if (i % primes[j] === 0) {
          j = -1;
          break;
        }
        j++;
      }
      if (j !== -1) {
        primes.push(i);
      }
      i += 2;
    }
    primes[MAXPRIMETAB] = 0;
    return primes;
  }();
  esc_flag = 0;
  draw_flag = 0;
  mtotal = 0;
  trigmode = 0;
  logbuf = "";
  program_buf = "";

  // will contain the variable names
  symtab = [];

  // will contain the contents of the variable
  // in the corresponding position in symtab array
  binding = [];
  isSymbolReclaimable = [];
  arglist = []; // will contain U

  stack = []; // will contain *U

  frame = 0;
  p0 = null; // will contain U

  p1 = null; // will contain U

  p2 = null; // will contain U

  p3 = null; // will contain U

  p4 = null; // will contain U

  p5 = null; // will contain U

  p6 = null; // will contain U

  p7 = null; // will contain U

  p8 = null; // will contain U

  p9 = null; // will contain U

  zero = null; // will contain U

  one = null; // will contain U

  one_as_double = null;
  imaginaryunit = null; // will contain U

  out_buf = "";
  out_count = 0;
  test_flag = 0;
  codeGen = false;
  draw_stop_return = null; // extern jmp_buf ?????

  userSimplificationsInListForm = [];
  userSimplificationsInStringForm = [];
  transpose_unicode = 7488;
  dotprod_unicode = 183;
  symbol = function symbol(x) {
    return symtab[x];
  };
  iscons = function iscons(p) {
    return p.k === CONS;
  };
  isrational = function isrational(p) {
    return p.k === NUM;
  };
  isdouble = function isdouble(p) {
    return p.k === DOUBLE;
  };
  isNumericAtom = function isNumericAtom(p) {
    return isrational(p) || isdouble(p);
  };
  isstr = function isstr(p) {
    return p.k === STR;
  };
  istensor = function istensor(p) {
    if (p == null) {
      debugger;
    } else {
      return p.k === TENSOR;
    }
  };

  // because of recursion, we consider a scalar to be
  // a tensor, so a numeric scalar will return true
  _isNumericAtomOrTensor = function isNumericAtomOrTensor(p) {
    var a, i, n, o, ref;
    if (isNumericAtom(p) || p === symbol(SYMBOL_IDENTITY_MATRIX)) {
      return 1;
    }
    if (!istensor(p) && !isNumericAtom(p)) {
      //console.log "p not an atom nor a tensor: " + p
      return 0;
    }
    n = p.tensor.nelem;
    a = p.tensor.elem;
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      if (!_isNumericAtomOrTensor(a[i])) {
        //console.log "non-numeric element: " + a[i]
        return 0;
      }
    }
    return 1;
  };
  issymbol = function issymbol(p) {
    return p.k === SYM;
  };
  iskeyword = function iskeyword(p) {
    return issymbol(p) && symnum(p) < NIL;
  };
  car = function car(p) {
    if (iscons(p)) {
      return p.cons.car;
    } else {
      return symbol(NIL);
    }
  };
  cdr = function cdr(p) {
    if (iscons(p)) {
      return p.cons.cdr;
    } else {
      return symbol(NIL);
    }
  };
  caar = function caar(p) {
    return car(car(p));
  };
  cadr = function cadr(p) {
    return car(cdr(p));
  };
  cdar = function cdar(p) {
    return cdr(car(p));
  };
  cddr = function cddr(p) {
    return cdr(cdr(p));
  };
  caadr = function caadr(p) {
    return car(car(cdr(p)));
  };
  caddr = function caddr(p) {
    return car(cdr(cdr(p)));
  };
  cadar = function cadar(p) {
    return car(cdr(car(p)));
  };
  cdadr = function cdadr(p) {
    return cdr(car(cdr(p)));
  };
  cddar = function cddar(p) {
    return cdr(cdr(car(p)));
  };
  cdddr = function cdddr(p) {
    return cdr(cdr(cdr(p)));
  };
  caaddr = function caaddr(p) {
    return car(car(cdr(cdr(p))));
  };
  cadadr = function cadadr(p) {
    return car(cdr(car(cdr(p))));
  };
  caddar = function caddar(p) {
    return car(cdr(cdr(car(p))));
  };
  cdaddr = function cdaddr(p) {
    return cdr(car(cdr(cdr(p))));
  };
  cadddr = function cadddr(p) {
    return car(cdr(cdr(cdr(p))));
  };
  cddddr = function cddddr(p) {
    return cdr(cdr(cdr(cdr(p))));
  };
  caddddr = function caddddr(p) {
    return car(cdr(cdr(cdr(cdr(p)))));
  };
  cadaddr = function cadaddr(p) {
    return car(cdr(car(cdr(cdr(p)))));
  };
  cddaddr = function cddaddr(p) {
    return cdr(cdr(car(cdr(cdr(p)))));
  };
  caddadr = function caddadr(p) {
    return car(cdr(cdr(car(cdr(p)))));
  };
  cdddaddr = function cdddaddr(p) {
    return cdr(cdr(cdr(car(cdr(cdr(p))))));
  };
  caddaddr = function caddaddr(p) {
    return car(cdr(cdr(car(cdr(cdr(p))))));
  };

  // not used yet
  listLength = function listLength(p) {
    var startCount;
    startCount = -1;
    while (iscons(p)) {
      p = cdr(p);
      startCount++;
    }
    return startCount;
  };

  // not used yet
  nthCadr = function nthCadr(p, n) {
    var startCount;
    startCount = 0;
    while (startCount <= n) {
      p = cdr(p);
      startCount++;
    }
    return car(p);
  };
  isadd = function isadd(p) {
    return car(p) === symbol(ADD);
  };
  ismultiply = function ismultiply(p) {
    return car(p) === symbol(MULTIPLY);
  };
  ispower = function ispower(p) {
    return car(p) === symbol(POWER);
  };
  isfactorial = function isfactorial(p) {
    return car(p) === symbol(FACTORIAL);
  };
  isinnerordot = function isinnerordot(p) {
    return car(p) === symbol(INNER) || car(p) === symbol(DOT);
  };
  istranspose = function istranspose(p) {
    return car(p) === symbol(TRANSPOSE);
  };
  isinv = function isinv(p) {
    return car(p) === symbol(INV);
  };

  // TODO this is a bit of a shallow check, we should
  // check when we are passed an actual tensor and possibly
  // cache the test result.
  isidentitymatrix = function isidentitymatrix(p) {
    return p === symbol(SYMBOL_IDENTITY_MATRIX);
  };
  MSIGN = function MSIGN(p) {
    if (p.isPositive()) {
      return 1;
    } else if (p.isZero()) {
      return 0;
    } else {
      return -1;
    }
  };
  MLENGTH = function MLENGTH(p) {
    return p.toString().length;
  };
  MZERO = function MZERO(p) {
    return p.isZero();
  };
  MEQUAL = function MEQUAL(p, n) {
    if (p == null) {
      debugger;
    }
    return p.equals(n);
  };
  reset_after_error = function reset_after_error() {
    moveTos(0);
    esc_flag = 0;
    draw_flag = 0;
    frame = TOS;
    evaluatingAsFloats = 0;
    return evaluatingPolar = 0;
  };
  $ =  true && exports !== null ? exports : this;
  $.version = version;
  $.isadd = isadd;
  $.ismultiply = ismultiply;
  $.ispower = ispower;
  $.isfactorial = isfactorial;
  $.car = car;
  $.cdr = cdr;
  $.caar = caar;
  $.cadr = cadr;
  $.cdar = cdar;
  $.cddr = cddr;
  $.caadr = caadr;
  $.caddr = caddr;
  $.cadar = cadar;
  $.cdadr = cdadr;
  $.cddar = cddar;
  $.cdddr = cdddr;
  $.caaddr = caaddr;
  $.cadadr = cadadr;
  $.caddar = caddar;
  $.cdaddr = cdaddr;
  $.cadddr = cadddr;
  $.cddddr = cddddr;
  $.caddddr = caddddr;
  $.cadaddr = cadaddr;
  $.cddaddr = cddaddr;
  $.caddadr = caddadr;
  $.cdddaddr = cdddaddr;
  $.caddaddr = caddaddr;
  $.symbol = symbol;
  $.iscons = iscons;
  $.isrational = isrational;
  $.isdouble = isdouble;
  $.isNumericAtom = isNumericAtom;
  $.isstr = isstr;
  $.istensor = istensor;
  $.issymbol = issymbol;
  $.iskeyword = iskeyword;
  $.CONS = CONS;
  $.NUM = NUM;
  $.DOUBLE = DOUBLE;
  $.STR = STR;
  $.TENSOR = TENSOR;
  $.SYM = SYM;

  //(docs are generated from top-level comments, keep an eye on the formatting!)
  /* abs =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  x
   General description
  -------------------
  Returns the absolute value of a real number, the magnitude of a complex number, or the vector length.
   */
  /*
   Absolute value of a number,or magnitude of complex z, or norm of a vector
     z    abs(z)
    -    ------
     a    a
     -a    a
     (-1)^a    1
     exp(a + i b)  exp(a)
     a b    abs(a) abs(b)
     a + i b    sqrt(a^2 + b^2)
   Notes
     1. Handles mixed polar and rectangular forms, e.g. 1 + exp(i pi/3)
     2. jean-francois.debroux reports that when z=(a+i*b)/(c+i*d) then
       abs(numerator(z)) / abs(denominator(z))
        must be used to get the correct answer. Now the operation is
       automatic.
  */
  DEBUG_ABS = false;
  Eval_abs = function Eval_abs() {
    push(cadr(p1));
    Eval();
    return abs();
  };
  absValFloat = function absValFloat() {
    Eval();
    _absval();
    Eval();
    return zzfloat();
  };

  // zzfloat of an abs doesn't necessarily result in a double
  // , for example if there are variables. But
  // in many of the tests there should be indeed
  // a float, these two lines come handy to highlight
  // when that doesn't happen for those tests.
  //if !isdouble(stack[tos-1])
  //  stop("absValFloat should return a double and instead got: " + stack[tos-1])
  abs = function abs() {
    var theArgument;
    theArgument = top();
    if (DEBUG_ABS) {
      console.trace(">>>>  ABS of " + theArgument);
    }
    _numerator();
    if (DEBUG_ABS) {
      console.log("ABS numerator " + stack[tos - 1]);
    }
    _absval();
    if (DEBUG_ABS) {
      console.log("ABSVAL numerator: " + stack[tos - 1]);
    }
    push(theArgument);
    _denominator();
    if (DEBUG_ABS) {
      console.log("ABS denominator: " + stack[tos - 1]);
    }
    _absval();
    if (DEBUG_ABS) {
      console.log("ABSVAL denominator: " + stack[tos - 1]);
    }
    divide();
    if (DEBUG_ABS) {
      console.log("ABSVAL divided: " + stack[tos - 1]);
    }
    if (DEBUG_ABS) {
      return console.log("<<<<<<<  ABS");
    }
  };
  _absval = function absval() {
    var anyFactorsYet, input;
    save();
    p1 = pop();
    input = p1;
    if (DEBUG_ABS) {
      console.log("ABS of " + p1);
    }
    // handle all the "number" cases first -----------------------------------------
    if (isZeroAtomOrTensor(p1)) {
      if (DEBUG_ABS) {
        console.log(" abs: " + p1 + " just zero");
      }
      push(zero);
      if (DEBUG_ABS) {
        console.log(" --> ABS of " + input + " : " + stack[tos - 1]);
      }
      restore();
      return;
    }
    if (isnegativenumber(p1)) {
      if (DEBUG_ABS) {
        console.log(" abs: " + p1 + " just a negative");
      }
      push(p1);
      negate();
      restore();
      return;
    }
    if (ispositivenumber(p1)) {
      if (DEBUG_ABS) {
        console.log(" abs: " + p1 + " just a positive");
      }
      push(p1);
      if (DEBUG_ABS) {
        console.log(" --> ABS of " + input + " : " + stack[tos - 1]);
      }
      restore();
      return;
    }
    if (p1 === symbol(PI)) {
      if (DEBUG_ABS) {
        console.log(" abs: " + p1 + " of PI");
      }
      push(p1);
      if (DEBUG_ABS) {
        console.log(" --> ABS of " + input + " : " + stack[tos - 1]);
      }
      restore();
      return;
    }
    // ??? should there be a shortcut case here for the imaginary unit?

    // now handle decomposition cases ----------------------------------------------

    // we catch the "add", "power", "multiply" cases first,
    // before falling back to the
    // negative/positive cases because there are some
    // simplification thay we might be able to do.
    // Note that for this routine to give a correct result, this
    // must be a sum where a complex number appears.
    // If we apply this to "a+b", we get an incorrect result.
    if (car(p1) === symbol(ADD) && (_findPossibleClockForm(p1) || _findPossibleExponentialForm(p1) || _Find(p1, imaginaryunit))) {
      if (DEBUG_ABS) {
        console.log(" abs: " + p1 + " is a sum");
      }
      if (DEBUG_ABS) {
        console.log("abs of a sum");
      }
      // sum
      push(p1);
      _rect(); // convert polar terms, if any
      p1 = pop();
      push(p1);
      real();
      push_integer(2);
      power();
      push(p1);
      imag();
      push_integer(2);
      power();
      add();
      push_rational(1, 2);
      power();
      simplify_trig();
      if (DEBUG_ABS) {
        console.log(" --> ABS of " + input + " : " + stack[tos - 1]);
      }
      restore();
      return;
    }
    if (car(p1) === symbol(POWER) && equaln(cadr(p1), -1)) {
      if (DEBUG_ABS) {
        console.log(" abs: " + p1 + " is -1 to any power");
      }
      // -1 to any power
      if (evaluatingAsFloats) {
        if (DEBUG_ABS) {
          console.log(" abs: numeric, so result is 1.0");
        }
        push_double(1.0);
      } else {
        if (DEBUG_ABS) {
          console.log(" abs: symbolic, so result is 1");
        }
        push_integer(1);
      }
      if (DEBUG_ABS) {
        console.log(" --> ABS of " + input + " : " + stack[tos - 1]);
      }
      restore();
      return;
    }
    // abs(a^b) is equal to abs(a)^b IF b is positive
    if (car(p1) === symbol(POWER) && ispositivenumber(caddr(p1))) {
      if (DEBUG_ABS) {
        console.log(" abs: " + p1 + " is something to the power of a positive number");
      }
      push(cadr(p1));
      abs();
      push(caddr(p1));
      power();
      if (DEBUG_ABS) {
        console.log(" --> ABS of " + input + " : " + stack[tos - 1]);
      }
      restore();
      return;
    }
    // abs(e^something)
    if (car(p1) === symbol(POWER) && cadr(p1) === symbol(E)) {
      if (DEBUG_ABS) {
        console.log(" abs: " + p1 + " is an exponential");
      }
      // exponential
      push(caddr(p1));
      real();
      exponential();
      if (DEBUG_ABS) {
        console.log(" --> ABS of " + input + " : " + stack[tos - 1]);
      }
      restore();
      return;
    }
    if (car(p1) === symbol(MULTIPLY)) {
      if (DEBUG_ABS) {
        console.log(" abs: " + p1 + " is a product");
      }
      // product
      anyFactorsYet = false;
      p1 = cdr(p1);
      while (iscons(p1)) {
        push(car(p1));
        _absval();
        if (anyFactorsYet) {
          multiply();
        }
        anyFactorsYet = true;
        p1 = cdr(p1);
      }
      if (DEBUG_ABS) {
        console.log(" --> ABS of " + input + " : " + stack[tos - 1]);
      }
      restore();
      return;
    }
    if (car(p1) === symbol(ABS)) {
      if (DEBUG_ABS) {
        console.log(" abs: " + p1 + " is abs of a abs");
      }
      // abs of a abs
      push_symbol(ABS);
      push(cadr(p1));
      list(2);
      if (DEBUG_ABS) {
        console.log(" --> ABS of " + input + " : " + stack[tos - 1]);
      }
      restore();
      return;
    }
    /*
     * Evaluation via zzfloat()
     * ...while this is in theory a powerful mechanism, I've commented it
     * out because I've refined this method enough to not need this.
     * Evaling via zzfloat() is in principle more problematic because it could
     * require further evaluations which could end up in further "abs" which
     * would end up in infinite loops. Better not use it if not necessary.
      * we look directly at the float evaluation of the argument
     * to see if we end up with a number, which would mean that there
     * is no imaginary component and we can just return the input
     * (or its negation) as the result.
    push p1
    zzfloat()
    floatEvaluation = pop()
     if (isnegativenumber(floatEvaluation))
      if DEBUG_ABS then console.log " abs: " + p1 + " just a negative"
      push(p1)
      negate()
      restore()
      return
     if (ispositivenumber(floatEvaluation))
      if DEBUG_ABS then console.log " abs: " + p1 + " just a positive"
      push(p1)
      if DEBUG_ABS then console.log " --> ABS of " + input + " : " + stack[tos-1]
      restore()
      return
     */
    if (istensor(p1)) {
      absval_tensor();
      restore();
      return;
    }
    if (isnegativeterm(p1) || car(p1) === symbol(ADD) && isnegativeterm(cadr(p1))) {
      push(p1);
      negate();
      p1 = pop();
    }
    if (DEBUG_ABS) {
      console.log(" abs: " + p1 + " is nothing decomposable");
    }
    push_symbol(ABS);
    push(p1);
    list(2);
    if (DEBUG_ABS) {
      console.log(" --> ABS of " + input + " : " + stack[tos - 1]);
    }
    return restore();
  };

  // also called the "norm" of a vector
  absval_tensor = function absval_tensor() {
    if (p1.tensor.ndim !== 1) {
      stop("abs(tensor) with tensor rank > 1");
    }
    push(p1);
    push(p1);
    conjugate();
    _inner();
    push_rational(1, 2);
    power();
    simplify();
    return Eval();
  };
  flag = 0;
  Eval_add = function Eval_add() {
    var h;
    h = tos;
    p1 = cdr(p1);
    while (iscons(p1)) {
      push(car(p1));
      Eval();
      p2 = pop();
      push_terms(p2);
      p1 = cdr(p1);
    }
    return add_terms(tos - h);
  };

  // Add n terms, returns one expression on the stack.
  stackAddsCount = 0;
  add_terms = function add_terms(n) {
    var h, i, i1, j1, o, ref, ref1, results, s, subsetOfStack;
    stackAddsCount++;
    i = 0;
    h = tos - n;
    s = h;
    // ensure no infinite loop, use "for"
    if (DEBUG) {
      console.log("stack before adding terms #" + stackAddsCount);
    }
    //if stackAddsCount == 137
    //  debugger
    if (DEBUG) {
      for (i = o = 0, ref = tos; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
        console.log(_print_list(stack[i]));
      }
    }
    for (i = i1 = 0; i1 < 10; i = ++i1) {
      if (n < 2) {
        break;
      }
      flag = 0;
      //qsort(s, n, sizeof (U *), cmp_terms)
      subsetOfStack = stack.slice(h, h + n);
      subsetOfStack.sort(cmp_terms);
      stack = stack.slice(0, h).concat(subsetOfStack).concat(stack.slice(h + n));
      if (flag === 0) {
        break;
      }
      n = combine_terms(h, n);
    }
    moveTos(h + n);
    switch (n) {
      case 0:
        if (evaluatingAsFloats) {
          push_double(0.0);
        } else {
          push(zero);
        }
        break;
      case 1:
        break;
      default:
        list(n);
        p1 = pop();
        push_symbol(ADD);
        push(p1);
        cons();
    }
    if (DEBUG) {
      console.log("stack after adding terms #" + stackAddsCount);
    }
    //if stackAddsCount == 5
    //  debugger
    if (DEBUG) {
      results = [];
      for (i = j1 = 0, ref1 = tos; 0 <= ref1 ? j1 < ref1 : j1 > ref1; i = 0 <= ref1 ? ++j1 : --j1) {
        results.push(console.log(_print_list(stack[i])));
      }
      return results;
    }
  };

  // Compare terms for order, clobbers p1 and p2.
  cmp_terms_count = 0;
  cmp_terms = function cmp_terms(p1, p2) {
    var i, o, ref, t;
    cmp_terms_count++;
    //if cmp_terms_count == 52
    //  debugger
    i = 0;
    // numbers can be combined
    if (isNumericAtom(p1) && isNumericAtom(p2)) {
      flag = 1;
      //if DEBUG then console.log "cmp_terms #" + cmp_terms_count + " returns 0"
      return 0;
    }
    // congruent tensors can be combined
    if (istensor(p1) && istensor(p2)) {
      if (p1.tensor.ndim < p2.tensor.ndim) {
        //if DEBUG then console.log "cmp_terms #" + cmp_terms_count + " returns -1"
        return -1;
      }
      if (p1.tensor.ndim > p2.tensor.ndim) {
        //if DEBUG then console.log "cmp_terms #" + cmp_terms_count + " returns 1"
        return 1;
      }
      for (i = o = 0, ref = p1.tensor.ndim; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
        if (p1.tensor.dim[i] < p2.tensor.dim[i]) {
          //if DEBUG then console.log "cmp_terms #" + cmp_terms_count + " returns -1"
          return -1;
        }
        if (p1.tensor.dim[i] > p2.tensor.dim[i]) {
          //if DEBUG then console.log "cmp_terms #" + cmp_terms_count + " returns 1"
          return 1;
        }
      }
      flag = 1;
      //if DEBUG then console.log "cmp_terms #" + cmp_terms_count + " returns 0"
      return 0;
    }
    if (car(p1) === symbol(MULTIPLY)) {
      p1 = cdr(p1);
      if (isNumericAtom(car(p1))) {
        p1 = cdr(p1);
        if (cdr(p1) === symbol(NIL)) {
          p1 = car(p1);
        }
      }
    }
    if (car(p2) === symbol(MULTIPLY)) {
      p2 = cdr(p2);
      if (isNumericAtom(car(p2))) {
        p2 = cdr(p2);
        if (cdr(p2) === symbol(NIL)) {
          p2 = car(p2);
        }
      }
    }
    t = _cmp_expr(p1, p2);
    if (t === 0) {
      flag = 1;
    }
    //if DEBUG then console.log "cmp_terms #" + cmp_terms_count + " returns " + t
    return t;
  };
  combine_terms = function combine_terms(s, n) {
    var i, i1, j, j1, l1, m1, o, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, t;
    //debugger

    // I had to turn the coffeescript for loop into
    // a more mundane while loop because the i
    // variable was changed from within the body,
    // which is something that is not supposed to
    // happen in the coffeescript 'vector' form.
    // Also this means I had to add a 'i++' jus before
    // the end of the body and before the "continue"s
    i = 0;
    while (i < n - 1) {
      check_esc_flag();
      p3 = stack[s + i];
      p4 = stack[s + i + 1];
      if (istensor(p3) && istensor(p4)) {
        push(p3);
        push(p4);
        tensor_plus_tensor();
        p1 = pop();
        if (p1 !== symbol(NIL)) {
          stack[s + i] = p1;
          for (j = o = ref = i + 1, ref1 = n - 1; ref <= ref1 ? o < ref1 : o > ref1; j = ref <= ref1 ? ++o : --o) {
            stack[s + j] = stack[s + j + 1];
          }
          n--;
          i--;
        }
        i++;
        continue;
      }
      if (istensor(p3) || istensor(p4)) {
        i++;
        continue;
      }
      if (isNumericAtom(p3) && isNumericAtom(p4)) {
        push(p3);
        push(p4);
        add_numbers();
        p1 = pop();
        if (isZeroAtomOrTensor(p1)) {
          for (j = i1 = ref2 = i, ref3 = n - 2; ref2 <= ref3 ? i1 < ref3 : i1 > ref3; j = ref2 <= ref3 ? ++i1 : --i1) {
            stack[s + j] = stack[s + j + 2];
          }
          n -= 2;
        } else {
          stack[s + i] = p1;
          for (j = j1 = ref4 = i + 1, ref5 = n - 1; ref4 <= ref5 ? j1 < ref5 : j1 > ref5; j = ref4 <= ref5 ? ++j1 : --j1) {
            stack[s + j] = stack[s + j + 1];
          }
          n--;
        }
        i--;
        i++;
        continue;
      }
      if (isNumericAtom(p3) || isNumericAtom(p4)) {
        i++;
        continue;
      }
      if (evaluatingAsFloats) {
        p1 = one_as_double;
        p2 = one_as_double;
      } else {
        p1 = one;
        p2 = one;
      }
      t = 0;
      if (car(p3) === symbol(MULTIPLY)) {
        p3 = cdr(p3);
        t = 1;
        if (isNumericAtom(car(p3))) {
          p1 = car(p3);
          p3 = cdr(p3);
          if (cdr(p3) === symbol(NIL)) {
            p3 = car(p3);
            t = 0;
          }
        }
      }
      if (car(p4) === symbol(MULTIPLY)) {
        p4 = cdr(p4);
        if (isNumericAtom(car(p4))) {
          p2 = car(p4);
          p4 = cdr(p4);
          if (cdr(p4) === symbol(NIL)) {
            p4 = car(p4);
          }
        }
      }
      if (!equal(p3, p4)) {
        i++;
        continue;
      }
      push(p1);
      push(p2);
      add_numbers();
      p1 = pop();
      if (isZeroAtomOrTensor(p1)) {
        for (j = l1 = ref6 = i, ref7 = n - 2; ref6 <= ref7 ? l1 < ref7 : l1 > ref7; j = ref6 <= ref7 ? ++l1 : --l1) {
          stack[s + j] = stack[s + j + 2];
        }
        n -= 2;
        i--;
        i++;
        continue;
      }
      push(p1);
      if (t) {
        push(symbol(MULTIPLY));
        push(p3);
        cons();
      } else {
        push(p3);
      }
      multiply();
      stack[s + i] = pop();
      for (j = m1 = ref8 = i + 1, ref9 = n - 1; ref8 <= ref9 ? m1 < ref9 : m1 > ref9; j = ref8 <= ref9 ? ++m1 : --m1) {
        stack[s + j] = stack[s + j + 1];
      }
      n--;
      i--;
      // this i++ is to match the while
      i++;
    }
    return n;
  };
  push_terms = function push_terms(p) {
    var results;
    if (car(p) === symbol(ADD)) {
      p = cdr(p);
      results = [];
      while (iscons(p)) {
        push(car(p));
        results.push(p = cdr(p));
      }
      return results;
    } else if (!isZeroAtom(p)) {
      return push(p);
    }
  };

  // add two expressions
  add = function add() {
    var h;
    save();
    p2 = pop();
    p1 = pop();
    h = tos;
    push_terms(p1);
    push_terms(p2);
    add_terms(tos - h);
    return restore();
  };
  add_all = function add_all(k) {
    var h, i, o, ref, s;
    i = 0;
    save();
    s = tos - k;
    h = tos;
    for (i = o = 0, ref = k; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      push_terms(stack[s + i]);
    }
    add_terms(tos - h);
    p1 = pop();
    moveTos(tos - k);
    push(p1);
    return restore();
  };
  subtract = function subtract() {
    negate();
    return add();
  };
  Eval_adj = function Eval_adj() {
    push(cadr(p1));
    Eval();
    return adj();
  };
  adj = function adj() {
    var doNothing, i, i1, j, n, o, ref, ref1;
    i = 0;
    j = 0;
    n = 0;
    save();
    p1 = pop();
    if (istensor(p1) && p1.tensor.ndim === 2 && p1.tensor.dim[0] === p1.tensor.dim[1]) {
      doNothing = 1;
    } else {
      stop("adj: square matrix expected");
    }
    n = p1.tensor.dim[0];
    p2 = alloc_tensor(n * n);
    p2.tensor.ndim = 2;
    p2.tensor.dim[0] = n;
    p2.tensor.dim[1] = n;
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      for (j = i1 = 0, ref1 = n; 0 <= ref1 ? i1 < ref1 : i1 > ref1; j = 0 <= ref1 ? ++i1 : --i1) {
        cofactor(p1, n, i, j);
        p2.tensor.elem[n * j + i] = pop(); // transpose
      }
    }

    push(p2);
    return restore();
  };
  Eval_approxratio = function Eval_approxratio() {
    var theArgument;
    theArgument = cadr(p1);
    push(theArgument);
    return _approxratioRecursive();
  };
  _approxratioRecursive = function approxratioRecursive() {
    var i, i1, o, ref, ref1;
    i = 0;
    save();
    p1 = pop();
    if (istensor(p1)) {
      p4 = alloc_tensor(p1.tensor.nelem);
      p4.tensor.ndim = p1.tensor.ndim;
      for (i = o = 0, ref = p1.tensor.ndim; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
        p4.tensor.dim[i] = p1.tensor.dim[i];
      }
      for (i = i1 = 0, ref1 = p1.tensor.nelem; 0 <= ref1 ? i1 < ref1 : i1 > ref1; i = 0 <= ref1 ? ++i1 : --i1) {
        push(p1.tensor.elem[i]);
        _approxratioRecursive();
        p4.tensor.elem[i] = pop();
        check_tensor_dimensions(p4);
      }
      push(p4);
    } else if (p1.k === DOUBLE) {
      push(p1);
      approxOneRatioOnly();
    } else if (iscons(p1)) {
      push(car(p1));
      _approxratioRecursive();
      push(cdr(p1));
      _approxratioRecursive();
      cons();
    } else {
      push(p1);
    }
    return restore();
  };
  approxOneRatioOnly = function approxOneRatioOnly() {
    var numberOfDigitsAfterTheDot, precision, splitBeforeAndAfterDot, supposedlyTheFloat, theFloat, theRatio;
    zzfloat();
    supposedlyTheFloat = pop();
    if (supposedlyTheFloat.k === DOUBLE) {
      theFloat = supposedlyTheFloat.d;
      splitBeforeAndAfterDot = theFloat.toString().split(".");
      if (splitBeforeAndAfterDot.length === 2) {
        numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;
        precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);
        theRatio = floatToRatioRoutine(theFloat, precision);
        push_rational(theRatio[0], theRatio[1]);
      } else {
        push_integer(theFloat);
      }
      return;
    }
    // we didn't manage, just leave unexpressed
    push_symbol(APPROXRATIO);
    push(theArgument);
    return list(2);
  };

  // original routine by John Kennedy, see
  // https://web.archive.org/web/20111027100847/http://homepage.smc.edu/kennedy_john/DEC2FRAC.PDF
  // courtesy of Michael Borcherds
  // who ported this to JavaScript under MIT licence
  // also see
  // https://github.com/geogebra/geogebra/blob/master/common/src/main/java/org/geogebra/common/kernel/algos/AlgoFractionText.java
  // potential other ways to do this:
  //   https://rosettacode.org/wiki/Convert_decimal_number_to_rational
  //   http://www.homeschoolmath.net/teaching/rational_numbers.php
  //   http://stackoverflow.com/questions/95727/how-to-convert-floats-to-human-readable-fractions
  floatToRatioRoutine = function floatToRatioRoutine(decimal, AccuracyFactor) {
    var DecimalSign, FractionDenominator, FractionNumerator, PreviousDenominator, ScratchValue, Z, ret;
    FractionNumerator = void 0;
    FractionDenominator = void 0;
    DecimalSign = void 0;
    Z = void 0;
    PreviousDenominator = void 0;
    ScratchValue = void 0;
    ret = [0, 0];
    if (isNaN(decimal)) {
      return ret;
    }
    // return 0/0 
    if (decimal === 2e308) {
      ret[0] = 1;
      ret[1] = 0;
      // 1/0
      return ret;
    }
    if (decimal === -2e308) {
      ret[0] = -1;
      ret[1] = 0;
      // -1/0
      return ret;
    }
    if (decimal < 0.0) {
      DecimalSign = -1.0;
    } else {
      DecimalSign = 1.0;
    }
    decimal = Math.abs(decimal);
    if (Math.abs(decimal - Math.floor(decimal)) < AccuracyFactor) {
      // handles exact integers including 0 
      FractionNumerator = decimal * DecimalSign;
      FractionDenominator = 1.0;
      ret[0] = FractionNumerator;
      ret[1] = FractionDenominator;
      return ret;
    }
    if (decimal < 1.0e-19) {
      // X = 0 already taken care of 
      FractionNumerator = DecimalSign;
      FractionDenominator = 9999999999999999999.0;
      ret[0] = FractionNumerator;
      ret[1] = FractionDenominator;
      return ret;
    }
    if (decimal > 1.0e19) {
      FractionNumerator = 9999999999999999999.0 * DecimalSign;
      FractionDenominator = 1.0;
      ret[0] = FractionNumerator;
      ret[1] = FractionDenominator;
      return ret;
    }
    Z = decimal;
    PreviousDenominator = 0.0;
    FractionDenominator = 1.0;
    while (true) {
      Z = 1.0 / (Z - Math.floor(Z));
      ScratchValue = FractionDenominator;
      FractionDenominator = FractionDenominator * Math.floor(Z) + PreviousDenominator;
      PreviousDenominator = ScratchValue;
      FractionNumerator = Math.floor(decimal * FractionDenominator + 0.5);
      // Rounding Function
      if (!(Math.abs(decimal - FractionNumerator / FractionDenominator) > AccuracyFactor && Z !== Math.floor(Z))) {
        break;
      }
    }
    FractionNumerator = DecimalSign * FractionNumerator;
    ret[0] = FractionNumerator;
    ret[1] = FractionDenominator;
    return ret;
  };
  approx_just_an_integer = 0;
  approx_sine_of_rational = 1;
  approx_sine_of_pi_times_rational = 2;
  approx_rationalOfPi = 3;
  approx_radicalOfRatio = 4;
  approx_nothingUseful = 5;
  approx_ratioOfRadical = 6;
  approx_rationalOfE = 7;
  approx_logarithmsOfRationals = 8;
  approx_rationalsOfLogarithms = 9;
  approxRationalsOfRadicals = function approxRationalsOfRadicals(theFloat) {
    var bestResultSoFar, complexity, error, hypothesis, i, i1, j, len, likelyMultiplier, minimumComplexity, numberOfDigitsAfterTheDot, o, precision, ratio, ref, result, splitBeforeAndAfterDot;
    splitBeforeAndAfterDot = theFloat.toString().split(".");
    if (splitBeforeAndAfterDot.length === 2) {
      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;
      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);
    } else {
      return ["" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];
    }
    console.log("precision: " + precision);
    // simple radicals.
    bestResultSoFar = null;
    minimumComplexity = Number.MAX_VALUE;
    ref = [2, 3, 5, 6, 7, 8, 10];
    for (o = 0, len = ref.length; o < len; o++) {
      i = ref[o];
      for (j = i1 = 1; i1 <= 10; j = ++i1) {
        //console.log  "i,j: " + i + "," + j
        hypothesis = Math.sqrt(i) / j;
        //console.log  "hypothesis: " + hypothesis
        if (Math.abs(hypothesis) > 1e-10) {
          ratio = theFloat / hypothesis;
          likelyMultiplier = Math.round(ratio);
          //console.log  "ratio: " + ratio
          error = Math.abs(1 - ratio / likelyMultiplier);
        } else {
          ratio = 1;
          likelyMultiplier = 1;
          error = Math.abs(theFloat - hypothesis);
        }
        //console.log  "error: " + error
        if (error < 2 * precision) {
          complexity = simpleComplexityMeasure(likelyMultiplier, i, j);
          if (complexity < minimumComplexity) {
            //console.log "MINIMUM MULTIPLIER SO FAR"
            minimumComplexity = complexity;
            result = likelyMultiplier + " * sqrt( " + i + " ) / " + j;
            //console.log result + " error: " + error
            bestResultSoFar = [result, approx_ratioOfRadical, likelyMultiplier, i, j];
          }
        }
      }
    }
    return bestResultSoFar;
  };
  approxRadicalsOfRationals = function approxRadicalsOfRationals(theFloat) {
    var bestResultSoFar, complexity, error, hypothesis, i, i1, j, len, len1, likelyMultiplier, minimumComplexity, numberOfDigitsAfterTheDot, o, precision, ratio, ref, ref1, result, splitBeforeAndAfterDot;
    splitBeforeAndAfterDot = theFloat.toString().split(".");
    if (splitBeforeAndAfterDot.length === 2) {
      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;
      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);
    } else {
      return ["" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];
    }
    console.log("precision: " + precision);
    // simple radicals.
    bestResultSoFar = null;
    minimumComplexity = Number.MAX_VALUE;
    ref = [1, 2, 3, 5, 6, 7, 8, 10];
    // this one catches things like Math.sqrt(3/4), but
    // things like Math.sqrt(1/2) are caught by the paragraph
    // above (and in a better form)
    for (o = 0, len = ref.length; o < len; o++) {
      i = ref[o];
      ref1 = [1, 2, 3, 5, 6, 7, 8, 10];
      for (i1 = 0, len1 = ref1.length; i1 < len1; i1++) {
        j = ref1[i1];
        //console.log  "i,j: " + i + "," + j
        hypothesis = Math.sqrt(i / j);
        //console.log  "hypothesis: " + hypothesis
        if (Math.abs(hypothesis) > 1e-10) {
          ratio = theFloat / hypothesis;
          likelyMultiplier = Math.round(ratio);
          //console.log  "ratio: " + ratio
          error = Math.abs(1 - ratio / likelyMultiplier);
        } else {
          ratio = 1;
          likelyMultiplier = 1;
          error = Math.abs(theFloat - hypothesis);
        }
        //console.log  "error: " + error
        if (error < 2 * precision) {
          complexity = simpleComplexityMeasure(likelyMultiplier, i, j);
          if (complexity < minimumComplexity) {
            //console.log "MINIMUM MULTIPLIER SO FAR"
            minimumComplexity = complexity;
            result = likelyMultiplier + " * (sqrt( " + i + " / " + j + " )";
            //console.log result + " error: " + error
            bestResultSoFar = [result, approx_radicalOfRatio, likelyMultiplier, i, j];
          }
        }
      }
    }
    return bestResultSoFar;
  };
  approxRadicals = function approxRadicals(theFloat) {
    var approxRadicalsOfRationalsResult, approxRationalsOfRadicalsResult, numberOfDigitsAfterTheDot, precision, splitBeforeAndAfterDot;
    splitBeforeAndAfterDot = theFloat.toString().split(".");
    if (splitBeforeAndAfterDot.length === 2) {
      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;
      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);
    } else {
      return ["" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];
    }
    console.log("precision: " + precision);
    // simple radicals.

    // we always prefer a rational of a radical of an integer
    // to a radical of a rational. Radicals of rationals generate
    // radicals at the denominator which we'd rather avoid
    approxRationalsOfRadicalsResult = approxRationalsOfRadicals(theFloat);
    if (approxRationalsOfRadicalsResult != null) {
      return approxRationalsOfRadicalsResult;
    }
    approxRadicalsOfRationalsResult = approxRadicalsOfRationals(theFloat);
    if (approxRadicalsOfRationalsResult != null) {
      return approxRadicalsOfRationalsResult;
    }
    return null;
  };
  approxLogs = function approxLogs(theFloat) {
    var approxLogsOfRationalsResult, approxRationalsOfLogsResult, numberOfDigitsAfterTheDot, precision, splitBeforeAndAfterDot;
    splitBeforeAndAfterDot = theFloat.toString().split(".");
    if (splitBeforeAndAfterDot.length === 2) {
      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;
      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);
    } else {
      return ["" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];
    }
    console.log("precision: " + precision);
    // we always prefer a rational of a log to a log of
    // a rational
    approxRationalsOfLogsResult = approxRationalsOfLogs(theFloat);
    if (approxRationalsOfLogsResult != null) {
      return approxRationalsOfLogsResult;
    }
    approxLogsOfRationalsResult = approxLogsOfRationals(theFloat);
    if (approxLogsOfRationalsResult != null) {
      return approxLogsOfRationalsResult;
    }
    return null;
  };
  approxRationalsOfLogs = function approxRationalsOfLogs(theFloat) {
    var bestResultSoFar, complexity, error, hypothesis, i, i1, j, likelyMultiplier, minimumComplexity, numberOfDigitsAfterTheDot, o, precision, ratio, result, splitBeforeAndAfterDot;
    splitBeforeAndAfterDot = theFloat.toString().split(".");
    if (splitBeforeAndAfterDot.length === 2) {
      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;
      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);
    } else {
      return ["" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];
    }
    console.log("precision: " + precision);
    bestResultSoFar = null;
    minimumComplexity = Number.MAX_VALUE;
    // simple rationals of logs
    for (i = o = 2; o <= 5; i = ++o) {
      for (j = i1 = 1; i1 <= 5; j = ++i1) {
        //console.log  "i,j: " + i + "," + j
        hypothesis = Math.log(i) / j;
        //console.log  "hypothesis: " + hypothesis
        if (Math.abs(hypothesis) > 1e-10) {
          ratio = theFloat / hypothesis;
          likelyMultiplier = Math.round(ratio);
          //console.log  "ratio: " + ratio
          error = Math.abs(1 - ratio / likelyMultiplier);
        } else {
          ratio = 1;
          likelyMultiplier = 1;
          error = Math.abs(theFloat - hypothesis);
        }
        //console.log  "error: " + error

        // it does happen that due to roundings 
        // a "higher multiple" is picked, which is obviously
        // unintended.
        // E.g. 1 * log(1 / 3 ) doesn't match log( 3 ) BUT
        // it matches -5 * log( 3 ) / 5
        // so we avoid any case where the multiplier is a multiple
        // of the divisor.
        if (likelyMultiplier !== 1 && Math.abs(Math.floor(likelyMultiplier / j)) === Math.abs(likelyMultiplier / j)) {
          continue;
        }
        if (error < 2.2 * precision) {
          complexity = simpleComplexityMeasure(likelyMultiplier, i, j);
          if (complexity < minimumComplexity) {
            //console.log "MINIMUM MULTIPLIER SO FAR"
            minimumComplexity = complexity;
            result = likelyMultiplier + " * log( " + i + " ) / " + j;
            //console.log result + " error: " + error
            bestResultSoFar = [result, approx_rationalsOfLogarithms, likelyMultiplier, i, j];
          }
        }
      }
    }
    return bestResultSoFar;
  };
  approxLogsOfRationals = function approxLogsOfRationals(theFloat) {
    var bestResultSoFar, complexity, error, hypothesis, i, i1, j, likelyMultiplier, minimumComplexity, numberOfDigitsAfterTheDot, o, precision, ratio, result, splitBeforeAndAfterDot;
    splitBeforeAndAfterDot = theFloat.toString().split(".");
    if (splitBeforeAndAfterDot.length === 2) {
      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;
      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);
    } else {
      return ["" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];
    }
    console.log("precision: " + precision);
    bestResultSoFar = null;
    minimumComplexity = Number.MAX_VALUE;
    // simple logs of rationals
    for (i = o = 1; o <= 5; i = ++o) {
      for (j = i1 = 1; i1 <= 5; j = ++i1) {
        //console.log  "i,j: " + i + "," + j
        hypothesis = Math.log(i / j);
        //console.log  "hypothesis: " + hypothesis
        if (Math.abs(hypothesis) > 1e-10) {
          ratio = theFloat / hypothesis;
          likelyMultiplier = Math.round(ratio);
          //console.log  "ratio: " + ratio
          error = Math.abs(1 - ratio / likelyMultiplier);
        } else {
          ratio = 1;
          likelyMultiplier = 1;
          error = Math.abs(theFloat - hypothesis);
        }
        //console.log  "error: " + error
        if (error < 1.96 * precision) {
          complexity = simpleComplexityMeasure(likelyMultiplier, i, j);
          if (complexity < minimumComplexity) {
            //console.log "MINIMUM MULTIPLIER SO FAR"
            minimumComplexity = complexity;
            result = likelyMultiplier + " * log( " + i + " / " + j + " )";
            //console.log result + " error: " + error
            bestResultSoFar = [result, approx_logarithmsOfRationals, likelyMultiplier, i, j];
          }
        }
      }
    }
    return bestResultSoFar;
  };
  approxRationalsOfPowersOfE = function approxRationalsOfPowersOfE(theFloat) {
    var bestResultSoFar, complexity, error, hypothesis, i, i1, j, likelyMultiplier, minimumComplexity, numberOfDigitsAfterTheDot, o, precision, ratio, result, splitBeforeAndAfterDot;
    splitBeforeAndAfterDot = theFloat.toString().split(".");
    if (splitBeforeAndAfterDot.length === 2) {
      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;
      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);
    } else {
      return ["" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];
    }
    console.log("precision: " + precision);
    bestResultSoFar = null;
    minimumComplexity = Number.MAX_VALUE;
    // simple rationals of a few powers of e
    for (i = o = 1; o <= 2; i = ++o) {
      for (j = i1 = 1; i1 <= 12; j = ++i1) {
        //console.log  "i,j: " + i + "," + j
        hypothesis = Math.pow(Math.E, i) / j;
        //console.log  "hypothesis: " + hypothesis
        if (Math.abs(hypothesis) > 1e-10) {
          ratio = theFloat / hypothesis;
          likelyMultiplier = Math.round(ratio);
          //console.log  "ratio: " + ratio
          error = Math.abs(1 - ratio / likelyMultiplier);
        } else {
          ratio = 1;
          likelyMultiplier = 1;
          error = Math.abs(theFloat - hypothesis);
        }
        //console.log  "error: " + error
        if (error < 2 * precision) {
          complexity = simpleComplexityMeasure(likelyMultiplier, i, j);
          if (complexity < minimumComplexity) {
            //console.log "MINIMUM MULTIPLIER SO FAR"
            minimumComplexity = complexity;
            result = likelyMultiplier + " * (e ^ " + i + " ) / " + j;
            //console.log result + " error: " + error
            bestResultSoFar = [result, approx_rationalOfE, likelyMultiplier, i, j];
          }
        }
      }
    }
    return bestResultSoFar;
  };
  approxRationalsOfPowersOfPI = function approxRationalsOfPowersOfPI(theFloat) {
    var bestResultSoFar, complexity, error, hypothesis, i, i1, j, likelyMultiplier, minimumComplexity, numberOfDigitsAfterTheDot, o, precision, ratio, result, splitBeforeAndAfterDot;
    splitBeforeAndAfterDot = theFloat.toString().split(".");
    if (splitBeforeAndAfterDot.length === 2) {
      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;
      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);
    } else {
      return ["" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];
    }
    console.log("precision: " + precision);
    bestResultSoFar = null;
    // here we do somethng a little special: since
    // the powers of pi can get quite big, there might
    // be multiple hypothesis where more of the
    // magnitude is shifted to the multiplier, and some
    // where more of the magnitude is shifted towards the
    // exponent of pi. So we prefer the hypotheses with the
    // lower multiplier since it's likely to insert more
    // information.
    minimumComplexity = Number.MAX_VALUE;
    // simple rationals of a few powers of PI
    for (i = o = 1; o <= 5; i = ++o) {
      for (j = i1 = 1; i1 <= 12; j = ++i1) {
        //console.log  "i,j: " + i + "," + j
        hypothesis = Math.pow(Math.PI, i) / j;
        //console.log  "hypothesis: " + hypothesis
        if (Math.abs(hypothesis) > 1e-10) {
          ratio = theFloat / hypothesis;
          likelyMultiplier = Math.round(ratio);
          //console.log  "ratio: " + ratio
          error = Math.abs(1 - ratio / likelyMultiplier);
        } else {
          ratio = 1;
          likelyMultiplier = 1;
          error = Math.abs(theFloat - hypothesis);
        }
        //console.log  "error: " + error
        if (error < 2 * precision) {
          complexity = simpleComplexityMeasure(likelyMultiplier, i, j);
          if (complexity < minimumComplexity) {
            //console.log "MINIMUM MULTIPLIER SO FAR"
            minimumComplexity = complexity;
            result = likelyMultiplier + " * (pi ^ " + i + " ) / " + j + " )";
            //console.log result + " error: " + error
            bestResultSoFar = [result, approx_rationalOfPi, likelyMultiplier, i, j];
          }
        }
      }
    }
    //console.log "approxRationalsOfPowersOfPI returning: " + bestResultSoFar
    return bestResultSoFar;
  };
  approxTrigonometric = function approxTrigonometric(theFloat) {
    var approxSineOfRationalMultiplesOfPIResult, approxSineOfRationalsResult, numberOfDigitsAfterTheDot, precision, splitBeforeAndAfterDot;
    splitBeforeAndAfterDot = theFloat.toString().split(".");
    if (splitBeforeAndAfterDot.length === 2) {
      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;
      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);
    } else {
      return ["" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];
    }
    console.log("precision: " + precision);
    // we always prefer a sin of a rational without the PI
    approxSineOfRationalsResult = approxSineOfRationals(theFloat);
    if (approxSineOfRationalsResult != null) {
      return approxSineOfRationalsResult;
    }
    approxSineOfRationalMultiplesOfPIResult = approxSineOfRationalMultiplesOfPI(theFloat);
    if (approxSineOfRationalMultiplesOfPIResult != null) {
      return approxSineOfRationalMultiplesOfPIResult;
    }
    return null;
  };
  approxSineOfRationals = function approxSineOfRationals(theFloat) {
    var bestResultSoFar, complexity, error, fraction, hypothesis, i, i1, j, likelyMultiplier, minimumComplexity, numberOfDigitsAfterTheDot, o, precision, ratio, result, splitBeforeAndAfterDot;
    splitBeforeAndAfterDot = theFloat.toString().split(".");
    if (splitBeforeAndAfterDot.length === 2) {
      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;
      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);
    } else {
      return ["" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];
    }
    console.log("precision: " + precision);
    bestResultSoFar = null;
    minimumComplexity = Number.MAX_VALUE;
    // we only check very simple rationals because they begin to get tricky
    // quickly, also they collide often with the "rational of pi" hypothesis.
    // For example sin(11) is veeery close to 1 (-0.99999020655)
    // (see: http://mathworld.wolfram.com/AlmostInteger.html )
    // we stop at rationals that mention up to 10
    for (i = o = 1; o <= 4; i = ++o) {
      for (j = i1 = 1; i1 <= 4; j = ++i1) {
        //console.log  "i,j: " + i + "," + j
        fraction = i / j;
        hypothesis = Math.sin(fraction);
        //console.log  "hypothesis: " + hypothesis
        if (Math.abs(hypothesis) > 1e-10) {
          ratio = theFloat / hypothesis;
          likelyMultiplier = Math.round(ratio);
          //console.log  "ratio: " + ratio
          error = Math.abs(1 - ratio / likelyMultiplier);
        } else {
          ratio = 1;
          likelyMultiplier = 1;
          error = Math.abs(theFloat - hypothesis);
        }
        //console.log  "error: " + error
        if (error < 2 * precision) {
          complexity = simpleComplexityMeasure(likelyMultiplier, i, j);
          if (complexity < minimumComplexity) {
            //console.log "MINIMUM MULTIPLIER SO FAR"
            minimumComplexity = complexity;
            result = likelyMultiplier + " * sin( " + i + "/" + j + " )";
            //console.log result + " error: " + error
            bestResultSoFar = [result, approx_sine_of_rational, likelyMultiplier, i, j];
          }
        }
      }
    }
    return bestResultSoFar;
  };
  approxSineOfRationalMultiplesOfPI = function approxSineOfRationalMultiplesOfPI(theFloat) {
    var bestResultSoFar, complexity, error, fraction, hypothesis, i, i1, j, likelyMultiplier, minimumComplexity, numberOfDigitsAfterTheDot, o, precision, ratio, result, splitBeforeAndAfterDot;
    splitBeforeAndAfterDot = theFloat.toString().split(".");
    if (splitBeforeAndAfterDot.length === 2) {
      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;
      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);
    } else {
      return ["" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];
    }
    console.log("precision: " + precision);
    bestResultSoFar = null;
    minimumComplexity = Number.MAX_VALUE;
    // check rational multiples of pi
    for (i = o = 1; o <= 13; i = ++o) {
      for (j = i1 = 1; i1 <= 13; j = ++i1) {
        //console.log  "i,j: " + i + "," + j
        fraction = i / j;
        hypothesis = Math.sin(Math.PI * fraction);
        //console.log  "hypothesis: " + hypothesis
        if (Math.abs(hypothesis) > 1e-10) {
          ratio = theFloat / hypothesis;
          likelyMultiplier = Math.round(ratio);
          //console.log  "ratio: " + ratio
          error = Math.abs(1 - ratio / likelyMultiplier);
        } else {
          ratio = 1;
          likelyMultiplier = 1;
          error = Math.abs(theFloat - hypothesis);
        }
        //console.log  "error: " + error
        // magic number 23 comes from the case sin(pi/10)
        if (error < 23 * precision) {
          complexity = simpleComplexityMeasure(likelyMultiplier, i, j);
          if (complexity < minimumComplexity) {
            //console.log "MINIMUM MULTIPLIER SO FAR"
            minimumComplexity = complexity;
            result = likelyMultiplier + " * sin( " + i + "/" + j + " * pi )";
            //console.log result + " error: " + error
            bestResultSoFar = [result, approx_sine_of_pi_times_rational, likelyMultiplier, i, j];
          }
        }
      }
    }
    return bestResultSoFar;
  };
  approxAll = function approxAll(theFloat) {
    var LOG_EXPLANATIONS, approxLogsResult, approxRadicalsResult, approxRationalsOfPowersOfEResult, approxRationalsOfPowersOfPIResult, approxTrigonometricResult, bestApproxSoFar, constantsSum, constantsSumMin, numberOfDigitsAfterTheDot, precision, splitBeforeAndAfterDot;
    splitBeforeAndAfterDot = theFloat.toString().split(".");
    if (splitBeforeAndAfterDot.length === 2) {
      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;
      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);
    } else {
      return ["" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];
    }
    console.log("precision: " + precision);
    constantsSumMin = Number.MAX_VALUE;
    constantsSum = 0;
    bestApproxSoFar = null;
    LOG_EXPLANATIONS = true;
    approxRadicalsResult = approxRadicals(theFloat);
    if (approxRadicalsResult != null) {
      constantsSum = simpleComplexityMeasure(approxRadicalsResult);
      if (constantsSum < constantsSumMin) {
        if (LOG_EXPLANATIONS) {
          console.log("better explanation by approxRadicals: " + approxRadicalsResult + " complexity: " + constantsSum);
        }
        constantsSumMin = constantsSum;
        bestApproxSoFar = approxRadicalsResult;
      } else {
        if (LOG_EXPLANATIONS) {
          console.log("subpar explanation by approxRadicals: " + approxRadicalsResult + " complexity: " + constantsSum);
        }
      }
    }
    approxLogsResult = approxLogs(theFloat);
    if (approxLogsResult != null) {
      constantsSum = simpleComplexityMeasure(approxLogsResult);
      if (constantsSum < constantsSumMin) {
        if (LOG_EXPLANATIONS) {
          console.log("better explanation by approxLogs: " + approxLogsResult + " complexity: " + constantsSum);
        }
        constantsSumMin = constantsSum;
        bestApproxSoFar = approxLogsResult;
      } else {
        if (LOG_EXPLANATIONS) {
          console.log("subpar explanation by approxLogs: " + approxLogsResult + " complexity: " + constantsSum);
        }
      }
    }
    approxRationalsOfPowersOfEResult = approxRationalsOfPowersOfE(theFloat);
    if (approxRationalsOfPowersOfEResult != null) {
      constantsSum = simpleComplexityMeasure(approxRationalsOfPowersOfEResult);
      if (constantsSum < constantsSumMin) {
        if (LOG_EXPLANATIONS) {
          console.log("better explanation by approxRationalsOfPowersOfE: " + approxRationalsOfPowersOfEResult + " complexity: " + constantsSum);
        }
        constantsSumMin = constantsSum;
        bestApproxSoFar = approxRationalsOfPowersOfEResult;
      } else {
        if (LOG_EXPLANATIONS) {
          console.log("subpar explanation by approxRationalsOfPowersOfE: " + approxRationalsOfPowersOfEResult + " complexity: " + constantsSum);
        }
      }
    }
    approxRationalsOfPowersOfPIResult = approxRationalsOfPowersOfPI(theFloat);
    if (approxRationalsOfPowersOfPIResult != null) {
      constantsSum = simpleComplexityMeasure(approxRationalsOfPowersOfPIResult);
      if (constantsSum < constantsSumMin) {
        if (LOG_EXPLANATIONS) {
          console.log("better explanation by approxRationalsOfPowersOfPI: " + approxRationalsOfPowersOfPIResult + " complexity: " + constantsSum);
        }
        constantsSumMin = constantsSum;
        bestApproxSoFar = approxRationalsOfPowersOfPIResult;
      } else {
        if (LOG_EXPLANATIONS) {
          console.log("subpar explanation by approxRationalsOfPowersOfPI: " + approxRationalsOfPowersOfPIResult + " complexity: " + constantsSum);
        }
      }
    }
    approxTrigonometricResult = approxTrigonometric(theFloat);
    if (approxTrigonometricResult != null) {
      constantsSum = simpleComplexityMeasure(approxTrigonometricResult);
      if (constantsSum < constantsSumMin) {
        if (LOG_EXPLANATIONS) {
          console.log("better explanation by approxTrigonometric: " + approxTrigonometricResult + " complexity: " + constantsSum);
        }
        constantsSumMin = constantsSum;
        bestApproxSoFar = approxTrigonometricResult;
      } else {
        if (LOG_EXPLANATIONS) {
          console.log("subpar explanation by approxTrigonometric: " + approxTrigonometricResult + " complexity: " + constantsSum);
        }
      }
    }
    return bestApproxSoFar;
  };
  simpleComplexityMeasure = function simpleComplexityMeasure(aResult, b, c) {
    var theSum;
    theSum = null;
    if (aResult instanceof Array) {
      // we want PI and E to somewhat increase the
      // complexity of the expression, so basically they count
      // more than any integer lower than 3, i.e. we consider
      // 1,2,3 to be more fundamental than PI or E.
      switch (aResult[1]) {
        case approx_sine_of_pi_times_rational:
          theSum = 4;
          break;
        // exponents of PI and E need to be penalised as well
        // otherwise they come to explain any big number
        // so we count them just as much as the multiplier
        case approx_rationalOfPi:
          theSum = Math.pow(4, Math.abs(aResult[3])) * Math.abs(aResult[2]);
          break;
        case approx_rationalOfE:
          theSum = Math.pow(3, Math.abs(aResult[3])) * Math.abs(aResult[2]);
          break;
        default:
          theSum = 0;
      }
      theSum += Math.abs(aResult[2]) * (Math.abs(aResult[3]) + Math.abs(aResult[4]));
    } else {
      theSum += Math.abs(aResult) * (Math.abs(b) + Math.abs(c));
    }

    // heavily discount unit constants
    if (aResult[2] === 1) {
      theSum -= 1;
    } else {
      theSum += 1;
    }
    if (aResult[3] === 1) {
      theSum -= 1;
    } else {
      theSum += 1;
    }
    if (aResult[4] === 1) {
      theSum -= 1;
    } else {
      theSum += 1;
    }
    if (theSum < 0) {
      theSum = 0;
    }
    return theSum;
  };
  testApprox = function testApprox() {
    var error, fraction, i, i1, i2, i3, j, j1, j2, j3, k3, l1, l2, l3, len, len1, len2, len3, len4, len5, len6, len7, m1, m2, m3, n1, n2, o, o1, o2, originalValue, q1, q2, r1, r2, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, returned, returnedFraction, returnedValue, s1, s2, t1, t2, u1, u2, v1, v2, value, x1, x2, z1, z2;
    ref = [2, 3, 5, 6, 7, 8, 10];
    for (o = 0, len = ref.length; o < len; o++) {
      i = ref[o];
      ref1 = [2, 3, 5, 6, 7, 8, 10];
      for (i1 = 0, len1 = ref1.length; i1 < len1; i1++) {
        j = ref1[i1];
        if (i === j) {
          continue; // this is just 1
        }

        console.log("testapproxRadicals testing: " + "1 * sqrt( " + i + " ) / " + j);
        fraction = i / j;
        value = Math.sqrt(i) / j;
        returned = approxRadicals(value);
        returnedValue = returned[2] * Math.sqrt(returned[3]) / returned[4];
        if (Math.abs(value - returnedValue) > 1e-15) {
          console.log("fail testapproxRadicals: " + "1 * sqrt( " + i + " ) / " + j + " . obtained: " + returned);
        }
      }
    }
    ref2 = [2, 3, 5, 6, 7, 8, 10];
    for (j1 = 0, len2 = ref2.length; j1 < len2; j1++) {
      i = ref2[j1];
      ref3 = [2, 3, 5, 6, 7, 8, 10];
      for (l1 = 0, len3 = ref3.length; l1 < len3; l1++) {
        j = ref3[l1];
        if (i === j) {
          continue; // this is just 1
        }

        console.log("testapproxRadicals testing with 4 digits: " + "1 * sqrt( " + i + " ) / " + j);
        fraction = i / j;
        originalValue = Math.sqrt(i) / j;
        value = originalValue.toFixed(4);
        returned = approxRadicals(value);
        returnedValue = returned[2] * Math.sqrt(returned[3]) / returned[4];
        if (Math.abs(originalValue - returnedValue) > 1e-15) {
          console.log("fail testapproxRadicals with 4 digits: " + "1 * sqrt( " + i + " ) / " + j + " . obtained: " + returned);
        }
      }
    }
    ref4 = [2, 3, 5, 6, 7, 8, 10];
    for (m1 = 0, len4 = ref4.length; m1 < len4; m1++) {
      i = ref4[m1];
      ref5 = [2, 3, 5, 6, 7, 8, 10];
      for (n1 = 0, len5 = ref5.length; n1 < len5; n1++) {
        j = ref5[n1];
        if (i === j) {
          continue; // this is just 1
        }

        console.log("testapproxRadicals testing: " + "1 * sqrt( " + i + " / " + j + " )");
        fraction = i / j;
        value = Math.sqrt(i / j);
        returned = approxRadicals(value);
        if (returned != null) {
          returnedValue = returned[2] * Math.sqrt(returned[3] / returned[4]);
          if (returned[1] === approx_radicalOfRatio && Math.abs(value - returnedValue) > 1e-15) {
            console.log("fail testapproxRadicals: " + "1 * sqrt( " + i + " / " + j + " ) . obtained: " + returned);
          }
        }
      }
    }
    ref6 = [1, 2, 3, 5, 6, 7, 8, 10];
    for (o1 = 0, len6 = ref6.length; o1 < len6; o1++) {
      i = ref6[o1];
      ref7 = [1, 2, 3, 5, 6, 7, 8, 10];
      for (q1 = 0, len7 = ref7.length; q1 < len7; q1++) {
        j = ref7[q1];
        if (i === 1 && j === 1) {
          continue;
        }
        console.log("testapproxRadicals testing with 4 digits:: " + "1 * sqrt( " + i + " / " + j + " )");
        fraction = i / j;
        originalValue = Math.sqrt(i / j);
        value = originalValue.toFixed(4);
        returned = approxRadicals(value);
        returnedValue = returned[2] * Math.sqrt(returned[3] / returned[4]);
        if (returned[1] === approx_radicalOfRatio && Math.abs(originalValue - returnedValue) > 1e-15) {
          console.log("fail testapproxRadicals with 4 digits:: " + "1 * sqrt( " + i + " / " + j + " ) . obtained: " + returned);
        }
      }
    }
    for (i = r1 = 1; r1 <= 5; i = ++r1) {
      for (j = s1 = 1; s1 <= 5; j = ++s1) {
        console.log("testApproxAll testing: " + "1 * log(" + i + " ) / " + j);
        fraction = i / j;
        value = Math.log(i) / j;
        returned = approxAll(value);
        returnedValue = returned[2] * Math.log(returned[3]) / returned[4];
        if (Math.abs(value - returnedValue) > 1e-15) {
          console.log("fail testApproxAll: " + "1 * log(" + i + " ) / " + j + " . obtained: " + returned);
        }
      }
    }
    for (i = t1 = 1; t1 <= 5; i = ++t1) {
      for (j = u1 = 1; u1 <= 5; j = ++u1) {
        console.log("testApproxAll testing with 4 digits: " + "1 * log(" + i + " ) / " + j);
        fraction = i / j;
        originalValue = Math.log(i) / j;
        value = originalValue.toFixed(4);
        returned = approxAll(value);
        returnedValue = returned[2] * Math.log(returned[3]) / returned[4];
        if (Math.abs(originalValue - returnedValue) > 1e-15) {
          console.log("fail testApproxAll with 4 digits: " + "1 * log(" + i + " ) / " + j + " . obtained: " + returned);
        }
      }
    }
    for (i = v1 = 1; v1 <= 5; i = ++v1) {
      for (j = x1 = 1; x1 <= 5; j = ++x1) {
        console.log("testApproxAll testing: " + "1 * log(" + i + " / " + j + " )");
        fraction = i / j;
        value = Math.log(i / j);
        returned = approxAll(value);
        returnedValue = returned[2] * Math.log(returned[3] / returned[4]);
        if (Math.abs(value - returnedValue) > 1e-15) {
          console.log("fail testApproxAll: " + "1 * log(" + i + " / " + j + " )" + " . obtained: " + returned);
        }
      }
    }
    for (i = z1 = 1; z1 <= 5; i = ++z1) {
      for (j = i2 = 1; i2 <= 5; j = ++i2) {
        console.log("testApproxAll testing with 4 digits: " + "1 * log(" + i + " / " + j + " )");
        fraction = i / j;
        originalValue = Math.log(i / j);
        value = originalValue.toFixed(4);
        returned = approxAll(value);
        returnedValue = returned[2] * Math.log(returned[3] / returned[4]);
        if (Math.abs(originalValue - returnedValue) > 1e-15) {
          console.log("fail testApproxAll with 4 digits: " + "1 * log(" + i + " / " + j + " )" + " . obtained: " + returned);
        }
      }
    }
    for (i = j2 = 1; j2 <= 2; i = ++j2) {
      for (j = l2 = 1; l2 <= 12; j = ++l2) {
        console.log("testApproxAll testing: " + "1 * (e ^ " + i + " ) / " + j);
        fraction = i / j;
        value = Math.pow(Math.E, i) / j;
        returned = approxAll(value);
        returnedValue = returned[2] * Math.pow(Math.E, returned[3]) / returned[4];
        if (Math.abs(value - returnedValue) > 1e-15) {
          console.log("fail testApproxAll: " + "1 * (e ^ " + i + " ) / " + j + " . obtained: " + returned);
        }
      }
    }
    for (i = m2 = 1; m2 <= 2; i = ++m2) {
      for (j = n2 = 1; n2 <= 12; j = ++n2) {
        console.log("approxRationalsOfPowersOfE testing with 4 digits: " + "1 * (e ^ " + i + " ) / " + j);
        fraction = i / j;
        originalValue = Math.pow(Math.E, i) / j;
        value = originalValue.toFixed(4);
        returned = approxRationalsOfPowersOfE(value);
        returnedValue = returned[2] * Math.pow(Math.E, returned[3]) / returned[4];
        if (Math.abs(originalValue - returnedValue) > 1e-15) {
          console.log("fail approxRationalsOfPowersOfE with 4 digits: " + "1 * (e ^ " + i + " ) / " + j + " . obtained: " + returned);
        }
      }
    }
    for (i = o2 = 1; o2 <= 2; i = ++o2) {
      for (j = q2 = 1; q2 <= 12; j = ++q2) {
        console.log("testApproxAll testing: " + "1 * pi ^ " + i + " / " + j);
        fraction = i / j;
        value = Math.pow(Math.PI, i) / j;
        returned = approxAll(value);
        returnedValue = returned[2] * Math.pow(Math.PI, returned[3]) / returned[4];
        if (Math.abs(value - returnedValue) > 1e-15) {
          console.log("fail testApproxAll: " + "1 * pi ^ " + i + " / " + j + " ) . obtained: " + returned);
        }
      }
    }
    for (i = r2 = 1; r2 <= 2; i = ++r2) {
      for (j = s2 = 1; s2 <= 12; j = ++s2) {
        console.log("approxRationalsOfPowersOfPI testing with 4 digits: " + "1 * pi ^ " + i + " / " + j);
        fraction = i / j;
        originalValue = Math.pow(Math.PI, i) / j;
        value = originalValue.toFixed(4);
        returned = approxRationalsOfPowersOfPI(value);
        returnedValue = returned[2] * Math.pow(Math.PI, returned[3]) / returned[4];
        if (Math.abs(originalValue - returnedValue) > 1e-15) {
          console.log("fail approxRationalsOfPowersOfPI with 4 digits: " + "1 * pi ^ " + i + " / " + j + " ) . obtained: " + returned);
        }
      }
    }
    for (i = t2 = 1; t2 <= 4; i = ++t2) {
      for (j = u2 = 1; u2 <= 4; j = ++u2) {
        console.log("testApproxAll testing: " + "1 * sin( " + i + "/" + j + " )");
        fraction = i / j;
        value = Math.sin(fraction);
        returned = approxAll(value);
        returnedFraction = returned[3] / returned[4];
        returnedValue = returned[2] * Math.sin(returnedFraction);
        if (Math.abs(value - returnedValue) > 1e-15) {
          console.log("fail testApproxAll: " + "1 * sin( " + i + "/" + j + " ) . obtained: " + returned);
        }
      }
    }
    // 5 digits create no problem
    for (i = v2 = 1; v2 <= 4; i = ++v2) {
      for (j = x2 = 1; x2 <= 4; j = ++x2) {
        console.log("testApproxAll testing with 5 digits: " + "1 * sin( " + i + "/" + j + " )");
        fraction = i / j;
        originalValue = Math.sin(fraction);
        value = originalValue.toFixed(5);
        returned = approxAll(value);
        if (returned == null) {
          console.log("fail testApproxAll with 5 digits: " + "1 * sin( " + i + "/" + j + " ) . obtained:  undefined ");
        }
        returnedFraction = returned[3] / returned[4];
        returnedValue = returned[2] * Math.sin(returnedFraction);
        error = Math.abs(originalValue - returnedValue);
        if (error > 1e-14) {
          console.log("fail testApproxAll with 5 digits: " + "1 * sin( " + i + "/" + j + " ) . obtained: " + returned + " error: " + error);
        }
      }
    }
    // 4 digits create two collisions
    for (i = z2 = 1; z2 <= 4; i = ++z2) {
      for (j = i3 = 1; i3 <= 4; j = ++i3) {
        console.log("testApproxAll testing with 4 digits: " + "1 * sin( " + i + "/" + j + " )");
        fraction = i / j;
        originalValue = Math.sin(fraction);
        value = originalValue.toFixed(4);
        returned = approxAll(value);
        if (returned == null) {
          console.log("fail testApproxAll with 4 digits: " + "1 * sin( " + i + "/" + j + " ) . obtained:  undefined ");
        }
        returnedFraction = returned[3] / returned[4];
        returnedValue = returned[2] * Math.sin(returnedFraction);
        error = Math.abs(originalValue - returnedValue);
        if (error > 1e-14) {
          console.log("fail testApproxAll with 4 digits: " + "1 * sin( " + i + "/" + j + " ) . obtained: " + returned + " error: " + error);
        }
      }
    }
    value = 0;
    if (approxAll(value)[0] !== "0") {
      console.log("fail testApproxAll: 0");
    }
    value = 0.0;
    if (approxAll(value)[0] !== "0") {
      console.log("fail testApproxAll: 0.0");
    }
    value = 0.00;
    if (approxAll(value)[0] !== "0") {
      console.log("fail testApproxAll: 0.00");
    }
    value = 0.000;
    if (approxAll(value)[0] !== "0") {
      console.log("fail testApproxAll: 0.000");
    }
    value = 0.0000;
    if (approxAll(value)[0] !== "0") {
      console.log("fail testApproxAll: 0.0000");
    }
    value = 1;
    if (approxAll(value)[0] !== "1") {
      console.log("fail testApproxAll: 1");
    }
    value = 1.0;
    if (approxAll(value)[0] !== "1") {
      console.log("fail testApproxAll: 1.0");
    }
    value = 1.00;
    if (approxAll(value)[0] !== "1") {
      console.log("fail testApproxAll: 1.00");
    }
    value = 1.000;
    if (approxAll(value)[0] !== "1") {
      console.log("fail testApproxAll: 1.000");
    }
    value = 1.0000;
    if (approxAll(value)[0] !== "1") {
      console.log("fail testApproxAll: 1.0000");
    }
    value = 1.00000;
    if (approxAll(value)[0] !== "1") {
      console.log("fail testApproxAll: 1.00000");
    }
    value = Math.sqrt(2);
    if (approxAll(value)[0] !== "1 * sqrt( 2 ) / 1") {
      console.log("fail testApproxAll: Math.sqrt(2)");
    }
    value = 1.41;
    if (approxAll(value)[0] !== "1 * sqrt( 2 ) / 1") {
      console.log("fail testApproxAll: 1.41");
    }
    // if we narrow down to a particular family then we can get
    // an OK guess even with few digits, expecially for really "famous" numbers
    value = 1.4;
    if (approxRadicals(value)[0] !== "1 * sqrt( 2 ) / 1") {
      console.log("fail approxRadicals: 1.4");
    }
    value = 0.6;
    if (approxLogs(value)[0] !== "1 * log( 2 ) / 1") {
      console.log("fail approxLogs: 0.6");
    }
    value = 0.69;
    if (approxLogs(value)[0] !== "1 * log( 2 ) / 1") {
      console.log("fail approxLogs: 0.69");
    }
    value = 0.7;
    if (approxLogs(value)[0] !== "1 * log( 2 ) / 1") {
      console.log("fail approxLogs: 0.7");
    }
    value = 1.09;
    if (approxLogs(value)[0] !== "1 * log( 3 ) / 1") {
      console.log("fail approxLogs: 1.09");
    }
    value = 1.09;
    if (approxAll(value)[0] !== "1 * log( 3 ) / 1") {
      console.log("fail approxAll: 1.09");
    }
    value = 1.098;
    if (approxAll(value)[0] !== "1 * log( 3 ) / 1") {
      console.log("fail approxAll: 1.098");
    }
    value = 1.1;
    if (approxAll(value)[0] !== "1 * log( 3 ) / 1") {
      console.log("fail approxAll: 1.1");
    }
    value = 1.11;
    if (approxAll(value)[0] !== "1 * log( 3 ) / 1") {
      console.log("fail approxAll: 1.11");
    }
    value = Math.sqrt(3);
    if (approxAll(value)[0] !== "1 * sqrt( 3 ) / 1") {
      console.log("fail testApproxAll: Math.sqrt(3)");
    }
    value = 1.0000;
    if (approxAll(value)[0] !== "1") {
      console.log("fail testApproxAll: 1.0000");
    }
    value = 3.141592;
    if (approxAll(value)[0] !== "1 * (pi ^ 1 ) / 1 )") {
      console.log("fail testApproxAll: 3.141592");
    }
    value = 31.41592;
    if (approxAll(value)[0] !== "10 * (pi ^ 1 ) / 1 )") {
      console.log("fail testApproxAll: 31.41592");
    }
    value = 314.1592;
    if (approxAll(value)[0] !== "100 * (pi ^ 1 ) / 1 )") {
      console.log("fail testApproxAll: 314.1592");
    }
    value = 31415926.53589793;
    if (approxAll(value)[0] !== "10000000 * (pi ^ 1 ) / 1 )") {
      console.log("fail testApproxAll: 31415926.53589793");
    }
    value = Math.sqrt(2);
    if (approxTrigonometric(value)[0] !== "2 * sin( 1/4 * pi )") {
      console.log("fail approxTrigonometric: Math.sqrt(2)");
    }
    value = Math.sqrt(3);
    if (approxTrigonometric(value)[0] !== "2 * sin( 1/3 * pi )") {
      console.log("fail approxTrigonometric: Math.sqrt(3)");
    }
    value = (Math.sqrt(6) - Math.sqrt(2)) / 4;
    if (approxAll(value)[0] !== "1 * sin( 1/12 * pi )") {
      console.log("fail testApproxAll: (Math.sqrt(6) - Math.sqrt(2))/4");
    }
    value = Math.sqrt(2 - Math.sqrt(2)) / 2;
    if (approxAll(value)[0] !== "1 * sin( 1/8 * pi )") {
      console.log("fail testApproxAll: Math.sqrt(2 - Math.sqrt(2))/2");
    }
    value = (Math.sqrt(6) + Math.sqrt(2)) / 4;
    if (approxAll(value)[0] !== "1 * sin( 5/12 * pi )") {
      console.log("fail testApproxAll: (Math.sqrt(6) + Math.sqrt(2))/4");
    }
    value = Math.sqrt(2 + Math.sqrt(3)) / 2;
    if (approxAll(value)[0] !== "1 * sin( 5/12 * pi )") {
      console.log("fail testApproxAll: Math.sqrt(2 + Math.sqrt(3))/2");
    }
    value = (Math.sqrt(5) - 1) / 4;
    if (approxAll(value)[0] !== "1 * sin( 1/10 * pi )") {
      console.log("fail testApproxAll: (Math.sqrt(5) - 1)/4");
    }
    value = Math.sqrt(10 - 2 * Math.sqrt(5)) / 4;
    if (approxAll(value)[0] !== "1 * sin( 1/5 * pi )") {
      console.log("fail testApproxAll: Math.sqrt(10 - 2*Math.sqrt(5))/4");
    }
    // this has a radical form but it's too long to write
    value = Math.sin(Math.PI / 7);
    if (approxAll(value)[0] !== "1 * sin( 1/7 * pi )") {
      console.log("fail testApproxAll: Math.sin(Math.PI/7)");
    }
    // this has a radical form but it's too long to write
    value = Math.sin(Math.PI / 9);
    if (approxAll(value)[0] !== "1 * sin( 1/9 * pi )") {
      console.log("fail testApproxAll: Math.sin(Math.PI/9)");
    }
    value = 1836.15267;
    if (approxRationalsOfPowersOfPI(value)[0] !== "6 * (pi ^ 5 ) / 1 )") {
      console.log("fail approxRationalsOfPowersOfPI: 1836.15267");
    }
    for (i = j3 = 1; j3 <= 13; i = ++j3) {
      for (j = k3 = 1; k3 <= 13; j = ++k3) {
        console.log("approxTrigonometric testing: " + "1 * sin( " + i + "/" + j + " * pi )");
        fraction = i / j;
        value = Math.sin(Math.PI * fraction);
        // we specifically search for sines of rational multiples of PI
        // because too many of them would be picked up as simple
        // rationals.
        returned = approxTrigonometric(value);
        returnedFraction = returned[3] / returned[4];
        returnedValue = returned[2] * Math.sin(Math.PI * returnedFraction);
        if (Math.abs(value - returnedValue) > 1e-15) {
          console.log("fail approxTrigonometric: " + "1 * sin( " + i + "/" + j + " * pi ) . obtained: " + returned);
        }
      }
    }
    for (i = l3 = 1; l3 <= 13; i = ++l3) {
      for (j = m3 = 1; m3 <= 13; j = ++m3) {
        // with four digits, there are two collisions with the
        // "simple fraction" argument hypotesis, which we prefer since
        // it's a simpler expression, so let's skip those
        // two tests
        if (i === 5 && j === 11 || i === 6 && j === 11) {
          continue;
        }
        console.log("approxTrigonometric testing with 4 digits: " + "1 * sin( " + i + "/" + j + " * pi )");
        fraction = i / j;
        originalValue = Math.sin(Math.PI * fraction);
        value = originalValue.toFixed(4);
        // we specifically search for sines of rational multiples of PI
        // because too many of them would be picked up as simple
        // rationals.
        returned = approxTrigonometric(value);
        returnedFraction = returned[3] / returned[4];
        returnedValue = returned[2] * Math.sin(Math.PI * returnedFraction);
        error = Math.abs(originalValue - returnedValue);
        if (error > 1e-14) {
          console.log("fail approxTrigonometric with 4 digits: " + "1 * sin( " + i + "/" + j + " * pi ) . obtained: " + returned + " error: " + error);
        }
      }
    }
    return console.log("testApprox done");
  };
  $.approxRadicals = approxRadicals;
  $.approxRationalsOfLogs = approxRationalsOfLogs;
  $.approxAll = approxAll;
  $.testApprox = testApprox;
  Eval_arccos = function Eval_arccos() {
    push(cadr(p1));
    Eval();
    return arccos();
  };
  arccos = function arccos() {
    var d, errno, n;
    n = 0;
    d = 0.0;
    save();
    p1 = pop();
    if (car(p1) === symbol(COS)) {
      push(cadr(p1));
      restore();
      return;
    }
    if (isdouble(p1)) {
      errno = 0;
      d = Math.acos(p1.d);
      if (errno) {
        stop("arccos function argument is not in the interval [-1,1]");
      }
      push_double(d);
      restore();
      return;
    }
    // if p1 == 1/sqrt(2) then return 1/4*pi (45 degrees)
    // second if catches the other way of saying it, sqrt(2)/2
    if (isoneoversqrttwo(p1) || car(p1) === symbol(MULTIPLY) && equalq(car(cdr(p1)), 1, 2) && car(car(cdr(cdr(p1)))) === symbol(POWER) && equaln(car(cdr(car(cdr(cdr(p1))))), 2) && equalq(car(cdr(cdr(car(cdr(cdr(p1)))))), 1, 2)) {
      if (evaluatingAsFloats) {
        push_double(Math.PI / 4.0);
      } else {
        push_rational(1, 4);
        push_symbol(PI);
        multiply();
      }
      restore();
      return;
    }
    // if p1 == -1/sqrt(2) then return 3/4*pi (135 degrees)
    // second if catches the other way of saying it, -sqrt(2)/2
    if (isminusoneoversqrttwo(p1) || car(p1) === symbol(MULTIPLY) && equalq(car(cdr(p1)), -1, 2) && car(car(cdr(cdr(p1)))) === symbol(POWER) && equaln(car(cdr(car(cdr(cdr(p1))))), 2) && equalq(car(cdr(cdr(car(cdr(cdr(p1)))))), 1, 2)) {
      if (evaluatingAsFloats) {
        push_double(Math.PI * 3.0 / 4.0);
      } else {
        push_rational(3, 4);
        push_symbol(PI);
        multiply();
      }
      restore();
      return;
    }
    // if p1 == sqrt(3)/2 then return 1/6*pi (30 degrees)
    if (issqrtthreeovertwo(p1)) {
      if (evaluatingAsFloats) {
        push_double(Math.PI / 6.0);
      } else {
        push_rational(1, 6);
        push_symbol(PI);
        multiply();
      }
      restore();
      return;
    }
    // if p1 == -sqrt(3)/2 then return 5/6*pi (150 degrees)
    if (isminussqrtthreeovertwo(p1)) {
      if (evaluatingAsFloats) {
        push_double(5.0 * Math.PI / 6.0);
      } else {
        push_rational(5, 6);
        push_symbol(PI);
        multiply();
      }
      restore();
      return;
    }
    if (!isrational(p1)) {
      push_symbol(ARCCOS);
      push(p1);
      list(2);
      restore();
      return;
    }
    push(p1);
    push_integer(2);
    multiply();
    n = pop_integer();
    switch (n) {
      case -2:
        if (evaluatingAsFloats) {
          push_double(Math.PI);
        } else {
          push_symbol(PI);
        }
        break;
      case -1:
        if (evaluatingAsFloats) {
          push_double(Math.PI * 2.0 / 3.0);
        } else {
          push_rational(2, 3);
          push_symbol(PI);
          multiply();
        }
        break;
      case 0:
        if (evaluatingAsFloats) {
          push_double(Math.PI / 2.0);
        } else {
          push_rational(1, 2);
          push_symbol(PI);
          multiply();
        }
        break;
      case 1:
        if (evaluatingAsFloats) {
          push_double(Math.PI / 3.0);
        } else {
          push_rational(1, 3);
          push_symbol(PI);
          multiply();
        }
        break;
      case 2:
        if (evaluatingAsFloats) {
          push_double(0.0);
        } else {
          push(zero);
        }
        break;
      default:
        push_symbol(ARCCOS);
        push(p1);
        list(2);
    }
    return restore();
  };
  Eval_arccosh = function Eval_arccosh() {
    push(cadr(p1));
    Eval();
    return arccosh();
  };
  arccosh = function arccosh() {
    var d;
    d = 0.0;
    save();
    p1 = pop();
    if (car(p1) === symbol(COSH)) {
      push(cadr(p1));
      restore();
      return;
    }
    if (isdouble(p1)) {
      d = p1.d;
      if (d < 1.0) {
        stop("arccosh function argument is less than 1.0");
      }
      d = Math.log(d + Math.sqrt(d * d - 1.0));
      push_double(d);
      restore();
      return;
    }
    if (isplusone(p1)) {
      push(zero);
      restore();
      return;
    }
    push_symbol(ARCCOSH);
    push(p1);
    list(2);
    return restore();
  };
  Eval_arcsin = function Eval_arcsin() {
    push(cadr(p1));
    Eval();
    return arcsin();
  };
  arcsin = function arcsin() {
    var d, errno, n;
    n = 0;
    d = 0;
    save();
    p1 = pop();
    if (car(p1) === symbol(SIN)) {
      push(cadr(p1));
      restore();
      return;
    }
    if (isdouble(p1)) {
      errno = 0;
      d = Math.asin(p1.d);
      if (errno) {
        stop("arcsin function argument is not in the interval [-1,1]");
      }
      push_double(d);
      restore();
      return;
    }
    // if p1 == 1/sqrt(2) then return 1/4*pi (45 degrees)
    // second if catches the other way of saying it, sqrt(2)/2
    if (isoneoversqrttwo(p1) || car(p1) === symbol(MULTIPLY) && equalq(car(cdr(p1)), 1, 2) && car(car(cdr(cdr(p1)))) === symbol(POWER) && equaln(car(cdr(car(cdr(cdr(p1))))), 2) && equalq(car(cdr(cdr(car(cdr(cdr(p1)))))), 1, 2)) {
      push_rational(1, 4);
      push_symbol(PI);
      multiply();
      restore();
      return;
    }
    // if p1 == -1/sqrt(2) then return -1/4*pi (-45 degrees)
    // second if catches the other way of saying it, -sqrt(2)/2
    if (isminusoneoversqrttwo(p1) || car(p1) === symbol(MULTIPLY) && equalq(car(cdr(p1)), -1, 2) && car(car(cdr(cdr(p1)))) === symbol(POWER) && equaln(car(cdr(car(cdr(cdr(p1))))), 2) && equalq(car(cdr(cdr(car(cdr(cdr(p1)))))), 1, 2)) {
      if (evaluatingAsFloats) {
        push_double(-Math.PI / 4.0);
      } else {
        push_rational(-1, 4);
        push_symbol(PI);
        multiply();
      }
      restore();
      return;
    }
    // if p1 == sqrt(3)/2 then return 1/3*pi (60 degrees)
    if (issqrtthreeovertwo(p1)) {
      if (evaluatingAsFloats) {
        push_double(Math.PI / 3.0);
      } else {
        push_rational(1, 3);
        push_symbol(PI);
        multiply();
      }
      restore();
      return;
    }
    // if p1 == -sqrt(3)/2 then return -1/3*pi (-60 degrees)
    if (isminussqrtthreeovertwo(p1)) {
      if (evaluatingAsFloats) {
        push_double(-Math.PI / 3.0);
      } else {
        push_rational(-1, 3);
        push_symbol(PI);
        multiply();
      }
      restore();
      return;
    }
    if (!isrational(p1)) {
      push_symbol(ARCSIN);
      push(p1);
      list(2);
      restore();
      return;
    }
    push(p1);
    push_integer(2);
    multiply();
    n = pop_integer();
    switch (n) {
      case -2:
        if (evaluatingAsFloats) {
          push_double(-Math.PI / 2.0);
        } else {
          push_rational(-1, 2);
          push_symbol(PI);
          multiply();
        }
        break;
      case -1:
        if (evaluatingAsFloats) {
          push_double(-Math.PI / 6.0);
        } else {
          push_rational(-1, 6);
          push_symbol(PI);
          multiply();
        }
        break;
      case 0:
        if (evaluatingAsFloats) {
          push_double(0.0);
        } else {
          push(zero);
        }
        break;
      case 1:
        if (evaluatingAsFloats) {
          push_double(Math.PI / 6.0);
        } else {
          push_rational(1, 6);
          push_symbol(PI);
          multiply();
        }
        break;
      case 2:
        if (evaluatingAsFloats) {
          push_double(Math.PI / 2.0);
        } else {
          push_rational(1, 2);
          push_symbol(PI);
          multiply();
        }
        break;
      default:
        push_symbol(ARCSIN);
        push(p1);
        list(2);
    }
    return restore();
  };
  Eval_arcsinh = function Eval_arcsinh() {
    push(cadr(p1));
    Eval();
    return arcsinh();
  };
  arcsinh = function arcsinh() {
    var d;
    d = 0.0;
    save();
    p1 = pop();
    if (car(p1) === symbol(SINH)) {
      push(cadr(p1));
      restore();
      return;
    }
    if (isdouble(p1)) {
      d = p1.d;
      d = Math.log(d + Math.sqrt(d * d + 1.0));
      push_double(d);
      restore();
      return;
    }
    if (isZeroAtomOrTensor(p1)) {
      push(zero);
      restore();
      return;
    }
    push_symbol(ARCSINH);
    push(p1);
    list(2);
    return restore();
  };
  Eval_arctan = function Eval_arctan() {
    push(cadr(p1));
    Eval();
    return _arctan();
  };
  _arctan = function arctan() {
    var d, errno;
    d = 0;
    save();
    p1 = pop();
    if (car(p1) === symbol(TAN)) {
      push(cadr(p1));
      restore();
      return;
    }
    if (isdouble(p1)) {
      errno = 0;
      d = Math.atan(p1.d);
      if (errno) {
        stop("arctan function error");
      }
      push_double(d);
      restore();
      return;
    }
    if (isZeroAtomOrTensor(p1)) {
      push(zero);
      restore();
      return;
    }
    if (isnegative(p1)) {
      push(p1);
      negate();
      _arctan();
      negate();
      restore();
      return;
    }
    // arctan(sin(a) / cos(a)) ?
    if (_Find(p1, symbol(SIN)) && _Find(p1, symbol(COS))) {
      push(p1);
      _numerator();
      p2 = pop();
      push(p1);
      _denominator();
      p3 = pop();
      if (car(p2) === symbol(SIN) && car(p3) === symbol(COS) && equal(cadr(p2), cadr(p3))) {
        push(cadr(p2));
        restore();
        return;
      }
    }
    // arctan(1/sqrt(3)) -> pi/6
    // second if catches the other way of saying it, sqrt(3)/3
    if (car(p1) === symbol(POWER) && equaln(cadr(p1), 3) && equalq(caddr(p1), -1, 2) || car(p1) === symbol(MULTIPLY) && equalq(car(cdr(p1)), 1, 3) && car(car(cdr(cdr(p1)))) === symbol(POWER) && equaln(car(cdr(car(cdr(cdr(p1))))), 3) && equalq(car(cdr(cdr(car(cdr(cdr(p1)))))), 1, 2)) {
      push_rational(1, 6);
      if (evaluatingAsFloats) {
        push_double(Math.PI);
      } else {
        push(symbol(PI));
      }
      multiply();
      restore();
      return;
    }
    // arctan(1) -> pi/4
    if (equaln(p1, 1)) {
      push_rational(1, 4);
      if (evaluatingAsFloats) {
        push_double(Math.PI);
      } else {
        push(symbol(PI));
      }
      multiply();
      restore();
      return;
    }
    // arctan(sqrt(3)) -> pi/3
    if (car(p1) === symbol(POWER) && equaln(cadr(p1), 3) && equalq(caddr(p1), 1, 2)) {
      push_rational(1, 3);
      if (evaluatingAsFloats) {
        push_double(Math.PI);
      } else {
        push(symbol(PI));
      }
      multiply();
      restore();
      return;
    }
    push_symbol(ARCTAN);
    push(p1);
    list(2);
    return restore();
  };
  Eval_arctanh = function Eval_arctanh() {
    push(cadr(p1));
    Eval();
    return arctanh();
  };
  arctanh = function arctanh() {
    var d;
    d = 0.0;
    save();
    p1 = pop();
    if (car(p1) === symbol(TANH)) {
      push(cadr(p1));
      restore();
      return;
    }
    if (isdouble(p1)) {
      d = p1.d;
      if (d < -1.0 || d > 1.0) {
        stop("arctanh function argument is not in the interval [-1,1]");
      }
      d = Math.log((1.0 + d) / (1.0 - d)) / 2.0;
      push_double(d);
      restore();
      return;
    }
    if (isZeroAtomOrTensor(p1)) {
      push(zero);
      restore();
      return;
    }
    push_symbol(ARCTANH);
    push(p1);
    list(2);
    return restore();
  };
  DEBUG_ARG = false;
  Eval_arg = function Eval_arg() {
    push(cadr(p1));
    Eval();
    return arg();
  };
  arg = function arg() {
    save();
    p1 = pop();
    push(p1);
    _numerator();
    yyarg();
    push(p1);
    _denominator();
    yyarg();
    subtract();
    return restore();
  };

  //define RE p2
  //define IM p3
  yyarg = function yyarg() {
    save();
    p1 = pop();
    // case of plain number
    if (ispositivenumber(p1) || p1 === symbol(PI)) {
      if (isdouble(p1) || evaluatingAsFloats) {
        push_double(0);
      } else {
        push_integer(0);
      }
    } else if (isnegativenumber(p1)) {
      if (isdouble(p1) || evaluatingAsFloats) {
        push_double(Math.PI);
      } else {
        push(symbol(PI));
      }
      negate();
      // you'd think that something like
      // arg(a) is always 0 when a is real but no,
      // arg(a) is pi when a is negative so we have
      // to leave unexpressed
    } else if (issymbol(p1)) {
      push_symbol(ARG);
      push(p1);
      list(2);
    } else if (car(p1) === symbol(POWER) && equaln(cadr(p1), -1)) {
      // -1 to a power
      if (evaluatingAsFloats) {
        push_double(Math.PI);
      } else {
        push(symbol(PI));
      }
      push(caddr(p1));
      multiply();
    } else if (car(p1) === symbol(POWER) && cadr(p1) === symbol(E)) {
      // exponential
      push(caddr(p1));
      imag();
      // arg(a^(1/2)) is always equal to 1/2 * arg(a)
      // this can obviously be made more generic TODO
    } else if (car(p1) === symbol(POWER) && isoneovertwo(caddr(p1))) {
      if (DEBUG_ARG) {
        console.log("arg of a sqrt: " + p1);
      }
      if (DEBUG_ARG) {
        debugger;
      }
      push(cadr(p1));
      arg();
      if (DEBUG_ARG) {
        console.log(" = 1/2 * " + stack[tos - 1]);
      }
      push(caddr(p1));
      multiply();
    } else if (car(p1) === symbol(MULTIPLY)) {
      // product of factors
      push_integer(0);
      p1 = cdr(p1);
      while (iscons(p1)) {
        push(car(p1));
        arg();
        add();
        p1 = cdr(p1);
      }
    } else if (car(p1) === symbol(ADD)) {
      // sum of terms
      push(p1);
      _rect();
      p1 = pop();
      push(p1);
      real();
      p2 = pop();
      push(p1);
      imag();
      p3 = pop();
      if (isZeroAtomOrTensor(p2)) {
        if (evaluatingAsFloats) {
          push_double(Math.PI);
        } else {
          push(symbol(PI));
        }
        if (isnegative(p3)) {
          negate();
        }
      } else {
        push(p3);
        push(p2);
        divide();
        _arctan();
        if (isnegative(p2)) {
          if (evaluatingAsFloats) {
            push_double(Math.PI);
          } else {
            push_symbol(PI);
          }
          if (isnegative(p3)) {
            subtract(); // quadrant 1 -> 3
          } else {
            add(); // quadrant 4 -> 2
          }
        }
      }
    } else {
      if (!isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES)))) {
        // if we assume all passed values are real
        push_integer(0);
      } else {
        // if we don't assume all passed values are real, all
        // we con do is to leave unexpressed
        push_symbol(ARG);
        push(p1);
        list(2);
      }
    }
    return restore();
  };

  // pretty print
  _bake = function bake() {
    var h, s, t, x, y, z;
    h = 0;
    s = 0;
    t = 0;
    x = 0;
    y = 0;
    z = 0;
    expanding++;
    save();
    p1 = pop();
    s = ispolyexpandedform(p1, symbol(SYMBOL_S));
    t = ispolyexpandedform(p1, symbol(SYMBOL_T));
    x = ispolyexpandedform(p1, symbol(SYMBOL_X));
    y = ispolyexpandedform(p1, symbol(SYMBOL_Y));
    z = ispolyexpandedform(p1, symbol(SYMBOL_Z));
    if (s === 1 && t === 0 && x === 0 && y === 0 && z === 0) {
      p2 = symbol(SYMBOL_S);
      bake_poly();
    } else if (s === 0 && t === 1 && x === 0 && y === 0 && z === 0) {
      p2 = symbol(SYMBOL_T);
      bake_poly();
    } else if (s === 0 && t === 0 && x === 1 && y === 0 && z === 0) {
      p2 = symbol(SYMBOL_X);
      bake_poly();
    } else if (s === 0 && t === 0 && x === 0 && y === 1 && z === 0) {
      p2 = symbol(SYMBOL_Y);
      bake_poly();
    } else if (s === 0 && t === 0 && x === 0 && y === 0 && z === 1) {
      p2 = symbol(SYMBOL_Z);
      bake_poly();
      // don't bake the contents of some constructs such as "for"
      // because we don't want to evaluate the body of
      // such constructs "statically", i.e. without fully running
      // the loops.
    } else if (iscons(p1) && car(p1) !== symbol(FOR)) {
      h = tos;
      push(car(p1));
      p1 = cdr(p1);
      while (iscons(p1)) {
        push(car(p1));
        _bake();
        p1 = cdr(p1);
      }
      list(tos - h);
    } else {
      push(p1);
    }
    restore();
    return expanding--;
  };
  _polyform = function polyform() {
    var h;
    h = 0;
    save();
    p2 = pop();
    p1 = pop();
    if (ispolyexpandedform(p1, p2)) {
      bake_poly();
    } else if (iscons(p1)) {
      h = tos;
      push(car(p1));
      p1 = cdr(p1);
      while (iscons(p1)) {
        push(car(p1));
        push(p2);
        _polyform();
        p1 = cdr(p1);
      }
      list(tos - h);
    } else {
      push(p1);
    }
    return restore();
  };
  bake_poly = function bake_poly() {
    var a, h, i, k, n, o, ref;
    h = 0;
    i = 0;
    k = 0;
    n = 0;
    //U **a
    a = tos;
    k = coeff(p2, p1);
    h = tos;
    for (i = o = ref = k - 1; o >= 0; i = o += -1) {
      p1 = stack[a + i];
      bake_poly_term(i);
    }
    n = tos - h;
    if (n > 1) {
      list(n);
      push(symbol(ADD));
      swap();
      cons();
    }
    p1 = pop();
    moveTos(tos - k);
    return push(p1);
  };

  // p1 points to coefficient of p2 ^ k

  // k is an int
  bake_poly_term = function bake_poly_term(k) {
    var h, n;
    h = 0;
    n = 0;
    if (isZeroAtomOrTensor(p1)) {
      return;
    }
    // constant term?
    if (k === 0) {
      if (car(p1) === symbol(ADD)) {
        p1 = cdr(p1);
        while (iscons(p1)) {
          push(car(p1));
          p1 = cdr(p1);
        }
      } else {
        push(p1);
      }
      return;
    }
    h = tos;
    // coefficient
    if (car(p1) === symbol(MULTIPLY)) {
      p1 = cdr(p1);
      while (iscons(p1)) {
        push(car(p1));
        p1 = cdr(p1);
      }
    } else if (!equaln(p1, 1)) {
      push(p1);
    }
    // x ^ k
    if (k === 1) {
      push(p2);
    } else {
      push(symbol(POWER));
      push(p2);
      push_integer(k);
      list(3);
    }
    n = tos - h;
    if (n > 1) {
      list(n);
      push(symbol(MULTIPLY));
      swap();
      return cons();
    }
  };
  Eval_besselj = function Eval_besselj() {
    push(cadr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    return besselj();
  };
  besselj = function besselj() {
    save();
    yybesselj();
    return restore();
  };

  //define X p1
  //define N p2
  //define SGN p3
  yybesselj = function yybesselj() {
    var d, n;
    d = 0.0;
    n = 0;
    p2 = pop();
    p1 = pop();
    push(p2);
    n = pop_integer();
    // numerical result
    if (isdouble(p1) && !isNaN(n)) {
      d = jn(n, p1.d);
      push_double(d);
      return;
    }
    // bessej(0,0) = 1
    if (isZeroAtomOrTensor(p1) && isZeroAtomOrTensor(p2)) {
      push_integer(1);
      return;
    }
    // besselj(0,n) = 0
    if (isZeroAtomOrTensor(p1) && !isNaN(n)) {
      push_integer(0);
      return;
    }
    // half arguments
    if (p2.k === NUM && MEQUAL(p2.q.b, 2)) {
      // n = 1/2
      if (MEQUAL(p2.q.a, 1)) {
        if (evaluatingAsFloats) {
          push_double(2.0 / Math.PI);
        } else {
          push_integer(2);
          push_symbol(PI);
          divide();
        }
        push(p1);
        divide();
        push_rational(1, 2);
        power();
        push(p1);
        sine();
        multiply();
        return;
      }
      // n = -1/2
      if (MEQUAL(p2.q.a, -1)) {
        if (evaluatingAsFloats) {
          push_double(2.0 / Math.PI);
        } else {
          push_integer(2);
          push_symbol(PI);
          divide();
        }
        push(p1);
        divide();
        push_rational(1, 2);
        power();
        push(p1);
        cosine();
        multiply();
        return;
      }
      // besselj(x,n) = (2/x) (n-sgn(n)) besselj(x,n-sgn(n)) - besselj(x,n-2*sgn(n))
      push_integer(MSIGN(p2.q.a));
      p3 = pop();
      push_integer(2);
      push(p1);
      divide();
      push(p2);
      push(p3);
      subtract();
      multiply();
      push(p1);
      push(p2);
      push(p3);
      subtract();
      besselj();
      multiply();
      push(p1);
      push(p2);
      push_integer(2);
      push(p3);
      multiply();
      subtract();
      besselj();
      subtract();
      return;
    }
    //if 0 # test cases needed
    if (isnegativeterm(p1)) {
      push(p1);
      negate();
      push(p2);
      power();
      push(p1);
      push(p2);
      negate();
      power();
      multiply();
      push_symbol(BESSELJ);
      push(p1);
      negate();
      push(p2);
      list(3);
      multiply();
      return;
    }
    if (isnegativeterm(p2)) {
      push_integer(-1);
      push(p2);
      power();
      push_symbol(BESSELJ);
      push(p1);
      push(p2);
      negate();
      list(3);
      multiply();
      return;
    }
    //endif
    push(symbol(BESSELJ));
    push(p1);
    push(p2);
    return list(3);
  };
  Eval_bessely = function Eval_bessely() {
    push(cadr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    return bessely();
  };
  bessely = function bessely() {
    save();
    yybessely();
    return restore();
  };

  //define X p1
  //define N p2
  yybessely = function yybessely() {
    var d, n;
    d = 0.0;
    n = 0;
    p2 = pop();
    p1 = pop();
    push(p2);
    n = pop_integer();
    if (isdouble(p1) && !isNaN(n)) {
      d = yn(n, p1.d);
      push_double(d);
      return;
    }
    if (isnegativeterm(p2)) {
      push_integer(-1);
      push(p2);
      power();
      push_symbol(BESSELY);
      push(p1);
      push(p2);
      negate();
      list(3);
      multiply();
      return;
    }
    push_symbol(BESSELY);
    push(p1);
    push(p2);
    list(3);
  };

  //double convert_rational_to_double(U *)
  //double convert_bignum_to_double(unsigned int *)
  //int ge(unsigned int *, unsigned int *, int)
  mint = function mint(a) {
    return bigInt(a);
  };
  isSmall = function isSmall(a) {
    return a.geq(Number.MIN_SAFE_INTEGER) && a.leq(Number.MAX_SAFE_INTEGER);
  };

  // b is +1 or -1, a is a bigint
  setSignTo = function setSignTo(a, b) {
    if (a.isPositive()) {
      if (b < 0) {
        return a.multiply(bigInt(-1));
      }
    } else {
      // a is negative
      if (b > 0) {
        return a.multiply(bigInt(-1));
      }
    }
    return a;
  };
  makeSignSameAs = function makeSignSameAs(a, b) {
    if (a.isPositive()) {
      if (b.isNegative()) {
        return a.multiply(bigInt(-1));
      }
    } else {
      // a is negative
      if (b.isPositive()) {
        return a.multiply(bigInt(-1));
      }
    }
    return a;
  };
  makePositive = function makePositive(a) {
    if (a.isNegative()) {
      return a.multiply(bigInt(-1));
    }
    return a;
  };

  // n is an int
  /*
  mtotal = 0
  MP_MIN_SIZE = 2
  MP_MAX_FREE  = 1000
   mnew = (n) ->
    if (n < MP_MIN_SIZE)
      n = MP_MIN_SIZE
    if (n == MP_MIN_SIZE && mfreecount)
      p = free_stack[--mfreecount]
    else
      p = [] #(unsigned int *) malloc((n + 3) * sizeof (int))
      #if (p == 0)
   *  stop("malloc failure")
    p[0] = n
    mtotal += n
    return p[3]
   */
  // p is the index of array of ints
  // !!! array wasn't passed here
  /*
  free_stack = []
   mfree = (array, p) ->
    p -= 3
    mtotal -= array[p]
    if (array[p] == MP_MIN_SIZE && mfreecount < MP_MAX_FREE)
      free_stack[mfreecount++] = p
    else
      free(p)
  */
  // convert int to bignum

  // n is an int
  /*
  mint = (n) ->
    p = mnew(1)
    if (n < 0)
   * !!! this is FU
   * MSIGN(p) = -1
      fu = true
    else
   * !!! this is FU
      #MSIGN(p) = 1
      fu = true
   * !!! this is FU
    #MLENGTH(p) = 1
    p[0] = Math.abs(n)
    return p
   */
  // copy bignum

  // a is an array of ints
  /*
  mcopy = (a) ->
    #unsigned int *b
     b = mnew(MLENGTH(a))
    * !!! fu
    #MSIGN(b) = MSIGN(a)
    #MLENGTH(b) = MLENGTH(a)
     for i in [0...MLENGTH(a)]
      b[i] = a[i]
     return b
   */
  /*
   * 
   * ge not invoked from anywhere - is you need ge
   * just use the bigNum's ge implementation
   * leaving it here just in case I decide to backport to C
   *
   * a >= b ?
   * and and b arrays of ints, len is an int
  ge = (a, b, len) ->
    i = 0
    for i in [0...len]
      if (a[i] == b[i])
        continue
      else
        break
    if (a[i] >= b[i])
      return 1
    else
      return 0
   */
  add_numbers = function add_numbers() {
    var a, b, theResult;
    a = 1.0;
    b = 1.0;
    //if DEBUG then console.log("add_numbers adding numbers: " + print_list(stack[tos - 1]) + " and " + print_list(stack[tos - 2]))
    if (isrational(stack[tos - 1]) && isrational(stack[tos - 2])) {
      qadd();
      return;
    }
    save();
    p2 = pop();
    p1 = pop();
    if (isdouble(p1)) {
      a = p1.d;
    } else {
      a = convert_rational_to_double(p1);
    }
    if (isdouble(p2)) {
      b = p2.d;
    } else {
      b = convert_rational_to_double(p2);
    }
    theResult = a + b;
    push_double(theResult);
    return restore();
  };
  subtract_numbers = function subtract_numbers() {
    var a, b;
    a = 0.0;
    b = 0.0;
    if (isrational(stack[tos - 1]) && isrational(stack[tos - 2])) {
      qsub();
      return;
    }
    save();
    p2 = pop();
    p1 = pop();
    if (isdouble(p1)) {
      a = p1.d;
    } else {
      a = convert_rational_to_double(p1);
    }
    if (isdouble(p2)) {
      b = p2.d;
    } else {
      b = convert_rational_to_double(p2);
    }
    push_double(a - b);
    return restore();
  };
  multiply_numbers = function multiply_numbers() {
    var a, b;
    a = 0.0;
    b = 0.0;
    if (isrational(stack[tos - 1]) && isrational(stack[tos - 2])) {
      qmul();
      return;
    }
    save();
    p2 = pop();
    p1 = pop();
    if (isdouble(p1)) {
      a = p1.d;
    } else {
      a = convert_rational_to_double(p1);
    }
    if (isdouble(p2)) {
      b = p2.d;
    } else {
      b = convert_rational_to_double(p2);
    }
    push_double(a * b);
    return restore();
  };
  divide_numbers = function divide_numbers() {
    var a, b;
    a = 0.0;
    b = 0.0;
    if (isrational(stack[tos - 1]) && isrational(stack[tos - 2])) {
      qdiv();
      return;
    }
    save();
    p2 = pop();
    p1 = pop();
    if (isZeroAtomOrTensor(p2)) {
      stop("divide by zero");
    }
    if (isdouble(p1)) {
      a = p1.d;
    } else {
      a = convert_rational_to_double(p1);
    }
    if (isdouble(p2)) {
      b = p2.d;
    } else {
      b = convert_rational_to_double(p2);
    }
    push_double(a / b);
    return restore();
  };
  invert_number = function invert_number() {
    var a, b;
    //unsigned int *a, *b
    save();
    p1 = pop();
    if (isZeroAtomOrTensor(p1)) {
      stop("divide by zero");
    }
    if (isdouble(p1)) {
      push_double(1 / p1.d);
      restore();
      return;
    }
    a = bigInt(p1.q.a);
    b = bigInt(p1.q.b);
    b = makeSignSameAs(b, a);
    a = setSignTo(a, 1);
    p1 = new U();
    p1.k = NUM;
    p1.q.a = b;
    p1.q.b = a;
    push(p1);
    return restore();
  };

  // a and b are Us
  compare_rationals = function compare_rationals(a, b) {
    var ab, ba, t;
    t = 0;
    //unsigned int *ab, *ba
    ab = mmul(a.q.a, b.q.b);
    ba = mmul(a.q.b, b.q.a);
    t = mcmp(ab, ba);
    return t;
  };

  // a and b are Us
  compare_numbers = function compare_numbers(a, b) {
    var x, y;
    x = 0.0;
    y = 0.0;
    if (isrational(a) && isrational(b)) {
      return compare_rationals(a, b);
    }
    if (isdouble(a)) {
      x = a.d;
    } else {
      x = convert_rational_to_double(a);
    }
    if (isdouble(b)) {
      y = b.d;
    } else {
      y = convert_rational_to_double(b);
    }
    if (x < y) {
      return -1;
    }
    if (x > y) {
      return 1;
    }
    return 0;
  };
  negate_number = function negate_number() {
    save();
    p1 = pop();
    if (isZeroAtomOrTensor(p1)) {
      push(p1);
      restore();
      return;
    }
    switch (p1.k) {
      case NUM:
        p2 = new U();
        p2.k = NUM;
        p2.q.a = bigInt(p1.q.a.multiply(bigInt.minusOne));
        p2.q.b = bigInt(p1.q.b);
        push(p2);
        break;
      case DOUBLE:
        push_double(-p1.d);
        break;
      default:
        stop("bug caught in mp_negate_number");
    }
    return restore();
  };
  bignum_truncate = function bignum_truncate() {
    var a;
    //unsigned int *a
    save();
    p1 = pop();
    a = mdiv(p1.q.a, p1.q.b);
    p1 = new U();
    p1.k = NUM;
    p1.q.a = a;
    p1.q.b = bigInt(1);
    push(p1);
    return restore();
  };
  mp_numerator = function mp_numerator() {
    save();
    p1 = pop();
    if (p1.k !== NUM) {
      push(one);
      restore();
      return;
    }
    p2 = new U();
    p2.k = NUM;
    p2.q.a = bigInt(p1.q.a);
    p2.q.b = bigInt(1);
    push(p2);
    return restore();
  };
  mp_denominator = function mp_denominator() {
    save();
    p1 = pop();
    if (p1.k !== NUM) {
      push(one);
      restore();
      return;
    }
    p2 = new U();
    p2.k = NUM;
    p2.q.a = bigInt(p1.q.b);
    p2.q.b = bigInt(1);
    push(p2);
    return restore();
  };

  // expo is an integer
  bignum_power_number = function bignum_power_number(expo) {
    var a, b, t;
    //unsigned int *a, *b, *t
    save();
    p1 = pop();
    a = mpow(p1.q.a, Math.abs(expo));
    b = mpow(p1.q.b, Math.abs(expo));
    if (expo < 0) {
      // swap a and b
      t = a;
      a = b;
      b = t;
      a = makeSignSameAs(a, b);
      b = setSignTo(b, 1);
    }
    p1 = new U();
    p1.k = NUM;
    p1.q.a = a;
    p1.q.b = b;
    push(p1);
    return restore();
  };

  // p an array of ints
  convert_bignum_to_double = function convert_bignum_to_double(p) {
    return p.toJSNumber();
  };

  // p is a U
  convert_rational_to_double = function convert_rational_to_double(p) {
    var quotientAndRemainder, result;
    if (p.q == null) {
      debugger;
    }
    quotientAndRemainder = p.q.a.divmod(p.q.b);
    result = quotientAndRemainder.quotient + quotientAndRemainder.remainder / p.q.b.toJSNumber();
    return result;
  };

  // n an integer
  new_integer = function new_integer(n) {
    var theNewInteger;
    theNewInteger = new U();
    theNewInteger.k = NUM;
    theNewInteger.q.a = bigInt(n);
    theNewInteger.q.b = bigInt(1);
    return theNewInteger;
  };

  // n an integer
  push_integer = function push_integer(n) {
    if (DEBUG) {
      console.log("pushing integer " + n);
    }
    return push(new_integer(n));
  };

  // d a double
  push_double = function push_double(d) {
    save();
    p1 = new U();
    p1.k = DOUBLE;
    p1.d = d;
    push(p1);
    return restore();
  };

  // a,b parts of a rational
  push_rational = function push_rational(a, b) {
    /*
    save()
    p1 = new U()
    p1.k = NUM
    p1.q.a = bigInt(a)
    p1.q.b = bigInt(b)
    ## FIXME -- normalize ##
    push(p1)
    restore()
     */
    var p;
    p = new U();
    p.k = NUM;
    p.q.a = bigInt(a);
    p.q.b = bigInt(b);
    return push(p);
  };
  pop_integer = function pop_integer() {
    var n;
    n = 0 / 0;
    save();
    p1 = pop();
    switch (p1.k) {
      case NUM:
        if (isinteger(p1) && isSmall(p1.q.a)) {
          n = p1.q.a.toJSNumber();
        }
        break;
      case DOUBLE:
        if (DEBUG) {
          console.log("popping integer but double is found");
        }
        if (Math.floor(p1.d) === p1.d) {
          if (DEBUG) {
            console.log("...altough it's an integer");
          }
          n = p1.d;
        }
    }
    restore();
    return n;
  };

  // p is a U, flag is an int
  print_double = function print_double(p, flag) {
    var accumulator, buf;
    accumulator = "";
    buf = doubleToReasonableString(p.d);
    if (flag === 1 && buf === '-') {
      accumulator += print_str(buf + 1);
    } else {
      accumulator += print_str(buf);
    }
    return accumulator;
  };

  // s is a string
  bignum_scan_integer = function bignum_scan_integer(s) {
    var a, scounter, sign_;
    //unsigned int *a
    //char sign
    save();
    scounter = 0;
    sign_ = s[scounter];
    if (sign_ === '+' || sign_ === '-') {
      scounter++;
    }
    // !!!! some mess in here, added an argument
    a = bigInt(s.substring(scounter));
    p1 = new U();
    p1.k = NUM;
    p1.q.a = a;
    p1.q.b = bigInt(1);
    push(p1);
    if (sign_ === '-') {
      negate();
    }
    return restore();
  };

  // s a string
  bignum_scan_float = function bignum_scan_float(s) {
    return push_double(parseFloat(s));
  };

  // gives the capability of printing the unsigned
  // value. This is handy because printing of the sign
  // might be taken care of "upstream"
  // e.g. when printing a base elevated to a negative exponent
  // prints the inverse of the base powered to the unsigned
  // exponent.
  // p is a U
  print_number = function print_number(p, signed) {
    var aAsString, accumulator, buf, denominatorString;
    accumulator = "";
    denominatorString = "";
    buf = "";
    switch (p.k) {
      case NUM:
        aAsString = p.q.a.toString();
        if (!signed) {
          if (aAsString[0] === "-") {
            aAsString = aAsString.substring(1);
          }
        }
        if (printMode === PRINTMODE_LATEX && isfraction(p)) {
          aAsString = "\\frac{" + aAsString + "}{";
        }
        accumulator += aAsString;
        if (isfraction(p)) {
          if (printMode !== PRINTMODE_LATEX) {
            accumulator += "/";
          }
          denominatorString = p.q.b.toString();
          if (printMode === PRINTMODE_LATEX) {
            denominatorString += "}";
          }
          accumulator += denominatorString;
        }
        break;
      case DOUBLE:
        aAsString = doubleToReasonableString(p.d);
        if (!signed) {
          if (aAsString[0] === "-") {
            aAsString = aAsString.substring(1);
          }
        }
        accumulator += aAsString;
    }
    return accumulator;
  };
  gcd_numbers = function gcd_numbers() {
    save();
    p2 = pop();
    p1 = pop();
    //  if (!isinteger(p1) || !isinteger(p2))
    //    stop("integer args expected for gcd")
    p3 = new U();
    p3.k = NUM;
    p3.q.a = mgcd(p1.q.a, p2.q.a);
    p3.q.b = mgcd(p1.q.b, p2.q.b);
    p3.q.a = setSignTo(p3.q.a, 1);
    push(p3);
    return restore();
  };
  pop_double = function pop_double() {
    var d;
    d = 0.0;
    save();
    p1 = pop();
    switch (p1.k) {
      case NUM:
        d = convert_rational_to_double(p1);
        break;
      case DOUBLE:
        d = p1.d;
        break;
      default:
        d = 0.0;
    }
    restore();
    return d;
  };
  bignum_float = function bignum_float() {
    var d;
    d = 0.0;
    d = convert_rational_to_double(pop());
    return push_double(d);
  };

  //static unsigned int *__factorial(int)

  // n is an int
  bignum_factorial = function bignum_factorial(n) {
    save();
    p1 = new U();
    p1.k = NUM;
    p1.q.a = __factorial(n);
    p1.q.b = bigInt(1);
    push(p1);
    return restore();
  };

  // n is an int
  __factorial = function __factorial(n) {
    var a, b, i, o, ref, t;
    i = 0;
    //unsigned int *a, *b, *t
    if (n === 0 || n === 1) {
      a = bigInt(1);
      return a;
    }
    a = bigInt(2);
    b = bigInt(0);
    if (3 <= n) {
      for (i = o = 3, ref = n; 3 <= ref ? o <= ref : o >= ref; i = 3 <= ref ? ++o : --o) {
        b = bigInt(i);
        t = mmul(a, b);
        a = t;
      }
    }
    return a;
  };
  mask = [0x00000001, 0x00000002, 0x00000004, 0x00000008, 0x00000010, 0x00000020, 0x00000040, 0x00000080, 0x00000100, 0x00000200, 0x00000400, 0x00000800, 0x00001000, 0x00002000, 0x00004000, 0x00008000, 0x00010000, 0x00020000, 0x00040000, 0x00080000, 0x00100000, 0x00200000, 0x00400000, 0x00800000, 0x01000000, 0x02000000, 0x04000000, 0x08000000, 0x10000000, 0x20000000, 0x40000000, 0x80000000];

  // unsigned int *x, unsigned int k
  mp_set_bit = function mp_set_bit(x, k) {
    console.log("not implemented yet");
    debugger;
    return x[k / 32] |= mask[k % 32];
  };

  // unsigned int *x, unsigned int k
  mp_clr_bit = function mp_clr_bit(x, k) {
    console.log("not implemented yet");
    debugger;
    return x[k / 32] &= ~mask[k % 32];
  };

  // unsigned int *a
  mshiftright = function mshiftright(a) {
    return a = a.shiftRight();
  };

  //  Binomial coefficient

  //  Input:    tos-2    n

  //      tos-1    k

  //  Output:    Binomial coefficient on stack

  //  binomial(n, k) = n! / k! / (n - k)!

  //  The binomial coefficient vanishes for k < 0 or k > n. (A=B, p. 19)
  Eval_binomial = function Eval_binomial() {
    push(cadr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    return binomial();
  };
  binomial = function binomial() {
    save();
    ybinomial();
    return restore();
  };

  //define N p1
  //define K p2
  ybinomial = function ybinomial() {
    p2 = pop();
    p1 = pop();
    if (BINOM_check_args() === 0) {
      push(zero);
      return;
    }
    push(p1);
    factorial();
    push(p2);
    factorial();
    divide();
    push(p1);
    push(p2);
    subtract();
    factorial();
    return divide();
  };
  BINOM_check_args = function BINOM_check_args() {
    if (isNumericAtom(p1) && lessp(p1, zero)) {
      return 0;
    } else if (isNumericAtom(p2) && lessp(p2, zero)) {
      return 0;
    } else if (isNumericAtom(p1) && isNumericAtom(p2) && lessp(p1, p2)) {
      return 0;
    } else {
      return 1;
    }
  };
  Eval_ceiling = function Eval_ceiling() {
    push(cadr(p1));
    Eval();
    return ceiling();
  };
  ceiling = function ceiling() {
    save();
    yyceiling();
    return restore();
  };
  yyceiling = function yyceiling() {
    var d, doNothing;
    d = 0.0;
    p1 = pop();
    if (!isNumericAtom(p1)) {
      push_symbol(CEILING);
      push(p1);
      list(2);
      return;
    }
    if (isdouble(p1)) {
      d = Math.ceil(p1.d);
      push_double(d);
      return;
    }
    if (isinteger(p1)) {
      push(p1);
      return;
    }
    p3 = new U();
    p3.k = NUM;
    p3.q.a = mdiv(p1.q.a, p1.q.b);
    p3.q.b = mint(1);
    push(p3);
    if (isnegativenumber(p1)) {
      return doNothing = 1;
    } else {
      push_integer(1);
      return add();
    }
  };
  Eval_choose = function Eval_choose() {
    push(cadr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    return choose();
  };

  // Result vanishes for k < 0 or k > n. (A=B, p. 19)

  //define N p1
  //define K p2
  choose = function choose() {
    save();
    p2 = pop();
    p1 = pop();
    if (choose_check_args() === 0) {
      push_integer(0);
      restore();
      return;
    }
    push(p1);
    factorial();
    push(p2);
    factorial();
    divide();
    push(p1);
    push(p2);
    subtract();
    factorial();
    divide();
    return restore();
  };
  choose_check_args = function choose_check_args() {
    if (isNumericAtom(p1) && lessp(p1, zero)) {
      return 0;
    } else if (isNumericAtom(p2) && lessp(p2, zero)) {
      return 0;
    } else if (isNumericAtom(p1) && isNumericAtom(p2) && lessp(p1, p2)) {
      return 0;
    } else {
      return 1;
    }
  };
  Eval_circexp = function Eval_circexp() {
    push(cadr(p1));
    Eval();
    _circexp();
    // normalize
    return Eval();
  };
  _circexp = function circexp() {
    var h, i, o, ref;
    i = 0;
    h = 0;
    save();
    p1 = pop();
    if (car(p1) === symbol(COS)) {
      push(cadr(p1));
      expcos();
      restore();
      return;
    }
    if (car(p1) === symbol(SIN)) {
      push(cadr(p1));
      expsin();
      restore();
      return;
    }
    if (car(p1) === symbol(TAN)) {
      p1 = cadr(p1);
      push(imaginaryunit);
      push(p1);
      multiply();
      exponential();
      p2 = pop();
      push(imaginaryunit);
      push(p1);
      multiply();
      negate();
      exponential();
      p3 = pop();
      push(p3);
      push(p2);
      subtract();
      push(imaginaryunit);
      multiply();
      push(p2);
      push(p3);
      add();
      divide();
      restore();
      return;
    }
    if (car(p1) === symbol(COSH)) {
      p1 = cadr(p1);
      push(p1);
      exponential();
      push(p1);
      negate();
      exponential();
      add();
      push_rational(1, 2);
      multiply();
      restore();
      return;
    }
    if (car(p1) === symbol(SINH)) {
      p1 = cadr(p1);
      push(p1);
      exponential();
      push(p1);
      negate();
      exponential();
      subtract();
      push_rational(1, 2);
      multiply();
      restore();
      return;
    }
    if (car(p1) === symbol(TANH)) {
      p1 = cadr(p1);
      push(p1);
      push_integer(2);
      multiply();
      exponential();
      p1 = pop();
      push(p1);
      push_integer(1);
      subtract();
      push(p1);
      push_integer(1);
      add();
      divide();
      restore();
      return;
    }
    if (iscons(p1)) {
      h = tos;
      while (iscons(p1)) {
        push(car(p1));
        _circexp();
        p1 = cdr(p1);
      }
      list(tos - h);
      restore();
      return;
    }
    if (p1.k === TENSOR) {
      push(p1);
      copy_tensor();
      p1 = pop();
      for (i = o = 0, ref = p1.tensor.nelem; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
        push(p1.tensor.elem[i]);
        _circexp();
        p1.tensor.elem[i] = pop();
      }
      push(p1);
      restore();
      return;
    }
    push(p1);
    return restore();
  };
  Eval_clearall = function Eval_clearall() {
    do_clearall();
    return push(symbol(NIL));
  };
  do_clearall = function do_clearall() {
    if (test_flag === 0) {
      clear_term();
    }
    do_clearPatterns();
    clear_symbols();
    defn();
    return codeGen = false;
  };

  // clearall from application GUI code
  clearall = function clearall() {
    return run("clearall");
  };

  // this transformation is done in run.coffee, see there
  // for more info.
  clearRenamedVariablesToAvoidBindingToExternalScope = function clearRenamedVariablesToAvoidBindingToExternalScope() {
    var i, o, ref, results;
    results = [];
    for (i = o = 0, ref = symtab.length; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      if (symtab[i].printname.indexOf("AVOID_BINDING_TO_EXTERNAL_SCOPE_VALUE") !== -1) {
        // just clear it
        symtab[i].k = SYM;
        symtab[i].printname = "";
        binding[i] = symtab[i];
        results.push(isSymbolReclaimable[i] = true);
      } else {
        results.push(void 0);
      }
    }
    return results;
  };
  Eval_clear = function Eval_clear() {
    var indexFound, variableToBeCleared;
    p2 = cdr(p1);
    while (iscons(p2)) {
      variableToBeCleared = car(p2);
      //console.log variableToBeCleared + ""
      if (variableToBeCleared.k !== SYM) {
        stop("symbol error");
      }
      //console.log "getting binding of " + p.toString()
      //if p.toString() == "aaa"
      //  debugger
      indexFound = symtab.indexOf(variableToBeCleared);
      symtab[indexFound].k = SYM;
      symtab[indexFound].printname = "";
      binding[indexFound] = symtab[indexFound];
      isSymbolReclaimable[indexFound] = true;
      p2 = cdr(p2);
    }
    return push(symbol(NIL));
  };

  /*
   Convert complex z to clock form
     Input:    push  z
     Output:    Result on stack
     clock(z) = abs(z) * (-1) ^ (arg(z) / pi)
     For example, clock(exp(i pi/3)) gives the result (-1)^(1/3)
  */
  // P.S. I couldn't find independent definition/aknowledgment
  // of the naming "clock form" anywhere on the web, seems like a
  // naming specific to eigenmath.
  // Clock form is another way to express a complex number, and
  // it has three advantages
  //   1) it's uniform with how for example
  //      i is expressed i.e. (-1)^(1/2)
  //   2) it's very compact
  //   3) it's a straighforward notation for roots of 1 and -1
  DEBUG_CLOCKFORM = false;
  Eval_clock = function Eval_clock() {
    push(cadr(p1));
    Eval();
    return clockform();
  };
  clockform = function clockform() {
    save();
    //if 1
    p1 = pop();
    push(p1);
    abs();
    if (DEBUG_CLOCKFORM) {
      console.log("clockform: abs of " + p1 + " : " + stack[tos - 1]);
    }
    // pushing the expression (-1)^... but note
    // that we can't use "power", as "power" evaluates
    // clock forms into rectangular form (see "-1 ^ rational"
    // section in power)
    push_symbol(POWER);
    push_integer(-1);
    push(p1);
    arg();
    if (DEBUG_CLOCKFORM) {
      console.log("clockform: arg of " + p1 + " : " + stack[tos - 1]);
    }
    if (evaluatingAsFloats) {
      push_double(Math.PI);
    } else {
      push(symbol(PI));
    }
    divide();
    if (DEBUG_CLOCKFORM) {
      console.log("clockform: divide : " + stack[tos - 1]);
    }
    list(3);
    if (DEBUG_CLOCKFORM) {
      console.log("clockform: power : " + stack[tos - 1]);
    }
    multiply();
    if (DEBUG_CLOCKFORM) {
      console.log("clockform: multiply : " + stack[tos - 1]);
    }
    //else
    /*
    p1 = pop()
    push(p1)
    abs()
    push(symbol(E))
    push(p1)
    arg()
    push(imaginaryunit)
    multiply()
    power()
    multiply()
    */
    //endif
    return restore();
  };

  /* coeff =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  p,x,n
   General description
  -------------------
  Returns the coefficient of x^n in polynomial p. The x argument can be omitted for polynomials in x.
   */
  //define P p1
  //define X p2
  //define N p3
  Eval_coeff = function Eval_coeff() {
    push(cadr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    push(cadddr(p1));
    Eval();
    p3 = pop();
    p2 = pop();
    p1 = pop();
    if (p3 === symbol(NIL)) {
      // p3 is N  # only 2 args?
      p3 = p2;
      p2 = symbol(SYMBOL_X); // p2 is X
    }

    push(p1);
    push(p2);
    push(p3);
    power();
    divide();
    push(p2);
    return filter();
  };

  //-----------------------------------------------------------------------------

  //  Put polynomial coefficients on the stack

  //  Input:  as per params

  //  Output:    Returns number of coefficients on stack

  //      tos-n    Coefficient of x^0

  //      tos-1    Coefficient of x^(n-1)

  //-----------------------------------------------------------------------------
  coeff = function coeff(variable, polynomial) {
    var coeffsCount, constant, polynomialWithoutConstant, prev_expanding;
    if (DEBUG) {
      console.log("coeff: " + variable + " " + polynomial);
    }
    // works like this:
    //   1) find the constant (by just evaluating the pol setting the variable to zero)
    //   2) set aside the found constant: it's one of the coefficients to return
    //   3) take the polynomial and remove the constant
    //   4) divide that by variable, lowering the degree by one
    //   5) go back to 1) until degree is zero
    coeffsCount = 0;
    while (true) {
      push(polynomial);
      push(variable);
      push(zero);
      _subst();
      Eval();
      constant = pop();

      // this will be a coefficient that will be returned
      push(constant);
      coeffsCount++;
      push(polynomial);
      push(constant);
      subtract();
      polynomialWithoutConstant = pop();
      if (equal(polynomialWithoutConstant, zero)) {
        if (DEBUG) {
          console.log("coeff: result: " + coeffsCount);
        }
        return coeffsCount;
      }
      push(polynomialWithoutConstant);
      push(variable);
      prev_expanding = expanding;
      expanding = 1;
      divide();
      expanding = prev_expanding;
      //console.log("just divided: " + stack[tos-1].toString())
      // this is now the new polynomial with degree decreased by 1
      polynomial = pop();
    }
  };
  Eval_cofactor = function Eval_cofactor() {
    var doNothing, i, j, n;
    i = 0;
    j = 0;
    n = 0;
    push(cadr(p1));
    Eval();
    p2 = pop();
    if (istensor(p2) && p2.tensor.ndim === 2 && p2.tensor.dim[0] === p2.tensor.dim[1]) {
      doNothing = 1;
    } else {
      stop("cofactor: 1st arg: square matrix expected");
    }
    n = p2.tensor.dim[0];
    push(caddr(p1));
    Eval();
    i = pop_integer();
    if (i < 1 || i > n) {
      stop("cofactor: 2nd arg: row index expected");
    }
    push(cadddr(p1));
    Eval();
    j = pop_integer();
    if (j < 1 || j > n) {
      stop("cofactor: 3rd arg: column index expected");
    }
    return cofactor(p2, n, i - 1, j - 1);
  };
  cofactor = function cofactor(p, n, row, col) {
    var i, i1, j, o, ref, ref1;
    i = 0;
    j = 0;
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      for (j = i1 = 0, ref1 = n; 0 <= ref1 ? i1 < ref1 : i1 > ref1; j = 0 <= ref1 ? ++i1 : --i1) {
        if (i !== row && j !== col) {
          push(p.tensor.elem[n * i + j]);
        }
      }
    }
    determinant(n - 1);
    if ((row + col) % 2) {
      return negate();
    }
  };

  // Condense an expression by factoring common terms.
  Eval_condense = function Eval_condense() {
    push(cadr(p1));
    Eval();
    return Condense();
  };
  Condense = function Condense() {
    var prev_expanding;
    prev_expanding = expanding;
    expanding = 0;
    save();
    yycondense();
    restore();
    return expanding = prev_expanding;
  };
  yycondense = function yycondense() {
    //expanding = 0
    p1 = pop();
    if (car(p1) !== symbol(ADD)) {
      push(p1);
      return;
    }
    // get gcd of all terms
    p3 = cdr(p1);
    push(car(p3));
    p3 = cdr(p3);
    while (iscons(p3)) {
      push(car(p3));
      if (DEBUG) {
        console.log("calculating gcd between: " + stack[tos - 1] + " and " + stack[tos - 2]);
      }
      gcd();
      if (DEBUG) {
        console.log("partial gcd: " + stack[tos - 1]);
      }
      p3 = cdr(p3);
    }
    if (DEBUG) {
      console.log("condense: this is the gcd of all the terms: " + stack[tos - 1]);
    }
    // divide each term by gcd
    inverse();
    p2 = pop();
    push(zero);
    p3 = cdr(p1);
    while (iscons(p3)) {
      push(p2);
      push(car(p3));
      //multiply()
      multiply_noexpand();
      add();
      p3 = cdr(p3);
    }
    // We multiplied above w/o expanding so some factors cancelled.

    // Now we expand which normalizes the result and, in some cases,
    // simplifies it too (see test case H).
    yyexpand();
    // multiply result by gcd
    push(p2);
    return divide();
  };
  Eval_conj = function Eval_conj() {
    push(cadr(p1));
    Eval();
    p1 = pop();
    push(p1);
    if (!_Find(p1, imaginaryunit)) {
      // example: (-1)^(1/3)
      polar();
      conjugate();
      return clockform();
    } else {
      return conjugate();
    }
  };

  // careful is you pass this one an expression with
  // i (instead of (-1)^(1/2)) then this doesn't work!
  conjugate = function conjugate() {
    push(imaginaryunit);
    push(imaginaryunit);
    negate();
    _subst();
    return Eval();
  };

  // Cons two things on the stack.
  consCount = 0;
  cons = function cons() {
    var p;
    consCount++;
    if (DEBUG) {
      console.log("cons tos: " + tos + " # " + consCount);
    }
    //if consCount == 444
    //  debugger
    // auto var ok, no opportunity for garbage collection after p = alloc()
    p = new U();
    p.k = CONS;
    p.cons.cdr = pop();
    if (p === p.cons.cdr) {
      debugger;
      console.log("something wrong p == its cdr");
    }
    p.cons.car = pop();
    /*
    console.log "cons new cdr.k = " + p.cons.cdr.k + "\nor more in detail:"
    console.log print_list p.cons.cdr
    console.log "cons new car.k = " + p.cons.car.k + "\nor more in detail:"
    console.log print_list p.cons.car
    */
    return push(p);
  };
  Eval_contract = function Eval_contract() {
    push(cadr(p1));
    Eval();
    if (cddr(p1) === symbol(NIL)) {
      push_integer(1);
      push_integer(2);
    } else {
      push(caddr(p1));
      Eval();
      push(cadddr(p1));
      Eval();
    }
    return contract();
  };
  contract = function contract() {
    save();
    yycontract();
    return restore();
  };
  yycontract = function yycontract() {
    var a, ai, an, b, h, i, i1, j, j1, k, l, l1, m, m1, n, n1, ndim, nelem, o, o1, ref, ref1, ref2, ref3, ref4, ref5, ref6;
    h = 0;
    i = 0;
    j = 0;
    k = 0;
    l = 0;
    m = 0;
    n = 0;
    ndim = 0;
    nelem = 0;
    ai = [];
    an = [];
    p3 = pop();
    p2 = pop();
    p1 = pop();
    if (!istensor(p1)) {
      if (!isZeroAtomOrTensor(p1)) {
        stop("contract: tensor expected, 1st arg is not a tensor");
      }
      push(zero);
      return;
    }
    push(p2);
    l = pop_integer();
    push(p3);
    m = pop_integer();
    ndim = p1.tensor.ndim;
    if (l < 1 || l > ndim || m < 1 || m > ndim || l === m || p1.tensor.dim[l - 1] !== p1.tensor.dim[m - 1]) {
      stop("contract: index out of range");
    }
    l--;
    m--;
    n = p1.tensor.dim[l];
    // nelem is the number of elements in "b"
    nelem = 1;
    for (i = o = 0, ref = ndim; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      if (i !== l && i !== m) {
        nelem *= p1.tensor.dim[i];
      }
    }
    //console.log "nelem:" + nelem
    p2 = alloc_tensor(nelem);
    //console.log "p2:" + p2
    p2.tensor.ndim = ndim - 2;
    j = 0;
    for (i = i1 = 0, ref1 = ndim; 0 <= ref1 ? i1 < ref1 : i1 > ref1; i = 0 <= ref1 ? ++i1 : --i1) {
      if (i !== l && i !== m) {
        p2.tensor.dim[j++] = p1.tensor.dim[i];
      }
    }
    a = p1.tensor.elem;
    b = p2.tensor.elem;
    //console.log "a: " + a
    //console.log "b: " + b
    for (i = j1 = 0, ref2 = ndim; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
      ai[i] = 0;
      an[i] = p1.tensor.dim[i];
    }
    for (i = l1 = 0, ref3 = nelem; 0 <= ref3 ? l1 < ref3 : l1 > ref3; i = 0 <= ref3 ? ++l1 : --l1) {
      push(zero);
      for (j = m1 = 0, ref4 = n; 0 <= ref4 ? m1 < ref4 : m1 > ref4; j = 0 <= ref4 ? ++m1 : --m1) {
        ai[l] = j;
        ai[m] = j;
        h = 0;
        for (k = n1 = 0, ref5 = ndim; 0 <= ref5 ? n1 < ref5 : n1 > ref5; k = 0 <= ref5 ? ++n1 : --n1) {
          h = h * an[k] + ai[k];
        }
        push(a[h]);
        //console.log "a[h]: " + a[h]
        add();
      }
      //console.log "tos: " + stack[tos-1]
      b[i] = pop();
      //console.log "b[i]: " + b[i]
      for (j = o1 = ref6 = ndim - 1; ref6 <= 0 ? o1 <= 0 : o1 >= 0; j = ref6 <= 0 ? ++o1 : --o1) {
        if (j === l || j === m) {
          continue;
        }
        if (++ai[j] < an[j]) {
          break;
        }
        ai[j] = 0;
      }
    }
    if (nelem === 1) {
      return push(b[0]);
    } else {
      return push(p2);
    }
  };

  //console.log "returning: " + stack[tos-1]
  /* cos =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  x
   General description
  -------------------
  Returns the cosine of x.
   */
  Eval_cos = function Eval_cos() {
    push(cadr(p1));
    Eval();
    return cosine();
  };
  cosine = function cosine() {
    save();
    p1 = pop();
    if (car(p1) === symbol(ADD)) {
      cosine_of_angle_sum();
    } else {
      cosine_of_angle();
    }
    return restore();
  };

  // Use angle sum formula for special angles.

  //define A p3
  //define B p4
  cosine_of_angle_sum = function cosine_of_angle_sum() {
    p2 = cdr(p1);
    while (iscons(p2)) {
      p4 = car(p2);
      if (isnpi(p4)) {
        // p4 is B
        push(p1);
        push(p4);
        subtract();
        p3 = pop();
        push(p3);
        cosine();
        push(p4);
        cosine();
        multiply();
        push(p3);
        sine();
        push(p4);
        sine();
        multiply();
        subtract();
        return;
      }
      p2 = cdr(p2);
    }
    return cosine_of_angle();
  };
  cosine_of_angle = function cosine_of_angle() {
    var d, n;
    if (car(p1) === symbol(ARCCOS)) {
      push(cadr(p1));
      return;
    }
    if (isdouble(p1)) {
      d = Math.cos(p1.d);
      if (Math.abs(d) < 1e-10) {
        d = 0.0;
      }
      push_double(d);
      return;
    }
    // cosine function is symmetric, cos(-x) = cos(x)
    if (isnegative(p1)) {
      push(p1);
      negate();
      p1 = pop();
    }
    // cos(arctan(x)) = 1 / sqrt(1 + x^2)

    // see p. 173 of the CRC Handbook of Mathematical Sciences
    if (car(p1) === symbol(ARCTAN)) {
      push_integer(1);
      push(cadr(p1));
      push_integer(2);
      power();
      add();
      push_rational(-1, 2);
      power();
      return;
    }
    // multiply by 180/pi to go from radians to degrees.
    // we go from radians to degrees because it's much
    // easier to calculate symbolic results of most (not all) "classic"
    // angles (e.g. 30,45,60...) if we calculate the degrees
    // and the we do a switch on that.
    // Alternatively, we could look at the fraction of pi
    // (e.g. 60 degrees is 1/3 pi) but that's more
    // convoluted as we'd need to look at both numerator and
    // denominator.
    push(p1);
    push_integer(180);
    multiply();
    if (evaluatingAsFloats) {
      push_double(Math.PI);
    } else {
      push_symbol(PI);
    }
    divide();
    n = pop_integer();
    // most "good" (i.e. compact) trigonometric results
    // happen for a round number of degrees. There are some exceptions
    // though, e.g. 22.5 degrees, which we don't capture here.
    if (n < 0 || isNaN(n)) {
      push(symbol(COS));
      push(p1);
      list(2);
      return;
    }
    switch (n % 360) {
      case 90:
      case 270:
        return push_integer(0);
      case 60:
      case 300:
        return push_rational(1, 2);
      case 120:
      case 240:
        return push_rational(-1, 2);
      case 45:
      case 315:
        push_rational(1, 2);
        push_integer(2);
        push_rational(1, 2);
        power();
        return multiply();
      case 135:
      case 225:
        push_rational(-1, 2);
        push_integer(2);
        push_rational(1, 2);
        power();
        return multiply();
      case 30:
      case 330:
        push_rational(1, 2);
        push_integer(3);
        push_rational(1, 2);
        power();
        return multiply();
      case 150:
      case 210:
        push_rational(-1, 2);
        push_integer(3);
        push_rational(1, 2);
        power();
        return multiply();
      case 0:
        return push_integer(1);
      case 180:
        return push_integer(-1);
      default:
        push(symbol(COS));
        push(p1);
        return list(2);
    }
  };
  Eval_cosh = function Eval_cosh() {
    push(cadr(p1));
    Eval();
    return ycosh();
  };
  ycosh = function ycosh() {
    save();
    yycosh();
    return restore();
  };
  yycosh = function yycosh() {
    var d;
    d = 0.0;
    p1 = pop();
    if (car(p1) === symbol(ARCCOSH)) {
      push(cadr(p1));
      return;
    }
    if (isdouble(p1)) {
      d = Math.cosh(p1.d);
      if (Math.abs(d) < 1e-10) {
        d = 0.0;
      }
      push_double(d);
      return;
    }
    if (isZeroAtomOrTensor(p1)) {
      push(one);
      return;
    }
    push_symbol(COSH);
    push(p1);
    return list(2);
  };

  // this function extract parts subtrees from a tree.
  // It is used in two
  // places that have to do with pattern matching.
  // One is for integrals, where an expression or its
  // subparts are matched against cases in an
  // integrals table.
  // Another one is for applyging tranformation patterns
  // defined via PATTERN, again patterns are applied to
  // either the whole expression or any of its parts.

  // unclear to me at the moment
  // why this is exposed as something that can
  // be evalled. Never called.
  Eval_decomp = function Eval_decomp() {
    var h;
    save();
    console.log("Eval_decomp is being called!!!!!!!!!!!!!!!!!!!!");
    h = tos;
    push(symbol(NIL));
    push(cadr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    p1 = pop();
    if (p1 === symbol(NIL)) {
      guess();
    } else {
      push(p1);
    }
    _decomp(false);
    list(tos - h);
    return restore();
  };
  pushTryNotToDuplicate = function pushTryNotToDuplicate(toBePushed) {
    if (tos > 0) {
      if (DEBUG) {
        console.log("comparing " + toBePushed + " to: " + stack[tos - 1]);
      }
      if (equal(toBePushed, stack[tos - 1])) {
        if (DEBUG) {
          console.log("skipping " + toBePushed + " because it's already on stack ");
        }
        return;
      }
    }
    return push(toBePushed);
  };

  // returns constant expressions on the stack
  _decomp = function decomp(generalTransform) {
    save();
    p2 = pop();
    p1 = pop();
    if (DEBUG) {
      console.log("DECOMPOSING " + p1);
    }
    // is the entire expression constant?
    if (generalTransform) {
      if (!iscons(p1)) {
        if (DEBUG) {
          console.log(" ground thing: " + p1);
        }
        pushTryNotToDuplicate(p1);
        restore();
        return;
      }
    } else {
      if (_Find(p1, p2) === 0) {
        if (DEBUG) {
          console.log(" entire expression is constant");
        }
        pushTryNotToDuplicate(p1);
        //push(p1);  # may need later for pushing both +a, -a
        //negate()
        restore();
        return;
      }
    }
    // sum?
    if (isadd(p1)) {
      decomp_sum(generalTransform);
      restore();
      return;
    }
    // product?
    if (ismultiply(p1)) {
      decomp_product(generalTransform);
      restore();
      return;
    }
    // naive decomp if not sum or product
    if (DEBUG) {
      console.log(" naive decomp");
    }
    p3 = cdr(p1);
    if (DEBUG) {
      console.log("startig p3: " + p3);
    }
    while (iscons(p3)) {
      // for a general transformations,
      // we want to match any part of the tree so
      // we need to push the subtree as well
      // as recurse to its parts
      if (generalTransform) {
        push(car(p3));
      }
      if (DEBUG) {
        console.log("recursive decomposition");
      }
      push(car(p3));
      if (DEBUG) {
        console.log("car(p3): " + car(p3));
      }
      push(p2);
      if (DEBUG) {
        console.log("p2: " + p2);
      }
      _decomp(generalTransform);
      p3 = cdr(p3);
    }
    return restore();
  };
  decomp_sum = function decomp_sum(generalTransform) {
    var h;
    if (DEBUG) {
      console.log(" decomposing the sum ");
    }
    h = 0;
    // decomp terms involving x
    p3 = cdr(p1);
    while (iscons(p3)) {
      if (_Find(car(p3), p2) || generalTransform) {
        push(car(p3));
        push(p2);
        _decomp(generalTransform);
      }
      p3 = cdr(p3);
    }
    // add together all constant terms
    h = tos;
    p3 = cdr(p1);
    while (iscons(p3)) {
      if (_Find(car(p3), p2) === 0) {
        pushTryNotToDuplicate(car(p3));
      }
      p3 = cdr(p3);
    }
    if (tos - h) {
      add_all(tos - h);
      p3 = pop();
      pushTryNotToDuplicate(p3);
      push(p3);
      return negate(); // need both +a, -a for some integrals
    }
  };

  decomp_product = function decomp_product(generalTransform) {
    var h;
    if (DEBUG) {
      console.log(" decomposing the product ");
    }
    h = 0;
    // decomp factors involving x
    p3 = cdr(p1);
    while (iscons(p3)) {
      if (_Find(car(p3), p2) || generalTransform) {
        push(car(p3));
        push(p2);
        _decomp(generalTransform);
      }
      p3 = cdr(p3);
    }
    // multiply together all constant factors
    h = tos;
    p3 = cdr(p1);
    while (iscons(p3)) {
      if (_Find(car(p3), p2) === 0) {
        pushTryNotToDuplicate(car(p3));
      }
      p3 = cdr(p3);
    }
    if (tos - h) {
      return multiply_all(tos - h);
    }
  };

  //p3 = pop();  # may need later for pushing both +a, -a
  //push(p3)
  //push(p3)
  //negate()
  // Store a function definition

  // Example:

  //      f(x,y)=x^y

  // For this definition, p1 points to the following structure.

  //     p1
  //      |
  //   ___v__    ______                        ______ 
  //  |CONS  |->|CONS  |--------------------->|CONS  |
  //  |______|  |______|                      |______|
  //      |         |                             |
  //   ___v__    ___v__    ______    ______    ___v__    ______    ______
  //  |SETQ  |  |CONS  |->|CONS  |->|CONS  |  |CONS  |->|CONS  |->|CONS  |
  //  |______|  |______|  |______|  |______|  |______|  |______|  |______|
  //                |         |         |         |         |         |
  //             ___v__    ___v__    ___v__    ___v__    ___v__    ___v__
  //            |SYM f |  |SYM x |  |SYM y |  |POWER |  |SYM x |  |SYM y |
  //            |______|  |______|  |______|  |______|  |______|  |______|

  // the result (in f) is a FUNCTION node
  // that contains both the body and the argument list.

  // We have

  //  caadr(p1) points to the function name i.e. f
  //  cdadr(p1) points to the arguments i.e. the list (x y)
  //  caddr(p1) points to the function body i.e. (power x y)

  //define F p3 # F points to the function name
  //define A p4 # A points to the argument list
  //define B p5 # B points to the function body
  define_user_function = function define_user_function() {
    p3 = caadr(p1);
    p4 = cdadr(p1);
    p5 = caddr(p1);
    if (!issymbol(p3)) {
      // p3 is F
      stop("function name?");
    }
    // evaluate function body (maybe)
    if (car(p5) === symbol(EVAL)) {
      // p5 is B
      push(cadr(p5));
      Eval();
      p5 = pop(); // p5 is B
    }

    // note how, unless explicitly forced by an eval,
    // (handled by the if just above)
    // we don't eval/simplify
    // the body.
    // Why? because it's the easiest way
    // to solve scope problems i.e.
    //   x = 0
    //   f(x) = x + 1
    //   f(4) # would reply 1
    // which would need to otherwise
    // be solved by some scope device
    // somehow
    push_symbol(FUNCTION);
    push(p5);
    push(p4);
    list(3);
    p5 = pop();
    set_binding(p3, p5);
    return push_symbol(NIL);
  };
  Eval_function_reference = function Eval_function_reference() {
    return push(p1);
  };

  /* defint =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  f,x,a,b[,y,c,d...]
   General description
  -------------------
  Returns the definite integral of f with respect to x evaluated from "a" to b.
  The argument list can be extended for multiple integrals (or "iterated
  integrals"), for example a double integral (which can represent for
  example a volume under a surface), or a triple integral, etc. For
  example, defint(f,x,a,b,y,c,d).
   */
  //define F p2
  //define X p3
  //define A p4
  //define B p5
  Eval_defint = function Eval_defint() {
    push(cadr(p1));
    Eval();
    p2 = pop(); // p2 is F
    p1 = cddr(p1);
    // defint can handle multiple
    // integrals, so we loop over the
    // multiple integrals here
    while (iscons(p1)) {
      push(car(p1));
      p1 = cdr(p1);
      Eval();
      p3 = pop(); // p3 is X
      push(car(p1));
      p1 = cdr(p1);
      Eval();
      p4 = pop(); // p4 is A
      push(car(p1));
      p1 = cdr(p1);
      Eval();
      p5 = pop(); // p5 is B

      // obtain the primitive of F against the
      // specified variable X
      // note that the primitive changes over
      // the calculation of the multiple
      // integrals.
      push(p2);
      push(p3);
      integral();
      p2 = pop(); // contains the antiderivative of F

      // evaluate the integral in A
      push(p2);
      push(p3);
      push(p5);
      _subst();
      Eval();
      // evaluate the integral in B
      push(p2);
      push(p3);
      push(p4);
      _subst();
      Eval();
      // integral between B and A is the
      // subtraction. Note that this could
      // be a number but also a function.
      // and we might have to integrate this
      // number/function again doing the while
      // loop again if this is a multiple
      // integral.
      subtract();
      p2 = pop();
    }
    return push(p2);
  };
  Eval_degree = function Eval_degree() {
    push(cadr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    p1 = pop();
    if (p1 === symbol(NIL)) {
      guess();
    } else {
      push(p1);
    }
    return degree();
  };

  //-----------------------------------------------------------------------------

  //  Find the degree of a polynomial

  //  Input:    tos-2    p(x)

  //      tos-1    x

  //  Output:    Result on stack

  //  Note: Finds the largest numerical power of x. Does not check for
  //  weirdness in p(x).

  //-----------------------------------------------------------------------------

  //define POLY p1
  //define X p2
  //define DEGREE p3
  degree = function degree() {
    save();
    p2 = pop();
    p1 = pop();
    p3 = zero;
    _yydegree(p1);
    push(p3);
    return restore();
  };
  _yydegree = function yydegree(p) {
    var results;
    if (equal(p, p2)) {
      if (isZeroAtomOrTensor(p3)) {
        return p3 = one;
      }
    } else if (car(p) === symbol(POWER)) {
      if (equal(cadr(p), p2) && isNumericAtom(caddr(p)) && lessp(p3, caddr(p))) {
        return p3 = caddr(p);
      }
    } else if (iscons(p)) {
      p = cdr(p);
      results = [];
      while (iscons(p)) {
        _yydegree(car(p));
        results.push(p = cdr(p));
      }
      return results;
    }
  };
  Eval_denominator = function Eval_denominator() {
    push(cadr(p1));
    Eval();
    return _denominator();
  };
  _denominator = function denominator() {
    var h, theArgument;
    h = 0;
    theArgument = pop();
    //console.trace "denominator of: " + theArgument
    if (car(theArgument) === symbol(ADD)) {
      push(theArgument);
      rationalize();
      theArgument = pop();
    }
    if (car(theArgument) === symbol(MULTIPLY) && !isplusone(car(cdr(theArgument)))) {
      h = tos;
      theArgument = cdr(theArgument);
      while (iscons(theArgument)) {
        push(car(theArgument));
        _denominator();
        theArgument = cdr(theArgument);
      }
      return multiply_all(tos - h);
    } else if (isrational(theArgument)) {
      push(theArgument);
      return mp_denominator();
    } else if (car(theArgument) === symbol(POWER) && isnegativeterm(caddr(theArgument))) {
      push(theArgument);
      return reciprocate();
    } else {
      return push(one);
    }
  };

  // derivative

  //define F p3
  //define X p4
  //define N p5
  Eval_derivative = function Eval_derivative() {
    var doNothing, i, i1, n, o, ref, ref1;
    // evaluate 1st arg to get function F
    i = 0;
    p1 = cdr(p1);
    push(car(p1));
    Eval();
    // evaluate 2nd arg and then...

    // example  result of 2nd arg  what to do

    // d(f)    nil      guess X, N = nil
    // d(f,2)  2      guess X, N = 2
    // d(f,x)  x      X = x, N = nil
    // d(f,x,2)  x      X = x, N = 2
    // d(f,x,y)  x      X = x, N = y
    p1 = cdr(p1);
    push(car(p1));
    Eval();
    p2 = pop();
    if (p2 === symbol(NIL)) {
      guess();
      push(symbol(NIL));
    } else if (isNumericAtom(p2)) {
      guess();
      push(p2);
    } else {
      push(p2);
      p1 = cdr(p1);
      push(car(p1));
      Eval();
    }
    p5 = pop();
    p4 = pop();
    p3 = pop();
    while (1) {
      // p5 (N) might be a symbol instead of a number
      if (isNumericAtom(p5)) {
        // p5 is N
        push(p5);
        n = pop_integer();
        if (isNaN(n)) {
          stop("nth derivative: check n");
        }
      } else {
        n = 1;
      }
      push(p3);
      if (n >= 0) {
        for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
          push(p4);
          derivative();
        }
      } else {
        n = -n;
        for (i = i1 = 0, ref1 = n; 0 <= ref1 ? i1 < ref1 : i1 > ref1; i = 0 <= ref1 ? ++i1 : --i1) {
          push(p4);
          integral();
        }
      }
      p3 = pop();
      if (p5 === symbol(NIL)) {
        // p5 is N
        break;
      }
      // otherwise...

      // N    arg1    what to do

      // number  nil    break
      // number  number    N = arg1, continue
      // number  symbol    X = arg1, N = arg2, continue

      // symbol  nil    X = N, N = nil, continue
      // symbol  number    X = N, N = arg1, continue
      // symbol  symbol    X = N, N = arg1, continue
      if (isNumericAtom(p5)) {
        // p5 is N
        p1 = cdr(p1);
        push(car(p1));
        Eval();
        p5 = pop();
        if (p5 === symbol(NIL)) {
          // p5 is N
          break; // arglist exhausted
        }

        if (isNumericAtom(p5)) {
          // p5 is N
          doNothing = 1; // N = arg1
        } else {
          p4 = p5;
          p1 = cdr(p1);
          push(car(p1));
          Eval();
          p5 = pop(); // p5 is N  # N = arg2
        }
      } else {
        p4 = p5;
        p1 = cdr(p1);
        push(car(p1));
        Eval();
        p5 = pop(); // p5 is N  # N = arg1
      }
    }

    return push(p3); // p3 is F # final result
  };

  derivative = function derivative() {
    save();
    p2 = pop();
    p1 = pop();
    if (isNumericAtom(p2)) {
      stop("undefined function");
    }
    if (istensor(p1)) {
      if (istensor(p2)) {
        d_tensor_tensor();
      } else {
        d_tensor_scalar();
      }
    } else {
      if (istensor(p2)) {
        d_scalar_tensor();
      } else {
        d_scalar_scalar();
      }
    }
    return restore();
  };
  d_scalar_scalar = function d_scalar_scalar() {
    if (issymbol(p2)) {
      return d_scalar_scalar_1();
    } else {
      // Example: d(sin(cos(x)),cos(x))
      // Replace cos(x) <- X, find derivative, then do X <- cos(x)
      push(p1);
      push(p2);
      push(symbol(SECRETX));
      _subst();
      push(symbol(SECRETX));
      derivative();
      push(symbol(SECRETX));
      push(p2);
      return _subst(); // cos(X) -> cos(cos(x))
    }
  };

  d_scalar_scalar_1 = function d_scalar_scalar_1() {
    // d(x,x)?
    if (equal(p1, p2)) {
      push(one);
      return;
    }
    if (!iscons(p1)) {
      push(zero);
      return;
    }
    if (isadd(p1)) {
      dsum();
      return;
    }
    if (car(p1) === symbol(MULTIPLY)) {
      dproduct();
      return;
    }
    if (car(p1) === symbol(POWER)) {
      dpower();
      return;
    }
    if (car(p1) === symbol(DERIVATIVE)) {
      dd();
      return;
    }
    if (car(p1) === symbol(LOG)) {
      dlog();
      return;
    }
    if (car(p1) === symbol(SIN)) {
      dsin();
      return;
    }
    if (car(p1) === symbol(COS)) {
      dcos();
      return;
    }
    if (car(p1) === symbol(TAN)) {
      dtan();
      return;
    }
    if (car(p1) === symbol(ARCSIN)) {
      darcsin();
      return;
    }
    if (car(p1) === symbol(ARCCOS)) {
      darccos();
      return;
    }
    if (car(p1) === symbol(ARCTAN)) {
      darctan();
      return;
    }
    if (car(p1) === symbol(SINH)) {
      dsinh();
      return;
    }
    if (car(p1) === symbol(COSH)) {
      dcosh();
      return;
    }
    if (car(p1) === symbol(TANH)) {
      dtanh();
      return;
    }
    if (car(p1) === symbol(ARCSINH)) {
      darcsinh();
      return;
    }
    if (car(p1) === symbol(ARCCOSH)) {
      darccosh();
      return;
    }
    if (car(p1) === symbol(ARCTANH)) {
      darctanh();
      return;
    }
    if (car(p1) === symbol(ABS)) {
      dabs();
      return;
    }
    if (car(p1) === symbol(SGN)) {
      dsgn();
      return;
    }
    if (car(p1) === symbol(HERMITE)) {
      dhermite();
      return;
    }
    if (car(p1) === symbol(ERF)) {
      derf();
      return;
    }
    if (car(p1) === symbol(ERFC)) {
      derfc();
      return;
    }
    if (car(p1) === symbol(BESSELJ)) {
      if (isZeroAtomOrTensor(caddr(p1))) {
        dbesselj0();
      } else {
        dbesseljn();
      }
      return;
    }
    if (car(p1) === symbol(BESSELY)) {
      if (isZeroAtomOrTensor(caddr(p1))) {
        dbessely0();
      } else {
        dbesselyn();
      }
      return;
    }
    if (car(p1) === symbol(INTEGRAL) && caddr(p1) === p2) {
      derivative_of_integral();
      return;
    }
    return dfunction();
  };
  dsum = function dsum() {
    var h;
    h = tos;
    p1 = cdr(p1);
    while (iscons(p1)) {
      push(car(p1));
      push(p2);
      derivative();
      p1 = cdr(p1);
    }
    return add_all(tos - h);
  };
  dproduct = function dproduct() {
    var i, i1, j, n, o, ref, ref1;
    i = 0;
    j = 0;
    n = 0;
    n = length(p1) - 1;
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      p3 = cdr(p1);
      for (j = i1 = 0, ref1 = n; 0 <= ref1 ? i1 < ref1 : i1 > ref1; j = 0 <= ref1 ? ++i1 : --i1) {
        push(car(p3));
        if (i === j) {
          push(p2);
          derivative();
        }
        p3 = cdr(p3);
      }
      multiply_all(n);
    }
    return add_all(n);
  };

  //-----------------------------------------------------------------------------

  //       v
  //  y = u

  //  log y = v log u

  //  1 dy   v du           dv
  //  - -- = - -- + (log u) --
  //  y dx   u dx           dx

  //  dy    v  v du           dv
  //  -- = u  (- -- + (log u) --)
  //  dx       u dx           dx

  //-----------------------------------------------------------------------------
  dpower = function dpower() {
    push(caddr(p1));
    push(cadr(p1));
    divide();
    push(cadr(p1));
    push(p2);
    derivative();
    multiply();
    push(cadr(p1));
    logarithm();
    push(caddr(p1));
    push(p2);
    derivative();
    multiply();
    add();
    push(p1);
    return multiply();
  };
  dlog = function dlog() {
    push(cadr(p1));
    push(p2);
    derivative();
    push(cadr(p1));
    return divide();
  };

  //  derivative of derivative

  //  example: d(d(f(x,y),y),x)

  //  p1 = d(f(x,y),y)

  //  p2 = x

  //  cadr(p1) = f(x,y)

  //  caddr(p1) = y
  dd = function dd() {
    // d(f(x,y),x)
    push(cadr(p1));
    push(p2);
    derivative();
    p3 = pop();
    if (car(p3) === symbol(DERIVATIVE)) {
      // sort dx terms
      push_symbol(DERIVATIVE);
      push_symbol(DERIVATIVE);
      push(cadr(p3));
      if (lessp(caddr(p3), caddr(p1))) {
        push(caddr(p3));
        list(3);
        push(caddr(p1));
      } else {
        push(caddr(p1));
        list(3);
        push(caddr(p3));
      }
      return list(3);
    } else {
      push(p3);
      push(caddr(p1));
      return derivative();
    }
  };

  // derivative of a generic function
  dfunction = function dfunction() {
    p3 = cdr(p1);
    if (p3 === symbol(NIL) || _Find(p3, p2)) {
      push_symbol(DERIVATIVE);
      push(p1);
      push(p2);
      return list(3);
    } else {
      return push(zero);
    }
  };
  dsin = function dsin() {
    push(cadr(p1));
    push(p2);
    derivative();
    push(cadr(p1));
    cosine();
    return multiply();
  };
  dcos = function dcos() {
    push(cadr(p1));
    push(p2);
    derivative();
    push(cadr(p1));
    sine();
    multiply();
    return negate();
  };
  dtan = function dtan() {
    push(cadr(p1));
    push(p2);
    derivative();
    push(cadr(p1));
    cosine();
    push_integer(-2);
    power();
    return multiply();
  };
  darcsin = function darcsin() {
    push(cadr(p1));
    push(p2);
    derivative();
    push_integer(1);
    push(cadr(p1));
    push_integer(2);
    power();
    subtract();
    push_rational(-1, 2);
    power();
    return multiply();
  };
  darccos = function darccos() {
    push(cadr(p1));
    push(p2);
    derivative();
    push_integer(1);
    push(cadr(p1));
    push_integer(2);
    power();
    subtract();
    push_rational(-1, 2);
    power();
    multiply();
    return negate();
  };

  //        Without simplify  With simplify

  //  d(arctan(y/x),x)  -y/(x^2*(y^2/x^2+1))  -y/(x^2+y^2)

  //  d(arctan(y/x),y)  1/(x*(y^2/x^2+1))  x/(x^2+y^2)
  darctan = function darctan() {
    push(cadr(p1));
    push(p2);
    derivative();
    push_integer(1);
    push(cadr(p1));
    push_integer(2);
    power();
    add();
    inverse();
    multiply();
    return simplify();
  };
  dsinh = function dsinh() {
    push(cadr(p1));
    push(p2);
    derivative();
    push(cadr(p1));
    ycosh();
    return multiply();
  };
  dcosh = function dcosh() {
    push(cadr(p1));
    push(p2);
    derivative();
    push(cadr(p1));
    ysinh();
    return multiply();
  };
  dtanh = function dtanh() {
    push(cadr(p1));
    push(p2);
    derivative();
    push(cadr(p1));
    ycosh();
    push_integer(-2);
    power();
    return multiply();
  };
  darcsinh = function darcsinh() {
    push(cadr(p1));
    push(p2);
    derivative();
    push(cadr(p1));
    push_integer(2);
    power();
    push_integer(1);
    add();
    push_rational(-1, 2);
    power();
    return multiply();
  };
  darccosh = function darccosh() {
    push(cadr(p1));
    push(p2);
    derivative();
    push(cadr(p1));
    push_integer(2);
    power();
    push_integer(-1);
    add();
    push_rational(-1, 2);
    power();
    return multiply();
  };
  darctanh = function darctanh() {
    push(cadr(p1));
    push(p2);
    derivative();
    push_integer(1);
    push(cadr(p1));
    push_integer(2);
    power();
    subtract();
    inverse();
    return multiply();
  };
  dabs = function dabs() {
    push(cadr(p1));
    push(p2);
    derivative();
    push(cadr(p1));
    sgn();
    return multiply();
  };
  dsgn = function dsgn() {
    push(cadr(p1));
    push(p2);
    derivative();
    push(cadr(p1));
    dirac();
    multiply();
    push_integer(2);
    return multiply();
  };
  dhermite = function dhermite() {
    push(cadr(p1));
    push(p2);
    derivative();
    push_integer(2);
    push(caddr(p1));
    multiply();
    multiply();
    push(cadr(p1));
    push(caddr(p1));
    push_integer(-1);
    add();
    hermite();
    return multiply();
  };
  derf = function derf() {
    push(cadr(p1));
    push_integer(2);
    power();
    push_integer(-1);
    multiply();
    exponential();
    if (evaluatingAsFloats) {
      push_double(Math.PI);
    } else {
      push_symbol(PI);
    }
    push_rational(-1, 2);
    power();
    multiply();
    push_integer(2);
    multiply();
    push(cadr(p1));
    push(p2);
    derivative();
    return multiply();
  };
  derfc = function derfc() {
    push(cadr(p1));
    push_integer(2);
    power();
    push_integer(-1);
    multiply();
    exponential();
    if (evaluatingAsFloats) {
      push_double(Math.PI);
    } else {
      push_symbol(PI);
    }
    push_rational(-1, 2);
    power();
    multiply();
    push_integer(-2);
    multiply();
    push(cadr(p1));
    push(p2);
    derivative();
    return multiply();
  };
  dbesselj0 = function dbesselj0() {
    push(cadr(p1));
    push(p2);
    derivative();
    push(cadr(p1));
    push_integer(1);
    besselj();
    multiply();
    push_integer(-1);
    return multiply();
  };
  dbesseljn = function dbesseljn() {
    push(cadr(p1));
    push(p2);
    derivative();
    push(cadr(p1));
    push(caddr(p1));
    push_integer(-1);
    add();
    besselj();
    push(caddr(p1));
    push_integer(-1);
    multiply();
    push(cadr(p1));
    divide();
    push(cadr(p1));
    push(caddr(p1));
    besselj();
    multiply();
    add();
    return multiply();
  };
  dbessely0 = function dbessely0() {
    push(cadr(p1));
    push(p2);
    derivative();
    push(cadr(p1));
    push_integer(1);
    besselj();
    multiply();
    push_integer(-1);
    return multiply();
  };
  dbesselyn = function dbesselyn() {
    push(cadr(p1));
    push(p2);
    derivative();
    push(cadr(p1));
    push(caddr(p1));
    push_integer(-1);
    add();
    bessely();
    push(caddr(p1));
    push_integer(-1);
    multiply();
    push(cadr(p1));
    divide();
    push(cadr(p1));
    push(caddr(p1));
    bessely();
    multiply();
    add();
    return multiply();
  };
  derivative_of_integral = function derivative_of_integral() {
    return push(cadr(p1));
  };
  DET_check_arg = function DET_check_arg() {
    if (!istensor(p1)) {
      return 0;
    } else if (p1.tensor.ndim !== 2) {
      return 0;
    } else if (p1.tensor.dim[0] !== p1.tensor.dim[1]) {
      return 0;
    } else {
      return 1;
    }
  };
  det = function det() {
    var a, i, i1, n, o, ref, ref1;
    i = 0;
    n = 0;
    //U **a
    save();
    p1 = pop();
    if (DET_check_arg() === 0) {
      push_symbol(DET);
      push(p1);
      list(2);
      restore();
      return;
    }
    n = p1.tensor.nelem;
    a = p1.tensor.elem;
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      if (!isNumericAtom(a[i])) {
        break;
      }
    }
    if (i === n) {
      yydetg();
    } else {
      for (i = i1 = 0, ref1 = p1.tensor.nelem; 0 <= ref1 ? i1 < ref1 : i1 > ref1; i = 0 <= ref1 ? ++i1 : --i1) {
        push(p1.tensor.elem[i]);
      }
      determinant(p1.tensor.dim[0]);
    }
    return restore();
  };

  // determinant of n * n matrix elements on the stack
  determinant = function determinant(n) {
    var a, breakFromOutherWhile, h, i, i1, j, k, o, q, ref, ref1, s, sign_, t;
    h = 0;
    i = 0;
    j = 0;
    k = 0;
    q = 0;
    s = 0;
    sign_ = 0;
    t = 0;
    a = [];
    //int *a, *c, *d
    h = tos - n * n;
    //a = (int *) malloc(3 * n * sizeof (int))

    //if (a == NULL)
    //  out_of_memory()
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      a[i] = i;
      a[i + n] = 0;
      a[i + n + n] = 1;
    }
    sign_ = 1;
    push(zero);
    while (1) {
      if (sign_ === 1) {
        push_integer(1);
      } else {
        push_integer(-1);
      }
      for (i = i1 = 0, ref1 = n; 0 <= ref1 ? i1 < ref1 : i1 > ref1; i = 0 <= ref1 ? ++i1 : --i1) {
        k = n * a[i] + i;
        push(stack[h + k]);
        multiply(); // FIXME -- problem here
      }

      add();
      // next permutation (Knuth's algorithm P)
      j = n - 1;
      s = 0;
      breakFromOutherWhile = false;
      while (1) {
        q = a[n + j] + a[n + n + j];
        if (q < 0) {
          a[n + n + j] = -a[n + n + j];
          j--;
          continue;
        }
        if (q === j + 1) {
          if (j === 0) {
            breakFromOutherWhile = true;
            break;
          }
          s++;
          a[n + n + j] = -a[n + n + j];
          j--;
          continue;
        }
        break;
      }
      if (breakFromOutherWhile) {
        break;
      }
      t = a[j - a[n + j] + s];
      a[j - a[n + j] + s] = a[j - q + s];
      a[j - q + s] = t;
      a[n + j] = q;
      sign_ = -sign_;
    }
    stack[h] = stack[tos - 1];
    return moveTos(h + 1);
  };

  //-----------------------------------------------------------------------------

  //  Input:    Matrix on stack

  //  Output:    Determinant on stack

  //  Note:

  //  Uses Gaussian elimination which is faster for numerical matrices.

  //  Gaussian Elimination works by walking down the diagonal and clearing
  //  out the columns below it.

  //-----------------------------------------------------------------------------
  detg = function detg() {
    save();
    p1 = pop();
    if (DET_check_arg() === 0) {
      push_symbol(DET);
      push(p1);
      list(2);
      restore();
      return;
    }
    yydetg();
    return restore();
  };
  yydetg = function yydetg() {
    var i, n, o, ref;
    i = 0;
    n = 0;
    n = p1.tensor.dim[0];
    for (i = o = 0, ref = n * n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      push(p1.tensor.elem[i]);
    }
    lu_decomp(n);
    moveTos(tos - n * n);
    return push(p1);
  };

  //-----------------------------------------------------------------------------

  //  Input:    n * n matrix elements on stack

  //  Output:    p1  determinant

  //      p2  mangled

  //      upper diagonal matrix on stack

  //-----------------------------------------------------------------------------
  M = function M(h, n, i, j) {
    return stack[h + n * i + j];
  };
  setM = function setM(h, n, i, j, value) {
    return stack[h + n * i + j] = value;
  };
  lu_decomp = function lu_decomp(n) {
    var d, h, i, i1, j, j1, l1, m1, o, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8;
    d = 0;
    h = 0;
    i = 0;
    j = 0;
    h = tos - n * n;
    p1 = one;
    for (d = o = 0, ref = n - 1; 0 <= ref ? o < ref : o > ref; d = 0 <= ref ? ++o : --o) {
      // diagonal element zero?
      if (equal(M(h, n, d, d), zero)) {
        // find a new row
        for (i = i1 = ref1 = d + 1, ref2 = n; ref1 <= ref2 ? i1 < ref2 : i1 > ref2; i = ref1 <= ref2 ? ++i1 : --i1) {
          if (!equal(M(h, n, i, d), zero)) {
            break;
          }
        }
        if (i === n) {
          p1 = zero;
          break;
        }
        // exchange rows
        for (j = j1 = ref3 = d, ref4 = n; ref3 <= ref4 ? j1 < ref4 : j1 > ref4; j = ref3 <= ref4 ? ++j1 : --j1) {
          p2 = M(h, n, d, j);
          setM(h, n, d, j, M(h, n, i, j));
          setM(h, n, i, j, p2);
        }
        // negate det
        push(p1);
        negate();
        p1 = pop();
      }
      // update det
      push(p1);
      push(M(h, n, d, d));
      multiply();
      p1 = pop();
      // update lower diagonal matrix
      for (i = l1 = ref5 = d + 1, ref6 = n; ref5 <= ref6 ? l1 < ref6 : l1 > ref6; i = ref5 <= ref6 ? ++l1 : --l1) {
        // multiplier
        push(M(h, n, i, d));
        push(M(h, n, d, d));
        divide();
        negate();
        p2 = pop();
        // update one row
        setM(h, n, i, d, zero);
        for (j = m1 = ref7 = d + 1, ref8 = n; ref7 <= ref8 ? m1 < ref8 : m1 > ref8; j = ref7 <= ref8 ? ++m1 : --m1) {
          push(M(h, n, d, j));
          push(p2);
          multiply();
          push(M(h, n, i, j));
          add();
          setM(h, n, i, j, pop());
        }
      }
    }
    // last diagonal element
    push(p1);
    push(M(h, n, n - 1, n - 1));
    multiply();
    return p1 = pop();
  };

  //-----------------------------------------------------------------------------

  //  Author : philippe.billet@noos.fr

  //  Dirac function dirac(x)
  //  dirac(-x)=dirac(x)
  //  dirac(b-a)=dirac(a-b)
  //-----------------------------------------------------------------------------
  Eval_dirac = function Eval_dirac() {
    push(cadr(p1));
    Eval();
    return dirac();
  };
  dirac = function dirac() {
    save();
    ydirac();
    return restore();
  };

  //define p1 p1
  ydirac = function ydirac() {
    p1 = pop();
    if (isdouble(p1)) {
      if (p1.d === 0) {
        push_integer(1);
        return;
      } else {
        push_integer(0);
        return;
      }
    }
    if (isrational(p1)) {
      if (MZERO(mmul(p1.q.a, p1.q.b))) {
        push_integer(1);
        return;
      } else {
        push_integer(0);
        return;
      }
    }
    if (car(p1) === symbol(POWER)) {
      push_symbol(DIRAC);
      push(cadr(p1));
      list(2);
      return;
    }
    if (isnegativeterm(p1)) {
      push_symbol(DIRAC);
      push(p1);
      negate();
      list(2);
      return;
    }
    if (isnegativeterm(p1) || car(p1) === symbol(ADD) && isnegativeterm(cadr(p1))) {
      push(p1);
      negate();
      p1 = pop();
    }
    push_symbol(DIRAC);
    push(p1);
    return list(2);
  };

  //-----------------------------------------------------------------------------

  //  Generate all divisors of a term

  //  Input:    Term on stack (factor * factor * ...)

  //  Output:    Divisors on stack

  //-----------------------------------------------------------------------------
  divisors = function divisors() {
    var h, i, n, o, ref, subsetOfStack;
    i = 0;
    h = 0;
    n = 0;
    save();
    h = tos - 1;
    divisors_onstack();
    n = tos - h;
    //qsort(stack + h, n, sizeof (U *), __cmp)
    subsetOfStack = stack.slice(h, h + n);
    subsetOfStack.sort(_cmp_expr);
    stack = stack.slice(0, h).concat(subsetOfStack).concat(stack.slice(h + n));
    p1 = alloc_tensor(n);
    p1.tensor.ndim = 1;
    p1.tensor.dim[0] = n;
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      p1.tensor.elem[i] = stack[h + i];
    }
    moveTos(h);
    push(p1);
    return restore();
  };
  divisors_onstack = function divisors_onstack() {
    var h, i, k, n, o, ref;
    h = 0;
    i = 0;
    k = 0;
    n = 0;
    save();
    p1 = pop();
    h = tos;
    // push all of the term's factors
    if (isNumericAtom(p1)) {
      push(p1);
      factor_small_number();
    } else if (car(p1) === symbol(ADD)) {
      push(p1);
      __factor_add();
      //printf(">>>\n")
      //for (i = h; i < tos; i++)
      //print(stdout, stack[i])
      //printf("<<<\n")
    } else if (car(p1) === symbol(MULTIPLY)) {
      p1 = cdr(p1);
      if (isNumericAtom(car(p1))) {
        push(car(p1));
        factor_small_number();
        p1 = cdr(p1);
      }
      while (iscons(p1)) {
        p2 = car(p1);
        if (car(p2) === symbol(POWER)) {
          push(cadr(p2));
          push(caddr(p2));
        } else {
          push(p2);
          push(one);
        }
        p1 = cdr(p1);
      }
    } else if (car(p1) === symbol(POWER)) {
      push(cadr(p1));
      push(caddr(p1));
    } else {
      push(p1);
      push(one);
    }
    k = tos;
    // contruct divisors by recursive descent
    push(one);
    _gen(h, k);
    // move
    n = tos - k;
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      stack[h + i] = stack[k + i];
    }
    moveTos(h + n);
    return restore();
  };

  //-----------------------------------------------------------------------------

  //  Generate divisors

  //  Input:    Base-exponent pairs on stack

  //      h  first pair

  //      k  just past last pair

  //  Output:    Divisors on stack

  //  For example, factor list 2 2 3 1 results in 6 divisors,

  //    1
  //    3
  //    2
  //    6
  //    4
  //    12

  //-----------------------------------------------------------------------------

  //define ACCUM p1
  //define BASE p2
  //define EXPO p3
  _gen = function gen(h, k) {
    var expo, i, o, ref;
    expo = 0;
    i = 0;
    save();
    p1 = pop();
    if (h === k) {
      push(p1);
      restore();
      return;
    }
    p2 = stack[h + 0];
    p3 = stack[h + 1];
    push(p3);
    expo = pop_integer();
    if (!isNaN(expo)) {
      for (i = o = 0, ref = Math.abs(expo); 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {
        push(p1);
        push(p2);
        push_integer(sign(expo) * i);
        power();
        multiply();
        _gen(h + 2, k);
      }
    }
    return restore();
  };

  //-----------------------------------------------------------------------------

  //  Factor ADD expression

  //  Input:    Expression on stack

  //  Output:    Factors on stack

  //  Each factor consists of two expressions, the factor itself followed
  //  by the exponent.

  //-----------------------------------------------------------------------------
  __factor_add = function __factor_add() {
    save();
    p1 = pop();
    // get gcd of all terms
    p3 = cdr(p1);
    push(car(p3));
    p3 = cdr(p3);
    while (iscons(p3)) {
      push(car(p3));
      gcd();
      p3 = cdr(p3);
    }
    // check gcd
    p2 = pop();
    if (isplusone(p2)) {
      push(p1);
      push(one);
      restore();
      return;
    }
    // push factored gcd
    if (isNumericAtom(p2)) {
      push(p2);
      factor_small_number();
    } else if (car(p2) === symbol(MULTIPLY)) {
      p3 = cdr(p2);
      if (isNumericAtom(car(p3))) {
        push(car(p3));
        factor_small_number();
      } else {
        push(car(p3));
        push(one);
      }
      p3 = cdr(p3);
      while (iscons(p3)) {
        push(car(p3));
        push(one);
        p3 = cdr(p3);
      }
    } else {
      push(p2);
      push(one);
    }
    // divide each term by gcd
    push(p2);
    inverse();
    p2 = pop();
    push(zero);
    p3 = cdr(p1);
    while (iscons(p3)) {
      push(p2);
      push(car(p3));
      multiply();
      add();
      p3 = cdr(p3);
    }
    push(one);
    return restore();
  };

  // power function for double precision floating point
  dpow = function dpow() {
    var a, b, base, expo, result, theta;
    a = 0.0;
    b = 0.0;
    base = 0.0;
    expo = 0.0;
    result = 0.0;
    theta = 0.0;
    expo = pop_double();
    base = pop_double();
    // divide by zero?
    if (base === 0.0 && expo < 0.0) {
      stop("divide by zero");
    }
    // nonnegative base or integer power?
    if (base >= 0.0 || expo % 1.0 === 0.0) {
      result = Math.pow(base, expo);
      push_double(result);
      return;
    }
    result = Math.pow(Math.abs(base), expo);
    theta = Math.PI * expo;
    // this ensures the real part is 0.0 instead of a tiny fraction
    if (expo % 0.5 === 0.0) {
      a = 0.0;
      b = Math.sin(theta);
    } else {
      a = Math.cos(theta);
      b = Math.sin(theta);
    }
    push_double(a * result);
    push_double(b * result);
    push(imaginaryunit);
    multiply();
    return add();
  };

  /* eigen =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  m
   General description
  -------------------
  Compute eigenvalues and eigenvectors. Matrix m must be both numerical and symmetric.
  The eigenval function returns a matrix with the eigenvalues along the diagonal.
  The eigenvec function returns a matrix with the eigenvectors arranged as row vectors.
  The eigen function does not return anything but stores the eigenvalue matrix in D
  and the eigenvector matrix in Q.
   Input:    stack[tos - 1]    symmetric matrix
   Output:    D      diagnonal matrix
        Q      eigenvector matrix
   D and Q have the property that
     A == dot(transpose(Q),D,Q)
   where A is the original matrix.
   The eigenvalues are on the diagonal of D.
  The eigenvectors are row vectors in Q.
   The eigenvalue relation:
     A X = lambda X
   can be checked as follows:
     lambda = D[1,1]
    X = Q[1]
    dot(A,X) - lambda X
   Example 1. Check the relation AX = lambda X where lambda is an eigenvalue and X is the associated eigenvector.
   Enter:
        A = hilbert(3)
        eigen(A)
        lambda = D[1,1]
        X = Q[1]
        dot(A,X) - lambda X
   Result:
        -1.16435e-14
        -6.46705e-15
        -4.55191e-15
   Example 2: Check the relation A = QTDQ.
   Enter:
     A - dot(transpose(Q),D,Q)
   Result: 
     6.27365e-12    -1.58236e-11   1.81902e-11
     -1.58236e-11   -1.95365e-11   2.56514e-12
     1.81902e-11    2.56514e-12    1.32627e-11
   */
  //define D(i, j) yydd[EIG_N * (i) + (j)]
  //define Q(i, j) yyqq[EIG_N * (i) + (j)]
  EIG_N = 0;
  EIG_yydd = [];
  EIG_yyqq = [];
  Eval_eigen = function Eval_eigen() {
    if (EIG_check_arg() === 0) {
      stop("eigen: argument is not a square matrix");
    }
    eigen(EIGEN);
    p1 = usr_symbol("D");
    set_binding(p1, p2);
    p1 = usr_symbol("Q");
    set_binding(p1, p3);
    return push(symbol(NIL));
  };
  Eval_eigenval = function Eval_eigenval() {
    if (EIG_check_arg() === 0) {
      push_symbol(EIGENVAL);
      push(p1);
      list(2);
      return;
    }
    eigen(EIGENVAL);
    return push(p2);
  };
  Eval_eigenvec = function Eval_eigenvec() {
    if (EIG_check_arg() === 0) {
      push_symbol(EIGENVEC);
      push(p1);
      list(2);
      return;
    }
    eigen(EIGENVEC);
    return push(p3);
  };
  EIG_check_arg = function EIG_check_arg() {
    var i, i1, j, j1, l1, o, ref, ref1, ref2, ref3, ref4;
    i = 0;
    j = 0;
    push(cadr(p1));
    Eval();
    _yyfloat();
    Eval();
    p1 = pop();
    if (!istensor(p1)) {
      return 0;
    }
    if (p1.tensor.ndim !== 2 || p1.tensor.dim[0] !== p1.tensor.dim[1]) {
      stop("eigen: argument is not a square matrix");
    }
    EIG_N = p1.tensor.dim[0];
    for (i = o = 0, ref = EIG_N; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      for (j = i1 = 0, ref1 = EIG_N; 0 <= ref1 ? i1 < ref1 : i1 > ref1; j = 0 <= ref1 ? ++i1 : --i1) {
        if (!isdouble(p1.tensor.elem[EIG_N * i + j])) {
          stop("eigen: matrix is not numerical");
        }
      }
    }
    for (i = j1 = 0, ref2 = EIG_N - 1; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
      for (j = l1 = ref3 = i + 1, ref4 = EIG_N; ref3 <= ref4 ? l1 < ref4 : l1 > ref4; j = ref3 <= ref4 ? ++l1 : --l1) {
        if (Math.abs(p1.tensor.elem[EIG_N * i + j].d - p1.tensor.elem[EIG_N * j + i].d) > 1e-10) {
          stop("eigen: matrix is not symmetrical");
        }
      }
    }
    return 1;
  };

  //-----------------------------------------------------------------------------

  //  Input:    p1    matrix

  //  Output:    p2    eigenvalues

  //      p3    eigenvectors

  //-----------------------------------------------------------------------------
  eigen = function eigen(op) {
    var i, i1, j, j1, l1, m1, n1, o, o1, q1, r1, ref, ref1, ref10, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, results, s1;
    i = 0;
    j = 0;
    // malloc working vars

    //EIG_yydd = (double *) malloc(n * n * sizeof (double))
    for (i = o = 0, ref = EIG_N * EIG_N; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      EIG_yydd[i] = 0.0;
    }
    //if (EIG_yydd == NULL)
    //  stop("malloc failure")

    //EIG_yyqq = (double *) malloc(n * n * sizeof (double))
    for (i = i1 = 0, ref1 = EIG_N * EIG_N; 0 <= ref1 ? i1 < ref1 : i1 > ref1; i = 0 <= ref1 ? ++i1 : --i1) {
      EIG_yyqq[i] = 0.0;
    }
    //if (EIG_yyqq == NULL)
    //  stop("malloc failure")

    // initialize D
    for (i = j1 = 0, ref2 = EIG_N; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
      EIG_yydd[EIG_N * i + i] = p1.tensor.elem[EIG_N * i + i].d;
      for (j = l1 = ref3 = i + 1, ref4 = EIG_N; ref3 <= ref4 ? l1 < ref4 : l1 > ref4; j = ref3 <= ref4 ? ++l1 : --l1) {
        EIG_yydd[EIG_N * i + j] = p1.tensor.elem[EIG_N * i + j].d;
        EIG_yydd[EIG_N * j + i] = p1.tensor.elem[EIG_N * i + j].d;
      }
    }
    // initialize Q
    for (i = m1 = 0, ref5 = EIG_N; 0 <= ref5 ? m1 < ref5 : m1 > ref5; i = 0 <= ref5 ? ++m1 : --m1) {
      EIG_yyqq[EIG_N * i + i] = 1.0;
      for (j = n1 = ref6 = i + 1, ref7 = EIG_N; ref6 <= ref7 ? n1 < ref7 : n1 > ref7; j = ref6 <= ref7 ? ++n1 : --n1) {
        EIG_yyqq[EIG_N * i + j] = 0.0;
        EIG_yyqq[EIG_N * j + i] = 0.0;
      }
    }
    // step up to 100 times
    for (i = o1 = 0; o1 < 100; i = ++o1) {
      if (step() === 0) {
        break;
      }
    }
    if (i === 100) {
      printstr("\nnote: eigen did not converge\n");
    }
    // p2 = D
    if (op === EIGEN || op === EIGENVAL) {
      push(p1);
      copy_tensor();
      p2 = pop();
      for (i = q1 = 0, ref8 = EIG_N; 0 <= ref8 ? q1 < ref8 : q1 > ref8; i = 0 <= ref8 ? ++q1 : --q1) {
        for (j = r1 = 0, ref9 = EIG_N; 0 <= ref9 ? r1 < ref9 : r1 > ref9; j = 0 <= ref9 ? ++r1 : --r1) {
          push_double(EIG_yydd[EIG_N * i + j]);
          p2.tensor.elem[EIG_N * i + j] = pop();
        }
      }
    }
    // p3 = Q
    if (op === EIGEN || op === EIGENVEC) {
      push(p1);
      copy_tensor();
      p3 = pop();
      results = [];
      for (i = s1 = 0, ref10 = EIG_N; 0 <= ref10 ? s1 < ref10 : s1 > ref10; i = 0 <= ref10 ? ++s1 : --s1) {
        results.push(function () {
          var ref11, results1, t1;
          results1 = [];
          for (j = t1 = 0, ref11 = EIG_N; 0 <= ref11 ? t1 < ref11 : t1 > ref11; j = 0 <= ref11 ? ++t1 : --t1) {
            push_double(EIG_yyqq[EIG_N * i + j]);
            results1.push(p3.tensor.elem[EIG_N * i + j] = pop());
          }
          return results1;
        }());
      }
      return results;
    }
  };

  // free working vars

  //-----------------------------------------------------------------------------

  //  Example: p = 1, q = 3

  //    c  0  s  0

  //    0  1  0  0
  //  G =
  //    -s  0  c  0

  //    0  0  0  1

  //  The effect of multiplying G times A is...

  //  row 1 of A    = c (row 1 of A ) + s (row 3 of A )
  //            n+1                n                 n

  //  row 3 of A    = c (row 3 of A ) - s (row 1 of A )
  //            n+1                n                 n

  //  In terms of components the overall effect is...

  //  row 1 = c row 1 + s row 3

  //    A[1,1] = c A[1,1] + s A[3,1]

  //    A[1,2] = c A[1,2] + s A[3,2]

  //    A[1,3] = c A[1,3] + s A[3,3]

  //    A[1,4] = c A[1,4] + s A[3,4]

  //  row 3 = c row 3 - s row 1

  //    A[3,1] = c A[3,1] - s A[1,1]

  //    A[3,2] = c A[3,2] - s A[1,2]

  //    A[3,3] = c A[3,3] - s A[1,3]

  //    A[3,4] = c A[3,4] - s A[1,4]

  //                                     T
  //  The effect of multiplying A times G  is...

  //  col 1 of A    = c (col 1 of A ) + s (col 3 of A )
  //            n+1                n                 n

  //  col 3 of A    = c (col 3 of A ) - s (col 1 of A )
  //            n+1                n                 n

  //  In terms of components the overall effect is...

  //  col 1 = c col 1 + s col 3

  //    A[1,1] = c A[1,1] + s A[1,3]

  //    A[2,1] = c A[2,1] + s A[2,3]

  //    A[3,1] = c A[3,1] + s A[3,3]

  //    A[4,1] = c A[4,1] + s A[4,3]

  //  col 3 = c col 3 - s col 1

  //    A[1,3] = c A[1,3] - s A[1,1]

  //    A[2,3] = c A[2,3] - s A[2,1]

  //    A[3,3] = c A[3,3] - s A[3,1]

  //    A[4,3] = c A[4,3] - s A[4,1]

  //  What we want to do is just compute the upper triangle of A since we
  //  know the lower triangle is identical.

  //  In other words, we just want to update components A[i,j] where i < j.

  //-----------------------------------------------------------------------------

  //  Example: p = 2, q = 5

  //        p      q

  //      j=1  j=2  j=3  j=4  j=5  j=6

  //    i=1  .  A[1,2]  .  .  A[1,5]  .

  //  p  i=2  A[2,1]  A[2,2]  A[2,3]  A[2,4]  A[2,5]  A[2,6]

  //    i=3  .  A[3,2]  .  .  A[3,5]  .

  //    i=4  .  A[4,2]  .  .  A[4,5]  .

  //  q  i=5  A[5,1]  A[5,2]  A[5,3]  A[5,4]  A[5,5]  A[5,6]

  //    i=6  .  A[6,2]  .  .  A[6,5]  .

  //-----------------------------------------------------------------------------

  //  This is what B = GA does:

  //  row 2 = c row 2 + s row 5

  //    B[2,1] = c * A[2,1] + s * A[5,1]
  //    B[2,2] = c * A[2,2] + s * A[5,2]
  //    B[2,3] = c * A[2,3] + s * A[5,3]
  //    B[2,4] = c * A[2,4] + s * A[5,4]
  //    B[2,5] = c * A[2,5] + s * A[5,5]
  //    B[2,6] = c * A[2,6] + s * A[5,6]

  //  row 5 = c row 5 - s row 2

  //    B[5,1] = c * A[5,1] + s * A[2,1]
  //    B[5,2] = c * A[5,2] + s * A[2,2]
  //    B[5,3] = c * A[5,3] + s * A[2,3]
  //    B[5,4] = c * A[5,4] + s * A[2,4]
  //    B[5,5] = c * A[5,5] + s * A[2,5]
  //    B[5,6] = c * A[5,6] + s * A[2,6]

  //                 T
  //  This is what BG  does:

  //  col 2 = c col 2 + s col 5

  //    B[1,2] = c * A[1,2] + s * A[1,5]
  //    B[2,2] = c * A[2,2] + s * A[2,5]
  //    B[3,2] = c * A[3,2] + s * A[3,5]
  //    B[4,2] = c * A[4,2] + s * A[4,5]
  //    B[5,2] = c * A[5,2] + s * A[5,5]
  //    B[6,2] = c * A[6,2] + s * A[6,5]

  //  col 5 = c col 5 - s col 2

  //    B[1,5] = c * A[1,5] - s * A[1,2]
  //    B[2,5] = c * A[2,5] - s * A[2,2]
  //    B[3,5] = c * A[3,5] - s * A[3,2]
  //    B[4,5] = c * A[4,5] - s * A[4,2]
  //    B[5,5] = c * A[5,5] - s * A[5,2]
  //    B[6,5] = c * A[6,5] - s * A[6,2]

  //-----------------------------------------------------------------------------

  //  Step 1: Just do upper triangle (i < j), B[2,5] = 0

  //    B[1,2] = c * A[1,2] + s * A[1,5]

  //    B[2,3] = c * A[2,3] + s * A[5,3]
  //    B[2,4] = c * A[2,4] + s * A[5,4]
  //    B[2,6] = c * A[2,6] + s * A[5,6]

  //    B[1,5] = c * A[1,5] - s * A[1,2]
  //    B[3,5] = c * A[3,5] - s * A[3,2]
  //    B[4,5] = c * A[4,5] - s * A[4,2]

  //    B[5,6] = c * A[5,6] + s * A[2,6]

  //-----------------------------------------------------------------------------

  //  Step 2: Transpose where i > j since A[i,j] == A[j,i]

  //    B[1,2] = c * A[1,2] + s * A[1,5]

  //    B[2,3] = c * A[2,3] + s * A[3,5]
  //    B[2,4] = c * A[2,4] + s * A[4,5]
  //    B[2,6] = c * A[2,6] + s * A[5,6]

  //    B[1,5] = c * A[1,5] - s * A[1,2]
  //    B[3,5] = c * A[3,5] - s * A[2,3]
  //    B[4,5] = c * A[4,5] - s * A[2,4]

  //    B[5,6] = c * A[5,6] + s * A[2,6]

  //-----------------------------------------------------------------------------

  //  Step 3: Same as above except reorder

  //  k < p    (k = 1)

  //    A[1,2] = c * A[1,2] + s * A[1,5]
  //    A[1,5] = c * A[1,5] - s * A[1,2]

  //  p < k < q  (k = 3..4)

  //    A[2,3] = c * A[2,3] + s * A[3,5]
  //    A[3,5] = c * A[3,5] - s * A[2,3]

  //    A[2,4] = c * A[2,4] + s * A[4,5]
  //    A[4,5] = c * A[4,5] - s * A[2,4]

  //  q < k    (k = 6)

  //    A[2,6] = c * A[2,6] + s * A[5,6]
  //    A[5,6] = c * A[5,6] - s * A[2,6]

  //-----------------------------------------------------------------------------
  step = function step() {
    var count, i, i1, j, o, ref, ref1, ref2;
    i = 0;
    j = 0;
    count = 0;
    // for each upper triangle "off-diagonal" component do step2
    for (i = o = 0, ref = EIG_N - 1; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      for (j = i1 = ref1 = i + 1, ref2 = EIG_N; ref1 <= ref2 ? i1 < ref2 : i1 > ref2; j = ref1 <= ref2 ? ++i1 : --i1) {
        if (EIG_yydd[EIG_N * i + j] !== 0.0) {
          step2(i, j);
          count++;
        }
      }
    }
    return count;
  };
  step2 = function step2(p, q) {
    var c, cc, i1, j1, k, o, ref, ref1, ref2, s, ss, t, theta;
    k = 0;
    t = 0.0;
    theta = 0.0;
    c = 0.0;
    cc = 0.0;
    s = 0.0;
    ss = 0.0;
    // compute c and s

    // from Numerical Recipes (except they have a_qq - a_pp)
    theta = 0.5 * (EIG_yydd[EIG_N * p + p] - EIG_yydd[EIG_N * q + q]) / EIG_yydd[EIG_N * p + q];
    t = 1.0 / (Math.abs(theta) + Math.sqrt(theta * theta + 1.0));
    if (theta < 0.0) {
      t = -t;
    }
    c = 1.0 / Math.sqrt(t * t + 1.0);
    s = t * c;
    // D = GD

    // which means "add rows"
    for (k = o = 0, ref = EIG_N; 0 <= ref ? o < ref : o > ref; k = 0 <= ref ? ++o : --o) {
      cc = EIG_yydd[EIG_N * p + k];
      ss = EIG_yydd[EIG_N * q + k];
      EIG_yydd[EIG_N * p + k] = c * cc + s * ss;
      EIG_yydd[EIG_N * q + k] = c * ss - s * cc;
    }
    // D = D transpose(G)

    // which means "add columns"
    for (k = i1 = 0, ref1 = EIG_N; 0 <= ref1 ? i1 < ref1 : i1 > ref1; k = 0 <= ref1 ? ++i1 : --i1) {
      cc = EIG_yydd[EIG_N * k + p];
      ss = EIG_yydd[EIG_N * k + q];
      EIG_yydd[EIG_N * k + p] = c * cc + s * ss;
      EIG_yydd[EIG_N * k + q] = c * ss - s * cc;
    }
    // Q = GQ

    // which means "add rows"
    for (k = j1 = 0, ref2 = EIG_N; 0 <= ref2 ? j1 < ref2 : j1 > ref2; k = 0 <= ref2 ? ++j1 : --j1) {
      cc = EIG_yyqq[EIG_N * p + k];
      ss = EIG_yyqq[EIG_N * q + k];
      EIG_yyqq[EIG_N * p + k] = c * cc + s * ss;
      EIG_yyqq[EIG_N * q + k] = c * ss - s * cc;
    }
    EIG_yydd[EIG_N * p + q] = 0.0;
    return EIG_yydd[EIG_N * q + p] = 0.0;
  };
  Eval_erf = function Eval_erf() {
    push(cadr(p1));
    Eval();
    return yerf();
  };
  yerf = function yerf() {
    save();
    yyerf();
    return restore();
  };
  yyerf = function yyerf() {
    var d;
    d = 0.0;
    p1 = pop();
    if (isdouble(p1)) {
      d = 1.0 - erfc(p1.d);
      push_double(d);
      return;
    }
    if (isZeroAtomOrTensor(p1)) {
      push(zero);
      return;
    }
    if (isnegativeterm(p1)) {
      push_symbol(ERF);
      push(p1);
      negate();
      list(2);
      negate();
      return;
    }
    push_symbol(ERF);
    push(p1);
    list(2);
  };

  //-----------------------------------------------------------------------------

  //  Author : philippe.billet@noos.fr

  //  erfc(x)

  //  GW  Added erfc() from Numerical Recipes in C

  //-----------------------------------------------------------------------------
  Eval_erfc = function Eval_erfc() {
    push(cadr(p1));
    Eval();
    return yerfc();
  };
  yerfc = function yerfc() {
    save();
    yyerfc();
    return restore();
  };
  yyerfc = function yyerfc() {
    var d;
    d = 0.0;
    p1 = pop();
    if (isdouble(p1)) {
      d = erfc(p1.d);
      push_double(d);
      return;
    }
    if (isZeroAtomOrTensor(p1)) {
      push(one);
      return;
    }
    push_symbol(ERFC);
    push(p1);
    list(2);
  };

  // from Numerical Recipes in C
  erfc = function erfc(x) {
    var ans, t, z;
    if (x === 0) {
      return 1.0;
    }
    t = 0.0;
    z = 0.0;
    ans = 0.0;
    z = Math.abs(x);
    t = 1.0 / (1.0 + 0.5 * z);
    ans = t * Math.exp(-z * z - 1.26551223 + t * (1.00002368 + t * (0.37409196 + t * (0.09678418 + t * (-0.18628806 + t * (0.27886807 + t * (-1.13520398 + t * (1.48851587 + t * (-0.82215223 + t * 0.17087277)))))))));
    if (x >= 0.0) {
      return ans;
    } else {
      return 2.0 - ans;
    }
  };

  // Evaluate an expression, for example...

  //  push(p1)
  //  Eval()
  //  p2 = pop()
  Eval = function Eval() {
    var willEvaluateAsFloats;
    check_esc_flag();
    save();
    p1 = pop();
    if (p1 == null) {
      debugger;
    }
    if (!evaluatingAsFloats && _isfloating(p1)) {
      willEvaluateAsFloats = true;
      evaluatingAsFloats++;
    }
    switch (p1.k) {
      case CONS:
        Eval_cons();
        break;
      case NUM:
        if (evaluatingAsFloats) {
          push_double(convert_rational_to_double(p1));
        } else {
          push(p1);
        }
        break;
      case DOUBLE:
      case STR:
        push(p1);
        break;
      case TENSOR:
        Eval_tensor();
        break;
      case SYM:
        Eval_sym();
        break;
      default:
        stop("atom?");
    }
    if (willEvaluateAsFloats) {
      evaluatingAsFloats--;
    }
    return restore();
  };
  Eval_sym = function Eval_sym() {
    var cycleString, i, o, positionIfSymbolAlreadyBeingEvaluated, ref, ref1;
    // note that function calls are not processed here
    // because, since they have an argument (at least an empty one)
    // they are actually CONs, which is a branch of the
    // switch before the one that calls this function

    // bare keyword?
    // If it's a keyword, then we don't look
    // at the binding array, because keywords
    // are not redefinable. 
    if (iskeyword(p1)) {
      push(p1);
      push(symbol(LAST));
      list(2);
      Eval();
      return;
    } else if (p1 === symbol(PI) && evaluatingAsFloats) {
      push_double(Math.PI);
      return;
    }
    // Evaluate symbol's binding
    p2 = get_binding(p1);
    if (DEBUG) {
      console.log("looked up: " + p1 + " which contains: " + p2);
    }
    push(p2);
    // differently from standard Lisp,
    // here the evaluation is not
    // one-step only, rather it keeps evaluating
    // "all the way" until a symbol is
    // defined as itself.
    // Uncomment these two lines to get Lisp
    // behaviour (and break most tests)
    if (p1 !== p2) {
      // detect recursive lookup of symbols, which would otherwise
      // cause a stack overflow.
      // Note that recursive functions will still work because
      // as mentioned at the top, this method doesn't look
      // up and evaluate function calls.
      positionIfSymbolAlreadyBeingEvaluated = chainOfUserSymbolsNotFunctionsBeingEvaluated.indexOf(p1);
      if (positionIfSymbolAlreadyBeingEvaluated !== -1) {
        cycleString = "";
        for (i = o = ref = positionIfSymbolAlreadyBeingEvaluated, ref1 = chainOfUserSymbolsNotFunctionsBeingEvaluated.length; ref <= ref1 ? o < ref1 : o > ref1; i = ref <= ref1 ? ++o : --o) {
          cycleString += chainOfUserSymbolsNotFunctionsBeingEvaluated[i].printname + " -> ";
        }
        cycleString += p1.printname;
        stop("recursive evaluation of symbols: " + cycleString);
        return;
      }
      chainOfUserSymbolsNotFunctionsBeingEvaluated.push(p1);
      Eval();
      return chainOfUserSymbolsNotFunctionsBeingEvaluated.pop();
    }
  };
  Eval_cons = function Eval_cons() {
    var cons_head;
    cons_head = car(p1);
    // normally the cons_head is a symbol,
    // but sometimes in the case of
    // functions we don't have a symbol,
    // we have to evaluate something to get to the
    // symbol. For example if a function is inside
    // a tensor, then we need to evaluate an index
    // access first to get to the function.
    // In those cases, we find an EVAL here,
    // so we proceed to EVAL
    if (car(cons_head) === symbol(EVAL)) {
      Eval_user_function();
      return;
    }
    if (!issymbol(cons_head)) {
      stop("cons?");
    }
    switch (symnum(cons_head)) {
      case ABS:
        return Eval_abs();
      case ADD:
        return Eval_add();
      case ADJ:
        return Eval_adj();
      case AND:
        return Eval_and();
      case ARCCOS:
        return Eval_arccos();
      case ARCCOSH:
        return Eval_arccosh();
      case ARCSIN:
        return Eval_arcsin();
      case ARCSINH:
        return Eval_arcsinh();
      case ARCTAN:
        return Eval_arctan();
      case ARCTANH:
        return Eval_arctanh();
      case ARG:
        return Eval_arg();
      case ATOMIZE:
        return Eval_atomize();
      case BESSELJ:
        return Eval_besselj();
      case BESSELY:
        return Eval_bessely();
      case BINDING:
        return Eval_binding();
      case BINOMIAL:
        return Eval_binomial();
      case CEILING:
        return Eval_ceiling();
      case CHECK:
        return Eval_check();
      case CHOOSE:
        return Eval_choose();
      case CIRCEXP:
        return Eval_circexp();
      case CLEAR:
        return Eval_clear();
      case CLEARALL:
        return Eval_clearall();
      case CLEARPATTERNS:
        return Eval_clearpatterns();
      case CLOCK:
        return Eval_clock();
      case COEFF:
        return Eval_coeff();
      case COFACTOR:
        return Eval_cofactor();
      case CONDENSE:
        return Eval_condense();
      case CONJ:
        return Eval_conj();
      case CONTRACT:
        return Eval_contract();
      case COS:
        return Eval_cos();
      case COSH:
        return Eval_cosh();
      case DECOMP:
        return Eval_decomp();
      case DEGREE:
        return Eval_degree();
      case DEFINT:
        return Eval_defint();
      case DENOMINATOR:
        return Eval_denominator();
      case DERIVATIVE:
        return Eval_derivative();
      case DET:
        return Eval_det();
      case DIM:
        return Eval_dim();
      case DIRAC:
        return Eval_dirac();
      case DIVISORS:
        return Eval_divisors();
      case DO:
        return Eval_do();
      case DOT:
        return _Eval_inner();
      case DRAW:
        return Eval_draw();
      case DSOLVE:
        return Eval_dsolve();
      case EIGEN:
        return Eval_eigen();
      case EIGENVAL:
        return Eval_eigenval();
      case EIGENVEC:
        return Eval_eigenvec();
      case ERF:
        return Eval_erf();
      case ERFC:
        return Eval_erfc();
      case EVAL:
        return Eval_Eval();
      case EXP:
        return Eval_exp();
      case EXPAND:
        return Eval_expand();
      case EXPCOS:
        return Eval_expcos();
      case EXPSIN:
        return Eval_expsin();
      case FACTOR:
        return Eval_factor();
      case FACTORIAL:
        return Eval_factorial();
      case FACTORPOLY:
        return Eval_factorpoly();
      case FILTER:
        return Eval_filter();
      case FLOATF:
        return Eval_float();
      case APPROXRATIO:
        return Eval_approxratio();
      case FLOOR:
        return Eval_floor();
      case FOR:
        return Eval_for();
      // this is invoked only when we
      // evaluate a function that is NOT being called
      // e.g. when f is a function as we do
      //  g = f
      case FUNCTION:
        return Eval_function_reference();
      case GAMMA:
        return Eval_gamma();
      case GCD:
        return Eval_gcd();
      case HERMITE:
        return Eval_hermite();
      case HILBERT:
        return Eval_hilbert();
      case IMAG:
        return Eval_imag();
      case INDEX:
        return Eval_index();
      case INNER:
        return _Eval_inner();
      case INTEGRAL:
        return Eval_integral();
      case INV:
        return Eval_inv();
      case INVG:
        return Eval_invg();
      case ISINTEGER:
        return Eval_isinteger();
      case ISPRIME:
        return Eval_isprime();
      case LAGUERRE:
        return Eval_laguerre();
      //  when LAPLACE then Eval_laplace()
      case LCM:
        return Eval_lcm();
      case LEADING:
        return Eval_leading();
      case LEGENDRE:
        return Eval_legendre();
      case LOG:
        return Eval_log();
      case LOOKUP:
        return Eval_lookup();
      case MOD:
        return Eval_mod();
      case MULTIPLY:
        return Eval_multiply();
      case NOT:
        return Eval_not();
      case NROOTS:
        return Eval_nroots();
      case NUMBER:
        return Eval_number();
      case NUMERATOR:
        return Eval_numerator();
      case OPERATOR:
        return Eval_operator();
      case OR:
        return Eval_or();
      case OUTER:
        return Eval_outer();
      case PATTERN:
        return Eval_pattern();
      case PATTERNSINFO:
        return Eval_patternsinfo();
      case POLAR:
        return Eval_polar();
      case POWER:
        return Eval_power();
      case PRIME:
        return Eval_prime();
      case PRINT:
        return Eval_print();
      case PRINT2DASCII:
        return Eval_print2dascii();
      case PRINTFULL:
        return Eval_printcomputer();
      case PRINTLATEX:
        return Eval_printlatex();
      case PRINTLIST:
        return Eval_printlist();
      case PRINTPLAIN:
        return Eval_printhuman();
      case PRODUCT:
        return Eval_product();
      case QUOTE:
        return Eval_quote();
      case QUOTIENT:
        return Eval_quotient();
      case RANK:
        return Eval_rank();
      case RATIONALIZE:
        return Eval_rationalize();
      case REAL:
        return Eval_real();
      case ROUND:
        return Eval_round();
      case YYRECT:
        return Eval_rect();
      case ROOTS:
        return Eval_roots();
      case SETQ:
        return Eval_setq();
      case SGN:
        return Eval_sgn();
      case SILENTPATTERN:
        return Eval_silentpattern();
      case SIMPLIFY:
        return Eval_simplify();
      case SIN:
        return Eval_sin();
      case SINH:
        return Eval_sinh();
      case SHAPE:
        return Eval_shape();
      case SQRT:
        return Eval_sqrt();
      case STOP:
        return Eval_stop();
      case SUBST:
        return Eval_subst();
      case SUM:
        return Eval_sum();
      case SYMBOLSINFO:
        return Eval_symbolsinfo();
      case TAN:
        return Eval_tan();
      case TANH:
        return Eval_tanh();
      case TAYLOR:
        return Eval_taylor();
      case TEST:
        return Eval_test();
      case TESTEQ:
        return Eval_testeq();
      case TESTGE:
        return Eval_testge();
      case TESTGT:
        return Eval_testgt();
      case TESTLE:
        return Eval_testle();
      case TESTLT:
        return Eval_testlt();
      case TRANSPOSE:
        return Eval_transpose();
      case UNIT:
        return Eval_unit();
      case ZERO:
        return Eval_zero();
      default:
        return Eval_user_function();
    }
  };
  Eval_binding = function Eval_binding() {
    return push(get_binding(cadr(p1)));
  };
  Eval_check = function Eval_check() {
    var checkResult;
    // check the argument
    checkResult = isZeroLikeOrNonZeroLikeOrUndetermined(cadr(p1));
    if (checkResult == null) {
      // returned null: unknown result
      // leave the whole check unevalled
      return push(p1);
    } else {
      // returned 1 or 0
      return push_integer(checkResult);
    }
  };
  Eval_det = function Eval_det() {
    push(cadr(p1));
    Eval();
    return det();
  };
  Eval_dim = function Eval_dim() {
    var n;
    //int n
    push(cadr(p1));
    Eval();
    p2 = pop();
    if (iscons(cddr(p1))) {
      push(caddr(p1));
      Eval();
      n = pop_integer();
    } else {
      n = 1;
    }
    if (!istensor(p2)) {
      return push_integer(1); // dim of scalar is 1
    } else if (n < 1 || n > p2.tensor.ndim) {
      return push(p1);
    } else {
      return push_integer(p2.tensor.dim[n - 1]);
    }
  };
  Eval_divisors = function Eval_divisors() {
    push(cadr(p1));
    Eval();
    return divisors();
  };
  Eval_do = function Eval_do() {
    var results;
    push(car(p1));
    p1 = cdr(p1);
    results = [];
    while (iscons(p1)) {
      pop();
      push(car(p1));
      Eval();
      results.push(p1 = cdr(p1));
    }
    return results;
  };
  Eval_dsolve = function Eval_dsolve() {
    push(cadr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    push(cadddr(p1));
    Eval();
    return dsolve();
  };

  // for example, Eval(f,x,2)
  Eval_Eval = function Eval_Eval() {
    push(cadr(p1));
    Eval();
    p1 = cddr(p1);
    while (iscons(p1)) {
      push(car(p1));
      Eval();
      push(cadr(p1));
      Eval();
      _subst();
      p1 = cddr(p1);
    }
    return Eval();
  };

  // exp evaluation: it replaces itself with
  // a POWER(E,something) node and evals that one
  Eval_exp = function Eval_exp() {
    push(cadr(p1));
    Eval();
    return exponential();
  };
  Eval_factorial = function Eval_factorial() {
    push(cadr(p1));
    Eval();
    return factorial();
  };
  Eval_factorpoly = function Eval_factorpoly() {
    var results;
    p1 = cdr(p1);
    push(car(p1));
    Eval();
    p1 = cdr(p1);
    push(car(p1));
    Eval();
    factorpoly();
    p1 = cdr(p1);
    results = [];
    while (iscons(p1)) {
      push(car(p1));
      Eval();
      factorpoly();
      results.push(p1 = cdr(p1));
    }
    return results;
  };
  Eval_hermite = function Eval_hermite() {
    push(cadr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    return hermite();
  };
  Eval_hilbert = function Eval_hilbert() {
    push(cadr(p1));
    Eval();
    return hilbert();
  };
  Eval_index = function Eval_index() {
    var h, orig, theTensor;
    h = tos;
    orig = p1;

    // look into the head of the list,
    // when evaluated it should be a tensor
    p1 = cdr(p1);
    push(car(p1));
    Eval();
    theTensor = stack[tos - 1];
    if (isNumericAtom(theTensor)) {
      stop("trying to access a scalar as a tensor");
    }
    if (!istensor(theTensor)) {
      // the tensor is not allocated yet, so
      // leaving the expression unevalled
      moveTos(h);
      push(orig);
      return;
    }
    // we examined the head of the list which
    // was the tensor, now look into
    // the indexes
    p1 = cdr(p1);
    while (iscons(p1)) {
      push(car(p1));
      Eval();
      if (!isintegerorintegerfloat(stack[tos - 1])) {
        // index with something other than
        // an integer
        moveTos(h);
        push(orig);
        return;
      }
      p1 = cdr(p1);
    }
    return index_function(tos - h);
  };
  Eval_inv = function Eval_inv() {
    push(cadr(p1));
    Eval();
    return _inv();
  };
  Eval_invg = function Eval_invg() {
    push(cadr(p1));
    Eval();
    return invg();
  };
  Eval_isinteger = function Eval_isinteger() {
    var n;
    push(cadr(p1));
    Eval();
    p1 = pop();
    if (isrational(p1)) {
      if (isinteger(p1)) {
        push(one);
      } else {
        push(zero);
      }
      return;
    }
    if (isdouble(p1)) {
      n = Math.floor(p1.d);
      if (n === p1.d) {
        push(one);
      } else {
        push(zero);
      }
      return;
    }
    push_symbol(ISINTEGER);
    push(p1);
    return list(2);
  };
  Eval_number = function Eval_number() {
    push(cadr(p1));
    Eval();
    p1 = pop();
    if (p1.k === NUM || p1.k === DOUBLE) {
      return push_integer(1);
    } else {
      return push_integer(0);
    }
  };
  Eval_operator = function Eval_operator() {
    var h;
    h = tos;
    push_symbol(OPERATOR);
    p1 = cdr(p1);
    while (iscons(p1)) {
      push(car(p1));
      Eval();
      p1 = cdr(p1);
    }
    return list(tos - h);
  };

  // quote definition
  Eval_quote = function Eval_quote() {
    return push(cadr(p1));
  };

  // rank definition
  Eval_rank = function Eval_rank() {
    push(cadr(p1));
    Eval();
    p1 = pop();
    if (istensor(p1)) {
      return push_integer(p1.tensor.ndim);
    } else {
      return push(zero);
    }
  };

  // Evaluates the right side and assigns the
  // result of the evaluation to the left side.
  // It's called setq because it stands for "set quoted" from Lisp,
  // see:
  //   http://stackoverflow.com/questions/869529/difference-between-set-setq-and-setf-in-common-lisp
  // Note that this also takes case of assigning to a tensor
  // element, which is something that setq wouldn't do
  // in list, see comments further down below.

  // Example:
  //   f = x
  //   // f evaluates to x, so x is assigned to g really
  //   // rather than actually f being assigned to g
  //   g = f
  //   f = y
  //   g
  //   > x
  Eval_setq = function Eval_setq() {
    // case of tensor
    if (caadr(p1) === symbol(INDEX)) {
      setq_indexed();
      return;
    }
    // case of function definition
    if (iscons(cadr(p1))) {
      define_user_function();
      return;
    }
    if (!issymbol(cadr(p1))) {
      stop("symbol assignment: error in symbol");
    }
    push(caddr(p1));
    Eval();
    p2 = pop();
    set_binding(cadr(p1), p2);
    // An assignment returns nothing.
    // This is unlike most programming languages
    // where an assignment does return the
    // assigned value.
    // TODO Could be changed.
    return push(symbol(NIL));
  };

  // Here "setq" is a misnomer because
  // setq wouldn't work in Lisp to set array elements
  // since setq stands for "set quoted" and you wouldn't
  // quote an array element access.
  // You'd rather use setf, which is a macro that can
  // assign a value to anything.
  //   (setf (aref YourArray 2) "blue")
  // see
  //   http://stackoverflow.com/questions/18062016/common-lisp-how-to-set-an-element-in-a-2d-array
  //-----------------------------------------------------------------------------

  //  Example: a[1] = b

  //  p1  *-------*-----------------------*
  //    |  |      |
  //    setq  *-------*-------*  b
  //      |  |  |
  //      index  a  1

  //  cadadr(p1) -> a

  //-----------------------------------------------------------------------------
  setq_indexed = function setq_indexed() {
    var h;
    p4 = cadadr(p1);
    if (!issymbol(p4)) {
      // this is likely to happen when one tries to
      // do assignments like these
      //   1[2] = 3
      // or
      //   f(x)[1] = 2
      // or
      //   [[1,2],[3,4]][5] = 6

      // In other words, one can only do
      // a straight assignment like
      //   existingMatrix[index] = something
      stop("indexed assignment: expected a symbol name");
    }
    h = tos;
    push(caddr(p1));
    Eval();
    p2 = cdadr(p1);
    while (iscons(p2)) {
      push(car(p2));
      Eval();
      p2 = cdr(p2);
    }
    set_component(tos - h);
    p3 = pop();
    set_binding(p4, p3);
    return push(symbol(NIL));
  };
  Eval_sqrt = function Eval_sqrt() {
    push(cadr(p1));
    Eval();
    push_rational(1, 2);
    return power();
  };
  Eval_stop = function Eval_stop() {
    return stop("user stop");
  };
  Eval_subst = function Eval_subst() {
    push(cadddr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    push(cadr(p1));
    Eval();
    _subst();
    return Eval(); // normalize
  };

  // always returns a matrix with rank 2
  // i.e. two dimensions,
  // the passed parameter is the size
  Eval_unit = function Eval_unit() {
    var i, n, o, ref;
    i = 0;
    n = 0;
    push(cadr(p1));
    Eval();
    n = pop_integer();
    if (isNaN(n)) {
      push(p1);
      return;
    }
    if (n < 1) {
      push(p1);
      return;
    }
    p1 = alloc_tensor(n * n);
    p1.tensor.ndim = 2;
    p1.tensor.dim[0] = n;
    p1.tensor.dim[1] = n;
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      p1.tensor.elem[n * i + i] = one;
    }
    check_tensor_dimensions(p1);
    return push(p1);
  };
  Eval_noexpand = function Eval_noexpand() {
    var prev_expanding;
    prev_expanding = expanding;
    expanding = 0;
    Eval();
    return expanding = prev_expanding;
  };

  // like Eval() except "=" (assignment) is treated
  // as "==" (equality test)
  // This is because
  //  * this allows users to be lazy and just
  //    use "=" instead of "==" as per more common
  //    mathematical notation
  //  * in many places we don't expect an assignment
  //    e.g. we don't expect to test the zero-ness
  //    of an assignment or the truth value of
  //    an assignment
  // Note that these are questionable assumptions
  // as for example in most programming languages one
  // can indeed test the value of an assignment (the
  // value is just the evaluation of the right side)
  Eval_predicate = function Eval_predicate() {
    save();
    p1 = top();
    if (car(p1) === symbol(SETQ)) {
      // replace the assignment in the
      // head with an equality test
      pop();
      push_symbol(TESTEQ);
      push(cadr(p1));
      push(caddr(p1));
      list(3);
    }
    Eval();
    return restore();
  };

  // Partial fraction expansion

  // Example

  //      expand(1/(x^3+x^2),x)

  //        1      1       1
  //      ---- - --- + -------
  //        2     x     x + 1
  //       x
  Eval_expand = function Eval_expand() {
    // 1st arg
    push(cadr(p1));
    Eval();
    // 2nd arg
    push(caddr(p1));
    Eval();
    p2 = pop();
    if (p2 === symbol(NIL)) {
      guess();
    } else {
      push(p2);
    }
    return _expand();
  };

  //define A p2
  //define B p3
  //define C p4
  //define F p5
  //define P p6
  //define Q p7
  //define T p8
  //define X p9
  _expand = function expand() {
    var prev_expanding;
    save();
    p9 = pop();
    p5 = pop();
    if (istensor(p5)) {
      expand_tensor();
      restore();
      return;
    }
    // if sum of terms then sum over the expansion of each term
    if (car(p5) === symbol(ADD)) {
      push_integer(0);
      p1 = cdr(p5);
      while (iscons(p1)) {
        push(car(p1));
        push(p9);
        _expand();
        add();
        p1 = cdr(p1);
      }
      restore();
      return;
    }
    // B = numerator
    push(p5);
    _numerator();
    p3 = pop();
    // A = denominator
    push(p5);
    _denominator();
    p2 = pop();
    remove_negative_exponents();
    // Q = quotient
    push(p3);
    push(p2);
    push(p9);
    // if the denominator is one then always bail out
    // also bail out if the denominator is not one but
    // it's not anything recognizable as a polynomial.
    if (isone(p3) || isone(p2)) {
      if (!ispolyexpandedform(p2, p9) || isone(p2)) {
        pop();
        pop();
        pop();
        push(p5);
        // p5 is the original input, leave unchanged
        restore();
        return;
      }
    }
    divpoly();
    p7 = pop();
    // remainder B = B - A * Q
    push(p3);
    push(p2);
    push(p7);
    multiply();
    subtract();
    p3 = pop();
    // if the remainder is zero then we're done
    if (isZeroAtomOrTensor(p3)) {
      push(p7);
      restore();
      return;
    }
    // A = factor(A)

    //console.log("expand - to be factored: " + p2)
    push(p2);
    push(p9);
    factorpoly();
    p2 = pop();
    //console.log("expand - factored to: " + p2)
    expand_get_C();
    expand_get_B();
    expand_get_A();
    if (istensor(p4)) {
      push(p4);
      prev_expanding = expanding;
      expanding = 1;
      _inv();
      expanding = prev_expanding;
      push(p3);
      _inner();
      push(p2);
      _inner();
    } else {
      push(p3);
      push(p4);
      prev_expanding = expanding;
      expanding = 1;
      divide();
      expanding = prev_expanding;
      push(p2);
      multiply();
    }
    push(p7);
    add();
    return restore();
  };
  expand_tensor = function expand_tensor() {
    var i, o, ref;
    i = 0;
    push(p5);
    copy_tensor();
    p5 = pop();
    for (i = o = 0, ref = p5.tensor.nelem; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      push(p5.tensor.elem[i]);
      push(p9);
      _expand();
      p5.tensor.elem[i] = pop();
    }
    return push(p5);
  };
  remove_negative_exponents = function remove_negative_exponents() {
    var h, i, j, k, n, o, ref;
    h = 0;
    i = 0;
    j = 0;
    k = 0;
    n = 0;
    h = tos;
    factors(p2);
    factors(p3);
    n = tos - h;
    // find the smallest exponent
    j = 0;
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      p1 = stack[h + i];
      if (car(p1) !== symbol(POWER)) {
        continue;
      }
      if (cadr(p1) !== p9) {
        continue;
      }
      push(caddr(p1));
      k = pop_integer();
      if (isNaN(k)) {
        continue;
      }
      if (k < j) {
        j = k;
      }
    }
    moveTos(h);
    if (j === 0) {
      return;
    }
    // A = A / X^j
    push(p2);
    push(p9);
    push_integer(-j);
    power();
    multiply();
    p2 = pop();
    // B = B / X^j
    push(p3);
    push(p9);
    push_integer(-j);
    power();
    multiply();
    return p3 = pop();
  };

  // Returns the expansion coefficient matrix C.

  // Example:

  //       B         1
  //      --- = -----------
  //       A      2 
  //             x (x + 1)

  // We have

  //       B     Y1     Y2      Y3
  //      --- = ---- + ---- + -------
  //       A      2     x      x + 1
  //             x

  // Our task is to solve for the unknowns Y1, Y2, and Y3.

  // Multiplying both sides by A yields

  //           AY1     AY2      AY3
  //      B = ----- + ----- + -------
  //            2      x       x + 1
  //           x

  // Let

  //            A               A                 A
  //      W1 = ----       W2 = ---        W3 = -------
  //             2              x               x + 1
  //            x

  // Then the coefficient matrix C is

  //              coeff(W1,x,0)   coeff(W2,x,0)   coeff(W3,x,0)

  //       C =    coeff(W1,x,1)   coeff(W2,x,1)   coeff(W3,x,1)

  //              coeff(W1,x,2)   coeff(W2,x,2)   coeff(W3,x,2)

  // It follows that

  //       coeff(B,x,0)     Y1

  //       coeff(B,x,1) = C Y2

  //       coeff(B,x,2) =   Y3

  // Hence

  //       Y1       coeff(B,x,0)
  //             -1
  //       Y2 = C   coeff(B,x,1)

  //       Y3       coeff(B,x,2)
  expand_get_C = function expand_get_C() {
    var a, h, i, i1, j, n, o, prev_expanding, ref, ref1;
    h = 0;
    i = 0;
    j = 0;
    n = 0;
    //U **a
    h = tos;
    if (car(p2) === symbol(MULTIPLY)) {
      p1 = cdr(p2);
      while (iscons(p1)) {
        p5 = car(p1);
        expand_get_CF();
        p1 = cdr(p1);
      }
    } else {
      p5 = p2;
      expand_get_CF();
    }
    n = tos - h;
    if (n === 1) {
      p4 = pop();
      return;
    }
    p4 = alloc_tensor(n * n);
    p4.tensor.ndim = 2;
    p4.tensor.dim[0] = n;
    p4.tensor.dim[1] = n;
    a = h;
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      for (j = i1 = 0, ref1 = n; 0 <= ref1 ? i1 < ref1 : i1 > ref1; j = 0 <= ref1 ? ++i1 : --i1) {
        push(stack[a + j]);
        push(p9);
        push_integer(i);
        power();
        prev_expanding = expanding;
        expanding = 1;
        divide();
        expanding = prev_expanding;
        push(p9);
        filter();
        p4.tensor.elem[n * i + j] = pop();
      }
    }
    return moveTos(tos - n);
  };

  // The following table shows the push order for simple roots, repeated roots,
  // and inrreducible factors.

  //  Factor F        Push 1st        Push 2nd         Push 3rd      Push 4th

  //                   A
  //  x               ---
  //                   x

  //   2               A               A
  //  x               ----            ---
  //                    2              x
  //                   x

  //                     A
  //  x + 1           -------
  //                   x + 1

  //         2            A              A
  //  (x + 1)         ----------      -------
  //                          2        x + 1
  //                   (x + 1)

  //   2                   A               Ax
  //  x  + x + 1      ------------    ------------
  //                    2               2
  //                   x  + x + 1      x  + x + 1

  //    2         2          A              Ax              A             Ax
  //  (x  + x + 1)    --------------- ---------------  ------------  ------------
  //                     2         2     2         2     2             2
  //                   (x  + x + 1)    (x  + x + 1)     x  + x + 1    x  + x + 1

  // For T = A/F and F = P^N we have

  //      Factor F          Push 1st    Push 2nd    Push 3rd    Push 4th

  //      x                 T

  //       2
  //      x                 T           TP

  //      x + 1             T

  //             2
  //      (x + 1)           T           TP

  //       2
  //      x  + x + 1        T           TX

  //        2         2
  //      (x  + x + 1)      T           TX          TP          TPX

  // Hence we want to push in the order

  //      T * (P ^ i) * (X ^ j)

  // for all i, j such that

  //      i = 0, 1, ..., N - 1

  //      j = 0, 1, ..., deg(P) - 1

  // where index j runs first.
  expand_get_CF = function expand_get_CF() {
    var d, i, j, n, o, prev_expanding, ref, results;
    d = 0;
    i = 0;
    j = 0;
    n = 0;
    if (!_Find(p5, p9)) {
      return;
    }
    prev_expanding = expanding;
    expanding = 1;
    trivial_divide();
    expanding = prev_expanding;
    if (car(p5) === symbol(POWER)) {
      push(caddr(p5));
      n = pop_integer();
      p6 = cadr(p5);
    } else {
      n = 1;
      p6 = p5;
    }
    push(p6);
    push(p9);
    degree();
    d = pop_integer();
    results = [];
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      results.push(function () {
        var i1, ref1, results1;
        results1 = [];
        for (j = i1 = 0, ref1 = d; 0 <= ref1 ? i1 < ref1 : i1 > ref1; j = 0 <= ref1 ? ++i1 : --i1) {
          push(p8);
          push(p6);
          push_integer(i);
          power();
          prev_expanding = expanding;
          expanding = 1;
          multiply();
          expanding = prev_expanding;
          push(p9);
          push_integer(j);
          power();
          prev_expanding = expanding;
          expanding = 1;
          multiply();
          results1.push(expanding = prev_expanding);
        }
        return results1;
      }());
    }
    return results;
  };

  // Returns T = A/F where F is a factor of A.
  trivial_divide = function trivial_divide() {
    var h;
    h = 0;
    if (car(p2) === symbol(MULTIPLY)) {
      h = tos;
      p0 = cdr(p2);
      while (iscons(p0)) {
        if (!equal(car(p0), p5)) {
          push(car(p0));
          Eval(); // force expansion of (x+1)^2, f.e.
        }

        p0 = cdr(p0);
      }
      multiply_all(tos - h);
    } else {
      push_integer(1);
    }
    return p8 = pop();
  };

  // Returns the expansion coefficient vector B.
  expand_get_B = function expand_get_B() {
    var i, n, o, prev_expanding, ref;
    i = 0;
    n = 0;
    if (!istensor(p4)) {
      return;
    }
    n = p4.tensor.dim[0];
    p8 = alloc_tensor(n);
    p8.tensor.ndim = 1;
    p8.tensor.dim[0] = n;
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      push(p3);
      push(p9);
      push_integer(i);
      power();
      prev_expanding = expanding;
      expanding = 1;
      divide();
      expanding = prev_expanding;
      push(p9);
      filter();
      p8.tensor.elem[i] = pop();
    }
    return p3 = p8;
  };

  // Returns the expansion fractions in A.
  expand_get_A = function expand_get_A() {
    var h, i, n, o, ref;
    h = 0;
    i = 0;
    n = 0;
    if (!istensor(p4)) {
      push(p2);
      reciprocate();
      p2 = pop();
      return;
    }
    h = tos;
    if (car(p2) === symbol(MULTIPLY)) {
      p8 = cdr(p2);
      while (iscons(p8)) {
        p5 = car(p8);
        expand_get_AF();
        p8 = cdr(p8);
      }
    } else {
      p5 = p2;
      expand_get_AF();
    }
    n = tos - h;
    p8 = alloc_tensor(n);
    p8.tensor.ndim = 1;
    p8.tensor.dim[0] = n;
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      p8.tensor.elem[i] = stack[h + i];
    }
    moveTos(h);
    return p2 = p8;
  };
  expand_get_AF = function expand_get_AF() {
    var d, i, j, n, o, ref, results;
    d = 0;
    i = 0;
    j = 0;
    n = 1;
    if (!_Find(p5, p9)) {
      return;
    }
    if (car(p5) === symbol(POWER)) {
      push(caddr(p5));
      n = pop_integer();
      p5 = cadr(p5);
    }
    push(p5);
    push(p9);
    degree();
    d = pop_integer();
    results = [];
    for (i = o = ref = n; ref <= 0 ? o < 0 : o > 0; i = ref <= 0 ? ++o : --o) {
      results.push(function () {
        var i1, ref1, results1;
        results1 = [];
        for (j = i1 = 0, ref1 = d; 0 <= ref1 ? i1 < ref1 : i1 > ref1; j = 0 <= ref1 ? ++i1 : --i1) {
          push(p5);
          push_integer(i);
          power();
          reciprocate();
          push(p9);
          push_integer(j);
          power();
          results1.push(multiply());
        }
        return results1;
      }());
    }
    return results;
  };

  // Do the exponential cosine function.
  Eval_expcos = function Eval_expcos() {
    push(cadr(p1));
    Eval();
    return expcos();
  };
  expcos = function expcos() {
    save();
    p1 = pop();
    push(imaginaryunit);
    push(p1);
    multiply();
    exponential();
    push_rational(1, 2);
    multiply();
    push(imaginaryunit);
    negate();
    push(p1);
    multiply();
    exponential();
    push_rational(1, 2);
    multiply();
    add();
    return restore();
  };

  // Do the exponential sine function.
  Eval_expsin = function Eval_expsin() {
    push(cadr(p1));
    Eval();
    return expsin();
  };
  expsin = function expsin() {
    save();
    p1 = pop();
    push(imaginaryunit);
    push(p1);
    multiply();
    exponential();
    push(imaginaryunit);
    divide();
    push_rational(1, 2);
    multiply();
    push(imaginaryunit);
    negate();
    push(p1);
    multiply();
    exponential();
    push(imaginaryunit);
    divide();
    push_rational(1, 2);
    multiply();
    subtract();
    return restore();
  };

  // factor a polynomial or integer
  Eval_factor = function Eval_factor() {
    var results;
    push(cadr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    p2 = pop();
    if (p2 === symbol(NIL)) {
      guess();
    } else {
      push(p2);
    }
    factor();
    // more factoring?
    p1 = cdddr(p1);
    results = [];
    while (iscons(p1)) {
      push(car(p1));
      Eval();
      factor_again();
      results.push(p1 = cdr(p1));
    }
    return results;
  };
  factor_again = function factor_again() {
    var h, n;
    save();
    p2 = pop();
    p1 = pop();
    h = tos;
    if (car(p1) === symbol(MULTIPLY)) {
      p1 = cdr(p1);
      while (iscons(p1)) {
        push(car(p1));
        push(p2);
        factor_term();
        p1 = cdr(p1);
      }
    } else {
      push(p1);
      push(p2);
      factor_term();
    }
    n = tos - h;
    if (n > 1) {
      multiply_all_noexpand(n);
    }
    return restore();
  };
  factor_term = function factor_term() {
    save();
    factorpoly();
    p1 = pop();
    if (car(p1) === symbol(MULTIPLY)) {
      p1 = cdr(p1);
      while (iscons(p1)) {
        push(car(p1));
        p1 = cdr(p1);
      }
    } else {
      push(p1);
    }
    return restore();
  };
  factor = function factor() {
    save();
    p2 = pop();
    p1 = pop();
    if (isinteger(p1)) {
      push(p1);
      factor_number(); // see pollard.cpp
    } else {
      push(p1);
      push(p2);
      factorpoly();
    }
    return restore();
  };

  // for factoring small integers (2^32 or less)
  factor_small_number = function factor_small_number() {
    var d, expo, i, n, o, ref;
    i = 0;
    save();
    n = pop_integer();
    if (isNaN(n)) {
      stop("number too big to factor");
    }
    if (n < 0) {
      n = -n;
    }
    for (i = o = 0, ref = MAXPRIMETAB; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      d = primetab[i];
      if (d > n / d) {
        break;
      }
      expo = 0;
      while (n % d === 0) {
        n /= d;
        expo++;
      }
      if (expo) {
        push_integer(d);
        push_integer(expo);
      }
    }
    if (n > 1) {
      push_integer(n);
      push_integer(1);
    }
    return restore();
  };
  factorial = function factorial() {
    var n;
    n = 0;
    save();
    p1 = pop();
    push(p1);
    n = pop_integer();
    if (n < 0 || isNaN(n)) {
      push_symbol(FACTORIAL);
      push(p1);
      list(2);
      restore();
      return;
    }
    bignum_factorial(n);
    return restore();
  };

  // simplification rules for factorials (m < n)

  //  (e + 1) * factorial(e)  ->  factorial(e + 1)

  //  factorial(e) / e  ->  factorial(e - 1)

  //  e / factorial(e)  ->  1 / factorial(e - 1)

  //  factorial(e + n)
  //  ----------------  ->  (e + m + 1)(e + m + 2)...(e + n)
  //  factorial(e + m)

  //  factorial(e + m)                               1
  //  ----------------  ->  --------------------------------
  //  factorial(e + n)    (e + m + 1)(e + m + 2)...(e + n)

  // this function is not actually used, but
  // all these simplifications
  // do happen automatically via simplify
  _simplifyfactorials = function simplifyfactorials() {
    var x;
    x = 0;
    save();
    x = expanding;
    expanding = 0;
    p1 = pop();
    if (car(p1) === symbol(ADD)) {
      push(zero);
      p1 = cdr(p1);
      while (iscons(p1)) {
        push(car(p1));
        _simplifyfactorials();
        add();
        p1 = cdr(p1);
      }
      expanding = x;
      restore();
      return;
    }
    if (car(p1) === symbol(MULTIPLY)) {
      sfac_product();
      expanding = x;
      restore();
      return;
    }
    push(p1);
    expanding = x;
    return restore();
  };
  sfac_product = function sfac_product() {
    var i, i1, j, j1, n, o, ref, ref1, ref2, ref3, s;
    i = 0;
    j = 0;
    n = 0;
    s = tos;
    p1 = cdr(p1);
    n = 0;
    while (iscons(p1)) {
      push(car(p1));
      p1 = cdr(p1);
      n++;
    }
    for (i = o = 0, ref = n - 1; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      if (stack[s + i] === symbol(NIL)) {
        continue;
      }
      for (j = i1 = ref1 = i + 1, ref2 = n; ref1 <= ref2 ? i1 < ref2 : i1 > ref2; j = ref1 <= ref2 ? ++i1 : --i1) {
        if (stack[s + j] === symbol(NIL)) {
          continue;
        }
        sfac_product_f(s, i, j);
      }
    }
    push(one);
    for (i = j1 = 0, ref3 = n; 0 <= ref3 ? j1 < ref3 : j1 > ref3; i = 0 <= ref3 ? ++j1 : --j1) {
      if (stack[s + i] === symbol(NIL)) {
        continue;
      }
      push(stack[s + i]);
      multiply();
    }
    p1 = pop();
    moveTos(tos - n);
    return push(p1);
  };
  sfac_product_f = function sfac_product_f(s, a, b) {
    var i, n, o, ref;
    i = 0;
    n = 0;
    p1 = stack[s + a];
    p2 = stack[s + b];
    if (ispower(p1)) {
      p3 = caddr(p1);
      p1 = cadr(p1);
    } else {
      p3 = one;
    }
    if (ispower(p2)) {
      p4 = caddr(p2);
      p2 = cadr(p2);
    } else {
      p4 = one;
    }
    if (isfactorial(p1) && isfactorial(p2)) {
      // Determine if the powers cancel.
      push(p3);
      push(p4);
      add();
      yyexpand();
      n = pop_integer();
      if (n !== 0) {
        return;
      }
      // Find the difference between the two factorial args.

      // For example, the difference between (a + 2)! and a! is 2.
      push(cadr(p1));
      push(cadr(p2));
      subtract();
      yyexpand();
      n = pop_integer();
      if (n === 0 || isNaN(n)) {
        return;
      }
      if (n < 0) {
        n = -n;
        p5 = p1;
        p1 = p2;
        p2 = p5;
        p5 = p3;
        p3 = p4;
        p4 = p5;
      }
      push(one);
      for (i = o = 1, ref = n; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {
        push(cadr(p2));
        push_integer(i);
        add();
        push(p3);
        power();
        multiply();
      }
      stack[s + a] = pop();
      return stack[s + b] = symbol(NIL);
    }
  };

  // Factor a polynomial
  factorpoly = function factorpoly() {
    var polynomial, variable;
    if (DEBUG) {
      console.log("factorpoly: " + stack[tos - 1].toString() + " " + stack[tos - 2].toString());
    }
    save();
    variable = pop();
    polynomial = pop();
    if (!_Find(polynomial, variable) || !ispolyexpandedform(polynomial, variable) || !issymbol(variable)) {
      push(polynomial);
    } else {
      yyfactorpoly(variable, polynomial);
    }
    return restore();
  };

  //-----------------------------------------------------------------------------

  //  Input:    tos-2    true polynomial

  //      tos-1    free variable

  //  Output:    factored polynomial on stack

  //-----------------------------------------------------------------------------
  yyfactorpoly = function yyfactorpoly(variable, polynomial) {
    var A, AxPlusB, B, checkingTheDivision, dividend, factpoly_expo, firstParam, foundComplexRoot, foundRealRoot, h, i, i1, j1, l1, o, partOfPolynomialFactoredSoFar, polycoeff, prev_expanding, previousFactorisation, ref, ref1, ref2, ref3, remainingPoly, secondDegreePloly, secondParam, whichRootsAreWeFinding;
    if (DEBUG) {
      firstParam = variable;
      secondParam = polynomial;
      console.log("yyfactorpoly: " + firstParam + " " + secondParam);
    }
    save();
    h = tos;
    if (_isfloating(polynomial)) {
      stop("floating point numbers in polynomial");
    }
    polycoeff = tos;
    factpoly_expo = coeff(variable, polynomial) - 1;
    if (DEBUG) {
      console.log("yyfactorpoly: " + firstParam + " " + secondParam + " factpoly_expo before rationalize_coefficients: " + factpoly_expo);
    }
    partOfPolynomialFactoredSoFar = rationalize_coefficients(h);
    if (DEBUG) {
      console.log("yyfactorpoly: " + firstParam + " " + secondParam + " factpoly_expo  after rationalize_coefficients: " + factpoly_expo);
    }
    // for univariate polynomials we could do factpoly_expo > 1
    whichRootsAreWeFinding = "real";
    remainingPoly = null;
    while (factpoly_expo > 0) {
      if (DEBUG) {
        console.log("yyfactorpoly: " + firstParam + " " + secondParam + " factpoly_expo inside while loop: " + factpoly_expo);
      }
      if (isZeroAtomOrTensor(stack[polycoeff + 0])) {
        if (DEBUG) {
          console.log("yyfactorpoly: " + firstParam + " " + secondParam + " isZeroAtomOrTensor");
        }
        A = one;
        B = zero;
      } else {
        //console.log("trying to find a " + whichRootsAreWeFinding + " root")
        if (whichRootsAreWeFinding === "real") {
          var _get_factor_from_real = get_factor_from_real_root(variable, factpoly_expo, polycoeff);
          var _get_factor_from_real2 = _slicedToArray(_get_factor_from_real, 3);
          foundRealRoot = _get_factor_from_real2[0];
          A = _get_factor_from_real2[1];
          B = _get_factor_from_real2[2];
        } else if (whichRootsAreWeFinding === "complex") {
          var _get_factor_from_comp = get_factor_from_complex_root(remainingPoly, factpoly_expo, polycoeff);
          var _get_factor_from_comp2 = _slicedToArray(_get_factor_from_comp, 2);
          foundComplexRoot = _get_factor_from_comp2[0];
          A = _get_factor_from_comp2[1];
        }
      }
      if (whichRootsAreWeFinding === "real") {
        if (foundRealRoot === 0) {
          whichRootsAreWeFinding = "complex";
          continue;
        } else {
          // build the 1-degree polynomial out of the
          // real solution that was just found.
          push(A); // A
          push(variable); // x
          multiply();
          push(B); // B
          add();
          AxPlusB = pop();
          if (DEBUG) {
            console.log("yyfactorpoly: " + firstParam + " " + secondParam + " success\nFACTOR=" + AxPlusB);
          }
          // factor out negative sign (not req'd because A > 1)
          //if 0
          /*
          if (isnegativeterm(A))
            push(AxPlusB)
            negate()
            AxPlusB = pop()
            push(partOfPolynomialFactoredSoFar)
            negate_noexpand()
            partOfPolynomialFactoredSoFar = pop()
          */
          //endif

          // partOfPolynomialFactoredSoFar is the part of the polynomial that was factored so far,
          // add the newly found factor to it. Note that we are not actually
          // multiplying the polynomials fully, we are just leaving them
          // expressed as (P1)*(P2), we are not expanding the product.
          push(partOfPolynomialFactoredSoFar);
          push(AxPlusB);
          multiply_noexpand();
          partOfPolynomialFactoredSoFar = pop();
          // ok now on stack we have the coefficients of the
          // remaining part of the polynomial still to factor.
          // Divide it by the newly-found factor so that
          // the stack then contains the coefficients of the
          // polynomial part still left to factor.
          yydivpoly(factpoly_expo, polycoeff, A, B);
          while (factpoly_expo && isZeroAtomOrTensor(stack[polycoeff + factpoly_expo])) {
            factpoly_expo--;
          }
          push(zero);
          for (i = o = 0, ref = factpoly_expo; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {
            push(stack[polycoeff + i]);
            push(variable); // the free variable
            push_integer(i);
            power();
            multiply();
            add();
          }
          remainingPoly = pop();
        }
        //console.log("real branch remainingPoly: " + remainingPoly)
      } else if (whichRootsAreWeFinding === "complex") {
        if (foundComplexRoot === 0) {
          break;
        } else {
          // build the 2-degree polynomial out of the
          // real solution that was just found.
          push(A); // A
          push(variable); // x
          subtract();
          //console.log("first factor: " + stack[tos-1].toString())
          push(A); // A
          conjugate();
          push(variable); // x
          subtract();
          //console.log("second factor: " + stack[tos-1].toString())
          multiply();
          //if (factpoly_expo > 0 && isnegativeterm(stack[polycoeff+factpoly_expo]))
          //  negate()
          //  negate_noexpand()
          secondDegreePloly = pop();
          if (DEBUG) {
            console.log("yyfactorpoly: " + firstParam + " " + secondParam + " success\nFACTOR=" + secondDegreePloly);
          }
          // factor out negative sign (not req'd because A > 1)
          //if 0
          /*
          if (isnegativeterm(A))
            push(secondDegreePloly)
            negate()
            secondDegreePloly = pop()
            push(partOfPolynomialFactoredSoFar)
            negate_noexpand()
            partOfPolynomialFactoredSoFar = pop()
          */
          //endif

          // partOfPolynomialFactoredSoFar is the part of the polynomial that was factored so far,
          // add the newly found factor to it. Note that we are not actually
          // multiplying the polynomials fully, we are just leaving them
          // expressed as (P1)*(P2), we are not expanding the product.
          push(partOfPolynomialFactoredSoFar);
          previousFactorisation = pop();
          //console.log("previousFactorisation: " + previousFactorisation)
          push(partOfPolynomialFactoredSoFar);
          push(secondDegreePloly);
          multiply_noexpand();
          partOfPolynomialFactoredSoFar = pop();
          if (remainingPoly == null) {
            push(zero);
            for (i = i1 = 0, ref1 = factpoly_expo; 0 <= ref1 ? i1 <= ref1 : i1 >= ref1; i = 0 <= ref1 ? ++i1 : --i1) {
              push(stack[polycoeff + i]);
              push(variable); // the free variable
              push_integer(i);
              power();
              multiply();
              add();
            }
            remainingPoly = pop();
          }
          //console.log("original polynomial (dividend): " + remainingPoly)
          dividend = remainingPoly;
          //push(dividend)
          //degree()
          //startingDegree = pop()
          push(dividend);
          //console.log("dividing " + stack[tos-1].toString() + " by " + secondDegreePloly)
          push(secondDegreePloly); // divisor
          push(variable); // X
          divpoly();
          remainingPoly = pop();
          push(remainingPoly);
          push(secondDegreePloly); // divisor
          multiply();
          checkingTheDivision = pop();
          if (!equal(checkingTheDivision, dividend)) {
            //push(dividend)
            //gcd_sum()
            //console.log("gcd top of stack: " + stack[tos-1].toString())
            if (DEBUG) {
              console.log("we found a polynomial based on complex root and its conj but it doesn't divide the poly, quitting");
            }
            if (DEBUG) {
              console.log("so just returning previousFactorisation times dividend: " + previousFactorisation + " * " + dividend);
            }
            push(previousFactorisation);
            push(dividend);
            prev_expanding = expanding;
            expanding = 0;
            yycondense();
            expanding = prev_expanding;
            multiply_noexpand();
            partOfPolynomialFactoredSoFar = pop();
            stack[h] = partOfPolynomialFactoredSoFar;
            moveTos(h + 1);
            restore();
            return;
          }
          //console.log("result: (still to be factored) " + remainingPoly)

          //push(remainingPoly)
          //degree()
          //remainingDegree = pop()
          /*
          if compare_numbers(startingDegree, remainingDegree)
           * ok even if we found a complex root that
           * together with the conjugate generates a poly in Z,
           * that doesn't mean that the division would end up in Z.
           * Example: 1+x^2+x^4+x^6 has +i and -i as one of its roots
           * so a factor is 1+x^2 ( = (x+i)*(x-i))
           * BUT 
           */
          for (i = j1 = 0, ref2 = factpoly_expo; 0 <= ref2 ? j1 <= ref2 : j1 >= ref2; i = 0 <= ref2 ? ++j1 : --j1) {
            pop();
          }
          coeff(variable, remainingPoly);
          factpoly_expo -= 2;
        }
      }
    }
    //console.log("factpoly_expo: " + factpoly_expo)
    if (DEBUG) {
      console.log("yyfactorpoly: " + firstParam + " " + secondParam + " building the remaining unfactored part of the polynomial");
    }
    push(zero);
    for (i = l1 = 0, ref3 = factpoly_expo; 0 <= ref3 ? l1 <= ref3 : l1 >= ref3; i = 0 <= ref3 ? ++l1 : --l1) {
      push(stack[polycoeff + i]);
      push(variable); // the free variable
      push_integer(i);
      power();
      multiply();
      add();
    }
    polynomial = pop();
    if (DEBUG) {
      console.log("yyfactorpoly: " + firstParam + " " + secondParam + " remaining unfactored part of the polynomial: " + polynomial.toString());
    }
    push(polynomial);
    prev_expanding = expanding;
    expanding = 0;
    yycondense();
    expanding = prev_expanding;
    polynomial = pop();
    if (DEBUG) {
      console.log("yyfactorpoly: " + firstParam + " " + secondParam + " new poly with extracted common factor: " + polynomial.toString());
    }
    //debugger

    // factor out negative sign
    if (factpoly_expo > 0 && isnegativeterm(stack[polycoeff + factpoly_expo])) {
      push(polynomial);
      //prev_expanding = expanding
      //expanding = 1
      negate();
      //expanding = prev_expanding
      polynomial = pop();
      push(partOfPolynomialFactoredSoFar);
      negate_noexpand();
      partOfPolynomialFactoredSoFar = pop();
    }
    push(partOfPolynomialFactoredSoFar);
    push(polynomial);
    multiply_noexpand();
    partOfPolynomialFactoredSoFar = pop();
    if (DEBUG) {
      console.log("yyfactorpoly: " + firstParam + " " + secondParam + " result: " + partOfPolynomialFactoredSoFar);
    }
    stack[h] = partOfPolynomialFactoredSoFar;
    moveTos(h + 1);
    return restore();
  };
  rationalize_coefficients = function rationalize_coefficients(h) {
    var i, i1, o, ratio, ratioInverse, ref, ref1, ref2, ref3;
    // LCM of all polynomial coefficients
    ratio = one;
    for (i = o = ref = h, ref1 = tos; ref <= ref1 ? o < ref1 : o > ref1; i = ref <= ref1 ? ++o : --o) {
      push(stack[i]);
      _denominator();
      push(ratio);
      lcm();
      ratio = pop();
    }
    // multiply each coefficient by RESULT
    for (i = i1 = ref2 = h, ref3 = tos; ref2 <= ref3 ? i1 < ref3 : i1 > ref3; i = ref2 <= ref3 ? ++i1 : --i1) {
      push(ratio);
      push(stack[i]);
      multiply();
      stack[i] = pop();
    }
    // reciprocate RESULT
    push(ratio);
    reciprocate();
    ratioInverse = pop();
    if (DEBUG) {
      console.log("rationalize_coefficients result: " + ratioInverse.toString());
    }
    return ratioInverse;
  };
  get_factor_from_real_root = function get_factor_from_real_root(variable, factpoly_expo, polycoeff) {
    var a0, an, evalPolyResult, h, i, i1, j, j1, l1, m1, na0, nan, o, polynomial, ref, ref1, ref2, ref3, ref4, rootsTries_i, rootsTries_j, testDenominator, testNumerator, testValue;
    if (DEBUG) {
      console.log("get_factor_from_real_root");
    }
    i = 0;
    j = 0;
    h = 0;
    a0 = 0;
    an = 0;
    na0 = 0;
    nan = 0;
    if (DEBUG) {
      push(zero);
      for (i = o = 0, ref = factpoly_expo; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {
        push(stack[polycoeff + i]);
        push(variable);
        push_integer(i);
        power();
        multiply();
        add();
      }
      polynomial = pop();
      console.log("POLY=" + polynomial);
    }
    h = tos;
    an = tos;
    push(stack[polycoeff + factpoly_expo]);
    divisors_onstack();
    nan = tos - an;
    a0 = tos;
    push(stack[polycoeff + 0]);
    divisors_onstack();
    na0 = tos - a0;
    if (DEBUG) {
      console.log("divisors of base term");
      for (i = i1 = 0, ref1 = na0; 0 <= ref1 ? i1 < ref1 : i1 > ref1; i = 0 <= ref1 ? ++i1 : --i1) {
        console.log(", " + stack[a0 + i]);
      }
      console.log("divisors of leading term");
      for (i = j1 = 0, ref2 = nan; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
        console.log(", " + stack[an + i]);
      }
    }
    // try roots
    for (rootsTries_i = l1 = 0, ref3 = nan; 0 <= ref3 ? l1 < ref3 : l1 > ref3; rootsTries_i = 0 <= ref3 ? ++l1 : --l1) {
      for (rootsTries_j = m1 = 0, ref4 = na0; 0 <= ref4 ? m1 < ref4 : m1 > ref4; rootsTries_j = 0 <= ref4 ? ++m1 : --m1) {
        //if DEBUG then console.log "nan: " + nan + " na0: " + na0 + " i: " + rootsTries_i + " j: " + rootsTries_j
        testNumerator = stack[an + rootsTries_i];
        testDenominator = stack[a0 + rootsTries_j];
        push(testDenominator);
        push(testNumerator);
        divide();
        negate();
        testValue = pop();
        evalPolyResult = Evalpoly(factpoly_expo, polycoeff, testValue);
        if (DEBUG) {
          console.log("try A=" + testNumerator);
          console.log(", B=" + testDenominator);
          console.log(", root " + variable);
          console.log("=-B/A=" + testValue);
          console.log(", POLY(" + testValue);
          console.log(")=" + evalPolyResult);
        }
        if (isZeroAtomOrTensor(evalPolyResult)) {
          moveTos(h);
          if (DEBUG) {
            console.log("get_factor_from_real_root returning 1");
          }
          return [1, testNumerator, testDenominator];
        }
        push(testDenominator);
        negate();
        testDenominator = pop();
        push(testValue);
        negate();
        testValue = pop();
        evalPolyResult = Evalpoly(factpoly_expo, polycoeff, testValue);
        if (DEBUG) {
          console.log("try A=" + testNumerator);
          console.log(", B=" + testDenominator);
          console.log(", root " + variable);
          console.log("=-B/A=" + testValue);
          console.log(", POLY(" + testValue);
          console.log(")=" + evalPolyResult);
        }
        if (isZeroAtomOrTensor(evalPolyResult)) {
          moveTos(h);
          if (DEBUG) {
            console.log("get_factor_from_real_root returning 1");
          }
          return [1, testNumerator, testDenominator];
        }
      }
    }
    moveTos(h);
    if (DEBUG) {
      console.log("get_factor_from_real_root returning");
    }
    return [0, null, null];
  };
  get_factor_from_complex_root = function get_factor_from_complex_root(remainingPoly, factpoly_expo, polycoeff) {
    var a0, an, evalPolyResult, h, i, i1, j, na0, nan, o, rootsTries_i, rootsTries_j, testValue;
    i = 0;
    j = 0;
    h = 0;
    a0 = 0;
    an = 0;
    na0 = 0;
    nan = 0;
    if (factpoly_expo <= 2) {
      if (DEBUG) {
        console.log("no more factoring via complex roots to be found in polynomial of degree <= 2");
      }
      return [0, null];
    }
    if (DEBUG) {
      console.log("complex root finding for POLY=" + remainingPoly);
    }
    h = tos;
    an = tos;
    // trying -1^(2/3) which generates a polynomial in Z
    // generates x^2 + 2x + 1
    push_integer(-1);
    push_rational(2, 3);
    power();
    _rect();
    testValue = pop();
    if (DEBUG) {
      console.log("complex root finding: trying with " + testValue);
    }
    push(testValue);
    evalPolyResult = Evalpoly(factpoly_expo, polycoeff, testValue);
    if (DEBUG) {
      console.log("complex root finding result: " + evalPolyResult);
    }
    if (isZeroAtomOrTensor(evalPolyResult)) {
      moveTos(h);
      if (DEBUG) {
        console.log("get_factor_from_complex_root returning 1");
      }
      return [1, testValue];
    }
    // trying 1^(2/3) which generates a polynomial in Z
    // http://www.wolframalpha.com/input/?i=(1)%5E(2%2F3)
    // generates x^2 - 2x + 1
    push_integer(1);
    push_rational(2, 3);
    power();
    _rect();
    testValue = pop();
    if (DEBUG) {
      console.log("complex root finding: trying with " + testValue);
    }
    push(testValue);
    evalPolyResult = Evalpoly(factpoly_expo, polycoeff, testValue);
    if (DEBUG) {
      console.log("complex root finding result: " + evalPolyResult);
    }
    if (isZeroAtomOrTensor(evalPolyResult)) {
      moveTos(h);
      if (DEBUG) {
        console.log("get_factor_from_complex_root returning 1");
      }
      return [1, testValue];
    }
    // trying some simple complex numbers. All of these
    // generate polynomials in Z
    for (rootsTries_i = o = -10; o <= 10; rootsTries_i = ++o) {
      for (rootsTries_j = i1 = 1; i1 <= 5; rootsTries_j = ++i1) {
        push_integer(rootsTries_i);
        push_integer(rootsTries_j);
        push(imaginaryunit);
        multiply();
        add();
        _rect();
        testValue = pop();
        if (DEBUG) {
          console.log("complex root finding: trying simple complex combination " + testValue);
        }
        push(testValue);
        evalPolyResult = Evalpoly(factpoly_expo, polycoeff, testValue);
        //console.log("complex root finding result: " + evalPolyResult)
        if (isZeroAtomOrTensor(evalPolyResult)) {
          moveTos(h);
          if (DEBUG) {
            console.log("found complex root: " + evalPolyResult);
          }
          return [1, testValue];
        }
      }
    }
    moveTos(h);
    if (DEBUG) {
      console.log("get_factor_from_complex_root returning 0");
    }
    return [0, null];
  };

  //-----------------------------------------------------------------------------

  //  Divide a polynomial by Ax+B

  //  Input:  on stack:  polycoeff  Dividend coefficients

  //      factpoly_expo   as parameter

  //      A    as parameter

  //      B    as parameter

  //  Output:   on stack: polycoeff  Contains quotient coefficients

  //-----------------------------------------------------------------------------
  yydivpoly = function yydivpoly(factpoly_expo, polycoeff, A, B) {
    var Q, i, o, ref;
    Q = zero;
    for (i = o = ref = factpoly_expo; ref <= 0 ? o < 0 : o > 0; i = ref <= 0 ? ++o : --o) {
      push(stack[polycoeff + i]);
      stack[polycoeff + i] = Q;
      push(A);
      divide();
      Q = pop();
      push(stack[polycoeff + i - 1]);
      push(Q);
      push(B);
      multiply();
      subtract();
      stack[polycoeff + i - 1] = pop();
    }
    stack[polycoeff + 0] = Q;
    if (DEBUG) {
      return console.log("yydivpoly Q: " + Q.toString());
    }
  };
  Evalpoly = function Evalpoly(factpoly_expo, polycoeff, evaluateAt) {
    var i, o, ref;
    push(zero);
    for (i = o = ref = factpoly_expo; ref <= 0 ? o <= 0 : o >= 0; i = ref <= 0 ? ++o : --o) {
      push(evaluateAt);
      multiply();
      push(stack[polycoeff + i]);
      //if DEBUG
      //  console.log("Evalpoly top of stack:")
      //  console.log stack[tos-i].toString()
      add();
    }
    return pop();
  };

  // Push expression factors onto the stack. For example...

  // Input

  //       2
  //     3x  + 2x + 1

  // Output on stack

  //     [  3  ]
  //     [ x^2 ]
  //     [  2  ]
  //     [  x  ]
  //     [  1  ]

  // but not necessarily in that order. Returns the number of factors.

  // Local U *p is OK here because no functional path to garbage collector.
  factors = function factors(p) {
    var h;
    h = tos;
    if (car(p) === symbol(ADD)) {
      p = cdr(p);
      while (iscons(p)) {
        push_term_factors(car(p));
        p = cdr(p);
      }
    } else {
      push_term_factors(p);
    }
    return tos - h;
  };

  // Local U *p is OK here because no functional path to garbage collector.
  push_term_factors = function push_term_factors(p) {
    var results;
    if (car(p) === symbol(MULTIPLY)) {
      p = cdr(p);
      results = [];
      while (iscons(p)) {
        push(car(p));
        results.push(p = cdr(p));
      }
      return results;
    } else {
      return push(p);
    }
  };
  Eval_filter = function Eval_filter() {
    var results;
    p1 = cdr(p1);
    push(car(p1));
    Eval();
    p1 = cdr(p1);
    results = [];
    while (iscons(p1)) {
      push(car(p1));
      Eval();
      filter();
      results.push(p1 = cdr(p1));
    }
    return results;
  };
  filter = function filter() {
    save();
    p2 = pop();
    p1 = pop();
    filter_main();
    return restore();
  };
  filter_main = function filter_main() {
    if (car(p1) === symbol(ADD)) {
      return filter_sum();
    } else if (istensor(p1)) {
      return filter_tensor();
    } else if (_Find(p1, p2)) {
      return push_integer(0);
    } else {
      return push(p1);
    }
  };
  filter_sum = function filter_sum() {
    var results;
    push_integer(0);
    p1 = cdr(p1);
    results = [];
    while (iscons(p1)) {
      push(car(p1));
      push(p2);
      filter();
      add();
      results.push(p1 = cdr(p1));
    }
    return results;
  };
  filter_tensor = function filter_tensor() {
    var i, i1, n, o, ref, ref1;
    i = 0;
    n = 0;
    n = p1.tensor.nelem;
    p3 = alloc_tensor(n);
    p3.tensor.ndim = p1.tensor.ndim;
    for (i = o = 0, ref = p1.tensor.ndim; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      p3.tensor.dim[i] = p1.tensor.dim[i];
    }
    for (i = i1 = 0, ref1 = n; 0 <= ref1 ? i1 < ref1 : i1 > ref1; i = 0 <= ref1 ? ++i1 : --i1) {
      push(p1.tensor.elem[i]);
      push(p2);
      filter();
      p3.tensor.elem[i] = pop();
    }
    return push(p3);
  };
  Eval_float = function Eval_float() {
    evaluatingAsFloats++;
    push(cadr(p1));
    Eval();
    _yyfloat();
    Eval();
    return evaluatingAsFloats--;
  };
  checkFloatHasWorkedOutCompletely = function checkFloatHasWorkedOutCompletely(nodeToCheck) {
    var numberOfEs, numberOfMults, numberOfPIs, numberOfPowers, numberOfSums;
    numberOfPowers = _countOccurrencesOfSymbol(symbol(POWER), nodeToCheck);
    numberOfPIs = _countOccurrencesOfSymbol(symbol(PI), nodeToCheck);
    numberOfEs = _countOccurrencesOfSymbol(symbol(E), nodeToCheck);
    numberOfMults = _countOccurrencesOfSymbol(symbol(MULTIPLY), nodeToCheck);
    numberOfSums = _countOccurrencesOfSymbol(symbol(ADD), nodeToCheck);
    if (DEBUG) {
      console.log("     ... numberOfPowers: " + numberOfPowers);
      console.log("     ... numberOfPIs: " + numberOfPIs);
      console.log("     ... numberOfEs: " + numberOfEs);
      console.log("     ... numberOfMults: " + numberOfMults);
      console.log("     ... numberOfSums: " + numberOfSums);
    }
    if (numberOfPowers > 1 || numberOfPIs > 0 || numberOfEs > 0 || numberOfMults > 1 || numberOfSums > 1) {
      return stop("float: some unevalued parts in " + nodeToCheck);
    }
  };
  zzfloat = function zzfloat() {
    save();
    evaluatingAsFloats++;
    //p1 = pop()
    //push(cadr(p1))
    //push(p1)
    Eval();
    _yyfloat();
    Eval();
    evaluatingAsFloats--;
    return restore();
  };

  // zzfloat doesn't necessarily result in a double
  // , for example if there are variables. But
  // in many of the tests there should be indeed
  // a float, this line comes handy to highlight
  // when that doesn't happen for those tests.
  //checkFloatHasWorkedOutCompletely(stack[tos-1])
  _yyfloat = function yyfloat() {
    var h, i, o, ref;
    i = 0;
    h = 0;
    evaluatingAsFloats++;
    save();
    p1 = pop();
    if (iscons(p1)) {
      h = tos;
      while (iscons(p1)) {
        push(car(p1));
        _yyfloat();
        p1 = cdr(p1);
      }
      list(tos - h);
    } else if (p1.k === TENSOR) {
      push(p1);
      copy_tensor();
      p1 = pop();
      for (i = o = 0, ref = p1.tensor.nelem; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
        push(p1.tensor.elem[i]);
        _yyfloat();
        p1.tensor.elem[i] = pop();
      }
      push(p1);
    } else if (p1.k === NUM) {
      push(p1);
      bignum_float();
    } else if (p1 === symbol(PI)) {
      push_double(Math.PI);
    } else if (p1 === symbol(E)) {
      push_double(Math.E);
    } else {
      push(p1);
    }
    restore();
    return evaluatingAsFloats--;
  };
  Eval_floor = function Eval_floor() {
    push(cadr(p1));
    Eval();
    return yfloor();
  };
  yfloor = function yfloor() {
    save();
    yyfloor();
    return restore();
  };
  yyfloor = function yyfloor() {
    var d;
    d = 0.0;
    p1 = pop();
    if (!isNumericAtom(p1)) {
      push_symbol(FLOOR);
      push(p1);
      list(2);
      return;
    }
    if (isdouble(p1)) {
      d = Math.floor(p1.d);
      push_double(d);
      return;
    }
    if (isinteger(p1)) {
      push(p1);
      return;
    }
    p3 = new U();
    p3.k = NUM;
    p3.q.a = mdiv(p1.q.a, p1.q.b);
    p3.q.b = mint(1);
    push(p3);
    if (isnegativenumber(p1)) {
      push_integer(-1);
      return add();
    }
  };

  // 'for' function
  /*
  x=0
  y=2
  for(do(x=sqrt(2+x),y=2*y/x),k,1,9)
  float(y)
   X: k
  B: 1...9
   1st parameter is the body
  2nd parameter is the variable to loop with
  3rd and 4th are the limits
   */
  //define A p3
  //define B p4
  //define I p5
  //define X p6
  Eval_for = function Eval_for() {
    var i, j, k, loopingVariable, o, ref, ref1;
    i = 0;
    j = 0;
    k = 0;
    loopingVariable = caddr(p1);
    if (!issymbol(loopingVariable)) {
      stop("for: 2nd arg should be the variable to loop over");
    }
    push(cadddr(p1));
    Eval();
    j = pop_integer();
    if (isNaN(j)) {
      push(p1);
      return;
    }
    push(caddddr(p1));
    Eval();
    k = pop_integer();
    if (isNaN(k)) {
      push(p1);
      return;
    }
    // remember contents of the index
    // variable so we can put it back after the loop
    p4 = get_binding(loopingVariable);
    for (i = o = ref = j, ref1 = k; ref <= ref1 ? o <= ref1 : o >= ref1; i = ref <= ref1 ? ++o : --o) {
      push_integer(i);
      p5 = pop();
      set_binding(loopingVariable, p5);
      push(cadr(p1));
      Eval();
      pop();
    }
    // put back the index variable to original content
    set_binding(loopingVariable, p4);
    // return value
    return push_symbol(NIL);
  };

  //-----------------------------------------------------------------------------

  //  Author : philippe.billet@noos.fr

  //  Gamma function gamma(x)

  //-----------------------------------------------------------------------------
  Eval_gamma = function Eval_gamma() {
    push(cadr(p1));
    Eval();
    return gamma();
  };
  gamma = function gamma() {
    save();
    gammaf();
    return restore();
  };
  gammaf = function gammaf() {
    //  double d
    p1 = pop();
    if (isrational(p1) && MEQUAL(p1.q.a, 1) && MEQUAL(p1.q.b, 2)) {
      if (evaluatingAsFloats) {
        push_double(Math.PI);
      } else {
        push_symbol(PI);
      }
      push_rational(1, 2);
      power();
      return;
    }
    if (isrational(p1) && MEQUAL(p1.q.a, 3) && MEQUAL(p1.q.b, 2)) {
      if (evaluatingAsFloats) {
        push_double(Math.PI);
      } else {
        push_symbol(PI);
      }
      push_rational(1, 2);
      power();
      push_rational(1, 2);
      multiply();
      return;
    }

    //  if (p1->k == DOUBLE) {
    //    d = exp(lgamma(p1.d))
    //    push_double(d)
    //    return
    //  }
    if (isnegativeterm(p1)) {
      if (evaluatingAsFloats) {
        push_double(Math.PI);
      } else {
        push_symbol(PI);
      }
      push_integer(-1);
      multiply();
      if (evaluatingAsFloats) {
        push_double(Math.PI);
      } else {
        push_symbol(PI);
      }
      push(p1);
      multiply();
      sine();
      push(p1);
      multiply();
      push(p1);
      negate();
      gamma();
      multiply();
      divide();
      return;
    }
    if (car(p1) === symbol(ADD)) {
      gamma_of_sum();
      return;
    }
    push_symbol(GAMMA);
    push(p1);
    list(2);
  };
  gamma_of_sum = function gamma_of_sum() {
    p3 = cdr(p1);
    if (isrational(car(p3)) && MEQUAL(car(p3).q.a, 1) && MEQUAL(car(p3).q.b, 1)) {
      push(cadr(p3));
      push(cadr(p3));
      gamma();
      return multiply();
    } else {
      if (isrational(car(p3)) && MEQUAL(car(p3).q.a, -1) && MEQUAL(car(p3).q.b, 1)) {
        push(cadr(p3));
        gamma();
        push(cadr(p3));
        push_integer(-1);
        add();
        return divide();
      } else {
        push_symbol(GAMMA);
        push(p1);
        list(2);
      }
    }
  };

  // Greatest common denominator
  // can also be run on polynomials, however
  // it works only on the integers and it works
  // by factoring the polynomials (not Euclidean algorithm)
  Eval_gcd = function Eval_gcd() {
    var results;
    p1 = cdr(p1);
    push(car(p1));
    Eval();
    p1 = cdr(p1);
    results = [];
    while (iscons(p1)) {
      push(car(p1));
      Eval();
      gcd();
      results.push(p1 = cdr(p1));
    }
    return results;
  };
  gcd = function gcd() {
    var prev_expanding;
    prev_expanding = expanding;
    save();
    gcd_main();
    restore();
    return expanding = prev_expanding;
  };
  gcd_main = function gcd_main() {
    var polyVar;
    expanding = 1;
    p2 = pop();
    p1 = pop();
    if (DEBUG) {
      console.log("gcd_main: p1: " + p1 + " p2: " + p2);
    }
    if (equal(p1, p2)) {
      push(p1);
      return;
    }
    if (isrational(p1) && isrational(p2)) {
      push(p1);
      push(p2);
      gcd_numbers();
      return;
    }
    if (polyVar = areunivarpolysfactoredorexpandedform(p1, p2)) {
      gcd_polys(polyVar);
      return;
    }
    if (car(p1) === symbol(ADD) && car(p2) === symbol(ADD)) {
      gcd_sum_sum();
      return;
    }
    if (car(p1) === symbol(ADD)) {
      gcd_sum(p1);
      p1 = pop();
    }
    if (car(p2) === symbol(ADD)) {
      gcd_sum(p2);
      p2 = pop();
    }
    if (car(p1) === symbol(MULTIPLY)) {
      gcd_sum_product();
      return;
    }
    if (car(p2) === symbol(MULTIPLY)) {
      gcd_product_sum();
      return;
    }
    if (car(p1) === symbol(MULTIPLY) && car(p2) === symbol(MULTIPLY)) {
      gcd_product_product();
      return;
    }
    return gcd_powers_with_same_base();
  };
  areunivarpolysfactoredorexpandedform = function areunivarpolysfactoredorexpandedform(p1, p2) {
    var polyVar;
    if (DEBUG) {
      console.log("areunivarpolysfactoredorexpandedform: p1: " + p1 + " p2: " + p2);
    }
    if (polyVar = isunivarpolyfactoredorexpandedform(p1)) {
      if (isunivarpolyfactoredorexpandedform(p2, polyVar)) {
        return polyVar;
      }
    }
    return false;
  };
  gcd_polys = function gcd_polys(polyVar) {
    if (DEBUG) {
      console.log("gcd_polys: p1: " + p1 + " polyVar: " + polyVar);
    }
    // gcd of factors
    push(p1);
    push(polyVar);
    factorpoly();
    p1 = pop();
    push(p2);
    push(polyVar);
    factorpoly();
    p2 = pop();
    if (DEBUG) {
      console.log("GCD: factored polys:");
    }
    if (DEBUG) {
      console.log("  p1:" + p1.toString());
    }
    if (DEBUG) {
      console.log("  p2:" + p2.toString());
    }
    // In case one of two polynomials can be factored,
    // (and only in that case), then
    // we'll need to run gcd_factors on the two polynomials.
    // (In case neither of them can be factored there is no gcd).
    // However, gcd_factors expects two _products_ , and
    // in case _one_ of the polynomials can't be factored it will look
    // like a sum instead of a product.
    // So, we'll have to make that sum to look like a factor:
    // let's just turn it into a product with 1.

    // in case one of the two polys has been factored...
    if (car(p1) === symbol(MULTIPLY) || car(p2) === symbol(MULTIPLY)) {
      // then make sure that if one of them is a single
      // factor, we take the sum and wrap it into a
      // multiplication by 1
      if (car(p1) !== symbol(MULTIPLY)) {
        push_symbol(MULTIPLY);
        push(p1);
        push(one);
        list(3);
        p1 = pop();
      }
      if (car(p2) !== symbol(MULTIPLY)) {
        push_symbol(MULTIPLY);
        push(p2);
        push(one);
        list(3);
        p2 = pop();
      }
    }
    if (car(p1) === symbol(MULTIPLY) && car(p2) === symbol(MULTIPLY)) {
      gcd_product_product();
      return;
    }
    gcd_powers_with_same_base();
    return true;
  };
  gcd_product_product = function gcd_product_product() {
    var results;
    push(one);
    p3 = cdr(p1);
    results = [];
    while (iscons(p3)) {
      p4 = cdr(p2);
      while (iscons(p4)) {
        push(car(p3));
        push(car(p4));
        gcd();
        multiply();
        p4 = cdr(p4);
      }
      results.push(p3 = cdr(p3));
    }
    return results;
  };
  gcd_powers_with_same_base = function gcd_powers_with_same_base() {
    if (car(p1) === symbol(POWER)) {
      p3 = caddr(p1); // exponent
      p1 = cadr(p1); // base
    } else {
      p3 = one;
    }
    if (car(p2) === symbol(POWER)) {
      p4 = caddr(p2); // exponent
      p2 = cadr(p2); // base
    } else {
      p4 = one;
    }
    if (!equal(p1, p2)) {
      push(one);
      return;
    }
    // are both exponents numerical?
    if (isNumericAtom(p3) && isNumericAtom(p4)) {
      push(p1);
      if (lessp(p3, p4)) {
        push(p3);
      } else {
        push(p4);
      }
      power();
      return;
    }
    // are the exponents multiples of eah other?
    push(p3);
    push(p4);
    divide();
    p5 = pop();
    if (isNumericAtom(p5)) {
      push(p1);
      // choose the smallest exponent
      if (car(p3) === symbol(MULTIPLY) && isNumericAtom(cadr(p3))) {
        p5 = cadr(p3);
      } else {
        p5 = one;
      }
      if (car(p4) === symbol(MULTIPLY) && isNumericAtom(cadr(p4))) {
        p6 = cadr(p4);
      } else {
        p6 = one;
      }
      if (lessp(p5, p6)) {
        push(p3);
      } else {
        push(p4);
      }
      power();
      return;
    }
    push(p3);
    push(p4);
    subtract();
    p5 = pop();
    if (!isNumericAtom(p5)) {
      push(one);
      return;
    }
    // can't be equal because of test near beginning
    push(p1);
    if (isnegativenumber(p5)) {
      push(p3);
    } else {
      push(p4);
    }
    return power();
  };

  // in this case gcd is used as a composite function, i.e. gcd(gcd(gcd...
  gcd_sum_sum = function gcd_sum_sum() {
    if (length(p1) !== length(p2)) {
      push(one);
      return;
    }
    p3 = cdr(p1);
    push(car(p3));
    p3 = cdr(p3);
    while (iscons(p3)) {
      push(car(p3));
      gcd();
      p3 = cdr(p3);
    }
    p3 = pop();
    p4 = cdr(p2);
    push(car(p4));
    p4 = cdr(p4);
    while (iscons(p4)) {
      push(car(p4));
      gcd();
      p4 = cdr(p4);
    }
    p4 = pop();
    push(p1);
    push(p3);
    divide();
    p5 = pop();
    push(p2);
    push(p4);
    divide();
    p6 = pop();
    if (equal(p5, p6)) {
      push(p5);
      push(p3);
      push(p4);
      gcd();
      return multiply();
    } else {
      return push(one);
    }
  };
  gcd_sum = function gcd_sum(p) {
    var results;
    p = cdr(p);
    push(car(p));
    p = cdr(p);
    results = [];
    while (iscons(p)) {
      push(car(p));
      gcd();
      results.push(p = cdr(p));
    }
    return results;
  };
  gcd_sum_product = function gcd_sum_product() {
    var results;
    push(one);
    p3 = cdr(p1);
    results = [];
    while (iscons(p3)) {
      push(car(p3));
      push(p2);
      gcd();
      multiply();
      results.push(p3 = cdr(p3));
    }
    return results;
  };
  gcd_product_sum = function gcd_product_sum() {
    var results;
    push(one);
    p4 = cdr(p2);
    results = [];
    while (iscons(p4)) {
      push(p1);
      push(car(p4));
      gcd();
      multiply();
      results.push(p4 = cdr(p4));
    }
    return results;
  };

  // Guess which symbol to use for derivative, integral, etc.
  guess = function guess() {
    var p;
    p = pop();
    push(p);
    if (_Find(p, symbol(SYMBOL_X))) {
      return push_symbol(SYMBOL_X);
    } else if (_Find(p, symbol(SYMBOL_Y))) {
      return push_symbol(SYMBOL_Y);
    } else if (_Find(p, symbol(SYMBOL_Z))) {
      return push_symbol(SYMBOL_Z);
    } else if (_Find(p, symbol(SYMBOL_T))) {
      return push_symbol(SYMBOL_T);
    } else if (_Find(p, symbol(SYMBOL_S))) {
      return push_symbol(SYMBOL_S);
    } else {
      return push_symbol(SYMBOL_X);
    }
  };

  //-----------------------------------------------------------------------------

  //  Hermite polynomial

  //  Input:    tos-2    x  (can be a symbol or expr)

  //      tos-1    n

  //  Output:    Result on stack

  //-----------------------------------------------------------------------------
  hermite = function hermite() {
    save();
    yyhermite();
    return restore();
  };

  // uses the recurrence relation H(x,n+1)=2*x*H(x,n)-2*n*H(x,n-1)

  //define X p1
  //define N p2
  //define Y p3
  //define Y1 p4
  //define Y0 p5
  yyhermite = function yyhermite() {
    var n;
    n = 0;
    p2 = pop();
    p1 = pop();
    push(p2);
    n = pop_integer();
    if (n < 0 || isNaN(n)) {
      push_symbol(HERMITE);
      push(p1);
      push(p2);
      list(3);
      return;
    }
    if (issymbol(p1)) {
      return yyhermite2(n);
    } else {
      p3 = p1;
      p1 = symbol(SECRETX);
      yyhermite2(n);
      p1 = p3;
      push(symbol(SECRETX));
      push(p1);
      _subst();
      return Eval();
    }
  };
  yyhermite2 = function yyhermite2(n) {
    var i, o, ref, results;
    i = 0;
    push_integer(1);
    push_integer(0);
    p4 = pop();
    results = [];
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      p5 = p4;
      p4 = pop();
      push(p1);
      push(p4);
      multiply();
      push_integer(i);
      push(p5);
      multiply();
      subtract();
      push_integer(2);
      results.push(multiply());
    }
    return results;
  };

  //-----------------------------------------------------------------------------

  //  Create a Hilbert matrix

  //  Input:    Dimension on stack

  //  Output:    Hilbert matrix on stack

  //  Example:

  //  > hilbert(5)
  //  ((1,1/2,1/3,1/4),(1/2,1/3,1/4,1/5),(1/3,1/4,1/5,1/6),(1/4,1/5,1/6,1/7))

  //-----------------------------------------------------------------------------

  //define A p1
  //define N p2

  //define AELEM(i, j) A->u.tensor->elem[i * n + j]
  hilbert = function hilbert() {
    var i, i1, j, n, o, ref, ref1;
    i = 0;
    j = 0;
    n = 0;
    save();
    p2 = pop();
    push(p2);
    n = pop_integer();
    if (n < 2) {
      push_symbol(HILBERT);
      push(p2);
      list(2);
      restore();
      return;
    }
    push_zero_matrix(n, n);
    p1 = pop();
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      for (j = i1 = 0, ref1 = n; 0 <= ref1 ? i1 < ref1 : i1 > ref1; j = 0 <= ref1 ? ++i1 : --i1) {
        push_integer(i + j + 1);
        inverse();
        p1.tensor.elem[i * n + j] = pop();
      }
    }
    push(p1);
    return restore();
  };
  DEBUG_IMAG = false;
  Eval_imag = function Eval_imag() {
    push(cadr(p1));
    Eval();
    return imag();
  };
  imag = function imag() {
    save();
    _rect();
    p1 = pop();
    if (DEBUG_IMAG) {
      console.log("IMAGE of " + p1);
    }
    push(p1);
    push(p1);
    conjugate();
    if (DEBUG_IMAG) {
      console.log(" image: conjugate result: " + stack[tos - 1]);
    }
    subtract();
    push_integer(2);
    divide();
    if (DEBUG_IMAG) {
      console.log(" image: 1st divide result: " + stack[tos - 1]);
    }
    push(imaginaryunit);
    divide();
    if (DEBUG_IMAG) {
      console.log(" image: 2nd divide result: " + stack[tos - 1]);
    }
    return restore();
  };

  // n is the total number of things on the stack. The first thing on the stack
  // is the object to be indexed, followed by the indices themselves.

  // called by Eval_index
  index_function = function index_function(n) {
    var i, i1, j1, k, l1, m, m1, ndim, nelem, o, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, s, t;
    i = 0;
    k = 0;
    m = 0;
    ndim = 0;
    nelem = 0;
    t = 0;
    save();
    s = tos - n;
    p1 = stack[s];
    ndim = p1.tensor.ndim;
    m = n - 1;
    if (m > ndim) {
      stop("too many indices for tensor");
    }
    k = 0;
    for (i = o = 0, ref = m; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      push(stack[s + i + 1]);
      t = pop_integer();
      if (t < 1 || t > p1.tensor.dim[i]) {
        stop("index out of range");
      }
      k = k * p1.tensor.dim[i] + t - 1;
    }
    if (ndim === m) {
      moveTos(tos - n);
      push(p1.tensor.elem[k]);
      restore();
      return;
    }
    for (i = i1 = ref1 = m, ref2 = ndim; ref1 <= ref2 ? i1 < ref2 : i1 > ref2; i = ref1 <= ref2 ? ++i1 : --i1) {
      k = k * p1.tensor.dim[i] + 0;
    }
    nelem = 1;
    for (i = j1 = ref3 = m, ref4 = ndim; ref3 <= ref4 ? j1 < ref4 : j1 > ref4; i = ref3 <= ref4 ? ++j1 : --j1) {
      nelem *= p1.tensor.dim[i];
    }
    p2 = alloc_tensor(nelem);
    p2.tensor.ndim = ndim - m;
    for (i = l1 = ref5 = m, ref6 = ndim; ref5 <= ref6 ? l1 < ref6 : l1 > ref6; i = ref5 <= ref6 ? ++l1 : --l1) {
      p2.tensor.dim[i - m] = p1.tensor.dim[i];
    }
    for (i = m1 = 0, ref7 = nelem; 0 <= ref7 ? m1 < ref7 : m1 > ref7; i = 0 <= ref7 ? ++m1 : --m1) {
      p2.tensor.elem[i] = p1.tensor.elem[k + i];
    }
    check_tensor_dimensions(p1);
    check_tensor_dimensions(p2);
    moveTos(tos - n);
    push(p2);
    return restore();
  };

  //-----------------------------------------------------------------------------

  //  Input:    n    Number of args on stack

  //      tos-n    Right-hand value

  //      tos-n+1    Left-hand value

  //      tos-n+2    First index

  //      .
  //      .
  //      .

  //      tos-1    Last index

  //  Output:    Result on stack

  //-----------------------------------------------------------------------------

  //define LVALUE p1
  //define RVALUE p2
  //define TMP p3
  set_component = function set_component(n) {
    var i, i1, j1, k, l1, m, m1, n1, ndim, o, ref, ref1, ref2, ref3, ref4, ref5, ref6, s, t;
    i = 0;
    k = 0;
    m = 0;
    ndim = 0;
    t = 0;
    save();
    if (n < 3) {
      stop("error in indexed assign");
    }
    s = tos - n;
    p2 = stack[s];
    p1 = stack[s + 1];
    if (!istensor(p1)) {
      // p1 is LVALUE
      stop("error in indexed assign: assigning to something that is not a tensor");
    }
    ndim = p1.tensor.ndim;
    m = n - 2;
    if (m > ndim) {
      stop("error in indexed assign");
    }
    k = 0;
    for (i = o = 0, ref = m; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      push(stack[s + i + 2]);
      t = pop_integer();
      if (t < 1 || t > p1.tensor.dim[i]) {
        stop("error in indexed assign\n");
      }
      k = k * p1.tensor.dim[i] + t - 1;
    }
    for (i = i1 = ref1 = m, ref2 = ndim; ref1 <= ref2 ? i1 < ref2 : i1 > ref2; i = ref1 <= ref2 ? ++i1 : --i1) {
      k = k * p1.tensor.dim[i] + 0;
    }
    // copy
    p3 = alloc_tensor(p1.tensor.nelem);
    p3.tensor.ndim = p1.tensor.ndim;
    for (i = j1 = 0, ref3 = p1.tensor.ndim; 0 <= ref3 ? j1 < ref3 : j1 > ref3; i = 0 <= ref3 ? ++j1 : --j1) {
      p3.tensor.dim[i] = p1.tensor.dim[i];
    }
    for (i = l1 = 0, ref4 = p1.tensor.nelem; 0 <= ref4 ? l1 < ref4 : l1 > ref4; i = 0 <= ref4 ? ++l1 : --l1) {
      p3.tensor.elem[i] = p1.tensor.elem[i];
    }
    check_tensor_dimensions(p1);
    check_tensor_dimensions(p3);
    p1 = p3;
    if (ndim === m) {
      if (istensor(p2)) {
        // p2 is RVALUE
        stop("error in indexed assign");
      }
      p1.tensor.elem[k] = p2;
      check_tensor_dimensions(p1);
      moveTos(tos - n);
      push(p1);
      restore();
      return;
    }
    if (!istensor(p2)) {
      // p2 is RVALUE
      stop("error in indexed assign");
    }
    if (ndim - m !== p2.tensor.ndim) {
      // p2 is RVALUE
      stop("error in indexed assign");
    }
    // p2 is RVALUE
    for (i = m1 = 0, ref5 = p2.tensor.ndim; 0 <= ref5 ? m1 < ref5 : m1 > ref5; i = 0 <= ref5 ? ++m1 : --m1) {
      if (p1.tensor.dim[m + i] !== p2.tensor.dim[i]) {
        stop("error in indexed assign");
      }
    }
    // p2 is RVALUE
    // copy rvalue
    for (i = n1 = 0, ref6 = p2.tensor.nelem; 0 <= ref6 ? n1 < ref6 : n1 > ref6; i = 0 <= ref6 ? ++n1 : --n1) {
      p1.tensor.elem[k + i] = p2.tensor.elem[i];
    }
    check_tensor_dimensions(p1);
    check_tensor_dimensions(p2);
    moveTos(tos - n);
    push(p1);
    return restore();
  };
  _Eval_inner = function Eval_inner() {
    var difference, i, i1, j1, l1, moretheArguments, o, operands, ref, ref1, ref2, ref3, refinedOperands, results, secondArgument, shift, theArguments;

    // if there are more than two arguments then
    // reduce it to a more standard version
    // of two arguments, which means we need to
    // transform the arguments into a tree of
    // inner products e.g.
    // inner(a,b,c) becomes inner(a,inner(b,c))
    // this is so we can get to a standard binary-tree
    // version that is simpler to manipulate.
    theArguments = [];
    theArguments.push(car(cdr(p1)));
    secondArgument = car(cdr(cdr(p1)));
    if (secondArgument === symbol(NIL)) {
      stop("pattern needs at least a template and a transformed version");
    }
    moretheArguments = cdr(cdr(p1));
    while (moretheArguments !== symbol(NIL)) {
      theArguments.push(car(moretheArguments));
      moretheArguments = cdr(moretheArguments);
    }
    // make it so e.g. inner(a,b,c) becomes inner(a,inner(b,c))
    if (theArguments.length > 2) {
      push_symbol(INNER);
      push(theArguments[theArguments.length - 2]);
      push(theArguments[theArguments.length - 1]);
      list(3);
      for (i = o = 2, ref = theArguments.length; 2 <= ref ? o < ref : o > ref; i = 2 <= ref ? ++o : --o) {
        push_symbol(INNER);
        swap();
        push(theArguments[theArguments.length - i - 1]);
        swap();
        list(3);
      }
      p1 = pop();
      _Eval_inner();
      return;
    }
    // TODO we have to take a look at the whole
    // sequence of operands and make simplifications
    // on that...
    operands = [];
    _get_innerprod_factors(p1, operands);
    //console.log "printing operands --------"
    //for i in [0...operands.length]
    //  console.log "operand " + i + " : " + operands[i]
    refinedOperands = [];
    // removing all identity matrices
    for (i = i1 = 0, ref1 = operands.length; 0 <= ref1 ? i1 < ref1 : i1 > ref1; i = 0 <= ref1 ? ++i1 : --i1) {
      if (operands[i] === symbol(SYMBOL_IDENTITY_MATRIX)) {
        continue;
      } else {
        refinedOperands.push(operands[i]);
      }
    }
    operands = refinedOperands;
    refinedOperands = [];
    if (operands.length > 1) {
      // removing all consecutive pairs of inverses
      // so we can answer that inv(a)·a results in the
      // identity matrix. We want to catch symbolic inverses
      // not numeric inverses, those will just take care
      // of themselves when multiplied
      shift = 0;
      for (i = j1 = 0, ref2 = operands.length; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
        //console.log "comparing if " + operands[i+shift] + " and " + operands[i+shift+1] + " are inverses of each other"
        if (i + shift + 1 <= operands.length - 1) {
          if (!(_isNumericAtomOrTensor(operands[i + shift]) || _isNumericAtomOrTensor(operands[i + shift + 1]))) {
            push(operands[i + shift]);
            Eval();
            _inv();
            push(operands[i + shift + 1]);
            Eval();
            subtract();
            difference = pop();
            //console.log "result: " + difference
            if (isZeroAtomOrTensor(difference)) {
              shift += 1;
            } else {
              refinedOperands.push(operands[i + shift]);
            }
          } else {
            refinedOperands.push(operands[i + shift]);
          }
        } else {
          break;
        }
        //console.log "i: " + i + " shift: " + shift + " operands.length: " + operands.length
        if (i + shift === operands.length - 2) {
          //console.log "adding last operand 2 "
          refinedOperands.push(operands[operands.length - 1]);
        }
        if (i + shift >= operands.length - 1) {
          break;
        }
      }
      operands = refinedOperands;
    }
    //console.log "refined operands --------"
    //for i in [0...refinedOperands.length]
    //  console.log "refined operand " + i + " : " + refinedOperands[i]

    //console.log "stack[tos-1]: " + stack[tos-1]

    // now rebuild the arguments, just using the
    // refined operands
    push(symbol(INNER));
    //console.log "rebuilding the argument ----"
    if (operands.length > 0) {
      for (i = l1 = 0, ref3 = operands.length; 0 <= ref3 ? l1 < ref3 : l1 > ref3; i = 0 <= ref3 ? ++l1 : --l1) {
        //console.log "pushing " + operands[i]
        push(operands[i]);
      }
    } else {
      pop();
      push(symbol(SYMBOL_IDENTITY_MATRIX));
      return;
    }
    //console.log "list(operands.length): " + (operands.length+1)
    list(operands.length + 1);
    p1 = pop();
    p1 = cdr(p1);
    push(car(p1));
    Eval();
    p1 = cdr(p1);
    results = [];
    while (iscons(p1)) {
      push(car(p1));
      Eval();
      _inner();
      results.push(p1 = cdr(p1));
    }
    return results;
  };

  // inner definition
  _inner = function inner() {
    var arg1, arg2, arg3, subtractionResult;
    save();
    p2 = pop();
    p1 = pop();
    // more in general, when a and b are scalars,
    // inner(a*M1, b*M2) is equal to
    // a*b*inner(M1,M2), but of course we can only
    // "bring out" in a and b the scalars, because
    // it's the only commutative part.
    // that's going to be trickier to do in general
    // but let's start with just the signs.
    if (isnegativeterm(p2) && isnegativeterm(p1)) {
      push(p2);
      negate();
      p2 = pop();
      push(p1);
      negate();
      p1 = pop();
    }
    // since inner is associative,
    // put it in a canonical form i.e.
    // inner(inner(a,b),c) ->
    // inner(a,inner(b,c))
    // so that we can recognise when they
    // are equal.
    if (isinnerordot(p1)) {
      arg1 = car(cdr(p1)); //a
      arg2 = car(cdr(cdr(p1))); //b
      arg3 = p2;
      p1 = arg1;
      push(arg2);
      push(arg3);
      _inner();
      p2 = pop();
    }
    // Check if one of the operands is the identity matrix
    // we could maybe use Eval_testeq here but
    // this seems to suffice?
    if (p1 === symbol(SYMBOL_IDENTITY_MATRIX)) {
      push(p2);
      restore();
      return;
    } else if (p2 === symbol(SYMBOL_IDENTITY_MATRIX)) {
      push(p1);
      restore();
      return;
    }
    if (istensor(p1) && istensor(p2)) {
      inner_f();
    } else {
      if (!(_isNumericAtomOrTensor(p1) || _isNumericAtomOrTensor(p2))) {
        push(p1);
        push(p2);
        _inv();
        subtract();
        subtractionResult = pop();
        if (isZeroAtomOrTensor(subtractionResult)) {
          push_symbol(SYMBOL_IDENTITY_MATRIX);
          restore();
          return;
        }
      }
      // if either operand is a sum then distribute
      // (if we are in expanding mode)
      if (expanding && isadd(p1)) {
        p1 = cdr(p1);
        push(zero);
        while (iscons(p1)) {
          push(car(p1));
          push(p2);
          _inner();
          add();
          p1 = cdr(p1);
        }
        restore();
        return;
      }
      if (expanding && isadd(p2)) {
        p2 = cdr(p2);
        push(zero);
        while (iscons(p2)) {
          push(p1);
          push(car(p2));
          _inner();
          add();
          p2 = cdr(p2);
        }
        restore();
        return;
      }
      push(p1);
      push(p2);
      // there are 8 remaining cases here, since each of the
      // two arguments can only be a scalar/tensor/unknown
      // and the tensor - tensor case was caught
      // upper in the code
      if (istensor(p1) && isNumericAtom(p2)) {
        // one case covered by this branch:
        //   tensor - scalar
        tensor_times_scalar();
      } else if (isNumericAtom(p1) && istensor(p2)) {
        // one case covered by this branch:
        //   scalar - tensor
        scalar_times_tensor();
      } else {
        if (isNumericAtom(p1) || isNumericAtom(p2)) {
          // three cases covered by this branch:
          //   unknown - scalar
          //   scalar - unknown
          //   scalar  - scalar
          // in these cases a normal multiplication
          // will be OK
          multiply();
        } else {
          // three cases covered by this branch:
          //   unknown - unknown
          //   unknown - tensor
          //   tensor  - unknown
          // in this case we can't use normal
          // multiplication.
          pop();
          pop();
          push_symbol(INNER);
          push(p1);
          push(p2);
          list(3);
          restore();
          return;
        }
      }
    }
    return restore();
  };

  // inner product of tensors p1 and p2
  inner_f = function inner_f() {
    var a, ak, b, bk, c, i, i1, j, j1, k, l1, m1, n, n1, ndim, o, o1, ref, ref1, ref2, ref3, ref4, ref5, ref6;
    i = 0;
    n = p1.tensor.dim[p1.tensor.ndim - 1];
    if (n !== p2.tensor.dim[0]) {
      debugger;
      stop("inner: tensor dimension check");
    }
    ndim = p1.tensor.ndim + p2.tensor.ndim - 2;
    if (ndim > MAXDIM) {
      stop("inner: rank of result exceeds maximum");
    }
    a = p1.tensor.elem;
    b = p2.tensor.elem;
    //---------------------------------------------------------------------

    //  ak is the number of rows in tensor A

    //  bk is the number of columns in tensor B

    //  Example:

    //  A[3][3][4] B[4][4][3]

    //    3  3        ak = 3 * 3 = 9

    //                  4  3    bk = 4 * 3 = 12

    //---------------------------------------------------------------------
    ak = 1;
    for (i = o = 0, ref = p1.tensor.ndim - 1; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      ak *= p1.tensor.dim[i];
    }
    bk = 1;
    for (i = i1 = 1, ref1 = p2.tensor.ndim; 1 <= ref1 ? i1 < ref1 : i1 > ref1; i = 1 <= ref1 ? ++i1 : --i1) {
      bk *= p2.tensor.dim[i];
    }
    p3 = alloc_tensor(ak * bk);
    c = p3.tensor.elem;
    // new method copied from ginac http://www.ginac.de/
    for (i = j1 = 0, ref2 = ak; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
      for (j = l1 = 0, ref3 = n; 0 <= ref3 ? l1 < ref3 : l1 > ref3; j = 0 <= ref3 ? ++l1 : --l1) {
        if (isZeroAtomOrTensor(a[i * n + j])) {
          continue;
        }
        for (k = m1 = 0, ref4 = bk; 0 <= ref4 ? m1 < ref4 : m1 > ref4; k = 0 <= ref4 ? ++m1 : --m1) {
          push(a[i * n + j]);
          push(b[j * bk + k]);
          multiply();
          push(c[i * bk + k]);
          add();
          c[i * bk + k] = pop();
        }
      }
    }
    //---------------------------------------------------------------------

    //  Note on understanding "k * bk + j"

    //  k * bk because each element of a column is bk locations apart

    //  + j because the beginnings of all columns are in the first bk 
    //  locations

    //  Example: n = 2, bk = 6

    //  b111  <- 1st element of 1st column
    //  b112  <- 1st element of 2nd column
    //  b113  <- 1st element of 3rd column
    //  b121  <- 1st element of 4th column
    //  b122  <- 1st element of 5th column
    //  b123  <- 1st element of 6th column

    //  b211  <- 2nd element of 1st column
    //  b212  <- 2nd element of 2nd column
    //  b213  <- 2nd element of 3rd column
    //  b221  <- 2nd element of 4th column
    //  b222  <- 2nd element of 5th column
    //  b223  <- 2nd element of 6th column

    //---------------------------------------------------------------------
    if (ndim === 0) {
      return push(p3.tensor.elem[0]);
    } else {
      p3.tensor.ndim = ndim;
      j = 0;
      for (i = n1 = 0, ref5 = p1.tensor.ndim - 1; 0 <= ref5 ? n1 < ref5 : n1 > ref5; i = 0 <= ref5 ? ++n1 : --n1) {
        p3.tensor.dim[i] = p1.tensor.dim[i];
      }
      j = p1.tensor.ndim - 1;
      for (i = o1 = 0, ref6 = p2.tensor.ndim - 1; 0 <= ref6 ? o1 < ref6 : o1 > ref6; i = 0 <= ref6 ? ++o1 : --o1) {
        p3.tensor.dim[j + i] = p2.tensor.dim[i + 1];
      }
      return push(p3);
    }
  };

  // Algebrite.run('c·(b+a)ᵀ·inv((a+b)ᵀ)·d').toString();
  // Algebrite.run('c*(b+a)ᵀ·inv((a+b)ᵀ)·d').toString();
  // Algebrite.run('(c·(b+a)ᵀ)·(inv((a+b)ᵀ)·d)').toString();
  _get_innerprod_factors = function get_innerprod_factors(tree, factors_accumulator) {
    if (!iscons(tree)) {
      add_factor_to_accumulator(tree, factors_accumulator);
      return;
    }
    if (cdr(tree) === symbol(NIL)) {
      tree = _get_innerprod_factors(car(tree), factors_accumulator);
      return;
    }
    if (isinnerordot(tree)) {
      // console.log "there is inner at top, recursing on the operands"
      _get_innerprod_factors(car(cdr(tree)), factors_accumulator);
      _get_innerprod_factors(cdr(cdr(tree)), factors_accumulator);
      return;
    }
    return add_factor_to_accumulator(tree, factors_accumulator);
  };
  add_factor_to_accumulator = function add_factor_to_accumulator(tree, factors_accumulator) {
    if (tree !== symbol(NIL)) {
      // console.log ">> adding to factors_accumulator: " + tree
      return factors_accumulator.push(tree);
    }
  };
  itab = [
  // 1
  "f(a,a*x)",
  // 9 (need a caveat for 7 so we can put 9 after 7)
  "f(1/x,log(x))",
  // 7
  "f(x^a,x^(a+1)/(a+1))",
  // five specialisations of case 7 for speed.
  // Covers often-occurring exponents: each of
  // these case ends up in a dedicated entry, so we
  // only have to do one sure-shot match.
  "f(x^(-2),-x^(-1))", "f(x^(-1/2),2*x^(1/2))", "f(x^(1/2),2/3*x^(3/2))", "f(x,x^2/2)", "f(x^2,x^3/3)",
  // 12
  "f(exp(a*x),1/a*exp(a*x))", "f(exp(a*x+b),1/a*exp(a*x+b))", "f(x*exp(a*x^2),exp(a*x^2)/(2*a))", "f(x*exp(a*x^2+b),exp(a*x^2+b)/(2*a))",
  // 14
  "f(log(a*x),x*log(a*x)-x)",
  // 15
  "f(a^x,a^x/log(a),or(not(number(a)),a>0))",
  // 16
  "f(1/(a+x^2),1/sqrt(a)*arctan(x/sqrt(a)),or(not(number(a)),a>0))",
  // 17
  "f(1/(a-x^2),1/sqrt(a)*arctanh(x/sqrt(a)))",
  // 19
  "f(1/sqrt(a-x^2),arcsin(x/(sqrt(a))))",
  // 20
  "f(1/sqrt(a+x^2),log(x+sqrt(a+x^2)))",
  // 27
  "f(1/(a+b*x),1/b*log(a+b*x))",
  // 28
  "f(1/(a+b*x)^2,-1/(b*(a+b*x)))",
  // 29
  "f(1/(a+b*x)^3,-1/(2*b)*1/(a+b*x)^2)",
  // 30
  "f(x/(a+b*x),x/b-a*log(a+b*x)/b/b)",
  // 31
  "f(x/(a+b*x)^2,1/b^2*(log(a+b*x)+a/(a+b*x)))",
  // 33
  "f(x^2/(a+b*x),1/b^2*(1/2*(a+b*x)^2-2*a*(a+b*x)+a^2*log(a+b*x)))",
  // 34
  "f(x^2/(a+b*x)^2,1/b^3*(a+b*x-2*a*log(a+b*x)-a^2/(a+b*x)))",
  // 35
  "f(x^2/(a+b*x)^3,1/b^3*(log(a+b*x)+2*a/(a+b*x)-1/2*a^2/(a+b*x)^2))",
  // 37
  "f(1/x*1/(a+b*x),-1/a*log((a+b*x)/x))",
  // 38
  "f(1/x*1/(a+b*x)^2,1/a*1/(a+b*x)-1/a^2*log((a+b*x)/x))",
  // 39
  "f(1/x*1/(a+b*x)^3,1/a^3*(1/2*((2*a+b*x)/(a+b*x))^2+log(x/(a+b*x))))",
  // 40
  "f(1/x^2*1/(a+b*x),-1/(a*x)+b/a^2*log((a+b*x)/x))",
  // 41
  "f(1/x^3*1/(a+b*x),(2*b*x-a)/(2*a^2*x^2)+b^2/a^3*log(x/(a+b*x)))",
  // 42
  "f(1/x^2*1/(a+b*x)^2,-(a+2*b*x)/(a^2*x*(a+b*x))+2*b/a^3*log((a+b*x)/x))",
  // 60
  "f(1/(a+b*x^2),1/sqrt(a*b)*arctan(x*sqrt(a*b)/a),or(not(number(a*b)),a*b>0))",
  // 61
  "f(1/(a+b*x^2),1/(2*sqrt(-a*b))*log((a+x*sqrt(-a*b))/(a-x*sqrt(-a*b))),or(not(number(a*b)),a*b<0))",
  // 62 is the same as 60
  // 63
  "f(x/(a+b*x^2),1/2*1/b*log(a+b*x^2))",
  //64
  "f(x^2/(a+b*x^2),x/b-a/b*integral(1/(a+b*x^2),x))",
  //65
  "f(1/(a+b*x^2)^2,x/(2*a*(a+b*x^2))+1/2*1/a*integral(1/(a+b*x^2),x))",
  //66 is covered by 61
  //70
  "f(1/x*1/(a+b*x^2),1/2*1/a*log(x^2/(a+b*x^2)))",
  //71
  "f(1/x^2*1/(a+b*x^2),-1/(a*x)-b/a*integral(1/(a+b*x^2),x))",
  //74
  "f(1/(a+b*x^3),1/3*1/a*(a/b)^(1/3)*(1/2*log(((a/b)^(1/3)+x)^3/(a+b*x^3))+sqrt(3)*arctan((2*x-(a/b)^(1/3))*(a/b)^(-1/3)/sqrt(3))))",
  //76
  "f(x^2/(a+b*x^3),1/3*1/b*log(a+b*x^3))",
  // float(defint(1/(2+3*X^4),X,0,pi)) gave wrong result.
  // Also, the tests related to the indefinite integral
  // fail since we rationalise expressions "better", so I'm thinking
  // to take this out completely as it seemed to give the
  // wrong results in the first place.
  //77
  //"f(1/(a+b*x^4),1/2*1/a*(a/b/4)^(1/4)*(1/2*log((x^2+2*(a/b/4)^(1/4)*x+2*(a/b/4)^(1/2))/(x^2-2*(a/b/4)^(1/4)*x+2*(a/b/4)^(1/2)))+arctan(2*(a/b/4)^(1/4)*x/(2*(a/b/4)^(1/2)-x^2))),or(not(number(a*b)),a*b>0))",
  //78
  //"f(1/(a+b*x^4),1/2*(-a/b)^(1/4)/a*(1/2*log((x+(-a/b)^(1/4))/(x-(-a/b)^(1/4)))+arctan(x*(-a/b)^(-1/4))),or(not(number(a*b)),a*b<0))",
  //79
  "f(x/(a+b*x^4),1/2*sqrt(b/a)/b*arctan(x^2*sqrt(b/a)),or(not(number(a*b)),a*b>0))",
  //80
  "f(x/(a+b*x^4),1/4*sqrt(-b/a)/b*log((x^2-sqrt(-a/b))/(x^2+sqrt(-a/b))),or(not(number(a*b)),a*b<0))",
  // float(defint(X^2/(2+3*X^4),X,0,pi)) gave wrong result.
  // Also, the tests related to the indefinite integral
  // fail since we rationalise expressions "better", so I'm thinking
  // to take this out completely as it seemed to give the
  // wrong results in the first place.
  //81
  //"f(x^2/(a+b*x^4),1/4*1/b*(a/b/4)^(-1/4)*(1/2*log((x^2-2*(a/b/4)^(1/4)*x+2*sqrt(a/b/4))/(x^2+2*(a/b/4)^(1/4)*x+2*sqrt(a/b/4)))+arctan(2*(a/b/4)^(1/4)*x/(2*sqrt(a/b/4)-x^2))),or(not(number(a*b)),a*b>0))",
  //82
  //"f(x^2/(a+b*x^4),1/4*1/b*(-a/b)^(-1/4)*(log((x-(-a/b)^(1/4))/(x+(-a/b)^(1/4)))+2*arctan(x*(-a/b)^(-1/4))),or(not(number(a*b)),a*b<0))",
  //83
  "f(x^3/(a+b*x^4),1/4*1/b*log(a+b*x^4))",
  //124
  "f(sqrt(a+b*x),2/3*1/b*sqrt((a+b*x)^3))",
  //125
  "f(x*sqrt(a+b*x),-2*(2*a-3*b*x)*sqrt((a+b*x)^3)/15/b^2)",
  //126
  "f(x^2*sqrt(a+b*x),2*(8*a^2-12*a*b*x+15*b^2*x^2)*sqrt((a+b*x)^3)/105/b^3)",
  //128
  "f(sqrt(a+b*x)/x,2*sqrt(a+b*x)+a*integral(1/x*1/sqrt(a+b*x),x))",
  //129
  "f(sqrt(a+b*x)/x^2,-sqrt(a+b*x)/x+b/2*integral(1/x*1/sqrt(a+b*x),x))",
  //131
  "f(1/sqrt(a+b*x),2*sqrt(a+b*x)/b)",
  //132
  "f(x/sqrt(a+b*x),-2/3*(2*a-b*x)*sqrt(a+b*x)/b^2)",
  //133
  "f(x^2/sqrt(a+b*x),2/15*(8*a^2-4*a*b*x+3*b^2*x^2)*sqrt(a+b*x)/b^3)",
  //135
  "f(1/x*1/sqrt(a+b*x),1/sqrt(a)*log((sqrt(a+b*x)-sqrt(a))/(sqrt(a+b*x)+sqrt(a))),or(not(number(a)),a>0))",
  //136
  "f(1/x*1/sqrt(a+b*x),2/sqrt(-a)*arctan(sqrt(-(a+b*x)/a)),or(not(number(a)),a<0))",
  //137
  "f(1/x^2*1/sqrt(a+b*x),-sqrt(a+b*x)/a/x-1/2*b/a*integral(1/x*1/sqrt(a+b*x),x))",
  //156
  "f(sqrt(x^2+a),1/2*(x*sqrt(x^2+a)+a*log(x+sqrt(x^2+a))))",
  //157
  "f(1/sqrt(x^2+a),log(x+sqrt(x^2+a)))",
  //158
  "f(1/x*1/sqrt(x^2+a),arcsec(x/sqrt(-a))/sqrt(-a),or(not(number(a)),a<0))",
  //159
  "f(1/x*1/sqrt(x^2+a),-1/sqrt(a)*log((sqrt(a)+sqrt(x^2+a))/x),or(not(number(a)),a>0))",
  //160
  "f(sqrt(x^2+a)/x,sqrt(x^2+a)-sqrt(a)*log((sqrt(a)+sqrt(x^2+a))/x),or(not(number(a)),a>0))",
  //161
  "f(sqrt(x^2+a)/x,sqrt(x^2+a)-sqrt(-a)*arcsec(x/sqrt(-a)),or(not(number(a)),a<0))",
  //162
  "f(x/sqrt(x^2+a),sqrt(x^2+a))",
  //163
  "f(x*sqrt(x^2+a),1/3*sqrt((x^2+a)^3))",
  //164 need an unexpanded version?
  "f(sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/4*(x*sqrt((x^2+a^(1/3))^3)+3/2*a^(1/3)*x*sqrt(x^2+a^(1/3))+3/2*a^(2/3)*log(x+sqrt(x^2+a^(1/3)))))",
  // match doesn't work for the following
  "f(sqrt(-a+x^6-3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/4*(x*sqrt((x^2-a^(1/3))^3)-3/2*a^(1/3)*x*sqrt(x^2-a^(1/3))+3/2*a^(2/3)*log(x+sqrt(x^2-a^(1/3)))))",
  //165
  "f(1/sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),x/a^(1/3)/sqrt(x^2+a^(1/3)))",
  //166
  "f(x/sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),-1/sqrt(x^2+a^(1/3)))",
  //167
  "f(x*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/5*sqrt((x^2+a^(1/3))^5))",
  //168
  "f(x^2*sqrt(x^2+a),1/4*x*sqrt((x^2+a)^3)-1/8*a*x*sqrt(x^2+a)-1/8*a^2*log(x+sqrt(x^2+a)))",
  //169
  "f(x^3*sqrt(x^2+a),(1/5*x^2-2/15*a)*sqrt((x^2+a)^3),and(number(a),a>0))",
  //170
  "f(x^3*sqrt(x^2+a),sqrt((x^2+a)^5)/5-a*sqrt((x^2+a)^3)/3,and(number(a),a<0))",
  //171
  "f(x^2/sqrt(x^2+a),1/2*x*sqrt(x^2+a)-1/2*a*log(x+sqrt(x^2+a)))",
  //172
  "f(x^3/sqrt(x^2+a),1/3*sqrt((x^2+a)^3)-a*sqrt(x^2+a))",
  //173
  "f(1/x^2*1/sqrt(x^2+a),-sqrt(x^2+a)/a/x)",
  //174
  "f(1/x^3*1/sqrt(x^2+a),-1/2*sqrt(x^2+a)/a/x^2+1/2*log((sqrt(a)+sqrt(x^2+a))/x)/a^(3/2),or(not(number(a)),a>0))",
  //175
  "f(1/x^3*1/sqrt(x^2-a),1/2*sqrt(x^2-a)/a/x^2+1/2*1/(a^(3/2))*arcsec(x/(a^(1/2))),or(not(number(a)),a>0))",
  //176+
  "f(x^2*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/6*x*sqrt((x^2+a^(1/3))^5)-1/24*a^(1/3)*x*sqrt((x^2+a^(1/3))^3)-1/16*a^(2/3)*x*sqrt(x^2+a^(1/3))-1/16*a*log(x+sqrt(x^2+a^(1/3))),or(not(number(a)),a>0))",
  //176-
  "f(x^2*sqrt(-a-3*a^(1/3)*x^4+3*a^(2/3)*x^2+x^6),1/6*x*sqrt((x^2-a^(1/3))^5)+1/24*a^(1/3)*x*sqrt((x^2-a^(1/3))^3)-1/16*a^(2/3)*x*sqrt(x^2-a^(1/3))+1/16*a*log(x+sqrt(x^2-a^(1/3))),or(not(number(a)),a>0))",
  //177+
  "f(x^3*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/7*sqrt((x^2+a^(1/3))^7)-1/5*a^(1/3)*sqrt((x^2+a^(1/3))^5),or(not(number(a)),a>0))",
  //177-
  "f(x^3*sqrt(-a-3*a^(1/3)*x^4+3*a^(2/3)*x^2+x^6),1/7*sqrt((x^2-a^(1/3))^7)+1/5*a^(1/3)*sqrt((x^2-a^(1/3))^5),or(not(number(a)),a>0))",
  //196
  "f(1/(x-a)/sqrt(x^2-a^2),-sqrt(x^2-a^2)/a/(x-a))",
  //197
  "f(1/(x+a)/sqrt(x^2-a^2),sqrt(x^2-a^2)/a/(x+a))",
  //200+
  "f(sqrt(a-x^2),1/2*(x*sqrt(a-x^2)+a*arcsin(x/sqrt(abs(a)))))",
  //201    (seems to be handled somewhere else)
  //202
  "f(1/x*1/sqrt(a-x^2),-1/sqrt(a)*log((sqrt(a)+sqrt(a-x^2))/x),or(not(number(a)),a>0))",
  //203
  "f(sqrt(a-x^2)/x,sqrt(a-x^2)-sqrt(a)*log((sqrt(a)+sqrt(a-x^2))/x),or(not(number(a)),a>0))",
  //204
  "f(x/sqrt(a-x^2),-sqrt(a-x^2))",
  //205
  "f(x*sqrt(a-x^2),-1/3*sqrt((a-x^2)^3))",
  //210
  "f(x^2*sqrt(a-x^2),-x/4*sqrt((a-x^2)^3)+1/8*a*(x*sqrt(a-x^2)+a*arcsin(x/sqrt(a))),or(not(number(a)),a>0))",
  //211
  "f(x^3*sqrt(a-x^2),(-1/5*x^2-2/15*a)*sqrt((a-x^2)^3),or(not(number(a)),a>0))",
  //214
  "f(x^2/sqrt(a-x^2),-x/2*sqrt(a-x^2)+a/2*arcsin(x/sqrt(a)),or(not(number(a)),a>0))",
  //215
  "f(1/x^2*1/sqrt(a-x^2),-sqrt(a-x^2)/a/x,or(not(number(a)),a>0))",
  //216
  "f(sqrt(a-x^2)/x^2,-sqrt(a-x^2)/x-arcsin(x/sqrt(a)),or(not(number(a)),a>0))",
  //217
  "f(sqrt(a-x^2)/x^3,-1/2*sqrt(a-x^2)/x^2+1/2*log((sqrt(a)+sqrt(a-x^2))/x)/sqrt(a),or(not(number(a)),a>0))",
  //218
  "f(sqrt(a-x^2)/x^4,-1/3*sqrt((a-x^2)^3)/a/x^3,or(not(number(a)),a>0))",
  // 273
  "f(sqrt(a*x^2+b),x*sqrt(a*x^2+b)/2+b*log(x*sqrt(a)+sqrt(a*x^2+b))/2/sqrt(a),and(number(a),a>0))",
  // 274
  "f(sqrt(a*x^2+b),x*sqrt(a*x^2+b)/2+b*arcsin(x*sqrt(-a/b))/2/sqrt(-a),and(number(a),a<0))",
  // 290
  "f(sin(a*x),-cos(a*x)/a)",
  // 291
  "f(cos(a*x),sin(a*x)/a)",
  // 292
  "f(tan(a*x),-log(cos(a*x))/a)",
  // 293
  "f(1/tan(a*x),log(sin(a*x))/a)",
  // 294
  "f(1/cos(a*x),log(tan(pi/4+a*x/2))/a)",
  // 295
  "f(1/sin(a*x),log(tan(a*x/2))/a)",
  // 296
  "f(sin(a*x)^2,x/2-sin(2*a*x)/(4*a))",
  // 297
  "f(sin(a*x)^3,-cos(a*x)*(sin(a*x)^2+2)/(3*a))",
  // 298
  "f(sin(a*x)^4,3/8*x-sin(2*a*x)/(4*a)+sin(4*a*x)/(32*a))",
  // 302
  "f(cos(a*x)^2,x/2+sin(2*a*x)/(4*a))",
  // 303
  "f(cos(a*x)^3,sin(a*x)*(cos(a*x)^2+2)/(3*a))",
  // 304
  "f(cos(a*x)^4,3/8*x+sin(2*a*x)/(4*a)+sin(4*a*x)/(32*a))",
  // 308
  "f(1/sin(a*x)^2,-1/(a*tan(a*x)))",
  // 312
  "f(1/cos(a*x)^2,tan(a*x)/a)",
  // 318
  "f(sin(a*x)*cos(a*x),sin(a*x)^2/(2*a))",
  // 320
  "f(sin(a*x)^2*cos(a*x)^2,-sin(4*a*x)/(32*a)+x/8)",
  // 326
  "f(sin(a*x)/cos(a*x)^2,1/(a*cos(a*x)))",
  // 327
  "f(sin(a*x)^2/cos(a*x),(log(tan(pi/4+a*x/2))-sin(a*x))/a)",
  // 328
  "f(cos(a*x)/sin(a*x)^2,-1/(a*sin(a*x)))",
  // 329
  "f(1/(sin(a*x)*cos(a*x)),log(tan(a*x))/a)",
  // 330
  "f(1/(sin(a*x)*cos(a*x)^2),(1/cos(a*x)+log(tan(a*x/2)))/a)",
  // 331
  "f(1/(sin(a*x)^2*cos(a*x)),(log(tan(pi/4+a*x/2))-1/sin(a*x))/a)",
  // 333
  "f(1/(sin(a*x)^2*cos(a*x)^2),-2/(a*tan(2*a*x)))",
  // 335
  "f(sin(a+b*x),-cos(a+b*x)/b)",
  // 336
  "f(cos(a+b*x),sin(a+b*x)/b)",
  // 337+ (with the addition of b)
  "f(1/(b+b*sin(a*x)),-tan(pi/4-a*x/2)/a/b)",
  // 337- (with the addition of b)
  "f(1/(b-b*sin(a*x)),tan(pi/4+a*x/2)/a/b)",
  // 338 (with the addition of b)
  "f(1/(b+b*cos(a*x)),tan(a*x/2)/a/b)",
  // 339 (with the addition of b)
  "f(1/(b-b*cos(a*x)),-1/tan(a*x/2)/a/b)",
  // 340
  "f(1/(a+b*sin(x)),1/sqrt(b^2-a^2)*log((a*tan(x/2)+b-sqrt(b^2-a^2))/(a*tan(x/2)+b+sqrt(b^2-a^2))),b^2-a^2)",
  // check that b^2-a^2 is not zero
  // 341
  "f(1/(a+b*cos(x)),1/sqrt(b^2-a^2)*log((sqrt(b^2-a^2)*tan(x/2)+a+b)/(sqrt(b^2-a^2)*tan(x/2)-a-b)),b^2-a^2)",
  // check that b^2-a^2 is not zero
  // 389
  "f(x*sin(a*x),sin(a*x)/a^2-x*cos(a*x)/a)",
  // 390
  "f(x^2*sin(a*x),2*x*sin(a*x)/a^2-(a^2*x^2-2)*cos(a*x)/a^3)",
  // 393
  "f(x*cos(a*x),cos(a*x)/a^2+x*sin(a*x)/a)",
  // 394
  "f(x^2*cos(a*x),2*x*cos(a*x)/a^2+(a^2*x^2-2)*sin(a*x)/a^3)",
  // 441
  "f(arcsin(a*x),x*arcsin(a*x)+sqrt(1-a^2*x^2)/a)",
  // 442
  "f(arccos(a*x),x*arccos(a*x)-sqrt(1-a^2*x^2)/a)",
  // 443
  "f(arctan(a*x),x*arctan(a*x)-1/2*log(1+a^2*x^2)/a)",
  // 485 (with addition of a)
  // however commenting out since it's a duplicate of 14
  // "f(log(a*x),x*log(a*x)-x)",
  // 486 (with addition of a)
  "f(x*log(a*x),x^2*log(a*x)/2-x^2/4)",
  // 487 (with addition of a)
  "f(x^2*log(a*x),x^3*log(a*x)/3-1/9*x^3)",
  // 489
  "f(log(x)^2,x*log(x)^2-2*x*log(x)+2*x)",
  // 493 (with addition of a)
  "f(1/x*1/(a+log(x)),log(a+log(x)))",
  // 499
  "f(log(a*x+b),(a*x+b)*log(a*x+b)/a-x)",
  // 500
  "f(log(a*x+b)/x^2,a/b*log(x)-(a*x+b)*log(a*x+b)/b/x)",
  // 554
  "f(sinh(x),cosh(x))",
  // 555
  "f(cosh(x),sinh(x))",
  // 556
  "f(tanh(x),log(cosh(x)))",
  // 560
  "f(x*sinh(x),x*cosh(x)-sinh(x))",
  // 562
  "f(x*cosh(x),x*sinh(x)-cosh(x))",
  // 566
  "f(sinh(x)^2,sinh(2*x)/4-x/2)",
  // 569
  "f(tanh(x)^2,x-tanh(x))",
  // 572
  "f(cosh(x)^2,sinh(2*x)/4+x/2)",
  // ?
  "f(x^3*exp(a*x^2),exp(a*x^2)*(x^2/a-1/(a^2))/2)",
  // ?
  "f(x^3*exp(a*x^2+b),exp(a*x^2)*exp(b)*(x^2/a-1/(a^2))/2)",
  // ?
  "f(exp(a*x^2),-i*sqrt(pi)*erf(i*sqrt(a)*x)/sqrt(a)/2)",
  // ?
  "f(erf(a*x),x*erf(a*x)+exp(-a^2*x^2)/a/sqrt(pi))",
  // these are needed for the surface integral in the manual
  "f(x^2*(1-x^2)^(3/2),(x*sqrt(1-x^2)*(-8*x^4+14*x^2-3)+3*arcsin(x))/48)", "f(x^2*(1-x^2)^(5/2),(x*sqrt(1-x^2)*(48*x^6-136*x^4+118*x^2-15)+15*arcsin(x))/384)", "f(x^4*(1-x^2)^(3/2),(-x*sqrt(1-x^2)*(16*x^6-24*x^4+2*x^2+3)+3*arcsin(x))/128)", "f(x*exp(a*x),exp(a*x)*(a*x-1)/(a^2))", "f(x*exp(a*x+b),exp(a*x+b)*(a*x-1)/(a^2))", "f(x^2*exp(a*x),exp(a*x)*(a^2*x^2-2*a*x+2)/(a^3))", "f(x^2*exp(a*x+b),exp(a*x+b)*(a^2*x^2-2*a*x+2)/(a^3))", "f(x^3*exp(a*x),exp(a*x)*x^3/a-3/a*integral(x^2*exp(a*x),x))", "f(x^3*exp(a*x+b),exp(a*x+b)*x^3/a-3/a*integral(x^2*exp(a*x+b),x))", 0];

  //define F p3
  //define X p4
  //define N p5
  Eval_integral = function Eval_integral() {
    var doNothing, i, i1, n, o, ref, ref1;
    i = 0;
    n = 0;
    // evaluate 1st arg to get function F
    p1 = cdr(p1);
    push(car(p1));
    Eval();
    // evaluate 2nd arg and then...

    // example    result of 2nd arg  what to do

    // integral(f)    nil      guess X, N = nil
    // integral(f,2)  2      guess X, N = 2
    // integral(f,x)  x      X = x, N = nil
    // integral(f,x,2)  x      X = x, N = 2
    // integral(f,x,y)  x      X = x, N = y
    p1 = cdr(p1);
    push(car(p1));
    Eval();
    p2 = pop();
    if (p2 === symbol(NIL)) {
      guess();
      push(symbol(NIL));
    } else if (isNumericAtom(p2)) {
      guess();
      push(p2);
    } else {
      push(p2);
      p1 = cdr(p1);
      push(car(p1));
      Eval();
    }
    p5 = pop();
    p4 = pop();
    p3 = pop();
    while (1) {
      // N might be a symbol instead of a number
      if (isNumericAtom(p5)) {
        push(p5);
        n = pop_integer();
        if (isNaN(n)) {
          stop("nth integral: check n");
        }
      } else {
        n = 1;
      }
      push(p3);
      if (n >= 0) {
        for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
          push(p4);
          integral();
        }
      } else {
        n = -n;
        for (i = i1 = 0, ref1 = n; 0 <= ref1 ? i1 < ref1 : i1 > ref1; i = 0 <= ref1 ? ++i1 : --i1) {
          push(p4);
          derivative();
        }
      }
      p3 = pop();
      // if N is nil then arglist is exhausted
      if (p5 === symbol(NIL)) {
        break;
      }
      // otherwise...

      // N    arg1    what to do

      // number  nil    break
      // number  number    N = arg1, continue
      // number  symbol    X = arg1, N = arg2, continue

      // symbol  nil    X = N, N = nil, continue
      // symbol  number    X = N, N = arg1, continue
      // symbol  symbol    X = N, N = arg1, continue
      if (isNumericAtom(p5)) {
        p1 = cdr(p1);
        push(car(p1));
        Eval();
        p5 = pop();
        if (p5 === symbol(NIL)) {
          break; // arglist exhausted
        }

        if (isNumericAtom(p5)) {
          doNothing = 1; // N = arg1
        } else {
          p4 = p5;
          p1 = cdr(p1);
          push(car(p1));
          Eval();
          p5 = pop(); // N = arg2
        }
      } else {
        p4 = p5;
        p1 = cdr(p1);
        push(car(p1));
        Eval();
        p5 = pop(); // N = arg1
      }
    }

    return push(p3); // final result
  };

  integral = function integral() {
    save();
    p2 = pop();
    p1 = pop();
    if (car(p1) === symbol(ADD)) {
      integral_of_sum();
    } else if (car(p1) === symbol(MULTIPLY)) {
      integral_of_product();
    } else {
      integral_of_form();
    }
    p1 = pop();
    if (_Find(p1, symbol(INTEGRAL))) {
      stop("integral: sorry, could not find a solution");
    }
    push(p1);
    simplify();
    Eval();
    return restore();
  };
  integral_of_sum = function integral_of_sum() {
    var results;
    p1 = cdr(p1);
    push(car(p1));
    push(p2);
    integral();
    p1 = cdr(p1);
    results = [];
    while (iscons(p1)) {
      push(car(p1));
      push(p2);
      integral();
      add();
      results.push(p1 = cdr(p1));
    }
    return results;
  };
  integral_of_product = function integral_of_product() {
    push(p1);
    push(p2);
    partition();
    p1 = pop();
    integral_of_form();
    return multiply(); // multiply constant part
  };

  integral_of_form = function integral_of_form() {
    var hc, tab;
    hc = italu_hashcode(p1, p2).toFixed(6);
    tab = hashed_itab[hc];
    if (!tab) {
      // debugger
      // italu_hashcode(p1, p2)
      push_symbol(INTEGRAL);
      push(p1);
      push(p2);
      list(3);
      return;
    }
    push(p1); // free variable
    push(p2); // input expression
    _transform(tab, false);
    p3 = pop();
    if (p3 === symbol(NIL)) {
      push_symbol(INTEGRAL);
      push(p1);
      push(p2);
      return list(3);
    } else {
      return push(p3);
    }
  };

  // Implementation of hash codes based on ITALU (An Integral Table Look-Up)
  // https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19680004891.pdf
  // see Appendix A, page 153

  // The first two values are from the ITALU paper.
  // The others are just arbitrary constants.
  hashcode_values = {
    'x': 0.95532,
    'constexp': 1.43762,
    'constant': 1.14416593629414332,
    'constbase': 1.20364122304218824,
    'sin': 1.73305482518303221,
    'arcsin': 1.6483368529465804,
    'cos': 1.058672123686340116,
    'arccos': 1.8405225918106694,
    'tan': 1.12249437762925064,
    'arctan': 1.1297397925394962,
    'sinh': 1.8176164926060078,
    'cosh': 1.9404934661708022,
    'tanh': 1.6421307715103121,
    'log': 1.47744370135492387,
    'erf': 1.0825269225702916
  };
  italu_hashcode = function italu_hashcode(u, x) {
    var half;
    if (issymbol(u)) {
      if (equal(u, x)) {
        return hashcode_values.x;
      } else {
        return hashcode_values.constant;
      }
    } else if (iscons(u)) {
      switch (symnum(car(u))) {
        case ADD:
          return hash_addition(cdr(u), x);
        case MULTIPLY:
          return hash_multiplication(cdr(u), x);
        case POWER:
          return hash_power(cadr(u), caddr(u), x);
        case EXP:
          return hash_power(symbol(E), cadr(u), x);
        case SQRT:
          push_double(0.5);
          half = pop();
          return hash_power(cadr(u), half, x);
        default:
          return hash_function(u, x);
      }
    }
    return hashcode_values.constant;
  };
  hash_function = function hash_function(u, x) {
    var arg_hash, base, name;
    if (!_Find(cadr(u), x)) {
      return hashcode_values.constant;
    }
    name = car(u);
    arg_hash = italu_hashcode(cadr(u), x);
    base = hashcode_values[name.printname];
    if (!base) {
      throw new Error('Unsupported function ' + name.printname);
    }
    return Math.pow(base, arg_hash);
  };
  hash_addition = function hash_addition(terms, x) {
    var k, sum, term, term_hash, term_set, v;
    term_set = {};
    while (iscons(terms)) {
      term = car(terms);
      terms = cdr(terms);
      term_hash = 0;
      if (_Find(term, x)) {
        term_hash = italu_hashcode(term, x);
      } else {
        // The original algorithm would skip this,
        // but recording that it was present helps
        // prevent collisions.
        term_hash = hashcode_values.constant;
      }
      term_set[term_hash.toFixed(6)] = true;
    }
    sum = 0;
    for (k in term_set) {
      if (!hasProp.call(term_set, k)) continue;
      v = term_set[k];
      sum = sum + parseFloat(k, 10);
    }
    return sum;
  };
  hash_multiplication = function hash_multiplication(terms, x) {
    var product, term;
    product = 1;
    while (iscons(terms)) {
      term = car(terms);
      terms = cdr(terms);
      if (_Find(term, x)) {
        product = product * italu_hashcode(term, x);
      }
    }
    return product;
  };
  hash_power = function hash_power(base, power, x) {
    var base_hash, exp_hash;
    base_hash = hashcode_values.constant;
    exp_hash = hashcode_values.constexp;
    if (_Find(base, x)) {
      base_hash = italu_hashcode(base, x);
    }
    if (_Find(power, x)) {
      exp_hash = italu_hashcode(power, x);
    } else {
      // constant to constant = constant
      if (base_hash === hashcode_values.constant) {
        return hashcode_values.constant;
      }
      if (isminusone(power)) {
        exp_hash = -1;
      } else if (isoneovertwo(power)) {
        exp_hash = 0.5;
      } else if (isminusoneovertwo(power)) {
        exp_hash = -0.5;
      } else if (equalq(power, 2, 1)) {
        exp_hash = 2;
      } else if (equalq(power, -2, 1)) {
        exp_hash = -2;
      }
    }
    return Math.pow(base_hash, exp_hash);
  };
  make_hashed_itab = function make_hashed_itab() {
    var f, h, key, len, o, s, tab, u;
    tab = {};
    for (o = 0, len = itab.length; o < len; o++) {
      s = itab[o];
      if (!s) {
        break;
      }
      scan_meta(s);
      f = pop();
      u = cadr(f);
      h = italu_hashcode(u, symbol(METAX));
      key = h.toFixed(6);
      if (!tab[key]) {
        tab[key] = [];
      }
      tab[key].push(s);
    }
    console.log('hashed_itab = ' + JSON.stringify(tab, null, 2));
    return tab;
  };
  $.make_hashed_itab = make_hashed_itab;

  // pre-calculated hashed integral table.
  // in case the integral table is changed, use this
  //   Algebrite.make_hashed_itab()
  // and copy the resulting JSON in here.
  hashed_itab = {
    "1.144166": ["f(a,a*x)"],
    "1.046770": ["f(1/x,log(x))"],
    "0.936400": ["f(x^a,x^(a+1)/(a+1))"],
    "1.095727": ["f(x^(-2),-x^(-1))"],
    "1.023118": ["f(x^(-1/2),2*x^(1/2))"],
    "0.977405": ["f(x^(1/2),2/3*x^(3/2))"],
    "0.955320": ["f(x,x^2/2)"],
    "0.912636": ["f(x^2,x^3/3)"],
    "1.137302": ["f(exp(a*x),1/a*exp(a*x))", "f(a^x,a^x/log(a),or(not(number(a)),a>0))"],
    "1.326774": ["f(exp(a*x+b),1/a*exp(a*x+b))"],
    "1.080259": ["f(x*exp(a*x^2),exp(a*x^2)/(2*a))"],
    "1.260228": ["f(x*exp(a*x^2+b),exp(a*x^2+b)/(2*a))"],
    "1.451902": ["f(log(a*x),x*log(a*x)-x)"],
    "0.486192": ["f(1/(a+x^2),1/sqrt(a)*arctan(x/sqrt(a)),or(not(number(a)),a>0))", "f(1/(a-x^2),1/sqrt(a)*arctanh(x/sqrt(a)))", "f(1/(a+b*x^2),1/sqrt(a*b)*arctan(x*sqrt(a*b)/a),or(not(number(a*b)),a*b>0))", "f(1/(a+b*x^2),1/(2*sqrt(-a*b))*log((a+x*sqrt(-a*b))/(a-x*sqrt(-a*b))),or(not(number(a*b)),a*b<0))"],
    "0.697274": ["f(1/sqrt(a-x^2),arcsin(x/(sqrt(a))))", "f(1/sqrt(a+x^2),log(x+sqrt(a+x^2)))", "f(1/sqrt(x^2+a),log(x+sqrt(x^2+a)))"],
    "0.476307": ["f(1/(a+b*x),1/b*log(a+b*x))"],
    "0.226868": ["f(1/(a+b*x)^2,-1/(b*(a+b*x)))"],
    "2.904531": ["f(1/(a+b*x)^3,-1/(2*b)*1/(a+b*x)^2)"],
    "0.455026": ["f(x/(a+b*x),x/b-a*log(a+b*x)/b/b)"],
    "0.216732": ["f(x/(a+b*x)^2,1/b^2*(log(a+b*x)+a/(a+b*x)))"],
    "0.434695": ["f(x^2/(a+b*x),1/b^2*(1/2*(a+b*x)^2-2*a*(a+b*x)+a^2*log(a+b*x)))"],
    "0.207048": ["f(x^2/(a+b*x)^2,1/b^3*(a+b*x-2*a*log(a+b*x)-a^2/(a+b*x)))"],
    "2.650781": ["f(x^2/(a+b*x)^3,1/b^3*(log(a+b*x)+2*a/(a+b*x)-1/2*a^2/(a+b*x)^2))"],
    "0.498584": ["f(1/x*1/(a+b*x),-1/a*log((a+b*x)/x))"],
    "0.237479": ["f(1/x*1/(a+b*x)^2,1/a*1/(a+b*x)-1/a^2*log((a+b*x)/x))"],
    "3.040375": ["f(1/x*1/(a+b*x)^3,1/a^3*(1/2*((2*a+b*x)/(a+b*x))^2+log(x/(a+b*x))))"],
    "0.521902": ["f(1/x^2*1/(a+b*x),-1/(a*x)+b/a^2*log((a+b*x)/x))"],
    "0.446014": ["f(1/x^3*1/(a+b*x),(2*b*x-a)/(2*a^2*x^2)+b^2/a^3*log(x/(a+b*x)))"],
    "0.248586": ["f(1/x^2*1/(a+b*x)^2,-(a+2*b*x)/(a^2*x*(a+b*x))+2*b/a^3*log((a+b*x)/x))"],
    "0.464469": ["f(x/(a+b*x^2),1/2*1/b*log(a+b*x^2))"],
    "0.443716": ["f(x^2/(a+b*x^2),x/b-a/b*integral(1/(a+b*x^2),x))"],
    "0.236382": ["f(1/(a+b*x^2)^2,x/(2*a*(a+b*x^2))+1/2*1/a*integral(1/(a+b*x^2),x))"],
    "0.508931": ["f(1/x*1/(a+b*x^2),1/2*1/a*log(x^2/(a+b*x^2)))"],
    "0.532733": ["f(1/x^2*1/(a+b*x^2),-1/(a*x)-b/a*integral(1/(a+b*x^2),x))"],
    "0.480638": ["f(1/(a+b*x^3),1/3*1/a*(a/b)^(1/3)*(1/2*log(((a/b)^(1/3)+x)^3/(a+b*x^3))+sqrt(3)*arctan((2*x-(a/b)^(1/3))*(a/b)^(-1/3)/sqrt(3))))"],
    "0.438648": ["f(x^2/(a+b*x^3),1/3*1/b*log(a+b*x^3))"],
    "0.459164": ["f(x/(a+b*x^4),1/2*sqrt(b/a)/b*arctan(x^2*sqrt(b/a)),or(not(number(a*b)),a*b>0))", "f(x/(a+b*x^4),1/4*sqrt(-b/a)/b*log((x^2-sqrt(-a/b))/(x^2+sqrt(-a/b))),or(not(number(a*b)),a*b<0))"],
    "0.450070": ["f(x^3/(a+b*x^4),1/4*1/b*log(a+b*x^4))"],
    "1.448960": ["f(sqrt(a+b*x),2/3*1/b*sqrt((a+b*x)^3))"],
    "1.384221": ["f(x*sqrt(a+b*x),-2*(2*a-3*b*x)*sqrt((a+b*x)^3)/15/b^2)"],
    "1.322374": ["f(x^2*sqrt(a+b*x),2*(8*a^2-12*a*b*x+15*b^2*x^2)*sqrt((a+b*x)^3)/105/b^3)"],
    "1.516728": ["f(sqrt(a+b*x)/x,2*sqrt(a+b*x)+a*integral(1/x*1/sqrt(a+b*x),x))"],
    "1.587665": ["f(sqrt(a+b*x)/x^2,-sqrt(a+b*x)/x+b/2*integral(1/x*1/sqrt(a+b*x),x))"],
    "0.690150": ["f(1/sqrt(a+b*x),2*sqrt(a+b*x)/b)"],
    "0.659314": ["f(x/sqrt(a+b*x),-2/3*(2*a-b*x)*sqrt(a+b*x)/b^2)"],
    "0.629856": ["f(x^2/sqrt(a+b*x),2/15*(8*a^2-4*a*b*x+3*b^2*x^2)*sqrt(a+b*x)/b^3)"],
    "0.722428": ["f(1/x*1/sqrt(a+b*x),1/sqrt(a)*log((sqrt(a+b*x)-sqrt(a))/(sqrt(a+b*x)+sqrt(a))),or(not(number(a)),a>0))", "f(1/x*1/sqrt(a+b*x),2/sqrt(-a)*arctan(sqrt(-(a+b*x)/a)),or(not(number(a)),a<0))"],
    "0.756216": ["f(1/x^2*1/sqrt(a+b*x),-sqrt(a+b*x)/a/x-1/2*b/a*integral(1/x*1/sqrt(a+b*x),x))"],
    "1.434156": ["f(sqrt(x^2+a),1/2*(x*sqrt(x^2+a)+a*log(x+sqrt(x^2+a))))", "f(sqrt(a-x^2),1/2*(x*sqrt(a-x^2)+a*arcsin(x/sqrt(abs(a)))))", "f(sqrt(a*x^2+b),x*sqrt(a*x^2+b)/2+b*log(x*sqrt(a)+sqrt(a*x^2+b))/2/sqrt(a),and(number(a),a>0))", "f(sqrt(a*x^2+b),x*sqrt(a*x^2+b)/2+b*arcsin(x*sqrt(-a/b))/2/sqrt(-a),and(number(a),a<0))"],
    "0.729886": ["f(1/x*1/sqrt(x^2+a),arcsec(x/sqrt(-a))/sqrt(-a),or(not(number(a)),a<0))", "f(1/x*1/sqrt(x^2+a),-1/sqrt(a)*log((sqrt(a)+sqrt(x^2+a))/x),or(not(number(a)),a>0))", "f(1/x*1/sqrt(a-x^2),-1/sqrt(a)*log((sqrt(a)+sqrt(a-x^2))/x),or(not(number(a)),a>0))"],
    "1.501230": ["f(sqrt(x^2+a)/x,sqrt(x^2+a)-sqrt(a)*log((sqrt(a)+sqrt(x^2+a))/x),or(not(number(a)),a>0))", "f(sqrt(x^2+a)/x,sqrt(x^2+a)-sqrt(-a)*arcsec(x/sqrt(-a)),or(not(number(a)),a<0))", "f(sqrt(a-x^2)/x,sqrt(a-x^2)-sqrt(a)*log((sqrt(a)+sqrt(a-x^2))/x),or(not(number(a)),a>0))"],
    "0.666120": ["f(x/sqrt(x^2+a),sqrt(x^2+a))", "f(x/sqrt(a-x^2),-sqrt(a-x^2))"],
    "1.370077": ["f(x*sqrt(x^2+a),1/3*sqrt((x^2+a)^3))", "f(x*sqrt(a-x^2),-1/3*sqrt((a-x^2)^3))"],
    "1.730087": ["f(sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/4*(x*sqrt((x^2+a^(1/3))^3)+3/2*a^(1/3)*x*sqrt(x^2+a^(1/3))+3/2*a^(2/3)*log(x+sqrt(x^2+a^(1/3)))))", "f(sqrt(-a+x^6-3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/4*(x*sqrt((x^2-a^(1/3))^3)-3/2*a^(1/3)*x*sqrt(x^2-a^(1/3))+3/2*a^(2/3)*log(x+sqrt(x^2-a^(1/3)))))"],
    "0.578006": ["f(1/sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),x/a^(1/3)/sqrt(x^2+a^(1/3)))"],
    "0.552180": ["f(x/sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),-1/sqrt(x^2+a^(1/3)))"],
    "1.652787": ["f(x*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/5*sqrt((x^2+a^(1/3))^5))"],
    "1.308862": ["f(x^2*sqrt(x^2+a),1/4*x*sqrt((x^2+a)^3)-1/8*a*x*sqrt(x^2+a)-1/8*a^2*log(x+sqrt(x^2+a)))", "f(x^2*sqrt(a-x^2),-x/4*sqrt((a-x^2)^3)+1/8*a*(x*sqrt(a-x^2)+a*arcsin(x/sqrt(a))),or(not(number(a)),a>0))"],
    "1.342944": ["f(x^3*sqrt(x^2+a),(1/5*x^2-2/15*a)*sqrt((x^2+a)^3),and(number(a),a>0))", "f(x^3*sqrt(x^2+a),sqrt((x^2+a)^5)/5-a*sqrt((x^2+a)^3)/3,and(number(a),a<0))", "f(x^3*sqrt(a-x^2),(-1/5*x^2-2/15*a)*sqrt((a-x^2)^3),or(not(number(a)),a>0))", "f(sqrt(a-x^2)/x^3,-1/2*sqrt(a-x^2)/x^2+1/2*log((sqrt(a)+sqrt(a-x^2))/x)/sqrt(a),or(not(number(a)),a>0))", "f(sqrt(a-x^2)/x^4,-1/3*sqrt((a-x^2)^3)/a/x^3,or(not(number(a)),a>0))"],
    "0.636358": ["f(x^2/sqrt(x^2+a),1/2*x*sqrt(x^2+a)-1/2*a*log(x+sqrt(x^2+a)))", "f(x^2/sqrt(a-x^2),-x/2*sqrt(a-x^2)+a/2*arcsin(x/sqrt(a)),or(not(number(a)),a>0))"],
    "0.652928": ["f(x^3/sqrt(x^2+a),1/3*sqrt((x^2+a)^3)-a*sqrt(x^2+a))", "f(1/x^3*1/sqrt(x^2+a),-1/2*sqrt(x^2+a)/a/x^2+1/2*log((sqrt(a)+sqrt(x^2+a))/x)/a^(3/2),or(not(number(a)),a>0))", "f(1/x^3*1/sqrt(x^2-a),1/2*sqrt(x^2-a)/a/x^2+1/2*1/(a^(3/2))*arcsec(x/(a^(1/2))),or(not(number(a)),a>0))"],
    "0.764022": ["f(1/x^2*1/sqrt(x^2+a),-sqrt(x^2+a)/a/x)", "f(1/x^2*1/sqrt(a-x^2),-sqrt(a-x^2)/a/x,or(not(number(a)),a>0))"],
    "1.578940": ["f(x^2*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/6*x*sqrt((x^2+a^(1/3))^5)-1/24*a^(1/3)*x*sqrt((x^2+a^(1/3))^3)-1/16*a^(2/3)*x*sqrt(x^2+a^(1/3))-1/16*a*log(x+sqrt(x^2+a^(1/3))),or(not(number(a)),a>0))", "f(x^2*sqrt(-a-3*a^(1/3)*x^4+3*a^(2/3)*x^2+x^6),1/6*x*sqrt((x^2-a^(1/3))^5)+1/24*a^(1/3)*x*sqrt((x^2-a^(1/3))^3)-1/16*a^(2/3)*x*sqrt(x^2-a^(1/3))+1/16*a*log(x+sqrt(x^2-a^(1/3))),or(not(number(a)),a>0))"],
    "1.620055": ["f(x^3*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/7*sqrt((x^2+a^(1/3))^7)-1/5*a^(1/3)*sqrt((x^2+a^(1/3))^5),or(not(number(a)),a>0))", "f(x^3*sqrt(-a-3*a^(1/3)*x^4+3*a^(2/3)*x^2+x^6),1/7*sqrt((x^2-a^(1/3))^7)+1/5*a^(1/3)*sqrt((x^2-a^(1/3))^5),or(not(number(a)),a>0))"],
    "0.332117": ["f(1/(x-a)/sqrt(x^2-a^2),-sqrt(x^2-a^2)/a/(x-a))", "f(1/(x+a)/sqrt(x^2-a^2),sqrt(x^2-a^2)/a/(x+a))"],
    "1.571443": ["f(sqrt(a-x^2)/x^2,-sqrt(a-x^2)/x-arcsin(x/sqrt(a)),or(not(number(a)),a>0))"],
    "1.690994": ["f(sin(a*x),-cos(a*x)/a)"],
    "1.055979": ["f(cos(a*x),sin(a*x)/a)"],
    "1.116714": ["f(tan(a*x),-log(cos(a*x))/a)"],
    "0.895484": ["f(1/tan(a*x),log(sin(a*x))/a)"],
    "0.946989": ["f(1/cos(a*x),log(tan(pi/4+a*x/2))/a)"],
    "0.591368": ["f(1/sin(a*x),log(tan(a*x/2))/a)"],
    "2.859462": ["f(sin(a*x)^2,x/2-sin(2*a*x)/(4*a))"],
    "2.128050": ["f(sin(a*x)^3,-cos(a*x)*(sin(a*x)^2+2)/(3*a))", "f(sin(a*x)^4,3/8*x-sin(2*a*x)/(4*a)+sin(4*a*x)/(32*a))"],
    "1.115091": ["f(cos(a*x)^2,x/2+sin(2*a*x)/(4*a))"],
    "1.081452": ["f(cos(a*x)^3,sin(a*x)*(cos(a*x)^2+2)/(3*a))", "f(cos(a*x)^4,3/8*x+sin(2*a*x)/(4*a)+sin(4*a*x)/(32*a))"],
    "0.349716": ["f(1/sin(a*x)^2,-1/(a*tan(a*x)))"],
    "0.896788": ["f(1/cos(a*x)^2,tan(a*x)/a)"],
    "1.785654": ["f(sin(a*x)*cos(a*x),sin(a*x)^2/(2*a))"],
    "3.188560": ["f(sin(a*x)^2*cos(a*x)^2,-sin(4*a*x)/(32*a)+x/8)"],
    "1.516463": ["f(sin(a*x)/cos(a*x)^2,1/(a*cos(a*x)))"],
    "2.707879": ["f(sin(a*x)^2/cos(a*x),(log(tan(pi/4+a*x/2))-sin(a*x))/a)"],
    "0.369293": ["f(cos(a*x)/sin(a*x)^2,-1/(a*sin(a*x)))"],
    "0.560019": ["f(1/(sin(a*x)*cos(a*x)),log(tan(a*x))/a)"],
    "0.530332": ["f(1/(sin(a*x)*cos(a*x)^2),(1/cos(a*x)+log(tan(a*x/2)))/a)"],
    "0.331177": ["f(1/(sin(a*x)^2*cos(a*x)),(log(tan(pi/4+a*x/2))-1/sin(a*x))/a)"],
    "0.313621": ["f(1/(sin(a*x)^2*cos(a*x)^2),-2/(a*tan(2*a*x)))"],
    "3.172365": ["f(sin(a+b*x),-cos(a+b*x)/b)"],
    "1.127162": ["f(cos(a+b*x),sin(a+b*x)/b)"],
    "0.352714": ["f(1/(b+b*sin(a*x)),-tan(pi/4-a*x/2)/a/b)", "f(1/(b-b*sin(a*x)),tan(pi/4+a*x/2)/a/b)", "f(1/(a+b*sin(x)),1/sqrt(b^2-a^2)*log((a*tan(x/2)+b-sqrt(b^2-a^2))/(a*tan(x/2)+b+sqrt(b^2-a^2))),b^2-a^2)"],
    "0.454515": ["f(1/(b+b*cos(a*x)),tan(a*x/2)/a/b)", "f(1/(b-b*cos(a*x)),-1/tan(a*x/2)/a/b)", "f(1/(a+b*cos(x)),1/sqrt(b^2-a^2)*log((sqrt(b^2-a^2)*tan(x/2)+a+b)/(sqrt(b^2-a^2)*tan(x/2)-a-b)),b^2-a^2)"],
    "1.615441": ["f(x*sin(a*x),sin(a*x)/a^2-x*cos(a*x)/a)"],
    "1.543263": ["f(x^2*sin(a*x),2*x*sin(a*x)/a^2-(a^2*x^2-2)*cos(a*x)/a^3)"],
    "1.008798": ["f(x*cos(a*x),cos(a*x)/a^2+x*sin(a*x)/a)"],
    "0.963724": ["f(x^2*cos(a*x),2*x*cos(a*x)/a^2+(a^2*x^2-2)*sin(a*x)/a^3)"],
    "1.611938": ["f(arcsin(a*x),x*arcsin(a*x)+sqrt(1-a^2*x^2)/a)"],
    "1.791033": ["f(arccos(a*x),x*arccos(a*x)-sqrt(1-a^2*x^2)/a)"],
    "1.123599": ["f(arctan(a*x),x*arctan(a*x)-1/2*log(1+a^2*x^2)/a)"],
    "1.387031": ["f(x*log(a*x),x^2*log(a*x)/2-x^2/4)"],
    "1.325058": ["f(x^2*log(a*x),x^3*log(a*x)/3-1/9*x^3)"],
    "2.108018": ["f(log(x)^2,x*log(x)^2-2*x*log(x)+2*x)"],
    "0.403214": ["f(1/x*1/(a+log(x)),log(a+log(x)))"],
    "2.269268": ["f(log(a*x+b),(a*x+b)*log(a*x+b)/a-x)"],
    "2.486498": ["f(log(a*x+b)/x^2,a/b*log(x)-(a*x+b)*log(a*x+b)/b/x)"],
    "1.769733": ["f(sinh(x),cosh(x))"],
    "1.883858": ["f(cosh(x),sinh(x))"],
    "1.606140": ["f(tanh(x),log(cosh(x)))"],
    "1.690661": ["f(x*sinh(x),x*cosh(x)-sinh(x))"],
    "1.799688": ["f(x*cosh(x),x*sinh(x)-cosh(x))"],
    "3.131954": ["f(sinh(x)^2,sinh(2*x)/4-x/2)"],
    "2.579685": ["f(tanh(x)^2,x-tanh(x))"],
    "3.548923": ["f(cosh(x)^2,sinh(2*x)/4+x/2)"],
    "1.058866": ["f(x^3*exp(a*x^2),exp(a*x^2)*(x^2/a-1/(a^2))/2)"],
    "1.235270": ["f(x^3*exp(a*x^2+b),exp(a*x^2)*exp(b)*(x^2/a-1/(a^2))/2)"],
    "1.130783": ["f(exp(a*x^2),-i*sqrt(pi)*erf(i*sqrt(a)*x)/sqrt(a)/2)"],
    "1.078698": ["f(erf(a*x),x*erf(a*x)+exp(-a^2*x^2)/a/sqrt(pi))"],
    "2.573650": ["f(x^2*(1-x^2)^(3/2),(x*sqrt(1-x^2)*(-8*x^4+14*x^2-3)+3*arcsin(x))/48)", "f(x^2*(1-x^2)^(5/2),(x*sqrt(1-x^2)*(48*x^6-136*x^4+118*x^2-15)+15*arcsin(x))/384)"],
    "2.640666": ["f(x^4*(1-x^2)^(3/2),(-x*sqrt(1-x^2)*(16*x^6-24*x^4+2*x^2+3)+3*arcsin(x))/128)"],
    "1.086487": ["f(x*exp(a*x),exp(a*x)*(a*x-1)/(a^2))"],
    "1.267493": ["f(x*exp(a*x+b),exp(a*x+b)*(a*x-1)/(a^2))"],
    "1.037943": ["f(x^2*exp(a*x),exp(a*x)*(a^2*x^2-2*a*x+2)/(a^3))"],
    "1.210862": ["f(x^2*exp(a*x+b),exp(a*x+b)*(a^2*x^2-2*a*x+2)/(a^3))"],
    "1.064970": ["f(x^3*exp(a*x),exp(a*x)*x^3/a-3/a*integral(x^2*exp(a*x),x))"],
    "1.242392": ["f(x^3*exp(a*x+b),exp(a*x+b)*x^3/a-3/a*integral(x^2*exp(a*x+b),x))"]
  };

  //-----------------------------------------------------------------------------

  //  Input:    Matrix on stack (must have two dimensions but
  //        it can be non-numerical)

  //  Output:    Inverse on stack

  //  Example:

  //  > inv(((1,2),(3,4))
  //  ((-2,1),(3/2,-1/2))

  //  > inv(((a,b),(c,d))
  //  ((d / (a d - b c),-b / (a d - b c)),(-c / (a d - b c),a / (a d - b c)))

  //  Note:

  //  THIS IS DIFFERENT FROM INVERSE OF AN EXPRESSION (inv)
  //   Uses Gaussian elimination for numerical matrices.

  //-----------------------------------------------------------------------------
  INV_check_arg = function INV_check_arg() {
    if (!istensor(p1)) {
      return 0;
    } else if (p1.tensor.ndim !== 2) {
      return 0;
    } else if (p1.tensor.dim[0] !== p1.tensor.dim[1]) {
      return 0;
    } else {
      return 1;
    }
  };
  _inv = function inv() {
    var accumulator, eachEntry, i, n, o, ref;
    i = 0;
    n = 0;
    //U **a
    save();
    p1 = pop();
    // an inv just goes away when
    // applied to another inv
    if (isinv(p1)) {
      push(car(cdr(p1)));
      restore();
      return;
    }
    // inverse goes away in case
    // of identity matrix
    if (isidentitymatrix(p1)) {
      push(p1);
      restore();
      return;
    }
    // distribute the inverse of a dot
    // if in expanding mode
    // note that the distribution happens
    // in reverse.
    // The dot operator is not
    // commutative, so, it matters.
    if (expanding && isinnerordot(p1)) {
      p1 = cdr(p1);
      accumulator = [];
      while (iscons(p1)) {
        accumulator.push(car(p1));
        p1 = cdr(p1);
      }
      for (eachEntry = o = ref = accumulator.length - 1; ref <= 0 ? o <= 0 : o >= 0; eachEntry = ref <= 0 ? ++o : --o) {
        push(accumulator[eachEntry]);
        _inv();
        if (eachEntry !== accumulator.length - 1) {
          _inner();
        }
      }
      restore();
      return;
    }
    if (INV_check_arg() === 0) {
      push_symbol(INV);
      push(p1);
      list(2);
      restore();
      return;
    }
    if (_isNumericAtomOrTensor(p1)) {
      yyinvg();
    } else {
      push(p1);
      adj();
      push(p1);
      det();
      p2 = pop();
      if (isZeroAtomOrTensor(p2)) {
        stop("inverse of singular matrix");
      }
      push(p2);
      divide();
    }
    return restore();
  };
  invg = function invg() {
    save();
    p1 = pop();
    if (INV_check_arg() === 0) {
      push_symbol(INVG);
      push(p1);
      list(2);
      restore();
      return;
    }
    yyinvg();
    return restore();
  };

  // inverse using gaussian elimination
  yyinvg = function yyinvg() {
    var h, i, i1, j, j1, l1, n, o, ref, ref1, ref2, ref3;
    h = 0;
    i = 0;
    j = 0;
    n = 0;
    n = p1.tensor.dim[0];
    h = tos;
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      for (j = i1 = 0, ref1 = n; 0 <= ref1 ? i1 < ref1 : i1 > ref1; j = 0 <= ref1 ? ++i1 : --i1) {
        if (i === j) {
          push(one);
        } else {
          push(zero);
        }
      }
    }
    for (i = j1 = 0, ref2 = n * n; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
      push(p1.tensor.elem[i]);
    }
    INV_decomp(n);
    p1 = alloc_tensor(n * n);
    p1.tensor.ndim = 2;
    p1.tensor.dim[0] = n;
    p1.tensor.dim[1] = n;
    for (i = l1 = 0, ref3 = n * n; 0 <= ref3 ? l1 < ref3 : l1 > ref3; i = 0 <= ref3 ? ++l1 : --l1) {
      p1.tensor.elem[i] = stack[h + i];
    }
    moveTos(tos - 2 * n * n);
    return push(p1);
  };

  //-----------------------------------------------------------------------------

  //  Input:    n * n unit matrix on stack

  //      n * n operand on stack

  //  Output:    n * n inverse matrix on stack

  //      n * n garbage on stack

  //      p2 mangled

  //-----------------------------------------------------------------------------

  //define A(i, j) stack[a + n * (i) + (j)]
  //define U(i, j) stack[u + n * (i) + (j)]
  INV_decomp = function INV_decomp(n) {
    var a, d, i, i1, j, j1, l1, o, ref, ref1, ref2, ref3, ref4, results, u;
    a = 0;
    d = 0;
    i = 0;
    j = 0;
    u = 0;
    a = tos - n * n;
    u = a - n * n;
    results = [];
    for (d = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; d = 0 <= ref ? ++o : --o) {
      // diagonal element zero?
      if (equal(stack[a + n * d + d], zero)) {
        // find a new row
        for (i = i1 = ref1 = d + 1, ref2 = n; ref1 <= ref2 ? i1 < ref2 : i1 > ref2; i = ref1 <= ref2 ? ++i1 : --i1) {
          if (!equal(stack[a + n * i + d], zero)) {
            break;
          }
        }
        if (i === n) {
          stop("inverse of singular matrix");
        }
        // exchange rows
        for (j = j1 = 0, ref3 = n; 0 <= ref3 ? j1 < ref3 : j1 > ref3; j = 0 <= ref3 ? ++j1 : --j1) {
          p2 = stack[a + n * d + j];
          stack[a + n * d + j] = stack[a + n * i + j];
          stack[a + n * i + j] = p2;
          p2 = stack[u + n * d + j];
          stack[u + n * d + j] = stack[u + n * i + j];
          stack[u + n * i + j] = p2;
        }
      }
      // multiply the pivot row by 1 / pivot
      p2 = stack[a + n * d + d];
      for (j = l1 = 0, ref4 = n; 0 <= ref4 ? l1 < ref4 : l1 > ref4; j = 0 <= ref4 ? ++l1 : --l1) {
        if (j > d) {
          push(stack[a + n * d + j]);
          push(p2);
          divide();
          stack[a + n * d + j] = pop();
        }
        push(stack[u + n * d + j]);
        push(p2);
        divide();
        stack[u + n * d + j] = pop();
      }
      results.push(function () {
        var m1, ref5, results1;
        // clear out the column above and below the pivot
        results1 = [];
        for (i = m1 = 0, ref5 = n; 0 <= ref5 ? m1 < ref5 : m1 > ref5; i = 0 <= ref5 ? ++m1 : --m1) {
          if (i === d) {
            continue;
          }
          // multiplier
          p2 = stack[a + n * i + d];
          results1.push(function () {
            var n1, ref6, results2;
            // add pivot row to i-th row
            results2 = [];
            for (j = n1 = 0, ref6 = n; 0 <= ref6 ? n1 < ref6 : n1 > ref6; j = 0 <= ref6 ? ++n1 : --n1) {
              if (j > d) {
                push(stack[a + n * i + j]);
                push(stack[a + n * d + j]);
                push(p2);
                multiply();
                subtract();
                stack[a + n * i + j] = pop();
              }
              push(stack[u + n * i + j]);
              push(stack[u + n * d + j]);
              push(p2);
              multiply();
              subtract();
              results2.push(stack[u + n * i + j] = pop());
            }
            return results2;
          }());
        }
        return results1;
      }());
    }
    return results;
  };
  DEBUG_IS = false;

  // jsBoolToToInt = (p) ->
  //   if p then 1 else 0

  // p is a U
  // this routine is a simple check on whether we have
  // a basic zero in our hands. It doesn't perform any
  // calculations or simplifications.
  isZeroAtom = function isZeroAtom(p) {
    switch (p.k) {
      case NUM:
        return MZERO(p.q.a);
      case DOUBLE:
        return p.d === 0.0;
      default:
        return false;
    }
  };

  // p is a U
  // this routine is a simple check on whether we have
  // a basic zero in our hands. It doesn't perform any
  // calculations or simplifications.
  isZeroTensor = function isZeroTensor(p) {
    var i, o, ref;
    if (p.k !== TENSOR) {
      return 0;
    }
    for (i = o = 0, ref = p.tensor.nelem; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      if (!isZeroAtomOrTensor(p.tensor.elem[i])) {
        return 0;
      }
    }
    return 1;
  };

  // p is a U
  // this routine is a simple check on whether we have
  // a basic zero in our hands. It doesn't perform any
  // calculations or simplifications.
  isZeroAtomOrTensor = function isZeroAtomOrTensor(p) {
    return isZeroAtom(p) || isZeroTensor(p);
  };

  // This is a key routine to try to determine whether
  // the argument looks like zero/false, or non-zero/true,
  // or undetermined.
  // This is useful in two instances:
  //  * to determine if a predicate is true/false
  //  * to determine if particular quantity is zero
  // Note that if one wants to check if we have a simple
  // zero atom or tensor in our hands, then the isZeroAtomOrTensor
  // routine is sufficient.
  isZeroLikeOrNonZeroLikeOrUndetermined = function isZeroLikeOrNonZeroLikeOrUndetermined(valueOrPredicate) {
    var evalledArgument;
    // push the argument
    push(valueOrPredicate);
    // just like Eval but turns assignments into
    // equality checks
    Eval_predicate();
    evalledArgument = pop();
    // OK first check if we already have
    // a simple zero (or simple zero tensor)
    if (isZeroAtomOrTensor(evalledArgument)) {
      return 0;
    }
    // also check if we have a simple numeric value, or a tensor
    // full of simple numeric values (i.e. straight doubles or fractions).
    // In such cases, since we
    // just excluded they are zero, then we take it as
    // a "true"
    if (_isNumericAtomOrTensor(evalledArgument)) {
      return 1;
    }
    // if we are here we are in the case of value that
    // is not a zero and not a simple numeric value.
    // e.g. stuff like
    // 'sqrt(2)', or 'sin(45)' or '1+i', or 'a'
    // so in such cases let's try to do a float()
    // so we might get down to a simple numeric value
    // in some of those cases
    push(evalledArgument);
    zzfloat();
    evalledArgument = pop();
    // anything that could be calculated down to a simple
    // numeric value is now indeed either a 
    // double OR a double with an imaginary component
    // e.g. 2.0 or 2.4 + i*5.6
    // (Everything else are things that don't have a numeric
    // value e.g. 'a+b')

    // So, let's take care of the case where we have
    // a simple numeric value with NO imaginary component,
    // things like sqrt(2) or sin(PI)
    // by doing the simple numeric
    // values checks again
    if (isZeroAtomOrTensor(evalledArgument)) {
      return 0;
    }
    if (_isNumericAtomOrTensor(evalledArgument)) {
      return 1;
    }
    // here we still have cases of simple numeric values
    // WITH an imaginary component e.g. '1+i',
    // or things that don't have a numeric value e.g. 'a'

    // so now let's take care of the imaginary numbers:
    // since we JUST have to spot "zeros" we can just
    // calculate the absolute value and re-do all the checks
    // we just did
    if (_Find(evalledArgument, imaginaryunit)) {
      push(evalledArgument);
      absValFloat();
      Eval_predicate();
      evalledArgument = pop();
      // re-do the simple-number checks...
      if (isZeroAtomOrTensor(evalledArgument)) {
        return 0;
      }
      if (_isNumericAtomOrTensor(evalledArgument)) {
        return 1;
      }
    }
    // here we have stuff that is not reconducible to any
    // numeric value (or tensor with numeric values) e.g.
    // 'a+b', so it just means that we just don't know the
    // truth value, so we have
    // to leave the whole thing unevalled
    return null;
  };

  // p is a U
  isnegativenumber = function isnegativenumber(p) {
    switch (p.k) {
      case NUM:
        if (MSIGN(p.q.a) === -1) {
          return 1;
        }
        break;
      case DOUBLE:
        if (p.d < 0.0) {
          return 1;
        }
    }
    return 0;
  };

  // p is a U
  ispositivenumber = function ispositivenumber(p) {
    switch (p.k) {
      case NUM:
        if (MSIGN(p.q.a) === 1) {
          return 1;
        }
        break;
      case DOUBLE:
        if (p.d > 0.0) {
          return 1;
        }
    }
    return 0;
  };

  // p is a U
  isplustwo = function isplustwo(p) {
    switch (p.k) {
      case NUM:
        if (MEQUAL(p.q.a, 2) && MEQUAL(p.q.b, 1)) {
          return 1;
        }
        break;
      case DOUBLE:
        if (p.d === 2.0) {
          return 1;
        }
    }
    return 0;
  };

  // p is a U
  isplusone = function isplusone(p) {
    switch (p.k) {
      case NUM:
        if (MEQUAL(p.q.a, 1) && MEQUAL(p.q.b, 1)) {
          return 1;
        }
        break;
      case DOUBLE:
        if (p.d === 1.0) {
          return 1;
        }
    }
    return 0;
  };
  isminusone = function isminusone(p) {
    switch (p.k) {
      case NUM:
        if (MEQUAL(p.q.a, -1) && MEQUAL(p.q.b, 1)) {
          return 1;
        }
        break;
      case DOUBLE:
        if (p.d === -1.0) {
          return 1;
        }
    }
    return 0;
  };
  isone = function isone(p) {
    return isplusone(p) || isminusone(p);
  };
  isinteger = function isinteger(p) {
    if (p.k === NUM && MEQUAL(p.q.b, 1)) {
      return 1;
    } else {
      return 0;
    }
  };
  isintegerorintegerfloat = function isintegerorintegerfloat(p) {
    if (p.k === DOUBLE) {
      if (p.d === Math.round(p.d)) {
        return 1;
      }
      return 0;
    }
    return isinteger(p);
  };
  isnonnegativeinteger = function isnonnegativeinteger(p) {
    if (isrational(p) && MEQUAL(p.q.b, 1) && MSIGN(p.q.a) === 1) {
      return 1;
    } else {
      return 0;
    }
  };
  isposint = function isposint(p) {
    if (isinteger(p) && MSIGN(p.q.a) === 1) {
      return 1;
    } else {
      return 0;
    }
  };

  // --------------------------------------
  isunivarpolyfactoredorexpandedform = function isunivarpolyfactoredorexpandedform(p, x) {
    if (DEBUG) {
      console.log("isunivarpolyfactoredorexpandedform: p: " + p + " x: " + x);
    }
    if (x == null) {
      push(p);
      guess();
      x = pop();
      pop();
    }
    if (ispolyfactoredorexpandedform(p, x) && _Find(p, symbol(SYMBOL_X)) + _Find(p, symbol(SYMBOL_Y)) + _Find(p, symbol(SYMBOL_Z)) === 1) {
      return x;
    } else {
      return 0;
    }
  };

  // --------------------------------------
  // sometimes we want to check if we have a poly in our
  // hands, however it's in factored form and we don't
  // want to expand it.
  ispolyfactoredorexpandedform = function ispolyfactoredorexpandedform(p, x) {
    return ispolyfactoredorexpandedform_factor(p, x);
  };
  ispolyfactoredorexpandedform_factor = function ispolyfactoredorexpandedform_factor(p, x) {
    if (car(p) === symbol(MULTIPLY)) {
      p = cdr(p);
      while (iscons(p)) {
        if (DEBUG) {
          console.log("ispolyfactoredorexpandedform_factor testing " + car(p));
        }
        if (!ispolyfactoredorexpandedform_power(car(p), x)) {
          if (DEBUG) {
            console.log("... tested negative:" + car(p));
          }
          return 0;
        }
        p = cdr(p);
      }
      return 1;
    } else {
      return ispolyfactoredorexpandedform_power(p, x);
    }
  };
  ispolyfactoredorexpandedform_power = function ispolyfactoredorexpandedform_power(p, x) {
    if (car(p) === symbol(POWER)) {
      if (DEBUG) {
        console.log("ispolyfactoredorexpandedform_power (isposint(caddr(p)) " + (isposint(caddr(p)), DEBUG ? console.log("ispolyfactoredorexpandedform_power ispolyexpandedform_expr(cadr(p), x)) " + ispolyexpandedform_expr(cadr(p), x)) : void 0));
      }
      return isposint(caddr(p)) && ispolyexpandedform_expr(cadr(p), x);
    } else {
      if (DEBUG) {
        console.log("ispolyfactoredorexpandedform_power not a power, testing if this is exp form: " + p);
      }
      return ispolyexpandedform_expr(p, x);
    }
  };

  // --------------------------------------
  ispolyexpandedform = function ispolyexpandedform(p, x) {
    if (_Find(p, x)) {
      return ispolyexpandedform_expr(p, x);
    } else {
      return 0;
    }
  };
  ispolyexpandedform_expr = function ispolyexpandedform_expr(p, x) {
    if (car(p) === symbol(ADD)) {
      p = cdr(p);
      while (iscons(p)) {
        if (!ispolyexpandedform_term(car(p), x)) {
          return 0;
        }
        p = cdr(p);
      }
      return 1;
    } else {
      return ispolyexpandedform_term(p, x);
    }
  };
  ispolyexpandedform_term = function ispolyexpandedform_term(p, x) {
    if (car(p) === symbol(MULTIPLY)) {
      p = cdr(p);
      while (iscons(p)) {
        if (!ispolyexpandedform_factor(car(p), x)) {
          return 0;
        }
        p = cdr(p);
      }
      return 1;
    } else {
      return ispolyexpandedform_factor(p, x);
    }
  };
  ispolyexpandedform_factor = function ispolyexpandedform_factor(p, x) {
    if (equal(p, x)) {
      return 1;
    }
    if (car(p) === symbol(POWER) && equal(cadr(p), x)) {
      if (isposint(caddr(p))) {
        return 1;
      } else {
        return 0;
      }
    }
    if (_Find(p, x)) {
      return 0;
    } else {
      return 1;
    }
  };

  // --------------------------------------
  isnegativeterm = function isnegativeterm(p) {
    if (isnegativenumber(p)) {
      return 1;
    } else if (car(p) === symbol(MULTIPLY) && isnegativenumber(cadr(p))) {
      return 1;
    } else {
      return 0;
    }
  };
  hasNegativeRationalExponent = function hasNegativeRationalExponent(p) {
    if (car(p) === symbol(POWER) && isrational(car(cdr(cdr(p)))) && isnegativenumber(car(cdr(p)))) {
      if (DEBUG_IS) {
        console.log("hasNegativeRationalExponent: " + p.toString() + " has imaginary component");
      }
      return 1;
    } else {
      if (DEBUG_IS) {
        console.log("hasNegativeRationalExponent: " + p.toString() + " has NO imaginary component");
      }
      return 0;
    }
  };
  isimaginarynumberdouble = function isimaginarynumberdouble(p) {
    if (car(p) === symbol(MULTIPLY) && length(p) === 3 && isdouble(cadr(p)) && hasNegativeRationalExponent(caddr(p)) || equal(p, imaginaryunit)) {
      return 1;
    } else {
      return 0;
    }
  };
  isimaginarynumber = function isimaginarynumber(p) {
    if (car(p) === symbol(MULTIPLY) && length(p) === 3 && isNumericAtom(cadr(p)) && equal(caddr(p), imaginaryunit) || equal(p, imaginaryunit) || hasNegativeRationalExponent(caddr(p))) {
      if (DEBUG_IS) {
        console.log("isimaginarynumber: " + p.toString() + " is imaginary number");
      }
      return 1;
    } else {
      if (DEBUG_IS) {
        console.log("isimaginarynumber: " + p.toString() + " isn't an imaginary number");
      }
      return 0;
    }
  };
  iscomplexnumberdouble = function iscomplexnumberdouble(p) {
    if (car(p) === symbol(ADD) && length(p) === 3 && isdouble(cadr(p)) && isimaginarynumberdouble(caddr(p)) || isimaginarynumberdouble(p)) {
      return 1;
    } else {
      return 0;
    }
  };
  iscomplexnumber = function iscomplexnumber(p) {
    if (DEBUG_IS) {
      debugger;
    }
    if (car(p) === symbol(ADD) && length(p) === 3 && isNumericAtom(cadr(p)) && isimaginarynumber(caddr(p)) || isimaginarynumber(p)) {
      if (DEBUG) {
        console.log("iscomplexnumber: " + p.toString() + " is imaginary number");
      }
      return 1;
    } else {
      if (DEBUG) {
        console.log("iscomplexnumber: " + p.toString() + " is imaginary number");
      }
      return 0;
    }
  };
  iseveninteger = function iseveninteger(p) {
    if (isinteger(p) && p.q.a.isEven()) {
      return 1;
    } else {
      return 0;
    }
  };
  isnegative = function isnegative(p) {
    if (car(p) === symbol(ADD) && isnegativeterm(cadr(p))) {
      return 1;
    } else if (isnegativeterm(p)) {
      return 1;
    } else {
      return 0;
    }
  };

  // returns 1 if there's a symbol somewhere.
  // not used anywhere.
  // NOTE: PI and POWER are symbols,
  // so for example 2^3 would be symbolic
  // while -1^(1/2) i.e. 'i' is not, so this can
  // be tricky to use.
  _issymbolic = function issymbolic(p) {
    if (issymbol(p)) {
      return 1;
    } else {
      while (iscons(p)) {
        if (_issymbolic(car(p))) {
          return 1;
        }
        p = cdr(p);
      }
      return 0;
    }
  };

  // i.e. 2, 2^3, etc.
  isintegerfactor = function isintegerfactor(p) {
    return isinteger(p) || car(p) === symbol(POWER) && isinteger(cadr(p)) && isinteger(caddr(p));
  };
  isNumberOneOverSomething = function isNumberOneOverSomething(p) {
    return isfraction(p) && MEQUAL(p.q.a.abs(), 1);
  };
  isoneover = function isoneover(p) {
    return car(p) === symbol(POWER) && isminusone(caddr(p));
  };
  isfraction = function isfraction(p) {
    return p.k === NUM && !MEQUAL(p.q.b, 1);
  };

  // p is a U, n an int
  equaln = function equaln(p, n) {
    switch (p.k) {
      case NUM:
        return MEQUAL(p.q.a, n) && MEQUAL(p.q.b, 1);
      case DOUBLE:
        return p.d === n;
      default:
        return false;
    }
  };

  // p is a U, a and b ints
  equalq = function equalq(p, a, b) {
    switch (p.k) {
      case NUM:
        return MEQUAL(p.q.a, a) && MEQUAL(p.q.b, b);
      case DOUBLE:
        return p.d === a / b;
      default:
        return false;
    }
  };

  // 1/2 ?
  isoneovertwo = function isoneovertwo(p) {
    return equalq(p, 1, 2);
  };

  // -1/2 ?
  isminusoneovertwo = function isminusoneovertwo(p) {
    return equalq(p, -1, 2);
  };

  // 1/sqrt(2) ?
  isoneoversqrttwo = function isoneoversqrttwo(p) {
    return car(p) === symbol(POWER) && equaln(cadr(p), 2) && equalq(caddr(p), -1, 2);
  };

  // -1/sqrt(2) ?
  isminusoneoversqrttwo = function isminusoneoversqrttwo(p) {
    return car(p) === symbol(MULTIPLY) && equaln(cadr(p), -1) && isoneoversqrttwo(caddr(p)) && length(p) === 3;
  };

  // sqrt(3)/2 ?
  issqrtthreeovertwo = function issqrtthreeovertwo(p) {
    return car(p) === symbol(MULTIPLY) && isoneovertwo(cadr(p)) && issqrtthree(caddr(p)) && length(p) === 3;
  };

  // -sqrt(3)/2 ?
  isminussqrtthreeovertwo = function isminussqrtthreeovertwo(p) {
    return car(p) === symbol(MULTIPLY) && isminusoneovertwo(cadr(p)) && issqrtthree(caddr(p)) && length(p) === 3;
  };

  // p == sqrt(3) ?
  issqrtthree = function issqrtthree(p) {
    return car(p) === symbol(POWER) && equaln(cadr(p), 3) && isoneovertwo(caddr(p));
  };
  _isfloating = function isfloating(p) {
    if (p.k === DOUBLE || p === symbol(FLOATF)) {
      return 1;
    }
    while (iscons(p)) {
      if (_isfloating(car(p))) {
        return 1;
      }
      p = cdr(p);
    }
    return 0;
  };
  isimaginaryunit = function isimaginaryunit(p) {
    if (equal(p, imaginaryunit)) {
      return 1;
    } else {
      return 0;
    }
  };

  // n/2 * i * pi ?

  // return value:

  //  0  no

  //  1  1

  //  2  -1

  //  3  i

  //  4  -i
  isquarterturn = function isquarterturn(p) {
    var minussign, n;
    n = 0;
    minussign = 0;
    if (car(p) !== symbol(MULTIPLY)) {
      return 0;
    }
    if (equal(cadr(p), imaginaryunit)) {
      if (caddr(p) !== symbol(PI)) {
        return 0;
      }
      if (length(p) !== 3) {
        return 0;
      }
      return 2;
    }
    if (!isNumericAtom(cadr(p))) {
      return 0;
    }
    if (!equal(caddr(p), imaginaryunit)) {
      return 0;
    }
    if (cadddr(p) !== symbol(PI)) {
      return 0;
    }
    if (length(p) !== 4) {
      return 0;
    }
    push(cadr(p));
    push_integer(2);
    multiply();
    n = pop_integer();
    if (isNaN(n)) {
      return 0;
    }
    if (n < 1) {
      minussign = 1;
      n = -n;
    }
    switch (n % 4) {
      case 0:
        n = 1;
        break;
      case 1:
        if (minussign) {
          n = 4;
        } else {
          n = 3;
        }
        break;
      case 2:
        n = 2;
        break;
      case 3:
        if (minussign) {
          n = 3;
        } else {
          n = 4;
        }
    }
    return n;
  };

  // special multiple of pi?

  // returns for the following multiples of pi...

  //  -4/2  -3/2  -2/2  -1/2  1/2  2/2  3/2  4/2

  //  4  1  2  3  1  2  3  4
  isnpi = function isnpi(p) {
    var doNothing, n;
    n = 0;
    if (p === symbol(PI)) {
      return 2;
    }
    if (car(p) === symbol(MULTIPLY) && isNumericAtom(cadr(p)) && caddr(p) === symbol(PI) && length(p) === 3) {
      doNothing = 0;
    } else {
      return 0;
    }
    push(cadr(p));
    push_integer(2);
    multiply();
    n = pop_integer();
    if (isNaN(n)) {
      return 0;
    }
    if (n < 0) {
      n = 4 - -n % 4;
    } else {
      n = 1 + (n - 1) % 4;
    }
    return n;
  };
  $.isZeroAtomOrTensor = isZeroAtomOrTensor;
  $.isnegativenumber = isnegativenumber;
  $.isplusone = isplusone;
  $.isminusone = isminusone;
  $.isinteger = isinteger;
  $.isnonnegativeinteger = isnonnegativeinteger;
  $.isposint = isposint;
  $.isnegativeterm = isnegativeterm;
  $.isimaginarynumber = isimaginarynumber;
  $.iscomplexnumber = iscomplexnumber;
  $.iseveninteger = iseveninteger;
  $.isnegative = isnegative;
  $.issymbolic = _issymbolic;
  $.isintegerfactor = isintegerfactor;
  $.isoneover = isoneover;
  $.isfraction = isfraction;
  $.isoneoversqrttwo = isoneoversqrttwo;
  $.isminusoneoversqrttwo = isminusoneoversqrttwo;
  $.isfloating = _isfloating;
  $.isimaginaryunit = isimaginaryunit;
  $.isquarterturn = isquarterturn;
  $.isnpi = isnpi;
  Eval_isprime = function Eval_isprime() {
    push(cadr(p1));
    Eval();
    p1 = pop();
    if (isnonnegativeinteger(p1) && mprime(p1.q.a)) {
      return push_integer(1);
    } else {
      return push_integer(0);
    }
  };
  Eval_laguerre = function Eval_laguerre() {
    // 1st arg
    push(cadr(p1));
    Eval();
    // 2nd arg
    push(caddr(p1));
    Eval();
    // 3rd arg
    push(cadddr(p1));
    Eval();
    p2 = pop();
    if (p2 === symbol(NIL)) {
      push_integer(0);
    } else {
      push(p2);
    }
    return laguerre();
  };

  //define X p1
  //define N p2
  //define K p3
  //define Y p4
  //define Y0 p5
  //define Y1 p6
  laguerre = function laguerre() {
    var n;
    n = 0;
    save();
    p3 = pop();
    p2 = pop();
    p1 = pop();
    push(p2);
    n = pop_integer();
    if (n < 0 || isNaN(n)) {
      push_symbol(LAGUERRE);
      push(p1);
      push(p2);
      push(p3);
      list(4);
      restore();
      return;
    }
    if (issymbol(p1)) {
      laguerre2(n);
    } else {
      p4 = p1;
      p1 = symbol(SECRETX);
      laguerre2(n);
      p1 = p4;
      push(symbol(SECRETX));
      push(p1);
      _subst();
      Eval();
    }
    return restore();
  };
  laguerre2 = function laguerre2(n) {
    var i, o, ref, results;
    i = 0;
    push_integer(1);
    push_integer(0);
    p6 = pop();
    results = [];
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      p5 = p6;
      p6 = pop();
      push_integer(2 * i + 1);
      push(p1);
      subtract();
      push(p3);
      add();
      push(p6);
      multiply();
      push_integer(i);
      push(p3);
      add();
      push(p5);
      multiply();
      subtract();
      push_integer(i + 1);
      results.push(divide());
    }
    return results;
  };

  // Find the least common multiple of two expressions.
  Eval_lcm = function Eval_lcm() {
    var results;
    p1 = cdr(p1);
    push(car(p1));
    Eval();
    p1 = cdr(p1);
    results = [];
    while (iscons(p1)) {
      push(car(p1));
      Eval();
      lcm();
      results.push(p1 = cdr(p1));
    }
    return results;
  };
  lcm = function lcm() {
    var prev_expanding;
    prev_expanding = expanding;
    save();
    yylcm();
    restore();
    return expanding = prev_expanding;
  };
  yylcm = function yylcm() {
    expanding = 1;
    p2 = pop();
    p1 = pop();
    push(p1);
    push(p2);
    gcd();
    push(p1);
    divide();
    push(p2);
    divide();
    return inverse();
  };
  Eval_leading = function Eval_leading() {
    push(cadr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    p1 = pop();
    if (p1 === symbol(NIL)) {
      guess();
    } else {
      push(p1);
    }
    return leading();
  };

  //define P p1
  //define X p2
  //define N p3
  leading = function leading() {
    save();
    p2 = pop();
    p1 = pop();
    push(p1); // N = degree of P
    push(p2);
    degree();
    p3 = pop();
    push(p1); // divide through by X ^ N
    push(p2);
    push(p3);
    power();
    divide();
    push(p2); // remove terms that depend on X
    filter();
    return restore();
  };
  Eval_legendre = function Eval_legendre() {
    // 1st arg
    push(cadr(p1));
    Eval();
    // 2nd arg
    push(caddr(p1));
    Eval();
    // 3rd arg (optional)
    push(cadddr(p1));
    Eval();
    p2 = pop();
    if (p2 === symbol(NIL)) {
      push_integer(0);
    } else {
      push(p2);
    }
    return legendre();
  };

  //define X p1
  //define N p2
  //define M p3
  //define Y p4
  //define Y0 p5
  //define Y1 p6
  legendre = function legendre() {
    save();
    __legendre();
    return restore();
  };
  __legendre = function __legendre() {
    var m, n;
    m = 0;
    n = 0;
    p3 = pop();
    p2 = pop();
    p1 = pop();
    push(p2);
    n = pop_integer();
    push(p3);
    m = pop_integer();
    if (n < 0 || isNaN(n) || m < 0 || isNaN(m)) {
      push_symbol(LEGENDRE);
      push(p1);
      push(p2);
      push(p3);
      list(4);
      return;
    }
    if (issymbol(p1)) {
      __legendre2(n, m);
    } else {
      p4 = p1;
      p1 = symbol(SECRETX);
      __legendre2(n, m);
      p1 = p4;
      push(symbol(SECRETX));
      push(p1);
      _subst();
      Eval();
    }
    return __legendre3(m);
  };
  __legendre2 = function __legendre2(n, m) {
    var i, i1, o, ref, ref1, results;
    i = 0;
    push_integer(1);
    push_integer(0);
    p6 = pop();
    //  i=1  p5 = 0 
    //    p6 = 1 
    //    ((2*i+1)*x*p6 - i*p5) / i = x

    //  i=2  p5 = 1
    //    p6 = x
    //    ((2*i+1)*x*p6 - i*p5) / i = -1/2 + 3/2*x^2

    //  i=3  p5 = x
    //    p6 = -1/2 + 3/2*x^2
    //    ((2*i+1)*x*p6 - i*p5) / i = -3/2*x + 5/2*x^3
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      p5 = p6;
      p6 = pop();
      push_integer(2 * i + 1);
      push(p1);
      multiply();
      push(p6);
      multiply();
      push_integer(i);
      push(p5);
      multiply();
      subtract();
      push_integer(i + 1);
      divide();
    }
    results = [];
    for (i = i1 = 0, ref1 = m; 0 <= ref1 ? i1 < ref1 : i1 > ref1; i = 0 <= ref1 ? ++i1 : --i1) {
      push(p1);
      results.push(derivative());
    }
    return results;
  };

  // moveTos tos * (-1)^m * (1-x^2)^(m/2)
  __legendre3 = function __legendre3(m) {
    if (m === 0) {
      return;
    }
    if (car(p1) === symbol(COS)) {
      push(cadr(p1));
      sine();
      square();
    } else if (car(p1) === symbol(SIN)) {
      push(cadr(p1));
      cosine();
      square();
    } else {
      push_integer(1);
      push(p1);
      square();
      subtract();
    }
    push_integer(m);
    push_rational(1, 2);
    multiply();
    power();
    multiply();
    if (m % 2) {
      return negate();
    }
  };

  // Create a list from n things on the stack.

  // n is an integer
  list = function list(n) {
    var listIterator, o, ref, results;
    listIterator = 0;
    push(symbol(NIL));
    results = [];
    for (listIterator = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; listIterator = 0 <= ref ? ++o : --o) {
      results.push(cons());
    }
    return results;
  };

  // Natural logarithm.

  // Note that we use the mathematics / Javascript / Mathematica
  // convention that "log" is indeed the natural logarithm.

  // In engineering, biology, astronomy, "log" can stand instead
  // for the "common" logarithm i.e. base 10. Also note that Google
  // calculations use log for the common logarithm.
  Eval_log = function Eval_log() {
    push(cadr(p1));
    Eval();
    return logarithm();
  };
  logarithm = function logarithm() {
    save();
    yylog();
    return restore();
  };
  yylog = function yylog() {
    var d;
    d = 0.0;
    p1 = pop();
    if (p1 === symbol(E)) {
      push_integer(1);
      return;
    }
    if (equaln(p1, 1)) {
      push_integer(0);
      return;
    }
    if (isnegativenumber(p1)) {
      push(p1);
      negate();
      logarithm();
      push(imaginaryunit);
      if (evaluatingAsFloats) {
        push_double(Math.PI);
      } else {
        push_symbol(PI);
      }
      multiply();
      add();
      return;
    }
    if (isdouble(p1)) {
      d = Math.log(p1.d);
      push_double(d);
      return;
    }
    // rational number and not an integer?
    if (isfraction(p1)) {
      push(p1);
      _numerator();
      logarithm();
      push(p1);
      _denominator();
      logarithm();
      subtract();
      return;
    }
    // log(a ^ b) --> b log(a)
    if (car(p1) === symbol(POWER)) {
      push(caddr(p1));
      push(cadr(p1));
      logarithm();
      multiply();
      return;
    }
    // log(a * b) --> log(a) + log(b)
    if (car(p1) === symbol(MULTIPLY)) {
      push_integer(0);
      p1 = cdr(p1);
      while (iscons(p1)) {
        push(car(p1));
        logarithm();
        add();
        p1 = cdr(p1);
      }
      return;
    }
    push_symbol(LOG);
    push(p1);
    return list(2);
  };

  // now this might be a little confusing, so a
  // clarification is in order.
  // First off, at the scripting level most things
  // as they are handled get evalled.
  // That means that they are recursively "calculated"
  // as much as possible, i.e. variables are recursively
  // looked up for their values, operators are applied,
  // functions are ivoked, etc.
  // I.e. while scripting, most things are
  // evalled all the times.
  // e.g. if I type
  //   x = 1+1
  // then x is actually assigned 2, not 1+1
  // Something that helps a little is "quote", e.g.
  // If I assign
  //   x = quote(1+1)
  // then x actually contains 1+1, not 2.
  // But then x is evaluated as soon as I type
  //   x // gives "2" as x is evaluated

  // Evaluation is great, but sometimes one wants
  // to look at the actual structure of an expression
  // or a content of a variable, without those
  // being evaluated first.

  // for example I might type
  //   x = a + b
  //   a = 1
  //   b = 2
  // and from this point on printing the actual
  // structure of x is impossible, because from
  // now on any evaluation of x will give "3"
  // You might say "but you have x defined up there,
  // what's the point of printing it out?", to which
  // the answer is that one might do further
  // substitutions or transformations of special kind
  // to x. One might want to look at the structure
  // and it might be complex or impossible.

  // So this function does that.
  // If it's passed a variable, then it
  // DOES NOT eval the variable, RATHER
  // it prints the content of the variable without
  // evaluating it.
  // In the other cases it works like "quote" e.g.
  // it just gives the argument as is, again without
  // evaluating it.

  // In the following examples, for brevity, I just
  // use
  //   x = quote(1+2)
  // instead of this:
  //   x = a + b
  //   a = 1
  //   b = 2
  // to put a structure in x that is easy to see whether
  // it's avaulated or not.

  // So lookup allows this:
  //   x = quote(1+2)
  //   print(lookup(x)) # gives 1+2

  // Note that there would be potentially a way
  // to achieve a similar result, you could do:
  //   x = quote(quote(1+2))
  //   print(x)
  // but you can't always control x to contain
  // two quotes like that...
  // note how two "quotes" are needed because
  // if you just put one, then
  // x would indeed contain 1+2 instead of 3,
  // but then print would evaluate that to 3:
  //   x = quote(1+2) # now x contains 1+2, not 3
  //   print(x) # but x evaluated here to 3

  // Other workarounds would not work:
  //   x = quote(1+2)
  //   print(quote(x))
  // would not work because quote(x) literally means 'x'
  // so 'x' is printed instead of its content.

  // Note also that lookup allows you to copy
  // the structure of a variable to another:
  //   x = a + b
  //   a = 1
  //   b = 2
  // now:
  //   y = x # y contains the number 3 and prints to 3
  //   y = lookup(x) # y contains "a+b" and prints to 3
  //   y = quote(x) # y contains "x" and prints to 3
  // note that in the first and second case y is
  // independent from x, i.e. changing x doesn't change y
  // while in the last case it is.

  // Another similar simple example is when doing something
  // like this:
  //    x = y
  //    y = z
  //    x
  //       => gives z
  //    lookup(x)
  //       => gives y
  //          i.e. lookup allows you to see the immediate
  //          content of x, rather than the evaluation which
  //          would end up in x -> y -> z
  // Note that if you invert the order of the assignments i.e.
  //    y = z
  //    x = y
  // Then at this point x immediately contains z, since the
  // assignment x = y is not quoted, hence y is evaluated to z
  // when assigned to x.
  //    lookup(x)
  //       => gives z
  Eval_lookup = function Eval_lookup() {
    p1 = cadr(p1);
    if (!iscons(p1) && cadr(p1).k === SYM) {
      p1 = get_binding(p1);
    }
    return push(p1); // Bignum addition and subtraction
  };

  //static unsigned int *addf(unsigned int *, unsigned int *)
  //static unsigned int *subf(unsigned int *, unsigned int *)
  //static int ucmp(unsigned int *, unsigned int *)
  madd = function madd(a, b) {
    return a.add(b);
  };
  msub = function msub(a, b) {
    return a.subtract(b);
  };
  addf = function addf(a, b) {
    return a.add(b);
  };
  subf = function subf(a, b) {
    return a.subtract(b);
  };

  // unsigned compare
  ucmp = function ucmp(a, b) {
    return a.compareAbs(b);
  };

  //-----------------------------------------------------------------------------

  //  Bignum GCD

  //  Uses the binary GCD algorithm.

  //  See "The Art of Computer Programming" p. 338.

  //  mgcd always returns a positive value

  //  mgcd(0, 0) = 0

  //  mgcd(u, 0) = |u|

  //  mgcd(0, v) = |v|

  //-----------------------------------------------------------------------------
  mgcd = function mgcd(u, v) {
    return bigInt.gcd(u, v);
  };

  //if SELFTEST

  // s is a string
  new_string = function new_string(s) {
    var theNewString;
    theNewString = new U();
    theNewString.k = STR;
    theNewString.str = s;
    return theNewString;
  };
  out_of_memory = function out_of_memory() {
    return stop("out of memory");
  };

  // both ints
  push_zero_matrix = function push_zero_matrix(i, j) {
    push(alloc_tensor(i * j));
    stack[tos - 1].tensor.ndim = 2;
    stack[tos - 1].tensor.dim[0] = i;
    return stack[tos - 1].tensor.dim[1] = j;
  };
  push_identity_matrix = function push_identity_matrix(n) {
    var i, o, ref;
    push_zero_matrix(n, n);
    for (i = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      stack[tos - 1].tensor.elem[i * n + i] = one;
    }
    return check_tensor_dimensions(stack[tos - 1]);
  };
  push_cars = function push_cars(p) {
    var results;
    results = [];
    while (iscons(p)) {
      push(car(p));
      results.push(p = cdr(p));
    }
    return results;
  };

  // see cmp_expr definition, this
  // function alone just does simple structure comparison
  // or compares numbers (either rationals or integers or doubles)
  // but can't be used alone to test
  // more complex mathematical equalities...
  equal = function equal(p1, p2) {
    if (_cmp_expr(p1, p2) === 0) {
      return 1;
    } else {
      return 0;
    }
  };
  lessp = function lessp(p1, p2) {
    if (_cmp_expr(p1, p2) < 0) {
      return 1;
    } else {
      return 0;
    }
  };
  sign = function sign(n) {
    if (n < 0) {
      return -1;
    } else if (n > 0) {
      return 1;
    } else {
      return 0;
    }
  };

  // compares whether two expressions
  // have the same structure.
  // For example this method alone
  // would compare "1+1" and "2"
  // as different.
  // It just so happens though that one oftens
  // evaluates the two sides before passing them
  // to this function, so chances are that the two
  // sides have the same normal form.
  // Even a simple evaluation might not cut it
  // though... a simplification of both sides
  // would then help. And even that might not
  // cut it in some cases...
  _cmp_expr = function cmp_expr(p1, p2) {
    var n;
    n = 0;
    if (p1 === p2) {
      return 0;
    }
    if (p1 === symbol(NIL)) {
      return -1;
    }
    if (p2 === symbol(NIL)) {
      return 1;
    }
    if (isNumericAtom(p1) && isNumericAtom(p2)) {
      return sign(compare_numbers(p1, p2));
    }
    if (isNumericAtom(p1)) {
      return -1;
    }
    if (isNumericAtom(p2)) {
      return 1;
    }
    if (isstr(p1) && isstr(p2)) {
      return sign(strcmp(p1.str, p2.str));
    }
    if (isstr(p1)) {
      return -1;
    }
    if (isstr(p2)) {
      return 1;
    }
    if (issymbol(p1) && issymbol(p2)) {
      return sign(strcmp(get_printname(p1), get_printname(p2)));
    }
    if (issymbol(p1)) {
      return -1;
    }
    if (issymbol(p2)) {
      return 1;
    }
    if (istensor(p1) && istensor(p2)) {
      return compare_tensors(p1, p2);
    }
    if (istensor(p1)) {
      return -1;
    }
    if (istensor(p2)) {
      return 1;
    }
    // recursion here
    while (iscons(p1) && iscons(p2)) {
      n = _cmp_expr(car(p1), car(p2));
      if (n !== 0) {
        return n;
      }
      p1 = cdr(p1);
      p2 = cdr(p2);
    }
    if (iscons(p2)) {
      return -1;
    }
    if (iscons(p1)) {
      return 1;
    }
    return 0;
  };
  length = function length(p) {
    var n;
    n = 0;
    while (iscons(p)) {
      p = cdr(p);
      n++;
    }
    return n;
  };
  unique = function unique(p) {
    save();
    p1 = symbol(NIL);
    p2 = symbol(NIL);
    _unique_f(p);
    if (p2 !== symbol(NIL)) {
      p1 = symbol(NIL);
    }
    p = p1;
    restore();
    return p;
  };
  _unique_f = function unique_f(p) {
    if (isstr(p)) {
      if (p1 === symbol(NIL)) {
        p1 = p;
      } else if (p !== p1) {
        p2 = p;
      }
      return;
    }
    while (iscons(p)) {
      _unique_f(car(p));
      if (p2 !== symbol(NIL)) {
        return;
      }
      p = cdr(p);
    }
  };
  ssqrt = function ssqrt() {
    push_rational(1, 2);
    return power();
  };
  yyexpand = function yyexpand() {
    var prev_expanding;
    prev_expanding = expanding;
    expanding = 1;
    Eval();
    return expanding = prev_expanding;
  };
  exponential = function exponential() {
    push_symbol(E);
    swap();
    return power();
  };
  square = function square() {
    push_integer(2);
    return power();
  };

  //__cmp = (p1, p2) ->
  //  return cmp_expr(p1, p2)

  // n an integer
  sort_stack = function sort_stack(n) {
    var h, subsetOfStack;
    //qsort(stack + tos - n, n, sizeof (U *), __cmp)
    h = tos - n;
    subsetOfStack = stack.slice(h, h + n);
    subsetOfStack.sort(_cmp_expr);
    return stack = stack.slice(0, h).concat(subsetOfStack).concat(stack.slice(h + n));
  };
  $.equal = equal;
  $.length = length;

  // Bignum multiplication and division
  mmul = function mmul(a, b) {
    return a.multiply(b);
  };
  mdiv = function mdiv(a, b) {
    return a.divide(b);
  };

  // a = a + b
  /*
  static void
  addf(unsigned int *a, unsigned int *b, int len)
  {
    int i
    long long t = 0; # can be signed or unsigned 
    for (i = 0; i < len; i++) {
      t += (long long) a[i] + b[i]
      a[i] = (unsigned int) t
      t >>= 32
    }
  }
   // a = a - b
   static void
  subf(unsigned int *a, unsigned int *b, int len)
  {
    int i
    long long t = 0; # must be signed
    for (i = 0; i < len; i++) {
      t += (long long) a[i] - b[i]
      a[i] = (unsigned int) t
      t >>= 32
    }
  }
   // a = b * c
   // 0xffffffff + 0xffffffff * 0xffffffff == 0xffffffff00000000
   static void
  mulf(unsigned int *a, unsigned int *b, int len, unsigned int c)
  {
    int i
    unsigned long long t = 0; # must be unsigned
    for (i = 0; i < len; i++) {
      t += (unsigned long long) b[i] * c
      a[i] = (unsigned int) t
      t >>= 32
    }
    a[i] = (unsigned int) t
  }
  */
  mmod = function mmod(a, b) {
    return a.mod(b);
  };

  // return both quotient and remainder of a/b
  // we'd have this method as divmod(number)
  // but obviously doesn't change the passed parameters
  mdivrem = function mdivrem(a, b) {
    var toReturn;
    toReturn = a.divmod(b);
    return [toReturn.quotient, toReturn.remainder];
  };

  //if SELFTEST

  // small integer tests
  Eval_mod = function Eval_mod() {
    push(cadr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    return mod();
  };
  mod = function mod() {
    var n;
    n = 0;
    save();
    p2 = pop();
    p1 = pop();
    if (isZeroAtomOrTensor(p2)) {
      stop("mod function: divide by zero");
    }
    if (!isNumericAtom(p1) || !isNumericAtom(p2)) {
      push_symbol(MOD);
      push(p1);
      push(p2);
      list(3);
      restore();
      return;
    }
    if (isdouble(p1)) {
      push(p1);
      n = pop_integer();
      if (isNaN(n)) {
        stop("mod function: cannot convert float value to integer");
      }
      push_integer(n);
      p1 = pop();
    }
    if (isdouble(p2)) {
      push(p2);
      n = pop_integer();
      if (isNaN(n)) {
        stop("mod function: cannot convert float value to integer");
      }
      push_integer(n);
      p2 = pop();
    }
    if (!isinteger(p1) || !isinteger(p2)) {
      stop("mod function: integer arguments expected");
    }
    p3 = new U();
    p3.k = NUM;
    p3.q.a = mmod(p1.q.a, p2.q.a);
    p3.q.b = mint(1);
    push(p3);
    return restore();
  };

  // Bignum power

  // a is a bigint, n is a small normal int
  mpow = function mpow(a, n) {
    return a.pow(n);
  };

  //if SELFTEST

  // Bignum prime test (returns 1 if prime, 0 if not)

  // Uses Algorithm P (probabilistic primality test) from p. 395 of
  // "The Art of Computer Programming, Volume 2" by Donald E. Knuth.
  mprime = function mprime(n) {
    return n.isProbablePrime();
  };

  //if SELFTEST

  //-----------------------------------------------------------------------------

  //  Bignum root

  //  Returns null pointer if not perfect root.

  //  The sign of the radicand is ignored.

  //-----------------------------------------------------------------------------
  mroot = function mroot(n, index) {
    var i, j, k, o, ref, x, y;
    // this doesn't quite work
    //return n.pow(1/index +  0.0000000000000001)

    // sign of radicand ignored
    n = n.abs();
    i = 0;
    j = 0;
    k = 0;
    if (index === 0) {
      stop("root index is zero");
    }
    // count number of bits
    k = 0;
    while (n.shiftRight(k) > 0) {
      k++;
    }
    if (k === 0) {
      return mint(0);
    }
    // initial guess
    k = Math.floor((k - 1) / index);
    j = Math.floor(k / 32 + 1);
    x = bigInt(j);
    for (i = o = 0, ref = j; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
      // zero-out the ith bit
      x = x.and(bigInt(1).shiftLeft(i).not());
    }
    while (k >= 0) {
      // set the kth bit
      x = x.or(bigInt(1).shiftLeft(k));
      y = mpow(x, index);
      switch (mcmp(y, n)) {
        case 0:
          return x;
        case 1:
          //mp_clr_bit(x, k)
          // clear the kth bit
          x = x.and(bigInt(1).shiftLeft(k).not());
      }
      k--;
    }
    return 0;
  };

  //if SELFTEST

  // Symbolic multiplication

  // multiplication is commutative, so it can't be used
  // e.g. on two matrices.
  // But it can be used, say, on a scalar and a matrix.,
  // so the output of a multiplication is not
  // always a scalar.

  //extern void append(void)
  //static void parse_p1(void)
  //static void parse_p2(void)
  //static void __normalize_radical_factors(int)
  DEBUG_MULTIPLY = false;
  Eval_multiply = function Eval_multiply() {
    var results;
    push(cadr(p1));
    Eval();
    p1 = cddr(p1);
    results = [];
    while (iscons(p1)) {
      push(car(p1));
      Eval();
      multiply();
      results.push(p1 = cdr(p1));
    }
    return results;
  };

  // this one doesn't eval the factors,
  // so you pass i*(-1)^(1/2), it wouldnt't
  // give -1, because i is not evalled
  multiply = function multiply() {
    if (esc_flag) {
      stop("escape key stop");
    }
    if (isNumericAtom(stack[tos - 2]) && isNumericAtom(stack[tos - 1])) {
      return multiply_numbers();
    } else {
      save();
      yymultiply();
      return restore();
    }
  };
  yymultiply = function yymultiply() {
    var h, i, n, o, ref, ref1;
    h = 0;
    i = 0;
    n = 0;
    // pop operands
    p2 = pop();
    p1 = pop();
    h = tos;
    // is either operand zero?
    if (isZeroAtom(p1) || isZeroAtom(p2)) {
      if (evaluatingAsFloats) {
        push_double(0.0);
      } else {
        push(zero);
      }
      return;
    }
    // is either operand a sum?

    //console.log("yymultiply: expanding: " + expanding)
    if (expanding && isadd(p1)) {
      p1 = cdr(p1);
      if (evaluatingAsFloats) {
        push_double(0.0);
      } else {
        push(zero);
      }
      while (iscons(p1)) {
        push(car(p1));
        push(p2);
        multiply();
        add();
        p1 = cdr(p1);
      }
      return;
    }
    if (expanding && isadd(p2)) {
      p2 = cdr(p2);
      if (evaluatingAsFloats) {
        push_double(0.0);
      } else {
        push(zero);
      }
      while (iscons(p2)) {
        push(p1);
        push(car(p2));
        multiply();
        add();
        p2 = cdr(p2);
      }
      return;
    }
    if (!istensor(p1) && istensor(p2)) {
      push(p1);
      push(p2);
      scalar_times_tensor();
      return;
    }
    // tensor times scalar?
    if (istensor(p1) && !istensor(p2)) {
      push(p1);
      push(p2);
      tensor_times_scalar();
      return;
    }
    // adjust operands
    if (car(p1) === symbol(MULTIPLY)) {
      p1 = cdr(p1);
    } else {
      push(p1);
      list(1);
      p1 = pop();
    }
    if (car(p2) === symbol(MULTIPLY)) {
      p2 = cdr(p2);
    } else {
      push(p2);
      list(1);
      p2 = pop();
    }
    // handle numerical coefficients
    if (isNumericAtom(car(p1)) && isNumericAtom(car(p2))) {
      push(car(p1));
      push(car(p2));
      multiply_numbers();
      p1 = cdr(p1);
      p2 = cdr(p2);
    } else if (isNumericAtom(car(p1))) {
      push(car(p1));
      p1 = cdr(p1);
    } else if (isNumericAtom(car(p2))) {
      push(car(p2));
      p2 = cdr(p2);
    } else {
      if (evaluatingAsFloats) {
        push_double(1.0);
      } else {
        push(one);
      }
    }
    parse_p1();
    parse_p2();
    while (iscons(p1) && iscons(p2)) {
      //    if (car(p1)->gamma && car(p2)->gamma) {
      //      combine_gammas(h)
      //      p1 = cdr(p1)
      //      p2 = cdr(p2)
      //      parse_p1()
      //      parse_p2()
      //      continue
      //    }
      if (caar(p1) === symbol(OPERATOR) && caar(p2) === symbol(OPERATOR)) {
        push_symbol(OPERATOR);
        push(cdar(p1));
        push(cdar(p2));
        append();
        cons();
        p1 = cdr(p1);
        p2 = cdr(p2);
        parse_p1();
        parse_p2();
        continue;
      }
      switch (_cmp_expr(p3, p4)) {
        case -1:
          push(car(p1));
          p1 = cdr(p1);
          parse_p1();
          break;
        case 1:
          push(car(p2));
          p2 = cdr(p2);
          parse_p2();
          break;
        case 0:
          combine_factors(h);
          p1 = cdr(p1);
          p2 = cdr(p2);
          parse_p1();
          parse_p2();
          break;
        default:
          stop("internal error 2");
      }
    }
    // push remaining factors, if any
    while (iscons(p1)) {
      push(car(p1));
      p1 = cdr(p1);
    }
    while (iscons(p2)) {
      push(car(p2));
      p2 = cdr(p2);
    }
    // normalize radical factors

    // example: 2*2(-1/2) -> 2^(1/2)

    // must be done after merge because merge may produce radical

    // example: 2^(1/2-a)*2^a -> 2^(1/2)
    __normalize_radical_factors(h);
    // this hack should not be necessary, unless power returns a multiply

    //for (i = h; i < tos; i++) {
    //  if (car(stack[i]) == symbol(MULTIPLY)) {
    //    multiply_all(tos - h)
    //    return
    //  }
    //}
    if (expanding) {
      for (i = o = ref = h, ref1 = tos; ref <= ref1 ? o < ref1 : o > ref1; i = ref <= ref1 ? ++o : --o) {
        if (isadd(stack[i])) {
          multiply_all(tos - h);
          return;
        }
      }
    }
    // n is the number of result factors on the stack
    n = tos - h;
    if (n === 1) {
      return;
    }
    // discard integer 1
    if (isrational(stack[h]) && equaln(stack[h], 1)) {
      if (n === 2) {
        p7 = pop();
        pop();
        push(p7);
      } else {
        stack[h] = symbol(MULTIPLY);
        list(n);
      }
      return;
    }
    list(n);
    p7 = pop();
    push_symbol(MULTIPLY);
    push(p7);
    return cons();
  };

  // Decompose a factor into base and power.

  // input:  car(p1)    factor

  // output:  p3    factor's base

  //    p5    factor's power (possibly 1)
  parse_p1 = function parse_p1() {
    p3 = car(p1);
    p5 = evaluatingAsFloats ? one_as_double : one;
    if (car(p3) === symbol(POWER)) {
      p5 = caddr(p3);
      return p3 = cadr(p3);
    }
  };

  // Decompose a factor into base and power.

  // input:  car(p2)    factor

  // output:  p4    factor's base

  //    p6    factor's power (possibly 1)
  parse_p2 = function parse_p2() {
    p4 = car(p2);
    p6 = evaluatingAsFloats ? one_as_double : one;
    if (car(p4) === symbol(POWER)) {
      p6 = caddr(p4);
      return p4 = cadr(p4);
    }
  };

  // h an integer
  combine_factors = function combine_factors(h) {
    push(p4);
    push(p5);
    push(p6);
    add();
    power();
    p7 = pop();
    if (isNumericAtom(p7)) {
      push(stack[h]);
      push(p7);
      multiply_numbers();
      return stack[h] = pop();
    } else if (car(p7) === symbol(MULTIPLY)) {
      // power can return number * factor (i.e. -1 * i)
      if (isNumericAtom(cadr(p7)) && cdddr(p7) === symbol(NIL)) {
        push(stack[h]);
        push(cadr(p7));
        multiply_numbers();
        stack[h] = pop();
        return push(caddr(p7));
      } else {
        return push(p7);
      }
    } else {
      return push(p7);
    }
  };
  gp = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, -6, -7, -8, -3, -4, -5, 13, 14, 15, -16, 9, 10, 11, -12], [0, 0, 6, -1, -11, 10, -2, -15, 14, 12, -5, 4, -9, 16, -8, 7, -13], [0, 0, 7, 11, -1, -9, 15, -2, -13, 5, 12, -3, -10, 8, 16, -6, -14], [0, 0, 8, -10, 9, -1, -14, 13, -2, -4, 3, 12, -11, -7, 6, 16, -15], [0, 0, 3, 2, 15, -14, 1, 11, -10, 16, -8, 7, 13, 12, -5, 4, 9], [0, 0, 4, -15, 2, 13, -11, 1, 9, 8, 16, -6, 14, 5, 12, -3, 10], [0, 0, 5, 14, -13, 2, 10, -9, 1, -7, 6, 16, 15, -4, 3, 12, 11], [0, 0, 13, 12, -5, 4, 16, -8, 7, -1, -11, 10, -3, -2, -15, 14, -6], [0, 0, 14, 5, 12, -3, 8, 16, -6, 11, -1, -9, -4, 15, -2, -13, -7], [0, 0, 15, -4, 3, 12, -7, 6, 16, -10, 9, -1, -5, -14, 13, -2, -8], [0, 0, 16, -9, -10, -11, -13, -14, -15, -3, -4, -5, 1, -6, -7, -8, 2], [0, 0, 9, -16, 8, -7, -12, 5, -4, -2, -15, 14, 6, -1, -11, 10, 3], [0, 0, 10, -8, -16, 6, -5, -12, 3, 15, -2, -13, 7, 11, -1, -9, 4], [0, 0, 11, 7, -6, -16, 4, -3, -12, -14, 13, -2, 8, -10, 9, -1, 5], [0, 0, 12, 13, 14, 15, 9, 10, 11, -6, -7, -8, -2, -3, -4, -5, -1]];

  //if 0

  // h an int
  combine_gammas = function combine_gammas(h) {
    var n;
    n = gp[Math.floor(p1.gamma)][Math.floor(p2.gamma)];
    if (n < 0) {
      n = -n;
      push(stack[h]);
      negate();
      stack[h] = pop();
    }
    if (n > 1) {
      return push(_gamma[n]);
    }
  };

  // this is useful for example when you are just adding/removing
  // factors from an already factored quantity.
  // e.g. if you factored x^2 + 3x + 2 into (x+1)(x+2)
  // and you want to divide by (x+1) , i.e. you multiply by (x-1)^-1,
  // then there is no need to expand.
  multiply_noexpand = function multiply_noexpand() {
    var prev_expanding;
    prev_expanding = expanding;
    expanding = 0;
    multiply();
    return expanding = prev_expanding;
  };

  // multiply n factors on stack

  // n an integer
  multiply_all = function multiply_all(n) {
    var h, i, o, ref;
    i = 0;
    if (n === 1) {
      return;
    }
    if (n === 0) {
      push(evaluatingAsFloats ? one_as_double : one);
      return;
    }
    h = tos - n;
    push(stack[h]);
    for (i = o = 1, ref = n; 1 <= ref ? o < ref : o > ref; i = 1 <= ref ? ++o : --o) {
      push(stack[h + i]);
      multiply();
    }
    stack[h] = pop();
    return moveTos(h + 1);
  };

  // n an integer
  multiply_all_noexpand = function multiply_all_noexpand(n) {
    var prev_expanding;
    prev_expanding = expanding;
    expanding = 0;
    multiply_all(n);
    return expanding = prev_expanding;
  };

  //-----------------------------------------------------------------------------

  //  Symbolic division, or numeric division if doubles are found.

  //  Input:    Dividend and divisor on stack

  //  Output:    Quotient on stack

  //-----------------------------------------------------------------------------
  divide = function divide() {
    if (isNumericAtom(stack[tos - 2]) && isNumericAtom(stack[tos - 1])) {
      return divide_numbers();
    } else {
      inverse();
      return multiply();
    }
  };

  // this is different from inverse of a matrix (inv)!
  inverse = function inverse() {
    if (isNumericAtom(stack[tos - 1])) {
      return invert_number();
    } else {
      push_integer(-1);
      return power();
    }
  };
  reciprocate = function reciprocate() {
    return inverse();
  };
  negate = function negate() {
    if (isNumericAtom(stack[tos - 1])) {
      return negate_number();
    } else {
      if (evaluatingAsFloats) {
        push_double(-1.0);
      } else {
        push_integer(-1);
      }
      return multiply();
    }
  };
  negate_expand = function negate_expand() {
    var prev_expanding;
    prev_expanding = expanding;
    expanding = 1;
    negate();
    return expanding = prev_expanding;
  };
  negate_noexpand = function negate_noexpand() {
    var prev_expanding;
    prev_expanding = expanding;
    expanding = 0;
    negate();
    return expanding = prev_expanding;
  };

  //-----------------------------------------------------------------------------

  //  Normalize radical factors

  //  Input:    stack[h]  Coefficient factor, possibly 1

  //      stack[h + 1]  Second factor

  //      stack[tos - 1]  Last factor

  //  Output:    Reduced coefficent and normalized radicals (maybe)

  //  Example:  2*2^(-1/2) -> 2^(1/2)

  //  (power number number) is guaranteed to have the following properties:

  //  1. Base is an integer

  //  2. Absolute value of exponent < 1

  //  These properties are assured by the power function.

  //-----------------------------------------------------------------------------

  //define A p1
  //define B p2

  //define BASE p3
  //define EXPO p4

  //define TMP p5

  // h is an int
  __normalize_radical_factors = function __normalize_radical_factors(h) {
    var i, i1, j1, o, ref, ref1, ref2, ref3, ref4, ref5;
    i = 0;
    // if coeff is 1 or floating then don't bother
    if (isplusone(stack[h]) || isminusone(stack[h]) || isdouble(stack[h])) {
      return;
    }
    // if no radicals then don't bother
    for (i = o = ref = h + 1, ref1 = tos; ref <= ref1 ? o < ref1 : o > ref1; i = ref <= ref1 ? ++o : --o) {
      if (__is_radical_number(stack[i])) {
        break;
      }
    }
    if (i === tos) {
      return;
    }
    // ok, try to simplify
    save();
    // numerator
    push(stack[h]);
    mp_numerator();
    if (DEBUG_MULTIPLY) {
      console.log("__normalize_radical_factors numerator: " + stack[tos - 1]);
    }
    p1 = pop();
    for (i = i1 = ref2 = h + 1, ref3 = tos; ref2 <= ref3 ? i1 < ref3 : i1 > ref3; i = ref2 <= ref3 ? ++i1 : --i1) {
      if (isplusone(p1) || isminusone(p1)) {
        // p1 is A
        break;
      }
      if (!__is_radical_number(stack[i])) {
        continue;
      }
      p3 = cadr(stack[i]);
      p4 = caddr(stack[i]);
      if (!isnegativenumber(p4)) {
        //p4 is EXPO
        continue;
      }
      // numerator divisible by p3 (base)?
      push(p1);
      push(p3);
      divide();
      p5 = pop();
      if (!isinteger(p5)) {
        //p5 is TMP
        continue;
      }
      // reduce numerator
      p1 = p5;
      push_symbol(POWER);
      push(p3);
      push(evaluatingAsFloats ? one_as_double : one);
      push(p4);
      add();
      list(3);
      stack[i] = pop();
    }
    // denominator
    push(stack[h]);
    mp_denominator();
    if (DEBUG_MULTIPLY) {
      console.log("__normalize_radical_factors denominator: " + stack[tos - 1]);
    }
    p2 = pop();
    for (i = j1 = ref4 = h + 1, ref5 = tos; ref4 <= ref5 ? j1 < ref5 : j1 > ref5; i = ref4 <= ref5 ? ++j1 : --j1) {
      if (isplusone(p2)) {
        // p2 is B
        break;
      }
      if (!__is_radical_number(stack[i])) {
        continue;
      }
      p3 = cadr(stack[i]);
      p4 = caddr(stack[i]);
      if (isnegativenumber(p4)) {
        //p4 is EXPO
        continue;
      }
      // denominator divisible by p3? #p3 is BASE
      push(p2);
      push(p3);
      divide();
      p5 = pop();
      if (!isinteger(p5)) {
        //p5 is TMP
        continue;
      }
      if (DEBUG_MULTIPLY) {
        console.log("__new radical p5: " + p5.toString());
      }
      if (DEBUG_MULTIPLY) {
        console.log("__new radical top stack: " + stack[tos - 1]);
      }
      // reduce denominator
      p2 = p5;
      push_symbol(POWER);
      push(p3);
      push(p4);
      if (DEBUG_MULTIPLY) {
        console.log("__new radical p3: " + p3.toString());
      }
      if (DEBUG_MULTIPLY) {
        console.log("__new radical p4: " + p4.toString());
      }
      push(one);
      subtract();
      if (dontCreateNewRadicalsInDenominatorWhenEvalingMultiplication) {
        if (isinteger(p3) && !isinteger(stack[tos - 1]) && isnegativenumber(stack[tos - 1])) {
          // bail out,
          // we want to avoid going ahead with the subtraction of
          // the exponents, because that would turn a perfectly good
          // integer exponent in the denominator into a fractional one
          // i.e. a radical.
          // Note that this only prevents new radicals ending up
          // in the denominator, it doesn't fix existing ones.
          pop();
          pop();
          pop();
          push(p1);
          push(p3);
          divide();
          p1 = pop();
          break;
        }
      }
      if (DEBUG_MULTIPLY) {
        console.log("__new radical exponent: " + stack[tos - 1]);
      }
      list(3);
      stack[i] = pop();
    }
    // reconstitute the coefficient
    push(p1);
    push(p2);
    divide();
    stack[h] = pop();
    return restore();
  };

  // don't include i
  // p is a U
  // TODO should this be in is.coffee ?
  __is_radical_number = function __is_radical_number(p) {
    // don't use i
    return car(p) === symbol(POWER) && isNumericAtom(cadr(p)) && isfraction(caddr(p)) && !isminusone(cadr(p));
  };

  //-----------------------------------------------------------------------------

  //  > a*hilbert(2)
  //  ((a,1/2*a),(1/2*a,1/3*a))

  //  Note that "a" is presumed to be a scalar. Is this correct?

  //  Yes, because "*" has no meaning if "a" is a tensor.
  //  To multiply tensors, "dot" or "outer" should be used.

  //  > dot(a,hilbert(2))
  //  dot(a,((1,1/2),(1/2,1/3)))

  //  In this case "a" could be a scalar or tensor so the result is not
  //  expanded.

  //-----------------------------------------------------------------------------

  // find the roots of a polynomial numerically
  NROOTS_YMAX = 101;
  NROOTS_DELTA = 1.0e-6;
  NROOTS_EPSILON = 1.0e-9;
  NROOTS_ABS = function NROOTS_ABS(z) {
    return Math.sqrt(z.r * z.r + z.i * z.i);
  };

  // random between -2 and 2
  theRandom = 0.0;
  NROOTS_RANDOM = function NROOTS_RANDOM() {
    //theRandom += 0.2
    //return theRandom
    return 4.0 * Math.random() - 2.0;
  };
  numericRootOfPolynomial = function () {
    var numericRootOfPolynomial = /*#__PURE__*/_createClass(function numericRootOfPolynomial() {
      "use strict";

      _classCallCheck(this, numericRootOfPolynomial);
    });
    ;
    numericRootOfPolynomial.prototype.r = 0.0;
    numericRootOfPolynomial.prototype.i = 0.0;
    return numericRootOfPolynomial;
  }.call(this);
  nroots_a = new numericRootOfPolynomial();
  nroots_b = new numericRootOfPolynomial();
  nroots_x = new numericRootOfPolynomial();
  nroots_y = new numericRootOfPolynomial();
  nroots_fa = new numericRootOfPolynomial();
  nroots_fb = new numericRootOfPolynomial();
  nroots_dx = new numericRootOfPolynomial();
  nroots_df = new numericRootOfPolynomial();
  nroots_c = [];
  for (initNRoots = o = 0, ref = NROOTS_YMAX; 0 <= ref ? o < ref : o > ref; initNRoots = 0 <= ref ? ++o : --o) {
    nroots_c[initNRoots] = new numericRootOfPolynomial();
  }
  Eval_nroots = function Eval_nroots() {
    var h, i, i1, j1, k, l1, n, ref1, ref2, ref3;
    h = 0;
    i = 0;
    k = 0;
    n = 0;
    push(cadr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    p2 = pop();
    if (p2 === symbol(NIL)) {
      guess();
    } else {
      push(p2);
    }
    p2 = pop();
    p1 = pop();
    if (!ispolyexpandedform(p1, p2)) {
      stop("nroots: polynomial?");
    }
    // mark the stack
    h = tos;
    // get the coefficients
    n = coeff(p2, p1);
    if (n > NROOTS_YMAX) {
      stop("nroots: degree?");
    }
    // convert the coefficients to real and imaginary doubles
    for (i = i1 = 0, ref1 = n; 0 <= ref1 ? i1 < ref1 : i1 > ref1; i = 0 <= ref1 ? ++i1 : --i1) {
      push(stack[h + i]);
      real();
      _yyfloat();
      Eval();
      p1 = pop();
      push(stack[h + i]);
      imag();
      _yyfloat();
      Eval();
      p2 = pop();
      if (!isdouble(p1) || !isdouble(p2)) {
        stop("nroots: coefficients?");
      }
      nroots_c[i].r = p1.d;
      nroots_c[i].i = p2.d;
    }
    // pop the coefficients
    moveTos(h);
    // n is the number of coefficients, n = deg(p) + 1
    monic(n);
    for (k = j1 = ref2 = n; j1 > 1; k = j1 += -1) {
      findroot(k);
      if (Math.abs(nroots_a.r) < NROOTS_DELTA) {
        nroots_a.r = 0.0;
      }
      if (Math.abs(nroots_a.i) < NROOTS_DELTA) {
        nroots_a.i = 0.0;
      }
      push_double(nroots_a.r);
      push_double(nroots_a.i);
      push(imaginaryunit);
      multiply();
      add();
      NROOTS_divpoly(k);
    }
    // now make n equal to the number of roots
    n = tos - h;
    if (n > 1) {
      sort_stack(n);
      p1 = alloc_tensor(n);
      p1.tensor.ndim = 1;
      p1.tensor.dim[0] = n;
      for (i = l1 = 0, ref3 = n; 0 <= ref3 ? l1 < ref3 : l1 > ref3; i = 0 <= ref3 ? ++l1 : --l1) {
        p1.tensor.elem[i] = stack[h + i];
      }
      moveTos(h);
      return push(p1);
    }
  };

  // divide the polynomial by its leading coefficient
  monic = function monic(n) {
    var i1, k, ref1, t;
    k = 0;
    t = 0.0;
    nroots_y.r = nroots_c[n - 1].r;
    nroots_y.i = nroots_c[n - 1].i;
    t = nroots_y.r * nroots_y.r + nroots_y.i * nroots_y.i;
    for (k = i1 = 0, ref1 = n - 1; 0 <= ref1 ? i1 < ref1 : i1 > ref1; k = 0 <= ref1 ? ++i1 : --i1) {
      nroots_c[k].r = (nroots_c[k].r * nroots_y.r + nroots_c[k].i * nroots_y.i) / t;
      nroots_c[k].i = (nroots_c[k].i * nroots_y.r - nroots_c[k].r * nroots_y.i) / t;
    }
    nroots_c[n - 1].r = 1.0;
    return nroots_c[n - 1].i = 0.0;
  };

  // uses the secant method
  findroot = function findroot(n) {
    var i1, j, j1, k, nrabs, t;
    j = 0;
    k = 0;
    t = 0.0;
    if (NROOTS_ABS(nroots_c[0]) < NROOTS_DELTA) {
      nroots_a.r = 0.0;
      nroots_a.i = 0.0;
      return;
    }
    for (j = i1 = 0; i1 < 100; j = ++i1) {
      nroots_a.r = NROOTS_RANDOM();
      nroots_a.i = NROOTS_RANDOM();
      compute_fa(n);
      nroots_b.r = nroots_a.r;
      nroots_b.i = nroots_a.i;
      nroots_fb.r = nroots_fa.r;
      nroots_fb.i = nroots_fa.i;
      nroots_a.r = NROOTS_RANDOM();
      nroots_a.i = NROOTS_RANDOM();
      for (k = j1 = 0; j1 < 1000; k = ++j1) {
        compute_fa(n);
        nrabs = NROOTS_ABS(nroots_fa);
        if (DEBUG) {
          console.log("nrabs: " + nrabs);
        }
        if (nrabs < NROOTS_EPSILON) {
          return;
        }
        if (NROOTS_ABS(nroots_fa) < NROOTS_ABS(nroots_fb)) {
          nroots_x.r = nroots_a.r;
          nroots_x.i = nroots_a.i;
          nroots_a.r = nroots_b.r;
          nroots_a.i = nroots_b.i;
          nroots_b.r = nroots_x.r;
          nroots_b.i = nroots_x.i;
          nroots_x.r = nroots_fa.r;
          nroots_x.i = nroots_fa.i;
          nroots_fa.r = nroots_fb.r;
          nroots_fa.i = nroots_fb.i;
          nroots_fb.r = nroots_x.r;
          nroots_fb.i = nroots_x.i;
        }
        // dx = nroots_b - nroots_a
        nroots_dx.r = nroots_b.r - nroots_a.r;
        nroots_dx.i = nroots_b.i - nroots_a.i;
        // df = fb - fa
        nroots_df.r = nroots_fb.r - nroots_fa.r;
        nroots_df.i = nroots_fb.i - nroots_fa.i;
        // y = dx / df
        t = nroots_df.r * nroots_df.r + nroots_df.i * nroots_df.i;
        if (t === 0.0) {
          break;
        }
        nroots_y.r = (nroots_dx.r * nroots_df.r + nroots_dx.i * nroots_df.i) / t;
        nroots_y.i = (nroots_dx.i * nroots_df.r - nroots_dx.r * nroots_df.i) / t;
        // a = b - y * fb
        nroots_a.r = nroots_b.r - (nroots_y.r * nroots_fb.r - nroots_y.i * nroots_fb.i);
        nroots_a.i = nroots_b.i - (nroots_y.r * nroots_fb.i + nroots_y.i * nroots_fb.r);
      }
    }
    return stop("nroots: convergence error");
  };
  compute_fa = function compute_fa(n) {
    var i1, k, ref1, results, t;
    k = 0;
    t = 0.0;
    // x = a
    nroots_x.r = nroots_a.r;
    nroots_x.i = nroots_a.i;
    // fa = c0 + c1 * x
    nroots_fa.r = nroots_c[0].r + nroots_c[1].r * nroots_x.r - nroots_c[1].i * nroots_x.i;
    nroots_fa.i = nroots_c[0].i + nroots_c[1].r * nroots_x.i + nroots_c[1].i * nroots_x.r;
    results = [];
    for (k = i1 = 2, ref1 = n; 2 <= ref1 ? i1 < ref1 : i1 > ref1; k = 2 <= ref1 ? ++i1 : --i1) {
      // x = a * x
      t = nroots_a.r * nroots_x.r - nroots_a.i * nroots_x.i;
      nroots_x.i = nroots_a.r * nroots_x.i + nroots_a.i * nroots_x.r;
      nroots_x.r = t;
      // fa += c[k] * x
      nroots_fa.r += nroots_c[k].r * nroots_x.r - nroots_c[k].i * nroots_x.i;
      results.push(nroots_fa.i += nroots_c[k].r * nroots_x.i + nroots_c[k].i * nroots_x.r);
    }
    return results;
  };

  // divide the polynomial by x - a
  NROOTS_divpoly = function NROOTS_divpoly(n) {
    var i1, j1, k, ref1, ref2, results;
    k = 0;
    for (k = i1 = ref1 = n - 1; ref1 <= 0 ? i1 < 0 : i1 > 0; k = ref1 <= 0 ? ++i1 : --i1) {
      nroots_c[k - 1].r += nroots_c[k].r * nroots_a.r - nroots_c[k].i * nroots_a.i;
      nroots_c[k - 1].i += nroots_c[k].i * nroots_a.r + nroots_c[k].r * nroots_a.i;
    }
    if (NROOTS_ABS(nroots_c[0]) > NROOTS_DELTA) {
      stop("nroots: residual error");
    }
    results = [];
    for (k = j1 = 0, ref2 = n - 1; 0 <= ref2 ? j1 < ref2 : j1 > ref2; k = 0 <= ref2 ? ++j1 : --j1) {
      nroots_c[k].r = nroots_c[k + 1].r;
      results.push(nroots_c[k].i = nroots_c[k + 1].i);
    }
    return results;
  };
  Eval_numerator = function Eval_numerator() {
    push(cadr(p1));
    Eval();
    return _numerator();
  };
  _numerator = function numerator() {
    var h, theArgument;
    h = 0;
    theArgument = pop();
    if (car(theArgument) === symbol(ADD)) {
      push(theArgument);
      //console.trace "rationalising "
      rationalize();
      theArgument = pop();
    }
    //console.log "rationalised: " + theArgument
    if (car(theArgument) === symbol(MULTIPLY) && !isplusone(car(cdr(theArgument)))) {
      h = tos;
      theArgument = cdr(theArgument);
      //console.log "theArgument inside multiply: " + theArgument
      //console.log "first term: " + car(theArgument)
      while (iscons(theArgument)) {
        push(car(theArgument));
        _numerator();
        theArgument = cdr(theArgument);
      }
      return multiply_all(tos - h);
    } else if (isrational(theArgument)) {
      push(theArgument);
      return mp_numerator();
    } else if (car(theArgument) === symbol(POWER) && isnegativeterm(caddr(theArgument))) {
      return push(one);
    } else {
      return push(theArgument);
    }
  };

  // Outer product of tensors
  Eval_outer = function Eval_outer() {
    var results;
    p1 = cdr(p1);
    push(car(p1));
    Eval();
    p1 = cdr(p1);
    results = [];
    while (iscons(p1)) {
      push(car(p1));
      Eval();
      outer();
      results.push(p1 = cdr(p1));
    }
    return results;
  };
  outer = function outer() {
    save();
    p2 = pop();
    p1 = pop();
    if (istensor(p1) && istensor(p2)) {
      yyouter();
    } else {
      push(p1);
      push(p2);
      if (istensor(p1)) {
        tensor_times_scalar();
      } else if (istensor(p2)) {
        scalar_times_tensor();
      } else {
        multiply();
      }
    }
    return restore();
  };
  yyouter = function yyouter() {
    var i, i1, j, j1, k, l1, m1, ndim, nelem, ref1, ref2, ref3, ref4;
    i = 0;
    j = 0;
    k = 0;
    ndim = 0;
    nelem = 0;
    ndim = p1.tensor.ndim + p2.tensor.ndim;
    if (ndim > MAXDIM) {
      stop("outer: rank of result exceeds maximum");
    }
    nelem = p1.tensor.nelem * p2.tensor.nelem;
    p3 = alloc_tensor(nelem);
    p3.tensor.ndim = ndim;
    for (i = i1 = 0, ref1 = p1.tensor.ndim; 0 <= ref1 ? i1 < ref1 : i1 > ref1; i = 0 <= ref1 ? ++i1 : --i1) {
      p3.tensor.dim[i] = p1.tensor.dim[i];
    }
    j = i;
    for (i = j1 = 0, ref2 = p2.tensor.ndim; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
      p3.tensor.dim[j + i] = p2.tensor.dim[i];
    }
    k = 0;
    for (i = l1 = 0, ref3 = p1.tensor.nelem; 0 <= ref3 ? l1 < ref3 : l1 > ref3; i = 0 <= ref3 ? ++l1 : --l1) {
      for (j = m1 = 0, ref4 = p2.tensor.nelem; 0 <= ref4 ? m1 < ref4 : m1 > ref4; j = 0 <= ref4 ? ++m1 : --m1) {
        push(p1.tensor.elem[i]);
        push(p2.tensor.elem[j]);
        multiply();
        p3.tensor.elem[k++] = pop();
      }
    }
    return push(p3);
  };
  partition = function partition() {
    save();
    p2 = pop();
    p1 = pop();
    push_integer(1);
    p3 = pop();
    p4 = p3;
    p1 = cdr(p1);
    while (iscons(p1)) {
      if (_Find(car(p1), p2)) {
        push(p4);
        push(car(p1));
        multiply();
        p4 = pop();
      } else {
        push(p3);
        push(car(p1));
        multiply();
        p3 = pop();
      }
      p1 = cdr(p1);
    }
    push(p3);
    push(p4);
    return restore();
  };

  /*
    Add a pattern i.e. a substitution rule.
    Substitution rule needs a template as first argument
    and what to transform it to as second argument.
    Optional third argument is a boolean test which
    adds conditions to when the rule is applied.
  */
  // same as Eval_pattern but only leaves
  // NIL on stack at return, hence gives no
  // printout
  Eval_silentpattern = function Eval_silentpattern() {
    Eval_pattern();
    pop();
    return push_symbol(NIL);
  };
  Eval_pattern = function Eval_pattern() {
    var firstArgument, patternPosition, secondArgument, stringKey, thirdArgument;
    if (!iscons(cdr(p1))) {
      stop("pattern needs at least a template and a transformed version");
    }
    firstArgument = car(cdr(p1));
    secondArgument = car(cdr(cdr(p1)));
    if (secondArgument === symbol(NIL)) {
      stop("pattern needs at least a template and a transformed version");
    }
    if (!iscons(cdr(cdr(p1)))) {
      thirdArgument = symbol(NIL);
    } else {
      thirdArgument = car(cdr(cdr(cdr(p1))));
    }
    if (equal(firstArgument, secondArgument)) {
      stop("recursive pattern");
    }
    // console.log "Eval_pattern of " + cdr(p1)
    // this is likely to create garbage collection
    // problems in the C version as it's an
    // untracked reference
    stringKey = "template: " + _print_list(firstArgument);
    stringKey += " tests: " + _print_list(thirdArgument);
    if (DEBUG) {
      console.log("pattern stringkey: " + stringKey);
    }
    patternPosition = userSimplificationsInStringForm.indexOf(stringKey);
    // if pattern is not there yet, add it, otherwise replace it
    if (patternPosition === -1) {
      //console.log "adding pattern because it doesn't exist: " + cdr(p1)
      userSimplificationsInStringForm.push(stringKey);
      userSimplificationsInListForm.push(cdr(p1));
    } else {
      if (DEBUG) {
        console.log("pattern already exists, replacing. " + cdr(p1));
      }
      userSimplificationsInStringForm[patternPosition] = stringKey;
      userSimplificationsInListForm[patternPosition] = cdr(p1);
    }
    // return the pattern node itself so we can
    // give some printout feedback
    push_symbol(PATTERN);
    push(cdr(p1));
    return list(2);
  };
  do_clearPatterns = function do_clearPatterns() {
    userSimplificationsInListForm = [];
    return userSimplificationsInStringForm = [];
  };
  Eval_clearpatterns = function Eval_clearpatterns() {
    // this is likely to create garbage collection
    // problems in the C version as it's an
    // untracked reference
    do_clearPatterns();

    // return nothing
    return push_symbol(NIL);
  };
  Eval_patternsinfo = function Eval_patternsinfo() {
    var patternsinfoToBePrinted;
    patternsinfoToBePrinted = patternsinfo();
    if (patternsinfoToBePrinted !== "") {
      return push(new_string(patternsinfoToBePrinted));
    } else {
      return push_symbol(NIL);
    }
  };
  patternsinfo = function patternsinfo() {
    var i, i1, len, patternsinfoToBePrinted;
    patternsinfoToBePrinted = "";
    for (i1 = 0, len = userSimplificationsInListForm.length; i1 < len; i1++) {
      i = userSimplificationsInListForm[i1];
      patternsinfoToBePrinted += userSimplificationsInListForm + "\n";
    }
    return patternsinfoToBePrinted;
  };
  Eval_polar = function Eval_polar() {
    push(cadr(p1));
    Eval();
    return polar();
  };
  polar = function polar() {
    // there are points where we turn polar
    // representations into rect, we set a "stack flag"
    // here to avoid that, so we don't undo the
    // work that we are trying to do.
    evaluatingPolar++;
    save();
    p1 = pop();
    push(p1);
    abs();
    push(imaginaryunit);
    push(p1);
    arg();
    multiply();
    exponential();
    multiply();
    evaluatingPolar--;
    return restore();
  };

  // Factor using the Pollard rho method
  n_factor_number = 0;
  factor_number = function factor_number() {
    var h;
    h = 0;
    save();
    p1 = pop();
    // 0 or 1?
    if (equaln(p1, 0) || equaln(p1, 1) || equaln(p1, -1)) {
      push(p1);
      restore();
      return;
    }
    n_factor_number = p1.q.a;
    h = tos;
    factor_a();
    if (tos - h > 1) {
      list(tos - h);
      push_symbol(MULTIPLY);
      swap();
      cons();
    }
    return restore();
  };

  // factor using table look-up, then switch to rho method if necessary

  // From TAOCP Vol. 2 by Knuth, p. 380 (Algorithm A)
  factor_a = function factor_a() {
    var i1, k;
    k = 0;
    if (n_factor_number.isNegative()) {
      n_factor_number = setSignTo(n_factor_number, 1);
      push_integer(-1);
    }
    for (k = i1 = 0; i1 < 10000; k = ++i1) {
      try_kth_prime(k);
      // if n_factor_number is 1 then we're done
      if (n_factor_number.compare(1) === 0) {
        return;
      }
    }
    return factor_b();
  };
  try_kth_prime = function try_kth_prime(k) {
    var count, d, q, r;
    count = 0;
    d = mint(primetab[k]);
    count = 0;
    while (1) {
      // if n_factor_number is 1 then we're done
      if (n_factor_number.compare(1) === 0) {
        if (count) {
          push_factor(d, count);
        }
        return;
      }
      // continue looping while remainder is zero
      var _mdivrem = mdivrem(n_factor_number, d);
      var _mdivrem2 = _slicedToArray(_mdivrem, 2);
      q = _mdivrem2[0];
      r = _mdivrem2[1];
      if (r.isZero()) {
        count++;
        n_factor_number = q;
      } else {
        break;
      }
    }
    if (count) {
      push_factor(d, count);
    }
    // q = n_factor_number/d, hence if q < d then
    // n_factor_number < d^2 so n_factor_number is prime
    if (mcmp(q, d) === -1) {
      push_factor(n_factor_number, 1);
      return n_factor_number = mint(1);
    }
  };

  // From TAOCP Vol. 2 by Knuth, p. 385 (Algorithm B)
  factor_b = function factor_b() {
    var bigint_one, g, k, l, t, x, xprime;
    k = 0;
    l = 0;
    bigint_one = mint(1);
    x = mint(5);
    xprime = mint(2);
    k = 1;
    l = 1;
    while (1) {
      if (mprime(n_factor_number)) {
        push_factor(n_factor_number, 1);
        return 0;
      }
      while (1) {
        if (esc_flag) {
          stop("esc");
        }
        // g = gcd(x' - x, n_factor_number)
        t = msub(xprime, x);
        t = setSignTo(t, 1);
        g = mgcd(t, n_factor_number);
        if (MEQUAL(g, 1)) {
          if (--k === 0) {
            xprime = x;
            l *= 2;
            k = l;
          }
          // x = (x ^ 2 + 1) mod n_factor_number
          t = mmul(x, x);
          x = madd(t, bigint_one);
          t = mmod(x, n_factor_number);
          x = t;
          continue;
        }
        push_factor(g, 1);
        if (mcmp(g, n_factor_number) === 0) {
          return -1;
        }
        // n_factor_number = n_factor_number / g
        t = mdiv(n_factor_number, g);
        n_factor_number = t;
        // x = x mod n_factor_number
        t = mmod(x, n_factor_number);
        x = t;
        // xprime = xprime mod n_factor_number
        t = mmod(xprime, n_factor_number);
        xprime = t;
        break;
      }
    }
  };
  push_factor = function push_factor(d, count) {
    p1 = new U();
    p1.k = NUM;
    p1.q.a = d;
    p1.q.b = mint(1);
    push(p1);
    if (count > 1) {
      push_symbol(POWER);
      swap();
      p1 = new U();
      p1.k = NUM;
      p1.q.a = mint(count);
      p1.q.b = mint(1);
      push(p1);
      return list(3);
    }
  };
  DEBUG_POWER = false;
  Eval_power = function Eval_power() {
    if (DEBUG_POWER) {
      debugger;
    }
    push(cadr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    return power();
  };
  power = function power() {
    save();
    yypower();
    return restore();
  };
  yypower = function yypower() {
    var b_isEven_and_c_isItsInverse, hopefullySimplified, inputBase, inputExp, isThisOne, is_a_moreThanZero, n;
    if (DEBUG_POWER) {
      debugger;
    }
    n = 0;
    p2 = pop(); // exponent
    p1 = pop(); // base
    inputExp = p2;
    inputBase = p1;
    //debugger
    if (DEBUG_POWER) {
      console.log("POWER: " + p1 + " ^ " + p2);
    }
    // first, some very basic simplifications right away

    //  1 ^ a    ->  1
    //  a ^ 0    ->  1
    if (equal(p1, one) || isZeroAtomOrTensor(p2)) {
      if (evaluatingAsFloats) {
        push_double(1.0);
      } else {
        push(one);
      }
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    //  a ^ 1    ->  a
    if (equal(p2, one)) {
      push(p1);
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    //   -1 ^ -1    ->  -1
    if (isminusone(p1) && isminusone(p2)) {
      if (evaluatingAsFloats) {
        push_double(1.0);
      } else {
        push(one);
      }
      negate();
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    //   -1 ^ 1/2  ->  i
    if (isminusone(p1) && isoneovertwo(p2)) {
      push(imaginaryunit);
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    //   -1 ^ -1/2  ->  -i
    if (isminusone(p1) && isminusoneovertwo(p2)) {
      push(imaginaryunit);
      negate();
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    //   -1 ^ rational
    if (isminusone(p1) && !isdouble(p1) && isrational(p2) && !isinteger(p2) && ispositivenumber(p2) && !evaluatingAsFloats) {
      if (DEBUG_POWER) {
        console.log("   power: -1 ^ rational");
      }
      if (DEBUG_POWER) {
        console.log(" trick: p2.q.a , p2.q.b " + p2.q.a + " , " + p2.q.b);
      }
      if (p2.q.a < p2.q.b) {
        push_symbol(POWER);
        push(p1);
        push(p2);
        list(3);
      } else {
        push_symbol(MULTIPLY);
        push(p1);
        push_symbol(POWER);
        push(p1);
        push_rational(p2.q.a.mod(p2.q.b), p2.q.b);
        list(3);
        list(3);
        if (DEBUG_POWER) {
          console.log(" trick applied : " + stack[tos - 1]);
        }
      }
      // evaluates clock form into
      // rectangular form. This seems to give
      // slightly better form to some test results.
      _rect();
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    // both base and exponent are rational numbers?
    if (isrational(p1) && isrational(p2)) {
      if (DEBUG_POWER) {
        console.log("   power: isrational(p1) && isrational(p2)");
      }
      push(p1);
      push(p2);
      qpow();
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    // both base and exponent are either rational or double?
    if (isNumericAtom(p1) && isNumericAtom(p2)) {
      if (DEBUG_POWER) {
        console.log("   power: both base and exponent are either rational or double ");
      }
      if (DEBUG_POWER) {
        console.log("POWER - isNumericAtom(p1) && isNumericAtom(p2)");
      }
      push(p1);
      push(p2);
      dpow();
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    if (istensor(p1)) {
      if (DEBUG_POWER) {
        console.log("   power: istensor(p1) ");
      }
      power_tensor();
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    // if we only assume variables to be real, then |a|^2 = a^2
    // (if x is complex this doesn't hold e.g. i, which makes 1 and -1
    if (car(p1) === symbol(ABS) && iseveninteger(p2) && !isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES)))) {
      if (DEBUG_POWER) {
        console.log("   power: even power of absolute of real value ");
      }
      push(cadr(p1));
      push(p2);
      power();
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    // e^log(...)
    if (p1 === symbol(E) && car(p2) === symbol(LOG)) {
      push(cadr(p2));
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    // e^some_float
    if (p1 === symbol(E) && isdouble(p2)) {
      if (DEBUG_POWER) {
        console.log("   power: p1 == symbol(E) && isdouble(p2) ");
      }
      push_double(Math.exp(p2.d));
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    // complex number in exponential form, get it to rectangular
    // but only if we are not in the process of calculating a polar form,
    // otherwise we'd just undo the work we want to do
    if (p1 === symbol(E) && _Find(p2, imaginaryunit) !== 0 && _Find(p2, symbol(PI)) !== 0 && !evaluatingPolar) {
      push_symbol(POWER);
      push(p1);
      push(p2);
      list(3);
      if (DEBUG_POWER) {
        console.log("   power: turning complex exponential to rect: " + stack[tos - 1]);
      }
      _rect();
      hopefullySimplified = pop();
      if (_Find(hopefullySimplified, symbol(PI)) === 0) {
        if (DEBUG_POWER) {
          console.log("   power: turned complex exponential to rect: " + hopefullySimplified);
        }
        push(hopefullySimplified);
        return;
      }
    }
    //  (a * b) ^ c  ->  (a ^ c) * (b ^ c)
    // note that we can't in general do this, for example
    // sqrt(x*y) != x^(1/2) y^(1/2) (counterexample" x = -1 and y = -1)
    // BUT we can carve-out here some cases where this
    // transformation is correct
    if (car(p1) === symbol(MULTIPLY) && isinteger(p2)) {
      if (DEBUG_POWER) {
        console.log("   power: (a * b) ^ c  ->  (a ^ c) * (b ^ c) ");
      }
      p1 = cdr(p1);
      push(car(p1));
      push(p2);
      power();
      p1 = cdr(p1);
      while (iscons(p1)) {
        push(car(p1));
        push(p2);
        power();
        multiply();
        p1 = cdr(p1);
      }
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    // (a ^ b) ^ c  ->  a ^ (b * c)
    // note that we can't in general do this, for example
    // sqrt(x^y) !=  x^(1/2 y) (counterexample x = -1)
    // BUT we can carve-out here some cases where this
    // transformation is correct

    // simple numeric check to see if a is a number > 0
    is_a_moreThanZero = false;
    if (isNumericAtom(cadr(p1))) {
      is_a_moreThanZero = sign(compare_numbers(cadr(p1), zero));
    }
    if (car(p1) === symbol(POWER) && (isinteger(p2) || is_a_moreThanZero)) {
      // when a is >= 0
      push(cadr(p1));
      push(caddr(p1));
      push(p2);
      multiply();
      power();
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    b_isEven_and_c_isItsInverse = false;
    if (iseveninteger(caddr(p1))) {
      push(caddr(p1));
      push(p2);
      multiply();
      isThisOne = pop();
      if (isone(isThisOne)) {
        b_isEven_and_c_isItsInverse = true;
      }
    }
    if (car(p1) === symbol(POWER) && b_isEven_and_c_isItsInverse) {
      if (DEBUG_POWER) {
        console.log("   power: car(p1) == symbol(POWER) && b_isEven_and_c_isItsInverse ");
      }
      push(cadr(p1));
      abs();
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    //  when expanding,
    //  (a + b) ^ n  ->  (a + b) * (a + b) ...
    if (expanding && isadd(p1) && isNumericAtom(p2)) {
      push(p2);
      n = pop_integer();
      if (n > 1 && !isNaN(n)) {
        if (DEBUG_POWER) {
          console.log("   power: expanding && isadd(p1) && isNumericAtom(p2) ");
        }
        power_sum(n);
        if (DEBUG_POWER) {
          console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
        }
        return;
      }
    }
    //  sin(x) ^ 2n -> (1 - cos(x) ^ 2) ^ n
    if (trigmode === 1 && car(p1) === symbol(SIN) && iseveninteger(p2)) {
      if (DEBUG_POWER) {
        console.log("   power: trigmode == 1 && car(p1) == symbol(SIN) && iseveninteger(p2) ");
      }
      push_integer(1);
      push(cadr(p1));
      cosine();
      push_integer(2);
      power();
      subtract();
      push(p2);
      push_rational(1, 2);
      multiply();
      power();
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    //  cos(x) ^ 2n -> (1 - sin(x) ^ 2) ^ n
    if (trigmode === 2 && car(p1) === symbol(COS) && iseveninteger(p2)) {
      if (DEBUG_POWER) {
        console.log("   power: trigmode == 2 && car(p1) == symbol(COS) && iseveninteger(p2) ");
      }
      push_integer(1);
      push(cadr(p1));
      sine();
      push_integer(2);
      power();
      subtract();
      push(p2);
      push_rational(1, 2);
      multiply();
      power();
      if (DEBUG_POWER) {
        console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
      }
      return;
    }
    // complex number? (just number, not expression)
    if (iscomplexnumber(p1)) {
      if (DEBUG_POWER) {
        console.log(" power - handling the case (a + ib) ^ n");
      }
      // integer power?

      // n will be negative here, positive n already handled
      if (isinteger(p2)) {
        //               /        \  n
        //         -n   |  a - ib  |
        // (a + ib)   = | -------- |
        //              |   2   2  |
        //               \ a + b  /
        push(p1);
        conjugate();
        p3 = pop();
        push(p3);
        // gets the denominator
        push(p3);
        push(p1);
        multiply();
        divide();
        if (!isone(p2)) {
          push(p2);
          negate();
          power();
        }
        if (DEBUG_POWER) {
          console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
        }
        return;
      }
      // noninteger or floating power?
      if (isNumericAtom(p2)) {
        push(p1);
        abs();
        push(p2);
        power();
        push_integer(-1);
        push(p1);
        arg();
        push(p2);
        multiply();
        if (evaluatingAsFloats || iscomplexnumberdouble(p1) && isdouble(p2)) {
          // remember that the "double" type is
          // toxic, i.e. it propagates, so we do
          // need to evaluate PI to its actual double
          // value
          push_double(Math.PI);
        } else {
          //console.log("power pushing PI when p1 is: " + p1 + " and p2 is:" + p2)
          push(symbol(PI));
        }
        divide();
        power();
        multiply();
        // if we calculate the power making use of arctan:
        //  * it prevents nested radicals from being simplified
        //  * results become really hard to manipulate afterwards
        //  * we can't go back to other forms.
        // so leave the power as it is.
        if (avoidCalculatingPowersIntoArctans) {
          if (_Find(stack[tos - 1], symbol(ARCTAN))) {
            pop();
            push_symbol(POWER);
            push(p1);
            push(p2);
            list(3);
          }
        }
        if (DEBUG_POWER) {
          console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
        }
        return;
      }
    }

    //push(p1)
    //abs()
    //push(p2)
    //power()
    //push(symbol(E))
    //push(p1)
    //arg()
    //push(p2)
    //multiply()
    //push(imaginaryunit)
    //multiply()
    //power()
    //multiply()

    if (simplify_polar()) {
      if (DEBUG_POWER) {
        console.log("   power: using simplify_polar");
      }
      return;
    }
    if (DEBUG_POWER) {
      console.log("   power: nothing can be done ");
    }
    push_symbol(POWER);
    push(p1);
    push(p2);
    list(3);
    if (DEBUG_POWER) {
      return console.log("   power of " + inputBase + " ^ " + inputExp + ": " + stack[tos - 1]);
    }
  };

  //-----------------------------------------------------------------------------

  //  Compute the power of a sum

  //  Input:    p1  sum

  //      n  exponent

  //  Output:    Result on stack

  //  Note:

  //  Uses the multinomial series (see Math World)

  //                          n              n!          n1   n2       nk
  //  (a1 + a2 + ... + ak)  = sum (--------------- a1   a2   ... ak  )
  //                               n1! n2! ... nk!

  //  The sum is over all n1 ... nk such that n1 + n2 + ... + nk = n.

  //-----------------------------------------------------------------------------

  // first index is the term number 0..k-1, second index is the exponent 0..n

  //define A(i, j) frame[(i) * (n + 1) + (j)]
  power_sum = function power_sum(n) {
    var a, i, i1, j, j1, k, l1, ref1, ref2, ref3;
    a = [];
    i = 0;
    j = 0;
    k = 0;
    // number of terms in the sum
    k = length(p1) - 1;
    // local frame
    push_frame(k * (n + 1));
    // array of powers
    p1 = cdr(p1);
    for (i = i1 = 0, ref1 = k; 0 <= ref1 ? i1 < ref1 : i1 > ref1; i = 0 <= ref1 ? ++i1 : --i1) {
      for (j = j1 = 0, ref2 = n; 0 <= ref2 ? j1 <= ref2 : j1 >= ref2; j = 0 <= ref2 ? ++j1 : --j1) {
        push(car(p1));
        push_integer(j);
        power();
        stack[frame + i * (n + 1) + j] = pop();
      }
      p1 = cdr(p1);
    }
    push_integer(n);
    factorial();
    p1 = pop();
    for (i = l1 = 0, ref3 = k; 0 <= ref3 ? l1 < ref3 : l1 > ref3; i = 0 <= ref3 ? ++l1 : --l1) {
      a[i] = 0;
    }
    push(zero);
    _multinomial_sum(k, n, a, 0, n);
    return pop_frame(k * (n + 1));
  };

  //-----------------------------------------------------------------------------

  //  Compute multinomial sum

  //  Input:    k  number of factors

  //      n  overall exponent

  //      a  partition array

  //      i  partition array index

  //      m  partition remainder

  //      p1  n!

  //      A  factor array

  //  Output:    Result on stack

  //  Note:

  //  Uses recursive descent to fill the partition array.

  //-----------------------------------------------------------------------------

  //int k, int n, int *a, int i, int m
  _multinomial_sum = function multinomial_sum(k, n, a, i, m) {
    var i1, j, j1, l1, ref1, ref2, ref3;
    j = 0;
    if (i < k - 1) {
      for (j = i1 = 0, ref1 = m; 0 <= ref1 ? i1 <= ref1 : i1 >= ref1; j = 0 <= ref1 ? ++i1 : --i1) {
        a[i] = j;
        _multinomial_sum(k, n, a, i + 1, m - j);
      }
      return;
    }
    a[i] = m;
    // coefficient
    push(p1);
    for (j = j1 = 0, ref2 = k; 0 <= ref2 ? j1 < ref2 : j1 > ref2; j = 0 <= ref2 ? ++j1 : --j1) {
      push_integer(a[j]);
      factorial();
      divide();
    }
    // factors
    for (j = l1 = 0, ref3 = k; 0 <= ref3 ? l1 < ref3 : l1 > ref3; j = 0 <= ref3 ? ++l1 : --l1) {
      push(stack[frame + j * (n + 1) + a[j]]);
      multiply();
    }
    return add();
  };

  // exp(n/2 i pi) ?

  // p2 is the exponent expression

  // clobbers p3
  simplify_polar = function simplify_polar() {
    var doNothing, n;
    n = 0;
    n = isquarterturn(p2);
    switch (n) {
      case 0:
        doNothing = 1;
        break;
      case 1:
        push_integer(1);
        return 1;
      case 2:
        push_integer(-1);
        return 1;
      case 3:
        push(imaginaryunit);
        return 1;
      case 4:
        push(imaginaryunit);
        negate();
        return 1;
    }
    if (car(p2) === symbol(ADD)) {
      p3 = cdr(p2);
      while (iscons(p3)) {
        n = isquarterturn(car(p3));
        if (n) {
          break;
        }
        p3 = cdr(p3);
      }
      switch (n) {
        case 0:
          return 0;
        case 1:
          push_integer(1);
          break;
        case 2:
          push_integer(-1);
          break;
        case 3:
          push(imaginaryunit);
          break;
        case 4:
          push(imaginaryunit);
          negate();
      }
      push(p2);
      push(car(p3));
      subtract();
      exponential();
      multiply();
      return 1;
    }
    return 0;
  };

  //-----------------------------------------------------------------------------

  //  Look up the nth prime

  //  Input:    n on stack (0 < n < 10001)

  //  Output:    nth prime on stack

  //-----------------------------------------------------------------------------
  Eval_prime = function Eval_prime() {
    push(cadr(p1));
    Eval();
    return prime();
  };
  prime = function prime() {
    var n;
    n = 0;
    n = pop_integer();
    if (n < 1 || n > MAXPRIMETAB) {
      stop("prime: Argument out of range.");
    }
    n = primetab[n - 1];
    return push_integer(n);
  };
  power_str = "^";
  codeGen = false;

  // this is only invoked when user invokes
  // "print" explicitly
  Eval_print = function Eval_print() {
    stringsEmittedByUserPrintouts += _print(cdr(p1), printMode);
    return push(symbol(NIL));
  };

  // this is only invoked when user invokes
  // "print2dascii" explicitly
  Eval_print2dascii = function Eval_print2dascii() {
    stringsEmittedByUserPrintouts += _print(cdr(p1), PRINTMODE_2DASCII);
    return push(symbol(NIL));
  };

  // this is only invoked when user invokes
  // "printcomputer" explicitly
  Eval_printcomputer = function Eval_printcomputer() {
    stringsEmittedByUserPrintouts += _print(cdr(p1), PRINTMODE_COMPUTER);
    return push(symbol(NIL));
  };

  // this is only invoked when user invokes
  // "printlatex" explicitly
  Eval_printlatex = function Eval_printlatex() {
    stringsEmittedByUserPrintouts += _print(cdr(p1), PRINTMODE_LATEX);
    return push(symbol(NIL));
  };

  // this is only invoked when user invokes
  // "printhuman" explicitly
  Eval_printhuman = function Eval_printhuman() {
    var original_test_flag;
    // test flag needs to be suspended
    // because otherwise "printcomputer" mode
    // will happen.
    original_test_flag = test_flag;
    test_flag = 0;
    stringsEmittedByUserPrintouts += _print(cdr(p1), PRINTMODE_HUMAN);
    test_flag = original_test_flag;
    return push(symbol(NIL));
  };

  // this is only invoked when user invokes
  // "printlist" explicitly
  Eval_printlist = function Eval_printlist() {
    var beenPrinted;
    beenPrinted = _print(cdr(p1), PRINTMODE_LIST);
    stringsEmittedByUserPrintouts += beenPrinted;
    return push(symbol(NIL));
  };
  _print = function _print(p, passedPrintMode) {
    var accumulator, origPrintMode;
    accumulator = "";
    while (iscons(p)) {
      push(car(p));
      Eval();
      p2 = pop();
      origPrintMode = printMode;
      if (passedPrintMode === PRINTMODE_COMPUTER) {
        printMode = PRINTMODE_COMPUTER;
        accumulator = printline(p2);
        rememberPrint(accumulator, LAST_FULL_PRINT);
      } else if (passedPrintMode === PRINTMODE_HUMAN) {
        printMode = PRINTMODE_HUMAN;
        accumulator = printline(p2);
        rememberPrint(accumulator, LAST_PLAIN_PRINT);
      } else if (passedPrintMode === PRINTMODE_2DASCII) {
        printMode = PRINTMODE_2DASCII;
        accumulator = print2dascii(p2);
        rememberPrint(accumulator, LAST_2DASCII_PRINT);
      } else if (passedPrintMode === PRINTMODE_LATEX) {
        printMode = PRINTMODE_LATEX;
        accumulator = printline(p2);
        rememberPrint(accumulator, LAST_LATEX_PRINT);
      } else if (passedPrintMode === PRINTMODE_LIST) {
        printMode = PRINTMODE_LIST;
        accumulator = _print_list(p2);
        rememberPrint(accumulator, LAST_LIST_PRINT);
      }
      printMode = origPrintMode;
      p = cdr(p);
    }
    if (DEBUG) {
      console.log("emttedString from display: " + stringsEmittedByUserPrintouts);
    }
    return accumulator;
  };
  rememberPrint = function rememberPrint(theString, theTypeOfPrint) {
    var parsedString;
    scan('"' + theString + '"');
    parsedString = pop();
    return set_binding(symbol(theTypeOfPrint), parsedString);
  };
  print_str = function print_str(s) {
    if (DEBUG) {
      console.log("emttedString from print_str: " + stringsEmittedByUserPrintouts);
    }
    return s;
  };
  print_char = function print_char(c) {
    return c;
  };
  collectLatexStringFromReturnValue = function collectLatexStringFromReturnValue(p) {
    var origPrintMode, originalCodeGen, returnedString;
    origPrintMode = printMode;
    printMode = PRINTMODE_LATEX;
    originalCodeGen = codeGen;
    codeGen = false;
    returnedString = print_expr(p);
    // some variables might contain underscores, escape those
    returnedString = returnedString.replace(/_/g, "\\_");
    printMode = origPrintMode;
    codeGen = originalCodeGen;
    if (DEBUG) {
      console.log("emttedString from collectLatexStringFromReturnValue: " + stringsEmittedByUserPrintouts);
    }
    return returnedString;
  };
  printline = function printline(p) {
    var accumulator;
    accumulator = "";
    accumulator += print_expr(p);
    return accumulator;
  };
  print_base_of_denom = function print_base_of_denom(p1) {
    var accumulator;
    accumulator = "";
    if (isfraction(p1) || car(p1) === symbol(ADD) || car(p1) === symbol(MULTIPLY) || car(p1) === symbol(POWER) || lessp(p1, zero)) {
      // p1 is BASE
      accumulator += print_char('(');
      accumulator += print_expr(p1);
      accumulator += print_char(')');
    } else {
      accumulator += print_expr(p1); // p1 is BASE
    }

    return accumulator;
  };
  print_expo_of_denom = function print_expo_of_denom(p2) {
    var accumulator;
    accumulator = "";
    if (isfraction(p2) || car(p2) === symbol(ADD) || car(p2) === symbol(MULTIPLY) || car(p2) === symbol(POWER)) {
      // p2 is EXPO
      accumulator += print_char('(');
      accumulator += print_expr(p2);
      accumulator += print_char(')');
    } else {
      accumulator += print_expr(p2); // p2 is EXPO
    }

    return accumulator;
  };

  // prints stuff after the divide symbol "/"

  // d is the number of denominators

  //define BASE p1
  //define EXPO p2
  print_denom = function print_denom(p, d) {
    var accumulator;
    accumulator = "";
    save();
    p1 = cadr(p);
    p2 = caddr(p);
    if (isminusone(p2)) {
      // p2 is EXPO
      accumulator += print_base_of_denom(p1);
      restore();
      return accumulator;
    }
    if (d === 1) {
      // p2 is EXPO
      accumulator += print_char('(');
    }
    // prepare the exponent
    // (needs to be negated)
    // before printing it out
    push(p2);
    negate();
    p2 = pop();
    accumulator += _print_power(p1, p2);
    if (d === 1) {
      accumulator += print_char(')');
    }
    restore();
    return accumulator;
  };

  //define A p3
  //define B p4
  print_a_over_b = function print_a_over_b(p) {
    var accumulator, d, doNothing, n;
    accumulator = "";
    flag = 0;
    n = 0;
    d = 0;
    save();
    // count numerators and denominators
    n = 0;
    d = 0;
    p1 = cdr(p);
    p2 = car(p1);
    if (isrational(p2)) {
      push(p2);
      mp_numerator();
      _absval();
      p3 = pop();
      push(p2);
      mp_denominator();
      p4 = pop();
      if (!isplusone(p3)) {
        // p3 is A
        n++;
      }
      if (!isplusone(p4)) {
        // p4 is B
        d++;
      }
      p1 = cdr(p1);
    } else {
      p3 = one;
      p4 = one; // p4 is B
    }

    while (iscons(p1)) {
      p2 = car(p1);
      if (is_denominator(p2)) {
        d++;
      } else {
        n++;
      }
      p1 = cdr(p1);
    }
    //debugger
    if (printMode === PRINTMODE_LATEX) {
      accumulator += print_str('\\frac{');
    }
    if (n === 0) {
      accumulator += print_char('1');
    } else {
      flag = 0;
      p1 = cdr(p);
      if (isrational(car(p1))) {
        p1 = cdr(p1);
      }
      if (!isplusone(p3)) {
        // p3 is A
        accumulator += _print_factor(p3);
        flag = 1;
      }
      while (iscons(p1)) {
        p2 = car(p1);
        if (is_denominator(p2)) {
          doNothing = 1;
        } else {
          if (flag) {
            accumulator += print_multiply_sign();
          }
          accumulator += _print_factor(p2);
          flag = 1;
        }
        p1 = cdr(p1);
      }
    }
    if (printMode === PRINTMODE_LATEX) {
      accumulator += print_str('}{');
    } else if (printMode === PRINTMODE_HUMAN && !test_flag) {
      accumulator += print_str(" / ");
    } else {
      accumulator += print_str("/");
    }
    if (d > 1 && printMode !== PRINTMODE_LATEX) {
      accumulator += print_char('(');
    }
    flag = 0;
    p1 = cdr(p);
    if (isrational(car(p1))) {
      p1 = cdr(p1);
    }
    if (!isplusone(p4)) {
      // p4 is B
      accumulator += _print_factor(p4);
      flag = 1;
    }
    while (iscons(p1)) {
      p2 = car(p1);
      if (is_denominator(p2)) {
        if (flag) {
          accumulator += print_multiply_sign();
        }
        accumulator += print_denom(p2, d);
        flag = 1;
      }
      p1 = cdr(p1);
    }
    if (d > 1 && printMode !== PRINTMODE_LATEX) {
      accumulator += print_char(')');
    }
    if (printMode === PRINTMODE_LATEX) {
      accumulator += print_str('}');
    }
    restore();
    return accumulator;
  };
  print_expr = function print_expr(p) {
    var accumulator;
    accumulator = "";
    if (isadd(p)) {
      p = cdr(p);
      if (sign_of_term(car(p)) === '-') {
        accumulator += print_str("-");
      }
      accumulator += print_term(car(p));
      p = cdr(p);
      while (iscons(p)) {
        if (sign_of_term(car(p)) === '+') {
          if (printMode === PRINTMODE_HUMAN && !test_flag) {
            accumulator += print_str(" + ");
          } else {
            accumulator += print_str("+");
          }
        } else {
          if (printMode === PRINTMODE_HUMAN && !test_flag) {
            accumulator += print_str(" - ");
          } else {
            accumulator += print_str("-");
          }
        }
        accumulator += print_term(car(p));
        p = cdr(p);
      }
    } else {
      if (sign_of_term(p) === '-') {
        accumulator += print_str("-");
      }
      accumulator += print_term(p);
    }
    return accumulator;
  };
  sign_of_term = function sign_of_term(p) {
    var accumulator;
    accumulator = "";
    if (car(p) === symbol(MULTIPLY) && isNumericAtom(cadr(p)) && lessp(cadr(p), zero)) {
      accumulator += '-';
    } else if (isNumericAtom(p) && lessp(p, zero)) {
      accumulator += '-';
    } else {
      accumulator += '+';
    }
    return accumulator;
  };
  print_term = function print_term(p) {
    var accumulator, denom, numberOneOverSomething, origAccumulator, previousFactorWasANumber;
    accumulator = "";
    if (car(p) === symbol(MULTIPLY) && any_denominators(p)) {
      accumulator += print_a_over_b(p);
      return accumulator;
    }
    if (car(p) === symbol(MULTIPLY)) {
      p = cdr(p);
      // coeff -1?
      if (isminusone(car(p))) {
        //      print_char('-')
        p = cdr(p);
      }
      previousFactorWasANumber = false;
      // print the first factor ------------
      if (isNumericAtom(car(p))) {
        previousFactorWasANumber = true;
      }
      // this numberOneOverSomething thing is so that
      // we show things of the form
      //   numericFractionOfForm1/something * somethingElse
      // as
      //   somethingElse / something
      // so for example 1/2 * sqrt(2) is rendered as
      //   sqrt(2)/2
      // rather than the first form, which looks confusing.
      // NOTE that you might want to avoid this
      // when printing polynomials, as it could be nicer
      // to show the numeric coefficients well separated from
      // the variable, but we'll see when we'll
      // come to it if it's an issue.
      numberOneOverSomething = false;
      if (printMode === PRINTMODE_LATEX && iscons(cdr(p)) && isNumberOneOverSomething(car(p))) {
        numberOneOverSomething = true;
        denom = car(p).q.b.toString();
      }
      if (numberOneOverSomething) {
        origAccumulator = accumulator;
        accumulator = "";
      } else {
        accumulator += _print_factor(car(p));
      }
      p = cdr(p);
      // print all the other factors -------
      while (iscons(p)) {
        // check if we end up having a case where two numbers
        // are next to each other. In those cases, latex needs
        // to insert a \cdot otherwise they end up
        // right next to each other and read like one big number
        if (printMode === PRINTMODE_LATEX) {
          if (previousFactorWasANumber) {
            // if what comes next is a power and the base
            // is a number, then we are in the case
            // of consecutive numbers.
            // Note that sqrt() i.e when exponent is 1/2
            // doesn't count because the radical gives
            // a nice graphical separation already.
            if (caar(p) === symbol(POWER)) {
              if (isNumericAtom(car(cdr(car(p))))) {
                if (!isfraction(car(cdr(cdr(car(p)))))) {
                  accumulator += " \\cdot ";
                }
              }
            }
          }
        }
        accumulator += print_multiply_sign();
        accumulator += _print_factor(car(p), false, true);
        previousFactorWasANumber = false;
        if (isNumericAtom(car(p))) {
          previousFactorWasANumber = true;
        }
        p = cdr(p);
      }
      if (numberOneOverSomething) {
        accumulator = origAccumulator + "\\frac{" + accumulator + "}{" + denom + "}";
      }
    } else {
      accumulator += _print_factor(p);
    }
    return accumulator;
  };
  print_subexpr = function print_subexpr(p) {
    var accumulator;
    accumulator = "";
    accumulator += print_char('(');
    accumulator += print_expr(p);
    accumulator += print_char(')');
    return accumulator;
  };
  print_factorial_function = function print_factorial_function(p) {
    var accumulator;
    accumulator = "";
    p = cadr(p);
    if (isfraction(p) || car(p) === symbol(ADD) || car(p) === symbol(MULTIPLY) || car(p) === symbol(POWER) || car(p) === symbol(FACTORIAL)) {
      accumulator += print_subexpr(p);
    } else {
      accumulator += print_expr(p);
    }
    accumulator += print_char('!');
    return accumulator;
  };
  print_ABS_latex = function print_ABS_latex(p) {
    var accumulator;
    accumulator = "";
    accumulator += print_str("\\left |");
    accumulator += print_expr(cadr(p));
    accumulator += print_str(" \\right |");
    return accumulator;
  };
  print_BINOMIAL_latex = function print_BINOMIAL_latex(p) {
    var accumulator;
    accumulator = "";
    accumulator += print_str("\\binom{");
    accumulator += print_expr(cadr(p));
    accumulator += print_str("}{");
    accumulator += print_expr(caddr(p));
    accumulator += print_str("} ");
    return accumulator;
  };
  print_DOT_latex = function print_DOT_latex(p) {
    var accumulator;
    accumulator = "";
    accumulator += print_expr(cadr(p));
    accumulator += print_str(" \\cdot ");
    accumulator += print_expr(caddr(p));
    return accumulator;
  };
  print_DOT_codegen = function print_DOT_codegen(p) {
    var accumulator;
    accumulator = "dot(";
    accumulator += print_expr(cadr(p));
    accumulator += ", ";
    accumulator += print_expr(caddr(p));
    accumulator += ")";
    return accumulator;
  };
  print_SIN_codegen = function print_SIN_codegen(p) {
    var accumulator;
    accumulator = "Math.sin(";
    accumulator += print_expr(cadr(p));
    accumulator += ")";
    return accumulator;
  };
  print_COS_codegen = function print_COS_codegen(p) {
    var accumulator;
    accumulator = "Math.cos(";
    accumulator += print_expr(cadr(p));
    accumulator += ")";
    return accumulator;
  };
  print_TAN_codegen = function print_TAN_codegen(p) {
    var accumulator;
    accumulator = "Math.tan(";
    accumulator += print_expr(cadr(p));
    accumulator += ")";
    return accumulator;
  };
  print_ARCSIN_codegen = function print_ARCSIN_codegen(p) {
    var accumulator;
    accumulator = "Math.asin(";
    accumulator += print_expr(cadr(p));
    accumulator += ")";
    return accumulator;
  };
  print_ARCCOS_codegen = function print_ARCCOS_codegen(p) {
    var accumulator;
    accumulator = "Math.acos(";
    accumulator += print_expr(cadr(p));
    accumulator += ")";
    return accumulator;
  };
  print_ARCTAN_codegen = function print_ARCTAN_codegen(p) {
    var accumulator;
    accumulator = "Math.atan(";
    accumulator += print_expr(cadr(p));
    accumulator += ")";
    return accumulator;
  };
  print_SQRT_latex = function print_SQRT_latex(p) {
    var accumulator;
    accumulator = "";
    accumulator += print_str("\\sqrt{");
    accumulator += print_expr(cadr(p));
    accumulator += print_str("} ");
    return accumulator;
  };
  print_TRANSPOSE_latex = function print_TRANSPOSE_latex(p) {
    var accumulator;
    accumulator = "";
    accumulator += print_str("{");
    if (iscons(cadr(p))) {
      accumulator += print_str('(');
    }
    accumulator += print_expr(cadr(p));
    if (iscons(cadr(p))) {
      accumulator += print_str(')');
    }
    accumulator += print_str("}");
    accumulator += print_str("^T");
    return accumulator;
  };
  print_TRANSPOSE_codegen = function print_TRANSPOSE_codegen(p) {
    var accumulator;
    accumulator = "";
    accumulator += print_str("transpose(");
    accumulator += print_expr(cadr(p));
    accumulator += print_str(')');
    return accumulator;
  };
  print_UNIT_codegen = function print_UNIT_codegen(p) {
    var accumulator;
    accumulator = "";
    accumulator += print_str("identity(");
    accumulator += print_expr(cadr(p));
    accumulator += print_str(')');
    return accumulator;
  };
  print_INV_latex = function print_INV_latex(p) {
    var accumulator;
    accumulator = "";
    accumulator += print_str("{");
    if (iscons(cadr(p))) {
      accumulator += print_str('(');
    }
    accumulator += print_expr(cadr(p));
    if (iscons(cadr(p))) {
      accumulator += print_str(')');
    }
    accumulator += print_str("}");
    accumulator += print_str("^{-1}");
    return accumulator;
  };
  print_INV_codegen = function print_INV_codegen(p) {
    var accumulator;
    accumulator = "";
    accumulator += print_str("inv(");
    accumulator += print_expr(cadr(p));
    accumulator += print_str(')');
    return accumulator;
  };
  print_DEFINT_latex = function print_DEFINT_latex(p) {
    var accumulator, functionBody, i, i1, numberOfIntegrals, originalIntegral, ref1, theIntegral, theVariable;
    accumulator = "";
    functionBody = car(cdr(p));
    p = cdr(p);
    originalIntegral = p;
    numberOfIntegrals = 0;
    while (iscons(cdr(cdr(p)))) {
      numberOfIntegrals++;
      theIntegral = cdr(cdr(p));
      accumulator += print_str("\\int^{");
      accumulator += print_expr(car(cdr(theIntegral)));
      accumulator += print_str("}_{");
      accumulator += print_expr(car(theIntegral));
      accumulator += print_str("} \\! ");
      p = cdr(theIntegral);
    }
    accumulator += print_expr(functionBody);
    accumulator += print_str(" \\,");
    p = originalIntegral;
    for (i = i1 = 1, ref1 = numberOfIntegrals; 1 <= ref1 ? i1 <= ref1 : i1 >= ref1; i = 1 <= ref1 ? ++i1 : --i1) {
      theVariable = cdr(p);
      accumulator += print_str(" \\mathrm{d} ");
      accumulator += print_expr(car(theVariable));
      if (i < numberOfIntegrals) {
        accumulator += print_str(" \\, ");
      }
      p = cdr(cdr(theVariable));
    }
    return accumulator;
  };
  print_tensor = function print_tensor(p) {
    var accumulator;
    accumulator = "";
    accumulator += _print_tensor_inner3(p, 0, 0)[1];
    return accumulator;
  };

  // j scans the dimensions
  // k is an increment for all the printed elements
  //   since they are all together in sequence in one array
  _print_tensor_inner3 = function print_tensor_inner(p, j, k) {
    var accumulator, i, i1, j1, ref1, ref2, retString;
    accumulator = "";
    accumulator += print_str("[");
    // only the last dimension prints the actual elements
    // e.g. in a matrix, the first dimension contains
    // vectors, not elements, and the second dimension
    // actually contains the elements

    // if not the last dimension, we are just printing wrappers
    // and recursing down i.e. we print the next dimension
    if (j < p.tensor.ndim - 1) {
      for (i = i1 = 0, ref1 = p.tensor.dim[j]; 0 <= ref1 ? i1 < ref1 : i1 > ref1; i = 0 <= ref1 ? ++i1 : --i1) {
        var _print_tensor_inner = _print_tensor_inner3(p, j + 1, k);
        var _print_tensor_inner2 = _slicedToArray(_print_tensor_inner, 2);
        k = _print_tensor_inner2[0];
        retString = _print_tensor_inner2[1];
        accumulator += retString;
        // add separator between elements dimensions
        // "above" the inner-most dimension
        if (i !== p.tensor.dim[j] - 1) {
          accumulator += print_str(",");
        }
      }
    } else {
      // if we reached the last dimension, we print the actual
      // elements
      for (i = j1 = 0, ref2 = p.tensor.dim[j]; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
        accumulator += print_expr(p.tensor.elem[k]);
        // add separator between elements in the
        // inner-most dimension
        if (i !== p.tensor.dim[j] - 1) {
          accumulator += print_str(",");
        }
        k++;
      }
    }
    accumulator += print_str("]");
    return [k, accumulator];
  };
  print_tensor_latex = function print_tensor_latex(p) {
    var accumulator;
    accumulator = "";
    if (p.tensor.ndim <= 2) {
      accumulator += _print_tensor_inner_latex(true, p, 0, 0)[1];
    }
    return accumulator;
  };

  // firstLevel is needed because printing a matrix
  // is not exactly an elegant recursive procedure:
  // the vector on the first level prints the latex
  // "wrap", while the vectors that make up the
  // rows don't. so it's a bit asymmetric and this
  // flag helps.
  // j scans the dimensions
  // k is an increment for all the printed elements
  //   since they are all together in sequence in one array
  _print_tensor_inner_latex = function print_tensor_inner_latex(firstLevel, p, j, k) {
    var accumulator, i, i1, j1, ref1, ref2, retString;
    accumulator = "";
    // open the outer latex wrap
    if (firstLevel) {
      accumulator += "\\begin{bmatrix} ";
    }
    // only the last dimension prints the actual elements
    // e.g. in a matrix, the first dimension contains
    // vectors, not elements, and the second dimension
    // actually contains the elements

    // if not the last dimension, we are just printing wrappers
    // and recursing down i.e. we print the next dimension
    if (j < p.tensor.ndim - 1) {
      for (i = i1 = 0, ref1 = p.tensor.dim[j]; 0 <= ref1 ? i1 < ref1 : i1 > ref1; i = 0 <= ref1 ? ++i1 : --i1) {
        var _print_tensor_inner_l = _print_tensor_inner_latex(0, p, j + 1, k);
        var _print_tensor_inner_l2 = _slicedToArray(_print_tensor_inner_l, 2);
        k = _print_tensor_inner_l2[0];
        retString = _print_tensor_inner_l2[1];
        accumulator += retString;
        if (i !== p.tensor.dim[j] - 1) {
          // add separator between rows
          accumulator += print_str(" \\\\ ");
        }
      }
    } else {
      // if we reached the last dimension, we print the actual
      // elements
      for (i = j1 = 0, ref2 = p.tensor.dim[j]; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
        accumulator += print_expr(p.tensor.elem[k]);
        // separator between elements in each row
        if (i !== p.tensor.dim[j] - 1) {
          accumulator += print_str(" & ");
        }
        k++;
      }
    }
    // close the outer latex wrap
    if (firstLevel) {
      accumulator += " \\end{bmatrix}";
    }
    return [k, accumulator];
  };
  print_SUM_latex = function print_SUM_latex(p) {
    var accumulator;
    accumulator = "\\sum_{";
    accumulator += print_expr(caddr(p));
    accumulator += "=";
    accumulator += print_expr(cadddr(p));
    accumulator += "}^{";
    accumulator += print_expr(caddddr(p));
    accumulator += "}{";
    accumulator += print_expr(cadr(p));
    accumulator += "}";
    return accumulator;
  };
  print_SUM_codegen = function print_SUM_codegen(p) {
    var accumulator, body, lowerlimit, upperlimit, variable;
    body = cadr(p);
    variable = caddr(p);
    lowerlimit = cadddr(p);
    upperlimit = caddddr(p);
    accumulator = "(function(){" + " var " + variable + "; " + " var holderSum = 0; " + " var lowerlimit = " + print_expr(lowerlimit) + "; " + " var upperlimit = " + print_expr(upperlimit) + "; " + " for (" + variable + " = lowerlimit; " + variable + " < upperlimit; " + variable + "++) { " + "   holderSum += " + print_expr(body) + ";" + " } " + " return holderSum;" + "})()";
    return accumulator;
  };
  print_TEST_latex = function print_TEST_latex(p) {
    var accumulator;
    accumulator = "\\left\\{ \\begin{array}{ll}";
    p = cdr(p);
    while (iscons(p)) {
      // odd number of parameters means that the
      // last argument becomes the default case
      // i.e. the one without a test.
      if (cdr(p) === symbol(NIL)) {
        accumulator += "{";
        accumulator += print_expr(car(p));
        accumulator += "} & otherwise ";
        accumulator += " \\\\\\\\";
        break;
      }
      accumulator += "{";
      accumulator += print_expr(cadr(p));
      accumulator += "} & if & ";
      accumulator += print_expr(car(p));
      accumulator += " \\\\\\\\";
      // test unsuccessful, continue to the
      // next pair of test,value
      p = cddr(p);
    }
    accumulator = accumulator.substring(0, accumulator.length - 4);
    return accumulator += "\\end{array} \\right.";
  };
  print_TEST_codegen = function print_TEST_codegen(p) {
    var accumulator, howManyIfs;
    accumulator = "(function(){";
    p = cdr(p);
    howManyIfs = 0;
    while (iscons(p)) {
      // odd number of parameters means that the
      // last argument becomes the default case
      // i.e. the one without a test.
      if (cdr(p) === symbol(NIL)) {
        accumulator += "else {";
        accumulator += "return (" + print_expr(car(p)) + ");";
        accumulator += "}";
        break;
      }
      if (howManyIfs) {
        accumulator += " else ";
      }
      accumulator += "if (" + print_expr(car(p)) + "){";
      accumulator += "return (" + print_expr(cadr(p)) + ");";
      accumulator += "}";
      // test unsuccessful, continue to the
      // next pair of test,value
      howManyIfs++;
      p = cddr(p);
    }
    accumulator += "})()";
    return accumulator;
  };
  print_TESTLT_latex = function print_TESTLT_latex(p) {
    var accumulator;
    accumulator = "{";
    accumulator += print_expr(cadr(p));
    accumulator += "}";
    accumulator += " < ";
    accumulator += "{";
    accumulator += print_expr(caddr(p));
    return accumulator += "}";
  };
  print_TESTLE_latex = function print_TESTLE_latex(p) {
    var accumulator;
    accumulator = "{";
    accumulator += print_expr(cadr(p));
    accumulator += "}";
    accumulator += " \\leq ";
    accumulator += "{";
    accumulator += print_expr(caddr(p));
    return accumulator += "}";
  };
  print_TESTGT_latex = function print_TESTGT_latex(p) {
    var accumulator;
    accumulator = "{";
    accumulator += print_expr(cadr(p));
    accumulator += "}";
    accumulator += " > ";
    accumulator += "{";
    accumulator += print_expr(caddr(p));
    return accumulator += "}";
  };
  print_TESTGE_latex = function print_TESTGE_latex(p) {
    var accumulator;
    accumulator = "{";
    accumulator += print_expr(cadr(p));
    accumulator += "}";
    accumulator += " \\geq ";
    accumulator += "{";
    accumulator += print_expr(caddr(p));
    return accumulator += "}";
  };
  print_TESTEQ_latex = function print_TESTEQ_latex(p) {
    var accumulator;
    accumulator = "{";
    accumulator += print_expr(cadr(p));
    accumulator += "}";
    accumulator += " = ";
    accumulator += "{";
    accumulator += print_expr(caddr(p));
    return accumulator += "}";
  };
  print_FOR_codegen = function print_FOR_codegen(p) {
    var accumulator, body, lowerlimit, upperlimit, variable;
    body = cadr(p);
    variable = caddr(p);
    lowerlimit = cadddr(p);
    upperlimit = caddddr(p);
    accumulator = "(function(){" + " var " + variable + "; " + " var lowerlimit = " + print_expr(lowerlimit) + "; " + " var upperlimit = " + print_expr(upperlimit) + "; " + " for (" + variable + " = lowerlimit; " + variable + " < upperlimit; " + variable + "++) { " + "   " + print_expr(body) + " } " + "})()";
    return accumulator;
  };
  print_DO_codegen = function print_DO_codegen(p) {
    var accumulator;
    accumulator = "";
    p = cdr(p);
    while (iscons(p)) {
      accumulator += print_expr(car(p));
      p = cdr(p);
    }
    return accumulator;
  };
  print_SETQ_codegen = function print_SETQ_codegen(p) {
    var accumulator;
    accumulator = "";
    accumulator += print_expr(cadr(p));
    accumulator += " = ";
    accumulator += print_expr(caddr(p));
    accumulator += "; ";
    return accumulator;
  };
  print_PRODUCT_latex = function print_PRODUCT_latex(p) {
    var accumulator;
    accumulator = "\\prod_{";
    accumulator += print_expr(caddr(p));
    accumulator += "=";
    accumulator += print_expr(cadddr(p));
    accumulator += "}^{";
    accumulator += print_expr(caddddr(p));
    accumulator += "}{";
    accumulator += print_expr(cadr(p));
    accumulator += "}";
    return accumulator;
  };
  print_PRODUCT_codegen = function print_PRODUCT_codegen(p) {
    var accumulator, body, lowerlimit, upperlimit, variable;
    body = cadr(p);
    variable = caddr(p);
    lowerlimit = cadddr(p);
    upperlimit = caddddr(p);
    accumulator = "(function(){" + " var " + variable + "; " + " var holderProduct = 1; " + " var lowerlimit = " + print_expr(lowerlimit) + "; " + " var upperlimit = " + print_expr(upperlimit) + "; " + " for (" + variable + " = lowerlimit; " + variable + " < upperlimit; " + variable + "++) { " + "   holderProduct *= " + print_expr(body) + ";" + " } " + " return holderProduct;" + "})()";
    return accumulator;
  };
  print_base = function print_base(p) {
    var accumulator;
    accumulator = "";
    if (isadd(cadr(p)) || caadr(p) === symbol(MULTIPLY) || caadr(p) === symbol(POWER) || isnegativenumber(cadr(p))) {
      accumulator += print_str('(');
      accumulator += print_expr(cadr(p));
      accumulator += print_str(')');
    } else if (isNumericAtom(cadr(p)) && (lessp(cadr(p), zero) || isfraction(cadr(p)))) {
      accumulator += print_str('(');
      accumulator += _print_factor(cadr(p));
      accumulator += print_str(')');
    } else {
      accumulator += _print_factor(cadr(p));
    }
    return accumulator;
  };
  print_exponent = function print_exponent(p) {
    var accumulator;
    accumulator = "";
    if (iscons(caddr(p)) || isfraction(caddr(p)) || isNumericAtom(caddr(p)) && lessp(caddr(p), zero)) {
      accumulator += print_str('(');
      accumulator += print_expr(caddr(p));
      accumulator += print_str(')');
    } else {
      accumulator += _print_factor(caddr(p));
    }
    return accumulator;
  };
  _print_power = function print_power(base, exponent) {
    var accumulator, denomExponent, newExponent, numExponent;
    accumulator = "";
    //debugger
    if (DEBUG) {
      console.log("power base: " + base + " " + " exponent: " + exponent);
    }
    // quick check is this is actually a square root.
    if (isoneovertwo(exponent)) {
      if (equaln(base, 2)) {
        if (codeGen) {
          accumulator += print_str("Math.SQRT2");
          return accumulator;
        }
      } else {
        if (printMode === PRINTMODE_LATEX) {
          accumulator += print_str("\\sqrt{");
          accumulator += print_expr(base);
          accumulator += print_str("}");
          return accumulator;
        } else if (codeGen) {
          accumulator += print_str("Math.sqrt(");
          accumulator += print_expr(base);
          accumulator += print_str(')');
          return accumulator;
        }
      }
    }
    if (equaln(get_binding(symbol(PRINT_LEAVE_E_ALONE)), 1) && base === symbol(E)) {
      if (codeGen) {
        accumulator += print_str("Math.exp(");
        accumulator += print_expo_of_denom(exponent);
        accumulator += print_str(')');
        return accumulator;
      }
      if (printMode === PRINTMODE_LATEX) {
        accumulator += print_str("e^{");
        accumulator += print_expr(exponent);
        accumulator += print_str("}");
      } else {
        accumulator += print_str("exp(");
        accumulator += print_expr(exponent);
        accumulator += print_str(')');
      }
      return accumulator;
    }
    if (codeGen) {
      accumulator += print_str("Math.pow(");
      accumulator += print_base_of_denom(base);
      accumulator += print_str(", ");
      accumulator += print_expo_of_denom(exponent);
      accumulator += print_str(')');
      return accumulator;
    }
    if (equaln(get_binding(symbol(PRINT_LEAVE_X_ALONE)), 0) || base.printname !== "x") {
      // if the exponent is negative then
      // we invert the base BUT we don't do
      // that if the base is "e", because for
      // example when trigonometric functions are
      // expressed in terms of exponential functions
      // that would be really confusing, one wants to
      // keep "e" as the base and the negative exponent
      if (base !== symbol(E)) {
        if (isminusone(exponent)) {
          if (printMode === PRINTMODE_LATEX) {
            accumulator += print_str("\\frac{1}{");
          } else if (printMode === PRINTMODE_HUMAN && !test_flag) {
            accumulator += print_str("1 / ");
          } else {
            accumulator += print_str("1/");
          }
          if (iscons(base) && printMode !== PRINTMODE_LATEX) {
            accumulator += print_str('(');
            accumulator += print_expr(base);
            accumulator += print_str(')');
          } else {
            accumulator += print_expr(base);
          }
          if (printMode === PRINTMODE_LATEX) {
            accumulator += print_str("}");
          }
          return accumulator;
        }
        if (isnegativeterm(exponent)) {
          if (printMode === PRINTMODE_LATEX) {
            accumulator += print_str("\\frac{1}{");
          } else if (printMode === PRINTMODE_HUMAN && !test_flag) {
            accumulator += print_str("1 / ");
          } else {
            accumulator += print_str("1/");
          }
          push(exponent);
          push_integer(-1);
          multiply();
          newExponent = pop();
          if (iscons(base) && printMode !== PRINTMODE_LATEX) {
            accumulator += print_str('(');
            accumulator += _print_power(base, newExponent);
            accumulator += print_str(')');
          } else {
            accumulator += _print_power(base, newExponent);
          }
          if (printMode === PRINTMODE_LATEX) {
            accumulator += print_str("}");
          }
          return accumulator;
        }
      }
      if (isfraction(exponent) && printMode === PRINTMODE_LATEX) {
        accumulator += print_str("\\sqrt");
        push(exponent);
        _denominator();
        denomExponent = pop();
        if (!isplustwo(denomExponent)) {
          accumulator += print_str("[");
          accumulator += print_expr(denomExponent);
          accumulator += print_str("]");
        }
        accumulator += print_str("{");
        push(exponent);
        _numerator();
        numExponent = pop();
        exponent = numExponent;
        accumulator += _print_power(base, exponent);
        accumulator += print_str("}");
        return accumulator;
      }
    }
    if (printMode === PRINTMODE_LATEX && isplusone(exponent)) {
      // if we are in latex mode we turn many
      // radicals into a radix sign with a power
      // underneath, and the power is often one
      // (e.g. square root turns into a radical
      // with a power one underneath) so handle
      // this case simply here, just print the base
      accumulator += print_expr(base);
    } else {
      // print the base,
      // determining if it needs to be
      // wrapped in parentheses or not
      if (isadd(base) || isnegativenumber(base)) {
        accumulator += print_str('(');
        accumulator += print_expr(base);
        accumulator += print_str(')');
      } else if (car(base) === symbol(MULTIPLY) || car(base) === symbol(POWER)) {
        if (printMode !== PRINTMODE_LATEX) {
          accumulator += print_str('(');
        }
        accumulator += _print_factor(base, true);
        if (printMode !== PRINTMODE_LATEX) {
          accumulator += print_str(')');
        }
      } else if (isNumericAtom(base) && (lessp(base, zero) || isfraction(base))) {
        accumulator += print_str('(');
        accumulator += _print_factor(base);
        accumulator += print_str(')');
      } else {
        accumulator += _print_factor(base);
      }
      // print the power symbol
      //debugger
      if (printMode === PRINTMODE_HUMAN && !test_flag) {
        //print_str(" ^ ")
        accumulator += print_str(power_str);
      } else {
        accumulator += print_str("^");
      }
      // print the exponent
      if (printMode === PRINTMODE_LATEX) {
        // in latex mode, one can omit the curly braces
        // wrapping the exponent if the exponent is only
        // one character long
        if (print_expr(exponent).length > 1) {
          accumulator += print_str("{");
          accumulator += print_expr(exponent);
          accumulator += print_str("}");
        } else {
          accumulator += print_expr(exponent);
        }
      } else if (iscons(exponent) || isfraction(exponent) || isNumericAtom(exponent) && lessp(exponent, zero)) {
        accumulator += print_str('(');
        accumulator += print_expr(exponent);
        accumulator += print_str(')');
      } else {
        accumulator += _print_factor(exponent);
      }
    }
    return accumulator;
  };
  print_index_function = function print_index_function(p) {
    var accumulator;
    accumulator = "";
    p = cdr(p);
    if (caar(p) === symbol(ADD) || caar(p) === symbol(MULTIPLY) || caar(p) === symbol(POWER) || caar(p) === symbol(FACTORIAL)) {
      accumulator += print_subexpr(car(p));
    } else {
      accumulator += print_expr(car(p));
    }
    accumulator += print_str('[');
    p = cdr(p);
    if (iscons(p)) {
      accumulator += print_expr(car(p));
      p = cdr(p);
      while (iscons(p)) {
        accumulator += print_str(',');
        accumulator += print_expr(car(p));
        p = cdr(p);
      }
    }
    accumulator += print_str(']');
    return accumulator;
  };
  _print_factor = function print_factor(p, omitParens, pastFirstFactor) {
    var accumulator, base, exponent, fbody, parameters, returned;
    // debugger
    accumulator = "";
    if (isNumericAtom(p)) {
      // in an evaluated term, all the numeric parts
      // are at the beginning of the term.
      // When printing the EXPRESSION,
      // we peek into the first factor of the term and we
      // look at whether it's a number less then zero.
      // if it is, we print the "-" as the "leading" part of the
      // print of the EXPRESSION, and then we proceed printint the factors
      // of the term. This means that when we come here, we must
      // skip printing the minus if the number is negative,
      // because it's already been printed.
      if (pastFirstFactor && lessp(p, zero)) {
        accumulator += '(';
      }
      accumulator += print_number(p, pastFirstFactor);
      if (pastFirstFactor && lessp(p, zero)) {
        accumulator += ')';
      }
      return accumulator;
    }
    if (isstr(p)) {
      accumulator += print_str("\"");
      accumulator += print_str(p.str);
      accumulator += print_str("\"");
      return accumulator;
    }
    if (istensor(p)) {
      if (printMode === PRINTMODE_LATEX) {
        accumulator += print_tensor_latex(p);
      } else {
        accumulator += print_tensor(p);
      }
      return accumulator;
    }
    if (car(p) === symbol(MULTIPLY)) {
      if (!omitParens) {
        if (sign_of_term(p) === '-' || printMode !== PRINTMODE_LATEX) {
          if (printMode === PRINTMODE_LATEX) {
            accumulator += print_str(" \\left (");
          } else {
            accumulator += print_str('(');
          }
        }
      }
      accumulator += print_expr(p);
      if (!omitParens) {
        if (sign_of_term(p) === '-' || printMode !== PRINTMODE_LATEX) {
          if (printMode === PRINTMODE_LATEX) {
            accumulator += print_str(" \\right ) ");
          } else {
            accumulator += print_str(')');
          }
        }
      }
      return accumulator;
    } else if (isadd(p)) {
      if (!omitParens) {
        accumulator += print_str('(');
      }
      accumulator += print_expr(p);
      if (!omitParens) {
        accumulator += print_str(')');
      }
      return accumulator;
    }
    if (car(p) === symbol(POWER)) {
      base = cadr(p);
      exponent = caddr(p);
      accumulator += _print_power(base, exponent);
      return accumulator;
    }
    //  if (car(p) == _list) {
    //    print_str("{")
    //    p = cdr(p)
    //    if (iscons(p)) {
    //      print_expr(car(p))
    //      p = cdr(p)
    //    }
    //    while (iscons(p)) {
    //      print_str(",")
    //      print_expr(car(p))
    //      p = cdr(p)
    //    }
    //    print_str("}")
    //    return
    //  }
    if (car(p) === symbol(FUNCTION)) {
      fbody = cadr(p);
      if (!codeGen) {
        parameters = caddr(p);
        accumulator += print_str("function ");
        if (DEBUG) {
          console.log("emittedString from print_factor " + stringsEmittedByUserPrintouts);
        }
        returned = _print_list(parameters);
        accumulator += returned;
        accumulator += print_str(" -> ");
      }
      accumulator += print_expr(fbody);
      return accumulator;
    }
    if (car(p) === symbol(PATTERN)) {
      accumulator += print_expr(caadr(p));
      if (printMode === PRINTMODE_LATEX) {
        accumulator += print_str(" \\rightarrow ");
      } else {
        if (printMode === PRINTMODE_HUMAN && !test_flag) {
          accumulator += print_str(" -> ");
        } else {
          accumulator += print_str("->");
        }
      }
      accumulator += print_expr(car(cdr(cadr(p))));
      return accumulator;
    }
    if (car(p) === symbol(INDEX) && issymbol(cadr(p))) {
      accumulator += print_index_function(p);
      return accumulator;
    }
    if (car(p) === symbol(FACTORIAL)) {
      accumulator += print_factorial_function(p);
      return accumulator;
    } else if (car(p) === symbol(ABS) && printMode === PRINTMODE_LATEX) {
      accumulator += print_ABS_latex(p);
      return accumulator;
    } else if (car(p) === symbol(SQRT) && printMode === PRINTMODE_LATEX) {
      //debugger
      accumulator += print_SQRT_latex(p);
      return accumulator;
    } else if (car(p) === symbol(TRANSPOSE)) {
      if (printMode === PRINTMODE_LATEX) {
        accumulator += print_TRANSPOSE_latex(p);
        return accumulator;
      } else if (codeGen) {
        accumulator += print_TRANSPOSE_codegen(p);
        return accumulator;
      }
    } else if (car(p) === symbol(UNIT)) {
      if (codeGen) {
        accumulator += print_UNIT_codegen(p);
        return accumulator;
      }
    } else if (car(p) === symbol(INV)) {
      if (printMode === PRINTMODE_LATEX) {
        accumulator += print_INV_latex(p);
        return accumulator;
      } else if (codeGen) {
        accumulator += print_INV_codegen(p);
        return accumulator;
      }
    } else if (car(p) === symbol(BINOMIAL) && printMode === PRINTMODE_LATEX) {
      accumulator += print_BINOMIAL_latex(p);
      return accumulator;
    } else if (car(p) === symbol(DEFINT) && printMode === PRINTMODE_LATEX) {
      accumulator += print_DEFINT_latex(p);
      return accumulator;
    } else if (isinnerordot(p)) {
      if (printMode === PRINTMODE_LATEX) {
        accumulator += print_DOT_latex(p);
        return accumulator;
      } else if (codeGen) {
        accumulator += print_DOT_codegen(p);
        return accumulator;
      }
    } else if (car(p) === symbol(SIN)) {
      if (codeGen) {
        accumulator += print_SIN_codegen(p);
        return accumulator;
      }
    } else if (car(p) === symbol(COS)) {
      if (codeGen) {
        accumulator += print_COS_codegen(p);
        return accumulator;
      }
    } else if (car(p) === symbol(TAN)) {
      if (codeGen) {
        accumulator += print_TAN_codegen(p);
        return accumulator;
      }
    } else if (car(p) === symbol(ARCSIN)) {
      if (codeGen) {
        accumulator += print_ARCSIN_codegen(p);
        return accumulator;
      }
    } else if (car(p) === symbol(ARCCOS)) {
      if (codeGen) {
        accumulator += print_ARCCOS_codegen(p);
        return accumulator;
      }
    } else if (car(p) === symbol(ARCTAN)) {
      if (codeGen) {
        accumulator += print_ARCTAN_codegen(p);
        return accumulator;
      }
    } else if (car(p) === symbol(SUM)) {
      if (printMode === PRINTMODE_LATEX) {
        accumulator += print_SUM_latex(p);
        return accumulator;
      } else if (codeGen) {
        accumulator += print_SUM_codegen(p);
        return accumulator;
      }
      //else if car(p) == symbol(QUOTE)
      //  if printMode == PRINTMODE_LATEX
      //    print_expr(cadr(p))
      //    return accumulator
    } else if (car(p) === symbol(PRODUCT)) {
      if (printMode === PRINTMODE_LATEX) {
        accumulator += print_PRODUCT_latex(p);
        return accumulator;
      } else if (codeGen) {
        accumulator += print_PRODUCT_codegen(p);
        return accumulator;
      }
    } else if (car(p) === symbol(FOR)) {
      if (codeGen) {
        accumulator += print_FOR_codegen(p);
        return accumulator;
      }
    } else if (car(p) === symbol(DO)) {
      if (codeGen) {
        accumulator += print_DO_codegen(p);
        return accumulator;
      }
    } else if (car(p) === symbol(TEST)) {
      if (codeGen) {
        accumulator += print_TEST_codegen(p);
        return accumulator;
      }
      if (printMode === PRINTMODE_LATEX) {
        accumulator += print_TEST_latex(p);
        return accumulator;
      }
    } else if (car(p) === symbol(TESTLT)) {
      if (codeGen) {
        accumulator += "((" + print_expr(cadr(p)) + ") < (" + print_expr(caddr(p)) + "))";
        return accumulator;
      }
      if (printMode === PRINTMODE_LATEX) {
        accumulator += print_TESTLT_latex(p);
        return accumulator;
      }
    } else if (car(p) === symbol(TESTLE)) {
      if (codeGen) {
        accumulator += "((" + print_expr(cadr(p)) + ") <= (" + print_expr(caddr(p)) + "))";
        return accumulator;
      }
      if (printMode === PRINTMODE_LATEX) {
        accumulator += print_TESTLE_latex(p);
        return accumulator;
      }
    } else if (car(p) === symbol(TESTGT)) {
      if (codeGen) {
        accumulator += "((" + print_expr(cadr(p)) + ") > (" + print_expr(caddr(p)) + "))";
        return accumulator;
      }
      if (printMode === PRINTMODE_LATEX) {
        accumulator += print_TESTGT_latex(p);
        return accumulator;
      }
    } else if (car(p) === symbol(TESTGE)) {
      if (codeGen) {
        accumulator += "((" + print_expr(cadr(p)) + ") >= (" + print_expr(caddr(p)) + "))";
        return accumulator;
      }
      if (printMode === PRINTMODE_LATEX) {
        accumulator += print_TESTGE_latex(p);
        return accumulator;
      }
    } else if (car(p) === symbol(TESTEQ)) {
      if (codeGen) {
        accumulator += "((" + print_expr(cadr(p)) + ") === (" + print_expr(caddr(p)) + "))";
        return accumulator;
      }
      if (printMode === PRINTMODE_LATEX) {
        accumulator += print_TESTEQ_latex(p);
        return accumulator;
      }
    } else if (car(p) === symbol(FLOOR)) {
      if (codeGen) {
        accumulator += "Math.floor(" + print_expr(cadr(p)) + ")";
        return accumulator;
      }
      if (printMode === PRINTMODE_LATEX) {
        accumulator += " \\lfloor {" + print_expr(cadr(p)) + "} \\rfloor ";
        return accumulator;
      }
    } else if (car(p) === symbol(CEILING)) {
      if (codeGen) {
        accumulator += "Math.ceiling(" + print_expr(cadr(p)) + ")";
        return accumulator;
      }
      if (printMode === PRINTMODE_LATEX) {
        accumulator += " \\lceil {" + print_expr(cadr(p)) + "} \\rceil ";
        return accumulator;
      }
    } else if (car(p) === symbol(ROUND)) {
      if (codeGen) {
        accumulator += "Math.round(" + print_expr(cadr(p)) + ")";
        return accumulator;
      }
    } else if (car(p) === symbol(SETQ)) {
      if (codeGen) {
        accumulator += print_SETQ_codegen(p);
        return accumulator;
      } else {
        accumulator += print_expr(cadr(p));
        accumulator += print_str("=");
        accumulator += print_expr(caddr(p));
        return accumulator;
      }
    }
    if (iscons(p)) {
      //if (car(p) == symbol(FORMAL) && cadr(p)->k == SYM) {
      //  print_str(((struct symbol *) cadr(p))->name)
      //  return
      //}
      accumulator += _print_factor(car(p));
      p = cdr(p);
      if (!omitParens) {
        accumulator += print_str('(');
      }
      if (iscons(p)) {
        accumulator += print_expr(car(p));
        p = cdr(p);
        while (iscons(p)) {
          accumulator += print_str(",");
          accumulator += print_expr(car(p));
          p = cdr(p);
        }
      }
      if (!omitParens) {
        accumulator += print_str(')');
      }
      return accumulator;
    }
    if (p === symbol(DERIVATIVE)) {
      accumulator += print_char('d');
    } else if (p === symbol(E)) {
      if (codeGen) {
        accumulator += print_str("Math.E");
      } else {
        accumulator += print_str("e");
      }
    } else if (p === symbol(PI)) {
      if (printMode === PRINTMODE_LATEX) {
        accumulator += print_str("\\pi");
      } else {
        accumulator += print_str("pi");
      }
    } else {
      accumulator += print_str(get_printname(p));
    }
    return accumulator;
  };
  _print_list = function print_list(p) {
    var accumulator;
    accumulator = "";
    switch (p.k) {
      case CONS:
        accumulator += '(';
        accumulator += _print_list(car(p));
        if (p === cdr(p) && p !== symbol(NIL)) {
          console.log("oh no recursive!");
          debugger;
        }
        p = cdr(p);
        while (iscons(p)) {
          accumulator += " ";
          accumulator += _print_list(car(p));
          p = cdr(p);
          if (p === cdr(p) && p !== symbol(NIL)) {
            console.log("oh no recursive!");
            debugger;
          }
        }
        if (p !== symbol(NIL)) {
          accumulator += " . ";
          accumulator += _print_list(p);
        }
        accumulator += ')';
        break;
      case STR:
        //print_str("\"")
        accumulator += p.str;
        break;
      //print_str("\"")
      case NUM:
      case DOUBLE:
        accumulator += print_number(p, true);
        break;
      case SYM:
        accumulator += get_printname(p);
        break;
      default:
        accumulator += "<tensor>";
    }
    return accumulator;
  };
  print_multiply_sign = function print_multiply_sign() {
    var accumulator;
    accumulator = "";
    if (printMode === PRINTMODE_LATEX) {
      if (printMode === PRINTMODE_HUMAN && !test_flag) {
        accumulator += print_str(" ");
      } else {
        return accumulator;
      }
    }
    if (printMode === PRINTMODE_HUMAN && !test_flag && !codeGen) {
      accumulator += print_str(" ");
    } else {
      accumulator += print_str("*");
    }
    return accumulator;
  };
  is_denominator = function is_denominator(p) {
    if (car(p) === symbol(POWER) && cadr(p) !== symbol(E) && isnegativeterm(caddr(p))) {
      return 1;
    } else {
      return 0;
    }
  };

  // don't consider the leading fraction
  // we want 2/3*a*b*c instead of 2*a*b*c/3
  any_denominators = function any_denominators(p) {
    var q;
    p = cdr(p);
    //  if (isfraction(car(p)))
    //    return 1
    while (iscons(p)) {
      q = car(p);
      if (is_denominator(q)) {
        return 1;
      }
      p = cdr(p);
    }
    return 0;
  };

  /*
   Prints in "2d", e.g. instead of 1/(x+1)^2 :
         1
   ----------
           2
    (1 + x)
    Note that although this looks more natural, a) it's not parsable and
   b) it can be occasionally be ambiguous, such as:
      1
   ----
     2
   x
   is 1/x^2 but it also looks a little like x^(1/2)
   */
  //-----------------------------------------------------------------------------

  //  Examples:

  //     012345678
  //  -2 .........
  //  -1 .........
  //   0 ..hello..  x=2, y=0, h=1, w=5
  //   1 .........
  //   2 .........

  //     012345678
  //  -2 .........
  //  -1 ..355....
  //   0 ..---....  x=2, y=-1, h=3, w=3
  //   1 ..113....
  //   2 .........

  //-----------------------------------------------------------------------------
  YMAX = 10000;
  glyph = function () {
    var glyph = /*#__PURE__*/_createClass(function glyph() {
      "use strict";

      _classCallCheck(this, glyph);
    });
    ;
    glyph.prototype.c = 0;
    glyph.prototype.x = 0;
    glyph.prototype.y = 0;
    return glyph;
  }.call(this);

  // will contain glyphs
  chartab = [];
  for (charTabIndex = i1 = 0, ref1 = YMAX; 0 <= ref1 ? i1 < ref1 : i1 > ref1; charTabIndex = 0 <= ref1 ? ++i1 : --i1) {
    chartab[charTabIndex] = new glyph();
  }
  yindex = 0;
  level = 0;
  emit_x = 0;
  expr_level = 0;
  display_flag = 0;

  // this is not really the translated version,
  // the original is in window.cpp and is
  // rather more complex
  printchar_nowrap = function printchar_nowrap(character) {
    var accumulator;
    accumulator = "";
    accumulator += character;
    return accumulator;
  };
  printchar = function printchar(character) {
    return printchar_nowrap(character);
  };
  print2dascii = function print2dascii(p) {
    var beenPrinted, h, w, y;
    h = 0;
    w = 0;
    y = 0;
    save();
    yindex = 0;
    level = 0;
    emit_x = 0;
    emit_top_expr(p);
    // if too wide then print flat
    var _get_size = get_size(0, yindex);
    var _get_size2 = _slicedToArray(_get_size, 3);
    h = _get_size2[0];
    w = _get_size2[1];
    y = _get_size2[2];
    if (w > 100) {
      printline(p);
      restore();
      return;
    }
    beenPrinted = print_glyphs();
    restore();
    return beenPrinted;
  };
  emit_top_expr = function emit_top_expr(p) {
    if (car(p) === symbol(SETQ)) {
      emit_expr(cadr(p));
      __emit_str(" = ");
      emit_expr(caddr(p));
      return;
    }
    if (istensor(p)) {
      return emit_tensor(p);
    } else {
      return emit_expr(p);
    }
  };
  will_be_displayed_as_fraction = function will_be_displayed_as_fraction(p) {
    if (level > 0) {
      return 0;
    }
    if (isfraction(p)) {
      return 1;
    }
    if (car(p) !== symbol(MULTIPLY)) {
      return 0;
    }
    if (isfraction(cadr(p))) {
      return 1;
    }
    while (iscons(p)) {
      if (isdenominator(car(p))) {
        return 1;
      }
      p = cdr(p);
    }
    return 0;
  };
  emit_expr = function emit_expr(p) {
    //  if (level > 0) {
    //    printexpr(p)
    //    return
    //  }
    expr_level++;
    if (car(p) === symbol(ADD)) {
      p = cdr(p);
      if (__is_negative(car(p))) {
        __emit_char('-');
        if (will_be_displayed_as_fraction(car(p))) {
          __emit_char(' ');
        }
      }
      emit_term(car(p));
      p = cdr(p);
      while (iscons(p)) {
        if (__is_negative(car(p))) {
          __emit_char(' ');
          __emit_char('-');
          __emit_char(' ');
        } else {
          __emit_char(' ');
          __emit_char('+');
          __emit_char(' ');
        }
        emit_term(car(p));
        p = cdr(p);
      }
    } else {
      if (__is_negative(p)) {
        __emit_char('-');
        if (will_be_displayed_as_fraction(p)) {
          __emit_char(' ');
        }
      }
      emit_term(p);
    }
    return expr_level--;
  };
  emit_unsigned_expr = function emit_unsigned_expr(p) {
    var results;
    if (car(p) === symbol(ADD)) {
      p = cdr(p);
      //    if (__is_negative(car(p)))
      //      __emit_char('-')
      emit_term(car(p));
      p = cdr(p);
      results = [];
      while (iscons(p)) {
        if (__is_negative(car(p))) {
          __emit_char(' ');
          __emit_char('-');
          __emit_char(' ');
        } else {
          __emit_char(' ');
          __emit_char('+');
          __emit_char(' ');
        }
        emit_term(car(p));
        results.push(p = cdr(p));
      }
      return results;
    } else {
      //    if (__is_negative(p))
      //      __emit_char('-')
      return emit_term(p);
    }
  };
  __is_negative = function __is_negative(p) {
    if (isnegativenumber(p)) {
      return 1;
    }
    if (car(p) === symbol(MULTIPLY) && isnegativenumber(cadr(p))) {
      return 1;
    }
    return 0;
  };
  emit_term = function emit_term(p) {
    var n;
    if (car(p) === symbol(MULTIPLY)) {
      n = count_denominators(p);
      if (n && level === 0) {
        return emit_fraction(p, n);
      } else {
        return emit_multiply(p, n);
      }
    } else {
      return emit_factor(p);
    }
  };
  isdenominator = function isdenominator(p) {
    if (car(p) === symbol(POWER) && cadr(p) !== symbol(E) && __is_negative(caddr(p))) {
      return 1;
    } else {
      return 0;
    }
  };
  count_denominators = function count_denominators(p) {
    var count, q;
    count = 0;
    p = cdr(p);
    //  if (isfraction(car(p))) {
    //    count++
    //    p = cdr(p)
    //  }
    while (iscons(p)) {
      q = car(p);
      if (isdenominator(q)) {
        count++;
      }
      p = cdr(p);
    }
    return count;
  };

  // n is the number of denominators, not counting a fraction like 1/2
  emit_multiply = function emit_multiply(p, n) {
    var results;
    if (n === 0) {
      p = cdr(p);
      if (isplusone(car(p)) || isminusone(car(p))) {
        p = cdr(p);
      }
      emit_factor(car(p));
      p = cdr(p);
      results = [];
      while (iscons(p)) {
        __emit_char(' ');
        emit_factor(car(p));
        results.push(p = cdr(p));
      }
      return results;
    } else {
      emit_numerators(p);
      __emit_char('/');
      // need grouping if more than one denominator
      if (n > 1 || isfraction(cadr(p))) {
        __emit_char('(');
        emit_denominators(p);
        return __emit_char(')');
      } else {
        return emit_denominators(p);
      }
    }
  };

  //define A p3
  //define B p4

  // sign of term has already been emitted
  emit_fraction = function emit_fraction(p, d) {
    var count, doNothing, k1, k2, n, x;
    count = 0;
    k1 = 0;
    k2 = 0;
    n = 0;
    x = 0;
    save();
    p3 = one;
    p4 = one;
    if (isrational(cadr(p))) {
      push(cadr(p));
      mp_numerator();
      _absval();
      p3 = pop();
      push(cadr(p));
      mp_denominator();
      p4 = pop(); // p4 is B
    }

    if (isdouble(cadr(p))) {
      push(cadr(p));
      _absval();
      p3 = pop(); // p3 is A
    }

    // count numerators
    if (isplusone(p3)) {
      // p3 is A
      n = 0;
    } else {
      n = 1;
    }
    p1 = cdr(p);
    if (isNumericAtom(car(p1))) {
      p1 = cdr(p1);
    }
    while (iscons(p1)) {
      p2 = car(p1);
      if (isdenominator(p2)) {
        doNothing = 1;
      } else {
        n++;
      }
      p1 = cdr(p1);
    }
    // emit numerators
    x = emit_x;
    k1 = yindex;
    count = 0;
    if (!isplusone(p3)) {
      // p3 is A
      emit_number(p3, 0);
      count++;
    }
    // skip over "multiply"
    p1 = cdr(p);
    // skip over numerical coefficient, already handled
    if (isNumericAtom(car(p1))) {
      p1 = cdr(p1);
    }
    while (iscons(p1)) {
      p2 = car(p1);
      if (isdenominator(p2)) {
        doNothing = 1;
      } else {
        if (count > 0) {
          __emit_char(' ');
        }
        if (n === 1) {
          emit_expr(p2);
        } else {
          emit_factor(p2);
        }
        count++;
      }
      p1 = cdr(p1);
    }
    if (count === 0) {
      __emit_char('1');
    }
    // emit denominators
    k2 = yindex;
    count = 0;
    if (!isplusone(p4)) {
      // p4 is B
      emit_number(p4, 0);
      count++;
      d++;
    }
    p1 = cdr(p);
    if (isrational(car(p1))) {
      p1 = cdr(p1);
    }
    while (iscons(p1)) {
      p2 = car(p1);
      if (isdenominator(p2)) {
        if (count > 0) {
          __emit_char(' ');
        }
        emit_denominator(p2, d);
        count++;
      }
      p1 = cdr(p1);
    }
    fixup_fraction(x, k1, k2);
    return restore();
  };

  // p points to a multiply
  emit_numerators = function emit_numerators(p) {
    var doNothing, n;
    save();
    n = 0;
    p1 = one;
    p = cdr(p);
    if (isrational(car(p))) {
      push(car(p));
      mp_numerator();
      _absval();
      p1 = pop();
      p = cdr(p);
    } else if (isdouble(car(p))) {
      push(car(p));
      _absval();
      p1 = pop();
      p = cdr(p);
    }
    n = 0;
    if (!isplusone(p1)) {
      emit_number(p1, 0);
      n++;
    }
    while (iscons(p)) {
      if (isdenominator(car(p))) {
        doNothing = 1;
      } else {
        if (n > 0) {
          __emit_char(' ');
        }
        emit_factor(car(p));
        n++;
      }
      p = cdr(p);
    }
    if (n === 0) {
      __emit_char('1');
    }
    return restore();
  };

  // p points to a multiply
  emit_denominators = function emit_denominators(p) {
    var n;
    save();
    n = 0;
    p = cdr(p);
    if (isfraction(car(p))) {
      push(car(p));
      mp_denominator();
      p1 = pop();
      emit_number(p1, 0);
      n++;
      p = cdr(p);
    }
    while (iscons(p)) {
      if (isdenominator(car(p))) {
        if (n > 0) {
          __emit_char(' ');
        }
        emit_denominator(car(p), 0);
        n++;
      }
      p = cdr(p);
    }
    return restore();
  };
  emit_factor = function emit_factor(p) {
    if (istensor(p)) {
      if (level === 0) {
        //emit_tensor(p)
        emit_flat_tensor(p);
      } else {
        emit_flat_tensor(p);
      }
      return;
    }
    if (isdouble(p)) {
      emit_number(p, 0);
      return;
    }
    if (car(p) === symbol(ADD) || car(p) === symbol(MULTIPLY)) {
      emit_subexpr(p);
      return;
    }
    if (car(p) === symbol(POWER)) {
      emit_power(p);
      return;
    }
    if (iscons(p)) {
      //if (car(p) == symbol(FORMAL) && cadr(p).k == SYM)
      //  emit_symbol(cadr(p))
      //else
      emit_function(p);
      return;
    }
    if (isNumericAtom(p)) {
      if (level === 0) {
        emit_numerical_fraction(p);
      } else {
        emit_number(p, 0);
      }
      return;
    }
    if (issymbol(p)) {
      emit_symbol(p);
      return;
    }
    if (isstr(p)) {
      emit_string(p);
    }
  };
  emit_numerical_fraction = function emit_numerical_fraction(p) {
    var k1, k2, x;
    k1 = 0;
    k2 = 0;
    x = 0;
    save();
    push(p);
    mp_numerator();
    _absval();
    p3 = pop();
    push(p);
    mp_denominator();
    p4 = pop();
    if (isplusone(p4)) {
      // p4 is B
      emit_number(p3, 0);
      restore();
      return;
    }
    x = emit_x;
    k1 = yindex;
    emit_number(p3, 0);
    k2 = yindex;
    emit_number(p4, 0); // p4 is B
    fixup_fraction(x, k1, k2);
    return restore();
  };

  // if it's a factor then it doesn't need parens around it, i.e. 1/sin(theta)^2
  isfactor = function isfactor(p) {
    if (iscons(p) && car(p) !== symbol(ADD) && car(p) !== symbol(MULTIPLY) && car(p) !== symbol(POWER)) {
      return 1;
    }
    if (issymbol(p)) {
      return 1;
    }
    if (isfraction(p)) {
      return 0;
    }
    if (isnegativenumber(p)) {
      return 0;
    }
    if (isNumericAtom(p)) {
      return 1;
    }
    return 0;
  };
  emit_power = function emit_power(p) {
    var k1, k2, x;
    k1 = 0;
    k2 = 0;
    x = 0;
    if (cadr(p) === symbol(E)) {
      __emit_str("exp(");
      emit_expr(caddr(p));
      __emit_char(')');
      return;
    }
    if (level > 0) {
      if (isminusone(caddr(p))) {
        __emit_char('1');
        __emit_char('/');
        if (isfactor(cadr(p))) {
          emit_factor(cadr(p));
        } else {
          emit_subexpr(cadr(p));
        }
      } else {
        if (isfactor(cadr(p))) {
          emit_factor(cadr(p));
        } else {
          emit_subexpr(cadr(p));
        }
        __emit_char('^');
        if (isfactor(caddr(p))) {
          emit_factor(caddr(p));
        } else {
          emit_subexpr(caddr(p));
        }
      }
      return;
    }
    // special case: 1 over something
    if (__is_negative(caddr(p))) {
      x = emit_x;
      k1 = yindex;
      __emit_char('1');
      k2 = yindex;
      //level++
      emit_denominator(p, 1);
      //level--
      fixup_fraction(x, k1, k2);
      return;
    }
    k1 = yindex;
    if (isfactor(cadr(p))) {
      emit_factor(cadr(p));
    } else {
      emit_subexpr(cadr(p));
    }
    k2 = yindex;
    level++;
    emit_expr(caddr(p));
    level--;
    return fixup_power(k1, k2);
  };

  // if n == 1 then emit as expr (no parens)

  // p is a power
  emit_denominator = function emit_denominator(p, n) {
    var k1, k2;
    k1 = 0;
    k2 = 0;
    // special case: 1 over something
    if (isminusone(caddr(p))) {
      if (n === 1) {
        emit_expr(cadr(p));
      } else {
        emit_factor(cadr(p));
      }
      return;
    }
    k1 = yindex;
    // emit base
    if (isfactor(cadr(p))) {
      emit_factor(cadr(p));
    } else {
      emit_subexpr(cadr(p));
    }
    k2 = yindex;
    // emit exponent, don't emit minus sign
    level++;
    emit_unsigned_expr(caddr(p));
    level--;
    return fixup_power(k1, k2);
  };
  emit_function = function emit_function(p) {
    if (car(p) === symbol(INDEX) && issymbol(cadr(p))) {
      emit_index_function(p);
      return;
    }
    if (car(p) === symbol(FACTORIAL)) {
      emit_factorial_function(p);
      return;
    }
    if (car(p) === symbol(DERIVATIVE)) {
      __emit_char('d');
    } else {
      emit_symbol(car(p));
    }
    __emit_char('(');
    p = cdr(p);
    if (iscons(p)) {
      emit_expr(car(p));
      p = cdr(p);
      while (iscons(p)) {
        __emit_char(',');
        //__emit_char(' ')
        emit_expr(car(p));
        p = cdr(p);
      }
    }
    return __emit_char(')');
  };
  emit_index_function = function emit_index_function(p) {
    p = cdr(p);
    if (caar(p) === symbol(ADD) || caar(p) === symbol(MULTIPLY) || caar(p) === symbol(POWER) || caar(p) === symbol(FACTORIAL)) {
      emit_subexpr(car(p));
    } else {
      emit_expr(car(p));
    }
    __emit_char('[');
    p = cdr(p);
    if (iscons(p)) {
      emit_expr(car(p));
      p = cdr(p);
      while (iscons(p)) {
        __emit_char(',');
        emit_expr(car(p));
        p = cdr(p);
      }
    }
    return __emit_char(']');
  };
  emit_factorial_function = function emit_factorial_function(p) {
    p = cadr(p);
    if (isfraction(p) || car(p) === symbol(ADD) || car(p) === symbol(MULTIPLY) || car(p) === symbol(POWER) || car(p) === symbol(FACTORIAL)) {
      emit_subexpr(p);
    } else {
      emit_expr(p);
    }
    return __emit_char('!');
  };
  emit_subexpr = function emit_subexpr(p) {
    __emit_char('(');
    emit_expr(p);
    return __emit_char(')');
  };
  emit_symbol = function emit_symbol(p) {
    var i, j1, pPrintName, ref2, results;
    i = 0;
    if (p === symbol(E)) {
      __emit_str("exp(1)");
      return;
    }
    pPrintName = get_printname(p);
    results = [];
    for (i = j1 = 0, ref2 = pPrintName.length; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
      results.push(__emit_char(pPrintName[i]));
    }
    return results;
  };
  emit_string = function emit_string(p) {
    var i, j1, pString, ref2;
    i = 0;
    pString = p.str;
    __emit_char('"');
    for (i = j1 = 0, ref2 = pString.length; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
      __emit_char(pString[i]);
    }
    return __emit_char('"');
  };
  fixup_fraction = function fixup_fraction(x, k1, k2) {
    var dx, dy, h1, h2, i, j1, ref2, results, w, w1, w2, y, y1, y2;
    dx = 0;
    dy = 0;
    i = 0;
    w = 0;
    y = 0;
    h1 = 0;
    w1 = 0;
    y1 = 0;
    h2 = 0;
    w2 = 0;
    y2 = 0;
    var _get_size3 = get_size(k1, k2);
    var _get_size4 = _slicedToArray(_get_size3, 3);
    h1 = _get_size4[0];
    w1 = _get_size4[1];
    y1 = _get_size4[2];
    var _get_size5 = get_size(k2, yindex);
    var _get_size6 = _slicedToArray(_get_size5, 3);
    h2 = _get_size6[0];
    w2 = _get_size6[1];
    y2 = _get_size6[2];
    if (w2 > w1) {
      dx = (w2 - w1) / 2; // shift numerator right
    } else {
      dx = 0;
    }
    dx++;
    // this is how much is below the baseline
    y = y1 + h1 - 1;
    dy = -y - 1;
    move(k1, k2, dx, dy);
    if (w2 > w1) {
      dx = -w1;
    } else {
      dx = -w1 + (w1 - w2) / 2;
    }
    dx++;
    dy = -y2 + 1;
    move(k2, yindex, dx, dy);
    if (w2 > w1) {
      w = w2;
    } else {
      w = w1;
    }
    w += 2;
    emit_x = x;
    results = [];
    for (i = j1 = 0, ref2 = w; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
      results.push(__emit_char('-'));
    }
    return results;
  };
  fixup_power = function fixup_power(k1, k2) {
    var dy, h1, h2, w1, w2, y1, y2;
    dy = 0;
    h1 = 0;
    w1 = 0;
    y1 = 0;
    h2 = 0;
    w2 = 0;
    y2 = 0;
    var _get_size7 = get_size(k1, k2);
    var _get_size8 = _slicedToArray(_get_size7, 3);
    h1 = _get_size8[0];
    w1 = _get_size8[1];
    y1 = _get_size8[2];
    // move superscript to baseline
    var _get_size9 = get_size(k2, yindex);
    var _get_size10 = _slicedToArray(_get_size9, 3);
    h2 = _get_size10[0];
    w2 = _get_size10[1];
    y2 = _get_size10[2];
    dy = -y2 - h2 + 1;
    // now move above base
    dy += y1 - 1;
    return move(k2, yindex, 0, dy);
  };
  move = function move(j, k, dx, dy) {
    var i, j1, ref2, ref3, results;
    i = 0;
    results = [];
    for (i = j1 = ref2 = j, ref3 = k; ref2 <= ref3 ? j1 < ref3 : j1 > ref3; i = ref2 <= ref3 ? ++j1 : --j1) {
      chartab[i].x += dx;
      results.push(chartab[i].y += dy);
    }
    return results;
  };

  // finds the bounding rectangle and vertical position
  get_size = function get_size(j, k) {
    var h, i, j1, max_x, max_y, min_x, min_y, ref2, ref3, w, y;
    i = 0;
    min_x = chartab[j].x;
    max_x = chartab[j].x;
    min_y = chartab[j].y;
    max_y = chartab[j].y;
    for (i = j1 = ref2 = j + 1, ref3 = k; ref2 <= ref3 ? j1 < ref3 : j1 > ref3; i = ref2 <= ref3 ? ++j1 : --j1) {
      if (chartab[i].x < min_x) {
        min_x = chartab[i].x;
      }
      if (chartab[i].x > max_x) {
        max_x = chartab[i].x;
      }
      if (chartab[i].y < min_y) {
        min_y = chartab[i].y;
      }
      if (chartab[i].y > max_y) {
        max_y = chartab[i].y;
      }
    }
    h = max_y - min_y + 1;
    w = max_x - min_x + 1;
    y = min_y;
    return [h, w, y];
  };
  displaychar = function displaychar(c) {
    return __emit_char(c);
  };
  __emit_char = function __emit_char(c) {
    if (yindex === YMAX) {
      return;
    }
    if (chartab[yindex] == null) {
      debugger;
    }
    chartab[yindex].c = c;
    chartab[yindex].x = emit_x;
    chartab[yindex].y = 0;
    yindex++;
    return emit_x++;
  };
  __emit_str = function __emit_str(s) {
    var i, j1, ref2, results;
    i = 0;
    results = [];
    for (i = j1 = 0, ref2 = s.length; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
      results.push(__emit_char(s[i]));
    }
    return results;
  };
  emit_number = function emit_number(p, emit_sign) {
    var i, j1, l1, m1, ref2, ref3, ref4, results, results1, tmpString;
    tmpString = "";
    i = 0;
    switch (p.k) {
      case NUM:
        tmpString = p.q.a.toString();
        if (tmpString[0] === '-' && emit_sign === 0) {
          tmpString = tmpString.substring(1);
        }
        for (i = j1 = 0, ref2 = tmpString.length; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
          __emit_char(tmpString[i]);
        }
        tmpString = p.q.b.toString();
        if (tmpString === "1") {
          break;
        }
        __emit_char('/');
        results = [];
        for (i = l1 = 0, ref3 = tmpString.length; 0 <= ref3 ? l1 < ref3 : l1 > ref3; i = 0 <= ref3 ? ++l1 : --l1) {
          results.push(__emit_char(tmpString[i]));
        }
        return results;
        break;
      case DOUBLE:
        tmpString = doubleToReasonableString(p.d);
        if (tmpString[0] === '-' && emit_sign === 0) {
          tmpString = tmpString.substring(1);
        }
        results1 = [];
        for (i = m1 = 0, ref4 = tmpString.length; 0 <= ref4 ? m1 < ref4 : m1 > ref4; i = 0 <= ref4 ? ++m1 : --m1) {
          results1.push(__emit_char(tmpString[i]));
        }
        return results1;
    }
  };

  // a and b are glyphs
  cmpGlyphs = function cmpGlyphs(a, b) {
    if (a.y < b.y) {
      return -1;
    }
    if (a.y > b.y) {
      return 1;
    }
    if (a.x < b.x) {
      return -1;
    }
    if (a.x > b.x) {
      return 1;
    }
    return 0;
  };
  print_glyphs = function print_glyphs() {
    var accumulator, i, j1, ref2, subsetOfStack, x, y;
    i = 0;
    accumulator = "";

    // now sort the glyphs by their vertical positions,
    // since we are going to build a string where obviously the
    // "upper" line has to printed out first, followed by
    // a new line, followed by the other lines.
    //qsort(chartab, yindex, sizeof (struct glyph), __cmp)
    subsetOfStack = chartab.slice(0, yindex);
    subsetOfStack.sort(cmpGlyphs);
    chartab = [].concat(subsetOfStack).concat(chartab.slice(yindex));
    x = 0;
    y = chartab[0].y;
    for (i = j1 = 0, ref2 = yindex; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
      while (chartab[i].y > y) {
        accumulator += printchar('\n');
        x = 0;
        y++;
      }
      while (chartab[i].x > x) {
        accumulator += printchar_nowrap(' ');
        x++;
      }
      accumulator += printchar_nowrap(chartab[i].c);
      x++;
    }
    return accumulator;
  };
  buffer = "";
  getdisplaystr = function getdisplaystr() {
    yindex = 0;
    level = 0;
    emit_x = 0;
    emit_expr(pop());
    fill_buf();
    return buffer;
  };
  fill_buf = function fill_buf() {
    var i, j1, ref2, sIndex, subsetOfStack, tmpBuffer, x, y;
    tmpBuffer = buffer;
    sIndex = 0;
    i = 0;
    //qsort(chartab, yindex, sizeof (struct glyph), __cmp)
    subsetOfStack = chartab.slice(0, yindex);
    subsetOfStack.sort(cmpGlyphs);
    chartab = [].concat(subsetOfStack).concat(chartab.slice(yindex));
    x = 0;
    y = chartab[0].y;
    for (i = j1 = 0, ref2 = yindex; 0 <= ref2 ? j1 < ref2 : j1 > ref2; i = 0 <= ref2 ? ++j1 : --j1) {
      while (chartab[i].y > y) {
        tmpBuffer[sIndex++] = '\n';
        x = 0;
        y++;
      }
      while (chartab[i].x > x) {
        tmpBuffer[sIndex++] = ' ';
        x++;
      }
      tmpBuffer[sIndex++] = chartab[i].c;
      x++;
    }
    return tmpBuffer[sIndex++] = '\n';
  };
  N = 100;
  oneElement = function () {
    var oneElement = /*#__PURE__*/_createClass(function oneElement() {
      "use strict";

      _classCallCheck(this, oneElement);
    });
    ;
    oneElement.prototype.x = 0;
    oneElement.prototype.y = 0;
    oneElement.prototype.h = 0;
    oneElement.prototype.w = 0;
    oneElement.prototype.index = 0;
    oneElement.prototype.count = 0;
    return oneElement;
  }.call(this);
  elem = [];
  for (elelmIndex = j1 = 0; j1 < 10000; elelmIndex = ++j1) {
    elem[elelmIndex] = new oneElement();
  }
  SPACE_BETWEEN_COLUMNS = 3;
  SPACE_BETWEEN_ROWS = 1;
  emit_tensor = function emit_tensor(p) {
    var col, dx, dy, eh, ew, h, i, l1, m1, n, n1, ncol, nrow, o1, ref2, ref3, ref4, ref5, row, w, x, y;
    i = 0;
    n = 0;
    nrow = 0;
    ncol = 0;
    x = 0;
    y = 0;
    h = 0;
    w = 0;
    dx = 0;
    dy = 0;
    eh = 0;
    ew = 0;
    row = 0;
    col = 0;
    if (p.tensor.ndim > 2) {
      emit_flat_tensor(p);
      return;
    }
    nrow = p.tensor.dim[0];
    if (p.tensor.ndim === 2) {
      ncol = p.tensor.dim[1];
    } else {
      ncol = 1;
    }
    n = nrow * ncol;
    if (n > N) {
      emit_flat_tensor(p);
      return;
    }
    // horizontal coordinate of the matrix

    //if 0
    //emit_x += 2; # make space for left paren
    //endif
    x = emit_x;
    // emit each element
    for (i = l1 = 0, ref2 = n; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      elem[i].index = yindex;
      elem[i].x = emit_x;
      emit_expr(p.tensor.elem[i]);
      elem[i].count = yindex - elem[i].index;
      var _get_size11 = get_size(elem[i].index, yindex);
      var _get_size12 = _slicedToArray(_get_size11, 3);
      elem[i].h = _get_size12[0];
      elem[i].w = _get_size12[1];
      elem[i].y = _get_size12[2];
    }
    // find element height and width
    eh = 0;
    ew = 0;
    for (i = m1 = 0, ref3 = n; 0 <= ref3 ? m1 < ref3 : m1 > ref3; i = 0 <= ref3 ? ++m1 : --m1) {
      if (elem[i].h > eh) {
        eh = elem[i].h;
      }
      if (elem[i].w > ew) {
        ew = elem[i].w;
      }
    }
    // this is the overall height of the matrix
    h = nrow * eh + (nrow - 1) * SPACE_BETWEEN_ROWS;
    // this is the overall width of the matrix
    w = ncol * ew + (ncol - 1) * SPACE_BETWEEN_COLUMNS;
    // this is the vertical coordinate of the matrix
    y = -(h / 2);
    // move elements around
    for (row = n1 = 0, ref4 = nrow; 0 <= ref4 ? n1 < ref4 : n1 > ref4; row = 0 <= ref4 ? ++n1 : --n1) {
      for (col = o1 = 0, ref5 = ncol; 0 <= ref5 ? o1 < ref5 : o1 > ref5; col = 0 <= ref5 ? ++o1 : --o1) {
        i = row * ncol + col;
        // first move to upper left corner of matrix
        dx = x - elem[i].x;
        dy = y - elem[i].y;
        move(elem[i].index, elem[i].index + elem[i].count, dx, dy);
        // now move to official position
        dx = 0;
        if (col > 0) {
          dx = col * (ew + SPACE_BETWEEN_COLUMNS);
        }
        dy = 0;
        if (row > 0) {
          dy = row * (eh + SPACE_BETWEEN_ROWS);
        }
        // small correction for horizontal centering
        dx += (ew - elem[i].w) / 2;
        // small correction for vertical centering
        dy += (eh - elem[i].h) / 2;
        move(elem[i].index, elem[i].index + elem[i].count, dx, dy);
      }
    }
    return emit_x = x + w;
  };
  emit_flat_tensor = function emit_flat_tensor(p) {
    return _emit_tensor_inner(p, 0, 0);
  };
  _emit_tensor_inner = function emit_tensor_inner(p, j, k) {
    var i, l1, ref2;
    i = 0;
    __emit_char('(');
    for (i = l1 = 0, ref2 = p.tensor.dim[j]; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      if (j + 1 === p.tensor.ndim) {
        emit_expr(p.tensor.elem[k]);
        k = k + 1;
      } else {
        k = _emit_tensor_inner(p, j + 1, k);
      }
      if (i + 1 < p.tensor.dim[j]) {
        __emit_char(',');
      }
    }
    __emit_char(')');
    return k;
  };

  // 'product' function

  //define A p3
  //define B p4
  //define I p5
  //define X p6

  // leaves the product at the top of the stack
  Eval_product = function Eval_product() {
    var body, i, indexVariable, j, k, l1, oldIndexVariableValue, ref2, ref3;
    i = 0;
    j = 0;
    k = 0;
    // 1st arg
    body = cadr(p1);
    // 2nd arg (index)
    indexVariable = caddr(p1);
    if (!issymbol(indexVariable)) {
      stop("sum: 2nd arg?");
    }
    // 3rd arg (lower limit)
    push(cadddr(p1));
    Eval();
    j = pop_integer();
    if (isNaN(j)) {
      push(p1);
      return;
    }
    // 4th arg (upper limit)
    push(caddddr(p1));
    Eval();
    k = pop_integer();
    if (isNaN(k)) {
      push(p1);
      return;
    }
    // remember contents of the index
    // variable so we can put it back after the loop
    oldIndexVariableValue = get_binding(indexVariable);
    push_integer(1);
    for (i = l1 = ref2 = j, ref3 = k; ref2 <= ref3 ? l1 <= ref3 : l1 >= ref3; i = ref2 <= ref3 ? ++l1 : --l1) {
      push_integer(i);
      p5 = pop();
      set_binding(indexVariable, p5);
      push(body);
      Eval();
      if (DEBUG) {
        console.log("product - factor 1: " + stack[tos - 1].toString());
        console.log("product - factor 2: " + stack[tos - 2].toString());
      }
      multiply();
      if (DEBUG) {
        console.log("product - result: " + stack[tos - 1].toString());
      }
    }
    // put back the index variable to original content
    return set_binding(indexVariable, oldIndexVariableValue);
  };

  //  Add rational numbers

  //  Input:    tos-2    addend

  //      tos-1    addend

  //  Output:    sum on stack
  qadd = function qadd() {
    var gcdBetweenNumeratorAndDenominator, qadd_ab, qadd_ba, qadd_denominator, qadd_frac1, qadd_frac2, qadd_numerator, resultSum;
    // a, qadd_ab, b, qadd_ba, c are all bigNum
    // we are adding the fractions qadd_frac1 + qadd_frac2 i.e.
    // qadd_frac1.q.a/qadd_frac1.q.b + qadd_frac2.q.a/qadd_frac2.q.b
    qadd_frac2 = pop();
    qadd_frac1 = pop();
    qadd_ab = mmul(qadd_frac1.q.a, qadd_frac2.q.b);
    qadd_ba = mmul(qadd_frac1.q.b, qadd_frac2.q.a);
    qadd_numerator = madd(qadd_ab, qadd_ba);
    //mfree(qadd_ab)
    //mfree(qadd_ba)

    // zero?
    if (MZERO(qadd_numerator)) {
      //console.log "qadd IS ZERO"
      //mfree(qadd_numerator)
      push(zero);
      return;
    }
    qadd_denominator = mmul(qadd_frac1.q.b, qadd_frac2.q.b);
    gcdBetweenNumeratorAndDenominator = mgcd(qadd_numerator, qadd_denominator);
    //console.log "gcd("+qadd_numerator+","+qadd_denominator+"): " + gcdBetweenNumeratorAndDenominator
    gcdBetweenNumeratorAndDenominator = makeSignSameAs(gcdBetweenNumeratorAndDenominator, qadd_denominator);
    //console.log "qadd qadd_denominator: " + qadd_denominator
    //console.log "qadd gcdBetweenNumeratorAndDenominator: " + gcdBetweenNumeratorAndDenominator
    resultSum = new U();
    resultSum.k = NUM;
    resultSum.q.a = mdiv(qadd_numerator, gcdBetweenNumeratorAndDenominator);
    resultSum.q.b = mdiv(qadd_denominator, gcdBetweenNumeratorAndDenominator);
    //console.log "qadd resultSum.q.a: " + resultSum.q.a
    //console.log "qadd resultSum.q.b: " + resultSum.q.b

    //mfree(qadd_numerator)
    //mfree(qadd_denominator)
    //mfree(gcdBetweenNumeratorAndDenominator)
    return push(resultSum);
  };

  //console.log "qadd result: " + resultSum

  //  Divide rational numbers

  //  Input:    tos-2    dividend

  //      tos-1    divisor

  //  Output:    quotient on stack
  qdiv = function qdiv() {
    var aa, bb, c;
    save();
    p2 = pop();
    p1 = pop();
    // zero?
    if (MZERO(p2.q.a)) {
      stop("divide by zero");
    }
    if (MZERO(p1.q.a)) {
      push(zero);
      restore();
      return;
    }
    aa = mmul(p1.q.a, p2.q.b);
    bb = mmul(p1.q.b, p2.q.a);
    c = mgcd(aa, bb);
    c = makeSignSameAs(c, bb);
    p1 = new U();
    p1.k = NUM;
    p1.q.a = mdiv(aa, c);
    p1.q.b = mdiv(bb, c);
    push(p1);
    return restore();
  };

  //  Multiply rational numbers

  //  Input:    tos-2    multiplicand

  //      tos-1    multiplier

  //  Output:    product on stack
  qmul = function qmul() {
    var aa, bb, c;
    save();
    p2 = pop();
    p1 = pop();
    // zero?
    if (MZERO(p1.q.a) || MZERO(p2.q.a)) {
      push(zero);
      restore();
      return;
    }
    aa = mmul(p1.q.a, p2.q.a);
    bb = mmul(p1.q.b, p2.q.b);
    c = mgcd(aa, bb);
    c = makeSignSameAs(c, bb);
    p1 = new U();
    p1.k = NUM;
    p1.q.a = mdiv(aa, c);
    p1.q.b = mdiv(bb, c);
    //mfree(aa)
    //mfree(bb)
    push(p1);
    return restore();
  };

  // Rational power function
  qpow = function qpow() {
    save();
    qpowf();
    return restore();
  };

  //define BASE p1
  //define EXPO p2
  qpowf = function qpowf() {
    var a, b, expo, t, x, y;
    expo = 0;
    //unsigned int a, b, *t, *x, *y
    p2 = pop();
    p1 = pop();
    if (isplusone(p1) || isZeroAtomOrTensor(p2)) {
      // p1 is BASE  # p2 is EXPO
      push_integer(1);
      return;
    }
    // if (-1)^(1/2) -> leave it as is
    if (isminusone(p1) && isoneovertwo(p2)) {
      // p1 is BASE  # p2 is EXPO
      push(imaginaryunit);
      return;
    }
    // if base is zero then return 0
    if (isZeroAtomOrTensor(p1)) {
      // p1 is BASE
      if (isnegativenumber(p2)) {
        // p2 is EXPO
        stop("divide by zero");
      }
      push(zero);
      return;
    }
    // if exponent is 1 then return base
    if (isplusone(p2)) {
      // p2 is EXPO
      push(p1);
      return;
    }
    // if exponent is integer then power
    if (isinteger(p2)) {
      // p2 is EXPO
      push(p2);
      expo = pop_integer();
      if (isNaN(expo)) {
        // expo greater than 32 bits
        push_symbol(POWER);
        push(p1);
        push(p2);
        list(3);
        return;
      }
      x = mpow(p1.q.a, Math.abs(expo));
      y = mpow(p1.q.b, Math.abs(expo));
      if (expo < 0) {
        t = x;
        x = y;
        y = t;
        x = makeSignSameAs(x, y);
        y = makePositive(y);
      }
      p3 = new U();
      p3.k = NUM;
      p3.q.a = x;
      p3.q.b = y;
      push(p3);
      return;
    }
    // from here on out the exponent is NOT an integer

    // if base is -1 then normalize polar angle
    if (isminusone(p1)) {
      // p1 is BASE
      push(p2);
      normalize_angle();
      return;
    }
    // if base is negative then (-N)^M -> N^M * (-1)^M
    if (isnegativenumber(p1)) {
      // p1 is BASE
      push(p1);
      negate();
      push(p2);
      qpow();
      push_integer(-1);
      push(p2);
      qpow();
      multiply();
      return;
    }
    if (!isinteger(p1)) {
      // p1 is BASE
      push(p1);
      mp_numerator();
      push(p2);
      qpow();
      push(p1);
      mp_denominator();
      push(p2);
      negate();
      qpow();
      multiply();
      return;
    }
    // At this point p1 (BASE) is a positive integer.

    // If p1 (BASE) is small then factor it.
    if (is_small_integer(p1)) {
      // p1 is BASE
      push(p1);
      push(p2);
      quickfactor();
      return;
    }
    if (!isSmall(p2.q.a) || !isSmall(p2.q.b)) {
      // p2 is EXPO
      push_symbol(POWER);
      push(p1); // p1 is BASE
      push(p2);
      list(3);
      return;
    }
    a = p2.q.a;
    b = p2.q.b;
    x = mroot(p1.q.a, b);
    if (x === 0) {
      push_symbol(POWER);
      push(p1);
      push(p2);
      list(3);
      return;
    }
    y = mpow(x, a);
    //mfree(x)
    p3 = new U();
    p3.k = NUM;
    if (p2.q.a.isNegative()) {
      // p2 is EXPO
      p3.q.a = bigInt(1);
      p3.q.b = y;
    } else {
      p3.q.a = y;
      p3.q.b = bigInt(1);
    }
    return push(p3);
  };

  //-----------------------------------------------------------------------------

  //  Normalize the angle of unit imaginary, i.e. (-1) ^ N

  //  Input:    N on stack (must be rational, not float)

  //  Output:    Result on stack

  //  Note:

  //  n = q * d + r

  //  Example:
  //            n  d  q  r

  //  (-1)^(8/3)  ->   (-1)^(2/3)  8  3  2  2
  //  (-1)^(7/3)  ->   (-1)^(1/3)  7  3  2  1
  //  (-1)^(5/3)  ->  -(-1)^(2/3)  5  3  1  2
  //  (-1)^(4/3)  ->  -(-1)^(1/3)  4  3  1  1
  //  (-1)^(2/3)  ->   (-1)^(2/3)  2  3  0  2
  //  (-1)^(1/3)  ->   (-1)^(1/3)  1  3  0  1

  //  (-1)^(-1/3)  ->  -(-1)^(2/3)  -1  3  -1  2
  //  (-1)^(-2/3)  ->  -(-1)^(1/3)  -2  3  -1  1
  //  (-1)^(-4/3)  ->   (-1)^(2/3)  -4  3  -2  2
  //  (-1)^(-5/3)  ->   (-1)^(1/3)  -5  3  -2  1
  //  (-1)^(-7/3)  ->  -(-1)^(2/3)  -7  3  -3  2
  //  (-1)^(-8/3)  ->  -(-1)^(1/3)  -8  3  -3  1

  //-----------------------------------------------------------------------------

  //define A p1
  //define Q p2
  //define R p3
  normalize_angle = function normalize_angle() {
    save();
    p1 = pop();
    if (isinteger(p1)) {
      // p1 is A
      if (p1.q.a.isOdd()) {
        // p1 is A
        push_integer(-1); // odd exponent
      } else {
        push_integer(1); // even exponent
      }

      restore();
      return;
    }
    // floor
    push(p1);
    bignum_truncate();
    p2 = pop();
    if (isnegativenumber(p1)) {
      // p1 is A
      push(p2); // p2 is Q
      push_integer(-1);
      add();
      p2 = pop(); // p2 is Q
    }

    // remainder (always positive)
    push(p1);
    push(p2);
    subtract();
    p3 = pop();
    push_symbol(POWER);
    push_integer(-1);
    push(p3); // p3 is R
    list(3);
    // negate if quotient is odd
    if (p2.q.a.isOdd()) {
      // p2 is Q
      negate();
    }
    return restore();
  };
  is_small_integer = function is_small_integer(p) {
    return isSmall(p.q.a);
  };

  //-----------------------------------------------------------------------------

  //  Factor small numerical powers

  //  Input:    tos-2    Base (positive integer < 2^31 - 1)

  //      tos-1    Exponent

  //  Output:    Expr on stack

  //-----------------------------------------------------------------------------

  //define BASE p1
  //define EXPO p2
  quickfactor = function quickfactor() {
    var h, i, l1, n, ref2, stackIndex;
    i = 0;
    save();
    p2 = pop();
    p1 = pop();
    h = tos;
    push(p1);
    factor_small_number();
    n = tos - h;
    stackIndex = h;
    for (i = l1 = 0, ref2 = n; l1 < ref2; i = l1 += 2) {
      push(stack[stackIndex + i]);
      push(stack[stackIndex + i + 1]);
      push(p2);
      multiply();
      quickpower();
    }
    // stack has n results from factor_number_raw()

    // on top of that are all the expressions from quickpower()

    // multiply the quickpower() results
    multiply_all(tos - h - n);
    p1 = pop();
    moveTos(h);
    push(p1);
    return restore();
  };

  // p1 (BASE) is a prime number so power is simpler
  quickpower = function quickpower() {
    var expo;
    expo = 0;
    save();
    p2 = pop();
    p1 = pop();
    push(p2);
    bignum_truncate();
    p3 = pop();
    push(p2);
    push(p3);
    subtract();
    p4 = pop();
    if (!isZeroAtomOrTensor(p4)) {
      push_symbol(POWER);
      push(p1);
      push(p4);
      list(3);
    }
    push(p3);
    expo = pop_integer();
    if (isNaN(expo)) {
      push_symbol(POWER);
      push(p1);
      push(p3);
      list(3);
      restore();
      return;
    }
    if (expo === 0) {
      restore();
      return;
    }
    push(p1);
    bignum_power_number(expo);
    return restore();
  };

  //if SELFTEST

  // Divide polynomials
  Eval_quotient = function Eval_quotient() {
    push(cadr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    push(cadddr(p1));
    Eval();
    p1 = pop();
    if (p1 === symbol(NIL)) {
      p1 = symbol(SYMBOL_X);
    }
    push(p1);
    return divpoly();
  };

  //-----------------------------------------------------------------------------

  //  Divide polynomials

  //  Input:    tos-3    Dividend

  //      tos-2    Divisor

  //      tos-1    x

  //  Output:    tos-1    Quotient

  //-----------------------------------------------------------------------------

  //define DIVIDEND p1
  //define DIVISOR p2
  //define X p3
  //define Q p4
  //define QUOTIENT p5
  divpoly = function divpoly() {
    var dividend, divisor, h, i, l1, m, n, ref2, x;
    h = 0;
    i = 0;
    m = 0;
    n = 0;
    x = 0;
    //U **dividend, **divisor
    save();
    p3 = pop();
    p2 = pop();
    p1 = pop();
    h = tos;
    dividend = tos;
    m = coeff(p3, p1) - 1;
    divisor = tos;
    n = coeff(p3, p2) - 1;
    x = m - n;
    push_integer(0);
    p5 = pop();
    while (x >= 0) {
      push(stack[dividend + m]);
      push(stack[divisor + n]);
      divide();
      p4 = pop();
      for (i = l1 = 0, ref2 = n; 0 <= ref2 ? l1 <= ref2 : l1 >= ref2; i = 0 <= ref2 ? ++l1 : --l1) {
        push(stack[dividend + x + i]);
        push(stack[divisor + i]);
        push(p4);
        multiply();
        subtract();
        stack[dividend + x + i] = pop();
      }
      push(p5);
      push(p4);
      push(p3);
      push_integer(x);
      power();
      multiply();
      add();
      p5 = pop();
      m--;
      x--;
    }
    moveTos(h);
    push(p5);
    return restore();
  };
  DEBUG_RATIONALIZE = false;
  Eval_rationalize = function Eval_rationalize() {
    push(cadr(p1));
    Eval();
    return rationalize();
  };
  rationalize = function rationalize() {
    var x;
    x = expanding;
    yyrationalize();
    return expanding = x;
  };
  yyrationalize = function yyrationalize() {
    var commonDenominator, eachTerm, theArgument;
    theArgument = pop();
    if (istensor(theArgument)) {
      __rationalize_tensor(theArgument);
      return;
    }
    expanding = 0;
    if (car(theArgument) !== symbol(ADD)) {
      push(theArgument);
      return;
    }
    if (DEBUG_RATIONALIZE) {
      console.log("rationalize: this is the input expr: " + theArgument);
    }
    // get new denominator
    push(one);
    multiply_denominators(theArgument);
    commonDenominator = pop();
    if (DEBUG_RATIONALIZE) {
      console.log("rationalize: this is the new denominator: " + commonDenominator);
    }
    // multiply each term by new denominator
    push(zero);
    eachTerm = cdr(theArgument);
    while (iscons(eachTerm)) {
      if (DEBUG_RATIONALIZE) {
        console.log("term: " + car(eachTerm));
      }
      push(commonDenominator);
      push(car(eachTerm));
      multiply();
      add();
      eachTerm = cdr(eachTerm);
    }
    if (DEBUG_RATIONALIZE) {
      console.log("rationalize: original terms times new denominator: " + stack[tos - 1]);
    }
    // collect common factors
    Condense();
    if (DEBUG_RATIONALIZE) {
      console.log("rationalize: after factoring: " + stack[tos - 1]);
    }
    // divide by common denominator
    push(commonDenominator);
    divide();
    if (DEBUG_RATIONALIZE) {
      return console.log("rationalize: after dividing by new denom. (and we're done): " + stack[tos - 1]);
    }
  };
  multiply_denominators = function multiply_denominators(p) {
    var results;
    if (car(p) === symbol(ADD)) {
      p = cdr(p);
      results = [];
      while (iscons(p)) {
        multiply_denominators_term(car(p));
        results.push(p = cdr(p));
      }
      return results;
    } else {
      return multiply_denominators_term(p);
    }
  };
  multiply_denominators_term = function multiply_denominators_term(p) {
    var results;
    if (car(p) === symbol(MULTIPLY)) {
      p = cdr(p);
      results = [];
      while (iscons(p)) {
        multiply_denominators_factor(car(p));
        results.push(p = cdr(p));
      }
      return results;
    } else {
      return multiply_denominators_factor(p);
    }
  };
  multiply_denominators_factor = function multiply_denominators_factor(p) {
    if (car(p) !== symbol(POWER)) {
      return;
    }
    push(p);
    p = caddr(p);
    // like x^(-2) ?
    if (isnegativenumber(p)) {
      inverse();
      __lcm();
      return;
    }
    // like x^(-a) ?
    if (car(p) === symbol(MULTIPLY) && isnegativenumber(cadr(p))) {
      inverse();
      __lcm();
      return;
    }
    // no match
    return pop();
  };
  __rationalize_tensor = function __rationalize_tensor(theTensor) {
    var i, l1, n, ref2;
    i = 0;
    push(theTensor);
    Eval();
    theTensor = pop();
    if (!istensor(theTensor)) {
      // might be zero
      push(theTensor);
      return;
    }
    n = theTensor.tensor.nelem;
    for (i = l1 = 0, ref2 = n; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      push(theTensor.tensor.elem[i]);
      rationalize();
      theTensor.tensor.elem[i] = pop();
    }
    check_tensor_dimensions(theTensor);
    return push(theTensor);
  };
  __lcm = function __lcm() {
    save();
    p1 = pop();
    p2 = pop();
    push(p1);
    push(p2);
    multiply();
    push(p1);
    push(p2);
    gcd();
    divide();
    return restore();
  };
  Eval_real = function Eval_real() {
    push(cadr(p1));
    Eval();
    return real();
  };
  real = function real() {
    save();
    _rect();
    p1 = pop();
    push(p1);
    push(p1);
    conjugate();
    add();
    push_integer(2);
    divide();
    return restore();
  };
  DEBUG_RECT = false;
  Eval_rect = function Eval_rect() {
    push(cadr(p1));
    Eval();
    return _rect();
  };
  _rect = function rect() {
    var input;
    save();
    p1 = pop();
    input = p1;
    if (DEBUG_RECT) {
      console.log("RECT of " + input);
    }
    if (DEBUG_RECT) {
      console.log("any clock forms in : " + input + " ? " + _findPossibleClockForm(input));
    }
    // if we assume real variables, then the
    // rect of any symbol is the symbol itself
    // (note that 'i' is not a symbol, it's made of (-1)^(1/2))
    // otherwise we have to leave unevalled
    if (issymbol(p1)) {
      if (DEBUG_RECT) {
        console.log(" rect: simple symbol: " + input);
      }
      if (!isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES)))) {
        push(p1);
      } else {
        push_symbol(YYRECT);
        push(p1);
        list(2);
      }
    } else if (!isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES))) && !_findPossibleExponentialForm(p1) && !_findPossibleClockForm(p1) && !(_Find(p1, symbol(SIN)) && _Find(p1, symbol(COS)) && _Find(p1, imaginaryunit))) {
      // no polar form?
      if (DEBUG_RECT) {
        console.log(" rect: simple symbol: " + input);
      }
      push(p1);
      // ib
    } else if (car(p1) === symbol(MULTIPLY) && isimaginaryunit(cadr(p1)) && !isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES)))) {
      push(p1);
      // sum
    } else if (car(p1) === symbol(ADD)) {
      if (DEBUG_RECT) {
        console.log(" rect - " + input + " is a sum ");
      }
      push_integer(0);
      p1 = cdr(p1);
      while (iscons(p1)) {
        push(car(p1));
        _rect();
        add();
        p1 = cdr(p1);
      }
    } else {
      // try to get to the rectangular form by doing
      // abs(p1) * (cos (theta) + i * sin(theta))
      // where theta is arg(p1)
      if (DEBUG_RECT) {
        console.log(" rect - " + input + " is NOT a sum ");
      }
      push(p1);
      abs();
      if (DEBUG_RECT) {
        console.log(" rect - " + input + " abs: " + stack[tos - 1].toString());
      }
      push(p1);
      arg();
      if (DEBUG_RECT) {
        console.log(" rect - " + input + " arg of " + p1 + " : " + stack[tos - 1].toString());
      }
      p1 = pop();
      push(p1);
      cosine();
      if (DEBUG_RECT) {
        console.log(" rect - " + input + " cosine: " + stack[tos - 1].toString());
      }
      push(imaginaryunit);
      push(p1);
      sine();
      if (DEBUG_RECT) {
        console.log(" rect - " + input + " sine: " + stack[tos - 1].toString());
      }
      multiply();
      if (DEBUG_RECT) {
        console.log(" rect - " + input + " i * sine: " + stack[tos - 1].toString());
      }
      add();
      if (DEBUG_RECT) {
        console.log(" rect - " + input + " cos + i * sine: " + stack[tos - 1].toString());
      }
      multiply();
    }
    restore();
    if (DEBUG_RECT) {
      return console.log("rect of " + input + " : " + stack[tos - 1]);
    }
  };

  //define POLY p1
  //define X p2
  //define A p3
  //define B p4
  //define C p5
  //define Y p6
  show_power_debug = false;
  performing_roots = false;
  Eval_roots = function Eval_roots() {
    // this transforms simple "equation" forms into
    // something that can be processed. E.g., say, y = 3x - 2
    // A == B -> A - B
    // A = B -> A - B
    p2 = cadr(p1);
    if (car(p2) === symbol(SETQ) || car(p2) === symbol(TESTEQ)) {
      push(cadr(p2));
      Eval();
      push(caddr(p2));
      Eval();
      subtract();
    } else {
      push(p2);
      Eval();
      p2 = pop();
      if (car(p2) === symbol(SETQ) || car(p2) === symbol(TESTEQ)) {
        push(cadr(p2));
        Eval();
        push(caddr(p2));
        Eval();
        subtract();
      } else {
        push(p2);
      }
    }
    // 2nd arg, x
    push(caddr(p1));
    Eval();
    p2 = pop();
    if (p2 === symbol(NIL)) {
      guess();
    } else {
      push(p2);
    }
    p2 = pop();
    p1 = pop();
    if (!ispolyexpandedform(p1, p2)) {
      stop("roots: 1st argument is not a polynomial in the variable " + p2);
    }
    push(p1);
    push(p2);
    return roots();
  };
  hasImaginaryCoeff = function hasImaginaryCoeff(k) {
    var h, i, imaginaryCoefficients, l1, ref2;
    //polycoeff = tos
    imaginaryCoefficients = false;
    h = tos;
    for (i = l1 = ref2 = k; l1 > 0; i = l1 += -1) {
      //console.log "hasImaginaryCoeff - coeff.:" + stack[tos-i].toString()
      if (iscomplexnumber(stack[tos - i])) {
        imaginaryCoefficients = true;
        break;
      }
    }
    return imaginaryCoefficients;
  };
  isSimpleRoot = function isSimpleRoot(k) {
    var h, i, isSimpleRootPolynomial, l1, ref2;
    //polycoeff = tos

    //tos-n    Coefficient of x^0
    //tos-1    Coefficient of x^(n-1)
    if (k > 2) {
      isSimpleRootPolynomial = true;
      h = tos;
      if (isZeroAtomOrTensor(stack[tos - k])) {
        isSimpleRootPolynomial = false;
      }
      for (i = l1 = ref2 = k - 1; l1 > 1; i = l1 += -1) {
        if (!isZeroAtomOrTensor(stack[tos - i])) {
          isSimpleRootPolynomial = false;
          break;
        }
      }
    } else {
      isSimpleRootPolynomial = false;
    }
    return isSimpleRootPolynomial;
  };
  normalisedCoeff = function normalisedCoeff(variable, polynomial) {
    var divideBy, i, k, l1, m1, miniStack, ref2, ref3;
    k = coeff(variable, polynomial);
    //console.log("->" + tos)
    divideBy = stack[tos - 1];
    miniStack = [];
    for (i = l1 = 1, ref2 = k; 1 <= ref2 ? l1 <= ref2 : l1 >= ref2; i = 1 <= ref2 ? ++l1 : --l1) {
      miniStack.push(pop());
    }
    //console.log(tos)
    for (i = m1 = ref3 = k - 1; ref3 <= 0 ? m1 <= 0 : m1 >= 0; i = ref3 <= 0 ? ++m1 : --m1) {
      push(miniStack[i]);
      push(divideBy);
      divide();
    }
    //console.log(tos)
    return k;
  };

  // takes the polynomial and the
  // variable on the stack
  roots = function roots() {
    var h, i, k, l1, lastCoeff, leadingCoeff, n, ref2;
    h = 0;
    i = 0;
    n = 0;
    if (DEBUG) {
      console.log("roots: " + stack[tos - 1].toString() + " " + stack[tos - 2].toString());
    }
    save();
    // the simplification of nested radicals uses
    // "roots", which in turn uses simplification
    // of nested radicals. Usually there is no problem,
    // one level of recursion does the job. Beyond that,
    // we probably got stuck in a strange case of infinite
    // recursion, so bail out and return NIL.
    if (recursionLevelNestedRadicalsRemoval > 1) {
      pop();
      pop();
      push(symbol(NIL));
      restore();
      return;
    }
    performing_roots = true;
    h = tos - 2;
    if (DEBUG) {
      console.log("roots checking if " + stack[tos - 1].toString() + " is a case of simple roots");
    }
    p2 = pop();
    p1 = pop();
    push(p1);
    push(p2);
    k = normalisedCoeff(p2, p1);
    if (isSimpleRoot(k)) {
      if (DEBUG) {
        console.log("yes, " + stack[tos - 1].toString() + " is a case of simple roots");
      }
      lastCoeff = stack[tos - k];
      leadingCoeff = stack[tos - 1];
      moveTos(tos - k);
      pop();
      pop();
      getSimpleRoots(k, leadingCoeff, lastCoeff);
    } else {
      moveTos(tos - k);
      roots2();
    }
    n = tos - h;
    if (n === 0) {
      stop("roots: the polynomial is not factorable, try nroots");
    }
    if (n === 1) {
      performing_roots = false;
      restore();
      return;
    }
    sort_stack(n);
    p1 = alloc_tensor(n);
    p1.tensor.ndim = 1;
    p1.tensor.dim[0] = n;
    for (i = l1 = 0, ref2 = n; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      p1.tensor.elem[i] = stack[h + i];
    }
    moveTos(h);
    push(p1);
    restore();
    return performing_roots = false;
  };

  // ok to generate these roots take a look at their form
  // in the case of even and odd exponents here:
  // http://www.wolframalpha.com/input/?i=roots+x%5E14+%2B+1
  // http://www.wolframalpha.com/input/?i=roots+ax%5E14+%2B+b
  // http://www.wolframalpha.com/input/?i=roots+x%5E15+%2B+1
  // http://www.wolframalpha.com/input/?i=roots+a*x%5E15+%2B+b
  getSimpleRoots = function getSimpleRoots(n, leadingCoeff, lastCoeff) {
    var aSol, commonPart, l1, m1, ref2, ref3, rootsOfOne;
    if (DEBUG) {
      console.log("getSimpleRoots");
    }
    save();
    //tos-n    Coefficient of x^0
    //tos-1    Coefficient of x^(n-1)
    n = n - 1;
    push(lastCoeff);
    push_rational(1, n);
    power();
    push(leadingCoeff);
    push_rational(1, n);
    power();
    divide();
    commonPart = pop();
    if (n % 2 === 0) {
      for (rootsOfOne = l1 = 1, ref2 = n; l1 <= ref2; rootsOfOne = l1 += 2) {
        push(commonPart);
        push_integer(-1);
        push_rational(rootsOfOne, n);
        power();
        multiply();
        aSol = pop();
        push(aSol);
        push(aSol);
        negate();
      }
    } else {
      for (rootsOfOne = m1 = 1, ref3 = n; 1 <= ref3 ? m1 <= ref3 : m1 >= ref3; rootsOfOne = 1 <= ref3 ? ++m1 : --m1) {
        push(commonPart);
        push_integer(-1);
        push_rational(rootsOfOne, n);
        power();
        multiply();
        if (rootsOfOne % 2 === 0) {
          negate();
        }
      }
    }
    return restore();
  };
  roots2 = function roots2() {
    var k;
    save();
    if (DEBUG) {
      console.log("roots2: " + stack[tos - 1].toString() + " " + stack[tos - 2].toString());
    }
    p2 = pop(); // the polynomial variable
    p1 = pop(); // the polynomial
    push(p1);
    push(p2);
    k = normalisedCoeff(p2, p1);
    if (!hasImaginaryCoeff(k)) {
      moveTos(tos - k);
      factorpoly();
      p1 = pop();
    } else {
      moveTos(tos - k);
      pop();
      pop();
    }
    if (car(p1) === symbol(MULTIPLY)) {
      p1 = cdr(p1);
      // scan through all the factors
      // and find the roots of each of them
      while (iscons(p1)) {
        push(car(p1));
        push(p2);
        roots3();
        p1 = cdr(p1);
      }
    } else {
      push(p1);
      push(p2);
      roots3();
    }
    return restore();
  };
  roots3 = function roots3() {
    var n;
    save();
    p2 = pop();
    p1 = pop();
    if (car(p1) === symbol(POWER) && ispolyexpandedform(cadr(p1), p2) && isposint(caddr(p1))) {
      n = normalisedCoeff(p2, cadr(p1));
      mini_solve(n);
    } else if (ispolyexpandedform(p1, p2)) {
      n = normalisedCoeff(p2, p1);
      mini_solve(n);
    }
    return restore();
  };

  //-----------------------------------------------------------------------------

  //  Input:    stack[tos - 2]    polynomial

  //      stack[tos - 1]    dependent symbol

  //  Output:    stack      roots on stack

  //            (input args are popped first)

  //-----------------------------------------------------------------------------

  // note that for many quadratic, cubic and quartic polynomials we don't
  // actually end up using the quadratic/cubic/quartic formulas in here,
  // since there is a chance we factored the polynomial and in so
  // doing we found some solutions and lowered the degree.
  mini_solve = function mini_solve(n) {
    var C_CHECKED_AS_NOT_ZERO, Q_CHECKED_AS_NOT_ZERO, R_18_a_b_c_d, R_27_a2_d, R_2_b3, R_3_a, R_3_a_C, R_3_a_c, R_4_DELTA03, R_6_a, R_6_a_C, R_C, R_C_over_3a, R_C_simplified_toCheckIfZero, R_DELTA0, R_DELTA0_simplified_toCheckIfZero, R_DELTA0_toBeCheckedIfZero, R_DELTA1, R_Q, R_Q_simplified_toCheckIfZero, R_S, R_S_simplified_toCheckIfZero, R_a2, R_a2_d, R_a2_d2, R_a3, R_a_b_c, R_a_b_c_d, R_a_c, R_b2, R_b2_c2, R_b3, R_b3_d, R_c2, R_c3, R_d2, R_determinant, R_determinant_simplified_toCheckIfZero, R_e2, R_e3, R_m, R_m27_a2_d2, R_m4_a_c3, R_m4_b3_d, R_m9_a_b_c, R_m_b_over_3a, R_minus_4S2_minus_2p, R_minus_b_over_4a, R_p, R_principalCubicRoot, R_q, R_q_over_S, R_r, S_CHECKED_AS_NOT_ZERO, ThreePPlus2M, TwoQOversqrtPPlus2M, biquadraticSolutions, choiceOfRadicalInQSoSIsNotZero, coeff2, coeff3, coeff4, depressedSolutions, eachSolution, flipSignOFQSoCIsNotZero, flipSignOFRadicalSoQIsNotZero, i_sqrt3, l1, len, len1, len2, m1, n1, one_minus_i_sqrt3, one_plus_i_sqrt3, ref2, ref3, ref4, resolventCubicSolutions, root_solution, sqrtPPlus2M, toBeCheckedIFZero;
    //console.log "mini_solve >>>>>>>>>>>>>>>>>>>>>>>> tos:" + tos
    save();
    // AX + B, X = -B/A
    if (n === 2) {
      //console.log "mini_solve >>>>>>>>> 1st degree"
      p3 = pop();
      p4 = pop();
      push(p4);
      push(p3);
      divide();
      negate();
      restore();
      return;
    }
    // AX^2 + BX + C, X = (-B +/- (B^2 - 4AC)^(1/2)) / (2A)
    if (n === 3) {
      //console.log "mini_solve >>>>>>>>> 2nd degree"
      p3 = pop(); // A
      p4 = pop(); // B
      p5 = pop(); // C

      // B^2
      push(p4);
      push_integer(2);
      power();
      // 4AC
      push_integer(4);
      push(p3);
      multiply();
      push(p5);
      multiply();
      // B^2 - 4AC
      subtract();
      //(B^2 - 4AC)^(1/2)
      push_rational(1, 2);
      power();
      //p6 is (B^2 - 4AC)^(1/2)
      p6 = pop();
      push(p6);
      push(p4);
      subtract(); // -B + (B^2 - 4AC)^(1/2)

      // 1/2A
      push(p3);
      push_integer(2);
      multiply();
      divide();
      //simplify()
      //rationalize()
      // tos - 1 now is 1st root: (-B + (B^2 - 4AC)^(1/2)) / (2A)
      push(p6);
      push(p4);
      add();
      // tos - 1 now is  B + (B^2 - 4AC)^(1/2)
      // tos - 2: 1st root: (-B + (B^2 - 4AC)^(1/2)) / (2A)
      negate();
      // tos - 1 now is  -B -(B^2 - 4AC)^(1/2)
      // tos - 2: 1st root: (-B + (B^2 - 4AC)^(1/2)) / (2A)

      // 1/2A again
      push(p3);
      divide();
      push_rational(1, 2);
      multiply();
      //simplify()
      //rationalize()
      // tos - 1: 2nd root: (-B - (B^2 - 4AC)^(1/2)) / (2A)
      // tos - 2: 1st root: (-B + (B^2 - 4AC)^(1/2)) / (2A)
      restore();
      return;
    }
    //if (n == 4)
    if (n === 4 || n === 5) {
      p3 = pop(); // A
      p4 = pop(); // B
      p5 = pop(); // C
      p6 = pop(); // D

      // C - only related calculations
      push(p5);
      push(p5);
      multiply();
      R_c2 = pop();
      push(R_c2);
      push(p5);
      multiply();
      R_c3 = pop();
      // B - only related calculations
      push(p4);
      push(p4);
      multiply();
      R_b2 = pop();
      push(R_b2);
      push(p4);
      multiply();
      R_b3 = pop();
      push(R_b3);
      push(p6);
      multiply();
      R_b3_d = pop();
      push(R_b3_d);
      push_integer(-4);
      multiply();
      R_m4_b3_d = pop();
      push(R_b3);
      push_integer(2);
      multiply();
      R_2_b3 = pop();
      // A - only related calculations
      push(p3);
      push(p3);
      multiply();
      R_a2 = pop();
      push(R_a2);
      push(p3);
      multiply();
      R_a3 = pop();
      push_integer(3);
      push(p3);
      multiply();
      R_3_a = pop();
      push(R_a2);
      push(p6);
      multiply();
      R_a2_d = pop();
      push(R_a2_d);
      push(p6);
      multiply();
      R_a2_d2 = pop();
      push(R_a2_d);
      push_integer(27);
      multiply();
      R_27_a2_d = pop();
      push(R_a2_d2);
      push_integer(-27);
      multiply();
      R_m27_a2_d2 = pop();
      push(R_3_a);
      push_integer(2);
      multiply();
      R_6_a = pop();
      // mixed calculations
      push(p3);
      push(p5);
      multiply();
      R_a_c = pop();
      push(R_a_c);
      push(p4);
      multiply();
      R_a_b_c = pop();
      push(R_a_b_c);
      push(p6);
      multiply();
      R_a_b_c_d = pop();
      push(R_a_c);
      push_integer(3);
      multiply();
      R_3_a_c = pop();
      push_integer(-4);
      push(p3);
      push(R_c3);
      multiply();
      multiply();
      R_m4_a_c3 = pop();
      push(R_a_b_c);
      push_integer(9);
      multiply();
      negate();
      R_m9_a_b_c = pop();
      push(R_a_b_c_d);
      push_integer(18);
      multiply();
      R_18_a_b_c_d = pop();
      push(R_b2);
      push(R_3_a_c);
      subtract();
      R_DELTA0 = pop();
      push(R_b2);
      push(R_c2);
      multiply();
      R_b2_c2 = pop();
      push(p4);
      negate();
      push(R_3_a);
      divide();
      R_m_b_over_3a = pop();
      if (n === 4) {
        if (DEBUG) {
          console.log(">>>>>>>>>>>>>>>> actually using cubic formula <<<<<<<<<<<<<<< ");
        }
        //console.log ">>>> A:" + p3.toString()
        //console.log ">>>> B:" + p4.toString()
        //console.log ">>>> C:" + p5.toString()
        //console.log ">>>> D:" + p6.toString()
        if (DEBUG) {
          console.log("cubic: D0: " + R_DELTA0.toString());
        }
        push(R_DELTA0);
        push_integer(3);
        power();
        push_integer(4);
        multiply();
        R_4_DELTA03 = pop();
        push(R_DELTA0);
        simplify();
        absValFloat();
        R_DELTA0_toBeCheckedIfZero = pop();
        if (DEBUG) {
          console.log("cubic: D0 as float: " + R_DELTA0_toBeCheckedIfZero.toString());
        }
        //if isZeroAtomOrTensor(R_DELTA0_toBeCheckedIfZero)
        //  console.log " *********************************** D0 IS ZERO"

        // DETERMINANT
        push(R_18_a_b_c_d);
        push(R_m4_b3_d);
        push(R_b2_c2);
        push(R_m4_a_c3);
        push(R_m27_a2_d2);
        add();
        add();
        add();
        add();
        simplify();
        absValFloat();
        R_determinant = pop();
        if (DEBUG) {
          console.log("cubic: DETERMINANT: " + R_determinant.toString());
        }
        // R_DELTA1
        push(R_2_b3);
        push(R_m9_a_b_c);
        push(R_27_a2_d);
        add();
        add();
        R_DELTA1 = pop();
        if (DEBUG) {
          console.log("cubic: D1: " + R_DELTA1.toString());
        }
        // R_Q
        push(R_DELTA1);
        push_integer(2);
        power();
        push(R_4_DELTA03);
        subtract();
        push_rational(1, 2);
        power();
        simplify();
        R_Q = pop();
        if (isZeroAtomOrTensor(R_determinant)) {
          if (isZeroAtomOrTensor(R_DELTA0_toBeCheckedIfZero)) {
            if (DEBUG) {
              console.log(" cubic: DETERMINANT IS ZERO and delta0 is zero");
            }
            push(R_m_b_over_3a); // just same solution three times
            restore();
            return;
          } else {
            if (DEBUG) {
              console.log(" cubic: DETERMINANT IS ZERO and delta0 is not zero");
            }
            push(p3);
            push(p6);
            push_integer(9);
            multiply();
            multiply();
            push(p4);
            push(p5);
            multiply();
            subtract();
            push(R_DELTA0);
            push_integer(2);
            multiply();
            divide(); // first solution
            root_solution = pop();
            push(root_solution); // pushing two of them on the stack
            push(root_solution);
            // second solution here
            // 4abc
            push(R_a_b_c);
            push_integer(4);
            multiply();
            // -9a*a*d
            push(p3);
            push(p3);
            push(p6);
            push_integer(9);
            multiply();
            multiply();
            multiply();
            negate();
            // -9*b^3
            push(R_b3);
            negate();
            // sum the three terms
            add();
            add();
            // denominator is a*delta0
            push(p3);
            push(R_DELTA0);
            multiply();
            // build the fraction
            divide();
            restore();
            return;
          }
        }
        C_CHECKED_AS_NOT_ZERO = false;
        flipSignOFQSoCIsNotZero = false;
        while (!C_CHECKED_AS_NOT_ZERO) {
          // R_C
          push(R_Q);
          if (flipSignOFQSoCIsNotZero) {
            negate();
          }
          push(R_DELTA1);
          add();
          push_rational(1, 2);
          multiply();
          push_rational(1, 3);
          power();
          simplify();
          R_C = pop();
          if (DEBUG) {
            console.log("cubic: C: " + R_C.toString());
          }
          push(R_C);
          simplify();
          absValFloat();
          R_C_simplified_toCheckIfZero = pop();
          if (DEBUG) {
            console.log("cubic: C as absval and float: " + R_C_simplified_toCheckIfZero.toString());
          }
          if (isZeroAtomOrTensor(R_C_simplified_toCheckIfZero)) {
            if (DEBUG) {
              console.log(" cubic: C IS ZERO flipping the sign");
            }
            flipSignOFQSoCIsNotZero = true;
          } else {
            C_CHECKED_AS_NOT_ZERO = true;
          }
        }
        push(R_C);
        push(R_3_a);
        multiply();
        R_3_a_C = pop();
        push(R_3_a_C);
        push_integer(2);
        multiply();
        R_6_a_C = pop();
        // imaginary parts calculations
        push(imaginaryunit);
        push_integer(3);
        push_rational(1, 2);
        power();
        multiply();
        i_sqrt3 = pop();
        push_integer(1);
        push(i_sqrt3);
        add();
        one_plus_i_sqrt3 = pop();
        push_integer(1);
        push(i_sqrt3);
        subtract();
        one_minus_i_sqrt3 = pop();
        push(R_C);
        push(R_3_a);
        divide();
        R_C_over_3a = pop();
        // first solution
        push(R_m_b_over_3a); // first term
        push(R_C_over_3a);
        negate(); // second term
        push(R_DELTA0);
        push(R_3_a_C);
        divide();
        negate(); // third term
        // now add the three terms together
        add();
        add();
        simplify();
        // second solution
        push(R_m_b_over_3a); // first term
        push(R_C_over_3a);
        push(one_plus_i_sqrt3);
        multiply();
        push_integer(2);
        divide(); // second term
        push(one_minus_i_sqrt3);
        push(R_DELTA0);
        multiply();
        push(R_6_a_C);
        divide(); // third term
        // now add the three terms together
        add();
        add();
        simplify();
        // third solution
        push(R_m_b_over_3a); // first term
        push(R_C_over_3a);
        push(one_minus_i_sqrt3);
        multiply();
        push_integer(2);
        divide(); // second term
        push(one_plus_i_sqrt3);
        push(R_DELTA0);
        multiply();
        push(R_6_a_C);
        divide(); // third term
        // now add the three terms together
        add();
        add();
        simplify();
        restore();
        return;
      }
      // See http://www.sscc.edu/home/jdavidso/Math/Catalog/Polynomials/Fourth/Fourth.html
      // for a description of general shapes and properties of fourth degree polynomials
      if (n === 5) {
        if (DEBUG) {
          console.log(">>>>>>>>>>>>>>>> actually using quartic formula <<<<<<<<<<<<<<< ");
        }
        p7 = pop(); // E
        if (isZeroAtomOrTensor(p4) && isZeroAtomOrTensor(p6) && !isZeroAtomOrTensor(p5) && !isZeroAtomOrTensor(p7)) {
          if (DEBUG) {
            console.log("biquadratic case");
          }
          push(p3);
          push(symbol(SECRETX));
          push_integer(2);
          power();
          multiply();
          push(p5);
          push(symbol(SECRETX));
          multiply();
          push(p7);
          add();
          add();
          push(symbol(SECRETX));
          roots();
          biquadraticSolutions = pop();
          ref2 = biquadraticSolutions.tensor.elem;
          for (l1 = 0, len = ref2.length; l1 < len; l1++) {
            eachSolution = ref2[l1];
            push(eachSolution);
            push_rational(1, 2);
            power();
            simplify();
            push(eachSolution);
            push_rational(1, 2);
            power();
            negate();
            simplify();
          }
          restore();
          return;
        }
        // D - only related calculations
        push(p6);
        push(p6);
        multiply();
        R_d2 = pop();
        // E - only related calculations
        push(p7);
        push(p7);
        multiply();
        R_e2 = pop();
        push(R_e2);
        push(p7);
        multiply();
        R_e3 = pop();
        // DETERMINANT
        push_integer(256);
        push(R_a3);
        push(R_e3);
        multiply();
        multiply(); // first term 256 a^3 e^3
        push_integer(-192);
        push(R_a2_d);
        push(R_e2);
        push(p4);
        multiply();
        multiply();
        multiply(); // second term -192 a^3 b d e^2
        push_integer(-128);
        push(R_a2);
        push(R_c2);
        push(R_e2);
        multiply();
        multiply();
        multiply(); // third term -128 a^2 c^2 e^2
        push_integer(144);
        push(R_a2_d2);
        push(p5);
        push(p7);
        multiply();
        multiply();
        multiply(); // fourth term 144 a^2 c d^2 e
        push(R_m27_a2_d2);
        push(R_d2);
        multiply(); // fifth term -27 a^2 d^4
        push_integer(144);
        push(R_a_b_c);
        push(p4);
        push(R_e2);
        multiply();
        multiply();
        multiply(); // sixth term 144 a b^2 c e^2
        push_integer(-6);
        push(p3);
        push(R_b2);
        push(R_d2);
        push(p7);
        multiply();
        multiply();
        multiply();
        multiply(); // seventh term -6 a b^2 d^2 e
        push_integer(-80);
        push(R_a_b_c_d);
        push(p5);
        push(p7);
        multiply();
        multiply();
        multiply(); // eigth term -80 a b c^2 d e
        push_integer(18);
        push(R_a_b_c_d);
        push(R_d2);
        multiply();
        multiply(); // ninth term 18 a b c d^3
        push_integer(16);
        push(R_a_c);
        push(R_c3);
        push(p7);
        multiply();
        multiply();
        multiply(); // tenth term 16 a c^4 e
        push_integer(-4);
        push(R_a_c);
        push(R_c2);
        push(R_d2);
        multiply();
        multiply();
        multiply(); // eleventh term -4 a c^3 d^2
        push_integer(-27);
        push(R_b3);
        push(p4);
        push(R_e2);
        multiply();
        multiply();
        multiply(); // twelveth term -27 b^4 e^2
        push_integer(18);
        push(R_b3_d);
        push(p5);
        push(p7);
        multiply();
        multiply();
        multiply(); // thirteenth term 18 b^3 c d e
        push(R_m4_b3_d);
        push(R_d2);
        multiply(); // fourteenth term -4 b^3 d^3
        push_integer(-4);
        push(R_b2_c2);
        push(p5);
        push(p7);
        multiply();
        multiply();
        multiply(); // fifteenth term -4 b^2 c^3 e
        push(R_b2_c2);
        push(R_d2);
        multiply(); // sixteenth term b^2 c^2 d^2

        // add together the sixteen terms by doing
        // fifteen adds
        add();
        add();
        add();
        add();
        add();
        add();
        add();
        add();
        add();
        add();
        add();
        add();
        add();
        add();
        add();
        R_determinant = pop();
        if (DEBUG) {
          console.log("R_determinant: " + R_determinant.toString());
        }
        // DELTA0
        push(R_c2); // term one of DELTA0
        push_integer(-3);
        push(p4);
        push(p6);
        multiply();
        multiply(); // term two of DELTA0
        push_integer(12);
        push(p3);
        push(p7);
        multiply();
        multiply(); // term three of DELTA0

        // add the three terms together
        add();
        add();
        R_DELTA0 = pop();
        if (DEBUG) {
          console.log("R_DELTA0: " + R_DELTA0.toString());
        }
        // DELTA1
        push_integer(2);
        push(R_c3);
        multiply();
        push_integer(-9);
        push(p4);
        push(p5);
        push(p6);
        multiply();
        multiply();
        multiply();
        push_integer(27);
        push(R_b2);
        push(p7);
        multiply();
        multiply();
        push_integer(27);
        push(p3);
        push(R_d2);
        multiply();
        multiply();
        push_integer(-72);
        push(R_a_c);
        push(p7);
        multiply();
        multiply();
        // add the five terms together
        add();
        add();
        add();
        add();
        R_DELTA1 = pop();
        if (DEBUG) {
          console.log("R_DELTA1: " + R_DELTA1.toString());
        }
        // p
        push_integer(8);
        push(R_a_c);
        multiply();
        push_integer(-3);
        push(R_b2);
        multiply();
        add();
        push_integer(8);
        push(R_a2);
        multiply();
        divide();
        R_p = pop();
        if (DEBUG) {
          console.log("p: " + R_p.toString());
        }
        // q
        push(R_b3);
        push_integer(-4);
        push(R_a_b_c);
        multiply();
        push_integer(8);
        push(R_a2_d);
        multiply();
        add();
        add();
        push_integer(8);
        push(R_a3);
        multiply();
        divide();
        R_q = pop();
        if (DEBUG) {
          console.log("q: " + R_q.toString());
        }
        if (DEBUG) {
          console.log("tos 1 " + tos);
        }
        if (!isZeroAtomOrTensor(p4)) {
          if (DEBUG) {
            console.log("tos 2 " + tos);
          }
          push_integer(8);
          push(p5);
          push(p3);
          multiply();
          multiply();
          push_integer(-3);
          push(p4);
          push_integer(2);
          power();
          multiply();
          add();
          push_integer(8);
          push(p3);
          push_integer(2);
          power();
          multiply();
          divide();
          R_p = pop();
          if (DEBUG) {
            console.log("p for depressed quartic: " + R_p.toString());
          }
          push(p4);
          push_integer(3);
          power();
          push_integer(-4);
          push(p3);
          push(p4);
          push(p5);
          multiply();
          multiply();
          multiply();
          push_integer(8);
          push(p6);
          push(p3);
          push_integer(2);
          power();
          multiply();
          multiply();
          add();
          add();
          push_integer(8);
          push(p3);
          push_integer(3);
          power();
          multiply();
          divide();
          R_q = pop();
          if (DEBUG) {
            console.log("q for depressed quartic: " + R_q.toString());
          }
          // convert to depressed quartic
          push(p4);
          push_integer(4);
          power();
          push_integer(-3);
          multiply();
          push_integer(256);
          push(R_a3);
          push(p7);
          multiply();
          multiply();
          push_integer(-64);
          push(R_a2_d);
          push(p4);
          multiply();
          multiply();
          push_integer(16);
          push(R_b2);
          push(p3);
          push(p5);
          multiply();
          multiply();
          multiply();
          add();
          add();
          add();
          push_integer(256);
          push(p3);
          push_integer(4);
          power();
          multiply();
          divide();
          R_r = pop();
          if (DEBUG) {
            console.log("r for depressed quartic: " + R_r.toString());
          }
          if (DEBUG) {
            console.log("tos 4 " + tos);
          }
          push(symbol(SECRETX));
          push_integer(4);
          power();
          if (DEBUG) {
            console.log("4 * x^4: " + stack[tos - 1].toString());
          }
          push(R_p);
          push(symbol(SECRETX));
          push_integer(2);
          power();
          multiply();
          if (DEBUG) {
            console.log("R_p * x^2: " + stack[tos - 1].toString());
          }
          push(R_q);
          push(symbol(SECRETX));
          multiply();
          if (DEBUG) {
            console.log("R_q * x: " + stack[tos - 1].toString());
          }
          push(R_r);
          if (DEBUG) {
            console.log("R_r: " + stack[tos - 1].toString());
          }
          add();
          add();
          add();
          simplify();
          if (DEBUG) {
            console.log("solving depressed quartic: " + stack[tos - 1].toString());
          }
          push(symbol(SECRETX));
          roots();
          depressedSolutions = pop();
          if (DEBUG) {
            console.log("depressedSolutions: " + depressedSolutions);
          }
          ref3 = depressedSolutions.tensor.elem;
          for (m1 = 0, len1 = ref3.length; m1 < len1; m1++) {
            eachSolution = ref3[m1];
            push(eachSolution);
            push(p4);
            push_integer(4);
            push(p3);
            multiply();
            divide();
            subtract();
            simplify();
            if (DEBUG) {
              console.log("solution from depressed: " + stack[tos - 1].toString());
            }
          }
          restore();
          return;
        } else {
          R_p = p5;
          R_q = p6;
          R_r = p7;
          /*
           * Descartes' solution
           * https://en.wikipedia.org/wiki/Quartic_function#Descartes.27_solution
           * finding the "u" in the depressed equation
           push_integer(2)
          push(R_p)
          multiply()
          coeff2 = pop()
           push_integer(-4)
          push(R_p)
          push_integer(2)
          power()
          multiply()
          push(R_r)
          multiply()
          coeff3 = pop()
           push(R_q)
          push_integer(2)
          power()
          negate()
          coeff4 = pop()
            * now build the polynomial
          push(symbol(SECRETX))
          push_integer(3)
          power()
           push(coeff2)
          push(symbol(SECRETX))
          push_integer(2)
          power()
          multiply()
           push(coeff3)
          push(symbol(SECRETX))
          multiply()
           push(coeff4)
           add()
          add()
          add()
           console.log("Descarte's resolventCubic: " +  stack[tos-1].toString())
          push(symbol(SECRETX))
           roots()
           resolventCubicSolutions = pop()
          console.log("Descarte's resolventCubic solutions: " +  resolventCubicSolutions)
          console.log("tos: " +  tos)
           R_u = null
          #R_u = resolventCubicSolutions.tensor.elem[1]
          for eachSolution in resolventCubicSolutions.tensor.elem
            console.log("examining solution: " +  eachSolution)
            push(eachSolution)
            push_integer(2)
            multiply()
            push(R_p)
            add()
             absValFloat()
            toBeCheckedIFZero = pop()
            console.log("abs value is: " +  eachSolution)
            if !isZeroAtomOrTensor(toBeCheckedIFZero)
              R_u = eachSolution
              break
           console.log("chosen solution: " +  R_u)
           push(R_u)
          negate()
          R_s = pop()
           push(R_p)
          push(R_u)
          push_integer(2)
          power()
          push(R_q)
          push(R_u)
          divide()
          add()
          add()
          push_integer(2)
          divide()
          R_t = pop()
           push(R_p)
          push(R_u)
          push_integer(2)
          power()
          push(R_q)
          push(R_u)
          divide()
          subtract()
          add()
          push_integer(2)
          divide()
          R_v = pop()
            * factoring the quartic into two quadratics:
            * now build the polynomial
          push(symbol(SECRETX))
          push_integer(2)
          power()
           push(R_s)
          push(symbol(SECRETX))
          multiply()
           push(R_t)
           add()
          add()
           console.log("factored quartic 1: " + stack[tos-1].toString())
           push(symbol(SECRETX))
          push_integer(2)
          power()
           push(R_u)
          push(symbol(SECRETX))
          multiply()
           push(R_v)
           add()
          add()
           console.log("factored quartic 2: " + stack[tos-1].toString())
          pop()
           restore()
          return
           */
          // Ferrari's solution
          // https://en.wikipedia.org/wiki/Quartic_function#Ferrari.27s_solution
          // finding the "m" in the depressed equation
          push_rational(5, 2);
          push(R_p);
          multiply();
          coeff2 = pop();
          push_integer(2);
          push(R_p);
          push_integer(2);
          power();
          multiply();
          push(R_r);
          subtract();
          coeff3 = pop();
          push(R_p);
          push_integer(3);
          power();
          push_integer(2);
          divide();
          push_rational(-1, 2);
          push(R_p);
          push(R_r);
          multiply();
          multiply();
          push_rational(-1, 8);
          push(R_q);
          push_integer(2);
          power();
          multiply();
          add();
          add();
          coeff4 = pop();
          push(symbol(SECRETX));
          push_integer(3);
          power();
          push(coeff2);
          push(symbol(SECRETX));
          push_integer(2);
          power();
          multiply();
          push(coeff3);
          push(symbol(SECRETX));
          multiply();
          push(coeff4);
          add();
          add();
          add();
          if (DEBUG) {
            console.log("resolventCubic: " + stack[tos - 1].toString());
          }
          push(symbol(SECRETX));
          roots();
          resolventCubicSolutions = pop();
          if (DEBUG) {
            console.log("resolventCubicSolutions: " + resolventCubicSolutions);
          }
          R_m = null;
          ref4 = resolventCubicSolutions.tensor.elem;
          //R_m = resolventCubicSolutions.tensor.elem[1]
          for (n1 = 0, len2 = ref4.length; n1 < len2; n1++) {
            eachSolution = ref4[n1];
            if (DEBUG) {
              console.log("examining solution: " + eachSolution);
            }
            push(eachSolution);
            push_integer(2);
            multiply();
            push(R_p);
            add();
            absValFloat();
            toBeCheckedIFZero = pop();
            if (DEBUG) {
              console.log("abs value is: " + eachSolution);
            }
            if (!isZeroAtomOrTensor(toBeCheckedIFZero)) {
              R_m = eachSolution;
              break;
            }
          }
          if (DEBUG) {
            console.log("chosen solution: " + R_m);
          }
          push(R_m);
          push_integer(2);
          multiply();
          push(R_p);
          add();
          push_rational(1, 2);
          power();
          simplify();
          sqrtPPlus2M = pop();
          push(R_q);
          push_integer(2);
          multiply();
          push(sqrtPPlus2M);
          divide();
          simplify();
          TwoQOversqrtPPlus2M = pop();
          push(R_p);
          push_integer(3);
          multiply();
          push(R_m);
          push_integer(2);
          multiply();
          add();
          ThreePPlus2M = pop();
          // solution1
          push(sqrtPPlus2M);
          push(ThreePPlus2M);
          push(TwoQOversqrtPPlus2M);
          add();
          negate();
          push_rational(1, 2);
          power();
          simplify();
          add();
          push_integer(2);
          divide();
          // solution2
          push(sqrtPPlus2M);
          push(ThreePPlus2M);
          push(TwoQOversqrtPPlus2M);
          add();
          negate();
          push_rational(1, 2);
          power();
          simplify();
          subtract();
          push_integer(2);
          divide();
          // solution3
          push(sqrtPPlus2M);
          negate();
          push(ThreePPlus2M);
          push(TwoQOversqrtPPlus2M);
          subtract();
          negate();
          push_rational(1, 2);
          power();
          simplify();
          add();
          push_integer(2);
          divide();
          // solution4
          push(sqrtPPlus2M);
          negate();
          push(ThreePPlus2M);
          push(TwoQOversqrtPPlus2M);
          subtract();
          negate();
          push_rational(1, 2);
          power();
          simplify();
          subtract();
          push_integer(2);
          divide();
          restore();
          return;
        }
        // Q ---------------------------
        push(R_determinant);
        simplify();
        absValFloat();
        R_determinant_simplified_toCheckIfZero = pop();
        push(R_DELTA0);
        simplify();
        absValFloat();
        R_DELTA0_simplified_toCheckIfZero = pop();
        S_CHECKED_AS_NOT_ZERO = false;
        choiceOfRadicalInQSoSIsNotZero = 0;
        while (!S_CHECKED_AS_NOT_ZERO) {
          Q_CHECKED_AS_NOT_ZERO = false;
          flipSignOFRadicalSoQIsNotZero = false;
          while (!Q_CHECKED_AS_NOT_ZERO) {
            // D1 under the outer radical
            push(R_DELTA1);
            // D1^2 under the inner radical
            push(R_DELTA1);
            push_integer(2);
            power();
            // 4*D0^3 under the inner radical
            push_integer(-4);
            push(R_DELTA0);
            push_integer(3);
            power();
            multiply();
            // addition under the inner radical
            add();
            // the second radical
            push_rational(1, 2);
            power();
            if (flipSignOFRadicalSoQIsNotZero) {
              negate();
            }
            // the addition under the outer radical
            add();
            // content of outer radical divided by two
            push_integer(2);
            divide();
            if (DEBUG) {
              console.log("content of cubic root: " + stack[tos - 1].toString());
            }
            // outer radical calculation: cubic root
            // now we actually have to find all the roots
            // because we have to pick the one that makes S != 0
            push_rational(1, 3);
            power();
            simplify();
            R_principalCubicRoot = pop();
            if (DEBUG) {
              console.log("principal cubic root: " + R_principalCubicRoot.toString());
            }
            if (DEBUG) {
              console.log("tos : " + tos);
            }
            if (choiceOfRadicalInQSoSIsNotZero === 0) {
              if (DEBUG) {
                console.log("chosing principal cubic root");
              }
              push(R_principalCubicRoot);
            } else if (choiceOfRadicalInQSoSIsNotZero === 1) {
              if (DEBUG) {
                console.log("chosing cubic root beyond principal");
              }
              push(R_principalCubicRoot);
              push_rational(-1, 2);
              multiply();
              push_integer(3);
              push_rational(1, 2);
              power();
              push(imaginaryunit);
              multiply();
              push_rational(-1, 2);
              multiply();
              push(R_principalCubicRoot);
              multiply();
              add();
            } else if (choiceOfRadicalInQSoSIsNotZero === 1) {
              if (DEBUG) {
                console.log("chosing cubic root beyond beyond principal");
              }
              push(R_principalCubicRoot);
              push_rational(-1, 2);
              multiply();
              push_integer(3);
              push_rational(1, 2);
              power();
              push(imaginaryunit);
              multiply();
              push_rational(1, 2);
              multiply();
              push(R_principalCubicRoot);
              multiply();
              add();
            }
            simplify();
            R_Q = pop();
            if (DEBUG) {
              console.log("Q " + R_Q.toString());
            }
            if (DEBUG) {
              console.log("tos: " + tos);
            }
            push(R_Q);
            simplify();
            absValFloat();
            R_Q_simplified_toCheckIfZero = pop();
            if (DEBUG) {
              console.log("Q simplified and abs" + R_Q_simplified_toCheckIfZero.toString());
            }
            if (isZeroAtomOrTensor(R_Q_simplified_toCheckIfZero) && !isZeroAtomOrTensor(R_determinant_simplified_toCheckIfZero) && isZeroAtomOrTensor(R_DELTA0_simplified_toCheckIfZero)) {
              if (DEBUG) {
                console.log(" *********************************** Q IS ZERO and it matters, flipping the sign");
              }
              flipSignOFRadicalSoQIsNotZero = true;
            } else {
              Q_CHECKED_AS_NOT_ZERO = true;
            }
            if (DEBUG) {
              console.log("tos: " + tos);
            }
          }
          // S
          push_rational(-2, 3);
          push(R_p);
          multiply();
          push(R_Q);
          push(R_DELTA0);
          push(R_Q);
          divide();
          add();
          //rationalize()
          //console.log("rationalised: " + stack[tos-1].toString())
          //simplify()
          push(R_3_a);
          divide();
          add();
          push_rational(1, 2);
          power();
          push_integer(2);
          divide();
          show_power_debug = true;
          simplify();
          R_S = pop();
          if (DEBUG) {
            console.log("S " + R_S.toString());
          }
          // now check if S is zero
          push(R_S);
          simplify();
          absValFloat();
          R_S_simplified_toCheckIfZero = pop();
          if (DEBUG) {
            console.log("S " + R_S_simplified_toCheckIfZero.toString());
          }
          if (isZeroAtomOrTensor(R_S_simplified_toCheckIfZero)) {
            if (DEBUG) {
              console.log(" *********************************** S IS ZERO chosing another cubic root");
            }
            choiceOfRadicalInQSoSIsNotZero++;
          } else {
            S_CHECKED_AS_NOT_ZERO = true;
          }
          if (DEBUG) {
            console.log("tos: " + tos);
          }
        }
        // ----------------------------
        if (DEBUG) {
          console.log("tos: " + tos);
        }
        push(p4);
        negate();
        push(p3);
        push_integer(4);
        multiply();
        divide();
        R_minus_b_over_4a = pop();
        push_integer(-4);
        push(R_S);
        push_integer(2);
        power();
        multiply();
        push_integer(2);
        push(R_p);
        multiply();
        subtract();
        R_minus_4S2_minus_2p = pop();
        push(R_q);
        push(R_S);
        divide();
        R_q_over_S = pop();
        if (DEBUG) {
          console.log("tos before putting together the 4 solutions: " + tos);
        }
        // first solution
        push(R_minus_b_over_4a); // first term
        push(R_S);
        subtract();
        push(R_minus_4S2_minus_2p);
        push(R_q_over_S);
        add();
        push_rational(1, 2);
        power();
        push_integer(2);
        divide();
        add();
        simplify();
        // second solution
        push(R_minus_b_over_4a); // first term
        push(R_S);
        subtract();
        push(R_minus_4S2_minus_2p);
        push(R_q_over_S);
        add();
        push_rational(1, 2);
        power();
        push_integer(2);
        divide();
        subtract();
        simplify();
        // third solution
        push(R_minus_b_over_4a); // first term
        push(R_S);
        add();
        push(R_minus_4S2_minus_2p);
        push(R_q_over_S);
        subtract();
        push_rational(1, 2);
        power();
        push_integer(2);
        divide();
        add();
        simplify();
        // fourth solution
        push(R_minus_b_over_4a); // first term
        push(R_S);
        add();
        push(R_minus_4S2_minus_2p);
        push(R_q_over_S);
        subtract();
        push_rational(1, 2);
        power();
        push_integer(2);
        divide();
        subtract();
        simplify();
        restore();
        return;
      }
    }
    moveTos(tos - n);
    return restore();
  };
  Eval_round = function Eval_round() {
    push(cadr(p1));
    Eval();
    return yround();
  };
  yround = function yround() {
    save();
    yyround();
    return restore();
  };
  yyround = function yyround() {
    var d;
    d = 0.0;
    p1 = pop();
    if (!isNumericAtom(p1)) {
      push_symbol(ROUND);
      push(p1);
      list(2);
      return;
    }
    if (isdouble(p1)) {
      d = Math.round(p1.d);
      push_double(d);
      return;
    }
    if (isinteger(p1)) {
      push(p1);
      return;
    }
    push(p1);
    _yyfloat();
    p1 = pop();
    return push_integer(Math.round(p1.d));
  };

  // This scanner uses the recursive descent method.

  // The char pointers token_str and scan_str are pointers to the input string as
  // in the following example.

  //  | g | a | m | m | a |   | a | l | p | h | a |
  //    ^                   ^
  //    token_str           scan_str

  // The char pointer token_buf points to a malloc buffer.

  //  | g | a | m | m | a | \0 |
  //    ^
  //    token_buf

  // In the sequence of method invocations for scanning,
  // first we do the calls for scanning the operands
  // of the operators of least precedence.
  // So, since precedence in maths goes something like
  // (form high to low) exponents, mult/div, plus/minus
  // so we scan first for terms, then factors, then powers.
  // That's the general idea, but of course we also have to deal
  // with things like parens, non-commutative
  // dot (or inner) product, assignments and tests,
  // function calls etc.
  // Note that a^1/2 is, correctly, a/2, not, incorrectly, sqrt(a),
  // see comment in related test in power.coffee for more about this.

  //  Notes:

  //  Formerly add() and multiply() were used to construct expressions but
  //  this preevaluation caused problems.

  //  For example, suppose A has the floating point value inf.

  //  Before, the expression A/A resulted in 1 because the scanner would
  //  divide the symbols.

  //  After removing add() and multiply(), A/A results in nan which is the
  //  correct result.

  //  The functions negate() and inverse() are used but they do not cause
  //  problems with preevaluation of symbols.
  T_INTEGER = 1001;
  T_DOUBLE = 1002;
  T_SYMBOL = 1003;
  T_FUNCTION = 1004;
  T_NEWLINE = 1006;
  T_STRING = 1007;
  T_GTEQ = 1008;
  T_LTEQ = 1009;
  T_EQ = 1010;
  T_NEQ = 1011;
  T_QUOTASSIGN = 1012;
  token = "";
  newline_flag = 0;
  meta_mode = 0;
  input_str = 0;
  scan_str = 0;
  token_str = 0;
  token_buf = 0;
  lastFoundSymbol = null;
  symbolsRightOfAssignment = null;
  symbolsLeftOfAssignment = null;
  isSymbolLeftOfAssignment = null;
  scanningParameters = null;
  functionInvokationsScanningStack = null;
  skipRootVariableToBeSolved = false;
  assignmentFound = null;

  // Returns number of chars scanned and expr on stack.

  // Returns zero when nothing left to scan.

  // takes a string
  scanned = "";
  scan = function scan(s) {
    if (DEBUG) {
      console.log("#### scanning " + s);
    }
    //if s=="y=x"
    //  debugger
    //if s=="y"
    //  debugger
    //if s=="i=sqrt(-1)"
    //  debugger
    lastFoundSymbol = null;
    symbolsRightOfAssignment = [];
    symbolsLeftOfAssignment = [];
    isSymbolLeftOfAssignment = true;
    scanningParameters = [];
    functionInvokationsScanningStack = [""];
    assignmentFound = false;
    scanned = s;
    meta_mode = 0;
    expanding++;
    input_str = 0;
    scan_str = 0;
    get_next_token();
    if (token === "") {
      push(symbol(NIL));
      expanding--;
      return 0;
    }
    scan_stmt();
    expanding--;
    if (!assignmentFound) {
      symbolsInExpressionsWithoutAssignments = symbolsInExpressionsWithoutAssignments.concat(symbolsLeftOfAssignment);
    }
    return token_str - input_str;
  };

  // takes a string
  scan_meta = function scan_meta(s) {
    scanned = s;
    meta_mode = 1;
    expanding++;
    input_str = 0;
    scan_str = 0;
    get_next_token();
    if (token === "") {
      push(symbol(NIL));
      expanding--;
      return 0;
    }
    scan_stmt();
    expanding--;
    return token_str - input_str;
  };
  scan_stmt = function scan_stmt() {
    var assignmentIsOfQuotedType, existingDependencies, i, indexOfSymbolLeftOfAssignment, l1, len, len1, m1, symbolLeftOfAssignment;
    scan_relation();
    assignmentIsOfQuotedType = false;
    if (token === T_QUOTASSIGN) {
      assignmentIsOfQuotedType = true;
    }
    if (token === T_QUOTASSIGN || token === '=') {
      symbolLeftOfAssignment = lastFoundSymbol;
      if (DEBUG) {
        console.log("assignment!");
      }
      assignmentFound = true;
      isSymbolLeftOfAssignment = false;
      get_next_token();
      push_symbol(SETQ);
      swap();
      // if it's a := then add a quote
      if (assignmentIsOfQuotedType) {
        push_symbol(QUOTE);
      }
      scan_relation();
      // if it's a := then you have to list
      // together the quote and its argument
      if (assignmentIsOfQuotedType) {
        list(2);
      }
      list(3);
      isSymbolLeftOfAssignment = true;
      if (codeGen) {
        // in case of re-assignment, the symbol on the
        // left will also be in the set of the symbols
        // on the right. In that case just remove it from
        // the symbols on the right.
        indexOfSymbolLeftOfAssignment = symbolsRightOfAssignment.indexOf(symbolLeftOfAssignment);
        if (indexOfSymbolLeftOfAssignment !== -1) {
          symbolsRightOfAssignment.splice(indexOfSymbolLeftOfAssignment, 1);
          symbolsHavingReassignments.push(symbolLeftOfAssignment);
        }

        // print out the immediate dependencies
        if (DEBUG) {
          console.log("locally, " + symbolLeftOfAssignment + " depends on: ");
          for (l1 = 0, len = symbolsRightOfAssignment.length; l1 < len; l1++) {
            i = symbolsRightOfAssignment[l1];
            console.log("  " + i);
          }
        }
        // ok add the local dependencies to the existing
        // dependencies of this left-value symbol

        // create the exiting dependencies list if it doesn't exist
        if (symbolsDependencies[symbolLeftOfAssignment] == null) {
          symbolsDependencies[symbolLeftOfAssignment] = [];
        }
        existingDependencies = symbolsDependencies[symbolLeftOfAssignment];
        // copy over the new dependencies to the existing
        // dependencies avoiding repetitions
        for (m1 = 0, len1 = symbolsRightOfAssignment.length; m1 < len1; m1++) {
          i = symbolsRightOfAssignment[m1];
          if (existingDependencies.indexOf(i) === -1) {
            existingDependencies.push(i);
          }
        }
        return symbolsRightOfAssignment = [];
      }
    }
  };
  scan_relation = function scan_relation() {
    scan_expression();
    switch (token) {
      case T_EQ:
        push_symbol(TESTEQ);
        swap();
        get_next_token();
        scan_expression();
        return list(3);
      case T_NEQ:
        push_symbol(NOT);
        swap();
        push_symbol(TESTEQ);
        swap();
        get_next_token();
        scan_expression();
        list(3);
        return list(2);
      case T_LTEQ:
        push_symbol(TESTLE);
        swap();
        get_next_token();
        scan_expression();
        return list(3);
      case T_GTEQ:
        push_symbol(TESTGE);
        swap();
        get_next_token();
        scan_expression();
        return list(3);
      case '<':
        push_symbol(TESTLT);
        swap();
        get_next_token();
        scan_expression();
        return list(3);
      case '>':
        push_symbol(TESTGT);
        swap();
        get_next_token();
        scan_expression();
        return list(3);
    }
  };
  scan_expression = function scan_expression() {
    var h;
    h = tos;
    switch (token) {
      case '+':
        get_next_token();
        scan_term();
        break;
      case '-':
        get_next_token();
        scan_term();
        negate();
        break;
      default:
        scan_term();
    }
    while (newline_flag === 0 && (token === '+' || token === '-')) {
      if (token === '+') {
        get_next_token();
        scan_term();
      } else {
        get_next_token();
        scan_term();
        negate();
      }
    }
    if (tos - h > 1) {
      list(tos - h);
      push_symbol(ADD);
      swap();
      return cons();
    }
  };
  is_factor = function is_factor() {
    if ((typeof token.charCodeAt === "function" ? token.charCodeAt(0) : void 0) === dotprod_unicode) {
      return 1;
    }
    switch (token) {
      case '*':
      case '/':
        return 1;
      case '(':
      case T_SYMBOL:
      case T_FUNCTION:
      case T_INTEGER:
      case T_DOUBLE:
      case T_STRING:
        if (newline_flag) {
          // implicit mul can't cross line
          scan_str = token_str; // better error display
          return 0;
        } else {
          return 1;
        }
    }
    return 0;
  };
  simplify_1_in_products = function simplify_1_in_products(tos, h) {
    if (tos > h && isrational(stack[tos - 1]) && equaln(stack[tos - 1], 1)) {
      return pop();
    }
  };

  // calculate away consecutive constants
  multiply_consecutive_constants = function multiply_consecutive_constants(tos, h) {
    if (tos > h + 1 && isNumericAtom(stack[tos - 2]) && isNumericAtom(stack[tos - 1])) {
      return multiply();
    }
  };
  scan_term = function scan_term() {
    var h;
    h = tos;
    scan_factor();
    if (parse_time_simplifications) {
      simplify_1_in_products(tos, h);
    }
    while (is_factor()) {
      if (token === '*') {
        get_next_token();
        scan_factor();
      } else if (token === '/') {
        // in case of 1/... then
        // we scanned the 1, we get rid
        // of it because otherwise it becomes
        // an extra factor that wasn't there and
        // things like
        // 1/(2*a) become 1*(1/(2*a))
        simplify_1_in_products(tos, h);
        get_next_token();
        scan_factor();
        inverse();
      } else if ((typeof token.charCodeAt === "function" ? token.charCodeAt(0) : void 0) === dotprod_unicode) {
        get_next_token();
        push_symbol(INNER);
        swap();
        scan_factor();
        list(3);
      } else {
        scan_factor();
      }
      if (parse_time_simplifications) {
        multiply_consecutive_constants(tos, h);
        simplify_1_in_products(tos, h);
      }
    }
    if (h === tos) {
      return push_integer(1);
    } else if (tos - h > 1) {
      list(tos - h);
      push_symbol(MULTIPLY);
      swap();
      return cons();
    }
  };
  scan_power = function scan_power() {
    if (token === '^') {
      get_next_token();
      push_symbol(POWER);
      swap();
      scan_factor();
      return list(3);
    }
  };
  scan_index = function scan_index(h) {
    //console.log "[ as index"
    get_next_token();
    push_symbol(INDEX);
    swap();
    scan_expression();
    while (token === ',') {
      get_next_token();
      scan_expression();
    }
    if (token !== ']') {
      scan_error("] expected");
    }
    get_next_token();
    return list(tos - h);
  };
  scan_factor = function scan_factor() {
    var firstFactorIsNumber, h;
    h = tos;
    //console.log "scan_factor token: " + token
    firstFactorIsNumber = false;
    if (token === '(') {
      scan_subexpr();
    } else if (token === T_SYMBOL) {
      scan_symbol();
    } else if (token === T_FUNCTION) {
      scan_function_call_with_function_name();
    } else if (token === '[') {
      //console.log "[ as tensor"
      //debugger
      scan_tensor();
    } else if (token === T_INTEGER) {
      firstFactorIsNumber = true;
      bignum_scan_integer(token_buf);
      get_next_token();
    } else if (token === T_DOUBLE) {
      firstFactorIsNumber = true;
      bignum_scan_float(token_buf);
      get_next_token();
    } else if (token === T_STRING) {
      scan_string();
    } else {
      scan_error("syntax error");
    }
    // after the main initial part of the factor that
    // we just scanned above,
    // we can get an arbitrary about of appendages
    // of the form ...[...](...)...
    // If the main part is not a number, then these are all, respectively,
    //  - index references (as opposed to tensor definition) and
    //  - function calls without an explicit function name
    //    (instead of subexpressions or parameters of function
    //    definitions or function calls with an explicit function
    //    name), respectively
    while (token === '[' || token === '(' && newline_flag === 0 && !firstFactorIsNumber) {
      if (token === '[') {
        scan_index(h);
      } else if (token === '(') {
        //console.log "( as function call without function name "
        scan_function_call_without_function_name();
      }
    }
    while (token === '!') {
      get_next_token();
      push_symbol(FACTORIAL);
      swap();
      list(2);
    }
    while ((typeof token.charCodeAt === "function" ? token.charCodeAt(0) : void 0) === transpose_unicode) {
      get_next_token();
      push_symbol(TRANSPOSE);
      swap();
      list(2);
    }
    return scan_power();
  };
  addSymbolRightOfAssignment = function addSymbolRightOfAssignment(theSymbol) {
    var i, l1, prefixVar, ref2;
    if (predefinedSymbolsInGlobalScope_doNotTrackInDependencies.indexOf(theSymbol) === -1 && symbolsRightOfAssignment.indexOf(theSymbol) === -1 && symbolsRightOfAssignment.indexOf("'" + theSymbol) === -1 && !skipRootVariableToBeSolved) {
      if (DEBUG) {
        console.log("... adding symbol: " + theSymbol + " to the set of the symbols right of assignment");
      }
      prefixVar = "";
      for (i = l1 = 1, ref2 = functionInvokationsScanningStack.length; 1 <= ref2 ? l1 < ref2 : l1 > ref2; i = 1 <= ref2 ? ++l1 : --l1) {
        if (functionInvokationsScanningStack[i] !== "") {
          prefixVar += functionInvokationsScanningStack[i] + "_" + i + "_";
        }
      }
      theSymbol = prefixVar + theSymbol;
      return symbolsRightOfAssignment.push(theSymbol);
    }
  };
  addSymbolLeftOfAssignment = function addSymbolLeftOfAssignment(theSymbol) {
    var i, l1, prefixVar, ref2;
    if (predefinedSymbolsInGlobalScope_doNotTrackInDependencies.indexOf(theSymbol) === -1 && symbolsLeftOfAssignment.indexOf(theSymbol) === -1 && symbolsLeftOfAssignment.indexOf("'" + theSymbol) === -1 && !skipRootVariableToBeSolved) {
      if (DEBUG) {
        console.log("... adding symbol: " + theSymbol + " to the set of the symbols left of assignment");
      }
      prefixVar = "";
      for (i = l1 = 1, ref2 = functionInvokationsScanningStack.length; 1 <= ref2 ? l1 < ref2 : l1 > ref2; i = 1 <= ref2 ? ++l1 : --l1) {
        if (functionInvokationsScanningStack[i] !== "") {
          prefixVar += functionInvokationsScanningStack[i] + "_" + i + "_";
        }
      }
      theSymbol = prefixVar + theSymbol;
      return symbolsLeftOfAssignment.push(theSymbol);
    }
  };
  scan_symbol = function scan_symbol() {
    if (token !== T_SYMBOL) {
      scan_error("symbol expected");
    }
    if (meta_mode && token_buf.length === 1) {
      switch (token_buf[0]) {
        case 'a':
          push(symbol(METAA));
          break;
        case 'b':
          push(symbol(METAB));
          break;
        case 'x':
          push(symbol(METAX));
          break;
        default:
          push(usr_symbol(token_buf));
      }
    } else {
      push(usr_symbol(token_buf));
    }
    //console.log "found symbol: " + token_buf
    if (scanningParameters.length === 0) {
      if (DEBUG) {
        console.log("out of scanning parameters, processing " + token_buf);
      }
      lastFoundSymbol = token_buf;
      if (isSymbolLeftOfAssignment) {
        addSymbolLeftOfAssignment(token_buf);
      }
    } else {
      if (DEBUG) {
        console.log("still scanning parameters, skipping " + token_buf);
      }
      if (isSymbolLeftOfAssignment) {
        addSymbolRightOfAssignment("'" + token_buf);
      }
    }
    if (DEBUG) {
      console.log("found symbol: " + token_buf + " left of assignment: " + isSymbolLeftOfAssignment);
    }
    if (!isSymbolLeftOfAssignment) {
      addSymbolRightOfAssignment(token_buf);
    }
    return get_next_token();
  };
  scan_string = function scan_string() {
    push(new_string(token_buf));
    return get_next_token();
  };
  scan_function_call_with_function_name = function scan_function_call_with_function_name() {
    var functionName, i, l1, n, p, ref2;
    if (DEBUG) {
      console.log("-- scan_function_call_with_function_name start");
    }
    n = 1; // the parameter number as we scan parameters
    p = new U();
    p = usr_symbol(token_buf);
    push(p);
    functionName = token_buf;
    if (functionName === "roots" || functionName === "defint" || functionName === "sum" || functionName === "product" || functionName === "for") {
      functionInvokationsScanningStack.push(token_buf);
    }
    lastFoundSymbol = token_buf;
    if (!isSymbolLeftOfAssignment) {
      addSymbolRightOfAssignment(token_buf);
    }
    get_next_token(); // open parens
    get_next_token(); // 1st parameter
    scanningParameters.push(true);
    if (token !== ')') {
      scan_stmt();
      n++;
      while (token === ',') {
        get_next_token();
        // roots' disappearing variable, if there, is the second one
        if (n === 2 && functionInvokationsScanningStack[functionInvokationsScanningStack.length - 1].indexOf("roots") !== -1) {
          symbolsRightOfAssignment = symbolsRightOfAssignment.filter(function (x) {
            return !new RegExp("roots_" + (functionInvokationsScanningStack.length - 1) + "_" + token_buf).test(x);
          });
          skipRootVariableToBeSolved = true;
        }
        // sums' disappearing variable, is alsways the second one
        if (n === 2 && functionInvokationsScanningStack[functionInvokationsScanningStack.length - 1].indexOf("sum") !== -1) {
          symbolsRightOfAssignment = symbolsRightOfAssignment.filter(function (x) {
            return !new RegExp("sum_" + (functionInvokationsScanningStack.length - 1) + "_" + token_buf).test(x);
          });
          skipRootVariableToBeSolved = true;
        }
        // product's disappearing variable, is alsways the second one
        if (n === 2 && functionInvokationsScanningStack[functionInvokationsScanningStack.length - 1].indexOf("product") !== -1) {
          symbolsRightOfAssignment = symbolsRightOfAssignment.filter(function (x) {
            return !new RegExp("product_" + (functionInvokationsScanningStack.length - 1) + "_" + token_buf).test(x);
          });
          skipRootVariableToBeSolved = true;
        }
        // for's disappearing variable, is alsways the second one
        if (n === 2 && functionInvokationsScanningStack[functionInvokationsScanningStack.length - 1].indexOf("for") !== -1) {
          symbolsRightOfAssignment = symbolsRightOfAssignment.filter(function (x) {
            return !new RegExp("for_" + (functionInvokationsScanningStack.length - 1) + "_" + token_buf).test(x);
          });
          skipRootVariableToBeSolved = true;
        }
        // defint's disappearing variables can be in positions 2,5,8...
        if (functionInvokationsScanningStack[functionInvokationsScanningStack.length - 1].indexOf("defint") !== -1 && (n === 2 || n > 2 && (n - 2) % 3 === 0)) {
          symbolsRightOfAssignment = symbolsRightOfAssignment.filter(function (x) {
            return !new RegExp("defint_" + (functionInvokationsScanningStack.length - 1) + "_" + token_buf).test(x);
          });
          skipRootVariableToBeSolved = true;
        }
        scan_stmt();
        skipRootVariableToBeSolved = false;
        n++;
      }
      // todo refactor this, there are two copies
      // this catches the case where the "roots" variable is not specified
      if (n === 2 && functionInvokationsScanningStack[functionInvokationsScanningStack.length - 1].indexOf("roots") !== -1) {
        symbolsRightOfAssignment = symbolsRightOfAssignment.filter(function (x) {
          return !new RegExp("roots_" + (functionInvokationsScanningStack.length - 1) + "_" + "x").test(x);
        });
      }
    }
    scanningParameters.pop();
    for (i = l1 = 0, ref2 = symbolsRightOfAssignment.length; 0 <= ref2 ? l1 <= ref2 : l1 >= ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      if (symbolsRightOfAssignment[i] != null) {
        if (functionName === "roots") {
          symbolsRightOfAssignment[i] = symbolsRightOfAssignment[i].replace(new RegExp("roots_" + (functionInvokationsScanningStack.length - 1) + "_"), "");
        }
        if (functionName === "defint") {
          symbolsRightOfAssignment[i] = symbolsRightOfAssignment[i].replace(new RegExp("defint_" + (functionInvokationsScanningStack.length - 1) + "_"), "");
        }
        if (functionName === "sum") {
          symbolsRightOfAssignment[i] = symbolsRightOfAssignment[i].replace(new RegExp("sum_" + (functionInvokationsScanningStack.length - 1) + "_"), "");
        }
        if (functionName === "product") {
          symbolsRightOfAssignment[i] = symbolsRightOfAssignment[i].replace(new RegExp("product_" + (functionInvokationsScanningStack.length - 1) + "_"), "");
        }
        if (functionName === "for") {
          symbolsRightOfAssignment[i] = symbolsRightOfAssignment[i].replace(new RegExp("for_" + (functionInvokationsScanningStack.length - 1) + "_"), "");
        }
      }
    }
    if (token !== ')') {
      scan_error(") expected");
    }
    get_next_token();
    list(n);
    if (functionName === "roots" || functionName === "defint" || functionName === "sum" || functionName === "product" || functionName === "for") {
      functionInvokationsScanningStack.pop();
    }
    if (functionName === symbol(PATTERN).printname) {
      patternHasBeenFound = true;
    }
    if (DEBUG) {
      return console.log("-- scan_function_call_with_function_name end");
    }
  };
  scan_function_call_without_function_name = function scan_function_call_without_function_name() {
    var n;
    if (DEBUG) {
      console.log("-- scan_function_call_without_function_name start");
    }
    // the function will have to be looked up
    // at runtime (i.e. we need to evaulate something to find it
    // e.g. it might be inside a tensor, so we'd need to evaluate
    // a tensor element access in that case)
    push_symbol(EVAL);
    swap();
    list(2);
    n = 1; // the parameter number as we scan parameters
    get_next_token(); // left paren
    scanningParameters.push(true);
    if (token !== ')') {
      scan_stmt();
      n++;
      while (token === ',') {
        get_next_token();
        scan_stmt();
        n++;
      }
    }
    scanningParameters.pop();
    if (token !== ')') {
      scan_error(") expected");
    }
    get_next_token();
    list(n);
    if (DEBUG) {
      return console.log("-- scan_function_call_without_function_name end: " + stack[tos - 1]);
    }
  };

  // scan subexpression
  scan_subexpr = function scan_subexpr() {
    var n;
    n = 0;
    if (token !== '(') {
      scan_error("( expected");
    }
    get_next_token();
    scan_stmt();
    if (token !== ')') {
      scan_error(") expected");
    }
    return get_next_token();
  };
  scan_tensor = function scan_tensor() {
    var n;
    n = 0;
    if (token !== '[') {
      scan_error("[ expected");
    }
    get_next_token();
    //console.log "scanning the next statement"
    scan_stmt();
    n = 1;
    while (token === ',') {
      get_next_token();
      scan_stmt();
      n++;
    }
    //console.log "building tensor with elements number: " + n
    build_tensor(n);
    if (token !== ']') {
      scan_error("] expected");
    }
    return get_next_token();
  };
  scan_error = function scan_error(errmsg) {
    errorMessage = "";
    // try not to put question mark on orphan line
    while (input_str !== scan_str) {
      if ((scanned[input_str] === '\n' || scanned[input_str] === '\r') && input_str + 1 === scan_str) {
        break;
      }
      errorMessage += scanned[input_str++];
    }
    errorMessage += " ? ";
    while (scanned[input_str] && scanned[input_str] !== '\n' && scanned[input_str] !== '\r') {
      errorMessage += scanned[input_str++];
    }
    errorMessage += '\n';
    return stop(errmsg);
  };

  // There are n expressions on the stack, possibly tensors.

  // This function assembles the stack expressions into a single tensor.

  // For example, at the top level of the expression ((a,b),(c,d)), the vectors
  // (a,b) and (c,d) would be on the stack.

  // takes an integer
  build_tensor = function build_tensor(n) {
    var i, l1, ref2;
    // int i, j, k, ndim, nelem
    i = 0;
    save();
    p2 = alloc_tensor(n);
    p2.tensor.ndim = 1;
    p2.tensor.dim[0] = n;
    for (i = l1 = 0, ref2 = n; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      p2.tensor.elem[i] = stack[tos - n + i];
    }
    check_tensor_dimensions(p2);
    moveTos(tos - n);
    push(p2);
    return restore();
  };
  get_next_token = function get_next_token() {
    newline_flag = 0;
    while (1) {
      get_token();
      if (token !== T_NEWLINE) {
        break;
      }
      newline_flag = 1;
    }
    if (DEBUG) {
      return console.log("get_next_token token: " + token);
    }
  };

  //if token == ')'
  //  debugger
  get_token = function get_token() {
    // skip spaces
    while (isspace(scanned[scan_str])) {
      if (scanned[scan_str] === '\n' || scanned[scan_str] === '\r') {
        token = T_NEWLINE;
        scan_str++;
        return;
      }
      scan_str++;
    }
    token_str = scan_str;
    // end of string?
    if (scan_str === scanned.length) {
      token = "";
      return;
    }
    // number?
    if (isdigit(scanned[scan_str]) || scanned[scan_str] === '.') {
      while (isdigit(scanned[scan_str])) {
        scan_str++;
      }
      if (scanned[scan_str] === '.') {
        scan_str++;
        while (isdigit(scanned[scan_str])) {
          scan_str++;
        }
        if (scanned[scan_str] === 'e' && (scanned[scan_str + 1] === '+' || scanned[scan_str + 1] === '-' || isdigit(scanned[scan_str + 1]))) {
          scan_str += 2;
          while (isdigit(scanned[scan_str])) {
            scan_str++;
          }
        }
        token = T_DOUBLE;
      } else {
        token = T_INTEGER;
      }
      update_token_buf(token_str, scan_str);
      return;
    }
    // symbol?
    if (isalpha(scanned[scan_str])) {
      while (isalnumorunderscore(scanned[scan_str])) {
        scan_str++;
      }
      if (scanned[scan_str] === '(') {
        token = T_FUNCTION;
      } else {
        token = T_SYMBOL;
      }
      update_token_buf(token_str, scan_str);
      return;
    }
    // string ?
    if (scanned[scan_str] === '"') {
      scan_str++;
      while (scanned[scan_str] !== '"') {
        //if (scan_str == scanned.length || scanned[scan_str] == '\n' || scanned[scan_str] == '\r')
        if (scan_str === scanned.length - 1) {
          scan_str++;
          scan_error("runaway string");
          scan_str--;
        }
        scan_str++;
      }
      scan_str++;
      token = T_STRING;
      update_token_buf(token_str + 1, scan_str - 1);
      return;
    }
    // comment?
    if (scanned[scan_str] === '#' || scanned[scan_str] === '-' && scanned[scan_str + 1] === '-') {
      while (scanned[scan_str] && scanned[scan_str] !== '\n' && scanned[scan_str] !== '\r') {
        scan_str++;
      }
      if (scanned[scan_str]) {
        scan_str++;
      }
      token = T_NEWLINE;
      return;
    }
    // quote-assignment
    if (scanned[scan_str] === ':' && scanned[scan_str + 1] === '=') {
      scan_str += 2;
      token = T_QUOTASSIGN;
      return;
    }
    // relational operator?
    if (scanned[scan_str] === '=' && scanned[scan_str + 1] === '=') {
      scan_str += 2;
      token = T_EQ;
      return;
    }
    // != operator. It's a little odd because
    // "!" is not a "not", which would make things consistent.
    // (it's used for factorial).
    // An alternative would be to use "<>" but it's not used
    // a lot in other languages...
    if (scanned[scan_str] === '!' && scanned[scan_str + 1] === '=') {
      scan_str += 2;
      token = T_NEQ;
      return;
    }
    if (scanned[scan_str] === '<' && scanned[scan_str + 1] === '=') {
      scan_str += 2;
      token = T_LTEQ;
      return;
    }
    if (scanned[scan_str] === '>' && scanned[scan_str + 1] === '=') {
      scan_str += 2;
      token = T_GTEQ;
      return;
    }
    // single char token
    return token = scanned[scan_str++];
  };

  // both strings
  update_token_buf = function update_token_buf(a, b) {
    return token_buf = scanned.substring(a, b);
  };
  $.scan = scan;

  //-----------------------------------------------------------------------------

  //  Author : philippe.billet@noos.fr

  //  sgn sign function

  //-----------------------------------------------------------------------------
  Eval_sgn = function Eval_sgn() {
    push(cadr(p1));
    Eval();
    return sgn();
  };
  sgn = function sgn() {
    save();
    yysgn();
    return restore();
  };

  //define X p1
  yysgn = function yysgn() {
    p1 = pop();
    if (isdouble(p1)) {
      if (p1.d > 0) {
        push_integer(1);
        return;
      } else {
        if (p1.d === 0) {
          push_integer(1);
          return;
        } else {
          push_integer(-1);
          return;
        }
      }
    }
    if (isrational(p1)) {
      if (MSIGN(mmul(p1.q.a, p1.q.b)) === -1) {
        push_integer(-1);
        return;
      } else {
        if (MZERO(mmul(p1.q.a, p1.q.b))) {
          push_integer(0);
          return;
        } else {
          push_integer(1);
          return;
        }
      }
    }
    if (iscomplexnumber(p1)) {
      push_integer(-1);
      push(p1);
      _absval();
      power();
      push(p1);
      multiply();
      return;
    }
    if (isnegativeterm(p1)) {
      push_symbol(SGN);
      push(p1);
      negate();
      list(2);
      push_integer(-1);
      multiply();
      return;
    }
    /*
    push_integer(2)
    push(p1)
    heaviside()
    multiply()
    push_integer(-1)
    add()
    */
    push_symbol(SGN);
    push(p1);
    return list(2);
  };

  // shape of tensor
  Eval_shape = function Eval_shape() {
    push(cadr(p1));
    Eval();
    return shape();
  };
  shape = function shape() {
    var ai, an, i, l1, m1, ndim, ref2, ref3, t;
    i = 0;
    ndim = 0;
    t = 0;
    ai = [];
    an = [];
    for (i = l1 = 0, ref2 = MAXDIM; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      ai[i] = 0;
      an[i] = 0;
    }
    //U **a, **b
    save();
    p1 = pop();
    if (!istensor(p1)) {
      if (!isZeroAtomOrTensor(p1)) {
        stop("transpose: tensor expected, 1st arg is not a tensor");
      }
      push(zero);
      restore();
      return;
    }
    ndim = p1.tensor.ndim;
    p2 = alloc_tensor(ndim);
    p2.tensor.ndim = 1;
    p2.tensor.dim[0] = ndim;
    for (i = m1 = 0, ref3 = ndim; 0 <= ref3 ? m1 < ref3 : m1 > ref3; i = 0 <= ref3 ? ++m1 : --m1) {
      push_integer(p1.tensor.dim[i]);
      p2.tensor.elem[i] = pop();
    }
    push(p2);
    return restore();
  };

  /*
   Simplify factorials
   The following script
     F(n,k) = k binomial(n,k)
    (F(n,k) + F(n,k-1)) / F(n+1,k)
   generates
          k! n!             n! (1 - k + n)!              k! n!
   -------------------- + -------------------- - ----------------------
   (-1 + k)! (1 + n)!     (1 + n)! (-k + n)!     k (-1 + k)! (1 + n)!
   Simplify each term to get
       k       1 - k + n       1
   ------- + ----------- - -------
    1 + n       1 + n       1 + n
   Then simplify the sum to get
       n
   -------
    1 + n
   */
  // simplify factorials term-by-term
  Eval_simfac = function Eval_simfac() {
    push(cadr(p1));
    Eval();
    return simfac();
  };

  //if 1
  simfac = function simfac() {
    var h;
    h = 0;
    save();
    p1 = pop();
    if (car(p1) === symbol(ADD)) {
      h = tos;
      p1 = cdr(p1);
      while (p1 !== symbol(NIL)) {
        push(car(p1));
        simfac_term();
        p1 = cdr(p1);
      }
      add_all(tos - h);
    } else {
      push(p1);
      simfac_term();
    }
    return restore();
  };

  //else
  /*
  void
  simfac(void)
  {
    int h
    save()
    p1 = pop()
    if (car(p1) == symbol(ADD)) {
      h = tos
      p1 = cdr(p1)
      while (p1 != symbol(NIL)) {
        push(car(p1))
        simfac_term()
        p1 = cdr(p1)
      }
      addk(tos - h)
      p1 = pop()
      if (find(p1, symbol(FACTORIAL))) {
        push(p1)
        if (car(p1) == symbol(ADD)) {
          Condense()
          simfac_term()
        }
      }
    } else {
      push(p1)
      simfac_term()
    }
    restore()
  }
   #endif
   */
  simfac_term = function simfac_term() {
    var doNothing, h;
    h = 0;
    save();
    p1 = pop();
    // if not a product of factors then done
    if (car(p1) !== symbol(MULTIPLY)) {
      push(p1);
      restore();
      return;
    }
    // push all factors
    h = tos;
    p1 = cdr(p1);
    while (p1 !== symbol(NIL)) {
      push(car(p1));
      p1 = cdr(p1);
    }
    // keep trying until no more to do
    while (yysimfac(h)) {
      doNothing = 1;
    }
    multiply_all_noexpand(tos - h);
    return restore();
  };

  // try all pairs of factors
  yysimfac = function yysimfac(h) {
    var i, j, l1, m1, ref2, ref3, ref4, ref5;
    i = 0;
    j = 0;
    for (i = l1 = ref2 = h, ref3 = tos; ref2 <= ref3 ? l1 < ref3 : l1 > ref3; i = ref2 <= ref3 ? ++l1 : --l1) {
      p1 = stack[i];
      for (j = m1 = ref4 = h, ref5 = tos; ref4 <= ref5 ? m1 < ref5 : m1 > ref5; j = ref4 <= ref5 ? ++m1 : --m1) {
        if (i === j) {
          continue;
        }
        p2 = stack[j];
        //  n! / n    ->  (n - 1)!
        if (car(p1) === symbol(FACTORIAL) && car(p2) === symbol(POWER) && isminusone(caddr(p2)) && equal(cadr(p1), cadr(p2))) {
          push(cadr(p1));
          push(one);
          subtract();
          factorial();
          stack[i] = pop();
          stack[j] = one;
          return 1;
        }
        //  n / n!    ->  1 / (n - 1)!
        if (car(p2) === symbol(POWER) && isminusone(caddr(p2)) && caadr(p2) === symbol(FACTORIAL) && equal(p1, cadadr(p2))) {
          push(p1);
          push_integer(-1);
          add();
          factorial();
          reciprocate();
          stack[i] = pop();
          stack[j] = one;
          return 1;
        }
        //  (n + 1) n!  ->  (n + 1)!
        if (car(p2) === symbol(FACTORIAL)) {
          push(p1);
          push(cadr(p2));
          subtract();
          p3 = pop();
          if (isplusone(p3)) {
            push(p1);
            factorial();
            stack[i] = pop();
            stack[j] = one;
            return 1;
          }
        }
        //  1 / ((n + 1) n!)  ->  1 / (n + 1)!
        if (car(p1) === symbol(POWER) && isminusone(caddr(p1)) && car(p2) === symbol(POWER) && isminusone(caddr(p2)) && caadr(p2) === symbol(FACTORIAL)) {
          push(cadr(p1));
          push(cadr(cadr(p2)));
          subtract();
          p3 = pop();
          if (isplusone(p3)) {
            push(cadr(p1));
            factorial();
            reciprocate();
            stack[i] = pop();
            stack[j] = one;
            return 1;
          }
        }
        //  (n + 1)! / n!  ->  n + 1

        //  n! / (n + 1)!  ->  1 / (n + 1)
        if (car(p1) === symbol(FACTORIAL) && car(p2) === symbol(POWER) && isminusone(caddr(p2)) && caadr(p2) === symbol(FACTORIAL)) {
          push(cadr(p1));
          push(cadr(cadr(p2)));
          subtract();
          p3 = pop();
          if (isplusone(p3)) {
            stack[i] = cadr(p1);
            stack[j] = one;
            return 1;
          }
          if (isminusone(p3)) {
            push(cadr(cadr(p2)));
            reciprocate();
            stack[i] = pop();
            stack[j] = one;
            return 1;
          }
          if (equaln(p3, 2)) {
            stack[i] = cadr(p1);
            push(cadr(p1));
            push_integer(-1);
            add();
            stack[j] = pop();
            return 1;
          }
          if (equaln(p3, -2)) {
            push(cadr(cadr(p2)));
            reciprocate();
            stack[i] = pop();
            push(cadr(cadr(p2)));
            push_integer(-1);
            add();
            reciprocate();
            stack[j] = pop();
            return 1;
          }
        }
      }
    }
    return 0;
  };
  DEBUG_SIMPLIFY = false;
  Eval_simplify = function Eval_simplify() {
    push(cadr(p1));
    runUserDefinedSimplifications();
    Eval();
    return simplify();
  };
  runUserDefinedSimplifications = function runUserDefinedSimplifications() {
    var atLeastOneSuccessInRouldOfRulesApplications, eachConsecutiveRuleApplication, eachSimplification, l1, len, len1, m1, numberOfRulesApplications, originalexpanding, success;
    // -----------------------
    // unfortunately for the time being user
    // specified simplifications are only
    // run in things which don't contain
    // integrals.
    // Doesn't work yet, could be because of
    // some clobbering as "transform" is called
    // recursively?
    if (userSimplificationsInListForm.length !== 0 && !_Find(cadr(p1), symbol(INTEGRAL))) {
      originalexpanding = expanding;
      expanding = false;
      if (DEBUG_SIMPLIFY) {
        console.log("runUserDefinedSimplifications passed: " + stack[tos - 1].toString());
      }
      Eval();
      if (DEBUG_SIMPLIFY) {
        console.log("runUserDefinedSimplifications after eval no expanding: " + stack[tos - 1].toString());
      }
      expanding = originalexpanding;
      p1 = stack[tos - 1];
      if (DEBUG_SIMPLIFY) {
        console.log("patterns to be checked: ");
      }
      for (l1 = 0, len = userSimplificationsInListForm.length; l1 < len; l1++) {
        eachSimplification = userSimplificationsInListForm[l1];
        if (DEBUG_SIMPLIFY) {
          console.log("..." + eachSimplification);
        }
      }
      atLeastOneSuccessInRouldOfRulesApplications = true;
      numberOfRulesApplications = 0;
      while (atLeastOneSuccessInRouldOfRulesApplications && numberOfRulesApplications < MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES) {
        atLeastOneSuccessInRouldOfRulesApplications = false;
        numberOfRulesApplications++;
        for (m1 = 0, len1 = userSimplificationsInListForm.length; m1 < len1; m1++) {
          eachSimplification = userSimplificationsInListForm[m1];
          success = true;
          eachConsecutiveRuleApplication = 0;
          while (success && eachConsecutiveRuleApplication < MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE) {
            eachConsecutiveRuleApplication++;
            if (DEBUG_SIMPLIFY) {
              console.log("simplify - tos: " + tos + " checking pattern: " + eachSimplification + " on: " + p1);
            }
            push_symbol(NIL);
            success = _transform(eachSimplification, true);
            if (success) {
              atLeastOneSuccessInRouldOfRulesApplications = true;
            }
            p1 = stack[tos - 1];
            if (DEBUG_SIMPLIFY) {
              console.log("p1 at this stage of simplification: " + p1);
            }
          }
          if (eachConsecutiveRuleApplication === MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE) {
            stop("maximum application of single transformation rule exceeded: " + eachSimplification);
          }
        }
      }
      if (numberOfRulesApplications === MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES) {
        stop("maximum application of all transformation rules exceeded ");
      }
      if (DEBUG_SIMPLIFY) {
        console.log("METAX = " + get_binding(symbol(METAX)));
      }
      if (DEBUG_SIMPLIFY) {
        console.log("METAA = " + get_binding(symbol(METAA)));
      }
      if (DEBUG_SIMPLIFY) {
        return console.log("METAB = " + get_binding(symbol(METAB)));
      }
    }
  };

  // ------------------------
  simplifyForCodeGeneration = function simplifyForCodeGeneration() {
    save();
    runUserDefinedSimplifications();
    codeGen = true;
    // in "codeGen" mode we completely
    // eval and simplify the function bodies
    // because we really want to resolve all
    // the variables indirections and apply
    // all the simplifications we can.
    simplify_main();
    codeGen = false;
    return restore();
  };
  simplify = function simplify() {
    save();
    simplify_main();
    return restore();
  };
  simplify_main = function simplify_main() {
    var args, fbody;
    p1 = pop();
    // when we do code generation, we proceed to
    // fully evaluate and simplify the body of
    // a function, so we resolve all variables
    // indirections and we simplify everything
    // we can given the current assignments.
    if (codeGen && car(p1) === symbol(FUNCTION)) {
      fbody = cadr(p1);
      push(fbody);
      // let's simplify the body so we give it a
      // compact form
      eval();
      simplify();
      p3 = pop();
      // replace the evaled body
      args = caddr(p1);
      push_symbol(FUNCTION);
      push(p3);
      push(args);
      list(3);
      p1 = pop();
    }
    if (istensor(p1)) {
      simplify_tensor();
      return;
    }
    if (_Find(p1, symbol(FACTORIAL))) {
      push(p1);
      simfac();
      p2 = pop();
      push(p1);
      rationalize();
      simfac();
      p3 = pop();
      if (_count(p2) < _count(p3)) {
        p1 = p2;
      } else {
        p1 = p3;
      }
    }
    f10();
    if (DEBUG_SIMPLIFY) {
      console.log("f10: " + p1.toString());
    }
    f1();
    if (DEBUG_SIMPLIFY) {
      console.log("f1: " + p1.toString());
    }
    f2();
    if (DEBUG_SIMPLIFY) {
      console.log("f2: " + p1.toString());
    }
    f3();
    if (DEBUG_SIMPLIFY) {
      console.log("f3: " + p1.toString());
    }
    f4();
    if (DEBUG_SIMPLIFY) {
      console.log("f4: " + p1.toString());
    }
    f5();
    if (DEBUG_SIMPLIFY) {
      console.log("f5: " + p1.toString());
    }
    f9();
    if (DEBUG_SIMPLIFY) {
      console.log("f9: " + p1.toString());
    }
    simplify_polarRect();
    if (do_simplify_nested_radicals) {
      // if there is some de-nesting then
      // re-run a simplification because
      // the shape of the expression might
      // have changed significantly.
      // e.g. simplify(14^(1/2) - (16 - 4*7^(1/2))^(1/2))
      // needs some more semplification after the de-nesting.
      if (simplify_nested_radicals()) {
        if (DEBUG_SIMPLIFY) {
          console.log("de-nesting successful into: " + p1.toString());
        }
        push(p1);
        simplify();
        return;
      }
    }
    simplify_rectToClock();
    simplify_rational_expressions();
    return push(p1);
  };
  simplify_tensor = function simplify_tensor() {
    var i, l1, m1, ref2, ref3;
    i = 0;
    p2 = alloc_tensor(p1.tensor.nelem);
    p2.tensor.ndim = p1.tensor.ndim;
    for (i = l1 = 0, ref2 = p1.tensor.ndim; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      p2.tensor.dim[i] = p1.tensor.dim[i];
    }
    for (i = m1 = 0, ref3 = p1.tensor.nelem; 0 <= ref3 ? m1 < ref3 : m1 > ref3; i = 0 <= ref3 ? ++m1 : --m1) {
      push(p1.tensor.elem[i]);
      simplify();
      p2.tensor.elem[i] = pop();
    }
    check_tensor_dimensions(p2);
    if (isZeroAtomOrTensor(p2)) {
      p2 = zero; // null tensor becomes scalar zero
    }

    return push(p2);
  };

  // try rationalizing
  f1 = function f1() {
    if (car(p1) !== symbol(ADD)) {
      return;
    }
    push(p1);
    rationalize();
    p2 = pop();
    if (_count(p2) < _count(p1)) {
      return p1 = p2;
    }
  };

  // try condensing
  f2 = function f2() {
    if (car(p1) !== symbol(ADD)) {
      return;
    }
    push(p1);
    Condense();
    p2 = pop();
    if (_count(p2) <= _count(p1)) {
      return p1 = p2;
    }
  };

  // this simplifies forms like (A-B) / (B-A)
  f3 = function f3() {
    push(p1);
    rationalize();
    negate();
    rationalize();
    negate();
    rationalize();
    p2 = pop();
    if (_count(p2) < _count(p1)) {
      return p1 = p2;
    }
  };
  f10 = function f10() {
    var a, b, carp1, miao, originalexpanding;
    carp1 = car(p1);
    miao = cdr(p1);
    if (carp1 === symbol(MULTIPLY) || isinnerordot(p1)) {
      // both operands a transpose?
      if (car(car(cdr(p1))) === symbol(TRANSPOSE) && car(car(cdr(cdr(p1)))) === symbol(TRANSPOSE)) {
        if (DEBUG_SIMPLIFY) {
          console.log("maybe collecting a transpose " + p1);
        }
        a = cadr(car(cdr(p1)));
        b = cadr(car(cdr(cdr(p1))));
        if (carp1 === symbol(MULTIPLY)) {
          push(a);
          push(b);
          multiply();
        } else if (isinnerordot(p1)) {
          push(b);
          push(a);
          _inner();
        }
        push_integer(1);
        push_integer(2);
        originalexpanding = expanding;
        expanding = false;
        _transpose();
        expanding = originalexpanding;
        p2 = pop();
        if (_count(p2) < _count(p1)) {
          p1 = p2;
        }
        if (DEBUG_SIMPLIFY) {
          return console.log("collecting a transpose " + p2);
        }
      }
    }
  };

  // try expanding denominators
  f4 = function f4() {
    if (isZeroAtomOrTensor(p1)) {
      return;
    }
    push(p1);
    rationalize();
    inverse();
    rationalize();
    inverse();
    rationalize();
    p2 = pop();
    if (_count(p2) < _count(p1)) {
      return p1 = p2;
    }
  };

  // simplifies trig forms
  simplify_trig = function simplify_trig() {
    save();
    p1 = pop();
    f5();
    push(p1);
    return restore();
  };
  f5 = function f5() {
    if (_Find(p1, symbol(SIN)) === 0 && _Find(p1, symbol(COS)) === 0) {
      return;
    }
    p2 = p1;
    trigmode = 1;
    push(p2);
    Eval();
    p3 = pop();
    trigmode = 2;
    push(p2);
    Eval();
    p4 = pop();
    trigmode = 0;
    if (_count(p4) < _count(p3) || nterms(p4) < nterms(p3)) {
      p3 = p4;
    }
    if (_count(p3) < _count(p1) || nterms(p3) < nterms(p1)) {
      return p1 = p3;
    }
  };

  // if it's a sum then try to simplify each term
  f9 = function f9() {
    var oldp1, oldp2;
    if (car(p1) !== symbol(ADD)) {
      return;
    }
    push_integer(0);
    p2 = cdr(p1);
    while (iscons(p2)) {
      push(car(p2));
      simplify();
      add();
      oldp1 = p1;
      oldp2 = p2;
      p1 = pop();
      simplify_rational_expressions();
      push(p1);
      p1 = oldp1;
      p2 = oldp2;
      p2 = cdr(p2);
    }
    p2 = pop();
    if (_count(p2) < _count(p1)) {
      return p1 = p2;
    }
  };
  simplify_rational_expressions = function simplify_rational_expressions() {
    var denom, num, polyVar, sasa, theGCD;
    push(p1);
    _denominator();
    denom = pop();
    if (isone(denom)) {
      return;
    }
    push(p1);
    _numerator();
    num = pop();
    if (isone(num)) {
      return;
    }
    if (!(polyVar = areunivarpolysfactoredorexpandedform(num, denom))) {
      return;
    }
    push(num);
    push(denom);
    gcd();
    push(polyVar);
    factor();
    theGCD = pop();
    // if there are no common factors then
    // bail
    if (isone(theGCD)) {
      return;
    }
    push(num);
    push(polyVar);
    factor();
    push(theGCD);
    //divide()
    inverse();
    multiply_noexpand();
    simplify();
    sasa = stack[tos - 1].toString();
    push(denom);
    push(polyVar);
    factor();
    push(theGCD);
    //divide()
    inverse();
    multiply_noexpand();
    simplify();
    sasa = stack[tos - 1].toString();
    divide();
    //simplify()
    Condense();
    sasa = stack[tos - 1].toString();
    p2 = pop();
    if (_count(p2) < _count(p1)) {
      return p1 = p2;
    }
  };

  // things like 6*(cos(2/9*pi)+i*sin(2/9*pi))
  // where we have sin and cos, those might start to
  // look better in clock form i.e.  6*(-1)^(2/9) 
  simplify_rectToClock = function simplify_rectToClock() {
    //debugger
    if (_Find(p1, symbol(SIN)) === 0 && _Find(p1, symbol(COS)) === 0) {
      return;
    }
    push(p1);
    Eval();
    clockform();
    p2 = pop();
    if (DEBUG_SIMPLIFY) {
      console.log("before simplification clockform: " + p1 + " after: " + p2);
    }
    if (_count(p2) < _count(p1)) {
      return p1 = p2;
    }
  };
  simplify_polarRect = function simplify_polarRect() {
    push(p1);
    _polarRectAMinusOneBase();
    Eval();
    p2 = pop();
    if (_count(p2) < _count(p1)) {
      return p1 = p2;
    }
  };
  _polarRectAMinusOneBase = function polarRectAMinusOneBase() {
    var h;
    save();
    p1 = pop();
    if (isimaginaryunit(p1)) {
      push(p1);
      restore();
      return;
    }
    if (equal(car(p1), symbol(POWER)) && isminusone(cadr(p1))) {
      // base we just said is minus 1
      push(one);
      negate();
      // exponent
      push(caddr(p1));
      _polarRectAMinusOneBase();
      power();
      // try to simplify it using polar and rect
      polar();
      _rect();
    } else if (iscons(p1)) {
      h = tos;
      while (iscons(p1)) {
        //console.log("recursing on: " + car(p1).toString())
        push(car(p1));
        _polarRectAMinusOneBase();
        //console.log("...transformed into: " + stack[tos-1].toString())
        p1 = cdr(p1);
      }
      list(tos - h);
    } else {
      push(p1);
    }
    restore();
  };
  nterms = function nterms(p) {
    if (car(p) !== symbol(ADD)) {
      return 1;
    } else {
      return length(p) - 1;
    }
  };
  simplify_nested_radicals = function simplify_nested_radicals() {
    var prev_expanding, simplificationWithCondense, simplificationWithoutCondense, somethingSimplified;
    if (recursionLevelNestedRadicalsRemoval > 0) {
      if (DEBUG_SIMPLIFY) {
        console.log("denesting bailing out because of too much recursion");
      }
      return false;
    }
    push(p1);
    somethingSimplified = _take_care_of_nested_radicals();
    // in this paragraph we check whether we can collect
    // common factors without complicating the expression
    // in particular we want to avoid 
    // collecting radicals like in this case where
    // we collect sqrt(2):
    //   2-2^(1/2) into 2^(1/2)*(-1+2^(1/2))
    // but we do like to collect other non-radicals e.g.
    //   17/2+3/2*5^(1/2) into 1/2*(17+3*5^(1/2))
    // so what we do is we count the powers and we check
    // which version has the least number of them.
    simplificationWithoutCondense = stack[tos - 1];
    prev_expanding = expanding;
    expanding = 0;
    yycondense();
    expanding = prev_expanding;
    simplificationWithCondense = pop();
    //console.log("occurrences of powers in " + simplificationWithoutCondense + " :" + countOccurrencesOfSymbol(symbol(POWER),simplificationWithoutCondense))
    //console.log("occurrences of powers in " + simplificationWithCondense + " :" + countOccurrencesOfSymbol(symbol(POWER),simplificationWithCondense))
    if (_countOccurrencesOfSymbol(symbol(POWER), simplificationWithoutCondense) < _countOccurrencesOfSymbol(symbol(POWER), simplificationWithCondense)) {
      push(simplificationWithoutCondense);
    } else {
      push(simplificationWithCondense);
    }
    // we got out result, wrap up
    p1 = pop();
    return somethingSimplified;
  };
  _take_care_of_nested_radicals = function take_care_of_nested_radicals() {
    var A, B, C, SOLUTION, anyRadicalSimplificationWorked, base, checkSize, commonBases, commonInnerExponent, countingTerms, eachSolution, exponent, firstTerm, h, i, innerbase, innerexponent, l1, len, len1, len2, len3, lowercase_a, lowercase_b, m1, n1, numberOfTerms, o1, possibleNewExpression, possibleNewExpressionValue, possibleRationalSolutions, possibleSolutions, potentialPower, realOfpossibleRationalSolutions, ref2, secondTerm, secondTermFactor, termsThatAreNotPowers, whichRationalSolution;
    if (recursionLevelNestedRadicalsRemoval > 0) {
      if (DEBUG_SIMPLIFY) {
        console.log("denesting bailing out because of too much recursion");
      }
      return false;
    }
    save();
    p1 = pop();
    //console.log("take_care_of_nested_radicals p1: " + p1.toString())
    if (equal(car(p1), symbol(POWER))) {
      //console.log("ok it's a power ")
      base = cadr(p1);
      exponent = caddr(p1);
      if (!isminusone(exponent) && equal(car(base), symbol(ADD)) && isfraction(exponent) && (equalq(exponent, 1, 3) || equalq(exponent, 1, 2))) {
        //console.log("ok there is a radix with a term inside")
        firstTerm = cadr(base);
        push(firstTerm);
        _take_care_of_nested_radicals();
        pop();
        secondTerm = caddr(base);
        push(secondTerm);
        _take_care_of_nested_radicals();
        pop();
        //console.log("possible double radical term1: " + firstTerm)
        //console.log("possible double radical term2: " + secondTerm)
        numberOfTerms = 0;
        countingTerms = base;
        while (cdr(countingTerms) !== symbol(NIL)) {
          numberOfTerms++;
          countingTerms = cdr(countingTerms);
        }
        //console.log("number of terms: " + numberOfTerms)
        if (numberOfTerms > 2) {
          //console.log("too many terms under outer radix ")
          push(p1);
          restore();
          return false;
        }
        // list here all the factors
        commonInnerExponent = null;
        commonBases = [];
        termsThatAreNotPowers = [];
        if (car(secondTerm) === symbol(MULTIPLY)) {
          // product of factors
          secondTermFactor = cdr(secondTerm);
          if (iscons(secondTermFactor)) {
            while (iscons(secondTermFactor)) {
              //console.log("second term factor BIS: " + car(secondTermFactor).toString())
              potentialPower = car(secondTermFactor);
              if (car(potentialPower) === symbol(POWER)) {
                innerbase = cadr(potentialPower);
                innerexponent = caddr(potentialPower);
                if (equalq(innerexponent, 1, 2)) {
                  if (commonInnerExponent == null) {
                    commonInnerExponent = innerexponent;
                    commonBases.push(innerbase);
                  } else {
                    if (equal(innerexponent, commonInnerExponent)) {
                      //console.log("common base: " + innerbase.toString())
                      commonBases.push(innerbase);
                    } else {}
                  }
                }
              } else {
                //console.log("no common bases here ")
                //console.log("this one is a power base: " + innerbase + " , exponent: " + innerexponent)
                termsThatAreNotPowers.push(potentialPower);
              }
              secondTermFactor = cdr(secondTermFactor);
            }
          }
        } else if (car(secondTerm) === symbol(POWER)) {
          innerbase = cadr(secondTerm);
          innerexponent = caddr(secondTerm);
          if (commonInnerExponent == null && equalq(innerexponent, 1, 2)) {
            //console.log("tackling double radical 2: " + p1.toString())
            commonInnerExponent = innerexponent;
            commonBases.push(innerbase);
          }
        }
        if (commonBases.length === 0) {
          push(p1);
          restore();
          return false;
        }
        A = firstTerm;
        //console.log("A: " + A.toString())
        push_integer(1);
        for (l1 = 0, len = commonBases.length; l1 < len; l1++) {
          i = commonBases[l1];
          push(i);
          multiply();
        }
        //console.log("basis with common exponent: " + i.toString())
        C = pop();
        //console.log("C: " + C.toString())
        push_integer(1);
        for (m1 = 0, len1 = termsThatAreNotPowers.length; m1 < len1; m1++) {
          i = termsThatAreNotPowers[m1];
          push(i);
          multiply();
        }
        //console.log("terms that are not powers: " + i.toString())
        B = pop();
        //console.log("B: " + B.toString())
        if (equalq(exponent, 1, 3)) {
          push(A);
          negate();
          push(C);
          multiply();
          push(B);
          divide(); // 4th coeff
          //console.log("constant coeff " + stack[tos-1].toString())
          checkSize = pop();
          push(checkSize);
          real();
          _yyfloat();
          if (Math.abs(pop().d) > Math.pow(2, 32)) {
            push(p1);
            restore();
            return false;
          }
          push(checkSize);
          push_integer(3);
          push(C);
          multiply(); // 3rd coeff
          //console.log("next coeff " + stack[tos-1].toString())
          checkSize = pop();
          push(checkSize);
          real();
          _yyfloat();
          if (Math.abs(pop().d) > Math.pow(2, 32)) {
            pop();
            push(p1);
            restore();
            return false;
          }
          push(checkSize);
          push(symbol(SECRETX));
          multiply();
          push_integer(-3);
          push(A);
          multiply();
          push(B);
          divide(); // 2nd coeff
          checkSize = pop();
          push(checkSize);
          real();
          _yyfloat();
          if (Math.abs(pop().d) > Math.pow(2, 32)) {
            pop();
            pop();
            push(p1);
            restore();
            return false;
          }
          push(checkSize);
          //console.log("next coeff " + stack[tos-1].toString())
          push(symbol(SECRETX));
          push_integer(2);
          power();
          multiply();
          push_integer(1); // 1st coeff
          //console.log("next coeff " + stack[tos-1].toString())
          push(symbol(SECRETX));
          push_integer(3);
          power();
          multiply();
          add();
          add();
          add();
        } else if (equalq(exponent, 1, 2)) {
          push(C); // 3th coeff
          checkSize = pop();
          push(checkSize);
          real();
          _yyfloat();
          if (Math.abs(pop().d) > Math.pow(2, 32)) {
            push(p1);
            restore();
            return false;
          }
          push(checkSize);
          //console.log("constant coeff " + stack[tos-1].toString())
          push_integer(-2);
          push(A);
          multiply();
          push(B);
          divide(); // 2nd coeff
          checkSize = pop();
          push(checkSize);
          real();
          _yyfloat();
          if (Math.abs(pop().d) > Math.pow(2, 32)) {
            pop();
            push(p1);
            restore();
            return false;
          }
          push(checkSize);
          //console.log("next coeff " + stack[tos-1].toString())
          push(symbol(SECRETX));
          multiply();
          push_integer(1); // 1st coeff
          //console.log("next coeff " + stack[tos-1].toString())
          push(symbol(SECRETX));
          push_integer(2);
          power();
          multiply();
          add();
          add();
        }
        //console.log("whole polynomial: " + stack[tos-1].toString())
        push(symbol(SECRETX));
        recursionLevelNestedRadicalsRemoval++;
        //console.log("invoking roots at recursion level: " + recursionLevelNestedRadicalsRemoval)
        roots();
        recursionLevelNestedRadicalsRemoval--;
        if (equal(stack[tos - 1], symbol(NIL))) {
          if (DEBUG_SIMPLIFY) {
            console.log("roots bailed out because of too much recursion");
          }
          pop();
          push(p1);
          restore();
          return false;
        }
        //console.log("all solutions: " + stack[tos-1].toString())

        // exclude the solutions with radicals
        possibleSolutions = [];
        ref2 = stack[tos - 1].tensor.elem;
        for (n1 = 0, len2 = ref2.length; n1 < len2; n1++) {
          eachSolution = ref2[n1];
          if (!_Find(eachSolution, symbol(POWER))) {
            possibleSolutions.push(eachSolution);
          }
        }
        pop(); // popping the tensor with the solutions

        //console.log("possible solutions: " + possibleSolutions.toString())
        if (possibleSolutions.length === 0) {
          push(p1);
          restore();
          return false;
        }
        possibleRationalSolutions = [];
        realOfpossibleRationalSolutions = [];
        //console.log("checking the one with maximum real part ")
        for (o1 = 0, len3 = possibleSolutions.length; o1 < len3; o1++) {
          i = possibleSolutions[o1];
          push(i);
          real();
          _yyfloat();
          possibleRationalSolutions.push(i);
          realOfpossibleRationalSolutions.push(pop().d);
        }
        whichRationalSolution = realOfpossibleRationalSolutions.indexOf(Math.max.apply(Math, realOfpossibleRationalSolutions));
        SOLUTION = possibleRationalSolutions[whichRationalSolution];
        //console.log("picked solution: " + SOLUTION)
        /*
        #possibleNewExpressions = []
        #realOfPossibleNewExpressions = []
         * pick the solution which cubic root has no radicals
        lowercase_b = null
        for SOLUTION in possibleSolutions
          console.log("testing solution: " + SOLUTION.toString())
           debugger
          if equalq(exponent,1,3)
            push(A)
            push(SOLUTION)
            push_integer(3)
            power()
            push_integer(3)
            push(C)
            multiply()
            push(SOLUTION)
            multiply()
            add()
            divide()
            console.log("argument of cubic root: " + stack[tos-1].toString())
            push_rational(1,3)
            power()
          else if equalq(exponent,1,2)
            push(A)
            push(SOLUTION)
            push_integer(2)
            power()
            push(C)
            add()
            divide()
            console.log("argument of cubic root: " + stack[tos-1].toString())
            push_rational(1,2)
            power()
          console.log("b is: " + stack[tos-1].toString())
           lowercase_b = pop()
           if !Find(lowercase_b, symbol(POWER))
            break
         */
        if (equalq(exponent, 1, 3)) {
          push(A);
          push(SOLUTION);
          push_integer(3);
          power();
          push_integer(3);
          push(C);
          multiply();
          push(SOLUTION);
          multiply();
          add();
          divide();
          //console.log("argument of cubic root: " + stack[tos-1].toString())
          push_rational(1, 3);
          power();
        } else if (equalq(exponent, 1, 2)) {
          push(A);
          push(SOLUTION);
          push_integer(2);
          power();
          push(C);
          add();
          divide();
          //console.log("argument of cubic root: " + stack[tos-1].toString())
          push_rational(1, 2);
          power();
        }
        //console.log("b is: " + stack[tos-1].toString())
        lowercase_b = pop();
        if (lowercase_b == null) {
          push(p1);
          restore();
          return false;
        }
        push(lowercase_b);
        push(SOLUTION);
        multiply();
        if (equalq(exponent, 1, 3)) {
          //console.log("a is: " + stack[tos-1].toString())
          lowercase_a = pop();
          push(lowercase_b);
          push(C);
          push_rational(1, 2);
          power();
          multiply();
          push(lowercase_a);
          add();
          simplify();
        } else if (equalq(exponent, 1, 2)) {
          //console.log("a could be: " + stack[tos-1].toString())
          lowercase_a = pop();
          push(lowercase_b);
          push(C);
          push_rational(1, 2);
          power();
          multiply();
          push(lowercase_a);
          add();
          simplify();
          possibleNewExpression = pop();
          //console.log("verifying if  " + possibleNewExpression + " is positive")
          push(possibleNewExpression);
          real();
          _yyfloat();
          possibleNewExpressionValue = pop();
          if (!isnegativenumber(possibleNewExpressionValue)) {
            //console.log("... it is positive")
            push(possibleNewExpression);
          } else {
            //console.log("... it is NOT positive")
            push(lowercase_b);
            negate();
            lowercase_b = pop();
            push(lowercase_a);
            negate();
            lowercase_a = pop();
            push(lowercase_b);
            push(C);
            push_rational(1, 2);
            power();
            multiply();
            push(lowercase_a);
            add();
            simplify();
          }
        }
        // possibleNewExpression is now at top of stack

        //console.log("potential new expression: " + stack[tos-1].toString())
        p1 = pop();
        //newExpression = pop()
        //debugger
        //push(newExpression)
        //real()
        //yyfloat()
        //possibleNewExpressions.push(newExpression)
        //realOfPossibleNewExpressions.push(pop().d)

        //whichExpression = realOfPossibleNewExpressions.indexOf(Math.max.apply(Math, realOfPossibleNewExpressions))
        //p1 = possibleNewExpressions[whichExpression]
        //console.log("final new expression: " + p1.toString())
        push(p1);
        restore();
        return true;
      } else {
        push(p1);
        restore();
        return false;
      }
    } else if (iscons(p1)) {
      h = tos;
      anyRadicalSimplificationWorked = false;
      while (iscons(p1)) {
        //console.log("recursing on: " + car(p1).toString())
        push(car(p1));
        anyRadicalSimplificationWorked = anyRadicalSimplificationWorked || _take_care_of_nested_radicals();
        //console.log("...transformed into: " + stack[tos-1].toString())
        p1 = cdr(p1);
      }
      list(tos - h);
      restore();
      return anyRadicalSimplificationWorked;
    } else {
      push(p1);
      restore();
      return false;
    }
    throw new Error("control flow should never reach here");
  };

  // Sine function of numerical and symbolic arguments
  Eval_sin = function Eval_sin() {
    //console.log "sin ---- "
    push(cadr(p1));
    Eval();
    return sine();
  };

  //console.log "sin end ---- "
  sine = function sine() {
    //console.log "sine ---- "
    save();
    p1 = pop();
    if (car(p1) === symbol(ADD)) {
      // sin of a sum can be further decomposed into
      //sin(alpha+beta) = sin(alpha)*cos(beta)+sin(beta)*cos(alpha)
      sine_of_angle_sum();
    } else {
      sine_of_angle();
    }
    return restore();
  };

  //console.log "sine end ---- "

  // Use angle sum formula for special angles.

  //define A p3
  //define B p4

  // decompose sum sin(alpha+beta) into
  // sin(alpha)*cos(beta)+sin(beta)*cos(alpha)
  sine_of_angle_sum = function sine_of_angle_sum() {
    //console.log "sin of angle sum ---- "
    p2 = cdr(p1);
    while (iscons(p2)) {
      p4 = car(p2);
      if (isnpi(p4)) {
        // p4 is B
        push(p1);
        push(p4);
        subtract();
        p3 = pop();
        push(p3);
        sine();
        push(p4);
        cosine();
        multiply();
        push(p3);
        cosine();
        push(p4);
        sine();
        multiply();
        add();
        return;
      }
      //console.log "sin of angle sum end ---- "
      p2 = cdr(p2);
    }
    return sine_of_angle();
  };

  //console.log "sin of angle sum end ---- "
  sine_of_angle = function sine_of_angle() {
    var d, n;
    if (car(p1) === symbol(ARCSIN)) {
      push(cadr(p1));
      return;
    }
    if (isdouble(p1)) {
      d = Math.sin(p1.d);
      if (Math.abs(d) < 1e-10) {
        d = 0.0;
      }
      push_double(d);
      return;
    }
    // sine function is antisymmetric, sin(-x) = -sin(x)
    if (isnegative(p1)) {
      push(p1);
      negate();
      sine();
      negate();
      return;
    }
    // sin(arctan(x)) = x / sqrt(1 + x^2)

    // see p. 173 of the CRC Handbook of Mathematical Sciences
    if (car(p1) === symbol(ARCTAN)) {
      push(cadr(p1));
      push_integer(1);
      push(cadr(p1));
      push_integer(2);
      power();
      add();
      push_rational(-1, 2);
      power();
      multiply();
      return;
    }
    // multiply by 180/pi to go from radians to degrees.
    // we go from radians to degrees because it's much
    // easier to calculate symbolic results of most (not all) "classic"
    // angles (e.g. 30,45,60...) if we calculate the degrees
    // and the we do a switch on that.
    // Alternatively, we could look at the fraction of pi
    // (e.g. 60 degrees is 1/3 pi) but that's more
    // convoluted as we'd need to look at both numerator and
    // denominator.
    push(p1);
    push_integer(180);
    multiply();
    if (evaluatingAsFloats) {
      push_double(Math.PI);
    } else {
      push_symbol(PI);
    }
    divide();
    n = pop_integer();
    // most "good" (i.e. compact) trigonometric results
    // happen for a round number of degrees. There are some exceptions
    // though, e.g. 22.5 degrees, which we don't capture here.
    if (n < 0 || isNaN(n)) {
      push(symbol(SIN));
      push(p1);
      list(2);
      return;
    }
    // values of some famous angles. Many more here:
    // https://en.wikipedia.org/wiki/Trigonometric_constants_expressed_in_real_radicals
    switch (n % 360) {
      case 0:
      case 180:
        return push_integer(0);
      case 30:
      case 150:
        return push_rational(1, 2);
      case 210:
      case 330:
        return push_rational(-1, 2);
      case 45:
      case 135:
        push_rational(1, 2);
        push_integer(2);
        push_rational(1, 2);
        power();
        return multiply();
      case 225:
      case 315:
        push_rational(-1, 2);
        push_integer(2);
        push_rational(1, 2);
        power();
        return multiply();
      case 60:
      case 120:
        push_rational(1, 2);
        push_integer(3);
        push_rational(1, 2);
        power();
        return multiply();
      case 240:
      case 300:
        push_rational(-1, 2);
        push_integer(3);
        push_rational(1, 2);
        power();
        return multiply();
      case 90:
        return push_integer(1);
      case 270:
        return push_integer(-1);
      default:
        push(symbol(SIN));
        push(p1);
        return list(2);
    }
  };

  //            exp(x) - exp(-x)
  //  sinh(x) = ----------------
  //                   2
  Eval_sinh = function Eval_sinh() {
    push(cadr(p1));
    Eval();
    return ysinh();
  };
  ysinh = function ysinh() {
    save();
    yysinh();
    return restore();
  };
  yysinh = function yysinh() {
    var d;
    d = 0.0;
    p1 = pop();
    if (car(p1) === symbol(ARCSINH)) {
      push(cadr(p1));
      return;
    }
    if (isdouble(p1)) {
      d = Math.sinh(p1.d);
      if (Math.abs(d) < 1e-10) {
        d = 0.0;
      }
      push_double(d);
      return;
    }
    if (isZeroAtomOrTensor(p1)) {
      push(zero);
      return;
    }
    push_symbol(SINH);
    push(p1);
    return list(2);
  };
  _subst = function subst() {
    var expr, i, l1, m1, newExpr, newTensor, oldExpr, ref2, ref3;
    save();
    newExpr = pop();
    oldExpr = pop();
    if (oldExpr === symbol(NIL) || newExpr === symbol(NIL)) {
      restore();
      return;
    }
    expr = pop();
    if (istensor(expr)) {
      newTensor = alloc_tensor(expr.tensor.nelem);
      newTensor.tensor.ndim = expr.tensor.ndim;
      for (i = l1 = 0, ref2 = expr.tensor.ndim; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
        newTensor.tensor.dim[i] = expr.tensor.dim[i];
      }
      for (i = m1 = 0, ref3 = expr.tensor.nelem; 0 <= ref3 ? m1 < ref3 : m1 > ref3; i = 0 <= ref3 ? ++m1 : --m1) {
        push(expr.tensor.elem[i]);
        push(oldExpr);
        push(newExpr);
        _subst();
        newTensor.tensor.elem[i] = pop();
        check_tensor_dimensions(newTensor);
      }
      push(newTensor);
    } else if (equal(expr, oldExpr)) {
      push(newExpr);
    } else if (iscons(expr)) {
      push(car(expr));
      push(oldExpr);
      push(newExpr);
      _subst();
      push(cdr(expr));
      push(oldExpr);
      push(newExpr);
      _subst();
      cons();
    } else {
      push(expr);
    }
    return restore();
  };

  // 'sum' function

  //define A p3
  //define B p4
  //define I p5
  //define X p6

  // leaves the sum at the top of the stack
  Eval_sum = function Eval_sum() {
    var body, i, indexVariable, j, k, l1, ref2, ref3;
    i = 0;
    j = 0;
    k = 0;
    // 1st arg
    body = cadr(p1);
    // 2nd arg (index)
    indexVariable = caddr(p1);
    if (!issymbol(indexVariable)) {
      stop("sum: 2nd arg?");
    }
    // 3rd arg (lower limit)
    push(cadddr(p1));
    Eval();
    j = pop_integer();
    if (isNaN(j)) {
      push(p1);
      return;
    }
    // 4th arg (upper limit)
    push(caddddr(p1));
    Eval();
    k = pop_integer();
    if (isNaN(k)) {
      push(p1);
      return;
    }
    // remember contents of the index
    // variable so we can put it back after the loop
    p4 = get_binding(indexVariable);
    push_integer(0);
    for (i = l1 = ref2 = j, ref3 = k; ref2 <= ref3 ? l1 <= ref3 : l1 >= ref3; i = ref2 <= ref3 ? ++l1 : --l1) {
      push_integer(i);
      p5 = pop();
      set_binding(indexVariable, p5);
      push(body);
      Eval();
      add();
    }
    // put back the index variable to original content
    return set_binding(indexVariable, p4);
  };

  // Tangent function of numerical and symbolic arguments
  Eval_tan = function Eval_tan() {
    push(cadr(p1));
    Eval();
    return tangent();
  };
  tangent = function tangent() {
    save();
    yytangent();
    return restore();
  };
  yytangent = function yytangent() {
    var d, n;
    n = 0;
    d = 0.0;
    p1 = pop();
    if (car(p1) === symbol(ARCTAN)) {
      push(cadr(p1));
      return;
    }
    if (isdouble(p1)) {
      d = Math.tan(p1.d);
      if (Math.abs(d) < 1e-10) {
        d = 0.0;
      }
      push_double(d);
      return;
    }
    // tan function is antisymmetric, tan(-x) = -tan(x)
    if (isnegative(p1)) {
      push(p1);
      negate();
      tangent();
      negate();
      return;
    }
    // multiply by 180/pi to go from radians to degrees.
    // we go from radians to degrees because it's much
    // easier to calculate symbolic results of most (not all) "classic"
    // angles (e.g. 30,45,60...) if we calculate the degrees
    // and the we do a switch on that.
    // Alternatively, we could look at the fraction of pi
    // (e.g. 60 degrees is 1/3 pi) but that's more
    // convoluted as we'd need to look at both numerator and
    // denominator.
    push(p1);
    push_integer(180);
    multiply();
    if (evaluatingAsFloats) {
      push_double(Math.PI);
    } else {
      push_symbol(PI);
    }
    divide();
    n = pop_integer();
    // most "good" (i.e. compact) trigonometric results
    // happen for a round number of degrees. There are some exceptions
    // though, e.g. 22.5 degrees, which we don't capture here.
    if (n < 0 || isNaN(n)) {
      push(symbol(TAN));
      push(p1);
      list(2);
      return;
    }
    switch (n % 360) {
      case 0:
      case 180:
        return push_integer(0);
      case 30:
      case 210:
        push_rational(1, 3);
        push_integer(3);
        push_rational(1, 2);
        power();
        return multiply();
      case 150:
      case 330:
        push_rational(-1, 3);
        push_integer(3);
        push_rational(1, 2);
        power();
        return multiply();
      case 45:
      case 225:
        return push_integer(1);
      case 135:
      case 315:
        return push_integer(-1);
      case 60:
      case 240:
        push_integer(3);
        push_rational(1, 2);
        return power();
      case 120:
      case 300:
        push_integer(3);
        push_rational(1, 2);
        power();
        return negate();
      default:
        push(symbol(TAN));
        push(p1);
        return list(2);
    }
  };

  //             exp(2 x) - 1
  //  tanh(x) = --------------
  //             exp(2 x) + 1
  Eval_tanh = function Eval_tanh() {
    var d;
    d = 0.0;
    push(cadr(p1));
    Eval();
    p1 = pop();
    if (car(p1) === symbol(ARCTANH)) {
      push(cadr(p1));
      return;
    }
    if (isdouble(p1)) {
      d = Math.tanh(p1.d);
      if (Math.abs(d) < 1e-10) {
        d = 0.0;
      }
      push_double(d);
      return;
    }
    if (isZeroAtomOrTensor(p1)) {
      push(zero);
      return;
    }
    push_symbol(TANH);
    push(p1);
    return list(2);
  };
  Eval_taylor = function Eval_taylor() {
    // 1st arg
    p1 = cdr(p1);
    push(car(p1));
    Eval();
    // 2nd arg
    p1 = cdr(p1);
    push(car(p1));
    Eval();
    p2 = pop();
    if (p2 === symbol(NIL)) {
      guess();
    } else {
      push(p2);
    }
    // 3rd arg
    p1 = cdr(p1);
    push(car(p1));
    Eval();
    p2 = pop();
    if (p2 === symbol(NIL)) {
      push_integer(24); // default number of terms
    } else {
      push(p2);
    }
    // 4th arg
    p1 = cdr(p1);
    push(car(p1));
    Eval();
    p2 = pop();
    if (p2 === symbol(NIL)) {
      push_integer(0); // default expansion point
    } else {
      push(p2);
    }
    return taylor();
  };

  //define F p1
  //define X p2
  //define N p3
  //define A p4
  //define C p5
  taylor = function taylor() {
    var i, k, l1, ref2;
    i = 0;
    k = 0;
    save();
    p4 = pop();
    p3 = pop();
    p2 = pop();
    p1 = pop();
    push(p3);
    k = pop_integer();
    if (isNaN(k)) {
      push_symbol(TAYLOR);
      push(p1);
      push(p2);
      push(p3);
      push(p4);
      list(5);
      restore();
      return;
    }
    push(p1);
    push(p2);
    push(p4);
    _subst();
    Eval();
    push_integer(1);
    p5 = pop();
    for (i = l1 = 1, ref2 = k; 1 <= ref2 ? l1 <= ref2 : l1 >= ref2; i = 1 <= ref2 ? ++l1 : --l1) {
      push(p1);
      push(p2);
      derivative();
      p1 = pop();
      if (isZeroAtomOrTensor(p1)) {
        break;
      }
      push(p5);
      push(p2);
      push(p4);
      subtract();
      multiply();
      p5 = pop();
      push(p1);
      push(p2);
      push(p4);
      _subst();
      Eval();
      push(p5);
      multiply();
      push_integer(i);
      factorial();
      divide();
      add();
    }
    return restore();
  };

  //(docs are generated from top-level comments, keep an eye on the formatting!)
  /* tensor =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   General description
  -------------------
  Tensors are a strange in-between of matrices and "computer"
  rectangular data structures.
   Tensors, unlike matrices, and like rectangular data structures,
  can have an arbitrary number of dimensions (rank), although a tensor with
  rank zero is just a scalar.
   Tensors, like matrices and unlike many computer rectangular data structures,
  must be "contiguous" i.e. have no empty spaces within its size, and "uniform",
  i.e. each element must have the same shape and hence the same rank.
   Also tensors have necessarily to make a distinction between row vectors,
  column vectors (which have a rank of 2) and uni-dimensional vectors (rank 1).
  They look very similar but they are fundamentally different.
   Tensors are 1-indexed, as per general math notation, and like Fortran,
  Lua, Mathematica, SASL, MATLAB, Julia, Erlang and APL.
   Tensors with elements that are also tensors get promoted to a higher rank
  , this is so we can represent and get the rank of a matrix correctly.
  Example:
  Start with a tensor of rank 1 with 2 elements (i.e. shape: 2)
  if you put in both its elements another 2 tensors
  of rank 1 with 2 elements (i.e. shape: 2)
  then the result is a tensor of rank 2 with shape 2,2
  i.e. the dimension of a tensor at all times must be
  the number of nested tensors in it.
  Also, all tensors must be "uniform" i.e. they must be accessed
  uniformly, which means that all existing elements of a tensor
  must be contiguous and have the same shape.
  Implication of it all is that you can't put arbitrary
  tensors inside tensors (like you would do to represent block matrices)
  Rather, all tensors inside tensors must have same shape (and hence, rank)
   Limitations
  -----------
  n.a.
   Implementation info
  -------------------
  Tensors are implemented...
   */
  // Called from the "eval" module to evaluate tensor elements.
  // p1 points to the tensor operand.
  Eval_tensor = function Eval_tensor() {
    var a, b, i, l1, m1, ndim, nelem, ref2, ref3;
    i = 0;
    ndim = 0;
    nelem = 0;
    //U **a, **b

    //---------------------------------------------------------------------

    //  create a new tensor for the result

    //---------------------------------------------------------------------
    check_tensor_dimensions(p1);
    nelem = p1.tensor.nelem;
    ndim = p1.tensor.ndim;
    p2 = alloc_tensor(nelem);
    p2.tensor.ndim = ndim;
    for (i = l1 = 0, ref2 = ndim; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      p2.tensor.dim[i] = p1.tensor.dim[i];
    }
    //---------------------------------------------------------------------

    //  b = Eval(a)

    //---------------------------------------------------------------------
    a = p1.tensor.elem;
    b = p2.tensor.elem;
    check_tensor_dimensions(p2);
    for (i = m1 = 0, ref3 = nelem; 0 <= ref3 ? m1 < ref3 : m1 > ref3; i = 0 <= ref3 ? ++m1 : --m1) {
      //console.log "push/pop: pushing element a of " + i
      push(a[i]);
      Eval();
      //console.log "push/pop: popping into element b of " + i
      b[i] = pop();
    }
    check_tensor_dimensions(p1);
    check_tensor_dimensions(p2);
    //---------------------------------------------------------------------

    //  push the result

    //---------------------------------------------------------------------
    push(p2);
    return promote_tensor();
  };

  //-----------------------------------------------------------------------------

  //  Add tensors

  //  Input:    Operands on stack

  //  Output:    Result on stack

  //-----------------------------------------------------------------------------
  tensor_plus_tensor = function tensor_plus_tensor() {
    var a, b, c, i, l1, m1, n1, ndim, nelem, ref2, ref3, ref4;
    i = 0;
    ndim = 0;
    nelem = 0;
    //U **a, **b, **c
    save();
    p2 = pop();
    p1 = pop();
    // are the dimension lists equal?
    ndim = p1.tensor.ndim;
    if (ndim !== p2.tensor.ndim) {
      push(symbol(NIL));
      restore();
      return;
    }
    for (i = l1 = 0, ref2 = ndim; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      if (p1.tensor.dim[i] !== p2.tensor.dim[i]) {
        push(symbol(NIL));
        restore();
        return;
      }
    }
    // create a new tensor for the result
    nelem = p1.tensor.nelem;
    p3 = alloc_tensor(nelem);
    p3.tensor.ndim = ndim;
    for (i = m1 = 0, ref3 = ndim; 0 <= ref3 ? m1 < ref3 : m1 > ref3; i = 0 <= ref3 ? ++m1 : --m1) {
      p3.tensor.dim[i] = p1.tensor.dim[i];
    }
    // c = a + b
    a = p1.tensor.elem;
    b = p2.tensor.elem;
    c = p3.tensor.elem;
    for (i = n1 = 0, ref4 = nelem; 0 <= ref4 ? n1 < ref4 : n1 > ref4; i = 0 <= ref4 ? ++n1 : --n1) {
      push(a[i]);
      push(b[i]);
      add();
      c[i] = pop();
    }
    // push the result
    push(p3);
    return restore();
  };

  //-----------------------------------------------------------------------------

  //  careful not to reorder factors

  //-----------------------------------------------------------------------------
  tensor_times_scalar = function tensor_times_scalar() {
    var a, b, i, l1, m1, ndim, nelem, ref2, ref3;
    i = 0;
    ndim = 0;
    nelem = 0;
    //U **a, **b
    save();
    p2 = pop();
    p1 = pop();
    ndim = p1.tensor.ndim;
    nelem = p1.tensor.nelem;
    p3 = alloc_tensor(nelem);
    p3.tensor.ndim = ndim;
    for (i = l1 = 0, ref2 = ndim; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      p3.tensor.dim[i] = p1.tensor.dim[i];
    }
    a = p1.tensor.elem;
    b = p3.tensor.elem;
    for (i = m1 = 0, ref3 = nelem; 0 <= ref3 ? m1 < ref3 : m1 > ref3; i = 0 <= ref3 ? ++m1 : --m1) {
      push(a[i]);
      push(p2);
      multiply();
      b[i] = pop();
    }
    push(p3);
    return restore();
  };
  scalar_times_tensor = function scalar_times_tensor() {
    var a, b, i, l1, m1, ndim, nelem, ref2, ref3;
    i = 0;
    ndim = 0;
    nelem = 0;
    //U **a, **b
    save();
    p2 = pop();
    p1 = pop();
    ndim = p2.tensor.ndim;
    nelem = p2.tensor.nelem;
    p3 = alloc_tensor(nelem);
    p3.tensor.ndim = ndim;
    for (i = l1 = 0, ref2 = ndim; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      p3.tensor.dim[i] = p2.tensor.dim[i];
    }
    a = p2.tensor.elem;
    b = p3.tensor.elem;
    for (i = m1 = 0, ref3 = nelem; 0 <= ref3 ? m1 < ref3 : m1 > ref3; i = 0 <= ref3 ? ++m1 : --m1) {
      push(p1);
      push(a[i]);
      multiply();
      b[i] = pop();
    }
    push(p3);
    return restore();
  };
  check_tensor_dimensions = function check_tensor_dimensions(p) {
    if (p.tensor.nelem !== p.tensor.elem.length) {
      console.log("something wrong in tensor dimensions");
      debugger;
    }
  };
  is_square_matrix = function is_square_matrix(p) {
    if (istensor(p) && p.tensor.ndim === 2 && p.tensor.dim[0] === p.tensor.dim[1]) {
      return 1;
    } else {
      return 0;
    }
  };

  //-----------------------------------------------------------------------------

  //  gradient of tensor

  //-----------------------------------------------------------------------------
  d_tensor_tensor = function d_tensor_tensor() {
    var a, b, c, i, j, l1, m1, n1, ndim, nelem, ref2, ref3, ref4;
    i = 0;
    j = 0;
    ndim = 0;
    nelem = 0;
    //U **a, **b, **c
    ndim = p1.tensor.ndim;
    nelem = p1.tensor.nelem;
    if (ndim + 1 >= MAXDIM) {
      push_symbol(DERIVATIVE);
      push(p1);
      push(p2);
      list(3);
      return;
    }
    p3 = alloc_tensor(nelem * p2.tensor.nelem);
    p3.tensor.ndim = ndim + 1;
    for (i = l1 = 0, ref2 = ndim; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      p3.tensor.dim[i] = p1.tensor.dim[i];
    }
    p3.tensor.dim[ndim] = p2.tensor.dim[0];
    a = p1.tensor.elem;
    b = p2.tensor.elem;
    c = p3.tensor.elem;
    for (i = m1 = 0, ref3 = nelem; 0 <= ref3 ? m1 < ref3 : m1 > ref3; i = 0 <= ref3 ? ++m1 : --m1) {
      for (j = n1 = 0, ref4 = p2.tensor.nelem; 0 <= ref4 ? n1 < ref4 : n1 > ref4; j = 0 <= ref4 ? ++n1 : --n1) {
        push(a[i]);
        push(b[j]);
        derivative();
        c[i * p2.tensor.nelem + j] = pop();
      }
    }
    return push(p3);
  };

  //-----------------------------------------------------------------------------

  //  gradient of scalar

  //-----------------------------------------------------------------------------
  d_scalar_tensor = function d_scalar_tensor() {
    var a, b, i, l1, ref2;
    //U **a, **b
    p3 = alloc_tensor(p2.tensor.nelem);
    p3.tensor.ndim = 1;
    p3.tensor.dim[0] = p2.tensor.dim[0];
    a = p2.tensor.elem;
    b = p3.tensor.elem;
    for (i = l1 = 0, ref2 = p2.tensor.nelem; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      push(p1);
      push(a[i]);
      derivative();
      b[i] = pop();
    }
    return push(p3);
  };

  //-----------------------------------------------------------------------------

  //  Derivative of tensor

  //-----------------------------------------------------------------------------
  d_tensor_scalar = function d_tensor_scalar() {
    var a, b, i, l1, m1, ref2, ref3;
    i = 0;
    //U **a, **b
    p3 = alloc_tensor(p1.tensor.nelem);
    p3.tensor.ndim = p1.tensor.ndim;
    for (i = l1 = 0, ref2 = p1.tensor.ndim; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      p3.tensor.dim[i] = p1.tensor.dim[i];
    }
    a = p1.tensor.elem;
    b = p3.tensor.elem;
    for (i = m1 = 0, ref3 = p1.tensor.nelem; 0 <= ref3 ? m1 < ref3 : m1 > ref3; i = 0 <= ref3 ? ++m1 : --m1) {
      push(a[i]);
      push(p2);
      derivative();
      b[i] = pop();
    }
    return push(p3);
  };
  compare_tensors = function compare_tensors(p1, p2) {
    var i, l1, m1, ref2, ref3;
    i = 0;
    if (p1.tensor.ndim < p2.tensor.ndim) {
      return -1;
    }
    if (p1.tensor.ndim > p2.tensor.ndim) {
      return 1;
    }
    for (i = l1 = 0, ref2 = p1.tensor.ndim; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      if (p1.tensor.dim[i] < p2.tensor.dim[i]) {
        return -1;
      }
      if (p1.tensor.dim[i] > p2.tensor.dim[i]) {
        return 1;
      }
    }
    for (i = m1 = 0, ref3 = p1.tensor.nelem; 0 <= ref3 ? m1 < ref3 : m1 > ref3; i = 0 <= ref3 ? ++m1 : --m1) {
      if (equal(p1.tensor.elem[i], p2.tensor.elem[i])) {
        continue;
      }
      if (lessp(p1.tensor.elem[i], p2.tensor.elem[i])) {
        return -1;
      } else {
        return 1;
      }
    }
    return 0;
  };

  //-----------------------------------------------------------------------------

  //  Raise a tensor to a power

  //  Input:    p1  tensor

  //      p2  exponent

  //  Output:    Result on stack

  //-----------------------------------------------------------------------------
  power_tensor = function power_tensor() {
    var i, k, l1, m1, n, ref2, ref3, results;
    i = 0;
    k = 0;
    n = 0;
    // first and last dims must be equal
    k = p1.tensor.ndim - 1;
    if (p1.tensor.dim[0] !== p1.tensor.dim[k]) {
      push_symbol(POWER);
      push(p1);
      push(p2);
      list(3);
      return;
    }
    push(p2);
    n = pop_integer();
    if (isNaN(n)) {
      push_symbol(POWER);
      push(p1);
      push(p2);
      list(3);
      return;
    }
    if (n === 0) {
      if (p1.tensor.ndim !== 2) {
        stop("power(tensor,0) with tensor rank not equal to 2");
      }
      n = p1.tensor.dim[0];
      p1 = alloc_tensor(n * n);
      p1.tensor.ndim = 2;
      p1.tensor.dim[0] = n;
      p1.tensor.dim[1] = n;
      for (i = l1 = 0, ref2 = n; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
        p1.tensor.elem[n * i + i] = one;
      }
      check_tensor_dimensions(p1);
      push(p1);
      return;
    }
    if (n < 0) {
      n = -n;
      push(p1);
      _inv();
      p1 = pop();
    }
    push(p1);
    results = [];
    for (i = m1 = 1, ref3 = n; 1 <= ref3 ? m1 < ref3 : m1 > ref3; i = 1 <= ref3 ? ++m1 : --m1) {
      push(p1);
      _inner();
      if (isZeroAtomOrTensor(stack[tos - 1])) {
        break;
      } else {
        results.push(void 0);
      }
    }
    return results;
  };
  copy_tensor = function copy_tensor() {
    var i, l1, m1, ref2, ref3;
    i = 0;
    save();
    p1 = pop();
    p2 = alloc_tensor(p1.tensor.nelem);
    p2.tensor.ndim = p1.tensor.ndim;
    for (i = l1 = 0, ref2 = p1.tensor.ndim; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      p2.tensor.dim[i] = p1.tensor.dim[i];
    }
    for (i = m1 = 0, ref3 = p1.tensor.nelem; 0 <= ref3 ? m1 < ref3 : m1 > ref3; i = 0 <= ref3 ? ++m1 : --m1) {
      p2.tensor.elem[i] = p1.tensor.elem[i];
    }
    check_tensor_dimensions(p1);
    check_tensor_dimensions(p2);
    push(p2);
    return restore();
  };

  // Tensors with elements that are also tensors get promoted to a higher rank.
  promote_tensor = function promote_tensor() {
    var i, j, k, l1, m1, n1, ndim, nelem, o1, q1, ref2, ref3, ref4, ref5, ref6;
    i = 0;
    j = 0;
    k = 0;
    nelem = 0;
    ndim = 0;
    save();
    p1 = pop();
    if (!istensor(p1)) {
      push(p1);
      restore();
      return;
    }
    p2 = p1.tensor.elem[0];
    for (i = l1 = 1, ref2 = p1.tensor.nelem; 1 <= ref2 ? l1 < ref2 : l1 > ref2; i = 1 <= ref2 ? ++l1 : --l1) {
      if (!compatible(p2, p1.tensor.elem[i])) {
        stop("Cannot promote tensor due to inconsistent tensor components.");
      }
    }
    if (!istensor(p2)) {
      push(p1);
      restore();
      return;
    }
    ndim = p1.tensor.ndim + p2.tensor.ndim;
    if (ndim > MAXDIM) {
      stop("tensor rank > " + MAXDIM);
    }
    nelem = p1.tensor.nelem * p2.tensor.nelem;
    p3 = alloc_tensor(nelem);
    p3.tensor.ndim = ndim;
    for (i = m1 = 0, ref3 = p1.tensor.ndim; 0 <= ref3 ? m1 < ref3 : m1 > ref3; i = 0 <= ref3 ? ++m1 : --m1) {
      p3.tensor.dim[i] = p1.tensor.dim[i];
    }
    for (j = n1 = 0, ref4 = p2.tensor.ndim; 0 <= ref4 ? n1 < ref4 : n1 > ref4; j = 0 <= ref4 ? ++n1 : --n1) {
      p3.tensor.dim[i + j] = p2.tensor.dim[j];
    }
    k = 0;
    for (i = o1 = 0, ref5 = p1.tensor.nelem; 0 <= ref5 ? o1 < ref5 : o1 > ref5; i = 0 <= ref5 ? ++o1 : --o1) {
      p2 = p1.tensor.elem[i];
      for (j = q1 = 0, ref6 = p2.tensor.nelem; 0 <= ref6 ? q1 < ref6 : q1 > ref6; j = 0 <= ref6 ? ++q1 : --q1) {
        p3.tensor.elem[k++] = p2.tensor.elem[j];
      }
    }
    check_tensor_dimensions(p2);
    check_tensor_dimensions(p3);
    push(p3);
    return restore();
  };
  compatible = function compatible(p, q) {
    var i, l1, ref2;
    if (!istensor(p) && !istensor(q)) {
      return 1;
    }
    if (!istensor(p) || !istensor(q)) {
      return 0;
    }
    if (p.tensor.ndim !== q.tensor.ndim) {
      return 0;
    }
    for (i = l1 = 0, ref2 = p.tensor.ndim; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      if (p.tensor.dim[i] !== q.tensor.dim[i]) {
        return 0;
      }
    }
    return 1;
  };

  // If the number of args is odd then the last arg is the default result.
  // Works like a switch statement. Could also be used for piecewise
  // functions? TODO should probably be called "switch"?
  Eval_test = function Eval_test() {
    var checkResult, orig;
    orig = p1;
    p1 = cdr(p1);
    while (iscons(p1)) {
      // odd number of parameters means that the
      // last argument becomes the default case
      // i.e. the one without a test.
      if (cdr(p1) === symbol(NIL)) {
        push(car(p1));
        Eval();
        return;
      }
      checkResult = isZeroLikeOrNonZeroLikeOrUndetermined(car(p1));
      if (checkResult == null) {
        // we couldn't determine the result
        // of a test. This means we can't conclude
        // anything about the result of the
        // overall test, so we must bail
        // with the unevalled test
        push(orig);
        return;
      } else if (checkResult) {
        // test succesful, we found out output
        push(cadr(p1));
        Eval();
        return;
      } else {
        // test unsuccessful, continue to the
        // next pair of test,value
        p1 = cddr(p1);
      }
    }
    // no test matched and there was no
    // catch-all case, so we return zero.
    return push_integer(0);
  };

  // we test A==B by first subtracting and checking if we symbolically
  // get zero. If not, we evaluate to float and check if we get a zero.
  // If we get another NUMBER then we know they are different.
  // If we get something else, then we don't know and we return the
  // unaveluated test, which is the same as saying "maybe".
  Eval_testeq = function Eval_testeq() {
    var checkResult, orig, subtractionResult;
    // first try without simplifyng both sides
    orig = p1;
    push(cadr(p1));
    Eval();
    push(caddr(p1));
    Eval();
    subtract();
    subtractionResult = pop();
    // OK so we are doing something tricky here
    // we are using isZeroLikeOrNonZeroLikeOrUndetermined to check if the result
    // is zero or not zero or unknown.
    // isZeroLikeOrNonZeroLikeOrUndetermined has some routines
    // to determine the zero-ness/non-zero-ness or
    // undeterminate-ness of things so we use
    // that here and down below.
    checkResult = isZeroLikeOrNonZeroLikeOrUndetermined(subtractionResult);
    if (checkResult) {
      push_integer(0);
      return;
    } else if (checkResult != null && !checkResult) {
      push_integer(1);
      return;
    }
    // we didn't get a simple numeric result but
    // let's try again after doing
    // a simplification on both sides
    push(cadr(p1));
    Eval();
    simplify();
    push(caddr(p1));
    Eval();
    simplify();
    subtract();
    subtractionResult = pop();
    checkResult = isZeroLikeOrNonZeroLikeOrUndetermined(subtractionResult);
    if (checkResult) {
      push_integer(0);
      return;
    } else if (checkResult != null && !checkResult) {
      push_integer(1);
      return;
    }
    // if we didn't get to a number then we
    // don't know whether the quantities are
    // different so do nothing
    return push(orig);
  };

  // Relational operators expect a numeric result for operand difference.
  Eval_testge = function Eval_testge() {
    var comparison, orig;
    orig = p1;
    comparison = cmp_args();
    if (comparison == null) {
      push(orig);
      return;
    }
    if (comparison >= 0) {
      return push_integer(1);
    } else {
      return push_integer(0);
    }
  };
  Eval_testgt = function Eval_testgt() {
    var comparison, orig;
    orig = p1;
    comparison = cmp_args();
    if (comparison == null) {
      push(orig);
      return;
    }
    if (comparison > 0) {
      return push_integer(1);
    } else {
      return push_integer(0);
    }
  };
  Eval_testle = function Eval_testle() {
    var comparison, orig;
    orig = p1;
    comparison = cmp_args();
    if (comparison == null) {
      push(orig);
      return;
    }
    if (comparison <= 0) {
      return push_integer(1);
    } else {
      return push_integer(0);
    }
  };
  Eval_testlt = function Eval_testlt() {
    var comparison, orig;
    orig = p1;
    comparison = cmp_args();
    if (comparison == null) {
      push(orig);
      return;
    }
    if (comparison < 0) {
      return push_integer(1);
    } else {
      return push_integer(0);
    }
  };

  // not definition
  Eval_not = function Eval_not() {
    var checkResult, wholeAndExpression;
    wholeAndExpression = p1;
    checkResult = isZeroLikeOrNonZeroLikeOrUndetermined(cadr(p1));
    if (checkResult == null) {
      // inconclusive test on predicate
      return push(wholeAndExpression);
    } else if (checkResult) {
      // true -> false
      return push_integer(0);
    } else {
      // false -> true
      return push_integer(1);
    }
  };

  /* and =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  a,b,...
   General description
  -------------------
  Logical-and of predicate expressions.
   */
  // and definition
  Eval_and = function Eval_and() {
    var andPredicates, checkResult, somePredicateUnknown, wholeAndExpression;
    wholeAndExpression = p1;
    andPredicates = cdr(wholeAndExpression);
    somePredicateUnknown = false;
    while (iscons(andPredicates)) {
      // eval each predicate
      checkResult = isZeroLikeOrNonZeroLikeOrUndetermined(car(andPredicates));
      if (checkResult == null) {
        // here we have stuff that is not reconducible to any
        // numeric value (or tensor with numeric values) e.g.
        // 'a+b', so it just means that we just don't know the
        // truth value of this particular predicate.
        // We'll track the fact that we found an unknown
        // predicate and we continue with the other predicates.
        // (note that in case some subsequent predicate will be false,
        // it won't matter that we found some unknowns and
        // the whole test will be immediately zero).
        somePredicateUnknown = true;
        andPredicates = cdr(andPredicates);
      } else if (checkResult) {
        // found a true, move on to the next predicate
        andPredicates = cdr(andPredicates);
      } else if (!checkResult) {
        // found a false, enough to falsify everything and return
        push_integer(0);
        return;
      }
    }
    // We checked all the predicates and none of them
    // was false. So they were all either true or unknown.
    // Now, if even just one was unknown, we'll have to call this
    // test as inconclusive and return the whole test expression.
    // If all the predicates were known, then we can conclude
    // that the test returns true.
    if (somePredicateUnknown) {
      return push(wholeAndExpression);
    } else {
      return push_integer(1);
    }
  };

  // or definition
  Eval_or = function Eval_or() {
    var checkResult, orPredicates, somePredicateUnknown, wholeOrExpression;
    wholeOrExpression = p1;
    orPredicates = cdr(wholeOrExpression);
    somePredicateUnknown = false;
    while (iscons(orPredicates)) {
      // eval each predicate
      checkResult = isZeroLikeOrNonZeroLikeOrUndetermined(car(orPredicates));
      if (checkResult == null) {
        // here we have stuff that is not reconducible to any
        // numeric value (or tensor with numeric values) e.g.
        // 'a+b', so it just means that we just don't know the
        // truth value of this particular predicate.
        // We'll track the fact that we found an unknown
        // predicate and we continue with the other predicates.
        // (note that in case some subsequent predicate will be false,
        // it won't matter that we found some unknowns and
        // the whole test will be immediately zero).
        somePredicateUnknown = true;
        orPredicates = cdr(orPredicates);
      } else if (checkResult) {
        // found a true, enough to return true
        push_integer(1);
        return;
      } else if (!checkResult) {
        // found a false, move on to the next predicate
        orPredicates = cdr(orPredicates);
      }
    }
    // We checked all the predicates and none of them
    // was true. So they were all either false or unknown.
    // Now, if even just one was unknown, we'll have to call this
    // test as inconclusive and return the whole test expression.
    // If all the predicates were known, then we can conclude
    // that the test returns false.
    if (somePredicateUnknown) {
      return push(wholeOrExpression);
    } else {
      return push_integer(0);
    }
  };

  // use subtract for cases like A < A + 1

  // TODO you could be smarter here and
  // simplify both sides only in the case
  // of "relational operator: cannot determine..."
  // a bit like we do in Eval_testeq
  cmp_args = function cmp_args() {
    var t;
    t = 0;
    push(cadr(p1));
    Eval();
    simplify();
    push(caddr(p1));
    Eval();
    simplify();
    subtract();
    p1 = pop();
    // try floating point if necessary
    if (p1.k !== NUM && p1.k !== DOUBLE) {
      push(p1);
      _yyfloat();
      Eval();
      p1 = pop();
    }
    //console.log "comparison: " + p1.toString()
    if (isZeroAtomOrTensor(p1)) {
      //console.log "comparison isZero "
      return 0;
    }
    switch (p1.k) {
      case NUM:
        if (MSIGN(p1.q.a) === -1) {
          t = -1;
        } else {
          t = 1;
        }
        break;
      case DOUBLE:
        //console.log "comparison p1.d: " + p1.d
        if (p1.d < 0.0) {
          t = -1;
        } else {
          t = 1;
        }
        break;
      default:
        //console.log "comparison is null"
        t = null;
    }
    return t;
  };

  /*
  Transform an expression using a pattern. The
  pattern can come from the integrals table or
  the user-defined patterns.
   The expression and free variable are on the stack.
   The argument s is a null terminated list of transform rules.
   For example, see the itab (integrals table)
   Internally, the following symbols are used:
     F  input expression
     X  free variable, i.e. F of X
     A  template expression
     B  result expression
     C  list of conditional expressions
   Puts the final expression on top of stack
  (whether it's transformed or not) and returns
  true is successful, false if not.
   */
  // p1 and p2 are tmps

  //define F p3
  //define X p4
  //define A p5
  //define B p6
  //define C p7
  _transform = function transform(s, generalTransform) {
    var bookmarkTosToPrintDecomps, eachTransformEntry, i, l1, len, len1, m1, n1, numberOfDecomps, ref2, restTerm, secondTerm, success, theTransform, transform_h, transformationSuccessful, transformedTerms;
    transform_h = 0;
    save();
    p1 = null;
    p4 = pop(); // X i.e. free variable
    p3 = pop(); // F i.e. input expression
    if (DEBUG) {
      console.log("         !!!!!!!!!   transform on: " + p3);
    }
    saveMetaBindings();
    set_binding(symbol(METAX), p4);
    // put constants in F(X) on the stack
    transform_h = tos;
    push_integer(1);
    push(p3);
    push(p4);
    _polyform();
    push(p4);
    bookmarkTosToPrintDecomps = tos - 2;
    _decomp(generalTransform);
    numberOfDecomps = tos - bookmarkTosToPrintDecomps;
    if (DEBUG) {
      console.log("  " + numberOfDecomps + " decomposed elements ====== ");
      for (i = l1 = 0, ref2 = numberOfDecomps; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
        console.log("  decomposition element " + i + ": " + stack[tos - 1 - i]);
      }
    }
    transformationSuccessful = false;
    if (generalTransform) {
      if (!isNumericAtom(p3)) {
        theTransform = s;
        if (DEBUG) {
          console.log("applying transform: " + theTransform);
        }
        if (DEBUG) {
          console.log("scanning table entry " + theTransform);
        }
        push(theTransform);
        // replacements of meta variables. Note that we don't
        // use scan_meta because the pattern is not a string
        // that we have to parse, it's a tree already.
        // replace a_ with METAA in the passed transformation
        push(symbol(SYMBOL_A_UNDERSCORE));
        push(symbol(METAA));
        _subst();
        // replace b_ with METAB in the passed transformation
        push(symbol(SYMBOL_B_UNDERSCORE));
        push(symbol(METAB));
        _subst();
        // replace x_ with METAX in the passed transformation
        push(symbol(SYMBOL_X_UNDERSCORE));
        push(symbol(METAX));
        _subst();
        p1 = pop();
        p5 = car(p1);
        if (DEBUG) {
          console.log("template expression: " + p5);
        }
        p6 = cadr(p1);
        p7 = cddr(p1);
        /*
        p5 = p1.tensor.elem[0]
        p6 = p1.tensor.elem[1]
        for i in [2..(p1.tensor.elem.length-1)]
          push p1.tensor.elem[i]
        list(p1.tensor.elem.length - 2)
        p7 = pop()
        */
        if (f_equals_a(transform_h, generalTransform)) {
          // successful transformation,
          // transformed result is in p6
          transformationSuccessful = true;
        } else {
          // the match failed but perhaps we can match
          // something lower down in the tree, so
          // let's recurse the tree
          if (DEBUG) {
            console.log("p3 at this point: " + p3);
          }
          transformedTerms = [];
          if (DEBUG) {
            console.log("car(p3): " + car(p3));
          }
          restTerm = p3;
          if (iscons(restTerm)) {
            transformedTerms.push(car(p3));
            restTerm = cdr(p3);
          }
          while (iscons(restTerm)) {
            secondTerm = car(restTerm);
            restTerm = cdr(restTerm);
            if (DEBUG) {
              console.log("tos before recursive transform: " + tos);
            }
            push(secondTerm);
            push_symbol(NIL);
            if (DEBUG) {
              console.log("testing: " + secondTerm);
            }
            //if (secondTerm+"") == "eig(A x,transpose(A x))()"
            //  debugger
            if (DEBUG) {
              console.log("about to try to simplify other term: " + secondTerm);
            }
            success = _transform(s, generalTransform);
            transformationSuccessful = transformationSuccessful || success;
            transformedTerms.push(pop());
            if (DEBUG) {
              console.log("tried to simplify other term: " + secondTerm + " ...successful?: " + success + " ...transformed: " + transformedTerms[transformedTerms.length - 1]);
            }
          }
          // recreate the tree we were passed,
          // but with all the terms being transformed
          if (transformedTerms.length !== 0) {
            for (m1 = 0, len = transformedTerms.length; m1 < len; m1++) {
              i = transformedTerms[m1];
              push(i);
            }
            list(transformedTerms.length);
            p6 = pop(); // "integrals" mode
          }
        }
      }
    } else {
      for (n1 = 0, len1 = s.length; n1 < len1; n1++) {
        eachTransformEntry = s[n1];
        if (DEBUG) {
          console.log("scanning table entry " + eachTransformEntry);
          if ((eachTransformEntry + "").indexOf("f(sqrt(a+b*x),2/3*1/b*sqrt((a+b*x)^3))") !== -1) {
            debugger;
          }
        }
        if (eachTransformEntry) {
          scan_meta(eachTransformEntry);
          p1 = pop();
          p5 = cadr(p1);
          p6 = caddr(p1);
          p7 = cdddr(p1);
          /*
          p5 = p1.tensor.elem[0]
          p6 = p1.tensor.elem[1]
          for i in [2..(p1.tensor.elem.length-1)]
            push p1.tensor.elem[i]
          list(p1.tensor.elem.length - 2)
          p7 = pop()
          */
          if (f_equals_a(transform_h, generalTransform)) {
            // there is a successful transformation,
            // transformed result is in p6
            transformationSuccessful = true;
            break;
          }
        }
      }
    }
    moveTos(transform_h);
    if (transformationSuccessful) {
      //console.log "transformation successful"
      // a transformation was successful
      push(p6);
      Eval();
      p1 = pop();
      //console.log "...into: " + p1
      transformationSuccessful = true;
    } else {
      // transformations failed
      if (generalTransform) {
        // result = original expression
        p1 = p3;
      } else {
        p1 = symbol(NIL);
      }
    }
    restoreMetaBindings();
    push(p1);
    restore();
    return transformationSuccessful;
  };
  saveMetaBindings = function saveMetaBindings() {
    push(get_binding(symbol(METAA)));
    push(get_binding(symbol(METAB)));
    return push(get_binding(symbol(METAX)));
  };
  restoreMetaBindings = function restoreMetaBindings() {
    set_binding(symbol(METAX), pop());
    set_binding(symbol(METAB), pop());
    return set_binding(symbol(METAA), pop());
  };

  // search for a METAA and METAB such that F = A
  f_equals_a = function f_equals_a(h, generalTransform) {
    var fea_i, fea_j, l1, m1, originalexpanding, ref2, ref3, ref4, ref5;
    fea_i = 0;
    fea_j = 0;
    for (fea_i = l1 = ref2 = h, ref3 = tos; ref2 <= ref3 ? l1 < ref3 : l1 > ref3; fea_i = ref2 <= ref3 ? ++l1 : --l1) {
      set_binding(symbol(METAA), stack[fea_i]);
      if (DEBUG) {
        console.log("  binding METAA to " + get_binding(symbol(METAA)));
      }
      for (fea_j = m1 = ref4 = h, ref5 = tos; ref4 <= ref5 ? m1 < ref5 : m1 > ref5; fea_j = ref4 <= ref5 ? ++m1 : --m1) {
        set_binding(symbol(METAB), stack[fea_j]);
        if (DEBUG) {
          console.log("  binding METAB to " + get_binding(symbol(METAB)));
        }
        // now test all the conditions (it's an and between them)
        p1 = p7;
        while (iscons(p1)) {
          push(car(p1));
          Eval();
          p2 = pop();
          if (isZeroAtomOrTensor(p2)) {
            break;
          }
          p1 = cdr(p1);
        }
        if (iscons(p1)) {
          // conditions are not met,
          // skip to the next binding of metas
          continue;
        }
        push(p3);
        if (DEBUG) {
          console.log("about to evaluate template expression: " + p5 + " binding METAA to " + get_binding(symbol(METAA)) + " and binding METAB to " + get_binding(symbol(METAB)) + " and binding METAX to " + get_binding(symbol(METAX)));
        }
        push(p5);
        if (generalTransform) {
          originalexpanding = expanding;
          expanding = false;
        }
        Eval();
        if (generalTransform) {
          expanding = originalexpanding;
        }
        if (DEBUG) {
          console.log("  comparing " + stack[tos - 1] + " to: " + stack[tos - 2]);
        }
        subtract();
        p1 = pop();
        if (isZeroAtomOrTensor(p1)) {
          if (DEBUG) {
            console.log("binding METAA to " + get_binding(symbol(METAA)));
            console.log("binding METAB to " + get_binding(symbol(METAB)));
            console.log("binding METAX to " + get_binding(symbol(METAX)));
            console.log("comparing " + p3 + " to: " + p5);
          }
          return 1; // yes
        }
      }
    }

    return 0; // no
  };

  // Transpose tensor indices
  Eval_transpose = function Eval_transpose() {
    push(cadr(p1));
    Eval();
    // add default params if they
    // have not been passed
    if (cddr(p1) === symbol(NIL)) {
      push_integer(1);
      push_integer(2);
    } else {
      push(caddr(p1));
      Eval();
      push(cadddr(p1));
      Eval();
    }
    return _transpose();
  };
  _transpose = function transpose() {
    var a, accumulator, ai, an, b, eachEntry, i, innerTranspSwitch1, innerTranspSwitch2, j, k, l, l1, m, m1, n1, ndim, nelem, o1, q1, r1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, s1, t;
    i = 0;
    j = 0;
    k = 0;
    l = 0;
    m = 0;
    ndim = 0;
    nelem = 0;
    t = 0;
    ai = [];
    an = [];
    for (i = l1 = 0, ref2 = MAXDIM; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      ai[i] = 0;
      an[i] = 0;
    }
    //U **a, **b
    save();
    // by default p3 is 2 and p2 is 1
    p3 = pop(); // index to be transposed
    p2 = pop(); // other index to be transposed
    p1 = pop(); // what needs to be transposed

    // a transposition just goes away when
    // applied to a scalar
    if (isNumericAtom(p1)) {
      push(p1);
      restore();
      return;
    }
    // transposition goes away for identity matrix
    if (isplusone(p2) && isplustwo(p3) || isplusone(p3) && isplustwo(p2)) {
      if (isidentitymatrix(p1)) {
        push(p1);
        restore();
        return;
      }
    }
    // a transposition just goes away when
    // applied to another transposition with
    // the same columns to be switched
    if (istranspose(p1)) {
      innerTranspSwitch1 = car(cdr(cdr(p1)));
      innerTranspSwitch2 = car(cdr(cdr(cdr(p1))));
      if (equal(innerTranspSwitch1, p3) && equal(innerTranspSwitch2, p2) || equal(innerTranspSwitch2, p3) && equal(innerTranspSwitch1, p2) || equal(innerTranspSwitch1, symbol(NIL)) && equal(innerTranspSwitch2, symbol(NIL)) && (isplusone(p3) && isplustwo(p2) || isplusone(p2) && isplustwo(p3))) {
        push(car(cdr(p1)));
        restore();
        return;
      }
    }
    // if operand is a sum then distribute
    // (if we are in expanding mode)
    if (expanding && isadd(p1)) {
      p1 = cdr(p1);
      push(zero);
      while (iscons(p1)) {
        push(car(p1));
        // add the dimensions to switch but only if
        // they are not the default ones.
        push(p2);
        push(p3);
        _transpose();
        add();
        p1 = cdr(p1);
      }
      restore();
      return;
    }
    // if operand is a multiplication then distribute
    // (if we are in expanding mode)
    if (expanding && ismultiply(p1)) {
      p1 = cdr(p1);
      push(one);
      while (iscons(p1)) {
        push(car(p1));
        // add the dimensions to switch but only if
        // they are not the default ones.
        push(p2);
        push(p3);
        _transpose();
        multiply();
        p1 = cdr(p1);
      }
      restore();
      return;
    }
    // distribute the transpose of a dot
    // if in expanding mode
    // note that the distribution happens
    // in reverse as per tranpose rules.
    // The dot operator is not
    // commutative, so, it matters.
    if (expanding && isinnerordot(p1)) {
      p1 = cdr(p1);
      accumulator = [];
      while (iscons(p1)) {
        accumulator.push([car(p1), p2, p3]);
        p1 = cdr(p1);
      }
      for (eachEntry = m1 = ref3 = accumulator.length - 1; ref3 <= 0 ? m1 <= 0 : m1 >= 0; eachEntry = ref3 <= 0 ? ++m1 : --m1) {
        push(accumulator[eachEntry][0]);
        push(accumulator[eachEntry][1]);
        push(accumulator[eachEntry][2]);
        _transpose();
        if (eachEntry !== accumulator.length - 1) {
          _inner();
        }
      }
      restore();
      return;
    }
    if (!istensor(p1)) {
      if (!isZeroAtomOrTensor(p1)) {
        //stop("transpose: tensor expected, 1st arg is not a tensor")
        push_symbol(TRANSPOSE);
        push(p1);
        if ((!isplusone(p2) || !isplustwo(p3)) && (!isplusone(p3) || !isplustwo(p2))) {
          push(p2);
          push(p3);
          list(4);
        } else {
          list(2);
        }
        restore();
        return;
      }
      push(zero);
      restore();
      return;
    }
    ndim = p1.tensor.ndim;
    nelem = p1.tensor.nelem;
    // is it a vector?
    // so here it's something curious - note how vectors are
    // not really special two-dimensional matrices, but rather
    // 1-dimension objects (like tensors can be). So since
    // they have one dimension, transposition has no effect.
    // (as opposed as if they were special two-dimensional
    // matrices)
    // see also Ran Pan, Tensor Transpose and Its Properties. CoRR abs/1411.1503 (2014)
    if (ndim === 1) {
      push(p1);
      restore();
      return;
    }
    push(p2);
    l = pop_integer();
    push(p3);
    m = pop_integer();
    if (l < 1 || l > ndim || m < 1 || m > ndim) {
      stop("transpose: index out of range");
    }
    l--;
    m--;
    p2 = alloc_tensor(nelem);
    p2.tensor.ndim = ndim;
    for (i = n1 = 0, ref4 = ndim; 0 <= ref4 ? n1 < ref4 : n1 > ref4; i = 0 <= ref4 ? ++n1 : --n1) {
      p2.tensor.dim[i] = p1.tensor.dim[i];
    }
    p2.tensor.dim[l] = p1.tensor.dim[m];
    p2.tensor.dim[m] = p1.tensor.dim[l];
    a = p1.tensor.elem;
    b = p2.tensor.elem;
    // init tensor index
    for (i = o1 = 0, ref5 = ndim; 0 <= ref5 ? o1 < ref5 : o1 > ref5; i = 0 <= ref5 ? ++o1 : --o1) {
      ai[i] = 0;
      an[i] = p1.tensor.dim[i];
    }
    // copy components from a to b
    for (i = q1 = 0, ref6 = nelem; 0 <= ref6 ? q1 < ref6 : q1 > ref6; i = 0 <= ref6 ? ++q1 : --q1) {
      // swap indices l and m
      t = ai[l];
      ai[l] = ai[m];
      ai[m] = t;
      t = an[l];
      an[l] = an[m];
      an[m] = t;
      k = 0;
      for (j = r1 = 0, ref7 = ndim; 0 <= ref7 ? r1 < ref7 : r1 > ref7; j = 0 <= ref7 ? ++r1 : --r1) {
        k = k * an[j] + ai[j];
      }
      // swap indices back
      t = ai[l];
      ai[l] = ai[m];
      ai[m] = t;
      t = an[l];
      an[l] = an[m];
      an[m] = t;
      b[k] = a[i];
      // increment tensor index

      // Suppose the tensor dimensions are 2 and 3.
      // Then the tensor index ai increments as follows:
      // 00 -> 01
      // 01 -> 02
      // 02 -> 10
      // 10 -> 11
      // 11 -> 12
      // 12 -> 00
      for (j = s1 = ref8 = ndim - 1; ref8 <= 0 ? s1 <= 0 : s1 >= 0; j = ref8 <= 0 ? ++s1 : --s1) {
        if (++ai[j] < an[j]) {
          break;
        }
        ai[j] = 0;
      }
    }
    push(p2);
    return restore();
  };

  // Evaluate a user defined function

  //define F p3 # F is the function body
  //define A p4 # A is the formal argument list
  //define B p5 # B is the calling argument list
  //define S p6 # S is the argument substitution list

  // we got here because there was a function invocation and
  // it's not been parsed (and consequently tagged) as any
  // system function.
  // So we are dealing with another function.
  // The function could be actually defined, or not yet,
  // so we'll deal with both cases.
  /* d =====================================================================
   Tags
  ----
  scripting, JS, internal, treenode, general concept
   Parameters
  ----------
  f,x
   General description
  -------------------
  Returns the partial derivative of f with respect to x. x can be a vector e.g. [x,y].
   */
  Eval_user_function = function Eval_user_function() {
    var bodyAndFormalArguments, h;
    // Use "derivative" instead of "d" if there is no user function "d"
    if (DEBUG) {
      console.log("Eval_user_function evaluating: " + car(p1));
    }
    if (car(p1) === symbol(SYMBOL_D) && get_binding(symbol(SYMBOL_D)) === symbol(SYMBOL_D)) {
      Eval_derivative();
      return;
    }
    // normally car(p1) is a symbol with the function name
    // but it could be something that has to be
    // evaluated to get to the function definition instead
    // (e.g. the function is an element of an array)
    // so we do an eval to sort it all out. 
    push(car(p1));
    Eval();
    // we expect to find either the body and
    // formula arguments, OR, if the function
    // has not been defined yet, then the
    // function will just contain its own name, as
    // all undefined variables do.
    bodyAndFormalArguments = pop();
    if (isNumericAtom(bodyAndFormalArguments)) {
      stop("expected function invocation, found multiplication instead. Use '*' symbol explicitly for multiplication.");
    } else if (istensor(bodyAndFormalArguments)) {
      stop("expected function invocation, found tensor product instead. Use 'dot/inner' explicitly.");
    } else if (isstr(bodyAndFormalArguments)) {
      stop("expected function, found string instead.");
    }
    p3 = car(cdr(bodyAndFormalArguments)); // p3 is function body F
    // p4 is the formal argument list
    // that is also contained here in the FUNCTION node 
    p4 = car(cdr(cdr(bodyAndFormalArguments)));
    p5 = cdr(p1);
    // next check is whether evaluation did nothing, so the function is undefined
    if (car(bodyAndFormalArguments) !== symbol(FUNCTION) || bodyAndFormalArguments === car(p1)) {
      // p3 is F
      // leave everything as it was and return
      h = tos;
      push(bodyAndFormalArguments);
      p1 = p5;
      while (iscons(p1)) {
        push(car(p1));
        Eval();
        p1 = cdr(p1);
      }
      list(tos - h);
      return;
    }
    // Create the argument substitution list p6(S)
    p1 = p4;
    p2 = p5;
    h = tos;
    while (iscons(p1) && iscons(p2)) {
      push(car(p1));
      push(car(p2));
      // why explicitly Eval the parameters when
      // the body of the function is
      // evalled anyways? Commenting it out. All tests pass...
      //Eval()
      p1 = cdr(p1);
      p2 = cdr(p2);
    }
    list(tos - h);
    p6 = pop();
    push(p3);
    if (iscons(p6)) {
      // p6 is S
      push(p6);
      _rewrite_args();
    }
    //console.log "rewritten body: " + stack[tos-1]
    return Eval();
  };

  // Rewrite by expanding symbols that contain args
  _rewrite_args = function rewrite_args() {
    var h, n;
    n = 0;
    save();
    // subst. list which is a list
    // where each consecutive pair
    // is what needs to be substituted and with what
    p2 = pop();
    p1 = pop();
    if (istensor(p1)) {
      n = rewrite_args_tensor();
      restore();
      return n;
    }
    if (iscons(p1)) {
      h = tos;
      if (car(p1) === car(p2)) {
        // rewrite a function in
        // the body with the one
        // passed from the paramaters
        push_symbol(EVAL);
        push(car(cdr(p2)));
        list(2);
      } else {
        // if there is no match
        // then no substitution necessary
        push(car(p1));
      }
      // continue recursively to
      // rewrite the rest of the body
      p1 = cdr(p1);
      while (iscons(p1)) {
        push(car(p1));
        push(p2);
        n += _rewrite_args();
        p1 = cdr(p1);
      }
      list(tos - h);
      restore();
      return n;
    }
    if (!issymbol(p1)) {
      push(p1);
      restore();
      return 0;
    }
    // Here we are in a symbol case
    // so we need to substitute

    // Check if there is a direct match
    // of symbols right away
    p3 = p2;
    while (iscons(p3)) {
      if (p1 === car(p3)) {
        push(cadr(p3));
        restore();
        return 1;
      }
      p3 = cddr(p3);
    }
    // Get the symbol's content, if _that_
    // matches then do the substitution
    p3 = get_binding(p1);
    push(p3);
    if (p1 !== p3) {
      push(p2);
      n = _rewrite_args();
      if (n === 0) {
        pop();
        push(p1); // restore if not rewritten with arg
      }
    }

    restore();
    return n;
  };
  rewrite_args_tensor = function rewrite_args_tensor() {
    var i, l1, n, ref2;
    n = 0;
    i = 0;
    push(p1);
    copy_tensor();
    p1 = pop();
    for (i = l1 = 0, ref2 = p1.tensor.nelem; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      push(p1.tensor.elem[i]);
      push(p2);
      n += _rewrite_args();
      p1.tensor.elem[i] = pop();
    }
    check_tensor_dimensions(p1);
    push(p1);
    return n;
  };
  Eval_zero = function Eval_zero() {
    var i, k, l1, m, m1, n, ref2, ref3;
    i = 0;
    k = [];
    m = 0;
    n = 0;
    for (i = l1 = 0, ref2 = MAXDIM; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      k[i] = 0;
    }
    m = 1;
    n = 0;
    p2 = cdr(p1);
    while (iscons(p2)) {
      push(car(p2));
      Eval();
      i = pop_integer();
      if (i < 1 || isNaN(i)) {
        // if the input is nonsensical
        // just return 0
        push(zero);
        return;
      }
      m *= i;
      k[n++] = i;
      p2 = cdr(p2);
    }
    if (n === 0) {
      push(zero);
      return;
    }
    p1 = alloc_tensor(m);
    p1.tensor.ndim = n;
    for (i = m1 = 0, ref3 = n; 0 <= ref3 ? m1 < ref3 : m1 > ref3; i = 0 <= ref3 ? ++m1 : --m1) {
      p1.tensor.dim[i] = k[i];
    }
    return push(p1);
  };
  allocatedId = 0;
  alloc_tensor = function alloc_tensor(nelem) {
    var i, l1, p, ref2;
    i = 0;
    p = new U();
    p.k = TENSOR;
    p.tensor = new tensor();
    p.tensor.nelem = nelem;
    for (i = l1 = 0, ref2 = nelem; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      p.tensor.elem[i] = zero;
    }
    p.tensor.allocatedId = allocatedId;
    //if allocatedId == 9
    //  debugger
    allocatedId++;
    check_tensor_dimensions(p);
    return p;
  };

  /*
  // garbage collector
   void
  gc(void)
  {
    int i, j
    U *p
     // tag everything
     for (i = 0; i < mcount; i++) {
      p = mem[i]
      for (j = 0; j < N; j++)
        p[j].tag = 1
    }
     // untag what's used
     untag(p0)
    untag(p1)
    untag(p2)
    untag(p3)
    untag(p4)
    untag(p5)
    untag(p6)
    untag(p7)
    untag(p8)
    untag(p9)
     untag(one)
    untag(zero)
    untag(imaginaryunit)
     for (i = 0; i < NSYM; i++) {
      untag(binding[i])
      untag(arglist[i])
    }
     for (i = 0; i < tos; i++)
      untag(stack[i])
     for (i = (int) (frame - stack); i < TOS; i++)
      untag(stack[i])
     // collect everything that's still tagged
     free_count = 0
     for (i = 0; i < mcount; i++) {
      p = mem[i]
      for (j = 0; j < N; j++) {
        if (p[j].tag == 0)
          continue
        // still tagged so it's unused, put on free list
        switch (p[j].k) {
        case TENSOR:
          free(p[j].u.tensor)
          break
        case STR:
          free(p[j].u.str)
          break
        case NUM:
          mfree(p[j].u.q.a)
          mfree(p[j].u.q.b)
          break
        }
        p[j].k = CONS; // so no double free occurs above
        p[j].u.cons.cdr = free_list
        free_list = p + j
        free_count++
      }
    }
  }
   void
  untag(U *p)
  {
    int i
     if (iscons(p)) {
      do {
        if (p->tag == 0)
          return
        p->tag = 0
        untag(p->u.cons.car)
        p = p->u.cons.cdr
      } while (iscons(p))
      untag(p)
      return
    }
     if (p->tag) {
      p->tag = 0
       if (istensor(p)) {
        for (i = 0; i < p->u.tensor->nelem; i++)
          untag(p->u.tensor->elem[i])
      }
    }
  }
   // get memory for 100,000 atoms
   void
  alloc_mem(void)
  {
    int i
    U *p
    if (mcount == M)
      return
    p = (U *) malloc(N * sizeof (struct U))
    if (p == NULL)
      return
    mem[mcount++] = p
    for (i = 0; i < N; i++) {
      p[i].k = CONS; // so no free in gc
      p[i].u.cons.cdr = p + i + 1
    }
    p[N - 1].u.cons.cdr = free_list
    free_list = p
    free_count += N
  }
   void
  print_mem_info(void)
  {
    char buf[100]
     sprintf(buf, "%d blocks (%d bytes/block)\n", N * mcount, (int) sizeof (U))
    printstr(buf)
     sprintf(buf, "%d free\n", free_count)
    printstr(buf)
     sprintf(buf, "%d used\n", N * mcount - free_count)
    printstr(buf)
  }
  */
  // returns 1 if expr p contains expr q, otherweise returns 0
  _Find = function Find(p, q) {
    var i, l1, ref2;
    i = 0;
    if (equal(p, q)) {
      return 1;
    }
    if (istensor(p)) {
      for (i = l1 = 0, ref2 = p.tensor.nelem; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
        if (_Find(p.tensor.elem[i], q)) {
          return 1;
        }
      }
      return 0;
    }
    while (iscons(p)) {
      if (_Find(car(p), q)) {
        return 1;
      }
      p = cdr(p);
    }
    return 0;
  };

  // find stuff like (-1)^(something (but disregard
  // imaginary units which are in the form (-1)^(1/2))
  _findPossibleClockForm = function findPossibleClockForm(p) {
    var i, l1, ref2;
    i = 0;
    if (isimaginaryunit(p)) {
      return 0;
    }
    if (car(p) === symbol(POWER) && !isinteger(caddr(p1))) {
      if (_Find(cadr(p), imaginaryunit)) {
        //console.log "found i^fraction " + p
        return 1;
      }
    }
    if (car(p) === symbol(POWER) && equaln(cadr(p), -1) && !isinteger(caddr(p1))) {
      //console.log "found -1^fraction in " + p
      return 1;
    }
    if (istensor(p)) {
      for (i = l1 = 0, ref2 = p.tensor.nelem; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
        if (_findPossibleClockForm(p.tensor.elem[i])) {
          return 1;
        }
      }
      return 0;
    }
    while (iscons(p)) {
      if (_findPossibleClockForm(car(p))) {
        return 1;
      }
      p = cdr(p);
    }
    return 0;
  };

  // find stuff like (e)^(i something)
  _findPossibleExponentialForm = function findPossibleExponentialForm(p) {
    var i, l1, ref2;
    i = 0;
    if (car(p) === symbol(POWER) && cadr(p) === symbol(E)) {
      return _Find(caddr(p), imaginaryunit);
    }
    if (istensor(p)) {
      for (i = l1 = 0, ref2 = p.tensor.nelem; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
        if (_findPossibleExponentialForm(p.tensor.elem[i])) {
          return 1;
        }
      }
      return 0;
    }
    while (iscons(p)) {
      if (_findPossibleExponentialForm(car(p))) {
        return 1;
      }
      p = cdr(p);
    }
    return 0;
  };
  $.Find = _Find;
  init = function init() {
    var i, l1, ref2;
    //debugger
    //console.log "DOING AN INIT ========================================================================"
    i = 0;
    flag = 0;
    reset_after_error();
    chainOfUserSymbolsNotFunctionsBeingEvaluated = [];
    if (flag) {
      // already initted
      return;
    }
    flag = 1;
    // total clearout of symbol table
    for (i = l1 = 0, ref2 = NSYM; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      symtab[i] = new U();
      symtab[i].k = SYM;
      binding[i] = symtab[i];
      isSymbolReclaimable[i] = false;
    }
    return defn();
  };
  defn_str = ["version=\"" + version + "\"", "e=exp(1)", "i=sqrt(-1)", "autoexpand=1", "assumeRealVariables=1", "trange=[-pi,pi]", "xrange=[-10,10]", "yrange=[-10,10]", "last=0", "trace=0", "forceFixedPrintout=1", "maxFixedPrintoutDigits=6", "printLeaveEAlone=1", "printLeaveXAlone=0",
  // cross definition
  "cross(u,v)=[u[2]*v[3]-u[3]*v[2],u[3]*v[1]-u[1]*v[3],u[1]*v[2]-u[2]*v[1]]",
  // curl definition
  "curl(v)=[d(v[3],y)-d(v[2],z),d(v[1],z)-d(v[3],x),d(v[2],x)-d(v[1],y)]",
  // div definition
  "div(v)=d(v[1],x)+d(v[2],y)+d(v[3],z)",
  // Note that we use the mathematics / Javascript / Mathematica
  // convention that "log" is indeed the natural logarithm.

  // In engineering, biology, astronomy, "log" can stand instead
  // for the "common" logarithm i.e. base 10. Also note that Google
  // calculations use log for the common logarithm.
  "ln(x)=log(x)"];
  defn = function defn() {
    var definitionOfInterest, defn_i, l1, originalCodeGen, ref2;
    p0 = symbol(NIL);
    p1 = symbol(NIL);
    p2 = symbol(NIL);
    p3 = symbol(NIL);
    p4 = symbol(NIL);
    p5 = symbol(NIL);
    p6 = symbol(NIL);
    p7 = symbol(NIL);
    p8 = symbol(NIL);
    p9 = symbol(NIL);
    std_symbol("abs", ABS);
    std_symbol("add", ADD);
    std_symbol("adj", ADJ);
    std_symbol("and", AND);
    std_symbol("approxratio", APPROXRATIO);
    std_symbol("arccos", ARCCOS);
    std_symbol("arccosh", ARCCOSH);
    std_symbol("arcsin", ARCSIN);
    std_symbol("arcsinh", ARCSINH);
    std_symbol("arctan", ARCTAN);
    std_symbol("arctanh", ARCTANH);
    std_symbol("arg", ARG);
    std_symbol("atomize", ATOMIZE);
    std_symbol("besselj", BESSELJ);
    std_symbol("bessely", BESSELY);
    std_symbol("binding", BINDING);
    std_symbol("binomial", BINOMIAL);
    std_symbol("ceiling", CEILING);
    std_symbol("check", CHECK);
    std_symbol("choose", CHOOSE);
    std_symbol("circexp", CIRCEXP);
    std_symbol("clear", CLEAR);
    std_symbol("clearall", CLEARALL);
    std_symbol("clearpatterns", CLEARPATTERNS);
    std_symbol("clock", CLOCK);
    std_symbol("coeff", COEFF);
    std_symbol("cofactor", COFACTOR);
    std_symbol("condense", CONDENSE);
    std_symbol("conj", CONJ);
    std_symbol("contract", CONTRACT);
    std_symbol("cos", COS);
    std_symbol("cosh", COSH);
    std_symbol("decomp", DECOMP);
    std_symbol("defint", DEFINT);
    std_symbol("deg", DEGREE);
    std_symbol("denominator", DENOMINATOR);
    std_symbol("det", DET);
    std_symbol("derivative", DERIVATIVE);
    std_symbol("dim", DIM);
    std_symbol("dirac", DIRAC);
    std_symbol("divisors", DIVISORS);
    std_symbol("do", DO);
    std_symbol("dot", DOT);
    std_symbol("draw", DRAW);
    std_symbol("dsolve", DSOLVE);
    std_symbol("erf", ERF);
    std_symbol("erfc", ERFC);
    std_symbol("eigen", EIGEN);
    std_symbol("eigenval", EIGENVAL);
    std_symbol("eigenvec", EIGENVEC);
    std_symbol("eval", EVAL);
    std_symbol("exp", EXP);
    std_symbol("expand", EXPAND);
    std_symbol("expcos", EXPCOS);
    std_symbol("expsin", EXPSIN);
    std_symbol("factor", FACTOR);
    std_symbol("factorial", FACTORIAL);
    std_symbol("factorpoly", FACTORPOLY);
    std_symbol("filter", FILTER);
    std_symbol("float", FLOATF);
    std_symbol("floor", FLOOR);
    std_symbol("for", FOR);
    std_symbol("function", FUNCTION);
    std_symbol("Gamma", GAMMA);
    std_symbol("gcd", GCD);
    std_symbol("hermite", HERMITE);
    std_symbol("hilbert", HILBERT);
    std_symbol("imag", IMAG);
    std_symbol("component", INDEX);
    std_symbol("inner", INNER);
    std_symbol("integral", INTEGRAL);
    std_symbol("inv", INV);
    std_symbol("invg", INVG);
    std_symbol("isinteger", ISINTEGER);
    std_symbol("isprime", ISPRIME);
    std_symbol("laguerre", LAGUERRE);
    //  std_symbol("laplace", LAPLACE)
    std_symbol("lcm", LCM);
    std_symbol("leading", LEADING);
    std_symbol("legendre", LEGENDRE);
    std_symbol("log", LOG);
    std_symbol("lookup", LOOKUP);
    std_symbol("mod", MOD);
    std_symbol("multiply", MULTIPLY);
    std_symbol("not", NOT);
    std_symbol("nroots", NROOTS);
    std_symbol("number", NUMBER);
    std_symbol("numerator", NUMERATOR);
    std_symbol("operator", OPERATOR);
    std_symbol("or", OR);
    std_symbol("outer", OUTER);
    std_symbol("pattern", PATTERN);
    std_symbol("patternsinfo", PATTERNSINFO);
    std_symbol("polar", POLAR);
    std_symbol("power", POWER);
    std_symbol("prime", PRIME);
    std_symbol("print", PRINT);
    std_symbol("print2dascii", PRINT2DASCII);
    std_symbol("printcomputer", PRINTFULL);
    std_symbol("printlatex", PRINTLATEX);
    std_symbol("printlist", PRINTLIST);
    std_symbol("printhuman", PRINTPLAIN);
    std_symbol("printLeaveEAlone", PRINT_LEAVE_E_ALONE);
    std_symbol("printLeaveXAlone", PRINT_LEAVE_X_ALONE);
    std_symbol("product", PRODUCT);
    std_symbol("quote", QUOTE);
    std_symbol("quotient", QUOTIENT);
    std_symbol("rank", RANK);
    std_symbol("rationalize", RATIONALIZE);
    std_symbol("real", REAL);
    std_symbol("rect", YYRECT);
    std_symbol("roots", ROOTS);
    std_symbol("round", ROUND);
    std_symbol("equals", SETQ);
    std_symbol("sgn", SGN);
    std_symbol("silentpattern", SILENTPATTERN);
    std_symbol("simplify", SIMPLIFY);
    std_symbol("sin", SIN);
    std_symbol("sinh", SINH);
    std_symbol("shape", SHAPE);
    std_symbol("sqrt", SQRT);
    std_symbol("stop", STOP);
    std_symbol("subst", SUBST);
    std_symbol("sum", SUM);
    std_symbol("symbolsinfo", SYMBOLSINFO);
    std_symbol("tan", TAN);
    std_symbol("tanh", TANH);
    std_symbol("taylor", TAYLOR);
    std_symbol("test", TEST);
    std_symbol("testeq", TESTEQ);
    std_symbol("testge", TESTGE);
    std_symbol("testgt", TESTGT);
    std_symbol("testle", TESTLE);
    std_symbol("testlt", TESTLT);
    std_symbol("transpose", TRANSPOSE);
    std_symbol("unit", UNIT);
    std_symbol("zero", ZERO);
    std_symbol("nil", NIL);
    std_symbol("autoexpand", AUTOEXPAND);
    std_symbol("bake", BAKE);
    std_symbol("assumeRealVariables", ASSUME_REAL_VARIABLES);
    std_symbol("last", LAST);
    std_symbol("lastprint", LAST_PRINT);
    std_symbol("last2dasciiprint", LAST_2DASCII_PRINT);
    std_symbol("lastfullprint", LAST_FULL_PRINT);
    std_symbol("lastlatexprint", LAST_LATEX_PRINT);
    std_symbol("lastlistprint", LAST_LIST_PRINT);
    std_symbol("lastplainprint", LAST_PLAIN_PRINT);
    std_symbol("trace", TRACE);
    std_symbol("forceFixedPrintout", FORCE_FIXED_PRINTOUT);
    std_symbol("maxFixedPrintoutDigits", MAX_FIXED_PRINTOUT_DIGITS);
    std_symbol("~", YYE); // tilde so sort puts it after other symbols
    std_symbol("$DRAWX", DRAWX); // special purpose internal symbols
    std_symbol("$METAA", METAA);
    std_symbol("$METAB", METAB);
    std_symbol("$METAX", METAX);
    std_symbol("$SECRETX", SECRETX);
    std_symbol("version", VERSION);
    std_symbol("pi", PI);
    std_symbol("a", SYMBOL_A);
    std_symbol("b", SYMBOL_B);
    std_symbol("c", SYMBOL_C);
    std_symbol("d", SYMBOL_D);
    std_symbol("i", SYMBOL_I);
    std_symbol("j", SYMBOL_J);
    std_symbol("n", SYMBOL_N);
    std_symbol("r", SYMBOL_R);
    std_symbol("s", SYMBOL_S);
    std_symbol("t", SYMBOL_T);
    std_symbol("x", SYMBOL_X);
    std_symbol("y", SYMBOL_Y);
    std_symbol("z", SYMBOL_Z);
    std_symbol("I", SYMBOL_IDENTITY_MATRIX);
    std_symbol("a_", SYMBOL_A_UNDERSCORE);
    std_symbol("b_", SYMBOL_B_UNDERSCORE);
    std_symbol("x_", SYMBOL_X_UNDERSCORE);
    std_symbol("$C1", C1);
    std_symbol("$C2", C2);
    std_symbol("$C3", C3);
    std_symbol("$C4", C4);
    std_symbol("$C5", C5);
    std_symbol("$C6", C6);
    defineSomeHandyConstants();
    // don't add all these functions to the
    // symbolsDependencies, clone the original
    originalCodeGen = codeGen;
    codeGen = false;
    for (defn_i = l1 = 0, ref2 = defn_str.length; 0 <= ref2 ? l1 < ref2 : l1 > ref2; defn_i = 0 <= ref2 ? ++l1 : --l1) {
      definitionOfInterest = defn_str[defn_i];
      scan(definitionOfInterest);
      if (DEBUG) {
        console.log("... evaling " + definitionOfInterest);
        console.log("top of stack:");
        console.log(_print_list(stack[tos - 1]));
      }
      Eval();
      pop();
    }
    // restore the symbol dependencies as they were before.
    return codeGen = originalCodeGen;
  };
  defineSomeHandyConstants = function defineSomeHandyConstants() {
    zero = new_integer(0);
    one = new_integer(1);
    push_double(1.0);
    one_as_double = pop();
    // i is the square root of -1 i.e. -1 ^ 1/2
    push_symbol(POWER);
    if (DEBUG) {
      console.log(_print_list(stack[tos - 1]));
    }
    push_integer(-1);
    if (DEBUG) {
      console.log(_print_list(stack[tos - 1]));
    }
    push_rational(1, 2);
    if (DEBUG) {
      console.log(_print_list(stack[tos - 1]));
    }
    list(3);
    if (DEBUG) {
      console.log(_print_list(stack[tos - 1]));
    }
    return imaginaryunit = pop(); // must be untagged in gc
  };

  // Bignum compare

  //  returns

  //  -1    a < b

  //  0    a = b

  //  1    a > b
  mcmp = function mcmp(a, b) {
    return a.compare(b);
  };

  // a is a bigint, n is a normal int
  mcmpint = function mcmpint(a, n) {
    var b, t;
    b = bigInt(n);
    t = mcmp(a, b);
    return t;
  };
  strcmp = function strcmp(str1, str2) {
    if (str1 === str2) {
      return 0;
    } else if (str1 > str2) {
      return 1;
    } else {
      return -1;
    }
  };
  doubleToReasonableString = function doubleToReasonableString(d) {
    var maxFixedPrintoutDigits, stringRepresentation;
    // when generating code, print out
    // the standard JS Number printout
    if (codeGen) {
      return "" + d;
    }
    if (isZeroAtomOrTensor(get_binding(symbol(FORCE_FIXED_PRINTOUT)))) {
      stringRepresentation = "" + d;
      // manipulate the string so that it can be parsed by
      // Algebrite (something like 1.23e-123 wouldn't cut it because
      // that would be parsed as 1.23*e - 123)
      if (printMode === PRINTMODE_LATEX) {
        // 1.0\mathrm{e}{-10} looks much better than the plain 1.0e-10
        if (/\d*\.\d*e.*/gm.test(stringRepresentation)) {
          stringRepresentation = stringRepresentation.replace(/e(.*)/gm, "\\mathrm{e}{$1}");
        } else {
          // if there is no dot in the mantissa, add it so we see it's
          // a double and not a perfect number
          // e.g. 1e-10 becomes 1.0\mathrm{e}{-10}
          stringRepresentation = stringRepresentation.replace(/(\d+)e(.*)/gm, "$1.0\\mathrm{e}{$2}");
        }
      } else {
        if (/\d*\.\d*e.*/gm.test(stringRepresentation)) {
          stringRepresentation = stringRepresentation.replace(/e(.*)/gm, "*10^($1)");
        } else {
          // if there is no dot in the mantissa, add it so we see it's
          // a double and not a perfect number
          // e.g. 1e-10 becomes 1.0e-10
          stringRepresentation = stringRepresentation.replace(/(\d+)e(.*)/gm, "$1.0*10^($2)");
        }
      }
    } else {
      push(get_binding(symbol(MAX_FIXED_PRINTOUT_DIGITS)));
      maxFixedPrintoutDigits = pop_integer();
      //console.log "maxFixedPrintoutDigits: " + maxFixedPrintoutDigits
      //console.log "type: " + typeof(maxFixedPrintoutDigits)
      //console.log "toFixed: " + d.toFixed(maxFixedPrintoutDigits)
      stringRepresentation = "" + d.toFixed(maxFixedPrintoutDigits);
      // remove any trailing zeroes after the dot
      // see https://stackoverflow.com/questions/26299160/using-regex-how-do-i-remove-the-trailing-zeros-from-a-decimal-number
      stringRepresentation = stringRepresentation.replace(/(\.\d*?[1-9])0+$/gm, "$1");
      // in case there are only zeroes after the dot, removes the dot too
      stringRepresentation = stringRepresentation.replace(/\.0+$/gm, "");
      // we actually want to give a hint to user that
      // it's a double, so add a trailing ".0" if there
      // is no decimal point
      if (stringRepresentation.indexOf(".") === -1) {
        stringRepresentation += ".0";
      }
      if (parseFloat(stringRepresentation) !== d) {
        stringRepresentation = d.toFixed(maxFixedPrintoutDigits) + "...";
      }
    }
    return stringRepresentation;
  };

  // does nothing
  clear_term = function clear_term() {};

  // s is a string here anyways
  isspace = function isspace(s) {
    if (s == null) {
      return false;
    }
    return s === ' ' || s === '\t' || s === '\n' || s === '\v' || s === '\f' || s === '\r';
  };
  isdigit = function isdigit(str) {
    if (str == null) {
      return false;
    }
    return /^\d+$/.test(str);
  };
  isalpha = function isalpha(str) {
    if (str == null) {
      return false;
    }
    //Check for non-alphabetic characters and space
    return str.search(/[^A-Za-z]/) === -1;
  };
  isalphaOrUnderscore = function isalphaOrUnderscore(str) {
    if (str == null) {
      return false;
    }
    //Check for non-alphabetic characters and space
    return str.search(/[^A-Za-z_]/) === -1;
  };
  isunderscore = function isunderscore(str) {
    if (str == null) {
      return false;
    }
    return str.search(/_/) === -1;
  };
  isalnumorunderscore = function isalnumorunderscore(str) {
    if (str == null) {
      return false;
    }
    return isalphaOrUnderscore(str) || isdigit(str);
  };
  _count = function count(p) {
    var n;
    if (iscons(p)) {
      n = 0;
      while (iscons(p)) {
        n += _count(car(p)) + 1;
        p = cdr(p);
      }
    } else {
      n = 1;
    }
    return n;
  };

  // this probably works out to be
  // more general than just counting symbols, it can
  // probably count instances of anything you pass as
  // first argument but didn't try it.
  _countOccurrencesOfSymbol = function countOccurrencesOfSymbol(needle, p) {
    var n;
    n = 0;
    if (iscons(p)) {
      while (iscons(p)) {
        n += _countOccurrencesOfSymbol(needle, car(p));
        p = cdr(p);
      }
    } else {
      if (equal(needle, p)) {
        n = 1;
      }
    }
    return n;
  };

  // returns the total number of elements
  // in an expression
  countsize = function countsize(p) {
    var i, l1, n, ref2;
    n = 0;
    if (istensor(p)) {
      for (i = l1 = 0, ref2 = p.tensor.nelem; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
        n += p.tensor.elem[i];
      }
    } else if (iscons(p)) {
      while (iscons(p)) {
        n += _count(car(p)) + 1;
        p = cdr(p);
      }
    } else {
      n = 1;
    }
    return n;
  };

  //jmp_buf stop_return, draw_stop_return

  // s is a string here
  stop = function stop(s) {
    var message;
    //if (draw_flag == 2)
    //  longjmp(draw_stop_return, 1)
    //else
    errorMessage += "Stop: ";
    errorMessage += s;
    //debugger
    message = errorMessage;
    errorMessage = '';
    moveTos(0);
    throw new Error(message);
  };

  //longjmp(stop_return, 1)

  // Figuring out dependencies is key to automatically
  // generating a method signature when generating JS code
  // from algebrite scripts.
  // This is important because the user can keep using normal Algebrite
  // scripting without special notations.
  // Basically the process consists of figuring out
  // the "ground variables" that are needed to compute each variable.
  // Now there are two ways of doing this:
  //   * at parse time
  //   * after running the scripts
  // Doing it at parse time means that we can't track simplifications
  // canceling-out some variables for example. But on the other side
  // it's very quick and the user can somehow see what the signature is
  // going to look like (assuming tha code is rather simple), or anyways
  // is going to easily make sense of the generated signature.
  // Doing it after execution on the other hand would allow us to see
  // if some variable cancel-out. But if variables cancel out then
  // they might do so according to some run-time behaviour that the user
  // might struggle to keep track of.
  // So the effort for the user to make sense of the signature in the first case
  // is similar to the effort of keeping tab of types in a typed language.
  // While in the second case the effort is similar to running the
  // code and simplifications in her head.

  // If we just want to compute the dependencies, we don't need to do
  // anything costly, we don't "run" the code and we don't simplify
  // the code. Just finding the plain dependencies
  // TODO change the name of this function, as it doesn't just find the
  // dependencies. It also runs it and generates the JS code.
  findDependenciesInScript = function findDependenciesInScript(stringToBeParsed, dontGenerateCode) {
    var allReturnedLatexStrings, allReturnedPlainStrings, bodyForReadableSummaryOfGeneratedCode, cyclesDescriptions, deQuotedDep, dependencyInfo, eachDependency, error, generatedBody, generatedCode, i, indexOfEachReplacement, indexOfPartRemainingToBeParsed, inited, key, l1, len, len1, len2, len3, len4, len5, len6, len7, m1, n, n1, newUserSymbol, o1, origPrintMode, originalUserSymbol, parameters, q1, r1, readableSummaryOfGeneratedCode, recursedDependencies, ref2, replacementsFrom, replacementsTo, s1, scriptEvaluation, stringToBeRun, t1, testableString, timeStartFromAlgebra, toBePrinted, u1, userVariablesMentioned, value, variablesWithCycles;
    if (DEBUG) {
      console.log("stringToBeParsed: " + stringToBeParsed);
    }
    timeStartFromAlgebra = new Date().getTime();
    inited = true;
    codeGen = true;
    symbolsDependencies = {};
    symbolsHavingReassignments = [];
    symbolsInExpressionsWithoutAssignments = [];
    patternHasBeenFound = false;
    indexOfPartRemainingToBeParsed = 0;
    allReturnedPlainStrings = "";
    allReturnedLatexStrings = "";
    n = 0;
    // we are going to store the dependencies _of the block as a whole_
    // so all affected variables in the whole block are lumped
    // together, and same for the variable that affect those, we
    // lump them all together.
    dependencyInfo = {
      affectsVariables: [],
      affectedBy: []
    };
    stringToBeRun = stringToBeParsed;
    // parse the input. This collects the
    // dependency information
    while (1) {
      try {
        errorMessage = "";
        check_stack();
        if (DEBUG) {
          console.log("findDependenciesInScript: scanning");
        }
        n = scan(stringToBeParsed.substring(indexOfPartRemainingToBeParsed));
        if (DEBUG) {
          console.log("scanned");
        }
        pop();
        check_stack();
      } catch (error1) {
        error = error1;
        if (PRINTOUTRESULT) {
          console.log(error);
        }
        errorMessage = error + "";
        //debugger
        reset_after_error();
        break;
      }
      if (n === 0) {
        break;
      }
      indexOfPartRemainingToBeParsed += n;
    }
    testableString = "";
    // print out all local dependencies as collected by this
    // parsing pass
    if (DEBUG) {
      console.log("all local dependencies ----------------");
    }
    testableString += "All local dependencies: ";
    for (key in symbolsDependencies) {
      value = symbolsDependencies[key];
      if (DEBUG) {
        console.log("variable " + key + " depends on: ");
      }
      dependencyInfo.affectsVariables.push(key);
      testableString += " variable " + key + " depends on: ";
      for (l1 = 0, len = value.length; l1 < len; l1++) {
        i = value[l1];
        if (DEBUG) {
          console.log("    " + i);
        }
        if (i[0] !== "'") {
          dependencyInfo.affectedBy.push(i);
        }
        testableString += i + ", ";
      }
      testableString += "; ";
    }
    testableString += ". ";
    // print out the symbols with re-assignments:
    if (DEBUG) {
      console.log("Symbols with reassignments ----------------");
    }
    testableString += "Symbols with reassignments: ";
    for (m1 = 0, len1 = symbolsHavingReassignments.length; m1 < len1; m1++) {
      key = symbolsHavingReassignments[m1];
      if (dependencyInfo.affectedBy.indexOf(key) === -1) {
        dependencyInfo.affectedBy.push(key);
        testableString += key + ", ";
      }
    }
    testableString += ". ";
    // print out the symbols that appear in expressions without assignments
    if (DEBUG) {
      console.log("Symbols in expressions without assignments ----------------");
    }
    testableString += "Symbols in expressions without assignments: ";
    for (n1 = 0, len2 = symbolsInExpressionsWithoutAssignments.length; n1 < len2; n1++) {
      key = symbolsInExpressionsWithoutAssignments[n1];
      if (dependencyInfo.affectedBy.indexOf(key) === -1) {
        dependencyInfo.affectedBy.push(key);
        testableString += key + ", ";
      }
    }
    testableString += ". ";
    // ALL Algebrite code is affected by any pattern changing
    dependencyInfo.affectedBy.push("PATTERN_DEPENDENCY");
    if (patternHasBeenFound) {
      dependencyInfo.affectsVariables.push("PATTERN_DEPENDENCY");
      testableString += " - PATTERN_DEPENDENCY inserted - ";
    }
    // print out all global dependencies as collected by this
    // parsing pass
    if (DEBUG) {
      console.log("All dependencies recursively ----------------");
    }
    testableString += "All dependencies recursively: ";
    scriptEvaluation = ["", ""];
    generatedCode = "";
    readableSummaryOfGeneratedCode = "";
    if (errorMessage === "" && !dontGenerateCode) {
      try {
        allReturnedPlainStrings = "";
        allReturnedLatexStrings = "";
        scriptEvaluation = run(stringToBeParsed, true);
        allReturnedPlainStrings = "";
        allReturnedLatexStrings = "";
      } catch (error1) {
        error = error1;
        if (PRINTOUTRESULT) {
          console.log(error);
        }
        errorMessage = error + "";
        //debugger
        init();
      }
      if (errorMessage === "") {
        for (key in symbolsDependencies) {
          codeGen = true;
          if (DEBUG) {
            console.log("  variable " + key + " is: " + get_binding(usr_symbol(key)).toString());
          }
          codeGen = false;
          if (DEBUG) {
            console.log("  variable " + key + " depends on: ");
          }
          testableString += " variable " + key + " depends on: ";
          recursedDependencies = [];
          variablesWithCycles = [];
          cyclesDescriptions = [];
          _recursiveDependencies(key, recursedDependencies, [], variablesWithCycles, [], cyclesDescriptions);
          for (o1 = 0, len3 = variablesWithCycles.length; o1 < len3; o1++) {
            i = variablesWithCycles[o1];
            if (DEBUG) {
              console.log("    --> cycle through " + i);
            }
          }
          for (q1 = 0, len4 = recursedDependencies.length; q1 < len4; q1++) {
            i = recursedDependencies[q1];
            if (DEBUG) {
              console.log("    " + i);
            }
            testableString += i + ", ";
          }
          testableString += "; ";
          for (r1 = 0, len5 = cyclesDescriptions.length; r1 < len5; r1++) {
            i = cyclesDescriptions[r1];
            testableString += " " + i + ", ";
          }
          if (DEBUG) {
            console.log("  code generation:" + key + " is: " + get_binding(usr_symbol(key)).toString());
          }
          // we really want to make an extra effort
          // to generate simplified code, so
          // run a "simplify" on the content of each
          // variable that we are generating code for.
          // Note that the variable
          // will still point to un-simplified structures,
          // we only simplify the generated code.
          push(get_binding(usr_symbol(key)));
          // Since we go and simplify all variables we meet,
          // we have to replace each variable passed as a parameter
          // with something entirely new, so that there is no chance
          // that it might evoke previous values in the external scope
          // as in this case:
          //  a = 2
          //  f(a) = a+1+b
          // we don't want 'a' in the body of f to be simplified to 2
          // There are two cases: 1) the variable actually was already in
          // the symbol table, in which case there is going to be this new
          // one prepended with AVOID_BINDING_TO_EXTERNAL_SCOPE_VALUE, and
          // we'll have to remove up this variable later.
          // OR 2) the variable wasn't already in the symbol table, in which
          // case we directly create this one, which means that we'll have
          // to rename it later to the correct name without the prepended
          // part.
          replacementsFrom = [];
          replacementsTo = [];
          for (s1 = 0, len6 = recursedDependencies.length; s1 < len6; s1++) {
            eachDependency = recursedDependencies[s1];
            if (eachDependency[0] === "'") {
              deQuotedDep = eachDependency.substring(1);
              originalUserSymbol = usr_symbol(deQuotedDep);
              newUserSymbol = usr_symbol("AVOID_BINDING_TO_EXTERNAL_SCOPE_VALUE" + deQuotedDep);
              replacementsFrom.push(originalUserSymbol);
              replacementsTo.push(newUserSymbol);
              push(originalUserSymbol);
              push(newUserSymbol);
              _subst();
              if (DEBUG) {
                console.log("after substitution: " + stack[tos - 1]);
              }
            }
          }
          try {
            simplifyForCodeGeneration();
          } catch (error1) {
            error = error1;
            if (PRINTOUTRESULT) {
              console.log(error);
            }
            errorMessage = error + "";
            //debugger
            init();
          }
          for (indexOfEachReplacement = t1 = 0, ref2 = replacementsFrom.length; 0 <= ref2 ? t1 < ref2 : t1 > ref2; indexOfEachReplacement = 0 <= ref2 ? ++t1 : --t1) {
            //console.log "replacing back " + replacementsTo[indexOfEachReplacement] + " into: " + replacementsFrom[indexOfEachReplacement]
            push(replacementsTo[indexOfEachReplacement]);
            push(replacementsFrom[indexOfEachReplacement]);
            _subst();
          }
          clearRenamedVariablesToAvoidBindingToExternalScope();
          if (errorMessage === "") {
            toBePrinted = pop();
            // we have to get all the variables used on the right side
            // here. I.e. to print the arguments it's better to look at the
            // actual method body after simplification.
            userVariablesMentioned = [];
            _collectUserSymbols(toBePrinted, userVariablesMentioned);
            allReturnedPlainStrings = "";
            allReturnedLatexStrings = "";
            codeGen = true;
            generatedBody = toBePrinted.toString();
            codeGen = false;
            origPrintMode = printMode;
            printMode = PRINTMODE_LATEX;
            bodyForReadableSummaryOfGeneratedCode = toBePrinted.toString();
            printMode = origPrintMode;
            if (variablesWithCycles.indexOf(key) !== -1) {
              generatedCode += "// " + key + " is part of a cyclic dependency, no code generated.";
              readableSummaryOfGeneratedCode += "#" + key + " is part of a cyclic dependency, no code generated.";
            } else {
              /*
               * using this paragraph instead of the following one
               * creates methods signatures that
               * are slightly less efficient
               * i.e. variables compare even if they are
               * simplified away.
               * In theory these signatures are more stable, but
               * in practice signatures vary quite a bit anyways
               * depending on previous assignments for example,
               * so it's unclear whether going for stability
               * is sensible at all..
              if recursedDependencies.length != 0
                parameters = "("
                for i in recursedDependencies
                  if i.indexOf("'") != 0
                    parameters += i + ", "
                  else
                    if recursedDependencies.indexOf(i.substring(1)) == -1
                      parameters += i.substring(1) + ", "
               */
              // remove all native functions from the
              // parameters as well.
              userVariablesMentioned = userVariablesMentioned.filter(function (x) {
                return predefinedSymbolsInGlobalScope_doNotTrackInDependencies.indexOf(x + "") === -1;
              });
              // remove the variable that are not in the dependency list
              // i.e. only allow the variables that are in the dependency list
              userVariablesMentioned = userVariablesMentioned.filter(function (x) {
                return recursedDependencies.indexOf(x + "") !== -1 || recursedDependencies.indexOf("\'" + x + "") !== -1;
              });
              if (userVariablesMentioned.length !== 0) {
                parameters = "(";
                for (u1 = 0, len7 = userVariablesMentioned.length; u1 < len7; u1++) {
                  i = userVariablesMentioned[u1];
                  if (i.printname !== key) {
                    parameters += i.printname + ", ";
                  }
                }
                // eliminate the last ", " for printout clarity
                parameters = parameters.replace(/, $/gm, "");
                parameters += ")";
                generatedCode += key + " = function " + parameters + " { return ( " + generatedBody + " ); }";
                readableSummaryOfGeneratedCode += key + parameters + " = " + bodyForReadableSummaryOfGeneratedCode;
              } else {
                generatedCode += key + " = " + generatedBody + ";";
                readableSummaryOfGeneratedCode += key + " = " + bodyForReadableSummaryOfGeneratedCode;
              }
            }
            generatedCode += "\n";
            readableSummaryOfGeneratedCode += "\n";
            if (DEBUG) {
              console.log("    " + generatedCode);
            }
          }
        }
      }
    }
    // eliminate the last new line
    generatedCode = generatedCode.replace(/\n$/gm, "");
    readableSummaryOfGeneratedCode = readableSummaryOfGeneratedCode.replace(/\n$/gm, "");
    // cleanup
    symbolsDependencies = {};
    symbolsHavingReassignments = [];
    patternHasBeenFound = false;
    symbolsInExpressionsWithoutAssignments = [];
    if (DEBUG) {
      console.log("testable string: " + testableString);
    }
    if (TIMING_DEBUGS) {
      console.log("findDependenciesInScript time for: " + stringToBeRun + " : " + (new Date().getTime() - timeStartFromAlgebra) + "ms");
    }
    return [testableString, scriptEvaluation[0], generatedCode, readableSummaryOfGeneratedCode, scriptEvaluation[1], errorMessage, dependencyInfo];
  };
  _recursiveDependencies = function recursiveDependencies(variableToBeChecked, arrayWhereDependenciesWillBeAdded, variablesAlreadyFleshedOut, variablesWithCycles, chainBeingChecked, cyclesDescriptions) {
    var cyclesDescription, i, k, l1, len, len1, m1, ref2;
    variablesAlreadyFleshedOut.push(variableToBeChecked);
    // recursive dependencies can only be descended if the variable is not bound to a parameter
    if (symbolsDependencies[chainBeingChecked[chainBeingChecked.length - 1]] != null) {
      if (symbolsDependencies[chainBeingChecked[chainBeingChecked.length - 1]].indexOf("'" + variableToBeChecked) !== -1) {
        if (DEBUG) {
          console.log("can't keep following the chain of " + variableToBeChecked + " because it's actually a variable bound to a parameter");
        }
        if (arrayWhereDependenciesWillBeAdded.indexOf("'" + variableToBeChecked) === -1 && arrayWhereDependenciesWillBeAdded.indexOf(variableToBeChecked) === -1) {
          arrayWhereDependenciesWillBeAdded.push(variableToBeChecked);
        }
        return arrayWhereDependenciesWillBeAdded;
      }
    }
    chainBeingChecked.push(variableToBeChecked);
    if (symbolsDependencies[variableToBeChecked] == null) {
      // end case: the passed variable has no dependencies
      // so there is nothing else to do
      if (arrayWhereDependenciesWillBeAdded.indexOf(variableToBeChecked) === -1) {
        arrayWhereDependenciesWillBeAdded.push(variableToBeChecked);
      }
      return arrayWhereDependenciesWillBeAdded;
    } else {
      ref2 = symbolsDependencies[variableToBeChecked];
      // recursion case: we have to dig deeper
      for (l1 = 0, len = ref2.length; l1 < len; l1++) {
        i = ref2[l1];
        // check that there is no recursion in dependencies
        // we do that by keeping a list of variables that
        // have already been "fleshed-out". If we encounter
        // any of those "fleshed-out" variables while
        // fleshing out, then there is a cycle 
        if (chainBeingChecked.indexOf(i) !== -1) {
          if (DEBUG) {
            console.log("  found cycle:");
          }
          cyclesDescription = "";
          for (m1 = 0, len1 = chainBeingChecked.length; m1 < len1; m1++) {
            k = chainBeingChecked[m1];
            if (variablesWithCycles.indexOf(k) === -1) {
              variablesWithCycles.push(k);
            }
            if (DEBUG) {
              console.log(k + " --> ");
            }
            cyclesDescription += k + " --> ";
          }
          if (DEBUG) {
            console.log(" ... then " + i + " again");
          }
          cyclesDescription += " ... then " + i + " again";
          cyclesDescriptions.push(cyclesDescription);
          //if DEBUG then console.log "    --> cycle through " + i
          // we want to flesh-out i but it's already been
          // fleshed-out, just add it to the variables
          // with cycles and move on
          // todo refactor this, there are two copies of these two lines
          if (variablesWithCycles.indexOf(i) === -1) {
            variablesWithCycles.push(i);
          }
        } else {
          // flesh-out i recursively
          _recursiveDependencies(i, arrayWhereDependenciesWillBeAdded, variablesAlreadyFleshedOut, variablesWithCycles, chainBeingChecked, cyclesDescriptions);
          chainBeingChecked.pop();
        }
      }
      //variablesAlreadyFleshedOut.pop()
      return arrayWhereDependenciesWillBeAdded;
    }
  };

  // parses and runs one statement/expression at a time
  inited = false;
  latexErrorSign = "\\rlap{\\large\\color{red}\\bigtriangleup}{\\ \\ \\tiny\\color{red}!}";
  turnErrorMessageToLatex = function turnErrorMessageToLatex(theErrorMessage) {
    theErrorMessage = theErrorMessage.replace(/\n/g, "");
    theErrorMessage = theErrorMessage.replace(/_/g, "} \\_ \\text{");
    theErrorMessage = theErrorMessage.replace(new RegExp(String.fromCharCode(transpose_unicode), 'g'), "}{}^{T}\\text{");
    theErrorMessage = theErrorMessage.replace(new RegExp(String.fromCharCode(dotprod_unicode), 'g'), "}\\cdot \\text{");
    theErrorMessage = theErrorMessage.replace("Stop:", "}  \\quad \\text{Stop:");
    theErrorMessage = theErrorMessage.replace("->", "}  \\rightarrow \\text{");
    theErrorMessage = theErrorMessage.replace("?", "}\\enspace " + latexErrorSign + " \\enspace  \\text{");
    theErrorMessage = "$$\\text{" + theErrorMessage.replace(/\n/g, "") + "}$$";
    //console.log "theErrorMessage: " + theErrorMessage
    return theErrorMessage;
  };

  // there are around a dozen different unicodes that
  // represent some sort of middle dot, let's catch the most
  // common and turn them into what we can process
  normaliseDots = function normaliseDots(stringToNormalise) {
    stringToNormalise = stringToNormalise.replace(new RegExp(String.fromCharCode(8901), 'g'), String.fromCharCode(dotprod_unicode));
    stringToNormalise = stringToNormalise.replace(new RegExp(String.fromCharCode(8226), 'g'), String.fromCharCode(dotprod_unicode));
    stringToNormalise = stringToNormalise.replace(new RegExp(String.fromCharCode(12539), 'g'), String.fromCharCode(dotprod_unicode));
    stringToNormalise = stringToNormalise.replace(new RegExp(String.fromCharCode(55296), 'g'), String.fromCharCode(dotprod_unicode));
    stringToNormalise = stringToNormalise.replace(new RegExp(String.fromCharCode(65381), 'g'), String.fromCharCode(dotprod_unicode));
    return stringToNormalise;
  };
  TIMING_DEBUGS = false;
  run = function run(stringToBeRun) {
    var generateLatex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var allReturnedLatexStrings, allReturnedPlainStrings, collectedLatexResult, collectedPlainResult, error, errorWhileExecution, i, indexOfPartRemainingToBeParsed, n, stringToBeReturned, theErrorMessage, timeStart, timingDebugWrite;
    timeStart = new Date().getTime();
    //stringToBeRun = stringToBeRun + "\n"
    stringToBeRun = normaliseDots(stringToBeRun);
    //console.log "run running: " + stringToBeRun
    if (stringToBeRun === "selftest") {
      selftest();
      return;
    }
    if (!inited) {
      inited = true;
      init();
    }
    i = 0;
    n = 0;
    indexOfPartRemainingToBeParsed = 0;
    allReturnedPlainStrings = "";
    allReturnedLatexStrings = "";
    while (1) {
      try {
        // while we can keep scanning commands out of the
        // passed input AND we can execute them...
        errorMessage = "";
        check_stack();
        n = scan(stringToBeRun.substring(indexOfPartRemainingToBeParsed));
        p1 = pop();
        check_stack();
      } catch (error1) {
        error = error1;
        if (PRINTOUTRESULT) {
          console.log(error);
        }
        //debugger
        allReturnedPlainStrings += error.message;
        if (generateLatex) {
          //debugger
          theErrorMessage = turnErrorMessageToLatex(error.message);
          allReturnedLatexStrings += theErrorMessage;
        }
        reset_after_error();
        break;
      }
      if (n === 0) {
        break;
      }
      // if debug mode then print the source text

      //if (equaln(get_binding(symbol(TRACE)), 1)) {
      //  for (i = 0 i < n i++)
      //    if (s[i] != '\r')
      //      printchar(s[i])
      //  if (s[n - 1] != '\n') # n is not zero, see above
      //    printchar('\n')
      //}
      indexOfPartRemainingToBeParsed += n;
      push(p1);
      //debugger
      errorWhileExecution = false;
      try {
        stringsEmittedByUserPrintouts = "";
        top_level_eval();
        //console.log "emitted string after top_level_eval(): >" + stringsEmittedByUserPrintouts + "<"
        //console.log "allReturnedPlainStrings string after top_level_eval(): >" + allReturnedPlainStrings + "<"
        p2 = pop();
        check_stack();
        if (isstr(p2)) {
          if (DEBUG) {
            console.log(p2.str);
          }
          if (DEBUG) {
            console.log("\n");
          }
        }
        // if the return value is nil there isn't much point
        // in adding "nil" to the printout
        if (p2 === symbol(NIL)) {
          //collectedPlainResult = stringsEmittedByUserPrintouts
          collectedPlainResult = stringsEmittedByUserPrintouts;
          if (generateLatex) {
            collectedLatexResult = "$$" + stringsEmittedByUserPrintouts + "$$";
          }
        } else {
          //console.log "emitted string before collectPlainStringFromReturnValue: >" + stringsEmittedByUserPrintouts + "<"
          //console.log "allReturnedPlainStrings string before collectPlainStringFromReturnValue: >" + allReturnedPlainStrings + "<"
          collectedPlainResult = print_expr(p2);
          collectedPlainResult += "\n";
          //console.log "collectedPlainResult: >" + collectedPlainResult + "<"
          if (generateLatex) {
            collectedLatexResult = "$$" + collectLatexStringFromReturnValue(p2) + "$$";
            if (DEBUG) {
              console.log("collectedLatexResult: " + collectedLatexResult);
            }
          }
        }
        allReturnedPlainStrings += collectedPlainResult;
        if (generateLatex) {
          allReturnedLatexStrings += collectedLatexResult;
        }
        if (PRINTOUTRESULT) {
          if (DEBUG) {
            console.log("printline");
          }
          if (DEBUG) {
            console.log(collectedPlainResult);
          }
        }
        //alert collectedPlainResult
        if (PRINTOUTRESULT) {
          if (DEBUG) {
            console.log("display:");
          }
          print2dascii(p2);
        }
        if (generateLatex) {
          allReturnedLatexStrings += "\n";
        }
      } catch (error1) {
        error = error1;
        errorWhileExecution = true;
        collectedPlainResult = error.message;
        if (generateLatex) {
          collectedLatexResult = turnErrorMessageToLatex(error.message);
        }
        if (PRINTOUTRESULT) {
          console.log(collectedPlainResult);
        }
        allReturnedPlainStrings += collectedPlainResult;
        if (collectedPlainResult !== "") {
          allReturnedPlainStrings += "\n";
        }
        if (generateLatex) {
          allReturnedLatexStrings += collectedLatexResult;
          allReturnedLatexStrings += "\n";
        }
        init();
      }
    }
    if (allReturnedPlainStrings[allReturnedPlainStrings.length - 1] === "\n") {
      allReturnedPlainStrings = allReturnedPlainStrings.substring(0, allReturnedPlainStrings.length - 1);
    }
    if (generateLatex) {
      if (allReturnedLatexStrings[allReturnedLatexStrings.length - 1] === "\n") {
        allReturnedLatexStrings = allReturnedLatexStrings.substring(0, allReturnedLatexStrings.length - 1);
      }
    }
    if (generateLatex) {
      if (DEBUG) {
        console.log("allReturnedLatexStrings: " + allReturnedLatexStrings);
      }
      stringToBeReturned = [allReturnedPlainStrings, allReturnedLatexStrings];
    } else {
      stringToBeReturned = allReturnedPlainStrings;
    }
    if (TIMING_DEBUGS) {
      timingDebugWrite = "run time on: " + stringToBeRun + " : " + (new Date().getTime() - timeStart) + "ms";
      console.log(timingDebugWrite);
    }
    allReturnedPlainStrings = "";
    allReturnedLatexStrings = "";
    return stringToBeReturned;
  };
  check_stack = function check_stack() {
    if (tos !== 0) {
      debugger;
      stop("stack error");
    }
    if (frame !== TOS) {
      debugger;
      stop("frame error");
    }
    if (chainOfUserSymbolsNotFunctionsBeingEvaluated.length !== 0) {
      debugger;
      stop("symbols evaluation still ongoing?");
    }
    if (evaluatingAsFloats !== 0) {
      debugger;
      stop("numeric evaluation still ongoing?");
    }
    if (evaluatingPolar !== 0) {
      debugger;
      return stop("evaluation of polar still ongoing?");
    }
  };

  // cannot reference symbols yet

  // returns nil on stack if no result to print
  top_level_eval = function top_level_eval() {
    var evalledArgument, originalArgument, shouldAutoexpand;
    if (DEBUG) {
      console.log("#### top level eval");
    }
    trigmode = 0;
    shouldAutoexpand = symbol(AUTOEXPAND);
    if (isZeroAtomOrTensor(get_binding(shouldAutoexpand))) {
      expanding = 0;
    } else {
      expanding = 1;
    }
    originalArgument = top();
    Eval();
    evalledArgument = top();
    // "draw", "for" and "setq" return "nil", there is no result to print
    if (evalledArgument === symbol(NIL)) {
      return;
    }
    // update "last" to contain the last result
    set_binding(symbol(LAST), evalledArgument);
    if (!isZeroAtomOrTensor(get_binding(symbol(BAKE)))) {
      _bake();
      evalledArgument = top();
    }
    // If user asked explicitly asked to evaluate "i" or "j" and
    // they represent the imaginary unit (-1)^(1/2), then 
    // show (-1)^(1/2).
    if ((originalArgument === symbol(SYMBOL_I) || originalArgument === symbol(SYMBOL_J)) && isimaginaryunit(evalledArgument)) {

      // In all other cases, replace all instances of (-1)^(1/2) in the result
      // with the symbol "i" or "j" depending on which one
      // represents the imaginary unit
    } else if (isimaginaryunit(get_binding(symbol(SYMBOL_J)))) {
      push(imaginaryunit);
      push_symbol(SYMBOL_J);
      return _subst();
    } else if (isimaginaryunit(get_binding(symbol(SYMBOL_I)))) {
      push(imaginaryunit);
      push_symbol(SYMBOL_I);
      return _subst();
    }
  };
  check_esc_flag = function check_esc_flag() {
    if (esc_flag) {
      return stop("esc key");
    }
  };

  // this is called when the whole notebook is re-run
  // so we get the chance of clearing the whole state from
  // scratch.
  // In practice, the state we need to clear that persists
  // across blocks are only the patterns, so
  // just eject those.
  clearAlgebraEnvironment = function clearAlgebraEnvironment() {
    //console.log "CLEARING clearAlgebraEnvironment ============================================================="
    return do_clearall();
  };
  computeDependenciesFromAlgebra = function computeDependenciesFromAlgebra(codeFromAlgebraBlock) {
    var i, keepState, l1, len, len1, m1, originalcodeFromAlgebraBlock, userSimplificationsInProgramForm;
    if (DEBUG) {
      console.log("computeDependenciesFromAlgebra!!!");
    }
    // return findDependenciesInScript(codeFromAlgebraBlock, true)[6]

    // TODO this part below is duplicated from computeResultsAndJavaScriptFromAlgebra
    //      ...should refactor.
    originalcodeFromAlgebraBlock = codeFromAlgebraBlock;
    keepState = true;
    called_from_Algebra_block = true;
    //console.log "codeFromAlgebraBlock: " + codeFromAlgebraBlock
    codeFromAlgebraBlock = normaliseDots(codeFromAlgebraBlock);
    if (!keepState) {
      userSimplificationsInListForm = [];
      userSimplificationsInProgramForm = "";
      for (l1 = 0, len = userSimplificationsInListForm.length; l1 < len; l1++) {
        i = userSimplificationsInListForm[l1];
        //console.log "silentpattern(" + car(i) + ","+cdr(i)+")"
        userSimplificationsInProgramForm += "silentpattern(" + car(i) + "," + car(cdr(i)) + "," + car(cdr(cdr(i))) + ")\n";
      }
      do_clearall();
      codeFromAlgebraBlock = userSimplificationsInProgramForm + codeFromAlgebraBlock;
      if (DEBUG) {
        console.log("codeFromAlgebraBlock including patterns: " + codeFromAlgebraBlock);
      }
    }
    if (DEBUG) {
      console.log("computeDependenciesFromAlgebra: patterns in the list --------------- ");
      for (m1 = 0, len1 = userSimplificationsInListForm.length; m1 < len1; m1++) {
        i = userSimplificationsInListForm[m1];
        console.log(car(i) + "," + cdr(i) + ")");
      }
      console.log("...end of list --------------- ");
    }
    called_from_Algebra_block = false;
    return findDependenciesInScript(codeFromAlgebraBlock, true)[6];
  };
  computeResultsAndJavaScriptFromAlgebra = function computeResultsAndJavaScriptFromAlgebra(codeFromAlgebraBlock) {
    var code, dependencyInfo, i, keepState, l1, latexResult, len, len1, m1, originalcodeFromAlgebraBlock, readableSummaryOfCode, result, stringToBeRun, testableStringIsIgnoredHere, timeStartFromAlgebra, userSimplificationsInProgramForm;
    originalcodeFromAlgebraBlock = codeFromAlgebraBlock;
    keepState = true;
    called_from_Algebra_block = true;
    timeStartFromAlgebra = new Date().getTime();
    if (TIMING_DEBUGS) {
      console.log(" --------- computeResultsAndJavaScriptFromAlgebra input: " + codeFromAlgebraBlock + " at: " + new Date());
    }
    // we start "clean" each time:
    // clear all the symbols and then re-define
    // the "starting" symbols.

    //console.log "codeFromAlgebraBlock: " + codeFromAlgebraBlock
    codeFromAlgebraBlock = normaliseDots(codeFromAlgebraBlock);
    stringToBeRun = codeFromAlgebraBlock;
    if (DEBUG) {
      console.log("computeResultsAndJavaScriptFromAlgebra: patterns in the list --------------- ");
      for (l1 = 0, len = userSimplificationsInListForm.length; l1 < len; l1++) {
        i = userSimplificationsInListForm[l1];
        console.log(car(i) + "," + cdr(i) + ")");
      }
      console.log("...end of list --------------- ");
    }
    if (!keepState) {
      userSimplificationsInListForm = [];
      userSimplificationsInProgramForm = "";
      for (m1 = 0, len1 = userSimplificationsInListForm.length; m1 < len1; m1++) {
        i = userSimplificationsInListForm[m1];
        //console.log "silentpattern(" + car(i) + ","+cdr(i)+")"
        userSimplificationsInProgramForm += "silentpattern(" + car(i) + "," + car(cdr(i)) + "," + car(cdr(cdr(i))) + ")\n";
      }
      do_clearall();
      codeFromAlgebraBlock = userSimplificationsInProgramForm + codeFromAlgebraBlock;
      if (DEBUG) {
        console.log("codeFromAlgebraBlock including patterns: " + codeFromAlgebraBlock);
      }
    }
    //debugger
    var _findDependenciesInSc = findDependenciesInScript(codeFromAlgebraBlock);
    var _findDependenciesInSc2 = _slicedToArray(_findDependenciesInSc, 7);
    testableStringIsIgnoredHere = _findDependenciesInSc2[0];
    result = _findDependenciesInSc2[1];
    code = _findDependenciesInSc2[2];
    readableSummaryOfCode = _findDependenciesInSc2[3];
    latexResult = _findDependenciesInSc2[4];
    errorMessage = _findDependenciesInSc2[5];
    dependencyInfo = _findDependenciesInSc2[6];
    called_from_Algebra_block = false;
    if (readableSummaryOfCode !== "" || errorMessage !== "") {
      result += "\n" + readableSummaryOfCode;
      if (errorMessage !== "") {
        result += "\n" + errorMessage;
      }
      result = result.replace(/\n/g, "\n\n");
      latexResult += "\n" + "$$" + readableSummaryOfCode + "$$";
      if (errorMessage !== "") {
        latexResult += turnErrorMessageToLatex(errorMessage);
      }
      latexResult = latexResult.replace(/\n/g, "\n\n");
    }
    // remove empty results altogether from latex output, which happens
    // for example for assignments to variables or
    // functions definitions
    latexResult = latexResult.replace(/\n*/, "");
    latexResult = latexResult.replace(/\$\$\$\$\n*/g, "");
    code = code.replace(/Math\./g, "");
    code = code.replace(/\n/g, "\n\n");
    //console.log "code: " + code
    //console.log "result: " + result
    //console.log "latexResult: " + latexResult
    if (TIMING_DEBUGS) {
      console.log("computeResultsAndJavaScriptFromAlgebra time (total time from notebook and back) for: " + stringToBeRun + " : " + (new Date().getTime() - timeStartFromAlgebra) + "ms");
    }
    return {
      //code: "// no code generated yet\n//try again later"
      //code: "console.log('some passed code is run'); window.something = 1;"
      code: code,
      // TODO temporarily pass latex in place of standard result too
      result: latexResult,
      latexResult: latexResult,
      dependencyInfo: dependencyInfo
    };
  };
  ( true && exports !== null ? exports : this).run = run;
  ( true && exports !== null ? exports : this).findDependenciesInScript = findDependenciesInScript;
  ( true && exports !== null ? exports : this).computeDependenciesFromAlgebra = computeDependenciesFromAlgebra;
  ( true && exports !== null ? exports : this).computeResultsAndJavaScriptFromAlgebra = computeResultsAndJavaScriptFromAlgebra;
  ( true && exports !== null ? exports : this).clearAlgebraEnvironment = clearAlgebraEnvironment;

  //   _______
  //  |  | <- stack
  //  |  |
  //  |_______|
  //  |  | <- stack + tos
  //  |  |
  //  |  |
  //  |_______|
  //  |  | <- frame
  //  |_______|
  //      <- stack + TOS

  //  The stack grows from low memory towards high memory. This is so that
  //  multiple expressions can be pushed on the stack and then accessed as an
  //  array.

  //  The frame area holds local variables and grows from high memory towards
  //  low memory. The frame area makes local variables visible to the garbage
  //  collector.
  tos = 0;

  // p is a U
  nil_symbols = 0;
  push = function push(p) {
    if (p == null) {
      debugger;
    }
    if (p.isZero != null) {
      debugger;
    }
    //console.log "pushing "
    //console.log print_list(p)
    if (p === symbol(NIL)) {
      nil_symbols++;
      if (DEBUG) {
        console.log("pushing symbol(NIL) #" + nil_symbols);
      }
    }
    //if nil_symbols == 111
    //  debugger
    if (tos >= frame) {
      stop("stack overflow");
    }
    return stack[tos++] = p;
  };

  // returns a U
  moveTos = function moveTos(stackPos) {
    if (tos <= stackPos) {
      // we are moving the stack pointer
      // "up" the stack (as if we were doing a push)
      tos = stackPos;
      return;
    }
    // we are moving the stack pointer
    // "down" the stack i.e. as if we were
    // doing a pop, we can zero-
    // out all the elements that we pass
    // so we can reclaim the memory
    while (tos > stackPos) {
      stack[tos] = null;
      tos--;
    }
  };
  top = function top() {
    return stack[tos - 1];
  };
  pop = function pop() {
    var elementToBeReturned;
    //popsNum++
    //console.log "pop #" + popsNum
    if (tos === 0) {
      debugger;
      stop("stack underflow");
    }
    if (stack[tos - 1] == null) {
      debugger;
    }
    elementToBeReturned = stack[--tos];

    // give a chance to the garbage
    // collection to reclaim space
    // This is JS-specific, it would
    // actually make the C garbage
    // collector useless.
    stack[tos] = null;
    return elementToBeReturned;
  };

  // n is an integer
  push_frame = function push_frame(n) {
    var i, l1, ref2, results;
    i = 0;
    frame -= n;
    if (frame < tos) {
      debugger;
      stop("frame overflow, circular reference?");
    }
    results = [];
    for (i = l1 = 0, ref2 = n; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      results.push(stack[frame + i] = symbol(NIL));
    }
    return results;
  };

  // n is an integer
  pop_frame = function pop_frame(n) {
    frame += n;
    if (frame > TOS) {
      return stop("frame underflow");
    }
  };
  save = function save() {
    frame -= 10;
    if (frame < tos) {
      debugger;
      stop("frame overflow, circular reference?");
    }
    stack[frame + 0] = p0;
    stack[frame + 1] = p1;
    stack[frame + 2] = p2;
    stack[frame + 3] = p3;
    stack[frame + 4] = p4;
    stack[frame + 5] = p5;
    stack[frame + 6] = p6;
    stack[frame + 7] = p7;
    stack[frame + 8] = p8;
    return stack[frame + 9] = p9;
  };
  restore = function restore() {
    if (frame > TOS - 10) {
      stop("frame underflow");
    }
    p0 = stack[frame + 0];
    p1 = stack[frame + 1];
    p2 = stack[frame + 2];
    p3 = stack[frame + 3];
    p4 = stack[frame + 4];
    p5 = stack[frame + 5];
    p6 = stack[frame + 6];
    p7 = stack[frame + 7];
    p8 = stack[frame + 8];
    p9 = stack[frame + 9];
    return frame += 10;
  };

  // Local U * is OK here because there is no functional path to the garbage collector.
  swap = function swap() {
    var p, q;
    //U *p, *q
    // p and q are both Us
    p = pop();
    q = pop();
    push(p);
    return push(q);
  };

  // Local U * is OK here because there is no functional path to the garbage collector.
  dupl = function dupl() {
    var p;
    //U *p
    p = pop();
    push(p);
    return push(p);
  };
  $.dupl = dupl;
  $.swap = swap;
  $.restore = restore;
  $.save = save;
  $.push = push;
  $.pop = pop;

  // The symbol table is a simple array of struct U.

  // put symbol at index n
  Eval_symbolsinfo = function Eval_symbolsinfo() {
    var symbolsinfoToBePrinted;
    symbolsinfoToBePrinted = symbolsinfo();
    if (symbolsinfoToBePrinted !== "") {
      return push(new_string(symbolsinfoToBePrinted));
    } else {
      return push_symbol(NIL);
    }
  };
  symbolsinfo = function symbolsinfo() {
    var bindingi, i, l1, ref2, ref3, symbolsinfoToBePrinted, symtabi;
    symbolsinfoToBePrinted = "";
    for (i = l1 = ref2 = NIL + 1, ref3 = symtab.length; ref2 <= ref3 ? l1 < ref3 : l1 > ref3; i = ref2 <= ref3 ? ++l1 : --l1) {
      if (symtab[i].printname === "") {
        if (isSymbolReclaimable[i] === false) {
          break;
        } else {
          continue;
        }
      }
      symtabi = symtab[i] + "";
      bindingi = (binding[i] + "").substring(0, 4);
      symbolsinfoToBePrinted += "symbol: " + symtabi + " size: " + countsize(binding[i]) + " value: " + bindingi + "...\n";
    }
    return symbolsinfoToBePrinted;
  };

  // s is a string, n is an int
  // TODO: elsewhere when we create a symbol we
  // rather prefer to create a new entry. Here we just
  // reuse the existing one. If that can never be a problem
  // then explain why, otherwise do create a new entry.
  std_symbol = function std_symbol(s, n, latexPrint) {
    var p;
    p = symtab[n];
    if (p == null) {
      debugger;
    }
    p.printname = s;
    if (latexPrint != null) {
      return p.latexPrint = latexPrint;
    } else {
      return p.latexPrint = s;
    }
  };

  // symbol lookup, or symbol creation if symbol doesn't exist yet
  // this happens often from the scanner. When the scanner sees something
  // like myVar = 2, it create a tree (SETQ ("myVar" symbol as created/looked up here (2)))
  // user-defined functions also have a usr symbol.

  // Note that some symbols like, say, "abs",
  // are picked up by the scanner directly as keywords,
  // so they are not looked up via this.
  // So in fact you could redefine abs to be abs(x) = x
  // but still abs would be picked up by the scanner as a particular
  // node type and calls to abs() will be always to the "native" abs

  // Also note that some symbols such as "zero" are (strangely) not picked up by
  // the scanner as special nodes, rather they are identified as keywords
  // (e.g. not redefinable) at time of symbol lookup (in Eval_sym) and
  // evalled, where eval has a case for ZERO.

  // Also note that there are a number of symbols, such as a,b,c,x,y,z,...
  // that are actually created by std_symbols.
  // They are not special node types (like abs), they are normal symbols
  // that are looked up, but the advantage is that since they are often
  // used internally by algebrite, we create the symbol in advance and
  // we can reference the symbol entry in a clean way
  // (e.g. symbol(SYMBOL_X)) rather than
  // by looking up a string.

  // s is a string
  usr_symbol = function usr_symbol(s) {
    var i, l1, ref2;
    //console.log "usr_symbol of " + s
    //if s == "aaa"
    //  debugger

    // find either the existing symbol, or if we
    // reach an empty symbol (printname == "") then
    // re-use that location.
    i = 0;
    for (i = l1 = 0, ref2 = NSYM; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      if (s === symtab[i].printname) {
        // found the symbol
        return symtab[i];
      }
      if (symtab[i].printname === "") {
        // found an entry in the symbol table
        // with no printname, exit the loop
        // and re-use this location
        break;
      }
    }
    if (i === NSYM) {
      stop("symbol table overflow");
    }
    symtab[i] = new U();
    symtab[i].k = SYM;
    symtab[i].printname = s;
    // say that we just created the symbol
    // then, binding[the new symbol entry]
    // by default points to the symbol.
    // So the value of an unassigned symbol will
    // be just its name.
    binding[i] = symtab[i];
    isSymbolReclaimable[i] = false;
    return symtab[i];
  };

  // get the symbol's printname

  // p is a U
  get_printname = function get_printname(p) {
    if (p.k !== SYM) {
      stop("symbol error");
    }
    return p.printname;
  };

  // p and q are both U
  // there are two Us at play here. One belongs to the
  // symtab array and is the variable name.
  // The other one is the U with the content, and that
  // one will go in the corresponding "binding" array entry.
  set_binding = function set_binding(p, q) {
    var indexFound;
    if (p.k !== SYM) {
      stop("symbol error");
    }
    //console.log "setting binding of " + p.toString() + " to: " + q.toString()
    //if p.toString() == "aaa"
    //  debugger
    indexFound = symtab.indexOf(p);
    /*
    if indexFound == -1
      debugger
      for i in [0...symtab.length]
        if p.printname == symtab[i].printname
          indexFound = i
          console.log "remedied an index not found!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
          break
    */
    if (symtab.indexOf(p, indexFound + 1) !== -1) {
      console.log("ops, more than one element!");
      debugger;
    }
    if (DEBUG) {
      console.log("lookup >> set_binding lookup " + indexFound);
    }
    isSymbolReclaimable[indexFound] = false;
    return binding[indexFound] = q;
  };

  // p is a U
  get_binding = function get_binding(p) {
    var indexFound;
    if (p.k !== SYM) {
      stop("symbol error");
    }
    //console.log "getting binding of " + p.toString()
    //if p.toString() == "aaa"
    //  debugger
    indexFound = symtab.indexOf(p);
    /*
    if indexFound == -1
      debugger
      for i in [0...symtab.length]
        if p.printname == symtab[i].printname
          indexFound = i
          console.log "remedied an index not found!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
          break
    */
    if (symtab.indexOf(p, indexFound + 1) !== -1) {
      console.log("ops, more than one element!");
      debugger;
    }
    if (DEBUG) {
      console.log("lookup >> get_binding lookup " + indexFound);
    }
    //if indexFound == 139
    //  debugger
    //if indexFound == 137
    //  debugger
    return binding[indexFound];
  };

  // the concept of user symbol is a little fuzzy
  // beucase mathematics is full of symbols that actually
  // have a special meaning, e.g. e,i,I in some cases j...
  is_usr_symbol = function is_usr_symbol(p) {
    var theSymnum;
    if (p.k !== SYM) {
      return false;
    }
    theSymnum = symnum(p);
    // see "defs" file for the naming of the symbols
    if (theSymnum > PI && theSymnum !== SYMBOL_I && theSymnum !== SYMBOL_IDENTITY_MATRIX) {
      return true;
    }
    return false;
  };

  // get symbol's number from ptr
  // p is U
  lookupsTotal = 0;
  symnum = function symnum(p) {
    var indexFound;
    lookupsTotal++;
    if (p.k !== SYM) {
      stop("symbol error");
    }
    indexFound = symtab.indexOf(p);
    if (symtab.indexOf(p, indexFound + 1) !== -1) {
      console.log("ops, more than one element!");
      debugger;
    }
    if (DEBUG) {
      console.log("lookup >> symnum lookup " + indexFound + " lookup # " + lookupsTotal);
    }
    //if lookupsTotal == 21
    //  debugger
    //if indexFound == 79
    //  debugger
    return indexFound;
  };

  // push indexed symbol

  // k is an int
  push_symbol = function push_symbol(k) {
    return push(symtab[k]);
  };
  clear_symbols = function clear_symbols() {
    var i, l1, ref2, ref3, results;
    // we can clear just what's assignable.
    // everything before NIL is not assignable,
    // so there is no need to clear it.
    results = [];
    for (i = l1 = ref2 = NIL + 1, ref3 = NSYM; ref2 <= ref3 ? l1 < ref3 : l1 > ref3; i = ref2 <= ref3 ? ++l1 : --l1) {
      // stop at the first empty
      // entry that is not reclaimable
      if (symtab[i].printname === "") {
        if (isSymbolReclaimable[i] === false) {
          break;
        } else {
          continue;
        }
      }
      symtab[i] = new U();
      symtab[i].k = SYM;
      binding[i] = symtab[i];
      results.push(isSymbolReclaimable[i] = false);
    }
    return results;
  };

  //symtab[i].printname = ""
  //binding[i] = symtab[i]

  // collect all the variables in a tree
  _collectUserSymbols = function collectUserSymbols(p) {
    var accumulator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var i, l1, ref2;
    if (is_usr_symbol(p)) {
      if (accumulator.indexOf(p) === -1) {
        accumulator.push(p);
        return;
      }
    }
    if (istensor(p)) {
      for (i = l1 = 0, ref2 = p.tensor.nelem; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
        _collectUserSymbols(p.tensor.elem[i], accumulator);
      }
      return;
    }
    while (iscons(p)) {
      _collectUserSymbols(car(p), accumulator);
      p = cdr(p);
    }
  };
  $.get_binding = get_binding;
  $.set_binding = set_binding;
  $.usr_symbol = usr_symbol;
  $.symbolsinfo = symbolsinfo;
  $.collectUserSymbols = _collectUserSymbols;
  if (!inited) {
    inited = true;
    init();
  }
  $.init = init;
  parse_internal = function parse_internal(argu) {
    if (typeof argu === 'string') {
      return scan(argu);
      // now its in the stack
    } else if (typeof argu === 'number') {
      if (argu % 1 === 0) {
        return push_integer(argu);
      } else {
        return push_double(argu);
      }
    } else if (argu instanceof U) {
      // hey look its a U
      return push(argu);
    } else {
      console.warn('unknown argument type', argu);
      return push(symbol(NIL));
    }
  };
  parse = function parse(argu) {
    var data, error;
    try {
      parse_internal(argu);
      data = pop();
      check_stack();
    } catch (error1) {
      error = error1;
      reset_after_error();
      throw error;
    }
    return data;
  };

  // exec handles the running ia JS of all the algebrite
  // functions. The function name is passed in "name" and
  // the corresponding function is pushed at the top of the stack
  exec = function exec(name) {
    var argu, error, fn, l1, len, result;
    fn = get_binding(usr_symbol(name));
    check_stack();
    push(fn);
    for (var _len = arguments.length, argus = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      argus[_key - 1] = arguments[_key];
    }
    for (l1 = 0, len = argus.length; l1 < len; l1++) {
      argu = argus[l1];
      parse_internal(argu);
    }
    list(1 + argus.length);
    p1 = pop();
    push(p1);
    try {
      top_level_eval();
      result = pop();
      check_stack();
    } catch (error1) {
      error = error1;
      reset_after_error();
      throw error;
    }
    return result;
  };
  $.exec = exec;
  $.parse = parse;
  (function () {
    var builtin_fns, fn, l1, len, results;
    builtin_fns = ["abs", "add", "adj", "and", "approxratio", "arccos", "arccosh", "arcsin", "arcsinh", "arctan", "arctanh", "arg", "atomize", "besselj", "bessely", "binding", "binomial", "ceiling", "check", "choose", "circexp", "clear", "clearall", "clearpatterns", "clock", "coeff", "cofactor", "condense", "conj", "contract", "cos", "cosh", "decomp", "defint", "deg", "denominator", "det", "derivative", "dim", "dirac", "divisors", "do", "dot", "draw", "dsolve", "eigen", "eigenval", "eigenvec", "erf", "erfc", "eval", "exp", "expand", "expcos", "expsin", "factor", "factorial", "factorpoly", "filter", "float", "floor", "for", "Gamma", "gcd", "hermite", "hilbert", "imag", "component", "inner", "integral", "inv", "invg", "isinteger", "isprime", "laguerre", "lcm", "leading", "legendre", "log", "mod", "multiply", "not", "nroots", "number", "numerator", "operator", "or", "outer", "pattern", "patternsinfo", "polar", "power", "prime", "print", "print2dascii", "printcomputer", "printlatex", "printlist", "printhuman", "product", "quote", "quotient", "rank", "rationalize", "real", "rect", "roots", "round", "equals", "shape", "sgn", "silentpattern", "simplify", "sin", "sinh", "sqrt", "stop", "subst", "sum", "symbolsinfo", "tan", "tanh", "taylor", "test", "testeq", "testge", "testgt", "testle", "testlt", "transpose", "unit", "zero"];
    results = [];
    for (l1 = 0, len = builtin_fns.length; l1 < len; l1++) {
      fn = builtin_fns[l1];
      results.push($[fn] = exec.bind(this, fn));
    }
    return results;
  })();
  freeze = function freeze() {
    var frozenContents, frozenHash, frozenPatterns, frozenSymbols, i, l1, ref2;
    frozenSymbols = [];
    frozenContents = [];
    frozenPatterns = [];
    frozenHash = "";
    for (i = l1 = 0, ref2 = symtab.length; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      //if symtab[i].printname == ""
      //  if isSymbolReclaimable[i] == false
      //    break
      //  else
      //    continue
      if (isSymbolReclaimable[i] === false) {
        frozenSymbols.push(symtab[i]);
        frozenContents.push(binding[i]);
      }
    }
    // just clone them
    frozenPatterns = userSimplificationsInListForm.slice(0);
    return [frozenSymbols, frozenContents, frozenPatterns, zero, one, imaginaryunit, getStateHash()];
  };
  unfreeze = function unfreeze(frozen) {
    var frozenContents, frozenPatterns, frozenSymbols, i, l1, ref2;
    //clear_symbols()
    var _frozen = _slicedToArray(frozen, 6);
    frozenSymbols = _frozen[0];
    frozenContents = _frozen[1];
    frozenPatterns = _frozen[2];
    zero = _frozen[3];
    one = _frozen[4];
    imaginaryunit = _frozen[5];
    for (i = l1 = 0, ref2 = frozenSymbols.length; 0 <= ref2 ? l1 < ref2 : l1 > ref2; i = 0 <= ref2 ? ++l1 : --l1) {
      symtab[i] = frozenSymbols[i];
      binding[i] = frozenContents[i];
    }
    return userSimplificationsInListForm = frozenPatterns.slice(0);
  };
  compareState = function compareState(previousHash) {
    var frozenHash;
    frozenHash = getStateHash();
    if (frozenHash === previousHash) {
      return true;
    } else {
      return false;
    }
  };
  getStateHash = function getStateHash() {
    var bindingi, frozenHash, i, l1, len, m1, ref2, ref3, symtabi;
    frozenHash = "";
    for (i = l1 = ref2 = NIL + 1, ref3 = symtab.length; ref2 <= ref3 ? l1 < ref3 : l1 > ref3; i = ref2 <= ref3 ? ++l1 : --l1) {
      if (symtab[i].printname === "") {
        if (isSymbolReclaimable[i] === false) {
          break;
        } else {
          continue;
        }
      }
      symtabi = _print_list(symtab[i]);
      bindingi = _print_list(binding[i]);
      frozenHash += " //" + symtabi + " : " + bindingi;
    }
    for (m1 = 0, len = userSimplificationsInListForm.length; m1 < len; m1++) {
      i = userSimplificationsInListForm[m1];
      frozenHash += " pattern: " + i;
    }
    if (DEBUG) {
      console.log("frozenHash: " + frozenHash);
    }
    return frozenHash;
  };
}).call(this);

/***/ }),

/***/ 523:
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;var bigInt = function (undefined) {
  "use strict";

  var BASE = 1e7,
    LOG_BASE = 7,
    MAX_INT = 9007199254740992,
    MAX_INT_ARR = smallToArray(MAX_INT),
    DEFAULT_ALPHABET = "0123456789abcdefghijklmnopqrstuvwxyz";
  var supportsNativeBigInt = typeof BigInt === "function";
  function Integer(v, radix, alphabet, caseSensitive) {
    if (typeof v === "undefined") return Integer[0];
    if (typeof radix !== "undefined") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);
    return parseValue(v);
  }
  function BigInteger(value, sign) {
    this.value = value;
    this.sign = sign;
    this.isSmall = false;
  }
  BigInteger.prototype = Object.create(Integer.prototype);
  function SmallInteger(value) {
    this.value = value;
    this.sign = value < 0;
    this.isSmall = true;
  }
  SmallInteger.prototype = Object.create(Integer.prototype);
  function NativeBigInt(value) {
    this.value = value;
  }
  NativeBigInt.prototype = Object.create(Integer.prototype);
  function isPrecise(n) {
    return -MAX_INT < n && n < MAX_INT;
  }
  function smallToArray(n) {
    // For performance reasons doesn't reference BASE, need to change this function if BASE changes
    if (n < 1e7) return [n];
    if (n < 1e14) return [n % 1e7, Math.floor(n / 1e7)];
    return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];
  }
  function arrayToSmall(arr) {
    // If BASE changes this function may need to change
    trim(arr);
    var length = arr.length;
    if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {
      switch (length) {
        case 0:
          return 0;
        case 1:
          return arr[0];
        case 2:
          return arr[0] + arr[1] * BASE;
        default:
          return arr[0] + (arr[1] + arr[2] * BASE) * BASE;
      }
    }
    return arr;
  }
  function trim(v) {
    var i = v.length;
    while (v[--i] === 0);
    v.length = i + 1;
  }
  function createArray(length) {
    // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger
    var x = new Array(length);
    var i = -1;
    while (++i < length) {
      x[i] = 0;
    }
    return x;
  }
  function truncate(n) {
    if (n > 0) return Math.floor(n);
    return Math.ceil(n);
  }
  function add(a, b) {
    // assumes a and b are arrays with a.length >= b.length
    var l_a = a.length,
      l_b = b.length,
      r = new Array(l_a),
      carry = 0,
      base = BASE,
      sum,
      i;
    for (i = 0; i < l_b; i++) {
      sum = a[i] + b[i] + carry;
      carry = sum >= base ? 1 : 0;
      r[i] = sum - carry * base;
    }
    while (i < l_a) {
      sum = a[i] + carry;
      carry = sum === base ? 1 : 0;
      r[i++] = sum - carry * base;
    }
    if (carry > 0) r.push(carry);
    return r;
  }
  function addAny(a, b) {
    if (a.length >= b.length) return add(a, b);
    return add(b, a);
  }
  function addSmall(a, carry) {
    // assumes a is array, carry is number with 0 <= carry < MAX_INT
    var l = a.length,
      r = new Array(l),
      base = BASE,
      sum,
      i;
    for (i = 0; i < l; i++) {
      sum = a[i] - base + carry;
      carry = Math.floor(sum / base);
      r[i] = sum - carry * base;
      carry += 1;
    }
    while (carry > 0) {
      r[i++] = carry % base;
      carry = Math.floor(carry / base);
    }
    return r;
  }
  BigInteger.prototype.add = function (v) {
    var n = parseValue(v);
    if (this.sign !== n.sign) {
      return this.subtract(n.negate());
    }
    var a = this.value,
      b = n.value;
    if (n.isSmall) {
      return new BigInteger(addSmall(a, Math.abs(b)), this.sign);
    }
    return new BigInteger(addAny(a, b), this.sign);
  };
  BigInteger.prototype.plus = BigInteger.prototype.add;
  SmallInteger.prototype.add = function (v) {
    var n = parseValue(v);
    var a = this.value;
    if (a < 0 !== n.sign) {
      return this.subtract(n.negate());
    }
    var b = n.value;
    if (n.isSmall) {
      if (isPrecise(a + b)) return new SmallInteger(a + b);
      b = smallToArray(Math.abs(b));
    }
    return new BigInteger(addSmall(b, Math.abs(a)), a < 0);
  };
  SmallInteger.prototype.plus = SmallInteger.prototype.add;
  NativeBigInt.prototype.add = function (v) {
    return new NativeBigInt(this.value + parseValue(v).value);
  };
  NativeBigInt.prototype.plus = NativeBigInt.prototype.add;
  function subtract(a, b) {
    // assumes a and b are arrays with a >= b
    var a_l = a.length,
      b_l = b.length,
      r = new Array(a_l),
      borrow = 0,
      base = BASE,
      i,
      difference;
    for (i = 0; i < b_l; i++) {
      difference = a[i] - borrow - b[i];
      if (difference < 0) {
        difference += base;
        borrow = 1;
      } else borrow = 0;
      r[i] = difference;
    }
    for (i = b_l; i < a_l; i++) {
      difference = a[i] - borrow;
      if (difference < 0) difference += base;else {
        r[i++] = difference;
        break;
      }
      r[i] = difference;
    }
    for (; i < a_l; i++) {
      r[i] = a[i];
    }
    trim(r);
    return r;
  }
  function subtractAny(a, b, sign) {
    var value;
    if (compareAbs(a, b) >= 0) {
      value = subtract(a, b);
    } else {
      value = subtract(b, a);
      sign = !sign;
    }
    value = arrayToSmall(value);
    if (typeof value === "number") {
      if (sign) value = -value;
      return new SmallInteger(value);
    }
    return new BigInteger(value, sign);
  }
  function subtractSmall(a, b, sign) {
    // assumes a is array, b is number with 0 <= b < MAX_INT
    var l = a.length,
      r = new Array(l),
      carry = -b,
      base = BASE,
      i,
      difference;
    for (i = 0; i < l; i++) {
      difference = a[i] + carry;
      carry = Math.floor(difference / base);
      difference %= base;
      r[i] = difference < 0 ? difference + base : difference;
    }
    r = arrayToSmall(r);
    if (typeof r === "number") {
      if (sign) r = -r;
      return new SmallInteger(r);
    }
    return new BigInteger(r, sign);
  }
  BigInteger.prototype.subtract = function (v) {
    var n = parseValue(v);
    if (this.sign !== n.sign) {
      return this.add(n.negate());
    }
    var a = this.value,
      b = n.value;
    if (n.isSmall) return subtractSmall(a, Math.abs(b), this.sign);
    return subtractAny(a, b, this.sign);
  };
  BigInteger.prototype.minus = BigInteger.prototype.subtract;
  SmallInteger.prototype.subtract = function (v) {
    var n = parseValue(v);
    var a = this.value;
    if (a < 0 !== n.sign) {
      return this.add(n.negate());
    }
    var b = n.value;
    if (n.isSmall) {
      return new SmallInteger(a - b);
    }
    return subtractSmall(b, Math.abs(a), a >= 0);
  };
  SmallInteger.prototype.minus = SmallInteger.prototype.subtract;
  NativeBigInt.prototype.subtract = function (v) {
    return new NativeBigInt(this.value - parseValue(v).value);
  };
  NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;
  BigInteger.prototype.negate = function () {
    return new BigInteger(this.value, !this.sign);
  };
  SmallInteger.prototype.negate = function () {
    var sign = this.sign;
    var small = new SmallInteger(-this.value);
    small.sign = !sign;
    return small;
  };
  NativeBigInt.prototype.negate = function () {
    return new NativeBigInt(-this.value);
  };
  BigInteger.prototype.abs = function () {
    return new BigInteger(this.value, false);
  };
  SmallInteger.prototype.abs = function () {
    return new SmallInteger(Math.abs(this.value));
  };
  NativeBigInt.prototype.abs = function () {
    return new NativeBigInt(this.value >= 0 ? this.value : -this.value);
  };
  function multiplyLong(a, b) {
    var a_l = a.length,
      b_l = b.length,
      l = a_l + b_l,
      r = createArray(l),
      base = BASE,
      product,
      carry,
      i,
      a_i,
      b_j;
    for (i = 0; i < a_l; ++i) {
      a_i = a[i];
      for (var j = 0; j < b_l; ++j) {
        b_j = b[j];
        product = a_i * b_j + r[i + j];
        carry = Math.floor(product / base);
        r[i + j] = product - carry * base;
        r[i + j + 1] += carry;
      }
    }
    trim(r);
    return r;
  }
  function multiplySmall(a, b) {
    // assumes a is array, b is number with |b| < BASE
    var l = a.length,
      r = new Array(l),
      base = BASE,
      carry = 0,
      product,
      i;
    for (i = 0; i < l; i++) {
      product = a[i] * b + carry;
      carry = Math.floor(product / base);
      r[i] = product - carry * base;
    }
    while (carry > 0) {
      r[i++] = carry % base;
      carry = Math.floor(carry / base);
    }
    return r;
  }
  function shiftLeft(x, n) {
    var r = [];
    while (n-- > 0) r.push(0);
    return r.concat(x);
  }
  function multiplyKaratsuba(x, y) {
    var n = Math.max(x.length, y.length);
    if (n <= 30) return multiplyLong(x, y);
    n = Math.ceil(n / 2);
    var b = x.slice(n),
      a = x.slice(0, n),
      d = y.slice(n),
      c = y.slice(0, n);
    var ac = multiplyKaratsuba(a, c),
      bd = multiplyKaratsuba(b, d),
      abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));
    var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));
    trim(product);
    return product;
  }

  // The following function is derived from a surface fit of a graph plotting the performance difference
  // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.
  function useKaratsuba(l1, l2) {
    return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;
  }
  BigInteger.prototype.multiply = function (v) {
    var n = parseValue(v),
      a = this.value,
      b = n.value,
      sign = this.sign !== n.sign,
      abs;
    if (n.isSmall) {
      if (b === 0) return Integer[0];
      if (b === 1) return this;
      if (b === -1) return this.negate();
      abs = Math.abs(b);
      if (abs < BASE) {
        return new BigInteger(multiplySmall(a, abs), sign);
      }
      b = smallToArray(abs);
    }
    if (useKaratsuba(a.length, b.length))
      // Karatsuba is only faster for certain array sizes
      return new BigInteger(multiplyKaratsuba(a, b), sign);
    return new BigInteger(multiplyLong(a, b), sign);
  };
  BigInteger.prototype.times = BigInteger.prototype.multiply;
  function multiplySmallAndArray(a, b, sign) {
    // a >= 0
    if (a < BASE) {
      return new BigInteger(multiplySmall(b, a), sign);
    }
    return new BigInteger(multiplyLong(b, smallToArray(a)), sign);
  }
  SmallInteger.prototype._multiplyBySmall = function (a) {
    if (isPrecise(a.value * this.value)) {
      return new SmallInteger(a.value * this.value);
    }
    return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);
  };
  BigInteger.prototype._multiplyBySmall = function (a) {
    if (a.value === 0) return Integer[0];
    if (a.value === 1) return this;
    if (a.value === -1) return this.negate();
    return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);
  };
  SmallInteger.prototype.multiply = function (v) {
    return parseValue(v)._multiplyBySmall(this);
  };
  SmallInteger.prototype.times = SmallInteger.prototype.multiply;
  NativeBigInt.prototype.multiply = function (v) {
    return new NativeBigInt(this.value * parseValue(v).value);
  };
  NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;
  function square(a) {
    //console.assert(2 * BASE * BASE < MAX_INT);
    var l = a.length,
      r = createArray(l + l),
      base = BASE,
      product,
      carry,
      i,
      a_i,
      a_j;
    for (i = 0; i < l; i++) {
      a_i = a[i];
      carry = 0 - a_i * a_i;
      for (var j = i; j < l; j++) {
        a_j = a[j];
        product = 2 * (a_i * a_j) + r[i + j] + carry;
        carry = Math.floor(product / base);
        r[i + j] = product - carry * base;
      }
      r[i + l] = carry;
    }
    trim(r);
    return r;
  }
  BigInteger.prototype.square = function () {
    return new BigInteger(square(this.value), false);
  };
  SmallInteger.prototype.square = function () {
    var value = this.value * this.value;
    if (isPrecise(value)) return new SmallInteger(value);
    return new BigInteger(square(smallToArray(Math.abs(this.value))), false);
  };
  NativeBigInt.prototype.square = function (v) {
    return new NativeBigInt(this.value * this.value);
  };
  function divMod1(a, b) {
    // Left over from previous version. Performs faster than divMod2 on smaller input sizes.
    var a_l = a.length,
      b_l = b.length,
      base = BASE,
      result = createArray(b.length),
      divisorMostSignificantDigit = b[b_l - 1],
      // normalization
      lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),
      remainder = multiplySmall(a, lambda),
      divisor = multiplySmall(b, lambda),
      quotientDigit,
      shift,
      carry,
      borrow,
      i,
      l,
      q;
    if (remainder.length <= a_l) remainder.push(0);
    divisor.push(0);
    divisorMostSignificantDigit = divisor[b_l - 1];
    for (shift = a_l - b_l; shift >= 0; shift--) {
      quotientDigit = base - 1;
      if (remainder[shift + b_l] !== divisorMostSignificantDigit) {
        quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);
      }
      // quotientDigit <= base - 1
      carry = 0;
      borrow = 0;
      l = divisor.length;
      for (i = 0; i < l; i++) {
        carry += quotientDigit * divisor[i];
        q = Math.floor(carry / base);
        borrow += remainder[shift + i] - (carry - q * base);
        carry = q;
        if (borrow < 0) {
          remainder[shift + i] = borrow + base;
          borrow = -1;
        } else {
          remainder[shift + i] = borrow;
          borrow = 0;
        }
      }
      while (borrow !== 0) {
        quotientDigit -= 1;
        carry = 0;
        for (i = 0; i < l; i++) {
          carry += remainder[shift + i] - base + divisor[i];
          if (carry < 0) {
            remainder[shift + i] = carry + base;
            carry = 0;
          } else {
            remainder[shift + i] = carry;
            carry = 1;
          }
        }
        borrow += carry;
      }
      result[shift] = quotientDigit;
    }
    // denormalization
    remainder = divModSmall(remainder, lambda)[0];
    return [arrayToSmall(result), arrayToSmall(remainder)];
  }
  function divMod2(a, b) {
    // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/
    // Performs faster than divMod1 on larger input sizes.
    var a_l = a.length,
      b_l = b.length,
      result = [],
      part = [],
      base = BASE,
      guess,
      xlen,
      highx,
      highy,
      check;
    while (a_l) {
      part.unshift(a[--a_l]);
      trim(part);
      if (compareAbs(part, b) < 0) {
        result.push(0);
        continue;
      }
      xlen = part.length;
      highx = part[xlen - 1] * base + part[xlen - 2];
      highy = b[b_l - 1] * base + b[b_l - 2];
      if (xlen > b_l) {
        highx = (highx + 1) * base;
      }
      guess = Math.ceil(highx / highy);
      do {
        check = multiplySmall(b, guess);
        if (compareAbs(check, part) <= 0) break;
        guess--;
      } while (guess);
      result.push(guess);
      part = subtract(part, check);
    }
    result.reverse();
    return [arrayToSmall(result), arrayToSmall(part)];
  }
  function divModSmall(value, lambda) {
    var length = value.length,
      quotient = createArray(length),
      base = BASE,
      i,
      q,
      remainder,
      divisor;
    remainder = 0;
    for (i = length - 1; i >= 0; --i) {
      divisor = remainder * base + value[i];
      q = truncate(divisor / lambda);
      remainder = divisor - q * lambda;
      quotient[i] = q | 0;
    }
    return [quotient, remainder | 0];
  }
  function divModAny(self, v) {
    var value,
      n = parseValue(v);
    if (supportsNativeBigInt) {
      return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];
    }
    var a = self.value,
      b = n.value;
    var quotient;
    if (b === 0) throw new Error("Cannot divide by zero");
    if (self.isSmall) {
      if (n.isSmall) {
        return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];
      }
      return [Integer[0], self];
    }
    if (n.isSmall) {
      if (b === 1) return [self, Integer[0]];
      if (b == -1) return [self.negate(), Integer[0]];
      var abs = Math.abs(b);
      if (abs < BASE) {
        value = divModSmall(a, abs);
        quotient = arrayToSmall(value[0]);
        var remainder = value[1];
        if (self.sign) remainder = -remainder;
        if (typeof quotient === "number") {
          if (self.sign !== n.sign) quotient = -quotient;
          return [new SmallInteger(quotient), new SmallInteger(remainder)];
        }
        return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];
      }
      b = smallToArray(abs);
    }
    var comparison = compareAbs(a, b);
    if (comparison === -1) return [Integer[0], self];
    if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];

    // divMod1 is faster on smaller input sizes
    if (a.length + b.length <= 200) value = divMod1(a, b);else value = divMod2(a, b);
    quotient = value[0];
    var qSign = self.sign !== n.sign,
      mod = value[1],
      mSign = self.sign;
    if (typeof quotient === "number") {
      if (qSign) quotient = -quotient;
      quotient = new SmallInteger(quotient);
    } else quotient = new BigInteger(quotient, qSign);
    if (typeof mod === "number") {
      if (mSign) mod = -mod;
      mod = new SmallInteger(mod);
    } else mod = new BigInteger(mod, mSign);
    return [quotient, mod];
  }
  BigInteger.prototype.divmod = function (v) {
    var result = divModAny(this, v);
    return {
      quotient: result[0],
      remainder: result[1]
    };
  };
  NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;
  BigInteger.prototype.divide = function (v) {
    return divModAny(this, v)[0];
  };
  NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {
    return new NativeBigInt(this.value / parseValue(v).value);
  };
  SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;
  BigInteger.prototype.mod = function (v) {
    return divModAny(this, v)[1];
  };
  NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {
    return new NativeBigInt(this.value % parseValue(v).value);
  };
  SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;
  BigInteger.prototype.pow = function (v) {
    var n = parseValue(v),
      a = this.value,
      b = n.value,
      value,
      x,
      y;
    if (b === 0) return Integer[1];
    if (a === 0) return Integer[0];
    if (a === 1) return Integer[1];
    if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];
    if (n.sign) {
      return Integer[0];
    }
    if (!n.isSmall) throw new Error("The exponent " + n.toString() + " is too large.");
    if (this.isSmall) {
      if (isPrecise(value = Math.pow(a, b))) return new SmallInteger(truncate(value));
    }
    x = this;
    y = Integer[1];
    while (true) {
      if (b & 1 === 1) {
        y = y.times(x);
        --b;
      }
      if (b === 0) break;
      b /= 2;
      x = x.square();
    }
    return y;
  };
  SmallInteger.prototype.pow = BigInteger.prototype.pow;
  NativeBigInt.prototype.pow = function (v) {
    var n = parseValue(v);
    var a = this.value,
      b = n.value;
    var _0 = BigInt(0),
      _1 = BigInt(1),
      _2 = BigInt(2);
    if (b === _0) return Integer[1];
    if (a === _0) return Integer[0];
    if (a === _1) return Integer[1];
    if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];
    if (n.isNegative()) return new NativeBigInt(_0);
    var x = this;
    var y = Integer[1];
    while (true) {
      if ((b & _1) === _1) {
        y = y.times(x);
        --b;
      }
      if (b === _0) break;
      b /= _2;
      x = x.square();
    }
    return y;
  };
  BigInteger.prototype.modPow = function (exp, mod) {
    exp = parseValue(exp);
    mod = parseValue(mod);
    if (mod.isZero()) throw new Error("Cannot take modPow with modulus 0");
    var r = Integer[1],
      base = this.mod(mod);
    if (exp.isNegative()) {
      exp = exp.multiply(Integer[-1]);
      base = base.modInv(mod);
    }
    while (exp.isPositive()) {
      if (base.isZero()) return Integer[0];
      if (exp.isOdd()) r = r.multiply(base).mod(mod);
      exp = exp.divide(2);
      base = base.square().mod(mod);
    }
    return r;
  };
  NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;
  function compareAbs(a, b) {
    if (a.length !== b.length) {
      return a.length > b.length ? 1 : -1;
    }
    for (var i = a.length - 1; i >= 0; i--) {
      if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;
    }
    return 0;
  }
  BigInteger.prototype.compareAbs = function (v) {
    var n = parseValue(v),
      a = this.value,
      b = n.value;
    if (n.isSmall) return 1;
    return compareAbs(a, b);
  };
  SmallInteger.prototype.compareAbs = function (v) {
    var n = parseValue(v),
      a = Math.abs(this.value),
      b = n.value;
    if (n.isSmall) {
      b = Math.abs(b);
      return a === b ? 0 : a > b ? 1 : -1;
    }
    return -1;
  };
  NativeBigInt.prototype.compareAbs = function (v) {
    var a = this.value;
    var b = parseValue(v).value;
    a = a >= 0 ? a : -a;
    b = b >= 0 ? b : -b;
    return a === b ? 0 : a > b ? 1 : -1;
  };
  BigInteger.prototype.compare = function (v) {
    // See discussion about comparison with Infinity:
    // https://github.com/peterolson/BigInteger.js/issues/61
    if (v === Infinity) {
      return -1;
    }
    if (v === -Infinity) {
      return 1;
    }
    var n = parseValue(v),
      a = this.value,
      b = n.value;
    if (this.sign !== n.sign) {
      return n.sign ? 1 : -1;
    }
    if (n.isSmall) {
      return this.sign ? -1 : 1;
    }
    return compareAbs(a, b) * (this.sign ? -1 : 1);
  };
  BigInteger.prototype.compareTo = BigInteger.prototype.compare;
  SmallInteger.prototype.compare = function (v) {
    if (v === Infinity) {
      return -1;
    }
    if (v === -Infinity) {
      return 1;
    }
    var n = parseValue(v),
      a = this.value,
      b = n.value;
    if (n.isSmall) {
      return a == b ? 0 : a > b ? 1 : -1;
    }
    if (a < 0 !== n.sign) {
      return a < 0 ? -1 : 1;
    }
    return a < 0 ? 1 : -1;
  };
  SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;
  NativeBigInt.prototype.compare = function (v) {
    if (v === Infinity) {
      return -1;
    }
    if (v === -Infinity) {
      return 1;
    }
    var a = this.value;
    var b = parseValue(v).value;
    return a === b ? 0 : a > b ? 1 : -1;
  };
  NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;
  BigInteger.prototype.equals = function (v) {
    return this.compare(v) === 0;
  };
  NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;
  BigInteger.prototype.notEquals = function (v) {
    return this.compare(v) !== 0;
  };
  NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;
  BigInteger.prototype.greater = function (v) {
    return this.compare(v) > 0;
  };
  NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;
  BigInteger.prototype.lesser = function (v) {
    return this.compare(v) < 0;
  };
  NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;
  BigInteger.prototype.greaterOrEquals = function (v) {
    return this.compare(v) >= 0;
  };
  NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;
  BigInteger.prototype.lesserOrEquals = function (v) {
    return this.compare(v) <= 0;
  };
  NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;
  BigInteger.prototype.isEven = function () {
    return (this.value[0] & 1) === 0;
  };
  SmallInteger.prototype.isEven = function () {
    return (this.value & 1) === 0;
  };
  NativeBigInt.prototype.isEven = function () {
    return (this.value & BigInt(1)) === BigInt(0);
  };
  BigInteger.prototype.isOdd = function () {
    return (this.value[0] & 1) === 1;
  };
  SmallInteger.prototype.isOdd = function () {
    return (this.value & 1) === 1;
  };
  NativeBigInt.prototype.isOdd = function () {
    return (this.value & BigInt(1)) === BigInt(1);
  };
  BigInteger.prototype.isPositive = function () {
    return !this.sign;
  };
  SmallInteger.prototype.isPositive = function () {
    return this.value > 0;
  };
  NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;
  BigInteger.prototype.isNegative = function () {
    return this.sign;
  };
  SmallInteger.prototype.isNegative = function () {
    return this.value < 0;
  };
  NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;
  BigInteger.prototype.isUnit = function () {
    return false;
  };
  SmallInteger.prototype.isUnit = function () {
    return Math.abs(this.value) === 1;
  };
  NativeBigInt.prototype.isUnit = function () {
    return this.abs().value === BigInt(1);
  };
  BigInteger.prototype.isZero = function () {
    return false;
  };
  SmallInteger.prototype.isZero = function () {
    return this.value === 0;
  };
  NativeBigInt.prototype.isZero = function () {
    return this.value === BigInt(0);
  };
  BigInteger.prototype.isDivisibleBy = function (v) {
    var n = parseValue(v);
    if (n.isZero()) return false;
    if (n.isUnit()) return true;
    if (n.compareAbs(2) === 0) return this.isEven();
    return this.mod(n).isZero();
  };
  NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;
  function isBasicPrime(v) {
    var n = v.abs();
    if (n.isUnit()) return false;
    if (n.equals(2) || n.equals(3) || n.equals(5)) return true;
    if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;
    if (n.lesser(49)) return true;
    // we don't know if it's prime: let the other functions figure it out
  }

  function millerRabinTest(n, a) {
    var nPrev = n.prev(),
      b = nPrev,
      r = 0,
      d,
      t,
      i,
      x;
    while (b.isEven()) b = b.divide(2), r++;
    next: for (i = 0; i < a.length; i++) {
      if (n.lesser(a[i])) continue;
      x = bigInt(a[i]).modPow(b, n);
      if (x.isUnit() || x.equals(nPrev)) continue;
      for (d = r - 1; d != 0; d--) {
        x = x.square().mod(n);
        if (x.isUnit()) return false;
        if (x.equals(nPrev)) continue next;
      }
      return false;
    }
    return true;
  }

  // Set "strict" to true to force GRH-supported lower bound of 2*log(N)^2
  BigInteger.prototype.isPrime = function (strict) {
    var isPrime = isBasicPrime(this);
    if (isPrime !== undefined) return isPrime;
    var n = this.abs();
    var bits = n.bitLength();
    if (bits <= 64) return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);
    var logN = Math.log(2) * bits.toJSNumber();
    var t = Math.ceil(strict === true ? 2 * Math.pow(logN, 2) : logN);
    for (var a = [], i = 0; i < t; i++) {
      a.push(bigInt(i + 2));
    }
    return millerRabinTest(n, a);
  };
  NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;
  BigInteger.prototype.isProbablePrime = function (iterations, rng) {
    var isPrime = isBasicPrime(this);
    if (isPrime !== undefined) return isPrime;
    var n = this.abs();
    var t = iterations === undefined ? 5 : iterations;
    for (var a = [], i = 0; i < t; i++) {
      a.push(bigInt.randBetween(2, n.minus(2), rng));
    }
    return millerRabinTest(n, a);
  };
  NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;
  BigInteger.prototype.modInv = function (n) {
    var t = bigInt.zero,
      newT = bigInt.one,
      r = parseValue(n),
      newR = this.abs(),
      q,
      lastT,
      lastR;
    while (!newR.isZero()) {
      q = r.divide(newR);
      lastT = t;
      lastR = r;
      t = newT;
      r = newR;
      newT = lastT.subtract(q.multiply(newT));
      newR = lastR.subtract(q.multiply(newR));
    }
    if (!r.isUnit()) throw new Error(this.toString() + " and " + n.toString() + " are not co-prime");
    if (t.compare(0) === -1) {
      t = t.add(n);
    }
    if (this.isNegative()) {
      return t.negate();
    }
    return t;
  };
  NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;
  BigInteger.prototype.next = function () {
    var value = this.value;
    if (this.sign) {
      return subtractSmall(value, 1, this.sign);
    }
    return new BigInteger(addSmall(value, 1), this.sign);
  };
  SmallInteger.prototype.next = function () {
    var value = this.value;
    if (value + 1 < MAX_INT) return new SmallInteger(value + 1);
    return new BigInteger(MAX_INT_ARR, false);
  };
  NativeBigInt.prototype.next = function () {
    return new NativeBigInt(this.value + BigInt(1));
  };
  BigInteger.prototype.prev = function () {
    var value = this.value;
    if (this.sign) {
      return new BigInteger(addSmall(value, 1), true);
    }
    return subtractSmall(value, 1, this.sign);
  };
  SmallInteger.prototype.prev = function () {
    var value = this.value;
    if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);
    return new BigInteger(MAX_INT_ARR, true);
  };
  NativeBigInt.prototype.prev = function () {
    return new NativeBigInt(this.value - BigInt(1));
  };
  var powersOfTwo = [1];
  while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);
  var powers2Length = powersOfTwo.length,
    highestPower2 = powersOfTwo[powers2Length - 1];
  function shift_isSmall(n) {
    return Math.abs(n) <= BASE;
  }
  BigInteger.prototype.shiftLeft = function (v) {
    var n = parseValue(v).toJSNumber();
    if (!shift_isSmall(n)) {
      throw new Error(String(n) + " is too large for shifting.");
    }
    if (n < 0) return this.shiftRight(-n);
    var result = this;
    if (result.isZero()) return result;
    while (n >= powers2Length) {
      result = result.multiply(highestPower2);
      n -= powers2Length - 1;
    }
    return result.multiply(powersOfTwo[n]);
  };
  NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;
  BigInteger.prototype.shiftRight = function (v) {
    var remQuo;
    var n = parseValue(v).toJSNumber();
    if (!shift_isSmall(n)) {
      throw new Error(String(n) + " is too large for shifting.");
    }
    if (n < 0) return this.shiftLeft(-n);
    var result = this;
    while (n >= powers2Length) {
      if (result.isZero() || result.isNegative() && result.isUnit()) return result;
      remQuo = divModAny(result, highestPower2);
      result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];
      n -= powers2Length - 1;
    }
    remQuo = divModAny(result, powersOfTwo[n]);
    return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];
  };
  NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;
  function bitwise(x, y, fn) {
    y = parseValue(y);
    var xSign = x.isNegative(),
      ySign = y.isNegative();
    var xRem = xSign ? x.not() : x,
      yRem = ySign ? y.not() : y;
    var xDigit = 0,
      yDigit = 0;
    var xDivMod = null,
      yDivMod = null;
    var result = [];
    while (!xRem.isZero() || !yRem.isZero()) {
      xDivMod = divModAny(xRem, highestPower2);
      xDigit = xDivMod[1].toJSNumber();
      if (xSign) {
        xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers
      }

      yDivMod = divModAny(yRem, highestPower2);
      yDigit = yDivMod[1].toJSNumber();
      if (ySign) {
        yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers
      }

      xRem = xDivMod[0];
      yRem = yDivMod[0];
      result.push(fn(xDigit, yDigit));
    }
    var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);
    for (var i = result.length - 1; i >= 0; i -= 1) {
      sum = sum.multiply(highestPower2).add(bigInt(result[i]));
    }
    return sum;
  }
  BigInteger.prototype.not = function () {
    return this.negate().prev();
  };
  NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;
  BigInteger.prototype.and = function (n) {
    return bitwise(this, n, function (a, b) {
      return a & b;
    });
  };
  NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;
  BigInteger.prototype.or = function (n) {
    return bitwise(this, n, function (a, b) {
      return a | b;
    });
  };
  NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;
  BigInteger.prototype.xor = function (n) {
    return bitwise(this, n, function (a, b) {
      return a ^ b;
    });
  };
  NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;
  var LOBMASK_I = 1 << 30,
    LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;
  function roughLOB(n) {
    // get lowestOneBit (rough)
    // SmallInteger: return Min(lowestOneBit(n), 1 << 30)
    // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]
    var v = n.value,
      x = typeof v === "number" ? v | LOBMASK_I : typeof v === "bigint" ? v | BigInt(LOBMASK_I) : v[0] + v[1] * BASE | LOBMASK_BI;
    return x & -x;
  }
  function integerLogarithm(value, base) {
    if (base.compareTo(value) <= 0) {
      var tmp = integerLogarithm(value, base.square(base));
      var p = tmp.p;
      var e = tmp.e;
      var t = p.multiply(base);
      return t.compareTo(value) <= 0 ? {
        p: t,
        e: e * 2 + 1
      } : {
        p: p,
        e: e * 2
      };
    }
    return {
      p: bigInt(1),
      e: 0
    };
  }
  BigInteger.prototype.bitLength = function () {
    var n = this;
    if (n.compareTo(bigInt(0)) < 0) {
      n = n.negate().subtract(bigInt(1));
    }
    if (n.compareTo(bigInt(0)) === 0) {
      return bigInt(0);
    }
    return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));
  };
  NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;
  function max(a, b) {
    a = parseValue(a);
    b = parseValue(b);
    return a.greater(b) ? a : b;
  }
  function min(a, b) {
    a = parseValue(a);
    b = parseValue(b);
    return a.lesser(b) ? a : b;
  }
  function gcd(a, b) {
    a = parseValue(a).abs();
    b = parseValue(b).abs();
    if (a.equals(b)) return a;
    if (a.isZero()) return b;
    if (b.isZero()) return a;
    var c = Integer[1],
      d,
      t;
    while (a.isEven() && b.isEven()) {
      d = min(roughLOB(a), roughLOB(b));
      a = a.divide(d);
      b = b.divide(d);
      c = c.multiply(d);
    }
    while (a.isEven()) {
      a = a.divide(roughLOB(a));
    }
    do {
      while (b.isEven()) {
        b = b.divide(roughLOB(b));
      }
      if (a.greater(b)) {
        t = b;
        b = a;
        a = t;
      }
      b = b.subtract(a);
    } while (!b.isZero());
    return c.isUnit() ? a : a.multiply(c);
  }
  function lcm(a, b) {
    a = parseValue(a).abs();
    b = parseValue(b).abs();
    return a.divide(gcd(a, b)).multiply(b);
  }
  function randBetween(a, b, rng) {
    a = parseValue(a);
    b = parseValue(b);
    var usedRNG = rng || Math.random;
    var low = min(a, b),
      high = max(a, b);
    var range = high.subtract(low).add(1);
    if (range.isSmall) return low.add(Math.floor(usedRNG() * range));
    var digits = toBase(range, BASE).value;
    var result = [],
      restricted = true;
    for (var i = 0; i < digits.length; i++) {
      var top = restricted ? digits[i] + (i + 1 < digits.length ? digits[i + 1] / BASE : 0) : BASE;
      var digit = truncate(usedRNG() * top);
      result.push(digit);
      if (digit < digits[i]) restricted = false;
    }
    return low.add(Integer.fromArray(result, BASE, false));
  }
  var parseBase = function parseBase(text, base, alphabet, caseSensitive) {
    alphabet = alphabet || DEFAULT_ALPHABET;
    text = String(text);
    if (!caseSensitive) {
      text = text.toLowerCase();
      alphabet = alphabet.toLowerCase();
    }
    var length = text.length;
    var i;
    var absBase = Math.abs(base);
    var alphabetValues = {};
    for (i = 0; i < alphabet.length; i++) {
      alphabetValues[alphabet[i]] = i;
    }
    for (i = 0; i < length; i++) {
      var c = text[i];
      if (c === "-") continue;
      if (c in alphabetValues) {
        if (alphabetValues[c] >= absBase) {
          if (c === "1" && absBase === 1) continue;
          throw new Error(c + " is not a valid digit in base " + base + ".");
        }
      }
    }
    base = parseValue(base);
    var digits = [];
    var isNegative = text[0] === "-";
    for (i = isNegative ? 1 : 0; i < text.length; i++) {
      var c = text[i];
      if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));else if (c === "<") {
        var start = i;
        do {
          i++;
        } while (text[i] !== ">" && i < text.length);
        digits.push(parseValue(text.slice(start + 1, i)));
      } else throw new Error(c + " is not a valid character");
    }
    return parseBaseFromArray(digits, base, isNegative);
  };
  function parseBaseFromArray(digits, base, isNegative) {
    var val = Integer[0],
      pow = Integer[1],
      i;
    for (i = digits.length - 1; i >= 0; i--) {
      val = val.add(digits[i].times(pow));
      pow = pow.times(base);
    }
    return isNegative ? val.negate() : val;
  }
  function stringify(digit, alphabet) {
    alphabet = alphabet || DEFAULT_ALPHABET;
    if (digit < alphabet.length) {
      return alphabet[digit];
    }
    return "<" + digit + ">";
  }
  function toBase(n, base) {
    base = bigInt(base);
    if (base.isZero()) {
      if (n.isZero()) return {
        value: [0],
        isNegative: false
      };
      throw new Error("Cannot convert nonzero numbers to base 0.");
    }
    if (base.equals(-1)) {
      if (n.isZero()) return {
        value: [0],
        isNegative: false
      };
      if (n.isNegative()) return {
        value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber())).map(Array.prototype.valueOf, [1, 0])),
        isNegative: false
      };
      var arr = Array.apply(null, Array(n.toJSNumber() - 1)).map(Array.prototype.valueOf, [0, 1]);
      arr.unshift([1]);
      return {
        value: [].concat.apply([], arr),
        isNegative: false
      };
    }
    var neg = false;
    if (n.isNegative() && base.isPositive()) {
      neg = true;
      n = n.abs();
    }
    if (base.isUnit()) {
      if (n.isZero()) return {
        value: [0],
        isNegative: false
      };
      return {
        value: Array.apply(null, Array(n.toJSNumber())).map(Number.prototype.valueOf, 1),
        isNegative: neg
      };
    }
    var out = [];
    var left = n,
      divmod;
    while (left.isNegative() || left.compareAbs(base) >= 0) {
      divmod = left.divmod(base);
      left = divmod.quotient;
      var digit = divmod.remainder;
      if (digit.isNegative()) {
        digit = base.minus(digit).abs();
        left = left.next();
      }
      out.push(digit.toJSNumber());
    }
    out.push(left.toJSNumber());
    return {
      value: out.reverse(),
      isNegative: neg
    };
  }
  function toBaseString(n, base, alphabet) {
    var arr = toBase(n, base);
    return (arr.isNegative ? "-" : "") + arr.value.map(function (x) {
      return stringify(x, alphabet);
    }).join('');
  }
  BigInteger.prototype.toArray = function (radix) {
    return toBase(this, radix);
  };
  SmallInteger.prototype.toArray = function (radix) {
    return toBase(this, radix);
  };
  NativeBigInt.prototype.toArray = function (radix) {
    return toBase(this, radix);
  };
  BigInteger.prototype.toString = function (radix, alphabet) {
    if (radix === undefined) radix = 10;
    if (radix !== 10) return toBaseString(this, radix, alphabet);
    var v = this.value,
      l = v.length,
      str = String(v[--l]),
      zeros = "0000000",
      digit;
    while (--l >= 0) {
      digit = String(v[l]);
      str += zeros.slice(digit.length) + digit;
    }
    var sign = this.sign ? "-" : "";
    return sign + str;
  };
  SmallInteger.prototype.toString = function (radix, alphabet) {
    if (radix === undefined) radix = 10;
    if (radix != 10) return toBaseString(this, radix, alphabet);
    return String(this.value);
  };
  NativeBigInt.prototype.toString = SmallInteger.prototype.toString;
  NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () {
    return this.toString();
  };
  BigInteger.prototype.valueOf = function () {
    return parseInt(this.toString(), 10);
  };
  BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;
  SmallInteger.prototype.valueOf = function () {
    return this.value;
  };
  SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;
  NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {
    return parseInt(this.toString(), 10);
  };
  function parseStringValue(v) {
    if (isPrecise(+v)) {
      var x = +v;
      if (x === truncate(x)) return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);
      throw new Error("Invalid integer: " + v);
    }
    var sign = v[0] === "-";
    if (sign) v = v.slice(1);
    var split = v.split(/e/i);
    if (split.length > 2) throw new Error("Invalid integer: " + split.join("e"));
    if (split.length === 2) {
      var exp = split[1];
      if (exp[0] === "+") exp = exp.slice(1);
      exp = +exp;
      if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error("Invalid integer: " + exp + " is not a valid exponent.");
      var text = split[0];
      var decimalPlace = text.indexOf(".");
      if (decimalPlace >= 0) {
        exp -= text.length - decimalPlace - 1;
        text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);
      }
      if (exp < 0) throw new Error("Cannot include negative exponent part for integers");
      text += new Array(exp + 1).join("0");
      v = text;
    }
    var isValid = /^([0-9][0-9]*)$/.test(v);
    if (!isValid) throw new Error("Invalid integer: " + v);
    if (supportsNativeBigInt) {
      return new NativeBigInt(BigInt(sign ? "-" + v : v));
    }
    var r = [],
      max = v.length,
      l = LOG_BASE,
      min = max - l;
    while (max > 0) {
      r.push(+v.slice(min, max));
      min -= l;
      if (min < 0) min = 0;
      max -= l;
    }
    trim(r);
    return new BigInteger(r, sign);
  }
  function parseNumberValue(v) {
    if (supportsNativeBigInt) {
      return new NativeBigInt(BigInt(v));
    }
    if (isPrecise(v)) {
      if (v !== truncate(v)) throw new Error(v + " is not an integer.");
      return new SmallInteger(v);
    }
    return parseStringValue(v.toString());
  }
  function parseValue(v) {
    if (typeof v === "number") {
      return parseNumberValue(v);
    }
    if (typeof v === "string") {
      return parseStringValue(v);
    }
    if (typeof v === "bigint") {
      return new NativeBigInt(v);
    }
    return v;
  }
  // Pre-define numbers in range [-999,999]
  for (var i = 0; i < 1000; i++) {
    Integer[i] = parseValue(i);
    if (i > 0) Integer[-i] = parseValue(-i);
  }
  // Backwards compatibility
  Integer.one = Integer[1];
  Integer.zero = Integer[0];
  Integer.minusOne = Integer[-1];
  Integer.max = max;
  Integer.min = min;
  Integer.gcd = gcd;
  Integer.lcm = lcm;
  Integer.isInstance = function (x) {
    return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt;
  };
  Integer.randBetween = randBetween;
  Integer.fromArray = function (digits, base, isNegative) {
    return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);
  };
  return Integer;
}();

// Node.js check
if ( true && module.hasOwnProperty("exports")) {
  module.exports = bigInt;
}

//amd check
if (true) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
    return bigInt;
  }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}

/***/ }),

/***/ 694:
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
  'use strict';

  var hasOwn = {}.hasOwnProperty;
  var nativeCodeString = '[native code]';
  function classNames() {
    var classes = [];
    for (var i = 0; i < arguments.length; i++) {
      var arg = arguments[i];
      if (!arg) continue;
      var argType = typeof arg;
      if (argType === 'string' || argType === 'number') {
        classes.push(arg);
      } else if (Array.isArray(arg)) {
        if (arg.length) {
          var inner = classNames.apply(null, arg);
          if (inner) {
            classes.push(inner);
          }
        }
      } else if (argType === 'object') {
        if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {
          classes.push(arg.toString());
          continue;
        }
        for (var key in arg) {
          if (hasOwn.call(arg, key) && arg[key]) {
            classes.push(key);
          }
        }
      }
    }
    return classes.join(' ');
  }
  if ( true && module.exports) {
    classNames.default = classNames;
    module.exports = classNames;
  } else if (true) {
    // register as 'classnames', consistent with npm package name
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return classNames;
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})();

/***/ }),

/***/ 137:
/***/ (function() {

/*!
Copyright (C) 2013-2015 by Andrea Giammarchi - @WebReflection

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/
(function (window) {
  'use strict';

  /* jshint loopfunc: true, noempty: false*/
  // http://www.w3.org/TR/dom/#element
  function createDocumentFragment() {
    return document.createDocumentFragment();
  }
  function createElement(nodeName) {
    return document.createElement(nodeName);
  }
  function enoughArguments(length, name) {
    if (!length) throw new Error('Failed to construct ' + name + ': 1 argument required, but only 0 present.');
  }
  function mutationMacro(nodes) {
    if (nodes.length === 1) {
      return textNodeIfPrimitive(nodes[0]);
    }
    for (var fragment = createDocumentFragment(), list = slice.call(nodes), i = 0; i < nodes.length; i++) {
      fragment.appendChild(textNodeIfPrimitive(list[i]));
    }
    return fragment;
  }
  function textNodeIfPrimitive(node) {
    return typeof node === 'object' ? node : document.createTextNode(node);
  }
  for (var head, property, TemporaryPrototype, TemporaryTokenList, wrapVerifyToken, document = window.document, hOP = Object.prototype.hasOwnProperty, defineProperty = Object.defineProperty || function (object, property, descriptor) {
      if (hOP.call(descriptor, 'value')) {
        object[property] = descriptor.value;
      } else {
        if (hOP.call(descriptor, 'get')) object.__defineGetter__(property, descriptor.get);
        if (hOP.call(descriptor, 'set')) object.__defineSetter__(property, descriptor.set);
      }
      return object;
    }, indexOf = [].indexOf || function indexOf(value) {
      var length = this.length;
      while (length--) {
        if (this[length] === value) {
          break;
        }
      }
      return length;
    },
    // http://www.w3.org/TR/domcore/#domtokenlist
    verifyToken = function verifyToken(token) {
      if (!token) {
        throw 'SyntaxError';
      } else if (spaces.test(token)) {
        throw 'InvalidCharacterError';
      }
      return token;
    }, DOMTokenList = function DOMTokenList(node) {
      var noClassName = typeof node.className === 'undefined',
        className = noClassName ? node.getAttribute('class') || '' : node.className,
        isSVG = noClassName || typeof className === 'object',
        value = (isSVG ? noClassName ? className : className.baseVal : className).replace(trim, '');
      if (value.length) {
        properties.push.apply(this, value.split(spaces));
      }
      this._isSVG = isSVG;
      this._ = node;
    }, classListDescriptor = {
      get: function get() {
        return new DOMTokenList(this);
      },
      set: function set() {}
    }, trim = /^\s+|\s+$/g, spaces = /\s+/, SPACE = '\x20', CLASS_LIST = 'classList', toggle = function toggle(token, force) {
      if (this.contains(token)) {
        if (!force) {
          // force is not true (either false or omitted)
          this.remove(token);
        }
      } else if (force === undefined || force) {
        force = true;
        this.add(token);
      }
      return !!force;
    }, DocumentFragmentPrototype = window.DocumentFragment && DocumentFragment.prototype, Node = window.Node, NodePrototype = (Node || Element).prototype, CharacterData = window.CharacterData || Node, CharacterDataPrototype = CharacterData && CharacterData.prototype, DocumentType = window.DocumentType, DocumentTypePrototype = DocumentType && DocumentType.prototype, ElementPrototype = (window.Element || Node || window.HTMLElement).prototype, HTMLSelectElement = window.HTMLSelectElement || createElement('select').constructor, selectRemove = HTMLSelectElement.prototype.remove, SVGElement = window.SVGElement, properties = ['matches', ElementPrototype.matchesSelector || ElementPrototype.webkitMatchesSelector || ElementPrototype.khtmlMatchesSelector || ElementPrototype.mozMatchesSelector || ElementPrototype.msMatchesSelector || ElementPrototype.oMatchesSelector || function matches(selector) {
      var parentNode = this.parentNode;
      return !!parentNode && -1 < indexOf.call(parentNode.querySelectorAll(selector), this);
    }, 'closest', function closest(selector) {
      var parentNode = this,
        matches;
      while (
      // document has no .matches
      (matches = parentNode && parentNode.matches) && !parentNode.matches(selector)) {
        parentNode = parentNode.parentNode;
      }
      return matches ? parentNode : null;
    }, 'prepend', function prepend() {
      var firstChild = this.firstChild,
        node = mutationMacro(arguments);
      if (firstChild) {
        this.insertBefore(node, firstChild);
      } else {
        this.appendChild(node);
      }
    }, 'append', function append() {
      this.appendChild(mutationMacro(arguments));
    }, 'before', function before() {
      var parentNode = this.parentNode;
      if (parentNode) {
        parentNode.insertBefore(mutationMacro(arguments), this);
      }
    }, 'after', function after() {
      var parentNode = this.parentNode,
        nextSibling = this.nextSibling,
        node = mutationMacro(arguments);
      if (parentNode) {
        if (nextSibling) {
          parentNode.insertBefore(node, nextSibling);
        } else {
          parentNode.appendChild(node);
        }
      }
    },
    // https://dom.spec.whatwg.org/#dom-element-toggleattribute
    'toggleAttribute', function toggleAttribute(name, force) {
      var had = this.hasAttribute(name);
      if (1 < arguments.length) {
        if (had && !force) this.removeAttribute(name);else if (force && !had) this.setAttribute(name, "");
      } else if (had) this.removeAttribute(name);else this.setAttribute(name, "");
      return this.hasAttribute(name);
    },
    // WARNING - DEPRECATED - use .replaceWith() instead
    'replace', function replace() {
      this.replaceWith.apply(this, arguments);
    }, 'replaceWith', function replaceWith() {
      var parentNode = this.parentNode;
      if (parentNode) {
        parentNode.replaceChild(mutationMacro(arguments), this);
      }
    }, 'remove', function remove() {
      var parentNode = this.parentNode;
      if (parentNode) {
        parentNode.removeChild(this);
      }
    }], slice = properties.slice, i = properties.length; i; i -= 2) {
    property = properties[i - 2];
    if (!(property in ElementPrototype)) {
      ElementPrototype[property] = properties[i - 1];
    }
    // avoid unnecessary re-patch when the script is included
    // gazillion times without any reason whatsoever
    // https://github.com/WebReflection/dom4/pull/48
    if (property === 'remove' && !selectRemove._dom4) {
      // see https://github.com/WebReflection/dom4/issues/19
      (HTMLSelectElement.prototype[property] = function () {
        return 0 < arguments.length ? selectRemove.apply(this, arguments) : ElementPrototype.remove.call(this);
      })._dom4 = true;
    }
    // see https://github.com/WebReflection/dom4/issues/18
    if (/^(?:before|after|replace|replaceWith|remove)$/.test(property)) {
      if (CharacterData && !(property in CharacterDataPrototype)) {
        CharacterDataPrototype[property] = properties[i - 1];
      }
      if (DocumentType && !(property in DocumentTypePrototype)) {
        DocumentTypePrototype[property] = properties[i - 1];
      }
    }
    // see https://github.com/WebReflection/dom4/pull/26
    if (/^(?:append|prepend)$/.test(property)) {
      if (DocumentFragmentPrototype) {
        if (!(property in DocumentFragmentPrototype)) {
          DocumentFragmentPrototype[property] = properties[i - 1];
        }
      } else {
        try {
          createDocumentFragment().constructor.prototype[property] = properties[i - 1];
        } catch (o_O) {}
      }
    }
  }

  // most likely an IE9 only issue
  // see https://github.com/WebReflection/dom4/issues/6
  if (!createElement('a').matches('a')) {
    ElementPrototype[property] = function (matches) {
      return function (selector) {
        return matches.call(this.parentNode ? this : createDocumentFragment().appendChild(this), selector);
      };
    }(ElementPrototype[property]);
  }

  // used to fix both old webkit and SVG
  DOMTokenList.prototype = {
    length: 0,
    add: function add() {
      for (var j = 0, token; j < arguments.length; j++) {
        token = arguments[j];
        if (!this.contains(token)) {
          properties.push.call(this, property);
        }
      }
      if (this._isSVG) {
        this._.setAttribute('class', '' + this);
      } else {
        this._.className = '' + this;
      }
    },
    contains: function (indexOf) {
      return function contains(token) {
        i = indexOf.call(this, property = verifyToken(token));
        return -1 < i;
      };
    }([].indexOf || function (token) {
      i = this.length;
      while (i-- && this[i] !== token) {}
      return i;
    }),
    item: function item(i) {
      return this[i] || null;
    },
    remove: function remove() {
      for (var j = 0, token; j < arguments.length; j++) {
        token = arguments[j];
        if (this.contains(token)) {
          properties.splice.call(this, i, 1);
        }
      }
      if (this._isSVG) {
        this._.setAttribute('class', '' + this);
      } else {
        this._.className = '' + this;
      }
    },
    toggle: toggle,
    toString: function toString() {
      return properties.join.call(this, SPACE);
    }
  };
  if (SVGElement && !(CLASS_LIST in SVGElement.prototype)) {
    defineProperty(SVGElement.prototype, CLASS_LIST, classListDescriptor);
  }

  // http://www.w3.org/TR/dom/#domtokenlist
  // iOS 5.1 has completely screwed this property
  // classList in ElementPrototype is false
  // but it's actually there as getter
  if (!(CLASS_LIST in document.documentElement)) {
    defineProperty(ElementPrototype, CLASS_LIST, classListDescriptor);
  } else {
    // iOS 5.1 and Nokia ASHA do not support multiple add or remove
    // trying to detect and fix that in here
    TemporaryTokenList = createElement('div')[CLASS_LIST];
    TemporaryTokenList.add('a', 'b', 'a');
    if ('a\x20b' != TemporaryTokenList) {
      // no other way to reach original methods in iOS 5.1
      TemporaryPrototype = TemporaryTokenList.constructor.prototype;
      if (!('add' in TemporaryPrototype)) {
        // ASHA double fails in here
        TemporaryPrototype = window.TemporaryTokenList.prototype;
      }
      wrapVerifyToken = function wrapVerifyToken(original) {
        return function () {
          var i = 0;
          while (i < arguments.length) {
            original.call(this, arguments[i++]);
          }
        };
      };
      TemporaryPrototype.add = wrapVerifyToken(TemporaryPrototype.add);
      TemporaryPrototype.remove = wrapVerifyToken(TemporaryPrototype.remove);
      // toggle is broken too ^_^ ... let's fix it
      TemporaryPrototype.toggle = toggle;
    }
  }
  if (!('contains' in NodePrototype)) {
    defineProperty(NodePrototype, 'contains', {
      value: function value(el) {
        while (el && el !== this) el = el.parentNode;
        return this === el;
      }
    });
  }
  if (!('head' in document)) {
    defineProperty(document, 'head', {
      get: function get() {
        return head || (head = document.getElementsByTagName('head')[0]);
      }
    });
  }

  // requestAnimationFrame partial polyfill
  (function () {
    for (var raf, rAF = window.requestAnimationFrame, cAF = window.cancelAnimationFrame, prefixes = ['o', 'ms', 'moz', 'webkit'], i = prefixes.length; !cAF && i--;) {
      rAF = rAF || window[prefixes[i] + 'RequestAnimationFrame'];
      cAF = window[prefixes[i] + 'CancelAnimationFrame'] || window[prefixes[i] + 'CancelRequestAnimationFrame'];
    }
    if (!cAF) {
      // some FF apparently implemented rAF but no cAF 
      if (rAF) {
        raf = rAF;
        rAF = function rAF(callback) {
          var goOn = true;
          raf(function () {
            if (goOn) callback.apply(this, arguments);
          });
          return function () {
            goOn = false;
          };
        };
        cAF = function cAF(id) {
          id();
        };
      } else {
        rAF = function rAF(callback) {
          return setTimeout(callback, 15, 15);
        };
        cAF = function cAF(id) {
          clearTimeout(id);
        };
      }
    }
    window.requestAnimationFrame = rAF;
    window.cancelAnimationFrame = cAF;
  })();

  // http://www.w3.org/TR/dom/#customevent
  try {
    new window.CustomEvent('?');
  } catch (o_O) {
    window.CustomEvent = function (eventName, defaultInitDict) {
      // the infamous substitute
      function CustomEvent(type, eventInitDict) {
        /*jshint eqnull:true */
        var event = document.createEvent(eventName);
        if (typeof type != 'string') {
          throw new Error('An event name must be provided');
        }
        if (eventName == 'Event') {
          event.initCustomEvent = initCustomEvent;
        }
        if (eventInitDict == null) {
          eventInitDict = defaultInitDict;
        }
        event.initCustomEvent(type, eventInitDict.bubbles, eventInitDict.cancelable, eventInitDict.detail);
        return event;
      }

      // attached at runtime
      function initCustomEvent(type, bubbles, cancelable, detail) {
        /*jshint validthis:true*/
        this.initEvent(type, bubbles, cancelable);
        this.detail = detail;
      }

      // that's it
      return CustomEvent;
    }(
    // is this IE9 or IE10 ?
    // where CustomEvent is there
    // but not usable as construtor ?
    window.CustomEvent ?
    // use the CustomEvent interface in such case
    'CustomEvent' : 'Event',
    // otherwise the common compatible one
    {
      bubbles: false,
      cancelable: false,
      detail: null
    });
  }

  // window.Event as constructor
  try {
    new Event('_');
  } catch (o_O) {
    /* jshint -W022 */
    o_O = function ($Event) {
      function Event(type, init) {
        enoughArguments(arguments.length, 'Event');
        var out = document.createEvent('Event');
        if (!init) init = {};
        out.initEvent(type, !!init.bubbles, !!init.cancelable);
        return out;
      }
      Event.prototype = $Event.prototype;
      return Event;
    }(window.Event || function Event() {});
    defineProperty(window, 'Event', {
      value: o_O
    });
    // Android 4 gotcha
    if (Event !== o_O) Event = o_O;
  }

  // window.KeyboardEvent as constructor
  try {
    new KeyboardEvent('_', {});
  } catch (o_O) {
    /* jshint -W022 */
    o_O = function ($KeyboardEvent) {
      // code inspired by https://gist.github.com/termi/4654819
      var initType = 0,
        defaults = {
          char: '',
          key: '',
          location: 0,
          ctrlKey: false,
          shiftKey: false,
          altKey: false,
          metaKey: false,
          altGraphKey: false,
          repeat: false,
          locale: navigator.language,
          detail: 0,
          bubbles: false,
          cancelable: false,
          keyCode: 0,
          charCode: 0,
          which: 0
        },
        eventType;
      try {
        var e = document.createEvent('KeyboardEvent');
        e.initKeyboardEvent('keyup', false, false, window, '+', 3, true, false, true, false, false);
        initType = (e.keyIdentifier || e.key) == '+' && (e.keyLocation || e.location) == 3 && (e.ctrlKey ? e.altKey ? 1 : 3 : e.shiftKey ? 2 : 4) || 9;
      } catch (o_O) {}
      eventType = 0 < initType ? 'KeyboardEvent' : 'Event';
      function getModifier(init) {
        for (var out = [], keys = ['ctrlKey', 'Control', 'shiftKey', 'Shift', 'altKey', 'Alt', 'metaKey', 'Meta', 'altGraphKey', 'AltGraph'], i = 0; i < keys.length; i += 2) {
          if (init[keys[i]]) out.push(keys[i + 1]);
        }
        return out.join(' ');
      }
      function withDefaults(target, source) {
        for (var key in source) {
          if (source.hasOwnProperty(key) && !source.hasOwnProperty.call(target, key)) target[key] = source[key];
        }
        return target;
      }
      function withInitValues(key, out, init) {
        try {
          out[key] = init[key];
        } catch (o_O) {}
      }
      function KeyboardEvent(type, init) {
        enoughArguments(arguments.length, 'KeyboardEvent');
        init = withDefaults(init || {}, defaults);
        var out = document.createEvent(eventType),
          ctrlKey = init.ctrlKey,
          shiftKey = init.shiftKey,
          altKey = init.altKey,
          metaKey = init.metaKey,
          altGraphKey = init.altGraphKey,
          modifiers = initType > 3 ? getModifier(init) : null,
          key = String(init.key),
          chr = String(init.char),
          location = init.location,
          keyCode = init.keyCode || (init.keyCode = key) && key.charCodeAt(0) || 0,
          charCode = init.charCode || (init.charCode = chr) && chr.charCodeAt(0) || 0,
          bubbles = init.bubbles,
          cancelable = init.cancelable,
          repeat = init.repeat,
          locale = init.locale,
          view = init.view || window,
          args;
        if (!init.which) init.which = init.keyCode;
        if ('initKeyEvent' in out) {
          out.initKeyEvent(type, bubbles, cancelable, view, ctrlKey, altKey, shiftKey, metaKey, keyCode, charCode);
        } else if (0 < initType && 'initKeyboardEvent' in out) {
          args = [type, bubbles, cancelable, view];
          switch (initType) {
            case 1:
              args.push(key, location, ctrlKey, shiftKey, altKey, metaKey, altGraphKey);
              break;
            case 2:
              args.push(ctrlKey, altKey, shiftKey, metaKey, keyCode, charCode);
              break;
            case 3:
              args.push(key, location, ctrlKey, altKey, shiftKey, metaKey, altGraphKey);
              break;
            case 4:
              args.push(key, location, modifiers, repeat, locale);
              break;
            default:
              args.push(char, key, location, modifiers, repeat, locale);
          }
          out.initKeyboardEvent.apply(out, args);
        } else {
          out.initEvent(type, bubbles, cancelable);
        }
        for (key in out) {
          if (defaults.hasOwnProperty(key) && out[key] !== init[key]) {
            withInitValues(key, out, init);
          }
        }
        return out;
      }
      KeyboardEvent.prototype = $KeyboardEvent.prototype;
      return KeyboardEvent;
    }(window.KeyboardEvent || function KeyboardEvent() {});
    defineProperty(window, 'KeyboardEvent', {
      value: o_O
    });
    // Android 4 gotcha
    if (KeyboardEvent !== o_O) KeyboardEvent = o_O;
  }

  // window.MouseEvent as constructor
  try {
    new MouseEvent('_', {});
  } catch (o_O) {
    /* jshint -W022 */
    o_O = function ($MouseEvent) {
      function MouseEvent(type, init) {
        enoughArguments(arguments.length, 'MouseEvent');
        var out = document.createEvent('MouseEvent');
        if (!init) init = {};
        out.initMouseEvent(type, !!init.bubbles, !!init.cancelable, init.view || window, init.detail || 1, init.screenX || 0, init.screenY || 0, init.clientX || 0, init.clientY || 0, !!init.ctrlKey, !!init.altKey, !!init.shiftKey, !!init.metaKey, init.button || 0, init.relatedTarget || null);
        return out;
      }
      MouseEvent.prototype = $MouseEvent.prototype;
      return MouseEvent;
    }(window.MouseEvent || function MouseEvent() {});
    defineProperty(window, 'MouseEvent', {
      value: o_O
    });
    // Android 4 gotcha
    if (MouseEvent !== o_O) MouseEvent = o_O;
  }
  if (!document.querySelectorAll('*').forEach) {
    (function () {
      function patch(what) {
        var querySelectorAll = what.querySelectorAll;
        what.querySelectorAll = function qSA(css) {
          var result = querySelectorAll.call(this, css);
          result.forEach = Array.prototype.forEach;
          return result;
        };
      }
      patch(document);
      patch(Element.prototype);
    })();
  }
  try {
    // https://drafts.csswg.org/selectors-4/#the-scope-pseudo
    document.querySelector(':scope *');
  } catch (o_O) {
    (function () {
      var dataScope = 'data-scope-' + (Math.random() * 1e9 >>> 0);
      var proto = Element.prototype;
      var querySelector = proto.querySelector;
      var querySelectorAll = proto.querySelectorAll;
      proto.querySelector = function qS(css) {
        return find(this, querySelector, css);
      };
      proto.querySelectorAll = function qSA(css) {
        return find(this, querySelectorAll, css);
      };
      function find(node, method, css) {
        if (node.type != document.ELEMENT_NODE) return method.call(node, css);
        node.setAttribute(dataScope, null);
        var result = method.call(node, String(css).replace(/(^|,\s*)(:scope([ >]|$))/g, function ($0, $1, $2, $3) {
          return $1 + '[' + dataScope + ']' + ($3 || ' ');
        }));
        node.removeAttribute(dataScope);
        return result;
      }
    })();
  }
})(window);
(function (global) {
  'use strict';

  // a WeakMap fallback for DOM nodes only used as key
  var DOMMap = global.WeakMap || function () {
    var counter = 0,
      dispatched = false,
      drop = false,
      value;
    function dispatch(key, ce, shouldDrop) {
      drop = shouldDrop;
      dispatched = false;
      value = undefined;
      key.dispatchEvent(ce);
    }
    function Handler(value) {
      this.value = value;
    }
    Handler.prototype.handleEvent = function handleEvent(e) {
      dispatched = true;
      if (drop) {
        e.currentTarget.removeEventListener(e.type, this, false);
      } else {
        value = this.value;
      }
    };
    function DOMMap() {
      counter++; // make id clashing highly improbable
      this.__ce__ = new Event('@DOMMap:' + counter + Math.random());
    }
    DOMMap.prototype = {
      'constructor': DOMMap,
      'delete': function del(key) {
        return dispatch(key, this.__ce__, true), dispatched;
      },
      'get': function get(key) {
        dispatch(key, this.__ce__, false);
        var v = value;
        value = undefined;
        return v;
      },
      'has': function has(key) {
        return dispatch(key, this.__ce__, false), dispatched;
      },
      'set': function set(key, value) {
        dispatch(key, this.__ce__, true);
        key.addEventListener(this.__ce__.type, new Handler(value), false);
        return this;
      }
    };
    return DOMMap;
  }();
  function Dict() {}
  Dict.prototype = (Object.create || Object)(null);

  // https://dom.spec.whatwg.org/#interface-eventtarget

  function createEventListener(type, callback, options) {
    function eventListener(e) {
      if (eventListener.once) {
        e.currentTarget.removeEventListener(e.type, callback, eventListener);
        eventListener.removed = true;
      }
      if (eventListener.passive) {
        e.preventDefault = createEventListener.preventDefault;
      }
      if (typeof eventListener.callback === 'function') {
        /* jshint validthis: true */
        eventListener.callback.call(this, e);
      } else if (eventListener.callback) {
        eventListener.callback.handleEvent(e);
      }
      if (eventListener.passive) {
        delete e.preventDefault;
      }
    }
    eventListener.type = type;
    eventListener.callback = callback;
    eventListener.capture = !!options.capture;
    eventListener.passive = !!options.passive;
    eventListener.once = !!options.once;
    // currently pointless but specs say to use it, so ...
    eventListener.removed = false;
    return eventListener;
  }
  createEventListener.preventDefault = function preventDefault() {};
  var Event = global.CustomEvent,
    dE = global.dispatchEvent,
    aEL = global.addEventListener,
    rEL = global.removeEventListener,
    counter = 0,
    increment = function increment() {
      counter++;
    },
    indexOf = [].indexOf || function indexOf(value) {
      var length = this.length;
      while (length--) {
        if (this[length] === value) {
          break;
        }
      }
      return length;
    },
    getListenerKey = function getListenerKey(options) {
      return ''.concat(options.capture ? '1' : '0', options.passive ? '1' : '0', options.once ? '1' : '0');
    },
    augment;
  try {
    aEL('_', increment, {
      once: true
    });
    dE(new Event('_'));
    dE(new Event('_'));
    rEL('_', increment, {
      once: true
    });
  } catch (o_O) {}
  if (counter !== 1) {
    (function () {
      var dm = new DOMMap();
      function createAEL(aEL) {
        return function addEventListener(type, handler, options) {
          if (options && typeof options !== 'boolean') {
            var info = dm.get(this),
              key = getListenerKey(options),
              i,
              tmp,
              wrap;
            if (!info) dm.set(this, info = new Dict());
            if (!(type in info)) info[type] = {
              handler: [],
              wrap: []
            };
            tmp = info[type];
            i = indexOf.call(tmp.handler, handler);
            if (i < 0) {
              i = tmp.handler.push(handler) - 1;
              tmp.wrap[i] = wrap = new Dict();
            } else {
              wrap = tmp.wrap[i];
            }
            if (!(key in wrap)) {
              wrap[key] = createEventListener(type, handler, options);
              aEL.call(this, type, wrap[key], wrap[key].capture);
            }
          } else {
            aEL.call(this, type, handler, options);
          }
        };
      }
      function createREL(rEL) {
        return function removeEventListener(type, handler, options) {
          if (options && typeof options !== 'boolean') {
            var info = dm.get(this),
              key,
              i,
              tmp,
              wrap;
            if (info && type in info) {
              tmp = info[type];
              i = indexOf.call(tmp.handler, handler);
              if (-1 < i) {
                key = getListenerKey(options);
                wrap = tmp.wrap[i];
                if (key in wrap) {
                  rEL.call(this, type, wrap[key], wrap[key].capture);
                  delete wrap[key];
                  // return if there are other wraps
                  for (key in wrap) return;
                  // otherwise remove all the things
                  tmp.handler.splice(i, 1);
                  tmp.wrap.splice(i, 1);
                  // if there are no other handlers
                  if (tmp.handler.length === 0)
                    // drop the info[type] entirely
                    delete info[type];
                }
              }
            }
          } else {
            rEL.call(this, type, handler, options);
          }
        };
      }
      augment = function augment(Constructor) {
        if (!Constructor) return;
        var proto = Constructor.prototype;
        proto.addEventListener = createAEL(proto.addEventListener);
        proto.removeEventListener = createREL(proto.removeEventListener);
      };
      if (global.EventTarget) {
        augment(EventTarget);
      } else {
        augment(global.Text);
        augment(global.Element || global.HTMLElement);
        augment(global.HTMLDocument);
        augment(global.Window || {
          prototype: global
        });
        augment(global.XMLHttpRequest);
      }
    })();
  }
})(self);

/***/ }),

/***/ 2:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var _defineProperty = (__webpack_require__(416)["default"]);
var _get = (__webpack_require__(588)["default"]);
var _getPrototypeOf = (__webpack_require__(808)["default"]);
var _classCallCheck = (__webpack_require__(690)["default"]);
var _createClass = (__webpack_require__(728)["default"]);
var _inherits = (__webpack_require__(655)["default"]);
var _createSuper = (__webpack_require__(389)["default"]);
var _slicedToArray = (__webpack_require__(424)["default"]);
/**
 * gpu.js
 * http://gpu.rocks/
 *
 * GPU Accelerated JavaScript
 *
 * @version 2.16.0
 * @date Wed Nov 16 2022 15:48:37 GMT-0500 (Eastern Standard Time)
 *
 * @license MIT
 * The MIT License
 *
 * Copyright (c) 2022 gpu.js Team
 */
(function (f) {
  if (true) {
    module.exports = f();
  } else { var g; }
})(function () {
  var define, module, exports;
  return function () {
    function r(e, n, t) {
      function o(i, f) {
        if (!n[i]) {
          if (!e[i]) {
            var c = undefined;
            if (!f && c) return require(i, !0);
            if (u) return u(i, !0);
            var a = new Error("Cannot find module '" + i + "'");
            throw a.code = "MODULE_NOT_FOUND", a;
          }
          var p = n[i] = {
            exports: {}
          };
          e[i][0].call(p.exports, function (r) {
            var n = e[i][1][r];
            return o(n || r);
          }, p, p.exports, r, e, n, t);
        }
        return n[i].exports;
      }
      for (var u = undefined, i = 0; i < t.length; i++) o(t[i]);
      return o;
    }
    return r;
  }()({
    1: [function (require, module, exports) {
      (function (global, factory) {
        typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global.acorn = {}));
      })(this, function (exports) {
        'use strict';

        var reservedWords = {
          3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
          5: "class enum extends super const export import",
          6: "enum",
          strict: "implements interface let package private protected public static yield",
          strictBind: "eval arguments"
        };
        var ecma5AndLessKeywords = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this";
        var keywords = {
          5: ecma5AndLessKeywords,
          "5module": ecma5AndLessKeywords + " export import",
          6: ecma5AndLessKeywords + " const class extends export import super"
        };
        var keywordRelationalOperator = /^in(stanceof)?$/;
        var nonASCIIidentifierStartChars = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEF\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7C6\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB67\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC";
        var nonASCIIidentifierChars = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F";
        var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
        var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");
        nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;
        var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 477, 28, 11, 0, 9, 21, 155, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 12, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 0, 33, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 0, 161, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 270, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 754, 9486, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541];
        var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 525, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 4, 9, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 232, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 792487, 239];
        function isInAstralSet(code, set) {
          var pos = 0x10000;
          for (var i = 0; i < set.length; i += 2) {
            pos += set[i];
            if (pos > code) {
              return false;
            }
            pos += set[i + 1];
            if (pos >= code) {
              return true;
            }
          }
        }
        function isIdentifierStart(code, astral) {
          if (code < 65) {
            return code === 36;
          }
          if (code < 91) {
            return true;
          }
          if (code < 97) {
            return code === 95;
          }
          if (code < 123) {
            return true;
          }
          if (code <= 0xffff) {
            return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));
          }
          if (astral === false) {
            return false;
          }
          return isInAstralSet(code, astralIdentifierStartCodes);
        }
        function isIdentifierChar(code, astral) {
          if (code < 48) {
            return code === 36;
          }
          if (code < 58) {
            return true;
          }
          if (code < 65) {
            return false;
          }
          if (code < 91) {
            return true;
          }
          if (code < 97) {
            return code === 95;
          }
          if (code < 123) {
            return true;
          }
          if (code <= 0xffff) {
            return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));
          }
          if (astral === false) {
            return false;
          }
          return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);
        }
        var TokenType = function TokenType(label, conf) {
          if (conf === void 0) conf = {};
          this.label = label;
          this.keyword = conf.keyword;
          this.beforeExpr = !!conf.beforeExpr;
          this.startsExpr = !!conf.startsExpr;
          this.isLoop = !!conf.isLoop;
          this.isAssign = !!conf.isAssign;
          this.prefix = !!conf.prefix;
          this.postfix = !!conf.postfix;
          this.binop = conf.binop || null;
          this.updateContext = null;
        };
        function binop(name, prec) {
          return new TokenType(name, {
            beforeExpr: true,
            binop: prec
          });
        }
        var beforeExpr = {
            beforeExpr: true
          },
          startsExpr = {
            startsExpr: true
          };
        var keywords$1 = {};
        function kw(name, options) {
          if (options === void 0) options = {};
          options.keyword = name;
          return keywords$1[name] = new TokenType(name, options);
        }
        var types = {
          num: new TokenType("num", startsExpr),
          regexp: new TokenType("regexp", startsExpr),
          string: new TokenType("string", startsExpr),
          name: new TokenType("name", startsExpr),
          eof: new TokenType("eof"),
          bracketL: new TokenType("[", {
            beforeExpr: true,
            startsExpr: true
          }),
          bracketR: new TokenType("]"),
          braceL: new TokenType("{", {
            beforeExpr: true,
            startsExpr: true
          }),
          braceR: new TokenType("}"),
          parenL: new TokenType("(", {
            beforeExpr: true,
            startsExpr: true
          }),
          parenR: new TokenType(")"),
          comma: new TokenType(",", beforeExpr),
          semi: new TokenType(";", beforeExpr),
          colon: new TokenType(":", beforeExpr),
          dot: new TokenType("."),
          question: new TokenType("?", beforeExpr),
          arrow: new TokenType("=>", beforeExpr),
          template: new TokenType("template"),
          invalidTemplate: new TokenType("invalidTemplate"),
          ellipsis: new TokenType("...", beforeExpr),
          backQuote: new TokenType("`", startsExpr),
          dollarBraceL: new TokenType("${", {
            beforeExpr: true,
            startsExpr: true
          }),
          eq: new TokenType("=", {
            beforeExpr: true,
            isAssign: true
          }),
          assign: new TokenType("_=", {
            beforeExpr: true,
            isAssign: true
          }),
          incDec: new TokenType("++/--", {
            prefix: true,
            postfix: true,
            startsExpr: true
          }),
          prefix: new TokenType("!/~", {
            beforeExpr: true,
            prefix: true,
            startsExpr: true
          }),
          logicalOR: binop("||", 1),
          logicalAND: binop("&&", 2),
          bitwiseOR: binop("|", 3),
          bitwiseXOR: binop("^", 4),
          bitwiseAND: binop("&", 5),
          equality: binop("==/!=/===/!==", 6),
          relational: binop("</>/<=/>=", 7),
          bitShift: binop("<</>>/>>>", 8),
          plusMin: new TokenType("+/-", {
            beforeExpr: true,
            binop: 9,
            prefix: true,
            startsExpr: true
          }),
          modulo: binop("%", 10),
          star: binop("*", 10),
          slash: binop("/", 10),
          starstar: new TokenType("**", {
            beforeExpr: true
          }),
          _break: kw("break"),
          _case: kw("case", beforeExpr),
          _catch: kw("catch"),
          _continue: kw("continue"),
          _debugger: kw("debugger"),
          _default: kw("default", beforeExpr),
          _do: kw("do", {
            isLoop: true,
            beforeExpr: true
          }),
          _else: kw("else", beforeExpr),
          _finally: kw("finally"),
          _for: kw("for", {
            isLoop: true
          }),
          _function: kw("function", startsExpr),
          _if: kw("if"),
          _return: kw("return", beforeExpr),
          _switch: kw("switch"),
          _throw: kw("throw", beforeExpr),
          _try: kw("try"),
          _var: kw("var"),
          _const: kw("const"),
          _while: kw("while", {
            isLoop: true
          }),
          _with: kw("with"),
          _new: kw("new", {
            beforeExpr: true,
            startsExpr: true
          }),
          _this: kw("this", startsExpr),
          _super: kw("super", startsExpr),
          _class: kw("class", startsExpr),
          _extends: kw("extends", beforeExpr),
          _export: kw("export"),
          _import: kw("import", startsExpr),
          _null: kw("null", startsExpr),
          _true: kw("true", startsExpr),
          _false: kw("false", startsExpr),
          _in: kw("in", {
            beforeExpr: true,
            binop: 7
          }),
          _instanceof: kw("instanceof", {
            beforeExpr: true,
            binop: 7
          }),
          _typeof: kw("typeof", {
            beforeExpr: true,
            prefix: true,
            startsExpr: true
          }),
          _void: kw("void", {
            beforeExpr: true,
            prefix: true,
            startsExpr: true
          }),
          _delete: kw("delete", {
            beforeExpr: true,
            prefix: true,
            startsExpr: true
          })
        };
        var lineBreak = /\r\n?|\n|\u2028|\u2029/;
        var lineBreakG = new RegExp(lineBreak.source, "g");
        function isNewLine(code, ecma2019String) {
          return code === 10 || code === 13 || !ecma2019String && (code === 0x2028 || code === 0x2029);
        }
        var nonASCIIwhitespace = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/;
        var skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;
        var ref = Object.prototype;
        var hasOwnProperty = ref.hasOwnProperty;
        var toString = ref.toString;
        function has(obj, propName) {
          return hasOwnProperty.call(obj, propName);
        }
        var isArray = Array.isArray || function (obj) {
          return toString.call(obj) === "[object Array]";
        };
        function wordsRegexp(words) {
          return new RegExp("^(?:" + words.replace(/ /g, "|") + ")$");
        }
        var Position = function Position(line, col) {
          this.line = line;
          this.column = col;
        };
        Position.prototype.offset = function offset(n) {
          return new Position(this.line, this.column + n);
        };
        var SourceLocation = function SourceLocation(p, start, end) {
          this.start = start;
          this.end = end;
          if (p.sourceFile !== null) {
            this.source = p.sourceFile;
          }
        };
        function getLineInfo(input, offset) {
          for (var line = 1, cur = 0;;) {
            lineBreakG.lastIndex = cur;
            var match = lineBreakG.exec(input);
            if (match && match.index < offset) {
              ++line;
              cur = match.index + match[0].length;
            } else {
              return new Position(line, offset - cur);
            }
          }
        }
        var defaultOptions = {
          ecmaVersion: 10,
          sourceType: "script",
          onInsertedSemicolon: null,
          onTrailingComma: null,
          allowReserved: null,
          allowReturnOutsideFunction: false,
          allowImportExportEverywhere: false,
          allowAwaitOutsideFunction: false,
          allowHashBang: false,
          locations: false,
          onToken: null,
          onComment: null,
          ranges: false,
          program: null,
          sourceFile: null,
          directSourceFile: null,
          preserveParens: false
        };
        function getOptions(opts) {
          var options = {};
          for (var opt in defaultOptions) {
            options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt];
          }
          if (options.ecmaVersion >= 2015) {
            options.ecmaVersion -= 2009;
          }
          if (options.allowReserved == null) {
            options.allowReserved = options.ecmaVersion < 5;
          }
          if (isArray(options.onToken)) {
            var tokens = options.onToken;
            options.onToken = function (token) {
              return tokens.push(token);
            };
          }
          if (isArray(options.onComment)) {
            options.onComment = pushComment(options, options.onComment);
          }
          return options;
        }
        function pushComment(options, array) {
          return function (block, text, start, end, startLoc, endLoc) {
            var comment = {
              type: block ? "Block" : "Line",
              value: text,
              start: start,
              end: end
            };
            if (options.locations) {
              comment.loc = new SourceLocation(this, startLoc, endLoc);
            }
            if (options.ranges) {
              comment.range = [start, end];
            }
            array.push(comment);
          };
        }
        var SCOPE_TOP = 1,
          SCOPE_FUNCTION = 2,
          SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,
          SCOPE_ASYNC = 4,
          SCOPE_GENERATOR = 8,
          SCOPE_ARROW = 16,
          SCOPE_SIMPLE_CATCH = 32,
          SCOPE_SUPER = 64,
          SCOPE_DIRECT_SUPER = 128;
        function functionFlags(async, generator) {
          return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0);
        }
        var BIND_NONE = 0,
          BIND_VAR = 1,
          BIND_LEXICAL = 2,
          BIND_FUNCTION = 3,
          BIND_SIMPLE_CATCH = 4,
          BIND_OUTSIDE = 5;
        var Parser = function Parser(options, input, startPos) {
          this.options = options = getOptions(options);
          this.sourceFile = options.sourceFile;
          this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === "module" ? "5module" : 5]);
          var reserved = "";
          if (options.allowReserved !== true) {
            for (var v = options.ecmaVersion;; v--) {
              if (reserved = reservedWords[v]) {
                break;
              }
            }
            if (options.sourceType === "module") {
              reserved += " await";
            }
          }
          this.reservedWords = wordsRegexp(reserved);
          var reservedStrict = (reserved ? reserved + " " : "") + reservedWords.strict;
          this.reservedWordsStrict = wordsRegexp(reservedStrict);
          this.reservedWordsStrictBind = wordsRegexp(reservedStrict + " " + reservedWords.strictBind);
          this.input = String(input);
          this.containsEsc = false;
          if (startPos) {
            this.pos = startPos;
            this.lineStart = this.input.lastIndexOf("\n", startPos - 1) + 1;
            this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;
          } else {
            this.pos = this.lineStart = 0;
            this.curLine = 1;
          }
          this.type = types.eof;
          this.value = null;
          this.start = this.end = this.pos;
          this.startLoc = this.endLoc = this.curPosition();
          this.lastTokEndLoc = this.lastTokStartLoc = null;
          this.lastTokStart = this.lastTokEnd = this.pos;
          this.context = this.initialContext();
          this.exprAllowed = true;
          this.inModule = options.sourceType === "module";
          this.strict = this.inModule || this.strictDirective(this.pos);
          this.potentialArrowAt = -1;
          this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;
          this.labels = [];
          this.undefinedExports = {};
          if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === "#!") {
            this.skipLineComment(2);
          }
          this.scopeStack = [];
          this.enterScope(SCOPE_TOP);
          this.regexpState = null;
        };
        var prototypeAccessors = {
          inFunction: {
            configurable: true
          },
          inGenerator: {
            configurable: true
          },
          inAsync: {
            configurable: true
          },
          allowSuper: {
            configurable: true
          },
          allowDirectSuper: {
            configurable: true
          },
          treatFunctionsAsVar: {
            configurable: true
          }
        };
        Parser.prototype.parse = function parse() {
          var node = this.options.program || this.startNode();
          this.nextToken();
          return this.parseTopLevel(node);
        };
        prototypeAccessors.inFunction.get = function () {
          return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;
        };
        prototypeAccessors.inGenerator.get = function () {
          return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0;
        };
        prototypeAccessors.inAsync.get = function () {
          return (this.currentVarScope().flags & SCOPE_ASYNC) > 0;
        };
        prototypeAccessors.allowSuper.get = function () {
          return (this.currentThisScope().flags & SCOPE_SUPER) > 0;
        };
        prototypeAccessors.allowDirectSuper.get = function () {
          return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;
        };
        prototypeAccessors.treatFunctionsAsVar.get = function () {
          return this.treatFunctionsAsVarInScope(this.currentScope());
        };
        Parser.prototype.inNonArrowFunction = function inNonArrowFunction() {
          return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;
        };
        Parser.extend = function extend() {
          var plugins = [],
            len = arguments.length;
          while (len--) plugins[len] = arguments[len];
          var cls = this;
          for (var i = 0; i < plugins.length; i++) {
            cls = plugins[i](cls);
          }
          return cls;
        };
        Parser.parse = function parse(input, options) {
          return new this(options, input).parse();
        };
        Parser.parseExpressionAt = function parseExpressionAt(input, pos, options) {
          var parser = new this(options, input, pos);
          parser.nextToken();
          return parser.parseExpression();
        };
        Parser.tokenizer = function tokenizer(input, options) {
          return new this(options, input);
        };
        Object.defineProperties(Parser.prototype, prototypeAccessors);
        var pp = Parser.prototype;
        var literal = /^(?:'((?:\\.|[^'])*?)'|"((?:\\.|[^"])*?)")/;
        pp.strictDirective = function (start) {
          for (;;) {
            skipWhiteSpace.lastIndex = start;
            start += skipWhiteSpace.exec(this.input)[0].length;
            var match = literal.exec(this.input.slice(start));
            if (!match) {
              return false;
            }
            if ((match[1] || match[2]) === "use strict") {
              return true;
            }
            start += match[0].length;
            skipWhiteSpace.lastIndex = start;
            start += skipWhiteSpace.exec(this.input)[0].length;
            if (this.input[start] === ";") {
              start++;
            }
          }
        };
        pp.eat = function (type) {
          if (this.type === type) {
            this.next();
            return true;
          } else {
            return false;
          }
        };
        pp.isContextual = function (name) {
          return this.type === types.name && this.value === name && !this.containsEsc;
        };
        pp.eatContextual = function (name) {
          if (!this.isContextual(name)) {
            return false;
          }
          this.next();
          return true;
        };
        pp.expectContextual = function (name) {
          if (!this.eatContextual(name)) {
            this.unexpected();
          }
        };
        pp.canInsertSemicolon = function () {
          return this.type === types.eof || this.type === types.braceR || lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
        };
        pp.insertSemicolon = function () {
          if (this.canInsertSemicolon()) {
            if (this.options.onInsertedSemicolon) {
              this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc);
            }
            return true;
          }
        };
        pp.semicolon = function () {
          if (!this.eat(types.semi) && !this.insertSemicolon()) {
            this.unexpected();
          }
        };
        pp.afterTrailingComma = function (tokType, notNext) {
          if (this.type === tokType) {
            if (this.options.onTrailingComma) {
              this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc);
            }
            if (!notNext) {
              this.next();
            }
            return true;
          }
        };
        pp.expect = function (type) {
          this.eat(type) || this.unexpected();
        };
        pp.unexpected = function (pos) {
          this.raise(pos != null ? pos : this.start, "Unexpected token");
        };
        function DestructuringErrors() {
          this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;
        }
        pp.checkPatternErrors = function (refDestructuringErrors, isAssign) {
          if (!refDestructuringErrors) {
            return;
          }
          if (refDestructuringErrors.trailingComma > -1) {
            this.raiseRecoverable(refDestructuringErrors.trailingComma, "Comma is not permitted after the rest element");
          }
          var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;
          if (parens > -1) {
            this.raiseRecoverable(parens, "Parenthesized pattern");
          }
        };
        pp.checkExpressionErrors = function (refDestructuringErrors, andThrow) {
          if (!refDestructuringErrors) {
            return false;
          }
          var shorthandAssign = refDestructuringErrors.shorthandAssign;
          var doubleProto = refDestructuringErrors.doubleProto;
          if (!andThrow) {
            return shorthandAssign >= 0 || doubleProto >= 0;
          }
          if (shorthandAssign >= 0) {
            this.raise(shorthandAssign, "Shorthand property assignments are valid only in destructuring patterns");
          }
          if (doubleProto >= 0) {
            this.raiseRecoverable(doubleProto, "Redefinition of __proto__ property");
          }
        };
        pp.checkYieldAwaitInDefaultParams = function () {
          if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos)) {
            this.raise(this.yieldPos, "Yield expression cannot be a default value");
          }
          if (this.awaitPos) {
            this.raise(this.awaitPos, "Await expression cannot be a default value");
          }
        };
        pp.isSimpleAssignTarget = function (expr) {
          if (expr.type === "ParenthesizedExpression") {
            return this.isSimpleAssignTarget(expr.expression);
          }
          return expr.type === "Identifier" || expr.type === "MemberExpression";
        };
        var pp$1 = Parser.prototype;
        pp$1.parseTopLevel = function (node) {
          var exports = {};
          if (!node.body) {
            node.body = [];
          }
          while (this.type !== types.eof) {
            var stmt = this.parseStatement(null, true, exports);
            node.body.push(stmt);
          }
          if (this.inModule) {
            for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1) {
              var name = list[i];
              this.raiseRecoverable(this.undefinedExports[name].start, "Export '" + name + "' is not defined");
            }
          }
          this.adaptDirectivePrologue(node.body);
          this.next();
          node.sourceType = this.options.sourceType;
          return this.finishNode(node, "Program");
        };
        var loopLabel = {
            kind: "loop"
          },
          switchLabel = {
            kind: "switch"
          };
        pp$1.isLet = function (context) {
          if (this.options.ecmaVersion < 6 || !this.isContextual("let")) {
            return false;
          }
          skipWhiteSpace.lastIndex = this.pos;
          var skip = skipWhiteSpace.exec(this.input);
          var next = this.pos + skip[0].length,
            nextCh = this.input.charCodeAt(next);
          if (nextCh === 91) {
            return true;
          }
          if (context) {
            return false;
          }
          if (nextCh === 123) {
            return true;
          }
          if (isIdentifierStart(nextCh, true)) {
            var pos = next + 1;
            while (isIdentifierChar(this.input.charCodeAt(pos), true)) {
              ++pos;
            }
            var ident = this.input.slice(next, pos);
            if (!keywordRelationalOperator.test(ident)) {
              return true;
            }
          }
          return false;
        };
        pp$1.isAsyncFunction = function () {
          if (this.options.ecmaVersion < 8 || !this.isContextual("async")) {
            return false;
          }
          skipWhiteSpace.lastIndex = this.pos;
          var skip = skipWhiteSpace.exec(this.input);
          var next = this.pos + skip[0].length;
          return !lineBreak.test(this.input.slice(this.pos, next)) && this.input.slice(next, next + 8) === "function" && (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)));
        };
        pp$1.parseStatement = function (context, topLevel, exports) {
          var starttype = this.type,
            node = this.startNode(),
            kind;
          if (this.isLet(context)) {
            starttype = types._var;
            kind = "let";
          }
          switch (starttype) {
            case types._break:
            case types._continue:
              return this.parseBreakContinueStatement(node, starttype.keyword);
            case types._debugger:
              return this.parseDebuggerStatement(node);
            case types._do:
              return this.parseDoStatement(node);
            case types._for:
              return this.parseForStatement(node);
            case types._function:
              if (context && (this.strict || context !== "if" && context !== "label") && this.options.ecmaVersion >= 6) {
                this.unexpected();
              }
              return this.parseFunctionStatement(node, false, !context);
            case types._class:
              if (context) {
                this.unexpected();
              }
              return this.parseClass(node, true);
            case types._if:
              return this.parseIfStatement(node);
            case types._return:
              return this.parseReturnStatement(node);
            case types._switch:
              return this.parseSwitchStatement(node);
            case types._throw:
              return this.parseThrowStatement(node);
            case types._try:
              return this.parseTryStatement(node);
            case types._const:
            case types._var:
              kind = kind || this.value;
              if (context && kind !== "var") {
                this.unexpected();
              }
              return this.parseVarStatement(node, kind);
            case types._while:
              return this.parseWhileStatement(node);
            case types._with:
              return this.parseWithStatement(node);
            case types.braceL:
              return this.parseBlock(true, node);
            case types.semi:
              return this.parseEmptyStatement(node);
            case types._export:
            case types._import:
              if (this.options.ecmaVersion > 10 && starttype === types._import) {
                skipWhiteSpace.lastIndex = this.pos;
                var skip = skipWhiteSpace.exec(this.input);
                var next = this.pos + skip[0].length,
                  nextCh = this.input.charCodeAt(next);
                if (nextCh === 40) {
                  return this.parseExpressionStatement(node, this.parseExpression());
                }
              }
              if (!this.options.allowImportExportEverywhere) {
                if (!topLevel) {
                  this.raise(this.start, "'import' and 'export' may only appear at the top level");
                }
                if (!this.inModule) {
                  this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'");
                }
              }
              return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports);
            default:
              if (this.isAsyncFunction()) {
                if (context) {
                  this.unexpected();
                }
                this.next();
                return this.parseFunctionStatement(node, true, !context);
              }
              var maybeName = this.value,
                expr = this.parseExpression();
              if (starttype === types.name && expr.type === "Identifier" && this.eat(types.colon)) {
                return this.parseLabeledStatement(node, maybeName, expr, context);
              } else {
                return this.parseExpressionStatement(node, expr);
              }
          }
        };
        pp$1.parseBreakContinueStatement = function (node, keyword) {
          var isBreak = keyword === "break";
          this.next();
          if (this.eat(types.semi) || this.insertSemicolon()) {
            node.label = null;
          } else if (this.type !== types.name) {
            this.unexpected();
          } else {
            node.label = this.parseIdent();
            this.semicolon();
          }
          var i = 0;
          for (; i < this.labels.length; ++i) {
            var lab = this.labels[i];
            if (node.label == null || lab.name === node.label.name) {
              if (lab.kind != null && (isBreak || lab.kind === "loop")) {
                break;
              }
              if (node.label && isBreak) {
                break;
              }
            }
          }
          if (i === this.labels.length) {
            this.raise(node.start, "Unsyntactic " + keyword);
          }
          return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement");
        };
        pp$1.parseDebuggerStatement = function (node) {
          this.next();
          this.semicolon();
          return this.finishNode(node, "DebuggerStatement");
        };
        pp$1.parseDoStatement = function (node) {
          this.next();
          this.labels.push(loopLabel);
          node.body = this.parseStatement("do");
          this.labels.pop();
          this.expect(types._while);
          node.test = this.parseParenExpression();
          if (this.options.ecmaVersion >= 6) {
            this.eat(types.semi);
          } else {
            this.semicolon();
          }
          return this.finishNode(node, "DoWhileStatement");
        };
        pp$1.parseForStatement = function (node) {
          this.next();
          var awaitAt = this.options.ecmaVersion >= 9 && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction) && this.eatContextual("await") ? this.lastTokStart : -1;
          this.labels.push(loopLabel);
          this.enterScope(0);
          this.expect(types.parenL);
          if (this.type === types.semi) {
            if (awaitAt > -1) {
              this.unexpected(awaitAt);
            }
            return this.parseFor(node, null);
          }
          var isLet = this.isLet();
          if (this.type === types._var || this.type === types._const || isLet) {
            var init$1 = this.startNode(),
              kind = isLet ? "let" : this.value;
            this.next();
            this.parseVar(init$1, true, kind);
            this.finishNode(init$1, "VariableDeclaration");
            if ((this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) && init$1.declarations.length === 1) {
              if (this.options.ecmaVersion >= 9) {
                if (this.type === types._in) {
                  if (awaitAt > -1) {
                    this.unexpected(awaitAt);
                  }
                } else {
                  node.await = awaitAt > -1;
                }
              }
              return this.parseForIn(node, init$1);
            }
            if (awaitAt > -1) {
              this.unexpected(awaitAt);
            }
            return this.parseFor(node, init$1);
          }
          var refDestructuringErrors = new DestructuringErrors();
          var init = this.parseExpression(true, refDestructuringErrors);
          if (this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) {
            if (this.options.ecmaVersion >= 9) {
              if (this.type === types._in) {
                if (awaitAt > -1) {
                  this.unexpected(awaitAt);
                }
              } else {
                node.await = awaitAt > -1;
              }
            }
            this.toAssignable(init, false, refDestructuringErrors);
            this.checkLVal(init);
            return this.parseForIn(node, init);
          } else {
            this.checkExpressionErrors(refDestructuringErrors, true);
          }
          if (awaitAt > -1) {
            this.unexpected(awaitAt);
          }
          return this.parseFor(node, init);
        };
        pp$1.parseFunctionStatement = function (node, isAsync, declarationPosition) {
          this.next();
          return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync);
        };
        pp$1.parseIfStatement = function (node) {
          this.next();
          node.test = this.parseParenExpression();
          node.consequent = this.parseStatement("if");
          node.alternate = this.eat(types._else) ? this.parseStatement("if") : null;
          return this.finishNode(node, "IfStatement");
        };
        pp$1.parseReturnStatement = function (node) {
          if (!this.inFunction && !this.options.allowReturnOutsideFunction) {
            this.raise(this.start, "'return' outside of function");
          }
          this.next();
          if (this.eat(types.semi) || this.insertSemicolon()) {
            node.argument = null;
          } else {
            node.argument = this.parseExpression();
            this.semicolon();
          }
          return this.finishNode(node, "ReturnStatement");
        };
        pp$1.parseSwitchStatement = function (node) {
          this.next();
          node.discriminant = this.parseParenExpression();
          node.cases = [];
          this.expect(types.braceL);
          this.labels.push(switchLabel);
          this.enterScope(0);
          var cur;
          for (var sawDefault = false; this.type !== types.braceR;) {
            if (this.type === types._case || this.type === types._default) {
              var isCase = this.type === types._case;
              if (cur) {
                this.finishNode(cur, "SwitchCase");
              }
              node.cases.push(cur = this.startNode());
              cur.consequent = [];
              this.next();
              if (isCase) {
                cur.test = this.parseExpression();
              } else {
                if (sawDefault) {
                  this.raiseRecoverable(this.lastTokStart, "Multiple default clauses");
                }
                sawDefault = true;
                cur.test = null;
              }
              this.expect(types.colon);
            } else {
              if (!cur) {
                this.unexpected();
              }
              cur.consequent.push(this.parseStatement(null));
            }
          }
          this.exitScope();
          if (cur) {
            this.finishNode(cur, "SwitchCase");
          }
          this.next();
          this.labels.pop();
          return this.finishNode(node, "SwitchStatement");
        };
        pp$1.parseThrowStatement = function (node) {
          this.next();
          if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) {
            this.raise(this.lastTokEnd, "Illegal newline after throw");
          }
          node.argument = this.parseExpression();
          this.semicolon();
          return this.finishNode(node, "ThrowStatement");
        };
        var empty = [];
        pp$1.parseTryStatement = function (node) {
          this.next();
          node.block = this.parseBlock();
          node.handler = null;
          if (this.type === types._catch) {
            var clause = this.startNode();
            this.next();
            if (this.eat(types.parenL)) {
              clause.param = this.parseBindingAtom();
              var simple = clause.param.type === "Identifier";
              this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);
              this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);
              this.expect(types.parenR);
            } else {
              if (this.options.ecmaVersion < 10) {
                this.unexpected();
              }
              clause.param = null;
              this.enterScope(0);
            }
            clause.body = this.parseBlock(false);
            this.exitScope();
            node.handler = this.finishNode(clause, "CatchClause");
          }
          node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;
          if (!node.handler && !node.finalizer) {
            this.raise(node.start, "Missing catch or finally clause");
          }
          return this.finishNode(node, "TryStatement");
        };
        pp$1.parseVarStatement = function (node, kind) {
          this.next();
          this.parseVar(node, false, kind);
          this.semicolon();
          return this.finishNode(node, "VariableDeclaration");
        };
        pp$1.parseWhileStatement = function (node) {
          this.next();
          node.test = this.parseParenExpression();
          this.labels.push(loopLabel);
          node.body = this.parseStatement("while");
          this.labels.pop();
          return this.finishNode(node, "WhileStatement");
        };
        pp$1.parseWithStatement = function (node) {
          if (this.strict) {
            this.raise(this.start, "'with' in strict mode");
          }
          this.next();
          node.object = this.parseParenExpression();
          node.body = this.parseStatement("with");
          return this.finishNode(node, "WithStatement");
        };
        pp$1.parseEmptyStatement = function (node) {
          this.next();
          return this.finishNode(node, "EmptyStatement");
        };
        pp$1.parseLabeledStatement = function (node, maybeName, expr, context) {
          for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1) {
            var label = list[i$1];
            if (label.name === maybeName) {
              this.raise(expr.start, "Label '" + maybeName + "' is already declared");
            }
          }
          var kind = this.type.isLoop ? "loop" : this.type === types._switch ? "switch" : null;
          for (var i = this.labels.length - 1; i >= 0; i--) {
            var label$1 = this.labels[i];
            if (label$1.statementStart === node.start) {
              label$1.statementStart = this.start;
              label$1.kind = kind;
            } else {
              break;
            }
          }
          this.labels.push({
            name: maybeName,
            kind: kind,
            statementStart: this.start
          });
          node.body = this.parseStatement(context ? context.indexOf("label") === -1 ? context + "label" : context : "label");
          this.labels.pop();
          node.label = expr;
          return this.finishNode(node, "LabeledStatement");
        };
        pp$1.parseExpressionStatement = function (node, expr) {
          node.expression = expr;
          this.semicolon();
          return this.finishNode(node, "ExpressionStatement");
        };
        pp$1.parseBlock = function (createNewLexicalScope, node) {
          if (createNewLexicalScope === void 0) createNewLexicalScope = true;
          if (node === void 0) node = this.startNode();
          node.body = [];
          this.expect(types.braceL);
          if (createNewLexicalScope) {
            this.enterScope(0);
          }
          while (!this.eat(types.braceR)) {
            var stmt = this.parseStatement(null);
            node.body.push(stmt);
          }
          if (createNewLexicalScope) {
            this.exitScope();
          }
          return this.finishNode(node, "BlockStatement");
        };
        pp$1.parseFor = function (node, init) {
          node.init = init;
          this.expect(types.semi);
          node.test = this.type === types.semi ? null : this.parseExpression();
          this.expect(types.semi);
          node.update = this.type === types.parenR ? null : this.parseExpression();
          this.expect(types.parenR);
          node.body = this.parseStatement("for");
          this.exitScope();
          this.labels.pop();
          return this.finishNode(node, "ForStatement");
        };
        pp$1.parseForIn = function (node, init) {
          var isForIn = this.type === types._in;
          this.next();
          if (init.type === "VariableDeclaration" && init.declarations[0].init != null && (!isForIn || this.options.ecmaVersion < 8 || this.strict || init.kind !== "var" || init.declarations[0].id.type !== "Identifier")) {
            this.raise(init.start, (isForIn ? "for-in" : "for-of") + " loop variable declaration may not have an initializer");
          } else if (init.type === "AssignmentPattern") {
            this.raise(init.start, "Invalid left-hand side in for-loop");
          }
          node.left = init;
          node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();
          this.expect(types.parenR);
          node.body = this.parseStatement("for");
          this.exitScope();
          this.labels.pop();
          return this.finishNode(node, isForIn ? "ForInStatement" : "ForOfStatement");
        };
        pp$1.parseVar = function (node, isFor, kind) {
          node.declarations = [];
          node.kind = kind;
          for (;;) {
            var decl = this.startNode();
            this.parseVarId(decl, kind);
            if (this.eat(types.eq)) {
              decl.init = this.parseMaybeAssign(isFor);
            } else if (kind === "const" && !(this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual("of"))) {
              this.unexpected();
            } else if (decl.id.type !== "Identifier" && !(isFor && (this.type === types._in || this.isContextual("of")))) {
              this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value");
            } else {
              decl.init = null;
            }
            node.declarations.push(this.finishNode(decl, "VariableDeclarator"));
            if (!this.eat(types.comma)) {
              break;
            }
          }
          return node;
        };
        pp$1.parseVarId = function (decl, kind) {
          decl.id = this.parseBindingAtom();
          this.checkLVal(decl.id, kind === "var" ? BIND_VAR : BIND_LEXICAL, false);
        };
        var FUNC_STATEMENT = 1,
          FUNC_HANGING_STATEMENT = 2,
          FUNC_NULLABLE_ID = 4;
        pp$1.parseFunction = function (node, statement, allowExpressionBody, isAsync) {
          this.initFunction(node);
          if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {
            if (this.type === types.star && statement & FUNC_HANGING_STATEMENT) {
              this.unexpected();
            }
            node.generator = this.eat(types.star);
          }
          if (this.options.ecmaVersion >= 8) {
            node.async = !!isAsync;
          }
          if (statement & FUNC_STATEMENT) {
            node.id = statement & FUNC_NULLABLE_ID && this.type !== types.name ? null : this.parseIdent();
            if (node.id && !(statement & FUNC_HANGING_STATEMENT)) {
              this.checkLVal(node.id, this.strict || node.generator || node.async ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION);
            }
          }
          var oldYieldPos = this.yieldPos,
            oldAwaitPos = this.awaitPos,
            oldAwaitIdentPos = this.awaitIdentPos;
          this.yieldPos = 0;
          this.awaitPos = 0;
          this.awaitIdentPos = 0;
          this.enterScope(functionFlags(node.async, node.generator));
          if (!(statement & FUNC_STATEMENT)) {
            node.id = this.type === types.name ? this.parseIdent() : null;
          }
          this.parseFunctionParams(node);
          this.parseFunctionBody(node, allowExpressionBody, false);
          this.yieldPos = oldYieldPos;
          this.awaitPos = oldAwaitPos;
          this.awaitIdentPos = oldAwaitIdentPos;
          return this.finishNode(node, statement & FUNC_STATEMENT ? "FunctionDeclaration" : "FunctionExpression");
        };
        pp$1.parseFunctionParams = function (node) {
          this.expect(types.parenL);
          node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);
          this.checkYieldAwaitInDefaultParams();
        };
        pp$1.parseClass = function (node, isStatement) {
          this.next();
          var oldStrict = this.strict;
          this.strict = true;
          this.parseClassId(node, isStatement);
          this.parseClassSuper(node);
          var classBody = this.startNode();
          var hadConstructor = false;
          classBody.body = [];
          this.expect(types.braceL);
          while (!this.eat(types.braceR)) {
            var element = this.parseClassElement(node.superClass !== null);
            if (element) {
              classBody.body.push(element);
              if (element.type === "MethodDefinition" && element.kind === "constructor") {
                if (hadConstructor) {
                  this.raise(element.start, "Duplicate constructor in the same class");
                }
                hadConstructor = true;
              }
            }
          }
          node.body = this.finishNode(classBody, "ClassBody");
          this.strict = oldStrict;
          return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression");
        };
        pp$1.parseClassElement = function (constructorAllowsSuper) {
          var this$1 = this;
          if (this.eat(types.semi)) {
            return null;
          }
          var method = this.startNode();
          var tryContextual = function tryContextual(k, noLineBreak) {
            if (noLineBreak === void 0) noLineBreak = false;
            var start = this$1.start,
              startLoc = this$1.startLoc;
            if (!this$1.eatContextual(k)) {
              return false;
            }
            if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) {
              return true;
            }
            if (method.key) {
              this$1.unexpected();
            }
            method.computed = false;
            method.key = this$1.startNodeAt(start, startLoc);
            method.key.name = k;
            this$1.finishNode(method.key, "Identifier");
            return false;
          };
          method.kind = "method";
          method.static = tryContextual("static");
          var isGenerator = this.eat(types.star);
          var isAsync = false;
          if (!isGenerator) {
            if (this.options.ecmaVersion >= 8 && tryContextual("async", true)) {
              isAsync = true;
              isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);
            } else if (tryContextual("get")) {
              method.kind = "get";
            } else if (tryContextual("set")) {
              method.kind = "set";
            }
          }
          if (!method.key) {
            this.parsePropertyName(method);
          }
          var key = method.key;
          var allowsDirectSuper = false;
          if (!method.computed && !method.static && (key.type === "Identifier" && key.name === "constructor" || key.type === "Literal" && key.value === "constructor")) {
            if (method.kind !== "method") {
              this.raise(key.start, "Constructor can't have get/set modifier");
            }
            if (isGenerator) {
              this.raise(key.start, "Constructor can't be a generator");
            }
            if (isAsync) {
              this.raise(key.start, "Constructor can't be an async method");
            }
            method.kind = "constructor";
            allowsDirectSuper = constructorAllowsSuper;
          } else if (method.static && key.type === "Identifier" && key.name === "prototype") {
            this.raise(key.start, "Classes may not have a static property named prototype");
          }
          this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);
          if (method.kind === "get" && method.value.params.length !== 0) {
            this.raiseRecoverable(method.value.start, "getter should have no params");
          }
          if (method.kind === "set" && method.value.params.length !== 1) {
            this.raiseRecoverable(method.value.start, "setter should have exactly one param");
          }
          if (method.kind === "set" && method.value.params[0].type === "RestElement") {
            this.raiseRecoverable(method.value.params[0].start, "Setter cannot use rest params");
          }
          return method;
        };
        pp$1.parseClassMethod = function (method, isGenerator, isAsync, allowsDirectSuper) {
          method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);
          return this.finishNode(method, "MethodDefinition");
        };
        pp$1.parseClassId = function (node, isStatement) {
          if (this.type === types.name) {
            node.id = this.parseIdent();
            if (isStatement) {
              this.checkLVal(node.id, BIND_LEXICAL, false);
            }
          } else {
            if (isStatement === true) {
              this.unexpected();
            }
            node.id = null;
          }
        };
        pp$1.parseClassSuper = function (node) {
          node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;
        };
        pp$1.parseExport = function (node, exports) {
          this.next();
          if (this.eat(types.star)) {
            this.expectContextual("from");
            if (this.type !== types.string) {
              this.unexpected();
            }
            node.source = this.parseExprAtom();
            this.semicolon();
            return this.finishNode(node, "ExportAllDeclaration");
          }
          if (this.eat(types._default)) {
            this.checkExport(exports, "default", this.lastTokStart);
            var isAsync;
            if (this.type === types._function || (isAsync = this.isAsyncFunction())) {
              var fNode = this.startNode();
              this.next();
              if (isAsync) {
                this.next();
              }
              node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);
            } else if (this.type === types._class) {
              var cNode = this.startNode();
              node.declaration = this.parseClass(cNode, "nullableID");
            } else {
              node.declaration = this.parseMaybeAssign();
              this.semicolon();
            }
            return this.finishNode(node, "ExportDefaultDeclaration");
          }
          if (this.shouldParseExportStatement()) {
            node.declaration = this.parseStatement(null);
            if (node.declaration.type === "VariableDeclaration") {
              this.checkVariableExport(exports, node.declaration.declarations);
            } else {
              this.checkExport(exports, node.declaration.id.name, node.declaration.id.start);
            }
            node.specifiers = [];
            node.source = null;
          } else {
            node.declaration = null;
            node.specifiers = this.parseExportSpecifiers(exports);
            if (this.eatContextual("from")) {
              if (this.type !== types.string) {
                this.unexpected();
              }
              node.source = this.parseExprAtom();
            } else {
              for (var i = 0, list = node.specifiers; i < list.length; i += 1) {
                var spec = list[i];
                this.checkUnreserved(spec.local);
                this.checkLocalExport(spec.local);
              }
              node.source = null;
            }
            this.semicolon();
          }
          return this.finishNode(node, "ExportNamedDeclaration");
        };
        pp$1.checkExport = function (exports, name, pos) {
          if (!exports) {
            return;
          }
          if (has(exports, name)) {
            this.raiseRecoverable(pos, "Duplicate export '" + name + "'");
          }
          exports[name] = true;
        };
        pp$1.checkPatternExport = function (exports, pat) {
          var type = pat.type;
          if (type === "Identifier") {
            this.checkExport(exports, pat.name, pat.start);
          } else if (type === "ObjectPattern") {
            for (var i = 0, list = pat.properties; i < list.length; i += 1) {
              var prop = list[i];
              this.checkPatternExport(exports, prop);
            }
          } else if (type === "ArrayPattern") {
            for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {
              var elt = list$1[i$1];
              if (elt) {
                this.checkPatternExport(exports, elt);
              }
            }
          } else if (type === "Property") {
            this.checkPatternExport(exports, pat.value);
          } else if (type === "AssignmentPattern") {
            this.checkPatternExport(exports, pat.left);
          } else if (type === "RestElement") {
            this.checkPatternExport(exports, pat.argument);
          } else if (type === "ParenthesizedExpression") {
            this.checkPatternExport(exports, pat.expression);
          }
        };
        pp$1.checkVariableExport = function (exports, decls) {
          if (!exports) {
            return;
          }
          for (var i = 0, list = decls; i < list.length; i += 1) {
            var decl = list[i];
            this.checkPatternExport(exports, decl.id);
          }
        };
        pp$1.shouldParseExportStatement = function () {
          return this.type.keyword === "var" || this.type.keyword === "const" || this.type.keyword === "class" || this.type.keyword === "function" || this.isLet() || this.isAsyncFunction();
        };
        pp$1.parseExportSpecifiers = function (exports) {
          var nodes = [],
            first = true;
          this.expect(types.braceL);
          while (!this.eat(types.braceR)) {
            if (!first) {
              this.expect(types.comma);
              if (this.afterTrailingComma(types.braceR)) {
                break;
              }
            } else {
              first = false;
            }
            var node = this.startNode();
            node.local = this.parseIdent(true);
            node.exported = this.eatContextual("as") ? this.parseIdent(true) : node.local;
            this.checkExport(exports, node.exported.name, node.exported.start);
            nodes.push(this.finishNode(node, "ExportSpecifier"));
          }
          return nodes;
        };
        pp$1.parseImport = function (node) {
          this.next();
          if (this.type === types.string) {
            node.specifiers = empty;
            node.source = this.parseExprAtom();
          } else {
            node.specifiers = this.parseImportSpecifiers();
            this.expectContextual("from");
            node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();
          }
          this.semicolon();
          return this.finishNode(node, "ImportDeclaration");
        };
        pp$1.parseImportSpecifiers = function () {
          var nodes = [],
            first = true;
          if (this.type === types.name) {
            var node = this.startNode();
            node.local = this.parseIdent();
            this.checkLVal(node.local, BIND_LEXICAL);
            nodes.push(this.finishNode(node, "ImportDefaultSpecifier"));
            if (!this.eat(types.comma)) {
              return nodes;
            }
          }
          if (this.type === types.star) {
            var node$1 = this.startNode();
            this.next();
            this.expectContextual("as");
            node$1.local = this.parseIdent();
            this.checkLVal(node$1.local, BIND_LEXICAL);
            nodes.push(this.finishNode(node$1, "ImportNamespaceSpecifier"));
            return nodes;
          }
          this.expect(types.braceL);
          while (!this.eat(types.braceR)) {
            if (!first) {
              this.expect(types.comma);
              if (this.afterTrailingComma(types.braceR)) {
                break;
              }
            } else {
              first = false;
            }
            var node$2 = this.startNode();
            node$2.imported = this.parseIdent(true);
            if (this.eatContextual("as")) {
              node$2.local = this.parseIdent();
            } else {
              this.checkUnreserved(node$2.imported);
              node$2.local = node$2.imported;
            }
            this.checkLVal(node$2.local, BIND_LEXICAL);
            nodes.push(this.finishNode(node$2, "ImportSpecifier"));
          }
          return nodes;
        };
        pp$1.adaptDirectivePrologue = function (statements) {
          for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {
            statements[i].directive = statements[i].expression.raw.slice(1, -1);
          }
        };
        pp$1.isDirectiveCandidate = function (statement) {
          return statement.type === "ExpressionStatement" && statement.expression.type === "Literal" && typeof statement.expression.value === "string" && (this.input[statement.start] === "\"" || this.input[statement.start] === "'");
        };
        var pp$2 = Parser.prototype;
        pp$2.toAssignable = function (node, isBinding, refDestructuringErrors) {
          if (this.options.ecmaVersion >= 6 && node) {
            switch (node.type) {
              case "Identifier":
                if (this.inAsync && node.name === "await") {
                  this.raise(node.start, "Cannot use 'await' as identifier inside an async function");
                }
                break;
              case "ObjectPattern":
              case "ArrayPattern":
              case "RestElement":
                break;
              case "ObjectExpression":
                node.type = "ObjectPattern";
                if (refDestructuringErrors) {
                  this.checkPatternErrors(refDestructuringErrors, true);
                }
                for (var i = 0, list = node.properties; i < list.length; i += 1) {
                  var prop = list[i];
                  this.toAssignable(prop, isBinding);
                  if (prop.type === "RestElement" && (prop.argument.type === "ArrayPattern" || prop.argument.type === "ObjectPattern")) {
                    this.raise(prop.argument.start, "Unexpected token");
                  }
                }
                break;
              case "Property":
                if (node.kind !== "init") {
                  this.raise(node.key.start, "Object pattern can't contain getter or setter");
                }
                this.toAssignable(node.value, isBinding);
                break;
              case "ArrayExpression":
                node.type = "ArrayPattern";
                if (refDestructuringErrors) {
                  this.checkPatternErrors(refDestructuringErrors, true);
                }
                this.toAssignableList(node.elements, isBinding);
                break;
              case "SpreadElement":
                node.type = "RestElement";
                this.toAssignable(node.argument, isBinding);
                if (node.argument.type === "AssignmentPattern") {
                  this.raise(node.argument.start, "Rest elements cannot have a default value");
                }
                break;
              case "AssignmentExpression":
                if (node.operator !== "=") {
                  this.raise(node.left.end, "Only '=' operator can be used for specifying default value.");
                }
                node.type = "AssignmentPattern";
                delete node.operator;
                this.toAssignable(node.left, isBinding);
              case "AssignmentPattern":
                break;
              case "ParenthesizedExpression":
                this.toAssignable(node.expression, isBinding, refDestructuringErrors);
                break;
              case "MemberExpression":
                if (!isBinding) {
                  break;
                }
              default:
                this.raise(node.start, "Assigning to rvalue");
            }
          } else if (refDestructuringErrors) {
            this.checkPatternErrors(refDestructuringErrors, true);
          }
          return node;
        };
        pp$2.toAssignableList = function (exprList, isBinding) {
          var end = exprList.length;
          for (var i = 0; i < end; i++) {
            var elt = exprList[i];
            if (elt) {
              this.toAssignable(elt, isBinding);
            }
          }
          if (end) {
            var last = exprList[end - 1];
            if (this.options.ecmaVersion === 6 && isBinding && last && last.type === "RestElement" && last.argument.type !== "Identifier") {
              this.unexpected(last.argument.start);
            }
          }
          return exprList;
        };
        pp$2.parseSpread = function (refDestructuringErrors) {
          var node = this.startNode();
          this.next();
          node.argument = this.parseMaybeAssign(false, refDestructuringErrors);
          return this.finishNode(node, "SpreadElement");
        };
        pp$2.parseRestBinding = function () {
          var node = this.startNode();
          this.next();
          if (this.options.ecmaVersion === 6 && this.type !== types.name) {
            this.unexpected();
          }
          node.argument = this.parseBindingAtom();
          return this.finishNode(node, "RestElement");
        };
        pp$2.parseBindingAtom = function () {
          if (this.options.ecmaVersion >= 6) {
            switch (this.type) {
              case types.bracketL:
                var node = this.startNode();
                this.next();
                node.elements = this.parseBindingList(types.bracketR, true, true);
                return this.finishNode(node, "ArrayPattern");
              case types.braceL:
                return this.parseObj(true);
            }
          }
          return this.parseIdent();
        };
        pp$2.parseBindingList = function (close, allowEmpty, allowTrailingComma) {
          var elts = [],
            first = true;
          while (!this.eat(close)) {
            if (first) {
              first = false;
            } else {
              this.expect(types.comma);
            }
            if (allowEmpty && this.type === types.comma) {
              elts.push(null);
            } else if (allowTrailingComma && this.afterTrailingComma(close)) {
              break;
            } else if (this.type === types.ellipsis) {
              var rest = this.parseRestBinding();
              this.parseBindingListItem(rest);
              elts.push(rest);
              if (this.type === types.comma) {
                this.raise(this.start, "Comma is not permitted after the rest element");
              }
              this.expect(close);
              break;
            } else {
              var elem = this.parseMaybeDefault(this.start, this.startLoc);
              this.parseBindingListItem(elem);
              elts.push(elem);
            }
          }
          return elts;
        };
        pp$2.parseBindingListItem = function (param) {
          return param;
        };
        pp$2.parseMaybeDefault = function (startPos, startLoc, left) {
          left = left || this.parseBindingAtom();
          if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) {
            return left;
          }
          var node = this.startNodeAt(startPos, startLoc);
          node.left = left;
          node.right = this.parseMaybeAssign();
          return this.finishNode(node, "AssignmentPattern");
        };
        pp$2.checkLVal = function (expr, bindingType, checkClashes) {
          if (bindingType === void 0) bindingType = BIND_NONE;
          switch (expr.type) {
            case "Identifier":
              if (bindingType === BIND_LEXICAL && expr.name === "let") {
                this.raiseRecoverable(expr.start, "let is disallowed as a lexically bound name");
              }
              if (this.strict && this.reservedWordsStrictBind.test(expr.name)) {
                this.raiseRecoverable(expr.start, (bindingType ? "Binding " : "Assigning to ") + expr.name + " in strict mode");
              }
              if (checkClashes) {
                if (has(checkClashes, expr.name)) {
                  this.raiseRecoverable(expr.start, "Argument name clash");
                }
                checkClashes[expr.name] = true;
              }
              if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) {
                this.declareName(expr.name, bindingType, expr.start);
              }
              break;
            case "MemberExpression":
              if (bindingType) {
                this.raiseRecoverable(expr.start, "Binding member expression");
              }
              break;
            case "ObjectPattern":
              for (var i = 0, list = expr.properties; i < list.length; i += 1) {
                var prop = list[i];
                this.checkLVal(prop, bindingType, checkClashes);
              }
              break;
            case "Property":
              this.checkLVal(expr.value, bindingType, checkClashes);
              break;
            case "ArrayPattern":
              for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {
                var elem = list$1[i$1];
                if (elem) {
                  this.checkLVal(elem, bindingType, checkClashes);
                }
              }
              break;
            case "AssignmentPattern":
              this.checkLVal(expr.left, bindingType, checkClashes);
              break;
            case "RestElement":
              this.checkLVal(expr.argument, bindingType, checkClashes);
              break;
            case "ParenthesizedExpression":
              this.checkLVal(expr.expression, bindingType, checkClashes);
              break;
            default:
              this.raise(expr.start, (bindingType ? "Binding" : "Assigning to") + " rvalue");
          }
        };
        var pp$3 = Parser.prototype;
        pp$3.checkPropClash = function (prop, propHash, refDestructuringErrors) {
          if (this.options.ecmaVersion >= 9 && prop.type === "SpreadElement") {
            return;
          }
          if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand)) {
            return;
          }
          var key = prop.key;
          var name;
          switch (key.type) {
            case "Identifier":
              name = key.name;
              break;
            case "Literal":
              name = String(key.value);
              break;
            default:
              return;
          }
          var kind = prop.kind;
          if (this.options.ecmaVersion >= 6) {
            if (name === "__proto__" && kind === "init") {
              if (propHash.proto) {
                if (refDestructuringErrors) {
                  if (refDestructuringErrors.doubleProto < 0) {
                    refDestructuringErrors.doubleProto = key.start;
                  }
                } else {
                  this.raiseRecoverable(key.start, "Redefinition of __proto__ property");
                }
              }
              propHash.proto = true;
            }
            return;
          }
          name = "$" + name;
          var other = propHash[name];
          if (other) {
            var redefinition;
            if (kind === "init") {
              redefinition = this.strict && other.init || other.get || other.set;
            } else {
              redefinition = other.init || other[kind];
            }
            if (redefinition) {
              this.raiseRecoverable(key.start, "Redefinition of property");
            }
          } else {
            other = propHash[name] = {
              init: false,
              get: false,
              set: false
            };
          }
          other[kind] = true;
        };
        pp$3.parseExpression = function (noIn, refDestructuringErrors) {
          var startPos = this.start,
            startLoc = this.startLoc;
          var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);
          if (this.type === types.comma) {
            var node = this.startNodeAt(startPos, startLoc);
            node.expressions = [expr];
            while (this.eat(types.comma)) {
              node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors));
            }
            return this.finishNode(node, "SequenceExpression");
          }
          return expr;
        };
        pp$3.parseMaybeAssign = function (noIn, refDestructuringErrors, afterLeftParse) {
          if (this.isContextual("yield")) {
            if (this.inGenerator) {
              return this.parseYield(noIn);
            } else {
              this.exprAllowed = false;
            }
          }
          var ownDestructuringErrors = false,
            oldParenAssign = -1,
            oldTrailingComma = -1;
          if (refDestructuringErrors) {
            oldParenAssign = refDestructuringErrors.parenthesizedAssign;
            oldTrailingComma = refDestructuringErrors.trailingComma;
            refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;
          } else {
            refDestructuringErrors = new DestructuringErrors();
            ownDestructuringErrors = true;
          }
          var startPos = this.start,
            startLoc = this.startLoc;
          if (this.type === types.parenL || this.type === types.name) {
            this.potentialArrowAt = this.start;
          }
          var left = this.parseMaybeConditional(noIn, refDestructuringErrors);
          if (afterLeftParse) {
            left = afterLeftParse.call(this, left, startPos, startLoc);
          }
          if (this.type.isAssign) {
            var node = this.startNodeAt(startPos, startLoc);
            node.operator = this.value;
            node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;
            if (!ownDestructuringErrors) {
              refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;
            }
            if (refDestructuringErrors.shorthandAssign >= node.left.start) {
              refDestructuringErrors.shorthandAssign = -1;
            }
            this.checkLVal(left);
            this.next();
            node.right = this.parseMaybeAssign(noIn);
            return this.finishNode(node, "AssignmentExpression");
          } else {
            if (ownDestructuringErrors) {
              this.checkExpressionErrors(refDestructuringErrors, true);
            }
          }
          if (oldParenAssign > -1) {
            refDestructuringErrors.parenthesizedAssign = oldParenAssign;
          }
          if (oldTrailingComma > -1) {
            refDestructuringErrors.trailingComma = oldTrailingComma;
          }
          return left;
        };
        pp$3.parseMaybeConditional = function (noIn, refDestructuringErrors) {
          var startPos = this.start,
            startLoc = this.startLoc;
          var expr = this.parseExprOps(noIn, refDestructuringErrors);
          if (this.checkExpressionErrors(refDestructuringErrors)) {
            return expr;
          }
          if (this.eat(types.question)) {
            var node = this.startNodeAt(startPos, startLoc);
            node.test = expr;
            node.consequent = this.parseMaybeAssign();
            this.expect(types.colon);
            node.alternate = this.parseMaybeAssign(noIn);
            return this.finishNode(node, "ConditionalExpression");
          }
          return expr;
        };
        pp$3.parseExprOps = function (noIn, refDestructuringErrors) {
          var startPos = this.start,
            startLoc = this.startLoc;
          var expr = this.parseMaybeUnary(refDestructuringErrors, false);
          if (this.checkExpressionErrors(refDestructuringErrors)) {
            return expr;
          }
          return expr.start === startPos && expr.type === "ArrowFunctionExpression" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn);
        };
        pp$3.parseExprOp = function (left, leftStartPos, leftStartLoc, minPrec, noIn) {
          var prec = this.type.binop;
          if (prec != null && (!noIn || this.type !== types._in)) {
            if (prec > minPrec) {
              var logical = this.type === types.logicalOR || this.type === types.logicalAND;
              var op = this.value;
              this.next();
              var startPos = this.start,
                startLoc = this.startLoc;
              var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);
              var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);
              return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn);
            }
          }
          return left;
        };
        pp$3.buildBinary = function (startPos, startLoc, left, right, op, logical) {
          var node = this.startNodeAt(startPos, startLoc);
          node.left = left;
          node.operator = op;
          node.right = right;
          return this.finishNode(node, logical ? "LogicalExpression" : "BinaryExpression");
        };
        pp$3.parseMaybeUnary = function (refDestructuringErrors, sawUnary) {
          var startPos = this.start,
            startLoc = this.startLoc,
            expr;
          if (this.isContextual("await") && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction)) {
            expr = this.parseAwait();
            sawUnary = true;
          } else if (this.type.prefix) {
            var node = this.startNode(),
              update = this.type === types.incDec;
            node.operator = this.value;
            node.prefix = true;
            this.next();
            node.argument = this.parseMaybeUnary(null, true);
            this.checkExpressionErrors(refDestructuringErrors, true);
            if (update) {
              this.checkLVal(node.argument);
            } else if (this.strict && node.operator === "delete" && node.argument.type === "Identifier") {
              this.raiseRecoverable(node.start, "Deleting local variable in strict mode");
            } else {
              sawUnary = true;
            }
            expr = this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression");
          } else {
            expr = this.parseExprSubscripts(refDestructuringErrors);
            if (this.checkExpressionErrors(refDestructuringErrors)) {
              return expr;
            }
            while (this.type.postfix && !this.canInsertSemicolon()) {
              var node$1 = this.startNodeAt(startPos, startLoc);
              node$1.operator = this.value;
              node$1.prefix = false;
              node$1.argument = expr;
              this.checkLVal(expr);
              this.next();
              expr = this.finishNode(node$1, "UpdateExpression");
            }
          }
          if (!sawUnary && this.eat(types.starstar)) {
            return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), "**", false);
          } else {
            return expr;
          }
        };
        pp$3.parseExprSubscripts = function (refDestructuringErrors) {
          var startPos = this.start,
            startLoc = this.startLoc;
          var expr = this.parseExprAtom(refDestructuringErrors);
          if (expr.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")") {
            return expr;
          }
          var result = this.parseSubscripts(expr, startPos, startLoc);
          if (refDestructuringErrors && result.type === "MemberExpression") {
            if (refDestructuringErrors.parenthesizedAssign >= result.start) {
              refDestructuringErrors.parenthesizedAssign = -1;
            }
            if (refDestructuringErrors.parenthesizedBind >= result.start) {
              refDestructuringErrors.parenthesizedBind = -1;
            }
          }
          return result;
        };
        pp$3.parseSubscripts = function (base, startPos, startLoc, noCalls) {
          var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === "Identifier" && base.name === "async" && this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === "async";
          while (true) {
            var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow);
            if (element === base || element.type === "ArrowFunctionExpression") {
              return element;
            }
            base = element;
          }
        };
        pp$3.parseSubscript = function (base, startPos, startLoc, noCalls, maybeAsyncArrow) {
          var computed = this.eat(types.bracketL);
          if (computed || this.eat(types.dot)) {
            var node = this.startNodeAt(startPos, startLoc);
            node.object = base;
            node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== "never");
            node.computed = !!computed;
            if (computed) {
              this.expect(types.bracketR);
            }
            base = this.finishNode(node, "MemberExpression");
          } else if (!noCalls && this.eat(types.parenL)) {
            var refDestructuringErrors = new DestructuringErrors(),
              oldYieldPos = this.yieldPos,
              oldAwaitPos = this.awaitPos,
              oldAwaitIdentPos = this.awaitIdentPos;
            this.yieldPos = 0;
            this.awaitPos = 0;
            this.awaitIdentPos = 0;
            var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);
            if (maybeAsyncArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {
              this.checkPatternErrors(refDestructuringErrors, false);
              this.checkYieldAwaitInDefaultParams();
              if (this.awaitIdentPos > 0) {
                this.raise(this.awaitIdentPos, "Cannot use 'await' as identifier inside an async function");
              }
              this.yieldPos = oldYieldPos;
              this.awaitPos = oldAwaitPos;
              this.awaitIdentPos = oldAwaitIdentPos;
              return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true);
            }
            this.checkExpressionErrors(refDestructuringErrors, true);
            this.yieldPos = oldYieldPos || this.yieldPos;
            this.awaitPos = oldAwaitPos || this.awaitPos;
            this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;
            var node$1 = this.startNodeAt(startPos, startLoc);
            node$1.callee = base;
            node$1.arguments = exprList;
            base = this.finishNode(node$1, "CallExpression");
          } else if (this.type === types.backQuote) {
            var node$2 = this.startNodeAt(startPos, startLoc);
            node$2.tag = base;
            node$2.quasi = this.parseTemplate({
              isTagged: true
            });
            base = this.finishNode(node$2, "TaggedTemplateExpression");
          }
          return base;
        };
        pp$3.parseExprAtom = function (refDestructuringErrors) {
          if (this.type === types.slash) {
            this.readRegexp();
          }
          var node,
            canBeArrow = this.potentialArrowAt === this.start;
          switch (this.type) {
            case types._super:
              if (!this.allowSuper) {
                this.raise(this.start, "'super' keyword outside a method");
              }
              node = this.startNode();
              this.next();
              if (this.type === types.parenL && !this.allowDirectSuper) {
                this.raise(node.start, "super() call outside constructor of a subclass");
              }
              if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL) {
                this.unexpected();
              }
              return this.finishNode(node, "Super");
            case types._this:
              node = this.startNode();
              this.next();
              return this.finishNode(node, "ThisExpression");
            case types.name:
              var startPos = this.start,
                startLoc = this.startLoc,
                containsEsc = this.containsEsc;
              var id = this.parseIdent(false);
              if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === "async" && !this.canInsertSemicolon() && this.eat(types._function)) {
                return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true);
              }
              if (canBeArrow && !this.canInsertSemicolon()) {
                if (this.eat(types.arrow)) {
                  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false);
                }
                if (this.options.ecmaVersion >= 8 && id.name === "async" && this.type === types.name && !containsEsc) {
                  id = this.parseIdent(false);
                  if (this.canInsertSemicolon() || !this.eat(types.arrow)) {
                    this.unexpected();
                  }
                  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true);
                }
              }
              return id;
            case types.regexp:
              var value = this.value;
              node = this.parseLiteral(value.value);
              node.regex = {
                pattern: value.pattern,
                flags: value.flags
              };
              return node;
            case types.num:
            case types.string:
              return this.parseLiteral(this.value);
            case types._null:
            case types._true:
            case types._false:
              node = this.startNode();
              node.value = this.type === types._null ? null : this.type === types._true;
              node.raw = this.type.keyword;
              this.next();
              return this.finishNode(node, "Literal");
            case types.parenL:
              var start = this.start,
                expr = this.parseParenAndDistinguishExpression(canBeArrow);
              if (refDestructuringErrors) {
                if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr)) {
                  refDestructuringErrors.parenthesizedAssign = start;
                }
                if (refDestructuringErrors.parenthesizedBind < 0) {
                  refDestructuringErrors.parenthesizedBind = start;
                }
              }
              return expr;
            case types.bracketL:
              node = this.startNode();
              this.next();
              node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);
              return this.finishNode(node, "ArrayExpression");
            case types.braceL:
              return this.parseObj(false, refDestructuringErrors);
            case types._function:
              node = this.startNode();
              this.next();
              return this.parseFunction(node, 0);
            case types._class:
              return this.parseClass(this.startNode(), false);
            case types._new:
              return this.parseNew();
            case types.backQuote:
              return this.parseTemplate();
            case types._import:
              if (this.options.ecmaVersion >= 11) {
                return this.parseExprImport();
              } else {
                return this.unexpected();
              }
            default:
              this.unexpected();
          }
        };
        pp$3.parseExprImport = function () {
          var node = this.startNode();
          this.next();
          switch (this.type) {
            case types.parenL:
              return this.parseDynamicImport(node);
            default:
              this.unexpected();
          }
        };
        pp$3.parseDynamicImport = function (node) {
          this.next();
          node.source = this.parseMaybeAssign();
          if (!this.eat(types.parenR)) {
            var errorPos = this.start;
            if (this.eat(types.comma) && this.eat(types.parenR)) {
              this.raiseRecoverable(errorPos, "Trailing comma is not allowed in import()");
            } else {
              this.unexpected(errorPos);
            }
          }
          return this.finishNode(node, "ImportExpression");
        };
        pp$3.parseLiteral = function (value) {
          var node = this.startNode();
          node.value = value;
          node.raw = this.input.slice(this.start, this.end);
          if (node.raw.charCodeAt(node.raw.length - 1) === 110) {
            node.bigint = node.raw.slice(0, -1);
          }
          this.next();
          return this.finishNode(node, "Literal");
        };
        pp$3.parseParenExpression = function () {
          this.expect(types.parenL);
          var val = this.parseExpression();
          this.expect(types.parenR);
          return val;
        };
        pp$3.parseParenAndDistinguishExpression = function (canBeArrow) {
          var startPos = this.start,
            startLoc = this.startLoc,
            val,
            allowTrailingComma = this.options.ecmaVersion >= 8;
          if (this.options.ecmaVersion >= 6) {
            this.next();
            var innerStartPos = this.start,
              innerStartLoc = this.startLoc;
            var exprList = [],
              first = true,
              lastIsComma = false;
            var refDestructuringErrors = new DestructuringErrors(),
              oldYieldPos = this.yieldPos,
              oldAwaitPos = this.awaitPos,
              spreadStart;
            this.yieldPos = 0;
            this.awaitPos = 0;
            while (this.type !== types.parenR) {
              first ? first = false : this.expect(types.comma);
              if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {
                lastIsComma = true;
                break;
              } else if (this.type === types.ellipsis) {
                spreadStart = this.start;
                exprList.push(this.parseParenItem(this.parseRestBinding()));
                if (this.type === types.comma) {
                  this.raise(this.start, "Comma is not permitted after the rest element");
                }
                break;
              } else {
                exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));
              }
            }
            var innerEndPos = this.start,
              innerEndLoc = this.startLoc;
            this.expect(types.parenR);
            if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {
              this.checkPatternErrors(refDestructuringErrors, false);
              this.checkYieldAwaitInDefaultParams();
              this.yieldPos = oldYieldPos;
              this.awaitPos = oldAwaitPos;
              return this.parseParenArrowList(startPos, startLoc, exprList);
            }
            if (!exprList.length || lastIsComma) {
              this.unexpected(this.lastTokStart);
            }
            if (spreadStart) {
              this.unexpected(spreadStart);
            }
            this.checkExpressionErrors(refDestructuringErrors, true);
            this.yieldPos = oldYieldPos || this.yieldPos;
            this.awaitPos = oldAwaitPos || this.awaitPos;
            if (exprList.length > 1) {
              val = this.startNodeAt(innerStartPos, innerStartLoc);
              val.expressions = exprList;
              this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);
            } else {
              val = exprList[0];
            }
          } else {
            val = this.parseParenExpression();
          }
          if (this.options.preserveParens) {
            var par = this.startNodeAt(startPos, startLoc);
            par.expression = val;
            return this.finishNode(par, "ParenthesizedExpression");
          } else {
            return val;
          }
        };
        pp$3.parseParenItem = function (item) {
          return item;
        };
        pp$3.parseParenArrowList = function (startPos, startLoc, exprList) {
          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList);
        };
        var empty$1 = [];
        pp$3.parseNew = function () {
          if (this.containsEsc) {
            this.raiseRecoverable(this.start, "Escape sequence in keyword new");
          }
          var node = this.startNode();
          var meta = this.parseIdent(true);
          if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {
            node.meta = meta;
            var containsEsc = this.containsEsc;
            node.property = this.parseIdent(true);
            if (node.property.name !== "target" || containsEsc) {
              this.raiseRecoverable(node.property.start, "The only valid meta property for new is new.target");
            }
            if (!this.inNonArrowFunction()) {
              this.raiseRecoverable(node.start, "new.target can only be used in functions");
            }
            return this.finishNode(node, "MetaProperty");
          }
          var startPos = this.start,
            startLoc = this.startLoc,
            isImport = this.type === types._import;
          node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);
          if (isImport && node.callee.type === "ImportExpression") {
            this.raise(startPos, "Cannot use new with import()");
          }
          if (this.eat(types.parenL)) {
            node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false);
          } else {
            node.arguments = empty$1;
          }
          return this.finishNode(node, "NewExpression");
        };
        pp$3.parseTemplateElement = function (ref) {
          var isTagged = ref.isTagged;
          var elem = this.startNode();
          if (this.type === types.invalidTemplate) {
            if (!isTagged) {
              this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal");
            }
            elem.value = {
              raw: this.value,
              cooked: null
            };
          } else {
            elem.value = {
              raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, "\n"),
              cooked: this.value
            };
          }
          this.next();
          elem.tail = this.type === types.backQuote;
          return this.finishNode(elem, "TemplateElement");
        };
        pp$3.parseTemplate = function (ref) {
          if (ref === void 0) ref = {};
          var isTagged = ref.isTagged;
          if (isTagged === void 0) isTagged = false;
          var node = this.startNode();
          this.next();
          node.expressions = [];
          var curElt = this.parseTemplateElement({
            isTagged: isTagged
          });
          node.quasis = [curElt];
          while (!curElt.tail) {
            if (this.type === types.eof) {
              this.raise(this.pos, "Unterminated template literal");
            }
            this.expect(types.dollarBraceL);
            node.expressions.push(this.parseExpression());
            this.expect(types.braceR);
            node.quasis.push(curElt = this.parseTemplateElement({
              isTagged: isTagged
            }));
          }
          this.next();
          return this.finishNode(node, "TemplateLiteral");
        };
        pp$3.isAsyncProp = function (prop) {
          return !prop.computed && prop.key.type === "Identifier" && prop.key.name === "async" && (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === types.star) && !lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
        };
        pp$3.parseObj = function (isPattern, refDestructuringErrors) {
          var node = this.startNode(),
            first = true,
            propHash = {};
          node.properties = [];
          this.next();
          while (!this.eat(types.braceR)) {
            if (!first) {
              this.expect(types.comma);
              if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) {
                break;
              }
            } else {
              first = false;
            }
            var prop = this.parseProperty(isPattern, refDestructuringErrors);
            if (!isPattern) {
              this.checkPropClash(prop, propHash, refDestructuringErrors);
            }
            node.properties.push(prop);
          }
          return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression");
        };
        pp$3.parseProperty = function (isPattern, refDestructuringErrors) {
          var prop = this.startNode(),
            isGenerator,
            isAsync,
            startPos,
            startLoc;
          if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {
            if (isPattern) {
              prop.argument = this.parseIdent(false);
              if (this.type === types.comma) {
                this.raise(this.start, "Comma is not permitted after the rest element");
              }
              return this.finishNode(prop, "RestElement");
            }
            if (this.type === types.parenL && refDestructuringErrors) {
              if (refDestructuringErrors.parenthesizedAssign < 0) {
                refDestructuringErrors.parenthesizedAssign = this.start;
              }
              if (refDestructuringErrors.parenthesizedBind < 0) {
                refDestructuringErrors.parenthesizedBind = this.start;
              }
            }
            prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);
            if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {
              refDestructuringErrors.trailingComma = this.start;
            }
            return this.finishNode(prop, "SpreadElement");
          }
          if (this.options.ecmaVersion >= 6) {
            prop.method = false;
            prop.shorthand = false;
            if (isPattern || refDestructuringErrors) {
              startPos = this.start;
              startLoc = this.startLoc;
            }
            if (!isPattern) {
              isGenerator = this.eat(types.star);
            }
          }
          var containsEsc = this.containsEsc;
          this.parsePropertyName(prop);
          if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {
            isAsync = true;
            isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);
            this.parsePropertyName(prop, refDestructuringErrors);
          } else {
            isAsync = false;
          }
          this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);
          return this.finishNode(prop, "Property");
        };
        pp$3.parsePropertyValue = function (prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {
          if ((isGenerator || isAsync) && this.type === types.colon) {
            this.unexpected();
          }
          if (this.eat(types.colon)) {
            prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);
            prop.kind = "init";
          } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {
            if (isPattern) {
              this.unexpected();
            }
            prop.kind = "init";
            prop.method = true;
            prop.value = this.parseMethod(isGenerator, isAsync);
          } else if (!isPattern && !containsEsc && this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" && (prop.key.name === "get" || prop.key.name === "set") && this.type !== types.comma && this.type !== types.braceR) {
            if (isGenerator || isAsync) {
              this.unexpected();
            }
            prop.kind = prop.key.name;
            this.parsePropertyName(prop);
            prop.value = this.parseMethod(false);
            var paramCount = prop.kind === "get" ? 0 : 1;
            if (prop.value.params.length !== paramCount) {
              var start = prop.value.start;
              if (prop.kind === "get") {
                this.raiseRecoverable(start, "getter should have no params");
              } else {
                this.raiseRecoverable(start, "setter should have exactly one param");
              }
            } else {
              if (prop.kind === "set" && prop.value.params[0].type === "RestElement") {
                this.raiseRecoverable(prop.value.params[0].start, "Setter cannot use rest params");
              }
            }
          } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === "Identifier") {
            if (isGenerator || isAsync) {
              this.unexpected();
            }
            this.checkUnreserved(prop.key);
            if (prop.key.name === "await" && !this.awaitIdentPos) {
              this.awaitIdentPos = startPos;
            }
            prop.kind = "init";
            if (isPattern) {
              prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);
            } else if (this.type === types.eq && refDestructuringErrors) {
              if (refDestructuringErrors.shorthandAssign < 0) {
                refDestructuringErrors.shorthandAssign = this.start;
              }
              prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);
            } else {
              prop.value = prop.key;
            }
            prop.shorthand = true;
          } else {
            this.unexpected();
          }
        };
        pp$3.parsePropertyName = function (prop) {
          if (this.options.ecmaVersion >= 6) {
            if (this.eat(types.bracketL)) {
              prop.computed = true;
              prop.key = this.parseMaybeAssign();
              this.expect(types.bracketR);
              return prop.key;
            } else {
              prop.computed = false;
            }
          }
          return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never");
        };
        pp$3.initFunction = function (node) {
          node.id = null;
          if (this.options.ecmaVersion >= 6) {
            node.generator = node.expression = false;
          }
          if (this.options.ecmaVersion >= 8) {
            node.async = false;
          }
        };
        pp$3.parseMethod = function (isGenerator, isAsync, allowDirectSuper) {
          var node = this.startNode(),
            oldYieldPos = this.yieldPos,
            oldAwaitPos = this.awaitPos,
            oldAwaitIdentPos = this.awaitIdentPos;
          this.initFunction(node);
          if (this.options.ecmaVersion >= 6) {
            node.generator = isGenerator;
          }
          if (this.options.ecmaVersion >= 8) {
            node.async = !!isAsync;
          }
          this.yieldPos = 0;
          this.awaitPos = 0;
          this.awaitIdentPos = 0;
          this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));
          this.expect(types.parenL);
          node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);
          this.checkYieldAwaitInDefaultParams();
          this.parseFunctionBody(node, false, true);
          this.yieldPos = oldYieldPos;
          this.awaitPos = oldAwaitPos;
          this.awaitIdentPos = oldAwaitIdentPos;
          return this.finishNode(node, "FunctionExpression");
        };
        pp$3.parseArrowExpression = function (node, params, isAsync) {
          var oldYieldPos = this.yieldPos,
            oldAwaitPos = this.awaitPos,
            oldAwaitIdentPos = this.awaitIdentPos;
          this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);
          this.initFunction(node);
          if (this.options.ecmaVersion >= 8) {
            node.async = !!isAsync;
          }
          this.yieldPos = 0;
          this.awaitPos = 0;
          this.awaitIdentPos = 0;
          node.params = this.toAssignableList(params, true);
          this.parseFunctionBody(node, true, false);
          this.yieldPos = oldYieldPos;
          this.awaitPos = oldAwaitPos;
          this.awaitIdentPos = oldAwaitIdentPos;
          return this.finishNode(node, "ArrowFunctionExpression");
        };
        pp$3.parseFunctionBody = function (node, isArrowFunction, isMethod) {
          var isExpression = isArrowFunction && this.type !== types.braceL;
          var oldStrict = this.strict,
            useStrict = false;
          if (isExpression) {
            node.body = this.parseMaybeAssign();
            node.expression = true;
            this.checkParams(node, false);
          } else {
            var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);
            if (!oldStrict || nonSimple) {
              useStrict = this.strictDirective(this.end);
              if (useStrict && nonSimple) {
                this.raiseRecoverable(node.start, "Illegal 'use strict' directive in function with non-simple parameter list");
              }
            }
            var oldLabels = this.labels;
            this.labels = [];
            if (useStrict) {
              this.strict = true;
            }
            this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));
            node.body = this.parseBlock(false);
            node.expression = false;
            this.adaptDirectivePrologue(node.body.body);
            this.labels = oldLabels;
          }
          this.exitScope();
          if (this.strict && node.id) {
            this.checkLVal(node.id, BIND_OUTSIDE);
          }
          this.strict = oldStrict;
        };
        pp$3.isSimpleParamList = function (params) {
          for (var i = 0, list = params; i < list.length; i += 1) {
            var param = list[i];
            if (param.type !== "Identifier") {
              return false;
            }
          }
          return true;
        };
        pp$3.checkParams = function (node, allowDuplicates) {
          var nameHash = {};
          for (var i = 0, list = node.params; i < list.length; i += 1) {
            var param = list[i];
            this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);
          }
        };
        pp$3.parseExprList = function (close, allowTrailingComma, allowEmpty, refDestructuringErrors) {
          var elts = [],
            first = true;
          while (!this.eat(close)) {
            if (!first) {
              this.expect(types.comma);
              if (allowTrailingComma && this.afterTrailingComma(close)) {
                break;
              }
            } else {
              first = false;
            }
            var elt = void 0;
            if (allowEmpty && this.type === types.comma) {
              elt = null;
            } else if (this.type === types.ellipsis) {
              elt = this.parseSpread(refDestructuringErrors);
              if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0) {
                refDestructuringErrors.trailingComma = this.start;
              }
            } else {
              elt = this.parseMaybeAssign(false, refDestructuringErrors);
            }
            elts.push(elt);
          }
          return elts;
        };
        pp$3.checkUnreserved = function (ref) {
          var start = ref.start;
          var end = ref.end;
          var name = ref.name;
          if (this.inGenerator && name === "yield") {
            this.raiseRecoverable(start, "Cannot use 'yield' as identifier inside a generator");
          }
          if (this.inAsync && name === "await") {
            this.raiseRecoverable(start, "Cannot use 'await' as identifier inside an async function");
          }
          if (this.keywords.test(name)) {
            this.raise(start, "Unexpected keyword '" + name + "'");
          }
          if (this.options.ecmaVersion < 6 && this.input.slice(start, end).indexOf("\\") !== -1) {
            return;
          }
          var re = this.strict ? this.reservedWordsStrict : this.reservedWords;
          if (re.test(name)) {
            if (!this.inAsync && name === "await") {
              this.raiseRecoverable(start, "Cannot use keyword 'await' outside an async function");
            }
            this.raiseRecoverable(start, "The keyword '" + name + "' is reserved");
          }
        };
        pp$3.parseIdent = function (liberal, isBinding) {
          var node = this.startNode();
          if (this.type === types.name) {
            node.name = this.value;
          } else if (this.type.keyword) {
            node.name = this.type.keyword;
            if ((node.name === "class" || node.name === "function") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {
              this.context.pop();
            }
          } else {
            this.unexpected();
          }
          this.next(!!liberal);
          this.finishNode(node, "Identifier");
          if (!liberal) {
            this.checkUnreserved(node);
            if (node.name === "await" && !this.awaitIdentPos) {
              this.awaitIdentPos = node.start;
            }
          }
          return node;
        };
        pp$3.parseYield = function (noIn) {
          if (!this.yieldPos) {
            this.yieldPos = this.start;
          }
          var node = this.startNode();
          this.next();
          if (this.type === types.semi || this.canInsertSemicolon() || this.type !== types.star && !this.type.startsExpr) {
            node.delegate = false;
            node.argument = null;
          } else {
            node.delegate = this.eat(types.star);
            node.argument = this.parseMaybeAssign(noIn);
          }
          return this.finishNode(node, "YieldExpression");
        };
        pp$3.parseAwait = function () {
          if (!this.awaitPos) {
            this.awaitPos = this.start;
          }
          var node = this.startNode();
          this.next();
          node.argument = this.parseMaybeUnary(null, false);
          return this.finishNode(node, "AwaitExpression");
        };
        var pp$4 = Parser.prototype;
        pp$4.raise = function (pos, message) {
          var loc = getLineInfo(this.input, pos);
          message += " (" + loc.line + ":" + loc.column + ")";
          var err = new SyntaxError(message);
          err.pos = pos;
          err.loc = loc;
          err.raisedAt = this.pos;
          throw err;
        };
        pp$4.raiseRecoverable = pp$4.raise;
        pp$4.curPosition = function () {
          if (this.options.locations) {
            return new Position(this.curLine, this.pos - this.lineStart);
          }
        };
        var pp$5 = Parser.prototype;
        var Scope = function Scope(flags) {
          this.flags = flags;
          this.var = [];
          this.lexical = [];
          this.functions = [];
        };
        pp$5.enterScope = function (flags) {
          this.scopeStack.push(new Scope(flags));
        };
        pp$5.exitScope = function () {
          this.scopeStack.pop();
        };
        pp$5.treatFunctionsAsVarInScope = function (scope) {
          return scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_TOP;
        };
        pp$5.declareName = function (name, bindingType, pos) {
          var redeclared = false;
          if (bindingType === BIND_LEXICAL) {
            var scope = this.currentScope();
            redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;
            scope.lexical.push(name);
            if (this.inModule && scope.flags & SCOPE_TOP) {
              delete this.undefinedExports[name];
            }
          } else if (bindingType === BIND_SIMPLE_CATCH) {
            var scope$1 = this.currentScope();
            scope$1.lexical.push(name);
          } else if (bindingType === BIND_FUNCTION) {
            var scope$2 = this.currentScope();
            if (this.treatFunctionsAsVar) {
              redeclared = scope$2.lexical.indexOf(name) > -1;
            } else {
              redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1;
            }
            scope$2.functions.push(name);
          } else {
            for (var i = this.scopeStack.length - 1; i >= 0; --i) {
              var scope$3 = this.scopeStack[i];
              if (scope$3.lexical.indexOf(name) > -1 && !(scope$3.flags & SCOPE_SIMPLE_CATCH && scope$3.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {
                redeclared = true;
                break;
              }
              scope$3.var.push(name);
              if (this.inModule && scope$3.flags & SCOPE_TOP) {
                delete this.undefinedExports[name];
              }
              if (scope$3.flags & SCOPE_VAR) {
                break;
              }
            }
          }
          if (redeclared) {
            this.raiseRecoverable(pos, "Identifier '" + name + "' has already been declared");
          }
        };
        pp$5.checkLocalExport = function (id) {
          if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1) {
            this.undefinedExports[id.name] = id;
          }
        };
        pp$5.currentScope = function () {
          return this.scopeStack[this.scopeStack.length - 1];
        };
        pp$5.currentVarScope = function () {
          for (var i = this.scopeStack.length - 1;; i--) {
            var scope = this.scopeStack[i];
            if (scope.flags & SCOPE_VAR) {
              return scope;
            }
          }
        };
        pp$5.currentThisScope = function () {
          for (var i = this.scopeStack.length - 1;; i--) {
            var scope = this.scopeStack[i];
            if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) {
              return scope;
            }
          }
        };
        var Node = function Node(parser, pos, loc) {
          this.type = "";
          this.start = pos;
          this.end = 0;
          if (parser.options.locations) {
            this.loc = new SourceLocation(parser, loc);
          }
          if (parser.options.directSourceFile) {
            this.sourceFile = parser.options.directSourceFile;
          }
          if (parser.options.ranges) {
            this.range = [pos, 0];
          }
        };
        var pp$6 = Parser.prototype;
        pp$6.startNode = function () {
          return new Node(this, this.start, this.startLoc);
        };
        pp$6.startNodeAt = function (pos, loc) {
          return new Node(this, pos, loc);
        };
        function finishNodeAt(node, type, pos, loc) {
          node.type = type;
          node.end = pos;
          if (this.options.locations) {
            node.loc.end = loc;
          }
          if (this.options.ranges) {
            node.range[1] = pos;
          }
          return node;
        }
        pp$6.finishNode = function (node, type) {
          return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc);
        };
        pp$6.finishNodeAt = function (node, type, pos, loc) {
          return finishNodeAt.call(this, node, type, pos, loc);
        };
        var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {
          this.token = token;
          this.isExpr = !!isExpr;
          this.preserveSpace = !!preserveSpace;
          this.override = override;
          this.generator = !!generator;
        };
        var types$1 = {
          b_stat: new TokContext("{", false),
          b_expr: new TokContext("{", true),
          b_tmpl: new TokContext("${", false),
          p_stat: new TokContext("(", false),
          p_expr: new TokContext("(", true),
          q_tmpl: new TokContext("`", true, true, function (p) {
            return p.tryReadTemplateToken();
          }),
          f_stat: new TokContext("function", false),
          f_expr: new TokContext("function", true),
          f_expr_gen: new TokContext("function", true, false, null, true),
          f_gen: new TokContext("function", false, false, null, true)
        };
        var pp$7 = Parser.prototype;
        pp$7.initialContext = function () {
          return [types$1.b_stat];
        };
        pp$7.braceIsBlock = function (prevType) {
          var parent = this.curContext();
          if (parent === types$1.f_expr || parent === types$1.f_stat) {
            return true;
          }
          if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr)) {
            return !parent.isExpr;
          }
          if (prevType === types._return || prevType === types.name && this.exprAllowed) {
            return lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
          }
          if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {
            return true;
          }
          if (prevType === types.braceL) {
            return parent === types$1.b_stat;
          }
          if (prevType === types._var || prevType === types._const || prevType === types.name) {
            return false;
          }
          return !this.exprAllowed;
        };
        pp$7.inGeneratorContext = function () {
          for (var i = this.context.length - 1; i >= 1; i--) {
            var context = this.context[i];
            if (context.token === "function") {
              return context.generator;
            }
          }
          return false;
        };
        pp$7.updateContext = function (prevType) {
          var update,
            type = this.type;
          if (type.keyword && prevType === types.dot) {
            this.exprAllowed = false;
          } else if (update = type.updateContext) {
            update.call(this, prevType);
          } else {
            this.exprAllowed = type.beforeExpr;
          }
        };
        types.parenR.updateContext = types.braceR.updateContext = function () {
          if (this.context.length === 1) {
            this.exprAllowed = true;
            return;
          }
          var out = this.context.pop();
          if (out === types$1.b_stat && this.curContext().token === "function") {
            out = this.context.pop();
          }
          this.exprAllowed = !out.isExpr;
        };
        types.braceL.updateContext = function (prevType) {
          this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);
          this.exprAllowed = true;
        };
        types.dollarBraceL.updateContext = function () {
          this.context.push(types$1.b_tmpl);
          this.exprAllowed = true;
        };
        types.parenL.updateContext = function (prevType) {
          var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;
          this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);
          this.exprAllowed = true;
        };
        types.incDec.updateContext = function () {};
        types._function.updateContext = types._class.updateContext = function (prevType) {
          if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {
            this.context.push(types$1.f_expr);
          } else {
            this.context.push(types$1.f_stat);
          }
          this.exprAllowed = false;
        };
        types.backQuote.updateContext = function () {
          if (this.curContext() === types$1.q_tmpl) {
            this.context.pop();
          } else {
            this.context.push(types$1.q_tmpl);
          }
          this.exprAllowed = false;
        };
        types.star.updateContext = function (prevType) {
          if (prevType === types._function) {
            var index = this.context.length - 1;
            if (this.context[index] === types$1.f_expr) {
              this.context[index] = types$1.f_expr_gen;
            } else {
              this.context[index] = types$1.f_gen;
            }
          }
          this.exprAllowed = true;
        };
        types.name.updateContext = function (prevType) {
          var allowed = false;
          if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {
            if (this.value === "of" && !this.exprAllowed || this.value === "yield" && this.inGeneratorContext()) {
              allowed = true;
            }
          }
          this.exprAllowed = allowed;
        };
        var ecma9BinaryProperties = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS";
        var ecma10BinaryProperties = ecma9BinaryProperties + " Extended_Pictographic";
        var ecma11BinaryProperties = ecma10BinaryProperties;
        var unicodeBinaryProperties = {
          9: ecma9BinaryProperties,
          10: ecma10BinaryProperties,
          11: ecma11BinaryProperties
        };
        var unicodeGeneralCategoryValues = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu";
        var ecma9ScriptValues = "Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb";
        var ecma10ScriptValues = ecma9ScriptValues + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd";
        var ecma11ScriptValues = ecma10ScriptValues + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho";
        var unicodeScriptValues = {
          9: ecma9ScriptValues,
          10: ecma10ScriptValues,
          11: ecma11ScriptValues
        };
        var data = {};
        function buildUnicodeData(ecmaVersion) {
          var d = data[ecmaVersion] = {
            binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + " " + unicodeGeneralCategoryValues),
            nonBinary: {
              General_Category: wordsRegexp(unicodeGeneralCategoryValues),
              Script: wordsRegexp(unicodeScriptValues[ecmaVersion])
            }
          };
          d.nonBinary.Script_Extensions = d.nonBinary.Script;
          d.nonBinary.gc = d.nonBinary.General_Category;
          d.nonBinary.sc = d.nonBinary.Script;
          d.nonBinary.scx = d.nonBinary.Script_Extensions;
        }
        buildUnicodeData(9);
        buildUnicodeData(10);
        buildUnicodeData(11);
        var pp$8 = Parser.prototype;
        var RegExpValidationState = function RegExpValidationState(parser) {
          this.parser = parser;
          this.validFlags = "gim" + (parser.options.ecmaVersion >= 6 ? "uy" : "") + (parser.options.ecmaVersion >= 9 ? "s" : "");
          this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];
          this.source = "";
          this.flags = "";
          this.start = 0;
          this.switchU = false;
          this.switchN = false;
          this.pos = 0;
          this.lastIntValue = 0;
          this.lastStringValue = "";
          this.lastAssertionIsQuantifiable = false;
          this.numCapturingParens = 0;
          this.maxBackReference = 0;
          this.groupNames = [];
          this.backReferenceNames = [];
        };
        RegExpValidationState.prototype.reset = function reset(start, pattern, flags) {
          var unicode = flags.indexOf("u") !== -1;
          this.start = start | 0;
          this.source = pattern + "";
          this.flags = flags;
          this.switchU = unicode && this.parser.options.ecmaVersion >= 6;
          this.switchN = unicode && this.parser.options.ecmaVersion >= 9;
        };
        RegExpValidationState.prototype.raise = function raise(message) {
          this.parser.raiseRecoverable(this.start, "Invalid regular expression: /" + this.source + "/: " + message);
        };
        RegExpValidationState.prototype.at = function at(i) {
          var s = this.source;
          var l = s.length;
          if (i >= l) {
            return -1;
          }
          var c = s.charCodeAt(i);
          if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {
            return c;
          }
          var next = s.charCodeAt(i + 1);
          return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c;
        };
        RegExpValidationState.prototype.nextIndex = function nextIndex(i) {
          var s = this.source;
          var l = s.length;
          if (i >= l) {
            return l;
          }
          var c = s.charCodeAt(i),
            next;
          if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l || (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {
            return i + 1;
          }
          return i + 2;
        };
        RegExpValidationState.prototype.current = function current() {
          return this.at(this.pos);
        };
        RegExpValidationState.prototype.lookahead = function lookahead() {
          return this.at(this.nextIndex(this.pos));
        };
        RegExpValidationState.prototype.advance = function advance() {
          this.pos = this.nextIndex(this.pos);
        };
        RegExpValidationState.prototype.eat = function eat(ch) {
          if (this.current() === ch) {
            this.advance();
            return true;
          }
          return false;
        };
        function codePointToString(ch) {
          if (ch <= 0xFFFF) {
            return String.fromCharCode(ch);
          }
          ch -= 0x10000;
          return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00);
        }
        pp$8.validateRegExpFlags = function (state) {
          var validFlags = state.validFlags;
          var flags = state.flags;
          for (var i = 0; i < flags.length; i++) {
            var flag = flags.charAt(i);
            if (validFlags.indexOf(flag) === -1) {
              this.raise(state.start, "Invalid regular expression flag");
            }
            if (flags.indexOf(flag, i + 1) > -1) {
              this.raise(state.start, "Duplicate regular expression flag");
            }
          }
        };
        pp$8.validateRegExpPattern = function (state) {
          this.regexp_pattern(state);
          if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {
            state.switchN = true;
            this.regexp_pattern(state);
          }
        };
        pp$8.regexp_pattern = function (state) {
          state.pos = 0;
          state.lastIntValue = 0;
          state.lastStringValue = "";
          state.lastAssertionIsQuantifiable = false;
          state.numCapturingParens = 0;
          state.maxBackReference = 0;
          state.groupNames.length = 0;
          state.backReferenceNames.length = 0;
          this.regexp_disjunction(state);
          if (state.pos !== state.source.length) {
            if (state.eat(0x29)) {
              state.raise("Unmatched ')'");
            }
            if (state.eat(0x5D) || state.eat(0x7D)) {
              state.raise("Lone quantifier brackets");
            }
          }
          if (state.maxBackReference > state.numCapturingParens) {
            state.raise("Invalid escape");
          }
          for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {
            var name = list[i];
            if (state.groupNames.indexOf(name) === -1) {
              state.raise("Invalid named capture referenced");
            }
          }
        };
        pp$8.regexp_disjunction = function (state) {
          this.regexp_alternative(state);
          while (state.eat(0x7C)) {
            this.regexp_alternative(state);
          }
          if (this.regexp_eatQuantifier(state, true)) {
            state.raise("Nothing to repeat");
          }
          if (state.eat(0x7B)) {
            state.raise("Lone quantifier brackets");
          }
        };
        pp$8.regexp_alternative = function (state) {
          while (state.pos < state.source.length && this.regexp_eatTerm(state)) {}
        };
        pp$8.regexp_eatTerm = function (state) {
          if (this.regexp_eatAssertion(state)) {
            if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {
              if (state.switchU) {
                state.raise("Invalid quantifier");
              }
            }
            return true;
          }
          if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {
            this.regexp_eatQuantifier(state);
            return true;
          }
          return false;
        };
        pp$8.regexp_eatAssertion = function (state) {
          var start = state.pos;
          state.lastAssertionIsQuantifiable = false;
          if (state.eat(0x5E) || state.eat(0x24)) {
            return true;
          }
          if (state.eat(0x5C)) {
            if (state.eat(0x42) || state.eat(0x62)) {
              return true;
            }
            state.pos = start;
          }
          if (state.eat(0x28) && state.eat(0x3F)) {
            var lookbehind = false;
            if (this.options.ecmaVersion >= 9) {
              lookbehind = state.eat(0x3C);
            }
            if (state.eat(0x3D) || state.eat(0x21)) {
              this.regexp_disjunction(state);
              if (!state.eat(0x29)) {
                state.raise("Unterminated group");
              }
              state.lastAssertionIsQuantifiable = !lookbehind;
              return true;
            }
          }
          state.pos = start;
          return false;
        };
        pp$8.regexp_eatQuantifier = function (state, noError) {
          if (noError === void 0) noError = false;
          if (this.regexp_eatQuantifierPrefix(state, noError)) {
            state.eat(0x3F);
            return true;
          }
          return false;
        };
        pp$8.regexp_eatQuantifierPrefix = function (state, noError) {
          return state.eat(0x2A) || state.eat(0x2B) || state.eat(0x3F) || this.regexp_eatBracedQuantifier(state, noError);
        };
        pp$8.regexp_eatBracedQuantifier = function (state, noError) {
          var start = state.pos;
          if (state.eat(0x7B)) {
            var min = 0,
              max = -1;
            if (this.regexp_eatDecimalDigits(state)) {
              min = state.lastIntValue;
              if (state.eat(0x2C) && this.regexp_eatDecimalDigits(state)) {
                max = state.lastIntValue;
              }
              if (state.eat(0x7D)) {
                if (max !== -1 && max < min && !noError) {
                  state.raise("numbers out of order in {} quantifier");
                }
                return true;
              }
            }
            if (state.switchU && !noError) {
              state.raise("Incomplete quantifier");
            }
            state.pos = start;
          }
          return false;
        };
        pp$8.regexp_eatAtom = function (state) {
          return this.regexp_eatPatternCharacters(state) || state.eat(0x2E) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state);
        };
        pp$8.regexp_eatReverseSolidusAtomEscape = function (state) {
          var start = state.pos;
          if (state.eat(0x5C)) {
            if (this.regexp_eatAtomEscape(state)) {
              return true;
            }
            state.pos = start;
          }
          return false;
        };
        pp$8.regexp_eatUncapturingGroup = function (state) {
          var start = state.pos;
          if (state.eat(0x28)) {
            if (state.eat(0x3F) && state.eat(0x3A)) {
              this.regexp_disjunction(state);
              if (state.eat(0x29)) {
                return true;
              }
              state.raise("Unterminated group");
            }
            state.pos = start;
          }
          return false;
        };
        pp$8.regexp_eatCapturingGroup = function (state) {
          if (state.eat(0x28)) {
            if (this.options.ecmaVersion >= 9) {
              this.regexp_groupSpecifier(state);
            } else if (state.current() === 0x3F) {
              state.raise("Invalid group");
            }
            this.regexp_disjunction(state);
            if (state.eat(0x29)) {
              state.numCapturingParens += 1;
              return true;
            }
            state.raise("Unterminated group");
          }
          return false;
        };
        pp$8.regexp_eatExtendedAtom = function (state) {
          return state.eat(0x2E) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state) || this.regexp_eatInvalidBracedQuantifier(state) || this.regexp_eatExtendedPatternCharacter(state);
        };
        pp$8.regexp_eatInvalidBracedQuantifier = function (state) {
          if (this.regexp_eatBracedQuantifier(state, true)) {
            state.raise("Nothing to repeat");
          }
          return false;
        };
        pp$8.regexp_eatSyntaxCharacter = function (state) {
          var ch = state.current();
          if (isSyntaxCharacter(ch)) {
            state.lastIntValue = ch;
            state.advance();
            return true;
          }
          return false;
        };
        function isSyntaxCharacter(ch) {
          return ch === 0x24 || ch >= 0x28 && ch <= 0x2B || ch === 0x2E || ch === 0x3F || ch >= 0x5B && ch <= 0x5E || ch >= 0x7B && ch <= 0x7D;
        }
        pp$8.regexp_eatPatternCharacters = function (state) {
          var start = state.pos;
          var ch = 0;
          while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {
            state.advance();
          }
          return state.pos !== start;
        };
        pp$8.regexp_eatExtendedPatternCharacter = function (state) {
          var ch = state.current();
          if (ch !== -1 && ch !== 0x24 && !(ch >= 0x28 && ch <= 0x2B) && ch !== 0x2E && ch !== 0x3F && ch !== 0x5B && ch !== 0x5E && ch !== 0x7C) {
            state.advance();
            return true;
          }
          return false;
        };
        pp$8.regexp_groupSpecifier = function (state) {
          if (state.eat(0x3F)) {
            if (this.regexp_eatGroupName(state)) {
              if (state.groupNames.indexOf(state.lastStringValue) !== -1) {
                state.raise("Duplicate capture group name");
              }
              state.groupNames.push(state.lastStringValue);
              return;
            }
            state.raise("Invalid group");
          }
        };
        pp$8.regexp_eatGroupName = function (state) {
          state.lastStringValue = "";
          if (state.eat(0x3C)) {
            if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E)) {
              return true;
            }
            state.raise("Invalid capture group name");
          }
          return false;
        };
        pp$8.regexp_eatRegExpIdentifierName = function (state) {
          state.lastStringValue = "";
          if (this.regexp_eatRegExpIdentifierStart(state)) {
            state.lastStringValue += codePointToString(state.lastIntValue);
            while (this.regexp_eatRegExpIdentifierPart(state)) {
              state.lastStringValue += codePointToString(state.lastIntValue);
            }
            return true;
          }
          return false;
        };
        pp$8.regexp_eatRegExpIdentifierStart = function (state) {
          var start = state.pos;
          var ch = state.current();
          state.advance();
          if (ch === 0x5C && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {
            ch = state.lastIntValue;
          }
          if (isRegExpIdentifierStart(ch)) {
            state.lastIntValue = ch;
            return true;
          }
          state.pos = start;
          return false;
        };
        function isRegExpIdentifierStart(ch) {
          return isIdentifierStart(ch, true) || ch === 0x24 || ch === 0x5F;
        }
        pp$8.regexp_eatRegExpIdentifierPart = function (state) {
          var start = state.pos;
          var ch = state.current();
          state.advance();
          if (ch === 0x5C && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {
            ch = state.lastIntValue;
          }
          if (isRegExpIdentifierPart(ch)) {
            state.lastIntValue = ch;
            return true;
          }
          state.pos = start;
          return false;
        };
        function isRegExpIdentifierPart(ch) {
          return isIdentifierChar(ch, true) || ch === 0x24 || ch === 0x5F || ch === 0x200C || ch === 0x200D;
        }
        pp$8.regexp_eatAtomEscape = function (state) {
          if (this.regexp_eatBackReference(state) || this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state) || state.switchN && this.regexp_eatKGroupName(state)) {
            return true;
          }
          if (state.switchU) {
            if (state.current() === 0x63) {
              state.raise("Invalid unicode escape");
            }
            state.raise("Invalid escape");
          }
          return false;
        };
        pp$8.regexp_eatBackReference = function (state) {
          var start = state.pos;
          if (this.regexp_eatDecimalEscape(state)) {
            var n = state.lastIntValue;
            if (state.switchU) {
              if (n > state.maxBackReference) {
                state.maxBackReference = n;
              }
              return true;
            }
            if (n <= state.numCapturingParens) {
              return true;
            }
            state.pos = start;
          }
          return false;
        };
        pp$8.regexp_eatKGroupName = function (state) {
          if (state.eat(0x6B)) {
            if (this.regexp_eatGroupName(state)) {
              state.backReferenceNames.push(state.lastStringValue);
              return true;
            }
            state.raise("Invalid named reference");
          }
          return false;
        };
        pp$8.regexp_eatCharacterEscape = function (state) {
          return this.regexp_eatControlEscape(state) || this.regexp_eatCControlLetter(state) || this.regexp_eatZero(state) || this.regexp_eatHexEscapeSequence(state) || this.regexp_eatRegExpUnicodeEscapeSequence(state) || !state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state) || this.regexp_eatIdentityEscape(state);
        };
        pp$8.regexp_eatCControlLetter = function (state) {
          var start = state.pos;
          if (state.eat(0x63)) {
            if (this.regexp_eatControlLetter(state)) {
              return true;
            }
            state.pos = start;
          }
          return false;
        };
        pp$8.regexp_eatZero = function (state) {
          if (state.current() === 0x30 && !isDecimalDigit(state.lookahead())) {
            state.lastIntValue = 0;
            state.advance();
            return true;
          }
          return false;
        };
        pp$8.regexp_eatControlEscape = function (state) {
          var ch = state.current();
          if (ch === 0x74) {
            state.lastIntValue = 0x09;
            state.advance();
            return true;
          }
          if (ch === 0x6E) {
            state.lastIntValue = 0x0A;
            state.advance();
            return true;
          }
          if (ch === 0x76) {
            state.lastIntValue = 0x0B;
            state.advance();
            return true;
          }
          if (ch === 0x66) {
            state.lastIntValue = 0x0C;
            state.advance();
            return true;
          }
          if (ch === 0x72) {
            state.lastIntValue = 0x0D;
            state.advance();
            return true;
          }
          return false;
        };
        pp$8.regexp_eatControlLetter = function (state) {
          var ch = state.current();
          if (isControlLetter(ch)) {
            state.lastIntValue = ch % 0x20;
            state.advance();
            return true;
          }
          return false;
        };
        function isControlLetter(ch) {
          return ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A;
        }
        pp$8.regexp_eatRegExpUnicodeEscapeSequence = function (state) {
          var start = state.pos;
          if (state.eat(0x75)) {
            if (this.regexp_eatFixedHexDigits(state, 4)) {
              var lead = state.lastIntValue;
              if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {
                var leadSurrogateEnd = state.pos;
                if (state.eat(0x5C) && state.eat(0x75) && this.regexp_eatFixedHexDigits(state, 4)) {
                  var trail = state.lastIntValue;
                  if (trail >= 0xDC00 && trail <= 0xDFFF) {
                    state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;
                    return true;
                  }
                }
                state.pos = leadSurrogateEnd;
                state.lastIntValue = lead;
              }
              return true;
            }
            if (state.switchU && state.eat(0x7B) && this.regexp_eatHexDigits(state) && state.eat(0x7D) && isValidUnicode(state.lastIntValue)) {
              return true;
            }
            if (state.switchU) {
              state.raise("Invalid unicode escape");
            }
            state.pos = start;
          }
          return false;
        };
        function isValidUnicode(ch) {
          return ch >= 0 && ch <= 0x10FFFF;
        }
        pp$8.regexp_eatIdentityEscape = function (state) {
          if (state.switchU) {
            if (this.regexp_eatSyntaxCharacter(state)) {
              return true;
            }
            if (state.eat(0x2F)) {
              state.lastIntValue = 0x2F;
              return true;
            }
            return false;
          }
          var ch = state.current();
          if (ch !== 0x63 && (!state.switchN || ch !== 0x6B)) {
            state.lastIntValue = ch;
            state.advance();
            return true;
          }
          return false;
        };
        pp$8.regexp_eatDecimalEscape = function (state) {
          state.lastIntValue = 0;
          var ch = state.current();
          if (ch >= 0x31 && ch <= 0x39) {
            do {
              state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30);
              state.advance();
            } while ((ch = state.current()) >= 0x30 && ch <= 0x39);
            return true;
          }
          return false;
        };
        pp$8.regexp_eatCharacterClassEscape = function (state) {
          var ch = state.current();
          if (isCharacterClassEscape(ch)) {
            state.lastIntValue = -1;
            state.advance();
            return true;
          }
          if (state.switchU && this.options.ecmaVersion >= 9 && (ch === 0x50 || ch === 0x70)) {
            state.lastIntValue = -1;
            state.advance();
            if (state.eat(0x7B) && this.regexp_eatUnicodePropertyValueExpression(state) && state.eat(0x7D)) {
              return true;
            }
            state.raise("Invalid property name");
          }
          return false;
        };
        function isCharacterClassEscape(ch) {
          return ch === 0x64 || ch === 0x44 || ch === 0x73 || ch === 0x53 || ch === 0x77 || ch === 0x57;
        }
        pp$8.regexp_eatUnicodePropertyValueExpression = function (state) {
          var start = state.pos;
          if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D)) {
            var name = state.lastStringValue;
            if (this.regexp_eatUnicodePropertyValue(state)) {
              var value = state.lastStringValue;
              this.regexp_validateUnicodePropertyNameAndValue(state, name, value);
              return true;
            }
          }
          state.pos = start;
          if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {
            var nameOrValue = state.lastStringValue;
            this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);
            return true;
          }
          return false;
        };
        pp$8.regexp_validateUnicodePropertyNameAndValue = function (state, name, value) {
          if (!has(state.unicodeProperties.nonBinary, name)) {
            state.raise("Invalid property name");
          }
          if (!state.unicodeProperties.nonBinary[name].test(value)) {
            state.raise("Invalid property value");
          }
        };
        pp$8.regexp_validateUnicodePropertyNameOrValue = function (state, nameOrValue) {
          if (!state.unicodeProperties.binary.test(nameOrValue)) {
            state.raise("Invalid property name");
          }
        };
        pp$8.regexp_eatUnicodePropertyName = function (state) {
          var ch = 0;
          state.lastStringValue = "";
          while (isUnicodePropertyNameCharacter(ch = state.current())) {
            state.lastStringValue += codePointToString(ch);
            state.advance();
          }
          return state.lastStringValue !== "";
        };
        function isUnicodePropertyNameCharacter(ch) {
          return isControlLetter(ch) || ch === 0x5F;
        }
        pp$8.regexp_eatUnicodePropertyValue = function (state) {
          var ch = 0;
          state.lastStringValue = "";
          while (isUnicodePropertyValueCharacter(ch = state.current())) {
            state.lastStringValue += codePointToString(ch);
            state.advance();
          }
          return state.lastStringValue !== "";
        };
        function isUnicodePropertyValueCharacter(ch) {
          return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch);
        }
        pp$8.regexp_eatLoneUnicodePropertyNameOrValue = function (state) {
          return this.regexp_eatUnicodePropertyValue(state);
        };
        pp$8.regexp_eatCharacterClass = function (state) {
          if (state.eat(0x5B)) {
            state.eat(0x5E);
            this.regexp_classRanges(state);
            if (state.eat(0x5D)) {
              return true;
            }
            state.raise("Unterminated character class");
          }
          return false;
        };
        pp$8.regexp_classRanges = function (state) {
          while (this.regexp_eatClassAtom(state)) {
            var left = state.lastIntValue;
            if (state.eat(0x2D) && this.regexp_eatClassAtom(state)) {
              var right = state.lastIntValue;
              if (state.switchU && (left === -1 || right === -1)) {
                state.raise("Invalid character class");
              }
              if (left !== -1 && right !== -1 && left > right) {
                state.raise("Range out of order in character class");
              }
            }
          }
        };
        pp$8.regexp_eatClassAtom = function (state) {
          var start = state.pos;
          if (state.eat(0x5C)) {
            if (this.regexp_eatClassEscape(state)) {
              return true;
            }
            if (state.switchU) {
              var ch$1 = state.current();
              if (ch$1 === 0x63 || isOctalDigit(ch$1)) {
                state.raise("Invalid class escape");
              }
              state.raise("Invalid escape");
            }
            state.pos = start;
          }
          var ch = state.current();
          if (ch !== 0x5D) {
            state.lastIntValue = ch;
            state.advance();
            return true;
          }
          return false;
        };
        pp$8.regexp_eatClassEscape = function (state) {
          var start = state.pos;
          if (state.eat(0x62)) {
            state.lastIntValue = 0x08;
            return true;
          }
          if (state.switchU && state.eat(0x2D)) {
            state.lastIntValue = 0x2D;
            return true;
          }
          if (!state.switchU && state.eat(0x63)) {
            if (this.regexp_eatClassControlLetter(state)) {
              return true;
            }
            state.pos = start;
          }
          return this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state);
        };
        pp$8.regexp_eatClassControlLetter = function (state) {
          var ch = state.current();
          if (isDecimalDigit(ch) || ch === 0x5F) {
            state.lastIntValue = ch % 0x20;
            state.advance();
            return true;
          }
          return false;
        };
        pp$8.regexp_eatHexEscapeSequence = function (state) {
          var start = state.pos;
          if (state.eat(0x78)) {
            if (this.regexp_eatFixedHexDigits(state, 2)) {
              return true;
            }
            if (state.switchU) {
              state.raise("Invalid escape");
            }
            state.pos = start;
          }
          return false;
        };
        pp$8.regexp_eatDecimalDigits = function (state) {
          var start = state.pos;
          var ch = 0;
          state.lastIntValue = 0;
          while (isDecimalDigit(ch = state.current())) {
            state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30);
            state.advance();
          }
          return state.pos !== start;
        };
        function isDecimalDigit(ch) {
          return ch >= 0x30 && ch <= 0x39;
        }
        pp$8.regexp_eatHexDigits = function (state) {
          var start = state.pos;
          var ch = 0;
          state.lastIntValue = 0;
          while (isHexDigit(ch = state.current())) {
            state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
            state.advance();
          }
          return state.pos !== start;
        };
        function isHexDigit(ch) {
          return ch >= 0x30 && ch <= 0x39 || ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66;
        }
        function hexToInt(ch) {
          if (ch >= 0x41 && ch <= 0x46) {
            return 10 + (ch - 0x41);
          }
          if (ch >= 0x61 && ch <= 0x66) {
            return 10 + (ch - 0x61);
          }
          return ch - 0x30;
        }
        pp$8.regexp_eatLegacyOctalEscapeSequence = function (state) {
          if (this.regexp_eatOctalDigit(state)) {
            var n1 = state.lastIntValue;
            if (this.regexp_eatOctalDigit(state)) {
              var n2 = state.lastIntValue;
              if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {
                state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;
              } else {
                state.lastIntValue = n1 * 8 + n2;
              }
            } else {
              state.lastIntValue = n1;
            }
            return true;
          }
          return false;
        };
        pp$8.regexp_eatOctalDigit = function (state) {
          var ch = state.current();
          if (isOctalDigit(ch)) {
            state.lastIntValue = ch - 0x30;
            state.advance();
            return true;
          }
          state.lastIntValue = 0;
          return false;
        };
        function isOctalDigit(ch) {
          return ch >= 0x30 && ch <= 0x37;
        }
        pp$8.regexp_eatFixedHexDigits = function (state, length) {
          var start = state.pos;
          state.lastIntValue = 0;
          for (var i = 0; i < length; ++i) {
            var ch = state.current();
            if (!isHexDigit(ch)) {
              state.pos = start;
              return false;
            }
            state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
            state.advance();
          }
          return true;
        };
        var Token = function Token(p) {
          this.type = p.type;
          this.value = p.value;
          this.start = p.start;
          this.end = p.end;
          if (p.options.locations) {
            this.loc = new SourceLocation(p, p.startLoc, p.endLoc);
          }
          if (p.options.ranges) {
            this.range = [p.start, p.end];
          }
        };
        var pp$9 = Parser.prototype;
        pp$9.next = function (ignoreEscapeSequenceInKeyword) {
          if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc) {
            this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword);
          }
          if (this.options.onToken) {
            this.options.onToken(new Token(this));
          }
          this.lastTokEnd = this.end;
          this.lastTokStart = this.start;
          this.lastTokEndLoc = this.endLoc;
          this.lastTokStartLoc = this.startLoc;
          this.nextToken();
        };
        pp$9.getToken = function () {
          this.next();
          return new Token(this);
        };
        if (typeof Symbol !== "undefined") {
          pp$9[Symbol.iterator] = function () {
            var this$1 = this;
            return {
              next: function next() {
                var token = this$1.getToken();
                return {
                  done: token.type === types.eof,
                  value: token
                };
              }
            };
          };
        }
        pp$9.curContext = function () {
          return this.context[this.context.length - 1];
        };
        pp$9.nextToken = function () {
          var curContext = this.curContext();
          if (!curContext || !curContext.preserveSpace) {
            this.skipSpace();
          }
          this.start = this.pos;
          if (this.options.locations) {
            this.startLoc = this.curPosition();
          }
          if (this.pos >= this.input.length) {
            return this.finishToken(types.eof);
          }
          if (curContext.override) {
            return curContext.override(this);
          } else {
            this.readToken(this.fullCharCodeAtPos());
          }
        };
        pp$9.readToken = function (code) {
          if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92) {
            return this.readWord();
          }
          return this.getTokenFromCode(code);
        };
        pp$9.fullCharCodeAtPos = function () {
          var code = this.input.charCodeAt(this.pos);
          if (code <= 0xd7ff || code >= 0xe000) {
            return code;
          }
          var next = this.input.charCodeAt(this.pos + 1);
          return (code << 10) + next - 0x35fdc00;
        };
        pp$9.skipBlockComment = function () {
          var startLoc = this.options.onComment && this.curPosition();
          var start = this.pos,
            end = this.input.indexOf("*/", this.pos += 2);
          if (end === -1) {
            this.raise(this.pos - 2, "Unterminated comment");
          }
          this.pos = end + 2;
          if (this.options.locations) {
            lineBreakG.lastIndex = start;
            var match;
            while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {
              ++this.curLine;
              this.lineStart = match.index + match[0].length;
            }
          }
          if (this.options.onComment) {
            this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos, startLoc, this.curPosition());
          }
        };
        pp$9.skipLineComment = function (startSkip) {
          var start = this.pos;
          var startLoc = this.options.onComment && this.curPosition();
          var ch = this.input.charCodeAt(this.pos += startSkip);
          while (this.pos < this.input.length && !isNewLine(ch)) {
            ch = this.input.charCodeAt(++this.pos);
          }
          if (this.options.onComment) {
            this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos, startLoc, this.curPosition());
          }
        };
        pp$9.skipSpace = function () {
          loop: while (this.pos < this.input.length) {
            var ch = this.input.charCodeAt(this.pos);
            switch (ch) {
              case 32:
              case 160:
                ++this.pos;
                break;
              case 13:
                if (this.input.charCodeAt(this.pos + 1) === 10) {
                  ++this.pos;
                }
              case 10:
              case 8232:
              case 8233:
                ++this.pos;
                if (this.options.locations) {
                  ++this.curLine;
                  this.lineStart = this.pos;
                }
                break;
              case 47:
                switch (this.input.charCodeAt(this.pos + 1)) {
                  case 42:
                    this.skipBlockComment();
                    break;
                  case 47:
                    this.skipLineComment(2);
                    break;
                  default:
                    break loop;
                }
                break;
              default:
                if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
                  ++this.pos;
                } else {
                  break loop;
                }
            }
          }
        };
        pp$9.finishToken = function (type, val) {
          this.end = this.pos;
          if (this.options.locations) {
            this.endLoc = this.curPosition();
          }
          var prevType = this.type;
          this.type = type;
          this.value = val;
          this.updateContext(prevType);
        };
        pp$9.readToken_dot = function () {
          var next = this.input.charCodeAt(this.pos + 1);
          if (next >= 48 && next <= 57) {
            return this.readNumber(true);
          }
          var next2 = this.input.charCodeAt(this.pos + 2);
          if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {
            this.pos += 3;
            return this.finishToken(types.ellipsis);
          } else {
            ++this.pos;
            return this.finishToken(types.dot);
          }
        };
        pp$9.readToken_slash = function () {
          var next = this.input.charCodeAt(this.pos + 1);
          if (this.exprAllowed) {
            ++this.pos;
            return this.readRegexp();
          }
          if (next === 61) {
            return this.finishOp(types.assign, 2);
          }
          return this.finishOp(types.slash, 1);
        };
        pp$9.readToken_mult_modulo_exp = function (code) {
          var next = this.input.charCodeAt(this.pos + 1);
          var size = 1;
          var tokentype = code === 42 ? types.star : types.modulo;
          if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {
            ++size;
            tokentype = types.starstar;
            next = this.input.charCodeAt(this.pos + 2);
          }
          if (next === 61) {
            return this.finishOp(types.assign, size + 1);
          }
          return this.finishOp(tokentype, size);
        };
        pp$9.readToken_pipe_amp = function (code) {
          var next = this.input.charCodeAt(this.pos + 1);
          if (next === code) {
            return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);
          }
          if (next === 61) {
            return this.finishOp(types.assign, 2);
          }
          return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);
        };
        pp$9.readToken_caret = function () {
          var next = this.input.charCodeAt(this.pos + 1);
          if (next === 61) {
            return this.finishOp(types.assign, 2);
          }
          return this.finishOp(types.bitwiseXOR, 1);
        };
        pp$9.readToken_plus_min = function (code) {
          var next = this.input.charCodeAt(this.pos + 1);
          if (next === code) {
            if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {
              this.skipLineComment(3);
              this.skipSpace();
              return this.nextToken();
            }
            return this.finishOp(types.incDec, 2);
          }
          if (next === 61) {
            return this.finishOp(types.assign, 2);
          }
          return this.finishOp(types.plusMin, 1);
        };
        pp$9.readToken_lt_gt = function (code) {
          var next = this.input.charCodeAt(this.pos + 1);
          var size = 1;
          if (next === code) {
            size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;
            if (this.input.charCodeAt(this.pos + size) === 61) {
              return this.finishOp(types.assign, size + 1);
            }
            return this.finishOp(types.bitShift, size);
          }
          if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45) {
            this.skipLineComment(4);
            this.skipSpace();
            return this.nextToken();
          }
          if (next === 61) {
            size = 2;
          }
          return this.finishOp(types.relational, size);
        };
        pp$9.readToken_eq_excl = function (code) {
          var next = this.input.charCodeAt(this.pos + 1);
          if (next === 61) {
            return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2);
          }
          if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) {
            this.pos += 2;
            return this.finishToken(types.arrow);
          }
          return this.finishOp(code === 61 ? types.eq : types.prefix, 1);
        };
        pp$9.getTokenFromCode = function (code) {
          switch (code) {
            case 46:
              return this.readToken_dot();
            case 40:
              ++this.pos;
              return this.finishToken(types.parenL);
            case 41:
              ++this.pos;
              return this.finishToken(types.parenR);
            case 59:
              ++this.pos;
              return this.finishToken(types.semi);
            case 44:
              ++this.pos;
              return this.finishToken(types.comma);
            case 91:
              ++this.pos;
              return this.finishToken(types.bracketL);
            case 93:
              ++this.pos;
              return this.finishToken(types.bracketR);
            case 123:
              ++this.pos;
              return this.finishToken(types.braceL);
            case 125:
              ++this.pos;
              return this.finishToken(types.braceR);
            case 58:
              ++this.pos;
              return this.finishToken(types.colon);
            case 63:
              ++this.pos;
              return this.finishToken(types.question);
            case 96:
              if (this.options.ecmaVersion < 6) {
                break;
              }
              ++this.pos;
              return this.finishToken(types.backQuote);
            case 48:
              var next = this.input.charCodeAt(this.pos + 1);
              if (next === 120 || next === 88) {
                return this.readRadixNumber(16);
              }
              if (this.options.ecmaVersion >= 6) {
                if (next === 111 || next === 79) {
                  return this.readRadixNumber(8);
                }
                if (next === 98 || next === 66) {
                  return this.readRadixNumber(2);
                }
              }
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
              return this.readNumber(false);
            case 34:
            case 39:
              return this.readString(code);
            case 47:
              return this.readToken_slash();
            case 37:
            case 42:
              return this.readToken_mult_modulo_exp(code);
            case 124:
            case 38:
              return this.readToken_pipe_amp(code);
            case 94:
              return this.readToken_caret();
            case 43:
            case 45:
              return this.readToken_plus_min(code);
            case 60:
            case 62:
              return this.readToken_lt_gt(code);
            case 61:
            case 33:
              return this.readToken_eq_excl(code);
            case 126:
              return this.finishOp(types.prefix, 1);
          }
          this.raise(this.pos, "Unexpected character '" + codePointToString$1(code) + "'");
        };
        pp$9.finishOp = function (type, size) {
          var str = this.input.slice(this.pos, this.pos + size);
          this.pos += size;
          return this.finishToken(type, str);
        };
        pp$9.readRegexp = function () {
          var escaped,
            inClass,
            start = this.pos;
          for (;;) {
            if (this.pos >= this.input.length) {
              this.raise(start, "Unterminated regular expression");
            }
            var ch = this.input.charAt(this.pos);
            if (lineBreak.test(ch)) {
              this.raise(start, "Unterminated regular expression");
            }
            if (!escaped) {
              if (ch === "[") {
                inClass = true;
              } else if (ch === "]" && inClass) {
                inClass = false;
              } else if (ch === "/" && !inClass) {
                break;
              }
              escaped = ch === "\\";
            } else {
              escaped = false;
            }
            ++this.pos;
          }
          var pattern = this.input.slice(start, this.pos);
          ++this.pos;
          var flagsStart = this.pos;
          var flags = this.readWord1();
          if (this.containsEsc) {
            this.unexpected(flagsStart);
          }
          var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));
          state.reset(start, pattern, flags);
          this.validateRegExpFlags(state);
          this.validateRegExpPattern(state);
          var value = null;
          try {
            value = new RegExp(pattern, flags);
          } catch (e) {}
          return this.finishToken(types.regexp, {
            pattern: pattern,
            flags: flags,
            value: value
          });
        };
        pp$9.readInt = function (radix, len) {
          var start = this.pos,
            total = 0;
          for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {
            var code = this.input.charCodeAt(this.pos),
              val = void 0;
            if (code >= 97) {
              val = code - 97 + 10;
            } else if (code >= 65) {
              val = code - 65 + 10;
            } else if (code >= 48 && code <= 57) {
              val = code - 48;
            } else {
              val = Infinity;
            }
            if (val >= radix) {
              break;
            }
            ++this.pos;
            total = total * radix + val;
          }
          if (this.pos === start || len != null && this.pos - start !== len) {
            return null;
          }
          return total;
        };
        pp$9.readRadixNumber = function (radix) {
          var start = this.pos;
          this.pos += 2;
          var val = this.readInt(radix);
          if (val == null) {
            this.raise(this.start + 2, "Expected number in radix " + radix);
          }
          if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {
            val = typeof BigInt !== "undefined" ? BigInt(this.input.slice(start, this.pos)) : null;
            ++this.pos;
          } else if (isIdentifierStart(this.fullCharCodeAtPos())) {
            this.raise(this.pos, "Identifier directly after number");
          }
          return this.finishToken(types.num, val);
        };
        pp$9.readNumber = function (startsWithDot) {
          var start = this.pos;
          if (!startsWithDot && this.readInt(10) === null) {
            this.raise(start, "Invalid number");
          }
          var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;
          if (octal && this.strict) {
            this.raise(start, "Invalid number");
          }
          var next = this.input.charCodeAt(this.pos);
          if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {
            var str$1 = this.input.slice(start, this.pos);
            var val$1 = typeof BigInt !== "undefined" ? BigInt(str$1) : null;
            ++this.pos;
            if (isIdentifierStart(this.fullCharCodeAtPos())) {
              this.raise(this.pos, "Identifier directly after number");
            }
            return this.finishToken(types.num, val$1);
          }
          if (octal && /[89]/.test(this.input.slice(start, this.pos))) {
            octal = false;
          }
          if (next === 46 && !octal) {
            ++this.pos;
            this.readInt(10);
            next = this.input.charCodeAt(this.pos);
          }
          if ((next === 69 || next === 101) && !octal) {
            next = this.input.charCodeAt(++this.pos);
            if (next === 43 || next === 45) {
              ++this.pos;
            }
            if (this.readInt(10) === null) {
              this.raise(start, "Invalid number");
            }
          }
          if (isIdentifierStart(this.fullCharCodeAtPos())) {
            this.raise(this.pos, "Identifier directly after number");
          }
          var str = this.input.slice(start, this.pos);
          var val = octal ? parseInt(str, 8) : parseFloat(str);
          return this.finishToken(types.num, val);
        };
        pp$9.readCodePoint = function () {
          var ch = this.input.charCodeAt(this.pos),
            code;
          if (ch === 123) {
            if (this.options.ecmaVersion < 6) {
              this.unexpected();
            }
            var codePos = ++this.pos;
            code = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos);
            ++this.pos;
            if (code > 0x10FFFF) {
              this.invalidStringToken(codePos, "Code point out of bounds");
            }
          } else {
            code = this.readHexChar(4);
          }
          return code;
        };
        function codePointToString$1(code) {
          if (code <= 0xFFFF) {
            return String.fromCharCode(code);
          }
          code -= 0x10000;
          return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00);
        }
        pp$9.readString = function (quote) {
          var out = "",
            chunkStart = ++this.pos;
          for (;;) {
            if (this.pos >= this.input.length) {
              this.raise(this.start, "Unterminated string constant");
            }
            var ch = this.input.charCodeAt(this.pos);
            if (ch === quote) {
              break;
            }
            if (ch === 92) {
              out += this.input.slice(chunkStart, this.pos);
              out += this.readEscapedChar(false);
              chunkStart = this.pos;
            } else {
              if (isNewLine(ch, this.options.ecmaVersion >= 10)) {
                this.raise(this.start, "Unterminated string constant");
              }
              ++this.pos;
            }
          }
          out += this.input.slice(chunkStart, this.pos++);
          return this.finishToken(types.string, out);
        };
        var INVALID_TEMPLATE_ESCAPE_ERROR = {};
        pp$9.tryReadTemplateToken = function () {
          this.inTemplateElement = true;
          try {
            this.readTmplToken();
          } catch (err) {
            if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {
              this.readInvalidTemplateToken();
            } else {
              throw err;
            }
          }
          this.inTemplateElement = false;
        };
        pp$9.invalidStringToken = function (position, message) {
          if (this.inTemplateElement && this.options.ecmaVersion >= 9) {
            throw INVALID_TEMPLATE_ESCAPE_ERROR;
          } else {
            this.raise(position, message);
          }
        };
        pp$9.readTmplToken = function () {
          var out = "",
            chunkStart = this.pos;
          for (;;) {
            if (this.pos >= this.input.length) {
              this.raise(this.start, "Unterminated template");
            }
            var ch = this.input.charCodeAt(this.pos);
            if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) {
              if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {
                if (ch === 36) {
                  this.pos += 2;
                  return this.finishToken(types.dollarBraceL);
                } else {
                  ++this.pos;
                  return this.finishToken(types.backQuote);
                }
              }
              out += this.input.slice(chunkStart, this.pos);
              return this.finishToken(types.template, out);
            }
            if (ch === 92) {
              out += this.input.slice(chunkStart, this.pos);
              out += this.readEscapedChar(true);
              chunkStart = this.pos;
            } else if (isNewLine(ch)) {
              out += this.input.slice(chunkStart, this.pos);
              ++this.pos;
              switch (ch) {
                case 13:
                  if (this.input.charCodeAt(this.pos) === 10) {
                    ++this.pos;
                  }
                case 10:
                  out += "\n";
                  break;
                default:
                  out += String.fromCharCode(ch);
                  break;
              }
              if (this.options.locations) {
                ++this.curLine;
                this.lineStart = this.pos;
              }
              chunkStart = this.pos;
            } else {
              ++this.pos;
            }
          }
        };
        pp$9.readInvalidTemplateToken = function () {
          for (; this.pos < this.input.length; this.pos++) {
            switch (this.input[this.pos]) {
              case "\\":
                ++this.pos;
                break;
              case "$":
                if (this.input[this.pos + 1] !== "{") {
                  break;
                }
              case "`":
                return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos));
            }
          }
          this.raise(this.start, "Unterminated template");
        };
        pp$9.readEscapedChar = function (inTemplate) {
          var ch = this.input.charCodeAt(++this.pos);
          ++this.pos;
          switch (ch) {
            case 110:
              return "\n";
            case 114:
              return "\r";
            case 120:
              return String.fromCharCode(this.readHexChar(2));
            case 117:
              return codePointToString$1(this.readCodePoint());
            case 116:
              return "\t";
            case 98:
              return "\b";
            case 118:
              return "\x0B";
            case 102:
              return "\f";
            case 13:
              if (this.input.charCodeAt(this.pos) === 10) {
                ++this.pos;
              }
            case 10:
              if (this.options.locations) {
                this.lineStart = this.pos;
                ++this.curLine;
              }
              return "";
            case 56:
            case 57:
              if (inTemplate) {
                var codePos = this.pos - 1;
                this.invalidStringToken(codePos, "Invalid escape sequence in template string");
                return null;
              }
            default:
              if (ch >= 48 && ch <= 55) {
                var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];
                var octal = parseInt(octalStr, 8);
                if (octal > 255) {
                  octalStr = octalStr.slice(0, -1);
                  octal = parseInt(octalStr, 8);
                }
                this.pos += octalStr.length - 1;
                ch = this.input.charCodeAt(this.pos);
                if ((octalStr !== "0" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {
                  this.invalidStringToken(this.pos - 1 - octalStr.length, inTemplate ? "Octal literal in template string" : "Octal literal in strict mode");
                }
                return String.fromCharCode(octal);
              }
              if (isNewLine(ch)) {
                return "";
              }
              return String.fromCharCode(ch);
          }
        };
        pp$9.readHexChar = function (len) {
          var codePos = this.pos;
          var n = this.readInt(16, len);
          if (n === null) {
            this.invalidStringToken(codePos, "Bad character escape sequence");
          }
          return n;
        };
        pp$9.readWord1 = function () {
          this.containsEsc = false;
          var word = "",
            first = true,
            chunkStart = this.pos;
          var astral = this.options.ecmaVersion >= 6;
          while (this.pos < this.input.length) {
            var ch = this.fullCharCodeAtPos();
            if (isIdentifierChar(ch, astral)) {
              this.pos += ch <= 0xffff ? 1 : 2;
            } else if (ch === 92) {
              this.containsEsc = true;
              word += this.input.slice(chunkStart, this.pos);
              var escStart = this.pos;
              if (this.input.charCodeAt(++this.pos) !== 117) {
                this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX");
              }
              ++this.pos;
              var esc = this.readCodePoint();
              if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral)) {
                this.invalidStringToken(escStart, "Invalid Unicode escape");
              }
              word += codePointToString$1(esc);
              chunkStart = this.pos;
            } else {
              break;
            }
            first = false;
          }
          return word + this.input.slice(chunkStart, this.pos);
        };
        pp$9.readWord = function () {
          var word = this.readWord1();
          var type = types.name;
          if (this.keywords.test(word)) {
            type = keywords$1[word];
          }
          return this.finishToken(type, word);
        };
        var version = "7.1.0";
        Parser.acorn = {
          Parser: Parser,
          version: version,
          defaultOptions: defaultOptions,
          Position: Position,
          SourceLocation: SourceLocation,
          getLineInfo: getLineInfo,
          Node: Node,
          TokenType: TokenType,
          tokTypes: types,
          keywordTypes: keywords$1,
          TokContext: TokContext,
          tokContexts: types$1,
          isIdentifierChar: isIdentifierChar,
          isIdentifierStart: isIdentifierStart,
          Token: Token,
          isNewLine: isNewLine,
          lineBreak: lineBreak,
          lineBreakG: lineBreakG,
          nonASCIIwhitespace: nonASCIIwhitespace
        };
        function parse(input, options) {
          return Parser.parse(input, options);
        }
        function parseExpressionAt(input, pos, options) {
          return Parser.parseExpressionAt(input, pos, options);
        }
        function tokenizer(input, options) {
          return Parser.tokenizer(input, options);
        }
        exports.Node = Node;
        exports.Parser = Parser;
        exports.Position = Position;
        exports.SourceLocation = SourceLocation;
        exports.TokContext = TokContext;
        exports.Token = Token;
        exports.TokenType = TokenType;
        exports.defaultOptions = defaultOptions;
        exports.getLineInfo = getLineInfo;
        exports.isIdentifierChar = isIdentifierChar;
        exports.isIdentifierStart = isIdentifierStart;
        exports.isNewLine = isNewLine;
        exports.keywordTypes = keywords$1;
        exports.lineBreak = lineBreak;
        exports.lineBreakG = lineBreakG;
        exports.nonASCIIwhitespace = nonASCIIwhitespace;
        exports.parse = parse;
        exports.parseExpressionAt = parseExpressionAt;
        exports.tokContexts = types$1;
        exports.tokTypes = types;
        exports.tokenizer = tokenizer;
        exports.version = version;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
      });
    }, {}],
    2: [function (require, module, exports) {}, {}],
    3: [function (require, module, exports) {
      function glWiretap(gl) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var _options$contextName = options.contextName,
          contextName = _options$contextName === void 0 ? 'gl' : _options$contextName,
          throwGetError = options.throwGetError,
          useTrackablePrimitives = options.useTrackablePrimitives,
          readPixelsFile = options.readPixelsFile,
          _options$recording = options.recording,
          recording = _options$recording === void 0 ? [] : _options$recording,
          _options$variables = options.variables,
          variables = _options$variables === void 0 ? {} : _options$variables,
          onReadPixels = options.onReadPixels,
          onUnrecognizedArgumentLookup = options.onUnrecognizedArgumentLookup;
        var proxy = new Proxy(gl, {
          get: listen
        });
        var contextVariables = [];
        var entityNames = {};
        var imageCount = 0;
        var indent = '';
        var readPixelsVariableName;
        return proxy;
        function listen(obj, property) {
          switch (property) {
            case 'addComment':
              return addComment;
            case 'checkThrowError':
              return checkThrowError;
            case 'getReadPixelsVariableName':
              return readPixelsVariableName;
            case 'insertVariable':
              return insertVariable;
            case 'reset':
              return reset;
            case 'setIndent':
              return setIndent;
            case 'toString':
              return toString;
            case 'getContextVariableName':
              return getContextVariableName;
          }
          if (typeof gl[property] === 'function') {
            return function () {
              switch (property) {
                case 'getError':
                  if (throwGetError) {
                    recording.push("".concat(indent, "if (").concat(contextName, ".getError() !== ").concat(contextName, ".NONE) throw new Error('error');"));
                  } else {
                    recording.push("".concat(indent).concat(contextName, ".getError();"));
                  }
                  return gl.getError();
                case 'getExtension':
                  {
                    var variableName = "".concat(contextName, "Variables").concat(contextVariables.length);
                    recording.push("".concat(indent, "const ").concat(variableName, " = ").concat(contextName, ".getExtension('").concat(arguments[0], "');"));
                    var extension = gl.getExtension(arguments[0]);
                    if (extension && typeof extension === 'object') {
                      var tappedExtension = glExtensionWiretap(extension, {
                        getEntity: getEntity,
                        useTrackablePrimitives: useTrackablePrimitives,
                        recording: recording,
                        contextName: variableName,
                        contextVariables: contextVariables,
                        variables: variables,
                        indent: indent,
                        onUnrecognizedArgumentLookup: onUnrecognizedArgumentLookup
                      });
                      contextVariables.push(tappedExtension);
                      return tappedExtension;
                    } else {
                      contextVariables.push(null);
                    }
                    return extension;
                  }
                case 'readPixels':
                  var i = contextVariables.indexOf(arguments[6]);
                  var targetVariableName;
                  if (i === -1) {
                    var _variableName = getVariableName(arguments[6]);
                    if (_variableName) {
                      targetVariableName = _variableName;
                      recording.push("".concat(indent).concat(_variableName));
                    } else {
                      targetVariableName = "".concat(contextName, "Variable").concat(contextVariables.length);
                      contextVariables.push(arguments[6]);
                      recording.push("".concat(indent, "const ").concat(targetVariableName, " = new ").concat(arguments[6].constructor.name, "(").concat(arguments[6].length, ");"));
                    }
                  } else {
                    targetVariableName = "".concat(contextName, "Variable").concat(i);
                  }
                  readPixelsVariableName = targetVariableName;
                  var argumentAsStrings = [arguments[0], arguments[1], arguments[2], arguments[3], getEntity(arguments[4]), getEntity(arguments[5]), targetVariableName];
                  recording.push("".concat(indent).concat(contextName, ".readPixels(").concat(argumentAsStrings.join(', '), ");"));
                  if (readPixelsFile) {
                    writePPM(arguments[2], arguments[3]);
                  }
                  if (onReadPixels) {
                    onReadPixels(targetVariableName, argumentAsStrings);
                  }
                  return gl.readPixels.apply(gl, arguments);
                case 'drawBuffers':
                  recording.push("".concat(indent).concat(contextName, ".drawBuffers([").concat(argumentsToString(arguments[0], {
                    contextName: contextName,
                    contextVariables: contextVariables,
                    getEntity: getEntity,
                    addVariable: addVariable,
                    variables: variables,
                    onUnrecognizedArgumentLookup: onUnrecognizedArgumentLookup
                  }), "]);"));
                  return gl.drawBuffers(arguments[0]);
              }
              var result = gl[property].apply(gl, arguments);
              switch (typeof result) {
                case 'undefined':
                  recording.push("".concat(indent).concat(methodCallToString(property, arguments), ";"));
                  return;
                case 'number':
                case 'boolean':
                  if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {
                    recording.push("".concat(indent, "const ").concat(contextName, "Variable").concat(contextVariables.length, " = ").concat(methodCallToString(property, arguments), ";"));
                    contextVariables.push(result = trackablePrimitive(result));
                    break;
                  }
                default:
                  if (result === null) {
                    recording.push("".concat(methodCallToString(property, arguments), ";"));
                  } else {
                    recording.push("".concat(indent, "const ").concat(contextName, "Variable").concat(contextVariables.length, " = ").concat(methodCallToString(property, arguments), ";"));
                  }
                  contextVariables.push(result);
              }
              return result;
            };
          }
          entityNames[gl[property]] = property;
          return gl[property];
        }
        function toString() {
          return recording.join('\n');
        }
        function reset() {
          while (recording.length > 0) {
            recording.pop();
          }
        }
        function insertVariable(name, value) {
          variables[name] = value;
        }
        function getEntity(value) {
          var name = entityNames[value];
          if (name) {
            return contextName + '.' + name;
          }
          return value;
        }
        function setIndent(spaces) {
          indent = ' '.repeat(spaces);
        }
        function addVariable(value, source) {
          var variableName = "".concat(contextName, "Variable").concat(contextVariables.length);
          recording.push("".concat(indent, "const ").concat(variableName, " = ").concat(source, ";"));
          contextVariables.push(value);
          return variableName;
        }
        function writePPM(width, height) {
          var sourceVariable = "".concat(contextName, "Variable").concat(contextVariables.length);
          var imageVariable = "imageDatum".concat(imageCount);
          recording.push("".concat(indent, "let ").concat(imageVariable, " = [\"P3\\n# ").concat(readPixelsFile, ".ppm\\n\", ").concat(width, ", ' ', ").concat(height, ", \"\\n255\\n\"].join(\"\");"));
          recording.push("".concat(indent, "for (let i = 0; i < ").concat(imageVariable, ".length; i += 4) {"));
          recording.push("".concat(indent, "  ").concat(imageVariable, " += ").concat(sourceVariable, "[i] + ' ' + ").concat(sourceVariable, "[i + 1] + ' ' + ").concat(sourceVariable, "[i + 2] + ' ';"));
          recording.push("".concat(indent, "}"));
          recording.push("".concat(indent, "if (typeof require !== \"undefined\") {"));
          recording.push("".concat(indent, "  require('fs').writeFileSync('./").concat(readPixelsFile, ".ppm', ").concat(imageVariable, ");"));
          recording.push("".concat(indent, "}"));
          imageCount++;
        }
        function addComment(value) {
          recording.push("".concat(indent, "// ").concat(value));
        }
        function checkThrowError() {
          recording.push("".concat(indent, "(() => {\n").concat(indent, "const error = ").concat(contextName, ".getError();\n").concat(indent, "if (error !== ").concat(contextName, ".NONE) {\n").concat(indent, "  const names = Object.getOwnPropertyNames(gl);\n").concat(indent, "  for (let i = 0; i < names.length; i++) {\n").concat(indent, "    const name = names[i];\n").concat(indent, "    if (").concat(contextName, "[name] === error) {\n").concat(indent, "      throw new Error('").concat(contextName, " threw ' + name);\n").concat(indent, "    }\n").concat(indent, "  }\n").concat(indent, "}\n").concat(indent, "})();"));
        }
        function methodCallToString(method, args) {
          return "".concat(contextName, ".").concat(method, "(").concat(argumentsToString(args, {
            contextName: contextName,
            contextVariables: contextVariables,
            getEntity: getEntity,
            addVariable: addVariable,
            variables: variables,
            onUnrecognizedArgumentLookup: onUnrecognizedArgumentLookup
          }), ")");
        }
        function getVariableName(value) {
          if (variables) {
            for (var _name in variables) {
              if (variables[_name] === value) {
                return _name;
              }
            }
          }
          return null;
        }
        function getContextVariableName(value) {
          var i = contextVariables.indexOf(value);
          if (i !== -1) {
            return "".concat(contextName, "Variable").concat(i);
          }
          return null;
        }
      }
      function glExtensionWiretap(extension, options) {
        var proxy = new Proxy(extension, {
          get: listen
        });
        var extensionEntityNames = {};
        var contextName = options.contextName,
          contextVariables = options.contextVariables,
          getEntity = options.getEntity,
          useTrackablePrimitives = options.useTrackablePrimitives,
          recording = options.recording,
          variables = options.variables,
          indent = options.indent,
          onUnrecognizedArgumentLookup = options.onUnrecognizedArgumentLookup;
        return proxy;
        function listen(obj, property) {
          if (typeof obj[property] === 'function') {
            return function () {
              switch (property) {
                case 'drawBuffersWEBGL':
                  recording.push("".concat(indent).concat(contextName, ".drawBuffersWEBGL([").concat(argumentsToString(arguments[0], {
                    contextName: contextName,
                    contextVariables: contextVariables,
                    getEntity: getExtensionEntity,
                    addVariable: addVariable,
                    variables: variables,
                    onUnrecognizedArgumentLookup: onUnrecognizedArgumentLookup
                  }), "]);"));
                  return extension.drawBuffersWEBGL(arguments[0]);
              }
              var result = extension[property].apply(extension, arguments);
              switch (typeof result) {
                case 'undefined':
                  recording.push("".concat(indent).concat(methodCallToString(property, arguments), ";"));
                  return;
                case 'number':
                case 'boolean':
                  if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {
                    recording.push("".concat(indent, "const ").concat(contextName, "Variable").concat(contextVariables.length, " = ").concat(methodCallToString(property, arguments), ";"));
                    contextVariables.push(result = trackablePrimitive(result));
                  } else {
                    recording.push("".concat(indent, "const ").concat(contextName, "Variable").concat(contextVariables.length, " = ").concat(methodCallToString(property, arguments), ";"));
                    contextVariables.push(result);
                  }
                  break;
                default:
                  if (result === null) {
                    recording.push("".concat(methodCallToString(property, arguments), ";"));
                  } else {
                    recording.push("".concat(indent, "const ").concat(contextName, "Variable").concat(contextVariables.length, " = ").concat(methodCallToString(property, arguments), ";"));
                  }
                  contextVariables.push(result);
              }
              return result;
            };
          }
          extensionEntityNames[extension[property]] = property;
          return extension[property];
        }
        function getExtensionEntity(value) {
          if (extensionEntityNames.hasOwnProperty(value)) {
            return "".concat(contextName, ".").concat(extensionEntityNames[value]);
          }
          return getEntity(value);
        }
        function methodCallToString(method, args) {
          return "".concat(contextName, ".").concat(method, "(").concat(argumentsToString(args, {
            contextName: contextName,
            contextVariables: contextVariables,
            getEntity: getExtensionEntity,
            addVariable: addVariable,
            variables: variables,
            onUnrecognizedArgumentLookup: onUnrecognizedArgumentLookup
          }), ")");
        }
        function addVariable(value, source) {
          var variableName = "".concat(contextName, "Variable").concat(contextVariables.length);
          contextVariables.push(value);
          recording.push("".concat(indent, "const ").concat(variableName, " = ").concat(source, ";"));
          return variableName;
        }
      }
      function argumentsToString(args, options) {
        var variables = options.variables,
          onUnrecognizedArgumentLookup = options.onUnrecognizedArgumentLookup;
        return Array.from(args).map(function (arg) {
          var variableName = getVariableName(arg);
          if (variableName) {
            return variableName;
          }
          return argumentToString(arg, options);
        }).join(', ');
        function getVariableName(value) {
          if (variables) {
            for (var _name2 in variables) {
              if (!variables.hasOwnProperty(_name2)) continue;
              if (variables[_name2] === value) {
                return _name2;
              }
            }
          }
          if (onUnrecognizedArgumentLookup) {
            return onUnrecognizedArgumentLookup(value);
          }
          return null;
        }
      }
      function argumentToString(arg, options) {
        var contextName = options.contextName,
          contextVariables = options.contextVariables,
          getEntity = options.getEntity,
          addVariable = options.addVariable,
          onUnrecognizedArgumentLookup = options.onUnrecognizedArgumentLookup;
        if (typeof arg === 'undefined') {
          return 'undefined';
        }
        if (arg === null) {
          return 'null';
        }
        var i = contextVariables.indexOf(arg);
        if (i > -1) {
          return "".concat(contextName, "Variable").concat(i);
        }
        switch (arg.constructor.name) {
          case 'String':
            var hasLines = /\n/.test(arg);
            var hasSingleQuotes = /'/.test(arg);
            var hasDoubleQuotes = /"/.test(arg);
            if (hasLines) {
              return '`' + arg + '`';
            } else if (hasSingleQuotes && !hasDoubleQuotes) {
              return '"' + arg + '"';
            } else if (!hasSingleQuotes && hasDoubleQuotes) {
              return "'" + arg + "'";
            } else {
              return '\'' + arg + '\'';
            }
          case 'Number':
            return getEntity(arg);
          case 'Boolean':
            return getEntity(arg);
          case 'Array':
            return addVariable(arg, "new ".concat(arg.constructor.name, "([").concat(Array.from(arg).join(','), "])"));
          case 'Float32Array':
          case 'Uint8Array':
          case 'Uint16Array':
          case 'Int32Array':
            return addVariable(arg, "new ".concat(arg.constructor.name, "(").concat(JSON.stringify(Array.from(arg)), ")"));
          default:
            if (onUnrecognizedArgumentLookup) {
              var instantiationString = onUnrecognizedArgumentLookup(arg);
              if (instantiationString) {
                return instantiationString;
              }
            }
            throw new Error("unrecognized argument type ".concat(arg.constructor.name));
        }
      }
      function trackablePrimitive(value) {
        return new value.constructor(value);
      }
      if (typeof module !== 'undefined') {
        module.exports = {
          glWiretap: glWiretap,
          glExtensionWiretap: glExtensionWiretap
        };
      }
      if (typeof window !== 'undefined') {
        glWiretap.glExtensionWiretap = glExtensionWiretap;
        window.glWiretap = glWiretap;
      }
    }, {}],
    4: [function (require, module, exports) {
      function setupArguments(args) {
        var newArguments = new Array(args.length);
        for (var i = 0; i < args.length; i++) {
          var arg = args[i];
          if (arg.toArray) {
            newArguments[i] = arg.toArray();
          } else {
            newArguments[i] = arg;
          }
        }
        return newArguments;
      }
      function mock1D() {
        var args = setupArguments(arguments);
        var row = new Float32Array(this.output.x);
        for (var x = 0; x < this.output.x; x++) {
          this.thread.x = x;
          this.thread.y = 0;
          this.thread.z = 0;
          row[x] = this._fn.apply(this, args);
        }
        return row;
      }
      function mock2D() {
        var args = setupArguments(arguments);
        var matrix = new Array(this.output.y);
        for (var y = 0; y < this.output.y; y++) {
          var row = new Float32Array(this.output.x);
          for (var x = 0; x < this.output.x; x++) {
            this.thread.x = x;
            this.thread.y = y;
            this.thread.z = 0;
            row[x] = this._fn.apply(this, args);
          }
          matrix[y] = row;
        }
        return matrix;
      }
      function mock2DGraphical() {
        var args = setupArguments(arguments);
        for (var y = 0; y < this.output.y; y++) {
          for (var x = 0; x < this.output.x; x++) {
            this.thread.x = x;
            this.thread.y = y;
            this.thread.z = 0;
            this._fn.apply(this, args);
          }
        }
      }
      function mock3D() {
        var args = setupArguments(arguments);
        var cube = new Array(this.output.z);
        for (var z = 0; z < this.output.z; z++) {
          var matrix = new Array(this.output.y);
          for (var y = 0; y < this.output.y; y++) {
            var row = new Float32Array(this.output.x);
            for (var x = 0; x < this.output.x; x++) {
              this.thread.x = x;
              this.thread.y = y;
              this.thread.z = z;
              row[x] = this._fn.apply(this, args);
            }
            matrix[y] = row;
          }
          cube[z] = matrix;
        }
        return cube;
      }
      function apiDecorate(kernel) {
        kernel.setOutput = function (output) {
          kernel.output = setupOutput(output);
          if (kernel.graphical) {
            setupGraphical(kernel);
          }
        };
        kernel.toJSON = function () {
          throw new Error('Not usable with gpuMock');
        };
        kernel.setConstants = function (flag) {
          kernel.constants = flag;
          return kernel;
        };
        kernel.setGraphical = function (flag) {
          kernel.graphical = flag;
          return kernel;
        };
        kernel.setCanvas = function (flag) {
          kernel.canvas = flag;
          return kernel;
        };
        kernel.setContext = function (flag) {
          kernel.context = flag;
          return kernel;
        };
        kernel.destroy = function () {};
        kernel.validateSettings = function () {};
        if (kernel.graphical && kernel.output) {
          setupGraphical(kernel);
        }
        kernel.exec = function () {
          var _arguments = arguments;
          return new Promise(function (resolve, reject) {
            try {
              resolve(kernel.apply(kernel, _arguments));
            } catch (e) {
              reject(e);
            }
          });
        };
        kernel.getPixels = function (flip) {
          var _kernel$output = kernel.output,
            x = _kernel$output.x,
            y = _kernel$output.y;
          return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);
        };
        kernel.color = function (r, g, b, a) {
          if (typeof a === 'undefined') {
            a = 1;
          }
          r = Math.floor(r * 255);
          g = Math.floor(g * 255);
          b = Math.floor(b * 255);
          a = Math.floor(a * 255);
          var width = kernel.output.x;
          var height = kernel.output.y;
          var x = kernel.thread.x;
          var y = height - kernel.thread.y - 1;
          var index = x + y * width;
          kernel._colorData[index * 4 + 0] = r;
          kernel._colorData[index * 4 + 1] = g;
          kernel._colorData[index * 4 + 2] = b;
          kernel._colorData[index * 4 + 3] = a;
        };
        var mockMethod = function mockMethod() {
          return kernel;
        };
        var methods = ['setWarnVarUsage', 'setArgumentTypes', 'setTactic', 'setOptimizeFloatMemory', 'setDebug', 'setLoopMaxIterations', 'setConstantTypes', 'setFunctions', 'setNativeFunctions', 'setInjectedNative', 'setPipeline', 'setPrecision', 'setOutputToTexture', 'setImmutable', 'setStrictIntegers', 'setDynamicOutput', 'setHardcodeConstants', 'setDynamicArguments', 'setUseLegacyEncoder', 'setWarnVarUsage', 'addSubKernel'];
        for (var i = 0; i < methods.length; i++) {
          kernel[methods[i]] = mockMethod;
        }
        return kernel;
      }
      function setupGraphical(kernel) {
        var _kernel$output2 = kernel.output,
          x = _kernel$output2.x,
          y = _kernel$output2.y;
        if (kernel.context && kernel.context.createImageData) {
          var data = new Uint8ClampedArray(x * y * 4);
          kernel._imageData = kernel.context.createImageData(x, y);
          kernel._colorData = data;
        } else {
          var _data = new Uint8ClampedArray(x * y * 4);
          kernel._imageData = {
            data: _data
          };
          kernel._colorData = _data;
        }
      }
      function setupOutput(output) {
        var result = null;
        if (output.length) {
          if (output.length === 3) {
            var _output = _slicedToArray(output, 3),
              x = _output[0],
              y = _output[1],
              z = _output[2];
            result = {
              x: x,
              y: y,
              z: z
            };
          } else if (output.length === 2) {
            var _output2 = _slicedToArray(output, 2),
              _x = _output2[0],
              _y = _output2[1];
            result = {
              x: _x,
              y: _y
            };
          } else {
            var _output3 = _slicedToArray(output, 1),
              _x2 = _output3[0];
            result = {
              x: _x2
            };
          }
        } else {
          result = output;
        }
        return result;
      }
      function gpuMock(fn) {
        var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var output = settings.output ? setupOutput(settings.output) : null;
        function kernel() {
          if (kernel.output.z) {
            return mock3D.apply(kernel, arguments);
          } else if (kernel.output.y) {
            if (kernel.graphical) {
              return mock2DGraphical.apply(kernel, arguments);
            }
            return mock2D.apply(kernel, arguments);
          } else {
            return mock1D.apply(kernel, arguments);
          }
        }
        kernel._fn = fn;
        kernel.constants = settings.constants || null;
        kernel.context = settings.context || null;
        kernel.canvas = settings.canvas || null;
        kernel.graphical = settings.graphical || false;
        kernel._imageData = null;
        kernel._colorData = null;
        kernel.output = output;
        kernel.thread = {
          x: 0,
          y: 0,
          z: 0
        };
        return apiDecorate(kernel);
      }
      function flipPixels(pixels, width, height) {
        var halfHeight = height / 2 | 0;
        var bytesPerRow = width * 4;
        var temp = new Uint8ClampedArray(width * 4);
        var result = pixels.slice(0);
        for (var y = 0; y < halfHeight; ++y) {
          var topOffset = y * bytesPerRow;
          var bottomOffset = (height - y - 1) * bytesPerRow;
          temp.set(result.subarray(topOffset, topOffset + bytesPerRow));
          result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);
          result.set(temp, bottomOffset);
        }
        return result;
      }
      module.exports = {
        gpuMock: gpuMock
      };
    }, {}],
    5: [function (require, module, exports) {
      var _require = require('./utils'),
        utils = _require.utils;
      function alias(name, source) {
        var fnString = source.toString();
        return new Function("return function ".concat(name, " (").concat(utils.getArgumentNamesFromString(fnString).join(', '), ") {\n  ").concat(utils.getFunctionBodyFromString(fnString), "\n}"))();
      }
      module.exports = {
        alias: alias
      };
    }, {
      "./utils": 114
    }],
    6: [function (require, module, exports) {
      var _require2 = require('../function-node'),
        FunctionNode = _require2.FunctionNode;
      var CPUFunctionNode = /*#__PURE__*/function (_FunctionNode) {
        "use strict";

        _inherits(CPUFunctionNode, _FunctionNode);
        var _super = _createSuper(CPUFunctionNode);
        function CPUFunctionNode() {
          _classCallCheck(this, CPUFunctionNode);
          return _super.apply(this, arguments);
        }
        _createClass(CPUFunctionNode, [{
          key: "astFunction",
          value: function astFunction(ast, retArr) {
            if (!this.isRootKernel) {
              retArr.push('function');
              retArr.push(' ');
              retArr.push(this.name);
              retArr.push('(');
              for (var i = 0; i < this.argumentNames.length; ++i) {
                var argumentName = this.argumentNames[i];
                if (i > 0) {
                  retArr.push(', ');
                }
                retArr.push('user_');
                retArr.push(argumentName);
              }
              retArr.push(') {\n');
            }
            for (var _i = 0; _i < ast.body.body.length; ++_i) {
              this.astGeneric(ast.body.body[_i], retArr);
              retArr.push('\n');
            }
            if (!this.isRootKernel) {
              retArr.push('}\n');
            }
            return retArr;
          }
        }, {
          key: "astReturnStatement",
          value: function astReturnStatement(ast, retArr) {
            var type = this.returnType || this.getType(ast.argument);
            if (!this.returnType) {
              this.returnType = type;
            }
            if (this.isRootKernel) {
              retArr.push(this.leadingReturnStatement);
              this.astGeneric(ast.argument, retArr);
              retArr.push(';\n');
              retArr.push(this.followingReturnStatement);
              retArr.push('continue;\n');
            } else if (this.isSubKernel) {
              retArr.push("subKernelResult_".concat(this.name, " = "));
              this.astGeneric(ast.argument, retArr);
              retArr.push(';');
              retArr.push("return subKernelResult_".concat(this.name, ";"));
            } else {
              retArr.push('return ');
              this.astGeneric(ast.argument, retArr);
              retArr.push(';');
            }
            return retArr;
          }
        }, {
          key: "astLiteral",
          value: function astLiteral(ast, retArr) {
            if (isNaN(ast.value)) {
              throw this.astErrorOutput('Non-numeric literal not supported : ' + ast.value, ast);
            }
            retArr.push(ast.value);
            return retArr;
          }
        }, {
          key: "astBinaryExpression",
          value: function astBinaryExpression(ast, retArr) {
            retArr.push('(');
            this.astGeneric(ast.left, retArr);
            retArr.push(ast.operator);
            this.astGeneric(ast.right, retArr);
            retArr.push(')');
            return retArr;
          }
        }, {
          key: "astIdentifierExpression",
          value: function astIdentifierExpression(idtNode, retArr) {
            if (idtNode.type !== 'Identifier') {
              throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);
            }
            switch (idtNode.name) {
              case 'Infinity':
                retArr.push('Infinity');
                break;
              default:
                if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {
                  retArr.push('constants_' + idtNode.name);
                } else {
                  retArr.push('user_' + idtNode.name);
                }
            }
            return retArr;
          }
        }, {
          key: "astForStatement",
          value: function astForStatement(forNode, retArr) {
            if (forNode.type !== 'ForStatement') {
              throw this.astErrorOutput('Invalid for statement', forNode);
            }
            var initArr = [];
            var testArr = [];
            var updateArr = [];
            var bodyArr = [];
            var isSafe = null;
            if (forNode.init) {
              this.pushState('in-for-loop-init');
              this.astGeneric(forNode.init, initArr);
              for (var i = 0; i < initArr.length; i++) {
                if (initArr[i].includes && initArr[i].includes(',')) {
                  isSafe = false;
                }
              }
              this.popState('in-for-loop-init');
            } else {
              isSafe = false;
            }
            if (forNode.test) {
              this.astGeneric(forNode.test, testArr);
            } else {
              isSafe = false;
            }
            if (forNode.update) {
              this.astGeneric(forNode.update, updateArr);
            } else {
              isSafe = false;
            }
            if (forNode.body) {
              this.pushState('loop-body');
              this.astGeneric(forNode.body, bodyArr);
              this.popState('loop-body');
            }
            if (isSafe === null) {
              isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);
            }
            if (isSafe) {
              retArr.push("for (".concat(initArr.join(''), ";").concat(testArr.join(''), ";").concat(updateArr.join(''), "){\n"));
              retArr.push(bodyArr.join(''));
              retArr.push('}\n');
            } else {
              var iVariableName = this.getInternalVariableName('safeI');
              if (initArr.length > 0) {
                retArr.push(initArr.join(''), ';\n');
              }
              retArr.push("for (let ".concat(iVariableName, "=0;").concat(iVariableName, "<LOOP_MAX;").concat(iVariableName, "++){\n"));
              if (testArr.length > 0) {
                retArr.push("if (!".concat(testArr.join(''), ") break;\n"));
              }
              retArr.push(bodyArr.join(''));
              retArr.push("\n".concat(updateArr.join(''), ";"));
              retArr.push('}\n');
            }
            return retArr;
          }
        }, {
          key: "astWhileStatement",
          value: function astWhileStatement(whileNode, retArr) {
            if (whileNode.type !== 'WhileStatement') {
              throw this.astErrorOutput('Invalid while statement', whileNode);
            }
            retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');
            retArr.push('if (');
            this.astGeneric(whileNode.test, retArr);
            retArr.push(') {\n');
            this.astGeneric(whileNode.body, retArr);
            retArr.push('} else {\n');
            retArr.push('break;\n');
            retArr.push('}\n');
            retArr.push('}\n');
            return retArr;
          }
        }, {
          key: "astDoWhileStatement",
          value: function astDoWhileStatement(doWhileNode, retArr) {
            if (doWhileNode.type !== 'DoWhileStatement') {
              throw this.astErrorOutput('Invalid while statement', doWhileNode);
            }
            retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');
            this.astGeneric(doWhileNode.body, retArr);
            retArr.push('if (!');
            this.astGeneric(doWhileNode.test, retArr);
            retArr.push(') {\n');
            retArr.push('break;\n');
            retArr.push('}\n');
            retArr.push('}\n');
            return retArr;
          }
        }, {
          key: "astAssignmentExpression",
          value: function astAssignmentExpression(assNode, retArr) {
            var declaration = this.getDeclaration(assNode.left);
            if (declaration && !declaration.assignable) {
              throw this.astErrorOutput("Variable ".concat(assNode.left.name, " is not assignable here"), assNode);
            }
            this.astGeneric(assNode.left, retArr);
            retArr.push(assNode.operator);
            this.astGeneric(assNode.right, retArr);
            return retArr;
          }
        }, {
          key: "astBlockStatement",
          value: function astBlockStatement(bNode, retArr) {
            if (this.isState('loop-body')) {
              this.pushState('block-body');
              for (var i = 0; i < bNode.body.length; i++) {
                this.astGeneric(bNode.body[i], retArr);
              }
              this.popState('block-body');
            } else {
              retArr.push('{\n');
              for (var _i2 = 0; _i2 < bNode.body.length; _i2++) {
                this.astGeneric(bNode.body[_i2], retArr);
              }
              retArr.push('}\n');
            }
            return retArr;
          }
        }, {
          key: "astVariableDeclaration",
          value: function astVariableDeclaration(varDecNode, retArr) {
            retArr.push("".concat(varDecNode.kind, " "));
            var declarations = varDecNode.declarations;
            for (var i = 0; i < declarations.length; i++) {
              if (i > 0) {
                retArr.push(',');
              }
              var declaration = declarations[i];
              var info = this.getDeclaration(declaration.id);
              if (!info.valueType) {
                info.valueType = this.getType(declaration.init);
              }
              this.astGeneric(declaration, retArr);
            }
            if (!this.isState('in-for-loop-init')) {
              retArr.push(';');
            }
            return retArr;
          }
        }, {
          key: "astIfStatement",
          value: function astIfStatement(ifNode, retArr) {
            retArr.push('if (');
            this.astGeneric(ifNode.test, retArr);
            retArr.push(')');
            if (ifNode.consequent.type === 'BlockStatement') {
              this.astGeneric(ifNode.consequent, retArr);
            } else {
              retArr.push(' {\n');
              this.astGeneric(ifNode.consequent, retArr);
              retArr.push('\n}\n');
            }
            if (ifNode.alternate) {
              retArr.push('else ');
              if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {
                this.astGeneric(ifNode.alternate, retArr);
              } else {
                retArr.push(' {\n');
                this.astGeneric(ifNode.alternate, retArr);
                retArr.push('\n}\n');
              }
            }
            return retArr;
          }
        }, {
          key: "astSwitchStatement",
          value: function astSwitchStatement(ast, retArr) {
            var discriminant = ast.discriminant,
              cases = ast.cases;
            retArr.push('switch (');
            this.astGeneric(discriminant, retArr);
            retArr.push(') {\n');
            for (var i = 0; i < cases.length; i++) {
              if (cases[i].test === null) {
                retArr.push('default:\n');
                this.astGeneric(cases[i].consequent, retArr);
                if (cases[i].consequent && cases[i].consequent.length > 0) {
                  retArr.push('break;\n');
                }
                continue;
              }
              retArr.push('case ');
              this.astGeneric(cases[i].test, retArr);
              retArr.push(':\n');
              if (cases[i].consequent && cases[i].consequent.length > 0) {
                this.astGeneric(cases[i].consequent, retArr);
                retArr.push('break;\n');
              }
            }
            retArr.push('\n}');
          }
        }, {
          key: "astThisExpression",
          value: function astThisExpression(tNode, retArr) {
            retArr.push('_this');
            return retArr;
          }
        }, {
          key: "astMemberExpression",
          value: function astMemberExpression(mNode, retArr) {
            var _this$getMemberExpres = this.getMemberExpressionDetails(mNode),
              signature = _this$getMemberExpres.signature,
              type = _this$getMemberExpres.type,
              property = _this$getMemberExpres.property,
              xProperty = _this$getMemberExpres.xProperty,
              yProperty = _this$getMemberExpres.yProperty,
              zProperty = _this$getMemberExpres.zProperty,
              name = _this$getMemberExpres.name,
              origin = _this$getMemberExpres.origin;
            switch (signature) {
              case 'this.thread.value':
                retArr.push("_this.thread.".concat(name));
                return retArr;
              case 'this.output.value':
                switch (name) {
                  case 'x':
                    retArr.push('outputX');
                    break;
                  case 'y':
                    retArr.push('outputY');
                    break;
                  case 'z':
                    retArr.push('outputZ');
                    break;
                  default:
                    throw this.astErrorOutput('Unexpected expression', mNode);
                }
                return retArr;
              case 'value':
                throw this.astErrorOutput('Unexpected expression', mNode);
              case 'value[]':
              case 'value[][]':
              case 'value[][][]':
              case 'value.value':
                if (origin === 'Math') {
                  retArr.push(Math[name]);
                  return retArr;
                }
                switch (property) {
                  case 'r':
                    retArr.push("user_".concat(name, "[0]"));
                    return retArr;
                  case 'g':
                    retArr.push("user_".concat(name, "[1]"));
                    return retArr;
                  case 'b':
                    retArr.push("user_".concat(name, "[2]"));
                    return retArr;
                  case 'a':
                    retArr.push("user_".concat(name, "[3]"));
                    return retArr;
                }
                break;
              case 'this.constants.value':
              case 'this.constants.value[]':
              case 'this.constants.value[][]':
              case 'this.constants.value[][][]':
                break;
              case 'fn()[]':
                this.astGeneric(mNode.object, retArr);
                retArr.push('[');
                this.astGeneric(mNode.property, retArr);
                retArr.push(']');
                return retArr;
              case 'fn()[][]':
                this.astGeneric(mNode.object.object, retArr);
                retArr.push('[');
                this.astGeneric(mNode.object.property, retArr);
                retArr.push(']');
                retArr.push('[');
                this.astGeneric(mNode.property, retArr);
                retArr.push(']');
                return retArr;
              default:
                throw this.astErrorOutput('Unexpected expression', mNode);
            }
            if (!mNode.computed) {
              switch (type) {
                case 'Number':
                case 'Integer':
                case 'Float':
                case 'Boolean':
                  retArr.push("".concat(origin, "_").concat(name));
                  return retArr;
              }
            }
            var markupName = "".concat(origin, "_").concat(name);
            switch (type) {
              case 'Array(2)':
              case 'Array(3)':
              case 'Array(4)':
              case 'Matrix(2)':
              case 'Matrix(3)':
              case 'Matrix(4)':
              case 'HTMLImageArray':
              case 'ArrayTexture(1)':
              case 'ArrayTexture(2)':
              case 'ArrayTexture(3)':
              case 'ArrayTexture(4)':
              case 'HTMLImage':
              default:
                var size;
                var isInput;
                if (origin === 'constants') {
                  var constant = this.constants[name];
                  isInput = this.constantTypes[name] === 'Input';
                  size = isInput ? constant.size : null;
                } else {
                  isInput = this.isInput(name);
                  size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;
                }
                retArr.push("".concat(markupName));
                if (zProperty && yProperty) {
                  if (isInput) {
                    retArr.push('[(');
                    this.astGeneric(zProperty, retArr);
                    retArr.push("*".concat(this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0], ")+("));
                    this.astGeneric(yProperty, retArr);
                    retArr.push("*".concat(this.dynamicArguments ? 'outputX' : size[0], ")+"));
                    this.astGeneric(xProperty, retArr);
                    retArr.push(']');
                  } else {
                    retArr.push('[');
                    this.astGeneric(zProperty, retArr);
                    retArr.push(']');
                    retArr.push('[');
                    this.astGeneric(yProperty, retArr);
                    retArr.push(']');
                    retArr.push('[');
                    this.astGeneric(xProperty, retArr);
                    retArr.push(']');
                  }
                } else if (yProperty) {
                  if (isInput) {
                    retArr.push('[(');
                    this.astGeneric(yProperty, retArr);
                    retArr.push("*".concat(this.dynamicArguments ? 'outputX' : size[0], ")+"));
                    this.astGeneric(xProperty, retArr);
                    retArr.push(']');
                  } else {
                    retArr.push('[');
                    this.astGeneric(yProperty, retArr);
                    retArr.push(']');
                    retArr.push('[');
                    this.astGeneric(xProperty, retArr);
                    retArr.push(']');
                  }
                } else if (typeof xProperty !== 'undefined') {
                  retArr.push('[');
                  this.astGeneric(xProperty, retArr);
                  retArr.push(']');
                }
            }
            return retArr;
          }
        }, {
          key: "astCallExpression",
          value: function astCallExpression(ast, retArr) {
            if (ast.type !== 'CallExpression') {
              throw this.astErrorOutput('Unknown CallExpression', ast);
            }
            var functionName = this.astMemberExpressionUnroll(ast.callee);
            if (this.calledFunctions.indexOf(functionName) < 0) {
              this.calledFunctions.push(functionName);
            }
            var isMathFunction = this.isAstMathFunction(ast);
            if (this.onFunctionCall) {
              this.onFunctionCall(this.name, functionName, ast.arguments);
            }
            retArr.push(functionName);
            retArr.push('(');
            var targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];
            for (var i = 0; i < ast.arguments.length; ++i) {
              var argument = ast.arguments[i];
              var argumentType = this.getType(argument);
              if (!targetTypes[i]) {
                this.triggerImplyArgumentType(functionName, i, argumentType, this);
              }
              if (i > 0) {
                retArr.push(', ');
              }
              this.astGeneric(argument, retArr);
            }
            retArr.push(')');
            return retArr;
          }
        }, {
          key: "astArrayExpression",
          value: function astArrayExpression(arrNode, retArr) {
            var returnType = this.getType(arrNode);
            var arrLen = arrNode.elements.length;
            var elements = [];
            for (var i = 0; i < arrLen; ++i) {
              var element = [];
              this.astGeneric(arrNode.elements[i], element);
              elements.push(element.join(''));
            }
            switch (returnType) {
              case 'Matrix(2)':
              case 'Matrix(3)':
              case 'Matrix(4)':
                retArr.push("[".concat(elements.join(', '), "]"));
                break;
              default:
                retArr.push("new Float32Array([".concat(elements.join(', '), "])"));
            }
            return retArr;
          }
        }, {
          key: "astDebuggerStatement",
          value: function astDebuggerStatement(arrNode, retArr) {
            retArr.push('debugger;');
            return retArr;
          }
        }]);
        return CPUFunctionNode;
      }(FunctionNode);
      module.exports = {
        CPUFunctionNode: CPUFunctionNode
      };
    }, {
      "../function-node": 10
    }],
    7: [function (require, module, exports) {
      var _require3 = require('../../utils'),
        utils = _require3.utils;
      function constantsToString(constants, types) {
        var results = [];
        for (var _name3 in types) {
          if (!types.hasOwnProperty(_name3)) continue;
          var type = types[_name3];
          var constant = constants[_name3];
          switch (type) {
            case 'Number':
            case 'Integer':
            case 'Float':
            case 'Boolean':
              results.push("".concat(_name3, ":").concat(constant));
              break;
            case 'Array(2)':
            case 'Array(3)':
            case 'Array(4)':
            case 'Matrix(2)':
            case 'Matrix(3)':
            case 'Matrix(4)':
              results.push("".concat(_name3, ":new ").concat(constant.constructor.name, "(").concat(JSON.stringify(Array.from(constant)), ")"));
              break;
          }
        }
        return "{ ".concat(results.join(), " }");
      }
      function cpuKernelString(cpuKernel, name) {
        var header = [];
        var thisProperties = [];
        var beforeReturn = [];
        var useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());
        header.push('  const { context, canvas, constants: incomingConstants } = settings;', "  const output = new Int32Array(".concat(JSON.stringify(Array.from(cpuKernel.output)), ");"), "  const _constantTypes = ".concat(JSON.stringify(cpuKernel.constantTypes), ";"), "  const _constants = ".concat(constantsToString(cpuKernel.constants, cpuKernel.constantTypes), ";"));
        thisProperties.push('    constants: _constants,', '    context,', '    output,', '    thread: {x: 0, y: 0, z: 0},');
        if (cpuKernel.graphical) {
          header.push("  const _imageData = context.createImageData(".concat(cpuKernel.output[0], ", ").concat(cpuKernel.output[1], ");"));
          header.push("  const _colorData = new Uint8ClampedArray(".concat(cpuKernel.output[0], " * ").concat(cpuKernel.output[1], " * 4);"));
          var colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {
            thisLookup: function thisLookup(propertyName) {
              switch (propertyName) {
                case '_colorData':
                  return '_colorData';
                case '_imageData':
                  return '_imageData';
                case 'output':
                  return 'output';
                case 'thread':
                  return 'this.thread';
              }
              return JSON.stringify(cpuKernel[propertyName]);
            },
            findDependency: function findDependency(object, name) {
              return null;
            }
          });
          var getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {
            thisLookup: function thisLookup(propertyName) {
              switch (propertyName) {
                case '_colorData':
                  return '_colorData';
                case '_imageData':
                  return '_imageData';
                case 'output':
                  return 'output';
                case 'thread':
                  return 'this.thread';
              }
              return JSON.stringify(cpuKernel[propertyName]);
            },
            findDependency: function findDependency() {
              return null;
            }
          });
          thisProperties.push('    _imageData,', '    _colorData,', "    color: ".concat(colorFn, ","));
          beforeReturn.push("  kernel.getPixels = ".concat(getPixelsFn, ";"));
        }
        var constantTypes = [];
        var constantKeys = Object.keys(cpuKernel.constantTypes);
        for (var i = 0; i < constantKeys.length; i++) {
          constantTypes.push(cpuKernel.constantTypes[constantKeys]);
        }
        if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {
          var flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {
            doNotDefine: ['canvas'],
            findDependency: function findDependency(object, name) {
              if (object === 'this') {
                return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();
              }
              return null;
            },
            thisLookup: function thisLookup(propertyName) {
              switch (propertyName) {
                case 'canvas':
                  return;
                case 'context':
                  return 'context';
              }
            }
          });
          beforeReturn.push(flattenedImageTo3DArray);
          thisProperties.push("    _mediaTo2DArray,");
          thisProperties.push("    _imageTo3DArray,");
        } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {
          var flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._mediaTo2DArray.toString(), {
            findDependency: function findDependency(object, name) {
              return null;
            },
            thisLookup: function thisLookup(propertyName) {
              switch (propertyName) {
                case 'canvas':
                  return 'settings.canvas';
                case 'context':
                  return 'settings.context';
              }
              throw new Error('unhandled thisLookup');
            }
          });
          beforeReturn.push(flattenedImageTo2DArray);
          thisProperties.push("    _mediaTo2DArray,");
        }
        return "function(settings) {\n".concat(header.join('\n'), "\n  for (const p in _constantTypes) {\n    if (!_constantTypes.hasOwnProperty(p)) continue;\n    const type = _constantTypes[p];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        if (incomingConstants.hasOwnProperty(p)) {\n          console.warn('constant ' + p + ' of type ' + type + ' cannot be resigned');\n        }\n        continue;\n    }\n    if (!incomingConstants.hasOwnProperty(p)) {\n      throw new Error('constant ' + p + ' not found');\n    }\n    _constants[p] = incomingConstants[p];\n  }\n  const kernel = (function() {\n").concat(cpuKernel._kernelString, "\n  })\n    .apply({ ").concat(thisProperties.join('\n'), " });\n  ").concat(beforeReturn.join('\n'), "\n  return kernel;\n}");
      }
      module.exports = {
        cpuKernelString: cpuKernelString
      };
    }, {
      "../../utils": 114
    }],
    8: [function (require, module, exports) {
      var _require4 = require('../kernel'),
        Kernel = _require4.Kernel;
      var _require5 = require('../function-builder'),
        FunctionBuilder = _require5.FunctionBuilder;
      var _require6 = require('./function-node'),
        CPUFunctionNode = _require6.CPUFunctionNode;
      var _require7 = require('../../utils'),
        utils = _require7.utils;
      var _require8 = require('./kernel-string'),
        cpuKernelString = _require8.cpuKernelString;
      var CPUKernel = /*#__PURE__*/function (_Kernel) {
        "use strict";

        _inherits(CPUKernel, _Kernel);
        var _super2 = _createSuper(CPUKernel);
        function CPUKernel(source, settings) {
          var _this;
          _classCallCheck(this, CPUKernel);
          _this = _super2.call(this, source, settings);
          _this.mergeSettings(source.settings || settings);
          _this._imageData = null;
          _this._colorData = null;
          _this._kernelString = null;
          _this._prependedString = [];
          _this.thread = {
            x: 0,
            y: 0,
            z: 0
          };
          _this.translatedSources = null;
          return _this;
        }
        _createClass(CPUKernel, [{
          key: "initCanvas",
          value: function initCanvas() {
            if (typeof document !== 'undefined') {
              return document.createElement('canvas');
            } else if (typeof OffscreenCanvas !== 'undefined') {
              return new OffscreenCanvas(0, 0);
            }
          }
        }, {
          key: "initContext",
          value: function initContext() {
            if (!this.canvas) return null;
            return this.canvas.getContext('2d');
          }
        }, {
          key: "initPlugins",
          value: function initPlugins(settings) {
            return [];
          }
        }, {
          key: "validateSettings",
          value: function validateSettings(args) {
            if (!this.output || this.output.length === 0) {
              if (args.length !== 1) {
                throw new Error('Auto output only supported for kernels with only one input');
              }
              var argType = utils.getVariableType(args[0], this.strictIntegers);
              if (argType === 'Array') {
                this.output = utils.getDimensions(argType);
              } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {
                this.output = args[0].output;
              } else {
                throw new Error('Auto output not supported for input type: ' + argType);
              }
            }
            if (this.graphical) {
              if (this.output.length !== 2) {
                throw new Error('Output must have 2 dimensions on graphical mode');
              }
            }
            this.checkOutput();
          }
        }, {
          key: "translateSource",
          value: function translateSource() {
            this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';
            if (this.subKernels) {
              var followingReturnStatement = [];
              for (var i = 0; i < this.subKernels.length; i++) {
                var _name4 = this.subKernels[i].name;
                followingReturnStatement.push(this.output.length > 1 ? "resultX_".concat(_name4, "[x] = subKernelResult_").concat(_name4, ";\n") : "result_".concat(_name4, "[x] = subKernelResult_").concat(_name4, ";\n"));
              }
              this.followingReturnStatement = followingReturnStatement.join('');
            }
            var functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);
            this.translatedSources = functionBuilder.getPrototypes('kernel');
            if (!this.graphical && !this.returnType) {
              this.returnType = functionBuilder.getKernelResultType();
            }
          }
        }, {
          key: "build",
          value: function build() {
            if (this.built) return;
            this.setupConstants();
            this.setupArguments(arguments);
            this.validateSettings(arguments);
            this.translateSource();
            if (this.graphical) {
              var canvas = this.canvas,
                output = this.output;
              if (!canvas) {
                throw new Error('no canvas available for using graphical output');
              }
              var width = output[0];
              var height = output[1] || 1;
              canvas.width = width;
              canvas.height = height;
              this._imageData = this.context.createImageData(width, height);
              this._colorData = new Uint8ClampedArray(width * height * 4);
            }
            var kernelString = this.getKernelString();
            this.kernelString = kernelString;
            if (this.debug) {
              console.log('Function output:');
              console.log(kernelString);
            }
            try {
              this.run = new Function([], kernelString).bind(this)();
            } catch (e) {
              console.error('An error occurred compiling the javascript: ', e);
            }
            this.buildSignature(arguments);
            this.built = true;
          }
        }, {
          key: "color",
          value: function color(r, g, b, a) {
            if (typeof a === 'undefined') {
              a = 1;
            }
            r = Math.floor(r * 255);
            g = Math.floor(g * 255);
            b = Math.floor(b * 255);
            a = Math.floor(a * 255);
            var width = this.output[0];
            var height = this.output[1];
            var x = this.thread.x;
            var y = height - this.thread.y - 1;
            var index = x + y * width;
            this._colorData[index * 4 + 0] = r;
            this._colorData[index * 4 + 1] = g;
            this._colorData[index * 4 + 2] = b;
            this._colorData[index * 4 + 3] = a;
          }
        }, {
          key: "getKernelString",
          value: function getKernelString() {
            if (this._kernelString !== null) return this._kernelString;
            var kernelThreadString = null;
            var translatedSources = this.translatedSources;
            if (translatedSources.length > 1) {
              translatedSources = translatedSources.filter(function (fn) {
                if (/^function/.test(fn)) return fn;
                kernelThreadString = fn;
                return false;
              });
            } else {
              kernelThreadString = translatedSources.shift();
            }
            return this._kernelString = "  const LOOP_MAX = ".concat(this._getLoopMaxString(), ";\n  ").concat(this.injectedNative || '', "\n  const _this = this;\n  ").concat(this._resultKernelHeader(), "\n  ").concat(this._processConstants(), "\n  return (").concat(this.argumentNames.map(function (argumentName) {
              return 'user_' + argumentName;
            }).join(', '), ") => {\n    ").concat(this._prependedString.join(''), "\n    ").concat(this._earlyThrows(), "\n    ").concat(this._processArguments(), "\n    ").concat(this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString), "\n    ").concat(translatedSources.length > 0 ? translatedSources.join('\n') : '', "\n  };");
          }
        }, {
          key: "toString",
          value: function toString() {
            return cpuKernelString(this);
          }
        }, {
          key: "_getLoopMaxString",
          value: function _getLoopMaxString() {
            return this.loopMaxIterations ? " ".concat(parseInt(this.loopMaxIterations), ";") : ' 1000;';
          }
        }, {
          key: "_processConstants",
          value: function _processConstants() {
            if (!this.constants) return '';
            var result = [];
            for (var p in this.constants) {
              var type = this.constantTypes[p];
              switch (type) {
                case 'HTMLCanvas':
                case 'OffscreenCanvas':
                case 'HTMLImage':
                case 'ImageBitmap':
                case 'ImageData':
                case 'HTMLVideo':
                  result.push("    const constants_".concat(p, " = this._mediaTo2DArray(this.constants.").concat(p, ");\n"));
                  break;
                case 'HTMLImageArray':
                  result.push("    const constants_".concat(p, " = this._imageTo3DArray(this.constants.").concat(p, ");\n"));
                  break;
                case 'Input':
                  result.push("    const constants_".concat(p, " = this.constants.").concat(p, ".value;\n"));
                  break;
                default:
                  result.push("    const constants_".concat(p, " = this.constants.").concat(p, ";\n"));
              }
            }
            return result.join('');
          }
        }, {
          key: "_earlyThrows",
          value: function _earlyThrows() {
            var _this2 = this;
            if (this.graphical) return '';
            if (this.immutable) return '';
            if (!this.pipeline) return '';
            var arrayArguments = [];
            for (var i = 0; i < this.argumentTypes.length; i++) {
              if (this.argumentTypes[i] === 'Array') {
                arrayArguments.push(this.argumentNames[i]);
              }
            }
            if (arrayArguments.length === 0) return '';
            var checks = [];
            var _loop = function _loop() {
              var argumentName = arrayArguments[_i3];
              var checkSubKernels = _this2._mapSubKernels(function (subKernel) {
                return "user_".concat(argumentName, " === result_").concat(subKernel.name);
              }).join(' || ');
              checks.push("user_".concat(argumentName, " === result").concat(checkSubKernels ? " || ".concat(checkSubKernels) : ''));
            };
            for (var _i3 = 0; _i3 < arrayArguments.length; _i3++) {
              _loop();
            }
            return "if (".concat(checks.join(' || '), ") throw new Error('Source and destination arrays are the same.  Use immutable = true');");
          }
        }, {
          key: "_processArguments",
          value: function _processArguments() {
            var result = [];
            for (var i = 0; i < this.argumentTypes.length; i++) {
              var variableName = "user_".concat(this.argumentNames[i]);
              switch (this.argumentTypes[i]) {
                case 'HTMLCanvas':
                case 'OffscreenCanvas':
                case 'HTMLImage':
                case 'ImageBitmap':
                case 'ImageData':
                case 'HTMLVideo':
                  result.push("    ".concat(variableName, " = this._mediaTo2DArray(").concat(variableName, ");\n"));
                  break;
                case 'HTMLImageArray':
                  result.push("    ".concat(variableName, " = this._imageTo3DArray(").concat(variableName, ");\n"));
                  break;
                case 'Input':
                  result.push("    ".concat(variableName, " = ").concat(variableName, ".value;\n"));
                  break;
                case 'ArrayTexture(1)':
                case 'ArrayTexture(2)':
                case 'ArrayTexture(3)':
                case 'ArrayTexture(4)':
                case 'NumberTexture':
                case 'MemoryOptimizedNumberTexture':
                  result.push("\n    if (".concat(variableName, ".toArray) {\n      if (!_this.textureCache) {\n        _this.textureCache = [];\n        _this.arrayCache = [];\n      }\n      const textureIndex = _this.textureCache.indexOf(").concat(variableName, ");\n      if (textureIndex !== -1) {\n        ").concat(variableName, " = _this.arrayCache[textureIndex];\n      } else {\n        _this.textureCache.push(").concat(variableName, ");\n        ").concat(variableName, " = ").concat(variableName, ".toArray();\n        _this.arrayCache.push(").concat(variableName, ");\n      }\n    }"));
                  break;
              }
            }
            return result.join('');
          }
        }, {
          key: "_mediaTo2DArray",
          value: function _mediaTo2DArray(media) {
            var canvas = this.canvas;
            var width = media.width > 0 ? media.width : media.videoWidth;
            var height = media.height > 0 ? media.height : media.videoHeight;
            if (canvas.width < width) {
              canvas.width = width;
            }
            if (canvas.height < height) {
              canvas.height = height;
            }
            var ctx = this.context;
            var pixelsData;
            if (media.constructor === ImageData) {
              pixelsData = media.data;
            } else {
              ctx.drawImage(media, 0, 0, width, height);
              pixelsData = ctx.getImageData(0, 0, width, height).data;
            }
            var imageArray = new Array(height);
            var index = 0;
            for (var y = height - 1; y >= 0; y--) {
              var row = imageArray[y] = new Array(width);
              for (var x = 0; x < width; x++) {
                var pixel = new Float32Array(4);
                pixel[0] = pixelsData[index++] / 255;
                pixel[1] = pixelsData[index++] / 255;
                pixel[2] = pixelsData[index++] / 255;
                pixel[3] = pixelsData[index++] / 255;
                row[x] = pixel;
              }
            }
            return imageArray;
          }
        }, {
          key: "getPixels",
          value: function getPixels(flip) {
            var _this$output = _slicedToArray(this.output, 2),
              width = _this$output[0],
              height = _this$output[1];
            return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);
          }
        }, {
          key: "_imageTo3DArray",
          value: function _imageTo3DArray(images) {
            var imagesArray = new Array(images.length);
            for (var i = 0; i < images.length; i++) {
              imagesArray[i] = this._mediaTo2DArray(images[i]);
            }
            return imagesArray;
          }
        }, {
          key: "_resultKernelHeader",
          value: function _resultKernelHeader() {
            if (this.graphical) return '';
            if (this.immutable) return '';
            if (!this.pipeline) return '';
            switch (this.output.length) {
              case 1:
                return this._mutableKernel1DResults();
              case 2:
                return this._mutableKernel2DResults();
              case 3:
                return this._mutableKernel3DResults();
            }
          }
        }, {
          key: "_resultKernelBody",
          value: function _resultKernelBody(kernelString) {
            switch (this.output.length) {
              case 1:
                return (!this.immutable && this.pipeline ? this._resultMutableKernel1DLoop(kernelString) : this._resultImmutableKernel1DLoop(kernelString)) + this._kernelOutput();
              case 2:
                return (!this.immutable && this.pipeline ? this._resultMutableKernel2DLoop(kernelString) : this._resultImmutableKernel2DLoop(kernelString)) + this._kernelOutput();
              case 3:
                return (!this.immutable && this.pipeline ? this._resultMutableKernel3DLoop(kernelString) : this._resultImmutableKernel3DLoop(kernelString)) + this._kernelOutput();
              default:
                throw new Error('unsupported size kernel');
            }
          }
        }, {
          key: "_graphicalKernelBody",
          value: function _graphicalKernelBody(kernelThreadString) {
            switch (this.output.length) {
              case 2:
                return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();
              default:
                throw new Error('unsupported size kernel');
            }
          }
        }, {
          key: "_graphicalOutput",
          value: function _graphicalOutput() {
            return "\n    this._imageData.data.set(this._colorData);\n    this.context.putImageData(this._imageData, 0, 0);\n    return;";
          }
        }, {
          key: "_getKernelResultTypeConstructorString",
          value: function _getKernelResultTypeConstructorString() {
            switch (this.returnType) {
              case 'LiteralInteger':
              case 'Number':
              case 'Integer':
              case 'Float':
                return 'Float32Array';
              case 'Array(2)':
              case 'Array(3)':
              case 'Array(4)':
                return 'Array';
              default:
                if (this.graphical) {
                  return 'Float32Array';
                }
                throw new Error("unhandled returnType ".concat(this.returnType));
            }
          }
        }, {
          key: "_resultImmutableKernel1DLoop",
          value: function _resultImmutableKernel1DLoop(kernelString) {
            var constructorString = this._getKernelResultTypeConstructorString();
            return "  const outputX = _this.output[0];\n    const result = new ".concat(constructorString, "(outputX);\n    ").concat(this._mapSubKernels(function (subKernel) {
              return "const result_".concat(subKernel.name, " = new ").concat(constructorString, "(outputX);\n");
            }).join('    '), "\n    ").concat(this._mapSubKernels(function (subKernel) {
              return "let subKernelResult_".concat(subKernel.name, ";\n");
            }).join('    '), "\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ").concat(kernelString, "\n    }");
          }
        }, {
          key: "_mutableKernel1DResults",
          value: function _mutableKernel1DResults() {
            var constructorString = this._getKernelResultTypeConstructorString();
            return "  const outputX = _this.output[0];\n    const result = new ".concat(constructorString, "(outputX);\n    ").concat(this._mapSubKernels(function (subKernel) {
              return "const result_".concat(subKernel.name, " = new ").concat(constructorString, "(outputX);\n");
            }).join('    '), "\n    ").concat(this._mapSubKernels(function (subKernel) {
              return "let subKernelResult_".concat(subKernel.name, ";\n");
            }).join('    '));
          }
        }, {
          key: "_resultMutableKernel1DLoop",
          value: function _resultMutableKernel1DLoop(kernelString) {
            return "  const outputX = _this.output[0];\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ".concat(kernelString, "\n    }");
          }
        }, {
          key: "_resultImmutableKernel2DLoop",
          value: function _resultImmutableKernel2DLoop(kernelString) {
            var constructorString = this._getKernelResultTypeConstructorString();
            return "  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ".concat(this._mapSubKernels(function (subKernel) {
              return "const result_".concat(subKernel.name, " = new Array(outputY);\n");
            }).join('    '), "\n    ").concat(this._mapSubKernels(function (subKernel) {
              return "let subKernelResult_".concat(subKernel.name, ";\n");
            }).join('    '), "\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y] = new ").concat(constructorString, "(outputX);\n      ").concat(this._mapSubKernels(function (subKernel) {
              return "const resultX_".concat(subKernel.name, " = result_").concat(subKernel.name, "[y] = new ").concat(constructorString, "(outputX);\n");
            }).join(''), "\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ").concat(kernelString, "\n      }\n    }");
          }
        }, {
          key: "_mutableKernel2DResults",
          value: function _mutableKernel2DResults() {
            var constructorString = this._getKernelResultTypeConstructorString();
            return "  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ".concat(this._mapSubKernels(function (subKernel) {
              return "const result_".concat(subKernel.name, " = new Array(outputY);\n");
            }).join('    '), "\n    ").concat(this._mapSubKernels(function (subKernel) {
              return "let subKernelResult_".concat(subKernel.name, ";\n");
            }).join('    '), "\n    for (let y = 0; y < outputY; y++) {\n      const resultX = result[y] = new ").concat(constructorString, "(outputX);\n      ").concat(this._mapSubKernels(function (subKernel) {
              return "const resultX_".concat(subKernel.name, " = result_").concat(subKernel.name, "[y] = new ").concat(constructorString, "(outputX);\n");
            }).join(''), "\n    }");
          }
        }, {
          key: "_resultMutableKernel2DLoop",
          value: function _resultMutableKernel2DLoop(kernelString) {
            var constructorString = this._getKernelResultTypeConstructorString();
            return "  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y];\n      ".concat(this._mapSubKernels(function (subKernel) {
              return "const resultX_".concat(subKernel.name, " = result_").concat(subKernel.name, "[y] = new ").concat(constructorString, "(outputX);\n");
            }).join(''), "\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ").concat(kernelString, "\n      }\n    }");
          }
        }, {
          key: "_graphicalKernel2DLoop",
          value: function _graphicalKernel2DLoop(kernelString) {
            return "  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ".concat(kernelString, "\n      }\n    }");
          }
        }, {
          key: "_resultImmutableKernel3DLoop",
          value: function _resultImmutableKernel3DLoop(kernelString) {
            var constructorString = this._getKernelResultTypeConstructorString();
            return "  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ".concat(this._mapSubKernels(function (subKernel) {
              return "const result_".concat(subKernel.name, " = new Array(outputZ);\n");
            }).join('    '), "\n    ").concat(this._mapSubKernels(function (subKernel) {
              return "let subKernelResult_".concat(subKernel.name, ";\n");
            }).join('    '), "\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z] = new Array(outputY);\n      ").concat(this._mapSubKernels(function (subKernel) {
              return "const resultY_".concat(subKernel.name, " = result_").concat(subKernel.name, "[z] = new Array(outputY);\n");
            }).join('      '), "\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y] = new ").concat(constructorString, "(outputX);\n        ").concat(this._mapSubKernels(function (subKernel) {
              return "const resultX_".concat(subKernel.name, " = resultY_").concat(subKernel.name, "[y] = new ").concat(constructorString, "(outputX);\n");
            }).join('        '), "\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ").concat(kernelString, "\n        }\n      }\n    }");
          }
        }, {
          key: "_mutableKernel3DResults",
          value: function _mutableKernel3DResults() {
            var constructorString = this._getKernelResultTypeConstructorString();
            return "  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ".concat(this._mapSubKernels(function (subKernel) {
              return "const result_".concat(subKernel.name, " = new Array(outputZ);\n");
            }).join('    '), "\n    ").concat(this._mapSubKernels(function (subKernel) {
              return "let subKernelResult_".concat(subKernel.name, ";\n");
            }).join('    '), "\n    for (let z = 0; z < outputZ; z++) {\n      const resultY = result[z] = new Array(outputY);\n      ").concat(this._mapSubKernels(function (subKernel) {
              return "const resultY_".concat(subKernel.name, " = result_").concat(subKernel.name, "[z] = new Array(outputY);\n");
            }).join('      '), "\n      for (let y = 0; y < outputY; y++) {\n        const resultX = resultY[y] = new ").concat(constructorString, "(outputX);\n        ").concat(this._mapSubKernels(function (subKernel) {
              return "const resultX_".concat(subKernel.name, " = resultY_").concat(subKernel.name, "[y] = new ").concat(constructorString, "(outputX);\n");
            }).join('        '), "\n      }\n    }");
          }
        }, {
          key: "_resultMutableKernel3DLoop",
          value: function _resultMutableKernel3DLoop(kernelString) {
            return "  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z];\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y];\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ".concat(kernelString, "\n        }\n      }\n    }");
          }
        }, {
          key: "_kernelOutput",
          value: function _kernelOutput() {
            if (!this.subKernels) {
              return '\n    return result;';
            }
            return "\n    return {\n      result: result,\n      ".concat(this.subKernels.map(function (subKernel) {
              return "".concat(subKernel.property, ": result_").concat(subKernel.name);
            }).join(',\n      '), "\n    };");
          }
        }, {
          key: "_mapSubKernels",
          value: function _mapSubKernels(fn) {
            return this.subKernels === null ? [''] : this.subKernels.map(fn);
          }
        }, {
          key: "destroy",
          value: function destroy(removeCanvasReference) {
            if (removeCanvasReference) {
              delete this.canvas;
            }
          }
        }, {
          key: "toJSON",
          value: function toJSON() {
            var json = _get(_getPrototypeOf(CPUKernel.prototype), "toJSON", this).call(this);
            json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();
            return json;
          }
        }, {
          key: "setOutput",
          value: function setOutput(output) {
            _get(_getPrototypeOf(CPUKernel.prototype), "setOutput", this).call(this, output);
            var _this$output2 = _slicedToArray(this.output, 2),
              width = _this$output2[0],
              height = _this$output2[1];
            if (this.graphical) {
              this._imageData = this.context.createImageData(width, height);
              this._colorData = new Uint8ClampedArray(width * height * 4);
            }
          }
        }, {
          key: "prependString",
          value: function prependString(value) {
            if (this._kernelString) throw new Error('Kernel already built');
            this._prependedString.push(value);
          }
        }, {
          key: "hasPrependString",
          value: function hasPrependString(value) {
            return this._prependedString.indexOf(value) > -1;
          }
        }], [{
          key: "getFeatures",
          value: function getFeatures() {
            return this.features;
          }
        }, {
          key: "features",
          get: function get() {
            return Object.freeze({
              kernelMap: true,
              isIntegerDivisionAccurate: true
            });
          }
        }, {
          key: "isSupported",
          get: function get() {
            return true;
          }
        }, {
          key: "isContextMatch",
          value: function isContextMatch(context) {
            return false;
          }
        }, {
          key: "mode",
          get: function get() {
            return 'cpu';
          }
        }, {
          key: "nativeFunctionArguments",
          value: function nativeFunctionArguments() {
            return null;
          }
        }, {
          key: "nativeFunctionReturnType",
          value: function nativeFunctionReturnType() {
            throw new Error("Looking up native function return type not supported on ".concat(this.name));
          }
        }, {
          key: "combineKernels",
          value: function combineKernels(combinedKernel) {
            return combinedKernel;
          }
        }, {
          key: "getSignature",
          value: function getSignature(kernel, argumentTypes) {
            return 'cpu' + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');
          }
        }, {
          key: "destroyContext",
          value: function destroyContext(context) {}
        }]);
        return CPUKernel;
      }(Kernel);
      module.exports = {
        CPUKernel: CPUKernel
      };
    }, {
      "../../utils": 114,
      "../function-builder": 9,
      "../kernel": 36,
      "./function-node": 6,
      "./kernel-string": 7
    }],
    9: [function (require, module, exports) {
      var FunctionBuilder = /*#__PURE__*/function () {
        "use strict";

        function FunctionBuilder(settings) {
          _classCallCheck(this, FunctionBuilder);
          settings = settings || {};
          this.kernel = settings.kernel;
          this.rootNode = settings.rootNode;
          this.functionNodes = settings.functionNodes || [];
          this.subKernelNodes = settings.subKernelNodes || [];
          this.nativeFunctions = settings.nativeFunctions || [];
          this.functionMap = {};
          this.nativeFunctionNames = [];
          this.lookupChain = [];
          this.functionNodeDependencies = {};
          this.functionCalls = {};
          if (this.rootNode) {
            this.functionMap['kernel'] = this.rootNode;
          }
          if (this.functionNodes) {
            for (var i = 0; i < this.functionNodes.length; i++) {
              this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];
            }
          }
          if (this.subKernelNodes) {
            for (var _i4 = 0; _i4 < this.subKernelNodes.length; _i4++) {
              this.functionMap[this.subKernelNodes[_i4].name] = this.subKernelNodes[_i4];
            }
          }
          if (this.nativeFunctions) {
            for (var _i5 = 0; _i5 < this.nativeFunctions.length; _i5++) {
              var nativeFunction = this.nativeFunctions[_i5];
              this.nativeFunctionNames.push(nativeFunction.name);
            }
          }
        }
        _createClass(FunctionBuilder, [{
          key: "addFunctionNode",
          value: function addFunctionNode(functionNode) {
            if (!functionNode.name) throw new Error('functionNode.name needs set');
            this.functionMap[functionNode.name] = functionNode;
            if (functionNode.isRootKernel) {
              this.rootNode = functionNode;
            }
          }
        }, {
          key: "traceFunctionCalls",
          value: function traceFunctionCalls(functionName, retList) {
            functionName = functionName || 'kernel';
            retList = retList || [];
            if (this.nativeFunctionNames.indexOf(functionName) > -1) {
              var nativeFunctionIndex = retList.indexOf(functionName);
              if (nativeFunctionIndex === -1) {
                retList.push(functionName);
              } else {
                var dependantNativeFunctionName = retList.splice(nativeFunctionIndex, 1)[0];
                retList.push(dependantNativeFunctionName);
              }
              return retList;
            }
            var functionNode = this.functionMap[functionName];
            if (functionNode) {
              var functionIndex = retList.indexOf(functionName);
              if (functionIndex === -1) {
                retList.push(functionName);
                functionNode.toString();
                for (var i = 0; i < functionNode.calledFunctions.length; ++i) {
                  this.traceFunctionCalls(functionNode.calledFunctions[i], retList);
                }
              } else {
                var dependantFunctionName = retList.splice(functionIndex, 1)[0];
                retList.push(dependantFunctionName);
              }
            }
            return retList;
          }
        }, {
          key: "getPrototypeString",
          value: function getPrototypeString(functionName) {
            return this.getPrototypes(functionName).join('\n');
          }
        }, {
          key: "getPrototypes",
          value: function getPrototypes(functionName) {
            if (this.rootNode) {
              this.rootNode.toString();
            }
            if (functionName) {
              return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());
            }
            return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));
          }
        }, {
          key: "getStringFromFunctionNames",
          value: function getStringFromFunctionNames(functionList) {
            var ret = [];
            for (var i = 0; i < functionList.length; ++i) {
              var node = this.functionMap[functionList[i]];
              if (node) {
                ret.push(this.functionMap[functionList[i]].toString());
              }
            }
            return ret.join('\n');
          }
        }, {
          key: "getPrototypesFromFunctionNames",
          value: function getPrototypesFromFunctionNames(functionList) {
            var ret = [];
            for (var i = 0; i < functionList.length; ++i) {
              var functionName = functionList[i];
              var functionIndex = this.nativeFunctionNames.indexOf(functionName);
              if (functionIndex > -1) {
                ret.push(this.nativeFunctions[functionIndex].source);
                continue;
              }
              var node = this.functionMap[functionName];
              if (node) {
                ret.push(node.toString());
              }
            }
            return ret;
          }
        }, {
          key: "toJSON",
          value: function toJSON() {
            var _this3 = this;
            return this.traceFunctionCalls(this.rootNode.name).reverse().map(function (name) {
              var nativeIndex = _this3.nativeFunctions.indexOf(name);
              if (nativeIndex > -1) {
                return {
                  name: name,
                  source: _this3.nativeFunctions[nativeIndex].source
                };
              } else if (_this3.functionMap[name]) {
                return _this3.functionMap[name].toJSON();
              } else {
                throw new Error("function ".concat(name, " not found"));
              }
            });
          }
        }, {
          key: "fromJSON",
          value: function fromJSON(jsonFunctionNodes, FunctionNode) {
            this.functionMap = {};
            for (var i = 0; i < jsonFunctionNodes.length; i++) {
              var jsonFunctionNode = jsonFunctionNodes[i];
              this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);
            }
            return this;
          }
        }, {
          key: "getString",
          value: function getString(functionName) {
            if (functionName) {
              return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());
            }
            return this.getStringFromFunctionNames(Object.keys(this.functionMap));
          }
        }, {
          key: "lookupReturnType",
          value: function lookupReturnType(functionName, ast, requestingNode) {
            if (ast.type !== 'CallExpression') {
              throw new Error("expected ast type of \"CallExpression\", but is ".concat(ast.type));
            }
            if (this._isNativeFunction(functionName)) {
              return this._lookupNativeFunctionReturnType(functionName);
            } else if (this._isFunction(functionName)) {
              var node = this._getFunction(functionName);
              if (node.returnType) {
                return node.returnType;
              } else {
                for (var i = 0; i < this.lookupChain.length; i++) {
                  if (this.lookupChain[i].ast === ast) {
                    if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {
                      var args = ast.arguments;
                      for (var j = 0; j < args.length; j++) {
                        this.lookupChain.push({
                          name: requestingNode.name,
                          ast: args[i],
                          requestingNode: requestingNode
                        });
                        node.argumentTypes[j] = requestingNode.getType(args[j]);
                        this.lookupChain.pop();
                      }
                      return node.returnType = node.getType(node.getJsAST());
                    }
                    throw new Error('circlical logic detected!');
                  }
                }
                this.lookupChain.push({
                  name: requestingNode.name,
                  ast: ast,
                  requestingNode: requestingNode
                });
                var type = node.getType(node.getJsAST());
                this.lookupChain.pop();
                return node.returnType = type;
              }
            }
            return null;
          }
        }, {
          key: "_getFunction",
          value: function _getFunction(functionName) {
            if (!this._isFunction(functionName)) {
              new Error("Function ".concat(functionName, " not found"));
            }
            return this.functionMap[functionName];
          }
        }, {
          key: "_isFunction",
          value: function _isFunction(functionName) {
            return Boolean(this.functionMap[functionName]);
          }
        }, {
          key: "_getNativeFunction",
          value: function _getNativeFunction(functionName) {
            for (var i = 0; i < this.nativeFunctions.length; i++) {
              if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];
            }
            return null;
          }
        }, {
          key: "_isNativeFunction",
          value: function _isNativeFunction(functionName) {
            return Boolean(this._getNativeFunction(functionName));
          }
        }, {
          key: "_lookupNativeFunctionReturnType",
          value: function _lookupNativeFunctionReturnType(functionName) {
            var nativeFunction = this._getNativeFunction(functionName);
            if (nativeFunction) {
              return nativeFunction.returnType;
            }
            throw new Error("Native function ".concat(functionName, " not found"));
          }
        }, {
          key: "lookupFunctionArgumentTypes",
          value: function lookupFunctionArgumentTypes(functionName) {
            if (this._isNativeFunction(functionName)) {
              return this._getNativeFunction(functionName).argumentTypes;
            } else if (this._isFunction(functionName)) {
              return this._getFunction(functionName).argumentTypes;
            }
            return null;
          }
        }, {
          key: "lookupFunctionArgumentName",
          value: function lookupFunctionArgumentName(functionName, argumentIndex) {
            return this._getFunction(functionName).argumentNames[argumentIndex];
          }
        }, {
          key: "lookupFunctionArgumentBitRatio",
          value: function lookupFunctionArgumentBitRatio(functionName, argumentName) {
            if (!this._isFunction(functionName)) {
              throw new Error('function not found');
            }
            if (this.rootNode.name === functionName) {
              var _i6 = this.rootNode.argumentNames.indexOf(argumentName);
              if (_i6 !== -1) {
                return this.rootNode.argumentBitRatios[_i6];
              }
            }
            var node = this._getFunction(functionName);
            var i = node.argumentNames.indexOf(argumentName);
            if (i === -1) {
              throw new Error('argument not found');
            }
            var bitRatio = node.argumentBitRatios[i];
            if (typeof bitRatio !== 'number') {
              throw new Error('argument bit ratio not found');
            }
            return bitRatio;
          }
        }, {
          key: "needsArgumentType",
          value: function needsArgumentType(functionName, i) {
            if (!this._isFunction(functionName)) return false;
            var fnNode = this._getFunction(functionName);
            return !fnNode.argumentTypes[i];
          }
        }, {
          key: "assignArgumentType",
          value: function assignArgumentType(functionName, i, argumentType, requestingNode) {
            if (!this._isFunction(functionName)) return;
            var fnNode = this._getFunction(functionName);
            if (!fnNode.argumentTypes[i]) {
              fnNode.argumentTypes[i] = argumentType;
            }
          }
        }, {
          key: "assignArgumentBitRatio",
          value: function assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex) {
            var node = this._getFunction(functionName);
            if (this._isNativeFunction(calleeFunctionName)) return null;
            var calleeNode = this._getFunction(calleeFunctionName);
            var i = node.argumentNames.indexOf(argumentName);
            if (i === -1) {
              throw new Error("Argument ".concat(argumentName, " not found in arguments from function ").concat(functionName));
            }
            var bitRatio = node.argumentBitRatios[i];
            if (typeof bitRatio !== 'number') {
              throw new Error("Bit ratio for argument ".concat(argumentName, " not found in function ").concat(functionName));
            }
            if (!calleeNode.argumentBitRatios) {
              calleeNode.argumentBitRatios = new Array(calleeNode.argumentNames.length);
            }
            var calleeBitRatio = calleeNode.argumentBitRatios[i];
            if (typeof calleeBitRatio === 'number') {
              if (calleeBitRatio !== bitRatio) {
                throw new Error("Incompatible bit ratio found at function ".concat(functionName, " at argument ").concat(argumentName));
              }
              return calleeBitRatio;
            }
            calleeNode.argumentBitRatios[i] = bitRatio;
            return bitRatio;
          }
        }, {
          key: "trackFunctionCall",
          value: function trackFunctionCall(functionName, calleeFunctionName, args) {
            if (!this.functionNodeDependencies[functionName]) {
              this.functionNodeDependencies[functionName] = new Set();
              this.functionCalls[functionName] = [];
            }
            this.functionNodeDependencies[functionName].add(calleeFunctionName);
            this.functionCalls[functionName].push(args);
          }
        }, {
          key: "getKernelResultType",
          value: function getKernelResultType() {
            return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);
          }
        }, {
          key: "getSubKernelResultType",
          value: function getSubKernelResultType(index) {
            var subKernelNode = this.subKernelNodes[index];
            var called = false;
            for (var functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {
              var functionCall = this.rootNode.functionCalls[functionCallIndex];
              if (functionCall.ast.callee.name === subKernelNode.name) {
                called = true;
              }
            }
            if (!called) {
              throw new Error("SubKernel ".concat(subKernelNode.name, " never called by kernel"));
            }
            return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());
          }
        }, {
          key: "getReturnTypes",
          value: function getReturnTypes() {
            var result = _defineProperty({}, this.rootNode.name, this.rootNode.getType(this.rootNode.ast));
            var list = this.traceFunctionCalls(this.rootNode.name);
            for (var i = 0; i < list.length; i++) {
              var functionName = list[i];
              var functionNode = this.functionMap[functionName];
              result[functionName] = functionNode.getType(functionNode.ast);
            }
            return result;
          }
        }], [{
          key: "fromKernel",
          value: function fromKernel(kernel, FunctionNode, extraNodeOptions) {
            var kernelArguments = kernel.kernelArguments,
              kernelConstants = kernel.kernelConstants,
              argumentNames = kernel.argumentNames,
              argumentSizes = kernel.argumentSizes,
              argumentBitRatios = kernel.argumentBitRatios,
              constants = kernel.constants,
              constantBitRatios = kernel.constantBitRatios,
              debug = kernel.debug,
              loopMaxIterations = kernel.loopMaxIterations,
              nativeFunctions = kernel.nativeFunctions,
              output = kernel.output,
              optimizeFloatMemory = kernel.optimizeFloatMemory,
              precision = kernel.precision,
              plugins = kernel.plugins,
              source = kernel.source,
              subKernels = kernel.subKernels,
              functions = kernel.functions,
              leadingReturnStatement = kernel.leadingReturnStatement,
              followingReturnStatement = kernel.followingReturnStatement,
              dynamicArguments = kernel.dynamicArguments,
              dynamicOutput = kernel.dynamicOutput;
            var argumentTypes = new Array(kernelArguments.length);
            var constantTypes = {};
            for (var i = 0; i < kernelArguments.length; i++) {
              argumentTypes[i] = kernelArguments[i].type;
            }
            for (var _i7 = 0; _i7 < kernelConstants.length; _i7++) {
              var kernelConstant = kernelConstants[_i7];
              constantTypes[kernelConstant.name] = kernelConstant.type;
            }
            var needsArgumentType = function needsArgumentType(functionName, index) {
              return functionBuilder.needsArgumentType(functionName, index);
            };
            var assignArgumentType = function assignArgumentType(functionName, index, type) {
              functionBuilder.assignArgumentType(functionName, index, type);
            };
            var lookupReturnType = function lookupReturnType(functionName, ast, requestingNode) {
              return functionBuilder.lookupReturnType(functionName, ast, requestingNode);
            };
            var lookupFunctionArgumentTypes = function lookupFunctionArgumentTypes(functionName) {
              return functionBuilder.lookupFunctionArgumentTypes(functionName);
            };
            var lookupFunctionArgumentName = function lookupFunctionArgumentName(functionName, argumentIndex) {
              return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);
            };
            var lookupFunctionArgumentBitRatio = function lookupFunctionArgumentBitRatio(functionName, argumentName) {
              return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);
            };
            var triggerImplyArgumentType = function triggerImplyArgumentType(functionName, i, argumentType, requestingNode) {
              functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);
            };
            var triggerImplyArgumentBitRatio = function triggerImplyArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex) {
              functionBuilder.assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex);
            };
            var onFunctionCall = function onFunctionCall(functionName, calleeFunctionName, args) {
              functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);
            };
            var onNestedFunction = function onNestedFunction(ast, source) {
              var argumentNames = [];
              for (var _i8 = 0; _i8 < ast.params.length; _i8++) {
                argumentNames.push(ast.params[_i8].name);
              }
              var nestedFunction = new FunctionNode(source, Object.assign({}, nodeOptions, {
                returnType: null,
                ast: ast,
                name: ast.id.name,
                argumentNames: argumentNames,
                lookupReturnType: lookupReturnType,
                lookupFunctionArgumentTypes: lookupFunctionArgumentTypes,
                lookupFunctionArgumentName: lookupFunctionArgumentName,
                lookupFunctionArgumentBitRatio: lookupFunctionArgumentBitRatio,
                needsArgumentType: needsArgumentType,
                assignArgumentType: assignArgumentType,
                triggerImplyArgumentType: triggerImplyArgumentType,
                triggerImplyArgumentBitRatio: triggerImplyArgumentBitRatio,
                onFunctionCall: onFunctionCall
              }));
              nestedFunction.traceFunctionAST(ast);
              functionBuilder.addFunctionNode(nestedFunction);
            };
            var nodeOptions = Object.assign({
              isRootKernel: false,
              onNestedFunction: onNestedFunction,
              lookupReturnType: lookupReturnType,
              lookupFunctionArgumentTypes: lookupFunctionArgumentTypes,
              lookupFunctionArgumentName: lookupFunctionArgumentName,
              lookupFunctionArgumentBitRatio: lookupFunctionArgumentBitRatio,
              needsArgumentType: needsArgumentType,
              assignArgumentType: assignArgumentType,
              triggerImplyArgumentType: triggerImplyArgumentType,
              triggerImplyArgumentBitRatio: triggerImplyArgumentBitRatio,
              onFunctionCall: onFunctionCall,
              optimizeFloatMemory: optimizeFloatMemory,
              precision: precision,
              constants: constants,
              constantTypes: constantTypes,
              constantBitRatios: constantBitRatios,
              debug: debug,
              loopMaxIterations: loopMaxIterations,
              output: output,
              plugins: plugins,
              dynamicArguments: dynamicArguments,
              dynamicOutput: dynamicOutput
            }, extraNodeOptions || {});
            var rootNodeOptions = Object.assign({}, nodeOptions, {
              isRootKernel: true,
              name: 'kernel',
              argumentNames: argumentNames,
              argumentTypes: argumentTypes,
              argumentSizes: argumentSizes,
              argumentBitRatios: argumentBitRatios,
              leadingReturnStatement: leadingReturnStatement,
              followingReturnStatement: followingReturnStatement
            });
            if (typeof source === 'object' && source.functionNodes) {
              return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);
            }
            var rootNode = new FunctionNode(source, rootNodeOptions);
            var functionNodes = null;
            if (functions) {
              functionNodes = functions.map(function (fn) {
                return new FunctionNode(fn.source, {
                  returnType: fn.returnType,
                  argumentTypes: fn.argumentTypes,
                  output: output,
                  plugins: plugins,
                  constants: constants,
                  constantTypes: constantTypes,
                  constantBitRatios: constantBitRatios,
                  optimizeFloatMemory: optimizeFloatMemory,
                  precision: precision,
                  lookupReturnType: lookupReturnType,
                  lookupFunctionArgumentTypes: lookupFunctionArgumentTypes,
                  lookupFunctionArgumentName: lookupFunctionArgumentName,
                  lookupFunctionArgumentBitRatio: lookupFunctionArgumentBitRatio,
                  needsArgumentType: needsArgumentType,
                  assignArgumentType: assignArgumentType,
                  triggerImplyArgumentType: triggerImplyArgumentType,
                  triggerImplyArgumentBitRatio: triggerImplyArgumentBitRatio,
                  onFunctionCall: onFunctionCall,
                  onNestedFunction: onNestedFunction
                });
              });
            }
            var subKernelNodes = null;
            if (subKernels) {
              subKernelNodes = subKernels.map(function (subKernel) {
                var name = subKernel.name,
                  source = subKernel.source;
                return new FunctionNode(source, Object.assign({}, nodeOptions, {
                  name: name,
                  isSubKernel: true,
                  isRootKernel: false
                }));
              });
            }
            var functionBuilder = new FunctionBuilder({
              kernel: kernel,
              rootNode: rootNode,
              functionNodes: functionNodes,
              nativeFunctions: nativeFunctions,
              subKernelNodes: subKernelNodes
            });
            return functionBuilder;
          }
        }]);
        return FunctionBuilder;
      }();
      module.exports = {
        FunctionBuilder: FunctionBuilder
      };
    }, {}],
    10: [function (require, module, exports) {
      var acorn = require('acorn');
      var _require9 = require('../utils'),
        utils = _require9.utils;
      var _require10 = require('./function-tracer'),
        FunctionTracer = _require10.FunctionTracer;
      var FunctionNode = /*#__PURE__*/function () {
        "use strict";

        function FunctionNode(source, settings) {
          _classCallCheck(this, FunctionNode);
          if (!source && !settings.ast) {
            throw new Error('source parameter is missing');
          }
          settings = settings || {};
          this.source = source;
          this.ast = null;
          this.name = typeof source === 'string' ? settings.isRootKernel ? 'kernel' : settings.name || utils.getFunctionNameFromString(source) : null;
          this.calledFunctions = [];
          this.constants = {};
          this.constantTypes = {};
          this.constantBitRatios = {};
          this.isRootKernel = false;
          this.isSubKernel = false;
          this.debug = null;
          this.functions = null;
          this.identifiers = null;
          this.contexts = null;
          this.functionCalls = null;
          this.states = [];
          this.needsArgumentType = null;
          this.assignArgumentType = null;
          this.lookupReturnType = null;
          this.lookupFunctionArgumentTypes = null;
          this.lookupFunctionArgumentBitRatio = null;
          this.triggerImplyArgumentType = null;
          this.triggerImplyArgumentBitRatio = null;
          this.onNestedFunction = null;
          this.onFunctionCall = null;
          this.optimizeFloatMemory = null;
          this.precision = null;
          this.loopMaxIterations = null;
          this.argumentNames = typeof this.source === 'string' ? utils.getArgumentNamesFromString(this.source) : null;
          this.argumentTypes = [];
          this.argumentSizes = [];
          this.argumentBitRatios = null;
          this.returnType = null;
          this.output = [];
          this.plugins = null;
          this.leadingReturnStatement = null;
          this.followingReturnStatement = null;
          this.dynamicOutput = null;
          this.dynamicArguments = null;
          this.strictTypingChecking = false;
          this.fixIntegerDivisionAccuracy = null;
          if (settings) {
            for (var p in settings) {
              if (!settings.hasOwnProperty(p)) continue;
              if (!this.hasOwnProperty(p)) continue;
              this[p] = settings[p];
            }
          }
          this.literalTypes = {};
          this.validate();
          this._string = null;
          this._internalVariableNames = {};
        }
        _createClass(FunctionNode, [{
          key: "validate",
          value: function validate() {
            if (typeof this.source !== 'string' && !this.ast) {
              throw new Error('this.source not a string');
            }
            if (!this.ast && !utils.isFunctionString(this.source)) {
              throw new Error('this.source not a function string');
            }
            if (!this.name) {
              throw new Error('this.name could not be set');
            }
            if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {
              throw new Error("argumentTypes count of ".concat(this.argumentTypes.length, " exceeds ").concat(this.argumentNames.length));
            }
            if (this.output.length < 1) {
              throw new Error('this.output is not big enough');
            }
          }
        }, {
          key: "isIdentifierConstant",
          value: function isIdentifierConstant(name) {
            if (!this.constants) return false;
            return this.constants.hasOwnProperty(name);
          }
        }, {
          key: "isInput",
          value: function isInput(argumentName) {
            return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';
          }
        }, {
          key: "pushState",
          value: function pushState(state) {
            this.states.push(state);
          }
        }, {
          key: "popState",
          value: function popState(state) {
            if (this.state !== state) {
              throw new Error("Cannot popState ".concat(state, " when in ").concat(this.state));
            }
            this.states.pop();
          }
        }, {
          key: "isState",
          value: function isState(state) {
            return this.state === state;
          }
        }, {
          key: "state",
          get: function get() {
            return this.states[this.states.length - 1];
          }
        }, {
          key: "astMemberExpressionUnroll",
          value: function astMemberExpressionUnroll(ast) {
            if (ast.type === 'Identifier') {
              return ast.name;
            } else if (ast.type === 'ThisExpression') {
              return 'this';
            }
            if (ast.type === 'MemberExpression') {
              if (ast.object && ast.property) {
                if (ast.object.hasOwnProperty('name') && ast.object.name !== 'Math') {
                  return this.astMemberExpressionUnroll(ast.property);
                }
                return this.astMemberExpressionUnroll(ast.object) + '.' + this.astMemberExpressionUnroll(ast.property);
              }
            }
            if (ast.hasOwnProperty('expressions')) {
              var firstExpression = ast.expressions[0];
              if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {
                return this.astMemberExpressionUnroll(ast.expressions[1]);
              }
            }
            throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);
          }
        }, {
          key: "getJsAST",
          value: function getJsAST(inParser) {
            if (this.ast) {
              return this.ast;
            }
            if (typeof this.source === 'object') {
              this.traceFunctionAST(this.source);
              return this.ast = this.source;
            }
            inParser = inParser || acorn;
            if (inParser === null) {
              throw new Error('Missing JS to AST parser');
            }
            var ast = Object.freeze(inParser.parse("const parser_".concat(this.name, " = ").concat(this.source, ";"), {
              locations: true
            }));
            var functionAST = ast.body[0].declarations[0].init;
            this.traceFunctionAST(functionAST);
            if (!ast) {
              throw new Error('Failed to parse JS code');
            }
            return this.ast = functionAST;
          }
        }, {
          key: "traceFunctionAST",
          value: function traceFunctionAST(ast) {
            var _FunctionTracer = new FunctionTracer(ast),
              contexts = _FunctionTracer.contexts,
              declarations = _FunctionTracer.declarations,
              functions = _FunctionTracer.functions,
              identifiers = _FunctionTracer.identifiers,
              functionCalls = _FunctionTracer.functionCalls;
            this.contexts = contexts;
            this.identifiers = identifiers;
            this.functionCalls = functionCalls;
            this.functions = functions;
            for (var i = 0; i < declarations.length; i++) {
              var declaration = declarations[i];
              var _ast = declaration.ast,
                inForLoopInit = declaration.inForLoopInit,
                inForLoopTest = declaration.inForLoopTest;
              var init = _ast.init;
              var dependencies = this.getDependencies(init);
              var valueType = null;
              if (inForLoopInit && inForLoopTest) {
                valueType = 'Integer';
              } else {
                if (init) {
                  var realType = this.getType(init);
                  switch (realType) {
                    case 'Integer':
                    case 'Float':
                    case 'Number':
                      if (init.type === 'MemberExpression') {
                        valueType = realType;
                      } else {
                        valueType = 'Number';
                      }
                      break;
                    case 'LiteralInteger':
                      valueType = 'Number';
                      break;
                    default:
                      valueType = realType;
                  }
                }
              }
              declaration.valueType = valueType;
              declaration.dependencies = dependencies;
              declaration.isSafe = this.isSafeDependencies(dependencies);
            }
            for (var _i9 = 0; _i9 < functions.length; _i9++) {
              this.onNestedFunction(functions[_i9], this.source);
            }
          }
        }, {
          key: "getDeclaration",
          value: function getDeclaration(ast) {
            for (var i = 0; i < this.identifiers.length; i++) {
              var identifier = this.identifiers[i];
              if (ast === identifier.ast) {
                return identifier.declaration;
              }
            }
            return null;
          }
        }, {
          key: "getVariableType",
          value: function getVariableType(ast) {
            if (ast.type !== 'Identifier') {
              throw new Error("ast of ".concat(ast.type, " not \"Identifier\""));
            }
            var type = null;
            var argumentIndex = this.argumentNames.indexOf(ast.name);
            if (argumentIndex === -1) {
              var declaration = this.getDeclaration(ast);
              if (declaration) {
                return declaration.valueType;
              }
            } else {
              var argumentType = this.argumentTypes[argumentIndex];
              if (argumentType) {
                type = argumentType;
              }
            }
            if (!type && this.strictTypingChecking) {
              throw new Error("Declaration of ".concat(name, " not found"));
            }
            return type;
          }
        }, {
          key: "getLookupType",
          value: function getLookupType(type) {
            if (!typeLookupMap.hasOwnProperty(type)) {
              throw new Error("unknown typeLookupMap ".concat(type));
            }
            return typeLookupMap[type];
          }
        }, {
          key: "getConstantType",
          value: function getConstantType(constantName) {
            if (this.constantTypes[constantName]) {
              var type = this.constantTypes[constantName];
              if (type === 'Float') {
                return 'Number';
              } else {
                return type;
              }
            }
            throw new Error("Type for constant \"".concat(constantName, "\" not declared"));
          }
        }, {
          key: "toString",
          value: function toString() {
            if (this._string) return this._string;
            return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();
          }
        }, {
          key: "toJSON",
          value: function toJSON() {
            var settings = {
              source: this.source,
              name: this.name,
              constants: this.constants,
              constantTypes: this.constantTypes,
              isRootKernel: this.isRootKernel,
              isSubKernel: this.isSubKernel,
              debug: this.debug,
              output: this.output,
              loopMaxIterations: this.loopMaxIterations,
              argumentNames: this.argumentNames,
              argumentTypes: this.argumentTypes,
              argumentSizes: this.argumentSizes,
              returnType: this.returnType,
              leadingReturnStatement: this.leadingReturnStatement,
              followingReturnStatement: this.followingReturnStatement
            };
            return {
              ast: this.ast,
              settings: settings
            };
          }
        }, {
          key: "getType",
          value: function getType(ast) {
            if (Array.isArray(ast)) {
              return this.getType(ast[ast.length - 1]);
            }
            switch (ast.type) {
              case 'BlockStatement':
                return this.getType(ast.body);
              case 'ArrayExpression':
                var childType = this.getType(ast.elements[0]);
                switch (childType) {
                  case 'Array(2)':
                  case 'Array(3)':
                  case 'Array(4)':
                    return "Matrix(".concat(ast.elements.length, ")");
                }
                return "Array(".concat(ast.elements.length, ")");
              case 'Literal':
                var literalKey = this.astKey(ast);
                if (this.literalTypes[literalKey]) {
                  return this.literalTypes[literalKey];
                }
                if (Number.isInteger(ast.value)) {
                  return 'LiteralInteger';
                } else if (ast.value === true || ast.value === false) {
                  return 'Boolean';
                } else {
                  return 'Number';
                }
              case 'AssignmentExpression':
                return this.getType(ast.left);
              case 'CallExpression':
                if (this.isAstMathFunction(ast)) {
                  return 'Number';
                }
                if (!ast.callee || !ast.callee.name) {
                  if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {
                    var functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;
                    this.inferArgumentTypesIfNeeded(functionName, ast.arguments);
                    return this.lookupReturnType(functionName, ast, this);
                  }
                  if (this.getVariableSignature(ast.callee, true) === 'this.color') {
                    return null;
                  }
                  if (ast.callee.type === 'MemberExpression' && ast.callee.object && ast.callee.property && ast.callee.property.name && ast.arguments) {
                    var _functionName = ast.callee.property.name;
                    this.inferArgumentTypesIfNeeded(_functionName, ast.arguments);
                    return this.lookupReturnType(_functionName, ast, this);
                  }
                  throw this.astErrorOutput('Unknown call expression', ast);
                }
                if (ast.callee && ast.callee.name) {
                  var _functionName2 = ast.callee.name;
                  this.inferArgumentTypesIfNeeded(_functionName2, ast.arguments);
                  return this.lookupReturnType(_functionName2, ast, this);
                }
                throw this.astErrorOutput("Unhandled getType Type \"".concat(ast.type, "\""), ast);
              case 'LogicalExpression':
                return 'Boolean';
              case 'BinaryExpression':
                switch (ast.operator) {
                  case '%':
                  case '/':
                    if (this.fixIntegerDivisionAccuracy) {
                      return 'Number';
                    } else {
                      break;
                    }
                  case '>':
                  case '<':
                    return 'Boolean';
                  case '&':
                  case '|':
                  case '^':
                  case '<<':
                  case '>>':
                  case '>>>':
                    return 'Integer';
                }
                var type = this.getType(ast.left);
                if (this.isState('skip-literal-correction')) return type;
                if (type === 'LiteralInteger') {
                  var rightType = this.getType(ast.right);
                  if (rightType === 'LiteralInteger') {
                    if (ast.left.value % 1 === 0) {
                      return 'Integer';
                    } else {
                      return 'Float';
                    }
                  }
                  return rightType;
                }
                return typeLookupMap[type] || type;
              case 'UpdateExpression':
                return this.getType(ast.argument);
              case 'UnaryExpression':
                if (ast.operator === '~') {
                  return 'Integer';
                }
                return this.getType(ast.argument);
              case 'VariableDeclaration':
                {
                  var declarations = ast.declarations;
                  var lastType;
                  for (var i = 0; i < declarations.length; i++) {
                    var _declaration = declarations[i];
                    lastType = this.getType(_declaration);
                  }
                  if (!lastType) {
                    throw this.astErrorOutput("Unable to find type for declaration", ast);
                  }
                  return lastType;
                }
              case 'VariableDeclarator':
                var declaration = this.getDeclaration(ast.id);
                if (!declaration) {
                  throw this.astErrorOutput("Unable to find declarator", ast);
                }
                if (!declaration.valueType) {
                  throw this.astErrorOutput("Unable to find declarator valueType", ast);
                }
                return declaration.valueType;
              case 'Identifier':
                if (ast.name === 'Infinity') {
                  return 'Number';
                }
                if (this.isAstVariable(ast)) {
                  var signature = this.getVariableSignature(ast);
                  if (signature === 'value') {
                    return this.getCheckVariableType(ast);
                  }
                }
                var origin = this.findIdentifierOrigin(ast);
                if (origin && origin.init) {
                  return this.getType(origin.init);
                }
                return null;
              case 'ReturnStatement':
                return this.getType(ast.argument);
              case 'MemberExpression':
                if (this.isAstMathFunction(ast)) {
                  switch (ast.property.name) {
                    case 'ceil':
                      return 'Integer';
                    case 'floor':
                      return 'Integer';
                    case 'round':
                      return 'Integer';
                  }
                  return 'Number';
                }
                if (this.isAstVariable(ast)) {
                  var variableSignature = this.getVariableSignature(ast);
                  switch (variableSignature) {
                    case 'value[]':
                      return this.getLookupType(this.getCheckVariableType(ast.object));
                    case 'value[][]':
                      return this.getLookupType(this.getCheckVariableType(ast.object.object));
                    case 'value[][][]':
                      return this.getLookupType(this.getCheckVariableType(ast.object.object.object));
                    case 'value[][][][]':
                      return this.getLookupType(this.getCheckVariableType(ast.object.object.object.object));
                    case 'value.thread.value':
                    case 'this.thread.value':
                      return 'Integer';
                    case 'this.output.value':
                      return this.dynamicOutput ? 'Integer' : 'LiteralInteger';
                    case 'this.constants.value':
                      return this.getConstantType(ast.property.name);
                    case 'this.constants.value[]':
                      return this.getLookupType(this.getConstantType(ast.object.property.name));
                    case 'this.constants.value[][]':
                      return this.getLookupType(this.getConstantType(ast.object.object.property.name));
                    case 'this.constants.value[][][]':
                      return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));
                    case 'this.constants.value[][][][]':
                      return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));
                    case 'fn()[]':
                    case 'fn()[][]':
                    case 'fn()[][][]':
                      return this.getLookupType(this.getType(ast.object));
                    case 'value.value':
                      if (this.isAstMathVariable(ast)) {
                        return 'Number';
                      }
                      switch (ast.property.name) {
                        case 'r':
                        case 'g':
                        case 'b':
                        case 'a':
                          return this.getLookupType(this.getCheckVariableType(ast.object));
                      }
                    case '[][]':
                      return 'Number';
                  }
                  throw this.astErrorOutput('Unhandled getType MemberExpression', ast);
                }
                throw this.astErrorOutput('Unhandled getType MemberExpression', ast);
              case 'ConditionalExpression':
                return this.getType(ast.consequent);
              case 'FunctionDeclaration':
              case 'FunctionExpression':
                var lastReturn = this.findLastReturn(ast.body);
                if (lastReturn) {
                  return this.getType(lastReturn);
                }
                return null;
              case 'IfStatement':
                return this.getType(ast.consequent);
              case 'SequenceExpression':
                return this.getType(ast.expressions[ast.expressions.length - 1]);
              default:
                throw this.astErrorOutput("Unhandled getType Type \"".concat(ast.type, "\""), ast);
            }
          }
        }, {
          key: "getCheckVariableType",
          value: function getCheckVariableType(ast) {
            var type = this.getVariableType(ast);
            if (!type) {
              throw this.astErrorOutput("".concat(ast.type, " is not defined"), ast);
            }
            return type;
          }
        }, {
          key: "inferArgumentTypesIfNeeded",
          value: function inferArgumentTypesIfNeeded(functionName, args) {
            for (var i = 0; i < args.length; i++) {
              if (!this.needsArgumentType(functionName, i)) continue;
              var type = this.getType(args[i]);
              if (!type) {
                throw this.astErrorOutput("Unable to infer argument ".concat(i), args[i]);
              }
              this.assignArgumentType(functionName, i, type);
            }
          }
        }, {
          key: "isAstMathVariable",
          value: function isAstMathVariable(ast) {
            var mathProperties = ['E', 'PI', 'SQRT2', 'SQRT1_2', 'LN2', 'LN10', 'LOG2E', 'LOG10E'];
            return ast.type === 'MemberExpression' && ast.object && ast.object.type === 'Identifier' && ast.object.name === 'Math' && ast.property && ast.property.type === 'Identifier' && mathProperties.indexOf(ast.property.name) > -1;
          }
        }, {
          key: "isAstMathFunction",
          value: function isAstMathFunction(ast) {
            var mathFunctions = ['abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atan2', 'atanh', 'cbrt', 'ceil', 'clz32', 'cos', 'cosh', 'expm1', 'exp', 'floor', 'fround', 'imul', 'log', 'log2', 'log10', 'log1p', 'max', 'min', 'pow', 'random', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'];
            return ast.type === 'CallExpression' && ast.callee && ast.callee.type === 'MemberExpression' && ast.callee.object && ast.callee.object.type === 'Identifier' && ast.callee.object.name === 'Math' && ast.callee.property && ast.callee.property.type === 'Identifier' && mathFunctions.indexOf(ast.callee.property.name) > -1;
          }
        }, {
          key: "isAstVariable",
          value: function isAstVariable(ast) {
            return ast.type === 'Identifier' || ast.type === 'MemberExpression';
          }
        }, {
          key: "isSafe",
          value: function isSafe(ast) {
            return this.isSafeDependencies(this.getDependencies(ast));
          }
        }, {
          key: "isSafeDependencies",
          value: function isSafeDependencies(dependencies) {
            return dependencies && dependencies.every ? dependencies.every(function (dependency) {
              return dependency.isSafe;
            }) : true;
          }
        }, {
          key: "getDependencies",
          value: function getDependencies(ast, dependencies, isNotSafe) {
            if (!dependencies) {
              dependencies = [];
            }
            if (!ast) return null;
            if (Array.isArray(ast)) {
              for (var i = 0; i < ast.length; i++) {
                this.getDependencies(ast[i], dependencies, isNotSafe);
              }
              return dependencies;
            }
            switch (ast.type) {
              case 'AssignmentExpression':
                this.getDependencies(ast.left, dependencies, isNotSafe);
                this.getDependencies(ast.right, dependencies, isNotSafe);
                return dependencies;
              case 'ConditionalExpression':
                this.getDependencies(ast.test, dependencies, isNotSafe);
                this.getDependencies(ast.alternate, dependencies, isNotSafe);
                this.getDependencies(ast.consequent, dependencies, isNotSafe);
                return dependencies;
              case 'Literal':
                dependencies.push({
                  origin: 'literal',
                  value: ast.value,
                  isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)
                });
                break;
              case 'VariableDeclarator':
                return this.getDependencies(ast.init, dependencies, isNotSafe);
              case 'Identifier':
                var declaration = this.getDeclaration(ast);
                if (declaration) {
                  dependencies.push({
                    name: ast.name,
                    origin: 'declaration',
                    isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies)
                  });
                } else if (this.argumentNames.indexOf(ast.name) > -1) {
                  dependencies.push({
                    name: ast.name,
                    origin: 'argument',
                    isSafe: false
                  });
                } else if (this.strictTypingChecking) {
                  throw new Error("Cannot find identifier origin \"".concat(ast.name, "\""));
                }
                break;
              case 'FunctionDeclaration':
                return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);
              case 'ReturnStatement':
                return this.getDependencies(ast.argument, dependencies);
              case 'BinaryExpression':
              case 'LogicalExpression':
                isNotSafe = ast.operator === '/' || ast.operator === '*';
                this.getDependencies(ast.left, dependencies, isNotSafe);
                this.getDependencies(ast.right, dependencies, isNotSafe);
                return dependencies;
              case 'UnaryExpression':
              case 'UpdateExpression':
                return this.getDependencies(ast.argument, dependencies, isNotSafe);
              case 'VariableDeclaration':
                return this.getDependencies(ast.declarations, dependencies, isNotSafe);
              case 'ArrayExpression':
                dependencies.push({
                  origin: 'declaration',
                  isSafe: true
                });
                return dependencies;
              case 'CallExpression':
                dependencies.push({
                  origin: 'function',
                  isSafe: true
                });
                return dependencies;
              case 'MemberExpression':
                var details = this.getMemberExpressionDetails(ast);
                switch (details.signature) {
                  case 'value[]':
                    this.getDependencies(ast.object, dependencies, isNotSafe);
                    break;
                  case 'value[][]':
                    this.getDependencies(ast.object.object, dependencies, isNotSafe);
                    break;
                  case 'value[][][]':
                    this.getDependencies(ast.object.object.object, dependencies, isNotSafe);
                    break;
                  case 'this.output.value':
                    if (this.dynamicOutput) {
                      dependencies.push({
                        name: details.name,
                        origin: 'output',
                        isSafe: false
                      });
                    }
                    break;
                }
                if (details) {
                  if (details.property) {
                    this.getDependencies(details.property, dependencies, isNotSafe);
                  }
                  if (details.xProperty) {
                    this.getDependencies(details.xProperty, dependencies, isNotSafe);
                  }
                  if (details.yProperty) {
                    this.getDependencies(details.yProperty, dependencies, isNotSafe);
                  }
                  if (details.zProperty) {
                    this.getDependencies(details.zProperty, dependencies, isNotSafe);
                  }
                  return dependencies;
                }
              case 'SequenceExpression':
                return this.getDependencies(ast.expressions, dependencies, isNotSafe);
              default:
                throw this.astErrorOutput("Unhandled type ".concat(ast.type, " in getDependencies"), ast);
            }
            return dependencies;
          }
        }, {
          key: "getVariableSignature",
          value: function getVariableSignature(ast, returnRawValue) {
            if (!this.isAstVariable(ast)) {
              throw new Error("ast of type \"".concat(ast.type, "\" is not a variable signature"));
            }
            if (ast.type === 'Identifier') {
              return 'value';
            }
            var signature = [];
            while (true) {
              if (!ast) break;
              if (ast.computed) {
                signature.push('[]');
              } else if (ast.type === 'ThisExpression') {
                signature.unshift('this');
              } else if (ast.property && ast.property.name) {
                if (ast.property.name === 'x' || ast.property.name === 'y' || ast.property.name === 'z') {
                  signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');
                } else if (ast.property.name === 'constants' || ast.property.name === 'thread' || ast.property.name === 'output') {
                  signature.unshift('.' + ast.property.name);
                } else {
                  signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');
                }
              } else if (ast.name) {
                signature.unshift(returnRawValue ? ast.name : 'value');
              } else if (ast.callee && ast.callee.name) {
                signature.unshift(returnRawValue ? ast.callee.name + '()' : 'fn()');
              } else if (ast.elements) {
                signature.unshift('[]');
              } else {
                signature.unshift('unknown');
              }
              ast = ast.object;
            }
            var signatureString = signature.join('');
            if (returnRawValue) {
              return signatureString;
            }
            var allowedExpressions = ['value', 'value[]', 'value[][]', 'value[][][]', 'value[][][][]', 'value.value', 'value.thread.value', 'this.thread.value', 'this.output.value', 'this.constants.value', 'this.constants.value[]', 'this.constants.value[][]', 'this.constants.value[][][]', 'this.constants.value[][][][]', 'fn()[]', 'fn()[][]', 'fn()[][][]', '[][]'];
            if (allowedExpressions.indexOf(signatureString) > -1) {
              return signatureString;
            }
            return null;
          }
        }, {
          key: "build",
          value: function build() {
            return this.toString().length > 0;
          }
        }, {
          key: "astGeneric",
          value: function astGeneric(ast, retArr) {
            if (ast === null) {
              throw this.astErrorOutput('NULL ast', ast);
            } else {
              if (Array.isArray(ast)) {
                for (var i = 0; i < ast.length; i++) {
                  this.astGeneric(ast[i], retArr);
                }
                return retArr;
              }
              switch (ast.type) {
                case 'FunctionDeclaration':
                  return this.astFunctionDeclaration(ast, retArr);
                case 'FunctionExpression':
                  return this.astFunctionExpression(ast, retArr);
                case 'ReturnStatement':
                  return this.astReturnStatement(ast, retArr);
                case 'Literal':
                  return this.astLiteral(ast, retArr);
                case 'BinaryExpression':
                  return this.astBinaryExpression(ast, retArr);
                case 'Identifier':
                  return this.astIdentifierExpression(ast, retArr);
                case 'AssignmentExpression':
                  return this.astAssignmentExpression(ast, retArr);
                case 'ExpressionStatement':
                  return this.astExpressionStatement(ast, retArr);
                case 'EmptyStatement':
                  return this.astEmptyStatement(ast, retArr);
                case 'BlockStatement':
                  return this.astBlockStatement(ast, retArr);
                case 'IfStatement':
                  return this.astIfStatement(ast, retArr);
                case 'SwitchStatement':
                  return this.astSwitchStatement(ast, retArr);
                case 'BreakStatement':
                  return this.astBreakStatement(ast, retArr);
                case 'ContinueStatement':
                  return this.astContinueStatement(ast, retArr);
                case 'ForStatement':
                  return this.astForStatement(ast, retArr);
                case 'WhileStatement':
                  return this.astWhileStatement(ast, retArr);
                case 'DoWhileStatement':
                  return this.astDoWhileStatement(ast, retArr);
                case 'VariableDeclaration':
                  return this.astVariableDeclaration(ast, retArr);
                case 'VariableDeclarator':
                  return this.astVariableDeclarator(ast, retArr);
                case 'ThisExpression':
                  return this.astThisExpression(ast, retArr);
                case 'SequenceExpression':
                  return this.astSequenceExpression(ast, retArr);
                case 'UnaryExpression':
                  return this.astUnaryExpression(ast, retArr);
                case 'UpdateExpression':
                  return this.astUpdateExpression(ast, retArr);
                case 'LogicalExpression':
                  return this.astLogicalExpression(ast, retArr);
                case 'MemberExpression':
                  return this.astMemberExpression(ast, retArr);
                case 'CallExpression':
                  return this.astCallExpression(ast, retArr);
                case 'ArrayExpression':
                  return this.astArrayExpression(ast, retArr);
                case 'DebuggerStatement':
                  return this.astDebuggerStatement(ast, retArr);
                case 'ConditionalExpression':
                  return this.astConditionalExpression(ast, retArr);
              }
              throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);
            }
          }
        }, {
          key: "astErrorOutput",
          value: function astErrorOutput(error, ast) {
            if (typeof this.source !== 'string') {
              return new Error(error);
            }
            var debugString = utils.getAstString(this.source, ast);
            var leadingSource = this.source.substr(ast.start);
            var splitLines = leadingSource.split(/\n/);
            var lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;
            return new Error("".concat(error, " on line ").concat(splitLines.length, ", position ").concat(lineBefore.length, ":\n ").concat(debugString));
          }
        }, {
          key: "astDebuggerStatement",
          value: function astDebuggerStatement(arrNode, retArr) {
            return retArr;
          }
        }, {
          key: "astConditionalExpression",
          value: function astConditionalExpression(ast, retArr) {
            if (ast.type !== 'ConditionalExpression') {
              throw this.astErrorOutput('Not a conditional expression', ast);
            }
            retArr.push('(');
            this.astGeneric(ast.test, retArr);
            retArr.push('?');
            this.astGeneric(ast.consequent, retArr);
            retArr.push(':');
            this.astGeneric(ast.alternate, retArr);
            retArr.push(')');
            return retArr;
          }
        }, {
          key: "astFunction",
          value: function astFunction(ast, retArr) {
            throw new Error("\"astFunction\" not defined on ".concat(this.constructor.name));
          }
        }, {
          key: "astFunctionDeclaration",
          value: function astFunctionDeclaration(ast, retArr) {
            if (this.isChildFunction(ast)) {
              return retArr;
            }
            return this.astFunction(ast, retArr);
          }
        }, {
          key: "astFunctionExpression",
          value: function astFunctionExpression(ast, retArr) {
            if (this.isChildFunction(ast)) {
              return retArr;
            }
            return this.astFunction(ast, retArr);
          }
        }, {
          key: "isChildFunction",
          value: function isChildFunction(ast) {
            for (var i = 0; i < this.functions.length; i++) {
              if (this.functions[i] === ast) {
                return true;
              }
            }
            return false;
          }
        }, {
          key: "astReturnStatement",
          value: function astReturnStatement(ast, retArr) {
            return retArr;
          }
        }, {
          key: "astLiteral",
          value: function astLiteral(ast, retArr) {
            this.literalTypes[this.astKey(ast)] = 'Number';
            return retArr;
          }
        }, {
          key: "astBinaryExpression",
          value: function astBinaryExpression(ast, retArr) {
            return retArr;
          }
        }, {
          key: "astIdentifierExpression",
          value: function astIdentifierExpression(ast, retArr) {
            return retArr;
          }
        }, {
          key: "astAssignmentExpression",
          value: function astAssignmentExpression(ast, retArr) {
            return retArr;
          }
        }, {
          key: "astExpressionStatement",
          value: function astExpressionStatement(esNode, retArr) {
            this.astGeneric(esNode.expression, retArr);
            retArr.push(';');
            return retArr;
          }
        }, {
          key: "astEmptyStatement",
          value: function astEmptyStatement(eNode, retArr) {
            return retArr;
          }
        }, {
          key: "astBlockStatement",
          value: function astBlockStatement(ast, retArr) {
            return retArr;
          }
        }, {
          key: "astIfStatement",
          value: function astIfStatement(ast, retArr) {
            return retArr;
          }
        }, {
          key: "astSwitchStatement",
          value: function astSwitchStatement(ast, retArr) {
            return retArr;
          }
        }, {
          key: "astBreakStatement",
          value: function astBreakStatement(brNode, retArr) {
            retArr.push('break;');
            return retArr;
          }
        }, {
          key: "astContinueStatement",
          value: function astContinueStatement(crNode, retArr) {
            retArr.push('continue;\n');
            return retArr;
          }
        }, {
          key: "astForStatement",
          value: function astForStatement(ast, retArr) {
            return retArr;
          }
        }, {
          key: "astWhileStatement",
          value: function astWhileStatement(ast, retArr) {
            return retArr;
          }
        }, {
          key: "astDoWhileStatement",
          value: function astDoWhileStatement(ast, retArr) {
            return retArr;
          }
        }, {
          key: "astVariableDeclarator",
          value: function astVariableDeclarator(iVarDecNode, retArr) {
            this.astGeneric(iVarDecNode.id, retArr);
            if (iVarDecNode.init !== null) {
              retArr.push('=');
              this.astGeneric(iVarDecNode.init, retArr);
            }
            return retArr;
          }
        }, {
          key: "astThisExpression",
          value: function astThisExpression(ast, retArr) {
            return retArr;
          }
        }, {
          key: "astSequenceExpression",
          value: function astSequenceExpression(sNode, retArr) {
            var expressions = sNode.expressions;
            var sequenceResult = [];
            for (var i = 0; i < expressions.length; i++) {
              var expression = expressions[i];
              var expressionResult = [];
              this.astGeneric(expression, expressionResult);
              sequenceResult.push(expressionResult.join(''));
            }
            if (sequenceResult.length > 1) {
              retArr.push('(', sequenceResult.join(','), ')');
            } else {
              retArr.push(sequenceResult[0]);
            }
            return retArr;
          }
        }, {
          key: "astUnaryExpression",
          value: function astUnaryExpression(uNode, retArr) {
            var unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);
            if (unaryResult) {
              return retArr;
            }
            if (uNode.prefix) {
              retArr.push(uNode.operator);
              this.astGeneric(uNode.argument, retArr);
            } else {
              this.astGeneric(uNode.argument, retArr);
              retArr.push(uNode.operator);
            }
            return retArr;
          }
        }, {
          key: "checkAndUpconvertBitwiseUnary",
          value: function checkAndUpconvertBitwiseUnary(uNode, retArr) {}
        }, {
          key: "astUpdateExpression",
          value: function astUpdateExpression(uNode, retArr) {
            if (uNode.prefix) {
              retArr.push(uNode.operator);
              this.astGeneric(uNode.argument, retArr);
            } else {
              this.astGeneric(uNode.argument, retArr);
              retArr.push(uNode.operator);
            }
            return retArr;
          }
        }, {
          key: "astLogicalExpression",
          value: function astLogicalExpression(logNode, retArr) {
            retArr.push('(');
            this.astGeneric(logNode.left, retArr);
            retArr.push(logNode.operator);
            this.astGeneric(logNode.right, retArr);
            retArr.push(')');
            return retArr;
          }
        }, {
          key: "astMemberExpression",
          value: function astMemberExpression(ast, retArr) {
            return retArr;
          }
        }, {
          key: "astCallExpression",
          value: function astCallExpression(ast, retArr) {
            return retArr;
          }
        }, {
          key: "astArrayExpression",
          value: function astArrayExpression(ast, retArr) {
            return retArr;
          }
        }, {
          key: "getMemberExpressionDetails",
          value: function getMemberExpressionDetails(ast) {
            if (ast.type !== 'MemberExpression') {
              throw this.astErrorOutput("Expression ".concat(ast.type, " not a MemberExpression"), ast);
            }
            var name = null;
            var type = null;
            var variableSignature = this.getVariableSignature(ast);
            switch (variableSignature) {
              case 'value':
                return null;
              case 'value.thread.value':
              case 'this.thread.value':
              case 'this.output.value':
                return {
                  signature: variableSignature,
                  type: 'Integer',
                  name: ast.property.name
                };
              case 'value[]':
                if (typeof ast.object.name !== 'string') {
                  throw this.astErrorOutput('Unexpected expression', ast);
                }
                name = ast.object.name;
                return {
                  name: name,
                  origin: 'user',
                  signature: variableSignature,
                  type: this.getVariableType(ast.object),
                  xProperty: ast.property
                };
              case 'value[][]':
                if (typeof ast.object.object.name !== 'string') {
                  throw this.astErrorOutput('Unexpected expression', ast);
                }
                name = ast.object.object.name;
                return {
                  name: name,
                  origin: 'user',
                  signature: variableSignature,
                  type: this.getVariableType(ast.object.object),
                  yProperty: ast.object.property,
                  xProperty: ast.property
                };
              case 'value[][][]':
                if (typeof ast.object.object.object.name !== 'string') {
                  throw this.astErrorOutput('Unexpected expression', ast);
                }
                name = ast.object.object.object.name;
                return {
                  name: name,
                  origin: 'user',
                  signature: variableSignature,
                  type: this.getVariableType(ast.object.object.object),
                  zProperty: ast.object.object.property,
                  yProperty: ast.object.property,
                  xProperty: ast.property
                };
              case 'value[][][][]':
                if (typeof ast.object.object.object.object.name !== 'string') {
                  throw this.astErrorOutput('Unexpected expression', ast);
                }
                name = ast.object.object.object.object.name;
                return {
                  name: name,
                  origin: 'user',
                  signature: variableSignature,
                  type: this.getVariableType(ast.object.object.object.object),
                  zProperty: ast.object.object.property,
                  yProperty: ast.object.property,
                  xProperty: ast.property
                };
              case 'value.value':
                if (typeof ast.property.name !== 'string') {
                  throw this.astErrorOutput('Unexpected expression', ast);
                }
                if (this.isAstMathVariable(ast)) {
                  name = ast.property.name;
                  return {
                    name: name,
                    origin: 'Math',
                    type: 'Number',
                    signature: variableSignature
                  };
                }
                switch (ast.property.name) {
                  case 'r':
                  case 'g':
                  case 'b':
                  case 'a':
                    name = ast.object.name;
                    return {
                      name: name,
                      property: ast.property.name,
                      origin: 'user',
                      signature: variableSignature,
                      type: 'Number'
                    };
                  default:
                    throw this.astErrorOutput('Unexpected expression', ast);
                }
              case 'this.constants.value':
                if (typeof ast.property.name !== 'string') {
                  throw this.astErrorOutput('Unexpected expression', ast);
                }
                name = ast.property.name;
                type = this.getConstantType(name);
                if (!type) {
                  throw this.astErrorOutput('Constant has no type', ast);
                }
                return {
                  name: name,
                  type: type,
                  origin: 'constants',
                  signature: variableSignature
                };
              case 'this.constants.value[]':
                if (typeof ast.object.property.name !== 'string') {
                  throw this.astErrorOutput('Unexpected expression', ast);
                }
                name = ast.object.property.name;
                type = this.getConstantType(name);
                if (!type) {
                  throw this.astErrorOutput('Constant has no type', ast);
                }
                return {
                  name: name,
                  type: type,
                  origin: 'constants',
                  signature: variableSignature,
                  xProperty: ast.property
                };
              case 'this.constants.value[][]':
                {
                  if (typeof ast.object.object.property.name !== 'string') {
                    throw this.astErrorOutput('Unexpected expression', ast);
                  }
                  name = ast.object.object.property.name;
                  type = this.getConstantType(name);
                  if (!type) {
                    throw this.astErrorOutput('Constant has no type', ast);
                  }
                  return {
                    name: name,
                    type: type,
                    origin: 'constants',
                    signature: variableSignature,
                    yProperty: ast.object.property,
                    xProperty: ast.property
                  };
                }
              case 'this.constants.value[][][]':
                {
                  if (typeof ast.object.object.object.property.name !== 'string') {
                    throw this.astErrorOutput('Unexpected expression', ast);
                  }
                  name = ast.object.object.object.property.name;
                  type = this.getConstantType(name);
                  if (!type) {
                    throw this.astErrorOutput('Constant has no type', ast);
                  }
                  return {
                    name: name,
                    type: type,
                    origin: 'constants',
                    signature: variableSignature,
                    zProperty: ast.object.object.property,
                    yProperty: ast.object.property,
                    xProperty: ast.property
                  };
                }
              case 'fn()[]':
              case 'fn()[][]':
              case '[][]':
                return {
                  signature: variableSignature,
                  property: ast.property
                };
              default:
                throw this.astErrorOutput('Unexpected expression', ast);
            }
          }
        }, {
          key: "findIdentifierOrigin",
          value: function findIdentifierOrigin(astToFind) {
            var stack = [this.ast];
            while (stack.length > 0) {
              var atNode = stack[0];
              if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {
                return atNode;
              }
              stack.shift();
              if (atNode.argument) {
                stack.push(atNode.argument);
              } else if (atNode.body) {
                stack.push(atNode.body);
              } else if (atNode.declarations) {
                stack.push(atNode.declarations);
              } else if (Array.isArray(atNode)) {
                for (var i = 0; i < atNode.length; i++) {
                  stack.push(atNode[i]);
                }
              }
            }
            return null;
          }
        }, {
          key: "findLastReturn",
          value: function findLastReturn(ast) {
            var stack = [ast || this.ast];
            while (stack.length > 0) {
              var atNode = stack.pop();
              if (atNode.type === 'ReturnStatement') {
                return atNode;
              }
              if (atNode.type === 'FunctionDeclaration') {
                continue;
              }
              if (atNode.argument) {
                stack.push(atNode.argument);
              } else if (atNode.body) {
                stack.push(atNode.body);
              } else if (atNode.declarations) {
                stack.push(atNode.declarations);
              } else if (Array.isArray(atNode)) {
                for (var i = 0; i < atNode.length; i++) {
                  stack.push(atNode[i]);
                }
              } else if (atNode.consequent) {
                stack.push(atNode.consequent);
              } else if (atNode.cases) {
                stack.push(atNode.cases);
              }
            }
            return null;
          }
        }, {
          key: "getInternalVariableName",
          value: function getInternalVariableName(name) {
            if (!this._internalVariableNames.hasOwnProperty(name)) {
              this._internalVariableNames[name] = 0;
            }
            this._internalVariableNames[name]++;
            if (this._internalVariableNames[name] === 1) {
              return name;
            }
            return name + this._internalVariableNames[name];
          }
        }, {
          key: "astKey",
          value: function astKey(ast) {
            var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';
            if (!ast.start || !ast.end) throw new Error('AST start and end needed');
            return "".concat(ast.start).concat(separator).concat(ast.end);
          }
        }]);
        return FunctionNode;
      }();
      var typeLookupMap = {
        'Number': 'Number',
        'Float': 'Float',
        'Integer': 'Integer',
        'Array': 'Number',
        'Array(2)': 'Number',
        'Array(3)': 'Number',
        'Array(4)': 'Number',
        'Matrix(2)': 'Number',
        'Matrix(3)': 'Number',
        'Matrix(4)': 'Number',
        'Array2D': 'Number',
        'Array3D': 'Number',
        'Input': 'Number',
        'HTMLCanvas': 'Array(4)',
        'OffscreenCanvas': 'Array(4)',
        'HTMLImage': 'Array(4)',
        'ImageBitmap': 'Array(4)',
        'ImageData': 'Array(4)',
        'HTMLVideo': 'Array(4)',
        'HTMLImageArray': 'Array(4)',
        'NumberTexture': 'Number',
        'MemoryOptimizedNumberTexture': 'Number',
        'Array1D(2)': 'Array(2)',
        'Array1D(3)': 'Array(3)',
        'Array1D(4)': 'Array(4)',
        'Array2D(2)': 'Array(2)',
        'Array2D(3)': 'Array(3)',
        'Array2D(4)': 'Array(4)',
        'Array3D(2)': 'Array(2)',
        'Array3D(3)': 'Array(3)',
        'Array3D(4)': 'Array(4)',
        'ArrayTexture(1)': 'Number',
        'ArrayTexture(2)': 'Array(2)',
        'ArrayTexture(3)': 'Array(3)',
        'ArrayTexture(4)': 'Array(4)'
      };
      module.exports = {
        FunctionNode: FunctionNode
      };
    }, {
      "../utils": 114,
      "./function-tracer": 11,
      "acorn": 1
    }],
    11: [function (require, module, exports) {
      var _require11 = require('../utils'),
        utils = _require11.utils;
      function last(array) {
        return array.length > 0 ? array[array.length - 1] : null;
      }
      var states = {
        trackIdentifiers: 'trackIdentifiers',
        memberExpression: 'memberExpression',
        inForLoopInit: 'inForLoopInit'
      };
      var FunctionTracer = /*#__PURE__*/function () {
        "use strict";

        function FunctionTracer(ast) {
          _classCallCheck(this, FunctionTracer);
          this.runningContexts = [];
          this.functionContexts = [];
          this.contexts = [];
          this.functionCalls = [];
          this.declarations = [];
          this.identifiers = [];
          this.functions = [];
          this.returnStatements = [];
          this.trackedIdentifiers = null;
          this.states = [];
          this.newFunctionContext();
          this.scan(ast);
        }
        _createClass(FunctionTracer, [{
          key: "isState",
          value: function isState(state) {
            return this.states[this.states.length - 1] === state;
          }
        }, {
          key: "hasState",
          value: function hasState(state) {
            return this.states.indexOf(state) > -1;
          }
        }, {
          key: "pushState",
          value: function pushState(state) {
            this.states.push(state);
          }
        }, {
          key: "popState",
          value: function popState(state) {
            if (this.isState(state)) {
              this.states.pop();
            } else {
              throw new Error("Cannot pop the non-active state \"".concat(state, "\""));
            }
          }
        }, {
          key: "currentFunctionContext",
          get: function get() {
            return last(this.functionContexts);
          }
        }, {
          key: "currentContext",
          get: function get() {
            return last(this.runningContexts);
          }
        }, {
          key: "newFunctionContext",
          value: function newFunctionContext() {
            var newContext = {
              '@contextType': 'function'
            };
            this.contexts.push(newContext);
            this.functionContexts.push(newContext);
          }
        }, {
          key: "newContext",
          value: function newContext(run) {
            var newContext = Object.assign({
              '@contextType': 'const/let'
            }, this.currentContext);
            this.contexts.push(newContext);
            this.runningContexts.push(newContext);
            run();
            var currentFunctionContext = this.currentFunctionContext;
            for (var p in currentFunctionContext) {
              if (!currentFunctionContext.hasOwnProperty(p) || newContext.hasOwnProperty(p)) continue;
              newContext[p] = currentFunctionContext[p];
            }
            this.runningContexts.pop();
            return newContext;
          }
        }, {
          key: "useFunctionContext",
          value: function useFunctionContext(run) {
            var functionContext = last(this.functionContexts);
            this.runningContexts.push(functionContext);
            run();
            this.runningContexts.pop();
          }
        }, {
          key: "getIdentifiers",
          value: function getIdentifiers(run) {
            var trackedIdentifiers = this.trackedIdentifiers = [];
            this.pushState(states.trackIdentifiers);
            run();
            this.trackedIdentifiers = null;
            this.popState(states.trackIdentifiers);
            return trackedIdentifiers;
          }
        }, {
          key: "getDeclaration",
          value: function getDeclaration(name) {
            var currentContext = this.currentContext,
              currentFunctionContext = this.currentFunctionContext,
              runningContexts = this.runningContexts;
            var declaration = currentContext[name] || currentFunctionContext[name] || null;
            if (!declaration && currentContext === currentFunctionContext && runningContexts.length > 0) {
              var previousRunningContext = runningContexts[runningContexts.length - 2];
              if (previousRunningContext[name]) {
                return previousRunningContext[name];
              }
            }
            return declaration;
          }
        }, {
          key: "scan",
          value: function scan(ast) {
            var _this4 = this;
            if (!ast) return;
            if (Array.isArray(ast)) {
              for (var i = 0; i < ast.length; i++) {
                this.scan(ast[i]);
              }
              return;
            }
            switch (ast.type) {
              case 'Program':
                this.useFunctionContext(function () {
                  _this4.scan(ast.body);
                });
                break;
              case 'BlockStatement':
                this.newContext(function () {
                  _this4.scan(ast.body);
                });
                break;
              case 'AssignmentExpression':
              case 'LogicalExpression':
                this.scan(ast.left);
                this.scan(ast.right);
                break;
              case 'BinaryExpression':
                this.scan(ast.left);
                this.scan(ast.right);
                break;
              case 'UpdateExpression':
                if (ast.operator === '++') {
                  var declaration = this.getDeclaration(ast.argument.name);
                  if (declaration) {
                    declaration.suggestedType = 'Integer';
                  }
                }
                this.scan(ast.argument);
                break;
              case 'UnaryExpression':
                this.scan(ast.argument);
                break;
              case 'VariableDeclaration':
                if (ast.kind === 'var') {
                  this.useFunctionContext(function () {
                    ast.declarations = utils.normalizeDeclarations(ast);
                    _this4.scan(ast.declarations);
                  });
                } else {
                  ast.declarations = utils.normalizeDeclarations(ast);
                  this.scan(ast.declarations);
                }
                break;
              case 'VariableDeclarator':
                {
                  var currentContext = this.currentContext;
                  var inForLoopInit = this.hasState(states.inForLoopInit);
                  var _declaration2 = {
                    ast: ast,
                    context: currentContext,
                    name: ast.id.name,
                    origin: 'declaration',
                    inForLoopInit: inForLoopInit,
                    inForLoopTest: null,
                    assignable: currentContext === this.currentFunctionContext || !inForLoopInit && !currentContext.hasOwnProperty(ast.id.name),
                    suggestedType: null,
                    valueType: null,
                    dependencies: null,
                    isSafe: null
                  };
                  if (!currentContext[ast.id.name]) {
                    currentContext[ast.id.name] = _declaration2;
                  }
                  this.declarations.push(_declaration2);
                  this.scan(ast.id);
                  this.scan(ast.init);
                  break;
                }
              case 'FunctionExpression':
              case 'FunctionDeclaration':
                if (this.runningContexts.length === 0) {
                  this.scan(ast.body);
                } else {
                  this.functions.push(ast);
                }
                break;
              case 'IfStatement':
                this.scan(ast.test);
                this.scan(ast.consequent);
                if (ast.alternate) this.scan(ast.alternate);
                break;
              case 'ForStatement':
                {
                  var testIdentifiers;
                  var context = this.newContext(function () {
                    _this4.pushState(states.inForLoopInit);
                    _this4.scan(ast.init);
                    _this4.popState(states.inForLoopInit);
                    testIdentifiers = _this4.getIdentifiers(function () {
                      _this4.scan(ast.test);
                    });
                    _this4.scan(ast.update);
                    _this4.newContext(function () {
                      _this4.scan(ast.body);
                    });
                  });
                  if (testIdentifiers) {
                    for (var p in context) {
                      if (p === '@contextType') continue;
                      if (testIdentifiers.indexOf(p) > -1) {
                        context[p].inForLoopTest = true;
                      }
                    }
                  }
                  break;
                }
              case 'DoWhileStatement':
              case 'WhileStatement':
                this.newContext(function () {
                  _this4.scan(ast.body);
                  _this4.scan(ast.test);
                });
                break;
              case 'Identifier':
                {
                  if (this.isState(states.trackIdentifiers)) {
                    this.trackedIdentifiers.push(ast.name);
                  }
                  this.identifiers.push({
                    context: this.currentContext,
                    declaration: this.getDeclaration(ast.name),
                    ast: ast
                  });
                  break;
                }
              case 'ReturnStatement':
                this.returnStatements.push(ast);
                this.scan(ast.argument);
                break;
              case 'MemberExpression':
                this.pushState(states.memberExpression);
                this.scan(ast.object);
                this.scan(ast.property);
                this.popState(states.memberExpression);
                break;
              case 'ExpressionStatement':
                this.scan(ast.expression);
                break;
              case 'SequenceExpression':
                this.scan(ast.expressions);
                break;
              case 'CallExpression':
                this.functionCalls.push({
                  context: this.currentContext,
                  ast: ast
                });
                this.scan(ast.arguments);
                break;
              case 'ArrayExpression':
                this.scan(ast.elements);
                break;
              case 'ConditionalExpression':
                this.scan(ast.test);
                this.scan(ast.alternate);
                this.scan(ast.consequent);
                break;
              case 'SwitchStatement':
                this.scan(ast.discriminant);
                this.scan(ast.cases);
                break;
              case 'SwitchCase':
                this.scan(ast.test);
                this.scan(ast.consequent);
                break;
              case 'ThisExpression':
              case 'Literal':
              case 'DebuggerStatement':
              case 'EmptyStatement':
              case 'BreakStatement':
              case 'ContinueStatement':
                break;
              default:
                throw new Error("unhandled type \"".concat(ast.type, "\""));
            }
          }
        }]);
        return FunctionTracer;
      }();
      module.exports = {
        FunctionTracer: FunctionTracer
      };
    }, {
      "../utils": 114
    }],
    12: [function (require, module, exports) {
      var _require12 = require('gl-wiretap'),
        glWiretap = _require12.glWiretap;
      var _require13 = require('../../utils'),
        utils = _require13.utils;
      function toStringWithoutUtils(fn) {
        return fn.toString().replace('=>', '').replace(/^function /, '').replace(/utils[.]/g, '/*utils.*/');
      }
      function glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {
        if (!originKernel.built) {
          originKernel.build.apply(originKernel, args);
        }
        args = args ? Array.from(args).map(function (arg) {
          switch (typeof arg) {
            case 'boolean':
              return new Boolean(arg);
            case 'number':
              return new Number(arg);
            default:
              return arg;
          }
        }) : null;
        var uploadedValues = [];
        var postResult = [];
        var context = glWiretap(originKernel.context, {
          useTrackablePrimitives: true,
          onReadPixels: function onReadPixels(targetName) {
            if (kernel.subKernels) {
              if (!subKernelsResultVariableSetup) {
                postResult.push("    const result = { result: ".concat(getRenderString(targetName, kernel), " };"));
                subKernelsResultVariableSetup = true;
              } else {
                var property = kernel.subKernels[subKernelsResultIndex++].property;
                postResult.push("    result".concat(isNaN(property) ? '.' + property : "[".concat(property, "]"), " = ").concat(getRenderString(targetName, kernel), ";"));
              }
              if (subKernelsResultIndex === kernel.subKernels.length) {
                postResult.push('    return result;');
              }
              return;
            }
            if (targetName) {
              postResult.push("    return ".concat(getRenderString(targetName, kernel), ";"));
            } else {
              postResult.push("    return null;");
            }
          },
          onUnrecognizedArgumentLookup: function onUnrecognizedArgumentLookup(argument) {
            var argumentName = findKernelValue(argument, kernel.kernelArguments, [], context, uploadedValues);
            if (argumentName) {
              return argumentName;
            }
            var constantName = findKernelValue(argument, kernel.kernelConstants, constants ? Object.keys(constants).map(function (key) {
              return constants[key];
            }) : [], context, uploadedValues);
            if (constantName) {
              return constantName;
            }
            return null;
          }
        });
        var subKernelsResultVariableSetup = false;
        var subKernelsResultIndex = 0;
        var source = originKernel.source,
          canvas = originKernel.canvas,
          output = originKernel.output,
          pipeline = originKernel.pipeline,
          graphical = originKernel.graphical,
          loopMaxIterations = originKernel.loopMaxIterations,
          constants = originKernel.constants,
          optimizeFloatMemory = originKernel.optimizeFloatMemory,
          precision = originKernel.precision,
          fixIntegerDivisionAccuracy = originKernel.fixIntegerDivisionAccuracy,
          functions = originKernel.functions,
          nativeFunctions = originKernel.nativeFunctions,
          subKernels = originKernel.subKernels,
          immutable = originKernel.immutable,
          argumentTypes = originKernel.argumentTypes,
          constantTypes = originKernel.constantTypes,
          kernelArguments = originKernel.kernelArguments,
          kernelConstants = originKernel.kernelConstants,
          tactic = originKernel.tactic;
        var kernel = new Kernel(source, {
          canvas: canvas,
          context: context,
          checkContext: false,
          output: output,
          pipeline: pipeline,
          graphical: graphical,
          loopMaxIterations: loopMaxIterations,
          constants: constants,
          optimizeFloatMemory: optimizeFloatMemory,
          precision: precision,
          fixIntegerDivisionAccuracy: fixIntegerDivisionAccuracy,
          functions: functions,
          nativeFunctions: nativeFunctions,
          subKernels: subKernels,
          immutable: immutable,
          argumentTypes: argumentTypes,
          constantTypes: constantTypes,
          tactic: tactic
        });
        var result = [];
        context.setIndent(2);
        kernel.build.apply(kernel, args);
        result.push(context.toString());
        context.reset();
        kernel.kernelArguments.forEach(function (kernelArgument, i) {
          switch (kernelArgument.type) {
            case 'Integer':
            case 'Boolean':
            case 'Number':
            case 'Float':
            case 'Array':
            case 'Array(2)':
            case 'Array(3)':
            case 'Array(4)':
            case 'HTMLCanvas':
            case 'HTMLImage':
            case 'HTMLVideo':
              context.insertVariable("uploadValue_".concat(kernelArgument.name), kernelArgument.uploadValue);
              break;
            case 'HTMLImageArray':
              for (var imageIndex = 0; imageIndex < args[i].length; imageIndex++) {
                var arg = args[i];
                context.insertVariable("uploadValue_".concat(kernelArgument.name, "[").concat(imageIndex, "]"), arg[imageIndex]);
              }
              break;
            case 'Input':
              context.insertVariable("uploadValue_".concat(kernelArgument.name), kernelArgument.uploadValue);
              break;
            case 'MemoryOptimizedNumberTexture':
            case 'NumberTexture':
            case 'Array1D(2)':
            case 'Array1D(3)':
            case 'Array1D(4)':
            case 'Array2D(2)':
            case 'Array2D(3)':
            case 'Array2D(4)':
            case 'Array3D(2)':
            case 'Array3D(3)':
            case 'Array3D(4)':
            case 'ArrayTexture(1)':
            case 'ArrayTexture(2)':
            case 'ArrayTexture(3)':
            case 'ArrayTexture(4)':
              context.insertVariable("uploadValue_".concat(kernelArgument.name), args[i].texture);
              break;
            default:
              throw new Error("unhandled kernelArgumentType insertion for glWiretap of type ".concat(kernelArgument.type));
          }
        });
        result.push('/** start of injected functions **/');
        result.push("function ".concat(toStringWithoutUtils(utils.flattenTo)));
        result.push("function ".concat(toStringWithoutUtils(utils.flatten2dArrayTo)));
        result.push("function ".concat(toStringWithoutUtils(utils.flatten3dArrayTo)));
        result.push("function ".concat(toStringWithoutUtils(utils.flatten4dArrayTo)));
        result.push("function ".concat(toStringWithoutUtils(utils.isArray)));
        if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {
          result.push("  const renderOutput = function ".concat(toStringWithoutUtils(kernel.formatValues), ";"));
        }
        result.push('/** end of injected functions **/');
        result.push("  const innerKernel = function (".concat(kernel.kernelArguments.map(function (kernelArgument) {
          return kernelArgument.varName;
        }).join(', '), ") {"));
        context.setIndent(4);
        kernel.run.apply(kernel, args);
        if (kernel.renderKernels) {
          kernel.renderKernels();
        } else if (kernel.renderOutput) {
          kernel.renderOutput();
        }
        result.push('    /** start setup uploads for kernel values **/');
        kernel.kernelArguments.forEach(function (kernelArgument) {
          result.push('    ' + kernelArgument.getStringValueHandler().split('\n').join('\n    '));
        });
        result.push('    /** end setup uploads for kernel values **/');
        result.push(context.toString());
        if (kernel.renderOutput === kernel.renderTexture) {
          context.reset();
          var framebufferName = context.getContextVariableName(kernel.framebuffer);
          if (kernel.renderKernels) {
            var results = kernel.renderKernels();
            var textureName = context.getContextVariableName(kernel.texture.texture);
            result.push("    return {\n      result: {\n        texture: ".concat(textureName, ",\n        type: '").concat(results.result.type, "',\n        toArray: ").concat(getToArrayString(results.result, textureName, framebufferName), "\n      },"));
            var _subKernels = kernel.subKernels,
              mappedTextures = kernel.mappedTextures;
            for (var i = 0; i < _subKernels.length; i++) {
              var texture = mappedTextures[i];
              var subKernel = _subKernels[i];
              var subKernelResult = results[subKernel.property];
              var subKernelTextureName = context.getContextVariableName(texture.texture);
              result.push("\n      ".concat(subKernel.property, ": {\n        texture: ").concat(subKernelTextureName, ",\n        type: '").concat(subKernelResult.type, "',\n        toArray: ").concat(getToArrayString(subKernelResult, subKernelTextureName, framebufferName), "\n      },"));
            }
            result.push("    };");
          } else {
            var rendered = kernel.renderOutput();
            var _textureName = context.getContextVariableName(kernel.texture.texture);
            result.push("    return {\n        texture: ".concat(_textureName, ",\n        type: '").concat(rendered.type, "',\n        toArray: ").concat(getToArrayString(rendered, _textureName, framebufferName), "\n      };"));
          }
        }
        result.push("    ".concat(destroyContextString ? '\n' + destroyContextString + '    ' : ''));
        result.push(postResult.join('\n'));
        result.push('  };');
        if (kernel.graphical) {
          result.push(getGetPixelsString(kernel));
          result.push("  innerKernel.getPixels = getPixels;");
        }
        result.push('  return innerKernel;');
        var constantsUpload = [];
        kernelConstants.forEach(function (kernelConstant) {
          constantsUpload.push("".concat(kernelConstant.getStringValueHandler()));
        });
        return "function kernel(settings) {\n  const { context, constants } = settings;\n  ".concat(constantsUpload.join(''), "\n  ").concat(setupContextString ? setupContextString : '', "\n").concat(result.join('\n'), "\n}");
      }
      function getRenderString(targetName, kernel) {
        var readBackValue = kernel.precision === 'single' ? targetName : "new Float32Array(".concat(targetName, ".buffer)");
        if (kernel.output[2]) {
          return "renderOutput(".concat(readBackValue, ", ").concat(kernel.output[0], ", ").concat(kernel.output[1], ", ").concat(kernel.output[2], ")");
        }
        if (kernel.output[1]) {
          return "renderOutput(".concat(readBackValue, ", ").concat(kernel.output[0], ", ").concat(kernel.output[1], ")");
        }
        return "renderOutput(".concat(readBackValue, ", ").concat(kernel.output[0], ")");
      }
      function getGetPixelsString(kernel) {
        var getPixels = kernel.getPixels.toString();
        var useFunctionKeyword = !/^function/.test(getPixels);
        return utils.flattenFunctionToString("".concat(useFunctionKeyword ? 'function ' : '').concat(getPixels), {
          findDependency: function findDependency(object, name) {
            if (object === 'utils') {
              return "const ".concat(name, " = ").concat(utils[name].toString(), ";");
            }
            return null;
          },
          thisLookup: function thisLookup(property) {
            if (property === 'context') {
              return null;
            }
            if (kernel.hasOwnProperty(property)) {
              return JSON.stringify(kernel[property]);
            }
            throw new Error("unhandled thisLookup ".concat(property));
          }
        });
      }
      function getToArrayString(kernelResult, textureName, framebufferName) {
        var toArray = kernelResult.toArray.toString();
        var useFunctionKeyword = !/^function/.test(toArray);
        var flattenedFunctions = utils.flattenFunctionToString("".concat(useFunctionKeyword ? 'function ' : '').concat(toArray), {
          findDependency: function findDependency(object, name) {
            if (object === 'utils') {
              return "const ".concat(name, " = ").concat(utils[name].toString(), ";");
            } else if (object === 'this') {
              if (name === 'framebuffer') {
                return '';
              }
              return "".concat(useFunctionKeyword ? 'function ' : '').concat(kernelResult[name].toString());
            } else {
              throw new Error('unhandled fromObject');
            }
          },
          thisLookup: function thisLookup(property, isDeclaration) {
            if (property === 'texture') {
              return textureName;
            }
            if (property === 'context') {
              if (isDeclaration) return null;
              return 'gl';
            }
            if (kernelResult.hasOwnProperty(property)) {
              return JSON.stringify(kernelResult[property]);
            }
            throw new Error("unhandled thisLookup ".concat(property));
          }
        });
        return "() => {\n  function framebuffer() { return ".concat(framebufferName, "; };\n  ").concat(flattenedFunctions, "\n  return toArray();\n  }");
      }
      function findKernelValue(argument, kernelValues, values, context, uploadedValues) {
        if (argument === null) return null;
        if (kernelValues === null) return null;
        switch (typeof argument) {
          case 'boolean':
          case 'number':
            return null;
        }
        if (typeof HTMLImageElement !== 'undefined' && argument instanceof HTMLImageElement) {
          for (var i = 0; i < kernelValues.length; i++) {
            var kernelValue = kernelValues[i];
            if (kernelValue.type !== 'HTMLImageArray' && kernelValue) continue;
            if (kernelValue.uploadValue !== argument) continue;
            var variableIndex = values[i].indexOf(argument);
            if (variableIndex === -1) continue;
            var variableName = "uploadValue_".concat(kernelValue.name, "[").concat(variableIndex, "]");
            context.insertVariable(variableName, argument);
            return variableName;
          }
        }
        for (var _i10 = 0; _i10 < kernelValues.length; _i10++) {
          var _kernelValue = kernelValues[_i10];
          if (argument !== _kernelValue.uploadValue) continue;
          var variable = "uploadValue_".concat(_kernelValue.name);
          context.insertVariable(variable, _kernelValue);
          return variable;
        }
        return null;
      }
      module.exports = {
        glKernelString: glKernelString
      };
    }, {
      "../../utils": 114,
      "gl-wiretap": 3
    }],
    13: [function (require, module, exports) {
      var _require14 = require('../kernel'),
        Kernel = _require14.Kernel;
      var _require15 = require('../../utils'),
        utils = _require15.utils;
      var _require16 = require('./texture/array-2-float'),
        GLTextureArray2Float = _require16.GLTextureArray2Float;
      var _require17 = require('./texture/array-2-float-2d'),
        GLTextureArray2Float2D = _require17.GLTextureArray2Float2D;
      var _require18 = require('./texture/array-2-float-3d'),
        GLTextureArray2Float3D = _require18.GLTextureArray2Float3D;
      var _require19 = require('./texture/array-3-float'),
        GLTextureArray3Float = _require19.GLTextureArray3Float;
      var _require20 = require('./texture/array-3-float-2d'),
        GLTextureArray3Float2D = _require20.GLTextureArray3Float2D;
      var _require21 = require('./texture/array-3-float-3d'),
        GLTextureArray3Float3D = _require21.GLTextureArray3Float3D;
      var _require22 = require('./texture/array-4-float'),
        GLTextureArray4Float = _require22.GLTextureArray4Float;
      var _require23 = require('./texture/array-4-float-2d'),
        GLTextureArray4Float2D = _require23.GLTextureArray4Float2D;
      var _require24 = require('./texture/array-4-float-3d'),
        GLTextureArray4Float3D = _require24.GLTextureArray4Float3D;
      var _require25 = require('./texture/float'),
        GLTextureFloat = _require25.GLTextureFloat;
      var _require26 = require('./texture/float-2d'),
        GLTextureFloat2D = _require26.GLTextureFloat2D;
      var _require27 = require('./texture/float-3d'),
        GLTextureFloat3D = _require27.GLTextureFloat3D;
      var _require28 = require('./texture/memory-optimized'),
        GLTextureMemoryOptimized = _require28.GLTextureMemoryOptimized;
      var _require29 = require('./texture/memory-optimized-2d'),
        GLTextureMemoryOptimized2D = _require29.GLTextureMemoryOptimized2D;
      var _require30 = require('./texture/memory-optimized-3d'),
        GLTextureMemoryOptimized3D = _require30.GLTextureMemoryOptimized3D;
      var _require31 = require('./texture/unsigned'),
        GLTextureUnsigned = _require31.GLTextureUnsigned;
      var _require32 = require('./texture/unsigned-2d'),
        GLTextureUnsigned2D = _require32.GLTextureUnsigned2D;
      var _require33 = require('./texture/unsigned-3d'),
        GLTextureUnsigned3D = _require33.GLTextureUnsigned3D;
      var _require34 = require('./texture/graphical'),
        GLTextureGraphical = _require34.GLTextureGraphical;
      var GLKernel = /*#__PURE__*/function (_Kernel2) {
        "use strict";

        _inherits(GLKernel, _Kernel2);
        var _super3 = _createSuper(GLKernel);
        function GLKernel(source, settings) {
          var _this5;
          _classCallCheck(this, GLKernel);
          _this5 = _super3.call(this, source, settings);
          _this5.transferValues = null;
          _this5.formatValues = null;
          _this5.TextureConstructor = null;
          _this5.renderOutput = null;
          _this5.renderRawOutput = null;
          _this5.texSize = null;
          _this5.translatedSource = null;
          _this5.compiledFragmentShader = null;
          _this5.compiledVertexShader = null;
          _this5.switchingKernels = null;
          _this5._textureSwitched = null;
          _this5._mappedTextureSwitched = null;
          return _this5;
        }
        _createClass(GLKernel, [{
          key: "setFixIntegerDivisionAccuracy",
          value: function setFixIntegerDivisionAccuracy(fix) {
            this.fixIntegerDivisionAccuracy = fix;
            return this;
          }
        }, {
          key: "setPrecision",
          value: function setPrecision(flag) {
            this.precision = flag;
            return this;
          }
        }, {
          key: "setFloatTextures",
          value: function setFloatTextures(flag) {
            utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');
            this.floatTextures = flag;
            return this;
          }
        }, {
          key: "checkTextureSize",
          value: function checkTextureSize() {
            var features = this.constructor.features;
            if (this.texSize[0] > features.maxTextureSize || this.texSize[1] > features.maxTextureSize) {
              throw new Error("Texture size [".concat(this.texSize[0], ",").concat(this.texSize[1], "] generated by kernel is larger than supported size [").concat(features.maxTextureSize, ",").concat(features.maxTextureSize, "]"));
            }
          }
        }, {
          key: "translateSource",
          value: function translateSource() {
            throw new Error("\"translateSource\" not defined on ".concat(this.constructor.name));
          }
        }, {
          key: "pickRenderStrategy",
          value: function pickRenderStrategy(args) {
            if (this.graphical) {
              this.renderRawOutput = this.readPackedPixelsToUint8Array;
              this.transferValues = function (pixels) {
                return pixels;
              };
              this.TextureConstructor = GLTextureGraphical;
              return null;
            }
            if (this.precision === 'unsigned') {
              this.renderRawOutput = this.readPackedPixelsToUint8Array;
              this.transferValues = this.readPackedPixelsToFloat32Array;
              if (this.pipeline) {
                this.renderOutput = this.renderTexture;
                if (this.subKernels !== null) {
                  this.renderKernels = this.renderKernelsToTextures;
                }
                switch (this.returnType) {
                  case 'LiteralInteger':
                  case 'Float':
                  case 'Number':
                  case 'Integer':
                    if (this.output[2] > 0) {
                      this.TextureConstructor = GLTextureUnsigned3D;
                      return null;
                    } else if (this.output[1] > 0) {
                      this.TextureConstructor = GLTextureUnsigned2D;
                      return null;
                    } else {
                      this.TextureConstructor = GLTextureUnsigned;
                      return null;
                    }
                  case 'Array(2)':
                  case 'Array(3)':
                  case 'Array(4)':
                    return this.requestFallback(args);
                }
              } else {
                if (this.subKernels !== null) {
                  this.renderKernels = this.renderKernelsToArrays;
                }
                switch (this.returnType) {
                  case 'LiteralInteger':
                  case 'Float':
                  case 'Number':
                  case 'Integer':
                    this.renderOutput = this.renderValues;
                    if (this.output[2] > 0) {
                      this.TextureConstructor = GLTextureUnsigned3D;
                      this.formatValues = utils.erect3DPackedFloat;
                      return null;
                    } else if (this.output[1] > 0) {
                      this.TextureConstructor = GLTextureUnsigned2D;
                      this.formatValues = utils.erect2DPackedFloat;
                      return null;
                    } else {
                      this.TextureConstructor = GLTextureUnsigned;
                      this.formatValues = utils.erectPackedFloat;
                      return null;
                    }
                  case 'Array(2)':
                  case 'Array(3)':
                  case 'Array(4)':
                    return this.requestFallback(args);
                }
              }
            } else if (this.precision === 'single') {
              this.renderRawOutput = this.readFloatPixelsToFloat32Array;
              this.transferValues = this.readFloatPixelsToFloat32Array;
              if (this.pipeline) {
                this.renderOutput = this.renderTexture;
                if (this.subKernels !== null) {
                  this.renderKernels = this.renderKernelsToTextures;
                }
                switch (this.returnType) {
                  case 'LiteralInteger':
                  case 'Float':
                  case 'Number':
                  case 'Integer':
                    {
                      if (this.optimizeFloatMemory) {
                        if (this.output[2] > 0) {
                          this.TextureConstructor = GLTextureMemoryOptimized3D;
                          return null;
                        } else if (this.output[1] > 0) {
                          this.TextureConstructor = GLTextureMemoryOptimized2D;
                          return null;
                        } else {
                          this.TextureConstructor = GLTextureMemoryOptimized;
                          return null;
                        }
                      } else {
                        if (this.output[2] > 0) {
                          this.TextureConstructor = GLTextureFloat3D;
                          return null;
                        } else if (this.output[1] > 0) {
                          this.TextureConstructor = GLTextureFloat2D;
                          return null;
                        } else {
                          this.TextureConstructor = GLTextureFloat;
                          return null;
                        }
                      }
                    }
                  case 'Array(2)':
                    {
                      if (this.output[2] > 0) {
                        this.TextureConstructor = GLTextureArray2Float3D;
                        return null;
                      } else if (this.output[1] > 0) {
                        this.TextureConstructor = GLTextureArray2Float2D;
                        return null;
                      } else {
                        this.TextureConstructor = GLTextureArray2Float;
                        return null;
                      }
                    }
                  case 'Array(3)':
                    {
                      if (this.output[2] > 0) {
                        this.TextureConstructor = GLTextureArray3Float3D;
                        return null;
                      } else if (this.output[1] > 0) {
                        this.TextureConstructor = GLTextureArray3Float2D;
                        return null;
                      } else {
                        this.TextureConstructor = GLTextureArray3Float;
                        return null;
                      }
                    }
                  case 'Array(4)':
                    {
                      if (this.output[2] > 0) {
                        this.TextureConstructor = GLTextureArray4Float3D;
                        return null;
                      } else if (this.output[1] > 0) {
                        this.TextureConstructor = GLTextureArray4Float2D;
                        return null;
                      } else {
                        this.TextureConstructor = GLTextureArray4Float;
                        return null;
                      }
                    }
                }
              }
              this.renderOutput = this.renderValues;
              if (this.subKernels !== null) {
                this.renderKernels = this.renderKernelsToArrays;
              }
              if (this.optimizeFloatMemory) {
                switch (this.returnType) {
                  case 'LiteralInteger':
                  case 'Float':
                  case 'Number':
                  case 'Integer':
                    {
                      if (this.output[2] > 0) {
                        this.TextureConstructor = GLTextureMemoryOptimized3D;
                        this.formatValues = utils.erectMemoryOptimized3DFloat;
                        return null;
                      } else if (this.output[1] > 0) {
                        this.TextureConstructor = GLTextureMemoryOptimized2D;
                        this.formatValues = utils.erectMemoryOptimized2DFloat;
                        return null;
                      } else {
                        this.TextureConstructor = GLTextureMemoryOptimized;
                        this.formatValues = utils.erectMemoryOptimizedFloat;
                        return null;
                      }
                    }
                  case 'Array(2)':
                    {
                      if (this.output[2] > 0) {
                        this.TextureConstructor = GLTextureArray2Float3D;
                        this.formatValues = utils.erect3DArray2;
                        return null;
                      } else if (this.output[1] > 0) {
                        this.TextureConstructor = GLTextureArray2Float2D;
                        this.formatValues = utils.erect2DArray2;
                        return null;
                      } else {
                        this.TextureConstructor = GLTextureArray2Float;
                        this.formatValues = utils.erectArray2;
                        return null;
                      }
                    }
                  case 'Array(3)':
                    {
                      if (this.output[2] > 0) {
                        this.TextureConstructor = GLTextureArray3Float3D;
                        this.formatValues = utils.erect3DArray3;
                        return null;
                      } else if (this.output[1] > 0) {
                        this.TextureConstructor = GLTextureArray3Float2D;
                        this.formatValues = utils.erect2DArray3;
                        return null;
                      } else {
                        this.TextureConstructor = GLTextureArray3Float;
                        this.formatValues = utils.erectArray3;
                        return null;
                      }
                    }
                  case 'Array(4)':
                    {
                      if (this.output[2] > 0) {
                        this.TextureConstructor = GLTextureArray4Float3D;
                        this.formatValues = utils.erect3DArray4;
                        return null;
                      } else if (this.output[1] > 0) {
                        this.TextureConstructor = GLTextureArray4Float2D;
                        this.formatValues = utils.erect2DArray4;
                        return null;
                      } else {
                        this.TextureConstructor = GLTextureArray4Float;
                        this.formatValues = utils.erectArray4;
                        return null;
                      }
                    }
                }
              } else {
                switch (this.returnType) {
                  case 'LiteralInteger':
                  case 'Float':
                  case 'Number':
                  case 'Integer':
                    {
                      if (this.output[2] > 0) {
                        this.TextureConstructor = GLTextureFloat3D;
                        this.formatValues = utils.erect3DFloat;
                        return null;
                      } else if (this.output[1] > 0) {
                        this.TextureConstructor = GLTextureFloat2D;
                        this.formatValues = utils.erect2DFloat;
                        return null;
                      } else {
                        this.TextureConstructor = GLTextureFloat;
                        this.formatValues = utils.erectFloat;
                        return null;
                      }
                    }
                  case 'Array(2)':
                    {
                      if (this.output[2] > 0) {
                        this.TextureConstructor = GLTextureArray2Float3D;
                        this.formatValues = utils.erect3DArray2;
                        return null;
                      } else if (this.output[1] > 0) {
                        this.TextureConstructor = GLTextureArray2Float2D;
                        this.formatValues = utils.erect2DArray2;
                        return null;
                      } else {
                        this.TextureConstructor = GLTextureArray2Float;
                        this.formatValues = utils.erectArray2;
                        return null;
                      }
                    }
                  case 'Array(3)':
                    {
                      if (this.output[2] > 0) {
                        this.TextureConstructor = GLTextureArray3Float3D;
                        this.formatValues = utils.erect3DArray3;
                        return null;
                      } else if (this.output[1] > 0) {
                        this.TextureConstructor = GLTextureArray3Float2D;
                        this.formatValues = utils.erect2DArray3;
                        return null;
                      } else {
                        this.TextureConstructor = GLTextureArray3Float;
                        this.formatValues = utils.erectArray3;
                        return null;
                      }
                    }
                  case 'Array(4)':
                    {
                      if (this.output[2] > 0) {
                        this.TextureConstructor = GLTextureArray4Float3D;
                        this.formatValues = utils.erect3DArray4;
                        return null;
                      } else if (this.output[1] > 0) {
                        this.TextureConstructor = GLTextureArray4Float2D;
                        this.formatValues = utils.erect2DArray4;
                        return null;
                      } else {
                        this.TextureConstructor = GLTextureArray4Float;
                        this.formatValues = utils.erectArray4;
                        return null;
                      }
                    }
                }
              }
            } else {
              throw new Error("unhandled precision of \"".concat(this.precision, "\""));
            }
            throw new Error("unhandled return type \"".concat(this.returnType, "\""));
          }
        }, {
          key: "getKernelString",
          value: function getKernelString() {
            throw new Error("abstract method call");
          }
        }, {
          key: "getMainResultTexture",
          value: function getMainResultTexture() {
            switch (this.returnType) {
              case 'LiteralInteger':
              case 'Float':
              case 'Integer':
              case 'Number':
                return this.getMainResultNumberTexture();
              case 'Array(2)':
                return this.getMainResultArray2Texture();
              case 'Array(3)':
                return this.getMainResultArray3Texture();
              case 'Array(4)':
                return this.getMainResultArray4Texture();
              default:
                throw new Error("unhandled returnType type ".concat(this.returnType));
            }
          }
        }, {
          key: "getMainResultKernelNumberTexture",
          value: function getMainResultKernelNumberTexture() {
            throw new Error("abstract method call");
          }
        }, {
          key: "getMainResultSubKernelNumberTexture",
          value: function getMainResultSubKernelNumberTexture() {
            throw new Error("abstract method call");
          }
        }, {
          key: "getMainResultKernelArray2Texture",
          value: function getMainResultKernelArray2Texture() {
            throw new Error("abstract method call");
          }
        }, {
          key: "getMainResultSubKernelArray2Texture",
          value: function getMainResultSubKernelArray2Texture() {
            throw new Error("abstract method call");
          }
        }, {
          key: "getMainResultKernelArray3Texture",
          value: function getMainResultKernelArray3Texture() {
            throw new Error("abstract method call");
          }
        }, {
          key: "getMainResultSubKernelArray3Texture",
          value: function getMainResultSubKernelArray3Texture() {
            throw new Error("abstract method call");
          }
        }, {
          key: "getMainResultKernelArray4Texture",
          value: function getMainResultKernelArray4Texture() {
            throw new Error("abstract method call");
          }
        }, {
          key: "getMainResultSubKernelArray4Texture",
          value: function getMainResultSubKernelArray4Texture() {
            throw new Error("abstract method call");
          }
        }, {
          key: "getMainResultGraphical",
          value: function getMainResultGraphical() {
            throw new Error("abstract method call");
          }
        }, {
          key: "getMainResultMemoryOptimizedFloats",
          value: function getMainResultMemoryOptimizedFloats() {
            throw new Error("abstract method call");
          }
        }, {
          key: "getMainResultPackedPixels",
          value: function getMainResultPackedPixels() {
            throw new Error("abstract method call");
          }
        }, {
          key: "getMainResultString",
          value: function getMainResultString() {
            if (this.graphical) {
              return this.getMainResultGraphical();
            } else if (this.precision === 'single') {
              if (this.optimizeFloatMemory) {
                return this.getMainResultMemoryOptimizedFloats();
              }
              return this.getMainResultTexture();
            } else {
              return this.getMainResultPackedPixels();
            }
          }
        }, {
          key: "getMainResultNumberTexture",
          value: function getMainResultNumberTexture() {
            return utils.linesToString(this.getMainResultKernelNumberTexture()) + utils.linesToString(this.getMainResultSubKernelNumberTexture());
          }
        }, {
          key: "getMainResultArray2Texture",
          value: function getMainResultArray2Texture() {
            return utils.linesToString(this.getMainResultKernelArray2Texture()) + utils.linesToString(this.getMainResultSubKernelArray2Texture());
          }
        }, {
          key: "getMainResultArray3Texture",
          value: function getMainResultArray3Texture() {
            return utils.linesToString(this.getMainResultKernelArray3Texture()) + utils.linesToString(this.getMainResultSubKernelArray3Texture());
          }
        }, {
          key: "getMainResultArray4Texture",
          value: function getMainResultArray4Texture() {
            return utils.linesToString(this.getMainResultKernelArray4Texture()) + utils.linesToString(this.getMainResultSubKernelArray4Texture());
          }
        }, {
          key: "getFloatTacticDeclaration",
          value: function getFloatTacticDeclaration() {
            var variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);
            return "precision ".concat(variablePrecision, " float;\n");
          }
        }, {
          key: "getIntTacticDeclaration",
          value: function getIntTacticDeclaration() {
            return "precision ".concat(this.getVariablePrecisionString(this.texSize, this.tactic, true), " int;\n");
          }
        }, {
          key: "getSampler2DTacticDeclaration",
          value: function getSampler2DTacticDeclaration() {
            return "precision ".concat(this.getVariablePrecisionString(this.texSize, this.tactic), " sampler2D;\n");
          }
        }, {
          key: "getSampler2DArrayTacticDeclaration",
          value: function getSampler2DArrayTacticDeclaration() {
            return "precision ".concat(this.getVariablePrecisionString(this.texSize, this.tactic), " sampler2DArray;\n");
          }
        }, {
          key: "renderTexture",
          value: function renderTexture() {
            return this.immutable ? this.texture.clone() : this.texture;
          }
        }, {
          key: "readPackedPixelsToUint8Array",
          value: function readPackedPixelsToUint8Array() {
            if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be "unsigned"');
            var texSize = this.texSize,
              gl = this.context;
            var result = new Uint8Array(texSize[0] * texSize[1] * 4);
            gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);
            return result;
          }
        }, {
          key: "readPackedPixelsToFloat32Array",
          value: function readPackedPixelsToFloat32Array() {
            return new Float32Array(this.readPackedPixelsToUint8Array().buffer);
          }
        }, {
          key: "readFloatPixelsToFloat32Array",
          value: function readFloatPixelsToFloat32Array() {
            if (this.precision !== 'single') throw new Error('Requires this.precision to be "single"');
            var texSize = this.texSize,
              gl = this.context;
            var w = texSize[0];
            var h = texSize[1];
            var result = new Float32Array(w * h * 4);
            gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);
            return result;
          }
        }, {
          key: "getPixels",
          value: function getPixels(flip) {
            var gl = this.context,
              output = this.output;
            var _output4 = _slicedToArray(output, 2),
              width = _output4[0],
              height = _output4[1];
            var pixels = new Uint8Array(width * height * 4);
            gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);
            return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);
          }
        }, {
          key: "renderKernelsToArrays",
          value: function renderKernelsToArrays() {
            var result = {
              result: this.renderOutput()
            };
            for (var i = 0; i < this.subKernels.length; i++) {
              result[this.subKernels[i].property] = this.mappedTextures[i].toArray();
            }
            return result;
          }
        }, {
          key: "renderKernelsToTextures",
          value: function renderKernelsToTextures() {
            var result = {
              result: this.renderOutput()
            };
            if (this.immutable) {
              for (var i = 0; i < this.subKernels.length; i++) {
                result[this.subKernels[i].property] = this.mappedTextures[i].clone();
              }
            } else {
              for (var _i11 = 0; _i11 < this.subKernels.length; _i11++) {
                result[this.subKernels[_i11].property] = this.mappedTextures[_i11];
              }
            }
            return result;
          }
        }, {
          key: "resetSwitchingKernels",
          value: function resetSwitchingKernels() {
            var existingValue = this.switchingKernels;
            this.switchingKernels = null;
            return existingValue;
          }
        }, {
          key: "setOutput",
          value: function setOutput(output) {
            var newOutput = this.toKernelOutput(output);
            if (this.program) {
              if (!this.dynamicOutput) {
                throw new Error('Resizing a kernel with dynamicOutput: false is not possible');
              }
              var newThreadDim = [newOutput[0], newOutput[1] || 1, newOutput[2] || 1];
              var newTexSize = utils.getKernelTextureSize({
                optimizeFloatMemory: this.optimizeFloatMemory,
                precision: this.precision
              }, newThreadDim);
              var oldTexSize = this.texSize;
              if (oldTexSize) {
                var oldPrecision = this.getVariablePrecisionString(oldTexSize, this.tactic);
                var newPrecision = this.getVariablePrecisionString(newTexSize, this.tactic);
                if (oldPrecision !== newPrecision) {
                  if (this.debug) {
                    console.warn('Precision requirement changed, asking GPU instance to recompile');
                  }
                  this.switchKernels({
                    type: 'outputPrecisionMismatch',
                    precision: newPrecision,
                    needed: output
                  });
                  return;
                }
              }
              this.output = newOutput;
              this.threadDim = newThreadDim;
              this.texSize = newTexSize;
              var gl = this.context;
              gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);
              this.updateMaxTexSize();
              this.framebuffer.width = this.texSize[0];
              this.framebuffer.height = this.texSize[1];
              gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);
              this.canvas.width = this.maxTexSize[0];
              this.canvas.height = this.maxTexSize[1];
              if (this.texture) {
                this.texture.delete();
              }
              this.texture = null;
              this._setupOutputTexture();
              if (this.mappedTextures && this.mappedTextures.length > 0) {
                for (var i = 0; i < this.mappedTextures.length; i++) {
                  this.mappedTextures[i].delete();
                }
                this.mappedTextures = null;
                this._setupSubOutputTextures();
              }
            } else {
              this.output = newOutput;
            }
            return this;
          }
        }, {
          key: "renderValues",
          value: function renderValues() {
            return this.formatValues(this.transferValues(), this.output[0], this.output[1], this.output[2]);
          }
        }, {
          key: "switchKernels",
          value: function switchKernels(reason) {
            if (this.switchingKernels) {
              this.switchingKernels.push(reason);
            } else {
              this.switchingKernels = [reason];
            }
          }
        }, {
          key: "getVariablePrecisionString",
          value: function getVariablePrecisionString() {
            var textureSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.texSize;
            var tactic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.tactic;
            var isInt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            if (!tactic) {
              if (!this.constructor.features.isSpeedTacticSupported) return 'highp';
              var low = this.constructor.features[isInt ? 'lowIntPrecision' : 'lowFloatPrecision'];
              var medium = this.constructor.features[isInt ? 'mediumIntPrecision' : 'mediumFloatPrecision'];
              var high = this.constructor.features[isInt ? 'highIntPrecision' : 'highFloatPrecision'];
              var requiredSize = Math.log2(textureSize[0] * textureSize[1]);
              if (requiredSize <= low.rangeMax) {
                return 'lowp';
              } else if (requiredSize <= medium.rangeMax) {
                return 'mediump';
              } else if (requiredSize <= high.rangeMax) {
                return 'highp';
              } else {
                throw new Error("The required size exceeds that of the ability of your system");
              }
            }
            switch (tactic) {
              case 'speed':
                return 'lowp';
              case 'balanced':
                return 'mediump';
              case 'precision':
                return 'highp';
              default:
                throw new Error("Unknown tactic \"".concat(tactic, "\" use \"speed\", \"balanced\", \"precision\", or empty for auto"));
            }
          }
        }, {
          key: "updateTextureArgumentRefs",
          value: function updateTextureArgumentRefs(kernelValue, arg) {
            if (!this.immutable) return;
            if (this.texture.texture === arg.texture) {
              var prevArg = kernelValue.prevArg;
              if (prevArg) {
                if (prevArg.texture._refs === 1) {
                  this.texture.delete();
                  this.texture = prevArg.clone();
                  this._textureSwitched = true;
                }
                prevArg.delete();
              }
              kernelValue.prevArg = arg.clone();
            } else if (this.mappedTextures && this.mappedTextures.length > 0) {
              var mappedTextures = this.mappedTextures;
              for (var i = 0; i < mappedTextures.length; i++) {
                var mappedTexture = mappedTextures[i];
                if (mappedTexture.texture === arg.texture) {
                  var _prevArg = kernelValue.prevArg;
                  if (_prevArg) {
                    if (_prevArg.texture._refs === 1) {
                      mappedTexture.delete();
                      mappedTextures[i] = _prevArg.clone();
                      this._mappedTextureSwitched[i] = true;
                    }
                    _prevArg.delete();
                  }
                  kernelValue.prevArg = arg.clone();
                  return;
                }
              }
            }
          }
        }, {
          key: "onActivate",
          value: function onActivate(previousKernel) {
            this._textureSwitched = true;
            this.texture = previousKernel.texture;
            if (this.mappedTextures) {
              for (var i = 0; i < this.mappedTextures.length; i++) {
                this._mappedTextureSwitched[i] = true;
              }
              this.mappedTextures = previousKernel.mappedTextures;
            }
          }
        }, {
          key: "initCanvas",
          value: function initCanvas() {}
        }], [{
          key: "mode",
          get: function get() {
            return 'gpu';
          }
        }, {
          key: "getIsFloatRead",
          value: function getIsFloatRead() {
            var kernelString = "function kernelFunction() {\n      return 1;\n    }";
            var kernel = new this(kernelString, {
              context: this.testContext,
              canvas: this.testCanvas,
              validate: false,
              output: [1],
              precision: 'single',
              returnType: 'Number',
              tactic: 'speed'
            });
            kernel.build();
            kernel.run();
            var result = kernel.renderOutput();
            kernel.destroy(true);
            return result[0] === 1;
          }
        }, {
          key: "getIsIntegerDivisionAccurate",
          value: function getIsIntegerDivisionAccurate() {
            function kernelFunction(v1, v2) {
              return v1[this.thread.x] / v2[this.thread.x];
            }
            var kernel = new this(kernelFunction.toString(), {
              context: this.testContext,
              canvas: this.testCanvas,
              validate: false,
              output: [2],
              returnType: 'Number',
              precision: 'unsigned',
              tactic: 'speed'
            });
            var args = [[6, 6030401], [3, 3991]];
            kernel.build.apply(kernel, args);
            kernel.run.apply(kernel, args);
            var result = kernel.renderOutput();
            kernel.destroy(true);
            return result[0] === 2 && result[1] === 1511;
          }
        }, {
          key: "getIsSpeedTacticSupported",
          value: function getIsSpeedTacticSupported() {
            function kernelFunction(value) {
              return value[this.thread.x];
            }
            var kernel = new this(kernelFunction.toString(), {
              context: this.testContext,
              canvas: this.testCanvas,
              validate: false,
              output: [4],
              returnType: 'Number',
              precision: 'unsigned',
              tactic: 'speed'
            });
            var args = [[0, 1, 2, 3]];
            kernel.build.apply(kernel, args);
            kernel.run.apply(kernel, args);
            var result = kernel.renderOutput();
            kernel.destroy(true);
            return Math.round(result[0]) === 0 && Math.round(result[1]) === 1 && Math.round(result[2]) === 2 && Math.round(result[3]) === 3;
          }
        }, {
          key: "testCanvas",
          get: function get() {
            throw new Error("\"testCanvas\" not defined on ".concat(this.name));
          }
        }, {
          key: "testContext",
          get: function get() {
            throw new Error("\"testContext\" not defined on ".concat(this.name));
          }
        }, {
          key: "getFeatures",
          value: function getFeatures() {
            var gl = this.testContext;
            var isDrawBuffers = this.getIsDrawBuffers();
            return Object.freeze({
              isFloatRead: this.getIsFloatRead(),
              isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),
              isSpeedTacticSupported: this.getIsSpeedTacticSupported(),
              isTextureFloat: this.getIsTextureFloat(),
              isDrawBuffers: isDrawBuffers,
              kernelMap: isDrawBuffers,
              channelCount: this.getChannelCount(),
              maxTextureSize: this.getMaxTextureSize(),
              lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),
              lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),
              mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),
              mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),
              highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),
              highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT)
            });
          }
        }, {
          key: "setupFeatureChecks",
          value: function setupFeatureChecks() {
            throw new Error("\"setupFeatureChecks\" not defined on ".concat(this.name));
          }
        }, {
          key: "getSignature",
          value: function getSignature(kernel, argumentTypes) {
            return kernel.getVariablePrecisionString() + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');
          }
        }, {
          key: "nativeFunctionArguments",
          value: function nativeFunctionArguments(source) {
            var argumentTypes = [];
            var argumentNames = [];
            var states = [];
            var isStartingVariableName = /^[a-zA-Z_]/;
            var isVariableChar = /[a-zA-Z_0-9]/;
            var i = 0;
            var argumentName = null;
            var argumentType = null;
            while (i < source.length) {
              var char = source[i];
              var nextChar = source[i + 1];
              var state = states.length > 0 ? states[states.length - 1] : null;
              if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '*') {
                states.push('MULTI_LINE_COMMENT');
                i += 2;
                continue;
              } else if (state === 'MULTI_LINE_COMMENT' && char === '*' && nextChar === '/') {
                states.pop();
                i += 2;
                continue;
              } else if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '/') {
                states.push('COMMENT');
                i += 2;
                continue;
              } else if (state === 'COMMENT' && char === '\n') {
                states.pop();
                i++;
                continue;
              } else if (state === null && char === '(') {
                states.push('FUNCTION_ARGUMENTS');
                i++;
                continue;
              } else if (state === 'FUNCTION_ARGUMENTS') {
                if (char === ')') {
                  states.pop();
                  break;
                }
                if (char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {
                  states.push('DECLARE_VARIABLE');
                  argumentType = 'float';
                  argumentName = '';
                  i += 6;
                  continue;
                } else if (char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {
                  states.push('DECLARE_VARIABLE');
                  argumentType = 'int';
                  argumentName = '';
                  i += 4;
                  continue;
                } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {
                  states.push('DECLARE_VARIABLE');
                  argumentType = 'vec2';
                  argumentName = '';
                  i += 5;
                  continue;
                } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {
                  states.push('DECLARE_VARIABLE');
                  argumentType = 'vec3';
                  argumentName = '';
                  i += 5;
                  continue;
                } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {
                  states.push('DECLARE_VARIABLE');
                  argumentType = 'vec4';
                  argumentName = '';
                  i += 5;
                  continue;
                }
              } else if (state === 'DECLARE_VARIABLE') {
                if (argumentName === '') {
                  if (char === ' ') {
                    i++;
                    continue;
                  }
                  if (!isStartingVariableName.test(char)) {
                    throw new Error('variable name is not expected string');
                  }
                }
                argumentName += char;
                if (!isVariableChar.test(nextChar)) {
                  states.pop();
                  argumentNames.push(argumentName);
                  argumentTypes.push(typeMap[argumentType]);
                }
              }
              i++;
            }
            if (states.length > 0) {
              throw new Error('GLSL function was not parsable');
            }
            return {
              argumentNames: argumentNames,
              argumentTypes: argumentTypes
            };
          }
        }, {
          key: "nativeFunctionReturnType",
          value: function nativeFunctionReturnType(source) {
            return typeMap[source.match(/int|float|vec[2-4]/)[0]];
          }
        }, {
          key: "combineKernels",
          value: function combineKernels(combinedKernel, lastKernel) {
            combinedKernel.apply(null, arguments);
            var _lastKernel$texSize = lastKernel.texSize,
              texSize = _lastKernel$texSize.texSize,
              context = _lastKernel$texSize.context,
              threadDim = _lastKernel$texSize.threadDim;
            var result;
            if (lastKernel.precision === 'single') {
              var w = texSize[0];
              var h = Math.ceil(texSize[1] / 4);
              result = new Float32Array(w * h * 4 * 4);
              context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);
            } else {
              var bytes = new Uint8Array(texSize[0] * texSize[1] * 4);
              context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);
              result = new Float32Array(bytes.buffer);
            }
            result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);
            if (lastKernel.output.length === 1) {
              return result;
            } else if (lastKernel.output.length === 2) {
              return utils.splitArray(result, lastKernel.output[0]);
            } else if (lastKernel.output.length === 3) {
              var cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);
              return cube.map(function (x) {
                return utils.splitArray(x, lastKernel.output[0]);
              });
            }
          }
        }]);
        return GLKernel;
      }(Kernel);
      var typeMap = {
        int: 'Integer',
        float: 'Number',
        vec2: 'Array(2)',
        vec3: 'Array(3)',
        vec4: 'Array(4)'
      };
      module.exports = {
        GLKernel: GLKernel
      };
    }, {
      "../../utils": 114,
      "../kernel": 36,
      "./texture/array-2-float": 16,
      "./texture/array-2-float-2d": 14,
      "./texture/array-2-float-3d": 15,
      "./texture/array-3-float": 19,
      "./texture/array-3-float-2d": 17,
      "./texture/array-3-float-3d": 18,
      "./texture/array-4-float": 22,
      "./texture/array-4-float-2d": 20,
      "./texture/array-4-float-3d": 21,
      "./texture/float": 25,
      "./texture/float-2d": 23,
      "./texture/float-3d": 24,
      "./texture/graphical": 26,
      "./texture/memory-optimized": 30,
      "./texture/memory-optimized-2d": 28,
      "./texture/memory-optimized-3d": 29,
      "./texture/unsigned": 33,
      "./texture/unsigned-2d": 31,
      "./texture/unsigned-3d": 32
    }],
    14: [function (require, module, exports) {
      var _require35 = require('../../../utils'),
        utils = _require35.utils;
      var _require36 = require('./float'),
        GLTextureFloat = _require36.GLTextureFloat;
      var GLTextureArray2Float2D = /*#__PURE__*/function (_GLTextureFloat) {
        "use strict";

        _inherits(GLTextureArray2Float2D, _GLTextureFloat);
        var _super4 = _createSuper(GLTextureArray2Float2D);
        function GLTextureArray2Float2D(settings) {
          var _this6;
          _classCallCheck(this, GLTextureArray2Float2D);
          _this6 = _super4.call(this, settings);
          _this6.type = 'ArrayTexture(2)';
          return _this6;
        }
        _createClass(GLTextureArray2Float2D, [{
          key: "toArray",
          value: function toArray() {
            return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);
          }
        }]);
        return GLTextureArray2Float2D;
      }(GLTextureFloat);
      module.exports = {
        GLTextureArray2Float2D: GLTextureArray2Float2D
      };
    }, {
      "../../../utils": 114,
      "./float": 25
    }],
    15: [function (require, module, exports) {
      var _require37 = require('../../../utils'),
        utils = _require37.utils;
      var _require38 = require('./float'),
        GLTextureFloat = _require38.GLTextureFloat;
      var GLTextureArray2Float3D = /*#__PURE__*/function (_GLTextureFloat2) {
        "use strict";

        _inherits(GLTextureArray2Float3D, _GLTextureFloat2);
        var _super5 = _createSuper(GLTextureArray2Float3D);
        function GLTextureArray2Float3D(settings) {
          var _this7;
          _classCallCheck(this, GLTextureArray2Float3D);
          _this7 = _super5.call(this, settings);
          _this7.type = 'ArrayTexture(2)';
          return _this7;
        }
        _createClass(GLTextureArray2Float3D, [{
          key: "toArray",
          value: function toArray() {
            return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);
          }
        }]);
        return GLTextureArray2Float3D;
      }(GLTextureFloat);
      module.exports = {
        GLTextureArray2Float3D: GLTextureArray2Float3D
      };
    }, {
      "../../../utils": 114,
      "./float": 25
    }],
    16: [function (require, module, exports) {
      var _require39 = require('../../../utils'),
        utils = _require39.utils;
      var _require40 = require('./float'),
        GLTextureFloat = _require40.GLTextureFloat;
      var GLTextureArray2Float = /*#__PURE__*/function (_GLTextureFloat3) {
        "use strict";

        _inherits(GLTextureArray2Float, _GLTextureFloat3);
        var _super6 = _createSuper(GLTextureArray2Float);
        function GLTextureArray2Float(settings) {
          var _this8;
          _classCallCheck(this, GLTextureArray2Float);
          _this8 = _super6.call(this, settings);
          _this8.type = 'ArrayTexture(2)';
          return _this8;
        }
        _createClass(GLTextureArray2Float, [{
          key: "toArray",
          value: function toArray() {
            return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);
          }
        }]);
        return GLTextureArray2Float;
      }(GLTextureFloat);
      module.exports = {
        GLTextureArray2Float: GLTextureArray2Float
      };
    }, {
      "../../../utils": 114,
      "./float": 25
    }],
    17: [function (require, module, exports) {
      var _require41 = require('../../../utils'),
        utils = _require41.utils;
      var _require42 = require('./float'),
        GLTextureFloat = _require42.GLTextureFloat;
      var GLTextureArray3Float2D = /*#__PURE__*/function (_GLTextureFloat4) {
        "use strict";

        _inherits(GLTextureArray3Float2D, _GLTextureFloat4);
        var _super7 = _createSuper(GLTextureArray3Float2D);
        function GLTextureArray3Float2D(settings) {
          var _this9;
          _classCallCheck(this, GLTextureArray3Float2D);
          _this9 = _super7.call(this, settings);
          _this9.type = 'ArrayTexture(3)';
          return _this9;
        }
        _createClass(GLTextureArray3Float2D, [{
          key: "toArray",
          value: function toArray() {
            return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);
          }
        }]);
        return GLTextureArray3Float2D;
      }(GLTextureFloat);
      module.exports = {
        GLTextureArray3Float2D: GLTextureArray3Float2D
      };
    }, {
      "../../../utils": 114,
      "./float": 25
    }],
    18: [function (require, module, exports) {
      var _require43 = require('../../../utils'),
        utils = _require43.utils;
      var _require44 = require('./float'),
        GLTextureFloat = _require44.GLTextureFloat;
      var GLTextureArray3Float3D = /*#__PURE__*/function (_GLTextureFloat5) {
        "use strict";

        _inherits(GLTextureArray3Float3D, _GLTextureFloat5);
        var _super8 = _createSuper(GLTextureArray3Float3D);
        function GLTextureArray3Float3D(settings) {
          var _this10;
          _classCallCheck(this, GLTextureArray3Float3D);
          _this10 = _super8.call(this, settings);
          _this10.type = 'ArrayTexture(3)';
          return _this10;
        }
        _createClass(GLTextureArray3Float3D, [{
          key: "toArray",
          value: function toArray() {
            return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);
          }
        }]);
        return GLTextureArray3Float3D;
      }(GLTextureFloat);
      module.exports = {
        GLTextureArray3Float3D: GLTextureArray3Float3D
      };
    }, {
      "../../../utils": 114,
      "./float": 25
    }],
    19: [function (require, module, exports) {
      var _require45 = require('../../../utils'),
        utils = _require45.utils;
      var _require46 = require('./float'),
        GLTextureFloat = _require46.GLTextureFloat;
      var GLTextureArray3Float = /*#__PURE__*/function (_GLTextureFloat6) {
        "use strict";

        _inherits(GLTextureArray3Float, _GLTextureFloat6);
        var _super9 = _createSuper(GLTextureArray3Float);
        function GLTextureArray3Float(settings) {
          var _this11;
          _classCallCheck(this, GLTextureArray3Float);
          _this11 = _super9.call(this, settings);
          _this11.type = 'ArrayTexture(3)';
          return _this11;
        }
        _createClass(GLTextureArray3Float, [{
          key: "toArray",
          value: function toArray() {
            return utils.erectArray3(this.renderValues(), this.output[0]);
          }
        }]);
        return GLTextureArray3Float;
      }(GLTextureFloat);
      module.exports = {
        GLTextureArray3Float: GLTextureArray3Float
      };
    }, {
      "../../../utils": 114,
      "./float": 25
    }],
    20: [function (require, module, exports) {
      var _require47 = require('../../../utils'),
        utils = _require47.utils;
      var _require48 = require('./float'),
        GLTextureFloat = _require48.GLTextureFloat;
      var GLTextureArray4Float2D = /*#__PURE__*/function (_GLTextureFloat7) {
        "use strict";

        _inherits(GLTextureArray4Float2D, _GLTextureFloat7);
        var _super10 = _createSuper(GLTextureArray4Float2D);
        function GLTextureArray4Float2D(settings) {
          var _this12;
          _classCallCheck(this, GLTextureArray4Float2D);
          _this12 = _super10.call(this, settings);
          _this12.type = 'ArrayTexture(4)';
          return _this12;
        }
        _createClass(GLTextureArray4Float2D, [{
          key: "toArray",
          value: function toArray() {
            return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);
          }
        }]);
        return GLTextureArray4Float2D;
      }(GLTextureFloat);
      module.exports = {
        GLTextureArray4Float2D: GLTextureArray4Float2D
      };
    }, {
      "../../../utils": 114,
      "./float": 25
    }],
    21: [function (require, module, exports) {
      var _require49 = require('../../../utils'),
        utils = _require49.utils;
      var _require50 = require('./float'),
        GLTextureFloat = _require50.GLTextureFloat;
      var GLTextureArray4Float3D = /*#__PURE__*/function (_GLTextureFloat8) {
        "use strict";

        _inherits(GLTextureArray4Float3D, _GLTextureFloat8);
        var _super11 = _createSuper(GLTextureArray4Float3D);
        function GLTextureArray4Float3D(settings) {
          var _this13;
          _classCallCheck(this, GLTextureArray4Float3D);
          _this13 = _super11.call(this, settings);
          _this13.type = 'ArrayTexture(4)';
          return _this13;
        }
        _createClass(GLTextureArray4Float3D, [{
          key: "toArray",
          value: function toArray() {
            return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);
          }
        }]);
        return GLTextureArray4Float3D;
      }(GLTextureFloat);
      module.exports = {
        GLTextureArray4Float3D: GLTextureArray4Float3D
      };
    }, {
      "../../../utils": 114,
      "./float": 25
    }],
    22: [function (require, module, exports) {
      var _require51 = require('../../../utils'),
        utils = _require51.utils;
      var _require52 = require('./float'),
        GLTextureFloat = _require52.GLTextureFloat;
      var GLTextureArray4Float = /*#__PURE__*/function (_GLTextureFloat9) {
        "use strict";

        _inherits(GLTextureArray4Float, _GLTextureFloat9);
        var _super12 = _createSuper(GLTextureArray4Float);
        function GLTextureArray4Float(settings) {
          var _this14;
          _classCallCheck(this, GLTextureArray4Float);
          _this14 = _super12.call(this, settings);
          _this14.type = 'ArrayTexture(4)';
          return _this14;
        }
        _createClass(GLTextureArray4Float, [{
          key: "toArray",
          value: function toArray() {
            return utils.erectArray4(this.renderValues(), this.output[0]);
          }
        }]);
        return GLTextureArray4Float;
      }(GLTextureFloat);
      module.exports = {
        GLTextureArray4Float: GLTextureArray4Float
      };
    }, {
      "../../../utils": 114,
      "./float": 25
    }],
    23: [function (require, module, exports) {
      var _require53 = require('../../../utils'),
        utils = _require53.utils;
      var _require54 = require('./float'),
        GLTextureFloat = _require54.GLTextureFloat;
      var GLTextureFloat2D = /*#__PURE__*/function (_GLTextureFloat10) {
        "use strict";

        _inherits(GLTextureFloat2D, _GLTextureFloat10);
        var _super13 = _createSuper(GLTextureFloat2D);
        function GLTextureFloat2D(settings) {
          var _this15;
          _classCallCheck(this, GLTextureFloat2D);
          _this15 = _super13.call(this, settings);
          _this15.type = 'ArrayTexture(1)';
          return _this15;
        }
        _createClass(GLTextureFloat2D, [{
          key: "toArray",
          value: function toArray() {
            return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);
          }
        }]);
        return GLTextureFloat2D;
      }(GLTextureFloat);
      module.exports = {
        GLTextureFloat2D: GLTextureFloat2D
      };
    }, {
      "../../../utils": 114,
      "./float": 25
    }],
    24: [function (require, module, exports) {
      var _require55 = require('../../../utils'),
        utils = _require55.utils;
      var _require56 = require('./float'),
        GLTextureFloat = _require56.GLTextureFloat;
      var GLTextureFloat3D = /*#__PURE__*/function (_GLTextureFloat11) {
        "use strict";

        _inherits(GLTextureFloat3D, _GLTextureFloat11);
        var _super14 = _createSuper(GLTextureFloat3D);
        function GLTextureFloat3D(settings) {
          var _this16;
          _classCallCheck(this, GLTextureFloat3D);
          _this16 = _super14.call(this, settings);
          _this16.type = 'ArrayTexture(1)';
          return _this16;
        }
        _createClass(GLTextureFloat3D, [{
          key: "toArray",
          value: function toArray() {
            return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);
          }
        }]);
        return GLTextureFloat3D;
      }(GLTextureFloat);
      module.exports = {
        GLTextureFloat3D: GLTextureFloat3D
      };
    }, {
      "../../../utils": 114,
      "./float": 25
    }],
    25: [function (require, module, exports) {
      var _require57 = require('../../../utils'),
        utils = _require57.utils;
      var _require58 = require('./index'),
        GLTexture = _require58.GLTexture;
      var GLTextureFloat = /*#__PURE__*/function (_GLTexture) {
        "use strict";

        _inherits(GLTextureFloat, _GLTexture);
        var _super15 = _createSuper(GLTextureFloat);
        function GLTextureFloat(settings) {
          var _this17;
          _classCallCheck(this, GLTextureFloat);
          _this17 = _super15.call(this, settings);
          _this17.type = 'ArrayTexture(1)';
          return _this17;
        }
        _createClass(GLTextureFloat, [{
          key: "textureType",
          get: function get() {
            return this.context.FLOAT;
          }
        }, {
          key: "renderRawOutput",
          value: function renderRawOutput() {
            var gl = this.context;
            var size = this.size;
            gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());
            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);
            var result = new Float32Array(size[0] * size[1] * 4);
            gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.FLOAT, result);
            return result;
          }
        }, {
          key: "renderValues",
          value: function renderValues() {
            if (this._deleted) return null;
            return this.renderRawOutput();
          }
        }, {
          key: "toArray",
          value: function toArray() {
            return utils.erectFloat(this.renderValues(), this.output[0]);
          }
        }]);
        return GLTextureFloat;
      }(GLTexture);
      module.exports = {
        GLTextureFloat: GLTextureFloat
      };
    }, {
      "../../../utils": 114,
      "./index": 27
    }],
    26: [function (require, module, exports) {
      var _require59 = require('./unsigned'),
        GLTextureUnsigned = _require59.GLTextureUnsigned;
      var GLTextureGraphical = /*#__PURE__*/function (_GLTextureUnsigned) {
        "use strict";

        _inherits(GLTextureGraphical, _GLTextureUnsigned);
        var _super16 = _createSuper(GLTextureGraphical);
        function GLTextureGraphical(settings) {
          var _this18;
          _classCallCheck(this, GLTextureGraphical);
          _this18 = _super16.call(this, settings);
          _this18.type = 'ArrayTexture(4)';
          return _this18;
        }
        _createClass(GLTextureGraphical, [{
          key: "toArray",
          value: function toArray() {
            return this.renderValues();
          }
        }]);
        return GLTextureGraphical;
      }(GLTextureUnsigned);
      module.exports = {
        GLTextureGraphical: GLTextureGraphical
      };
    }, {
      "./unsigned": 33
    }],
    27: [function (require, module, exports) {
      var _require60 = require('../../../texture'),
        Texture = _require60.Texture;
      var GLTexture = /*#__PURE__*/function (_Texture) {
        "use strict";

        _inherits(GLTexture, _Texture);
        var _super17 = _createSuper(GLTexture);
        function GLTexture() {
          _classCallCheck(this, GLTexture);
          return _super17.apply(this, arguments);
        }
        _createClass(GLTexture, [{
          key: "textureType",
          get: function get() {
            throw new Error("\"textureType\" not implemented on ".concat(this.name));
          }
        }, {
          key: "clone",
          value: function clone() {
            return new this.constructor(this);
          }
        }, {
          key: "beforeMutate",
          value: function beforeMutate() {
            if (this.texture._refs > 1) {
              this.newTexture();
              return true;
            }
            return false;
          }
        }, {
          key: "cloneTexture",
          value: function cloneTexture() {
            this.texture._refs--;
            var gl = this.context,
              size = this.size,
              texture = this.texture,
              kernel = this.kernel;
            if (kernel.debug) {
              console.warn('cloning internal texture');
            }
            gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());
            selectTexture(gl, texture);
            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);
            var target = gl.createTexture();
            selectTexture(gl, target);
            gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);
            gl.copyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, size[0], size[1]);
            target._refs = 1;
            this.texture = target;
          }
        }, {
          key: "newTexture",
          value: function newTexture() {
            this.texture._refs--;
            var gl = this.context;
            var size = this.size;
            var kernel = this.kernel;
            if (kernel.debug) {
              console.warn('new internal texture');
            }
            var target = gl.createTexture();
            selectTexture(gl, target);
            gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);
            target._refs = 1;
            this.texture = target;
          }
        }, {
          key: "clear",
          value: function clear() {
            if (this.texture._refs) {
              this.texture._refs--;
              var _gl = this.context;
              var target = this.texture = _gl.createTexture();
              selectTexture(_gl, target);
              var size = this.size;
              target._refs = 1;
              _gl.texImage2D(_gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);
            }
            var gl = this.context,
              texture = this.texture;
            gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());
            gl.bindTexture(gl.TEXTURE_2D, texture);
            selectTexture(gl, texture);
            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);
            gl.clearColor(0, 0, 0, 0);
            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);
          }
        }, {
          key: "delete",
          value: function _delete() {
            if (this._deleted) return;
            this._deleted = true;
            if (this.texture._refs) {
              this.texture._refs--;
              if (this.texture._refs) return;
            }
            this.context.deleteTexture(this.texture);
          }
        }, {
          key: "framebuffer",
          value: function framebuffer() {
            if (!this._framebuffer) {
              this._framebuffer = this.kernel.getRawValueFramebuffer(this.size[0], this.size[1]);
            }
            return this._framebuffer;
          }
        }]);
        return GLTexture;
      }(Texture);
      function selectTexture(gl, texture) {
        gl.activeTexture(gl.TEXTURE15);
        gl.bindTexture(gl.TEXTURE_2D, texture);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
      }
      module.exports = {
        GLTexture: GLTexture
      };
    }, {
      "../../../texture": 113
    }],
    28: [function (require, module, exports) {
      var _require61 = require('../../../utils'),
        utils = _require61.utils;
      var _require62 = require('./float'),
        GLTextureFloat = _require62.GLTextureFloat;
      var GLTextureMemoryOptimized2D = /*#__PURE__*/function (_GLTextureFloat12) {
        "use strict";

        _inherits(GLTextureMemoryOptimized2D, _GLTextureFloat12);
        var _super18 = _createSuper(GLTextureMemoryOptimized2D);
        function GLTextureMemoryOptimized2D(settings) {
          var _this19;
          _classCallCheck(this, GLTextureMemoryOptimized2D);
          _this19 = _super18.call(this, settings);
          _this19.type = 'MemoryOptimizedNumberTexture';
          return _this19;
        }
        _createClass(GLTextureMemoryOptimized2D, [{
          key: "toArray",
          value: function toArray() {
            return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);
          }
        }]);
        return GLTextureMemoryOptimized2D;
      }(GLTextureFloat);
      module.exports = {
        GLTextureMemoryOptimized2D: GLTextureMemoryOptimized2D
      };
    }, {
      "../../../utils": 114,
      "./float": 25
    }],
    29: [function (require, module, exports) {
      var _require63 = require('../../../utils'),
        utils = _require63.utils;
      var _require64 = require('./float'),
        GLTextureFloat = _require64.GLTextureFloat;
      var GLTextureMemoryOptimized3D = /*#__PURE__*/function (_GLTextureFloat13) {
        "use strict";

        _inherits(GLTextureMemoryOptimized3D, _GLTextureFloat13);
        var _super19 = _createSuper(GLTextureMemoryOptimized3D);
        function GLTextureMemoryOptimized3D(settings) {
          var _this20;
          _classCallCheck(this, GLTextureMemoryOptimized3D);
          _this20 = _super19.call(this, settings);
          _this20.type = 'MemoryOptimizedNumberTexture';
          return _this20;
        }
        _createClass(GLTextureMemoryOptimized3D, [{
          key: "toArray",
          value: function toArray() {
            return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);
          }
        }]);
        return GLTextureMemoryOptimized3D;
      }(GLTextureFloat);
      module.exports = {
        GLTextureMemoryOptimized3D: GLTextureMemoryOptimized3D
      };
    }, {
      "../../../utils": 114,
      "./float": 25
    }],
    30: [function (require, module, exports) {
      var _require65 = require('../../../utils'),
        utils = _require65.utils;
      var _require66 = require('./float'),
        GLTextureFloat = _require66.GLTextureFloat;
      var GLTextureMemoryOptimized = /*#__PURE__*/function (_GLTextureFloat14) {
        "use strict";

        _inherits(GLTextureMemoryOptimized, _GLTextureFloat14);
        var _super20 = _createSuper(GLTextureMemoryOptimized);
        function GLTextureMemoryOptimized(settings) {
          var _this21;
          _classCallCheck(this, GLTextureMemoryOptimized);
          _this21 = _super20.call(this, settings);
          _this21.type = 'MemoryOptimizedNumberTexture';
          return _this21;
        }
        _createClass(GLTextureMemoryOptimized, [{
          key: "toArray",
          value: function toArray() {
            return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);
          }
        }]);
        return GLTextureMemoryOptimized;
      }(GLTextureFloat);
      module.exports = {
        GLTextureMemoryOptimized: GLTextureMemoryOptimized
      };
    }, {
      "../../../utils": 114,
      "./float": 25
    }],
    31: [function (require, module, exports) {
      var _require67 = require('../../../utils'),
        utils = _require67.utils;
      var _require68 = require('./unsigned'),
        GLTextureUnsigned = _require68.GLTextureUnsigned;
      var GLTextureUnsigned2D = /*#__PURE__*/function (_GLTextureUnsigned2) {
        "use strict";

        _inherits(GLTextureUnsigned2D, _GLTextureUnsigned2);
        var _super21 = _createSuper(GLTextureUnsigned2D);
        function GLTextureUnsigned2D(settings) {
          var _this22;
          _classCallCheck(this, GLTextureUnsigned2D);
          _this22 = _super21.call(this, settings);
          _this22.type = 'NumberTexture';
          return _this22;
        }
        _createClass(GLTextureUnsigned2D, [{
          key: "toArray",
          value: function toArray() {
            return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);
          }
        }]);
        return GLTextureUnsigned2D;
      }(GLTextureUnsigned);
      module.exports = {
        GLTextureUnsigned2D: GLTextureUnsigned2D
      };
    }, {
      "../../../utils": 114,
      "./unsigned": 33
    }],
    32: [function (require, module, exports) {
      var _require69 = require('../../../utils'),
        utils = _require69.utils;
      var _require70 = require('./unsigned'),
        GLTextureUnsigned = _require70.GLTextureUnsigned;
      var GLTextureUnsigned3D = /*#__PURE__*/function (_GLTextureUnsigned3) {
        "use strict";

        _inherits(GLTextureUnsigned3D, _GLTextureUnsigned3);
        var _super22 = _createSuper(GLTextureUnsigned3D);
        function GLTextureUnsigned3D(settings) {
          var _this23;
          _classCallCheck(this, GLTextureUnsigned3D);
          _this23 = _super22.call(this, settings);
          _this23.type = 'NumberTexture';
          return _this23;
        }
        _createClass(GLTextureUnsigned3D, [{
          key: "toArray",
          value: function toArray() {
            return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);
          }
        }]);
        return GLTextureUnsigned3D;
      }(GLTextureUnsigned);
      module.exports = {
        GLTextureUnsigned3D: GLTextureUnsigned3D
      };
    }, {
      "../../../utils": 114,
      "./unsigned": 33
    }],
    33: [function (require, module, exports) {
      var _require71 = require('../../../utils'),
        utils = _require71.utils;
      var _require72 = require('./index'),
        GLTexture = _require72.GLTexture;
      var GLTextureUnsigned = /*#__PURE__*/function (_GLTexture2) {
        "use strict";

        _inherits(GLTextureUnsigned, _GLTexture2);
        var _super23 = _createSuper(GLTextureUnsigned);
        function GLTextureUnsigned(settings) {
          var _this24;
          _classCallCheck(this, GLTextureUnsigned);
          _this24 = _super23.call(this, settings);
          _this24.type = 'NumberTexture';
          return _this24;
        }
        _createClass(GLTextureUnsigned, [{
          key: "textureType",
          get: function get() {
            return this.context.UNSIGNED_BYTE;
          }
        }, {
          key: "renderRawOutput",
          value: function renderRawOutput() {
            var gl = this.context;
            gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());
            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);
            var result = new Uint8Array(this.size[0] * this.size[1] * 4);
            gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);
            return result;
          }
        }, {
          key: "renderValues",
          value: function renderValues() {
            if (this._deleted) return null;
            return new Float32Array(this.renderRawOutput().buffer);
          }
        }, {
          key: "toArray",
          value: function toArray() {
            return utils.erectPackedFloat(this.renderValues(), this.output[0]);
          }
        }]);
        return GLTextureUnsigned;
      }(GLTexture);
      module.exports = {
        GLTextureUnsigned: GLTextureUnsigned
      };
    }, {
      "../../../utils": 114,
      "./index": 27
    }],
    34: [function (require, module, exports) {
      var getContext = require('gl');
      var _require73 = require('../web-gl/kernel'),
        WebGLKernel = _require73.WebGLKernel;
      var _require74 = require('../gl/kernel-string'),
        glKernelString = _require74.glKernelString;
      var isSupported = null;
      var testCanvas = null;
      var testContext = null;
      var testExtensions = null;
      var features = null;
      var HeadlessGLKernel = /*#__PURE__*/function (_WebGLKernel) {
        "use strict";

        _inherits(HeadlessGLKernel, _WebGLKernel);
        var _super24 = _createSuper(HeadlessGLKernel);
        function HeadlessGLKernel() {
          _classCallCheck(this, HeadlessGLKernel);
          return _super24.apply(this, arguments);
        }
        _createClass(HeadlessGLKernel, [{
          key: "initCanvas",
          value: function initCanvas() {
            return {};
          }
        }, {
          key: "initContext",
          value: function initContext() {
            return getContext(2, 2, {
              preserveDrawingBuffer: true
            });
          }
        }, {
          key: "initExtensions",
          value: function initExtensions() {
            this.extensions = {
              STACKGL_resize_drawingbuffer: this.context.getExtension('STACKGL_resize_drawingbuffer'),
              STACKGL_destroy_context: this.context.getExtension('STACKGL_destroy_context'),
              OES_texture_float: this.context.getExtension('OES_texture_float'),
              OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),
              OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),
              WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers')
            };
          }
        }, {
          key: "build",
          value: function build() {
            _get(_getPrototypeOf(HeadlessGLKernel.prototype), "build", this).apply(this, arguments);
            if (!this.fallbackRequested) {
              this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);
            }
          }
        }, {
          key: "destroyExtensions",
          value: function destroyExtensions() {
            this.extensions.STACKGL_resize_drawingbuffer = null;
            this.extensions.STACKGL_destroy_context = null;
            this.extensions.OES_texture_float = null;
            this.extensions.OES_texture_float_linear = null;
            this.extensions.OES_element_index_uint = null;
            this.extensions.WEBGL_draw_buffers = null;
          }
        }, {
          key: "toString",
          value: function toString() {
            var setupContextString = "const gl = context || require('gl')(1, 1);\n";
            var destroyContextString = "    if (!context) { gl.getExtension('STACKGL_destroy_context').destroy(); }\n";
            return glKernelString(this.constructor, arguments, this, setupContextString, destroyContextString);
          }
        }, {
          key: "setOutput",
          value: function setOutput(output) {
            _get(_getPrototypeOf(HeadlessGLKernel.prototype), "setOutput", this).call(this, output);
            if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) {
              this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);
            }
            return this;
          }
        }], [{
          key: "isSupported",
          get: function get() {
            if (isSupported !== null) return isSupported;
            this.setupFeatureChecks();
            isSupported = testContext !== null;
            return isSupported;
          }
        }, {
          key: "setupFeatureChecks",
          value: function setupFeatureChecks() {
            testCanvas = null;
            testExtensions = null;
            if (typeof getContext !== 'function') return;
            try {
              testContext = getContext(2, 2, {
                preserveDrawingBuffer: true
              });
              if (!testContext || !testContext.getExtension) return;
              testExtensions = {
                STACKGL_resize_drawingbuffer: testContext.getExtension('STACKGL_resize_drawingbuffer'),
                STACKGL_destroy_context: testContext.getExtension('STACKGL_destroy_context'),
                OES_texture_float: testContext.getExtension('OES_texture_float'),
                OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),
                OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),
                WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),
                WEBGL_color_buffer_float: testContext.getExtension('WEBGL_color_buffer_float')
              };
              features = this.getFeatures();
            } catch (e) {
              console.warn(e);
            }
          }
        }, {
          key: "isContextMatch",
          value: function isContextMatch(context) {
            try {
              return context.getParameter(context.RENDERER) === 'ANGLE';
            } catch (e) {
              return false;
            }
          }
        }, {
          key: "getIsTextureFloat",
          value: function getIsTextureFloat() {
            return Boolean(testExtensions.OES_texture_float);
          }
        }, {
          key: "getIsDrawBuffers",
          value: function getIsDrawBuffers() {
            return Boolean(testExtensions.WEBGL_draw_buffers);
          }
        }, {
          key: "getChannelCount",
          value: function getChannelCount() {
            return testExtensions.WEBGL_draw_buffers ? testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) : 1;
          }
        }, {
          key: "getMaxTextureSize",
          value: function getMaxTextureSize() {
            return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);
          }
        }, {
          key: "testCanvas",
          get: function get() {
            return testCanvas;
          }
        }, {
          key: "testContext",
          get: function get() {
            return testContext;
          }
        }, {
          key: "features",
          get: function get() {
            return features;
          }
        }, {
          key: "destroyContext",
          value: function destroyContext(context) {
            var extension = context.getExtension('STACKGL_destroy_context');
            if (extension && extension.destroy) {
              extension.destroy();
            }
          }
        }]);
        return HeadlessGLKernel;
      }(WebGLKernel);
      module.exports = {
        HeadlessGLKernel: HeadlessGLKernel
      };
    }, {
      "../gl/kernel-string": 12,
      "../web-gl/kernel": 70,
      "gl": 2
    }],
    35: [function (require, module, exports) {
      var KernelValue = /*#__PURE__*/function () {
        "use strict";

        function KernelValue(value, settings) {
          _classCallCheck(this, KernelValue);
          var name = settings.name,
            kernel = settings.kernel,
            context = settings.context,
            checkContext = settings.checkContext,
            onRequestContextHandle = settings.onRequestContextHandle,
            onUpdateValueMismatch = settings.onUpdateValueMismatch,
            origin = settings.origin,
            strictIntegers = settings.strictIntegers,
            type = settings.type,
            tactic = settings.tactic;
          if (!name) {
            throw new Error('name not set');
          }
          if (!type) {
            throw new Error('type not set');
          }
          if (!origin) {
            throw new Error('origin not set');
          }
          if (origin !== 'user' && origin !== 'constants') {
            throw new Error("origin must be \"user\" or \"constants\" value is \"".concat(origin, "\""));
          }
          if (!onRequestContextHandle) {
            throw new Error('onRequestContextHandle is not set');
          }
          this.name = name;
          this.origin = origin;
          this.tactic = tactic;
          this.varName = origin === 'constants' ? "constants.".concat(name) : name;
          this.kernel = kernel;
          this.strictIntegers = strictIntegers;
          this.type = value.type || type;
          this.size = value.size || null;
          this.index = null;
          this.context = context;
          this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;
          this.contextHandle = null;
          this.onRequestContextHandle = onRequestContextHandle;
          this.onUpdateValueMismatch = onUpdateValueMismatch;
          this.forceUploadEachRun = null;
        }
        _createClass(KernelValue, [{
          key: "id",
          get: function get() {
            return "".concat(this.origin, "_").concat(name);
          }
        }, {
          key: "getSource",
          value: function getSource() {
            throw new Error("\"getSource\" not defined on ".concat(this.constructor.name));
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            throw new Error("\"updateValue\" not defined on ".concat(this.constructor.name));
          }
        }]);
        return KernelValue;
      }();
      module.exports = {
        KernelValue: KernelValue
      };
    }, {}],
    36: [function (require, module, exports) {
      var _require75 = require('../utils'),
        utils = _require75.utils;
      var _require76 = require('../input'),
        Input = _require76.Input;
      var Kernel = /*#__PURE__*/function () {
        "use strict";

        function Kernel(source, settings) {
          _classCallCheck(this, Kernel);
          if (typeof source !== 'object') {
            if (typeof source !== 'string') {
              throw new Error('source not a string');
            }
            if (!utils.isFunctionString(source)) {
              throw new Error('source not a function string');
            }
          }
          this.useLegacyEncoder = false;
          this.fallbackRequested = false;
          this.onRequestFallback = null;
          this.argumentNames = typeof source === 'string' ? utils.getArgumentNamesFromString(source) : null;
          this.argumentTypes = null;
          this.argumentSizes = null;
          this.argumentBitRatios = null;
          this.kernelArguments = null;
          this.kernelConstants = null;
          this.forceUploadKernelConstants = null;
          this.source = source;
          this.output = null;
          this.debug = false;
          this.graphical = false;
          this.loopMaxIterations = 0;
          this.constants = null;
          this.constantTypes = null;
          this.constantBitRatios = null;
          this.dynamicArguments = false;
          this.dynamicOutput = false;
          this.canvas = null;
          this.context = null;
          this.checkContext = null;
          this.gpu = null;
          this.functions = null;
          this.nativeFunctions = null;
          this.injectedNative = null;
          this.subKernels = null;
          this.validate = true;
          this.immutable = false;
          this.pipeline = false;
          this.precision = null;
          this.tactic = null;
          this.plugins = null;
          this.returnType = null;
          this.leadingReturnStatement = null;
          this.followingReturnStatement = null;
          this.optimizeFloatMemory = null;
          this.strictIntegers = false;
          this.fixIntegerDivisionAccuracy = null;
          this.built = false;
          this.signature = null;
        }
        _createClass(Kernel, [{
          key: "mergeSettings",
          value: function mergeSettings(settings) {
            for (var p in settings) {
              if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;
              switch (p) {
                case 'output':
                  if (!Array.isArray(settings.output)) {
                    this.setOutput(settings.output);
                    continue;
                  }
                  break;
                case 'functions':
                  this.functions = [];
                  for (var i = 0; i < settings.functions.length; i++) {
                    this.addFunction(settings.functions[i]);
                  }
                  continue;
                case 'graphical':
                  if (settings[p] && !settings.hasOwnProperty('precision')) {
                    this.precision = 'unsigned';
                  }
                  this[p] = settings[p];
                  continue;
                case 'nativeFunctions':
                  if (!settings.nativeFunctions) continue;
                  this.nativeFunctions = [];
                  for (var _i12 = 0; _i12 < settings.nativeFunctions.length; _i12++) {
                    var s = settings.nativeFunctions[_i12];
                    var _name5 = s.name,
                      source = s.source;
                    this.addNativeFunction(_name5, source, s);
                  }
                  continue;
              }
              this[p] = settings[p];
            }
            if (!this.canvas) this.canvas = this.initCanvas();
            if (!this.context) this.context = this.initContext();
            if (!this.plugins) this.plugins = this.initPlugins(settings);
          }
        }, {
          key: "build",
          value: function build() {
            throw new Error("\"build\" not defined on ".concat(this.constructor.name));
          }
        }, {
          key: "run",
          value: function run() {
            throw new Error("\"run\" not defined on ".concat(this.constructor.name));
          }
        }, {
          key: "initCanvas",
          value: function initCanvas() {
            throw new Error("\"initCanvas\" not defined on ".concat(this.constructor.name));
          }
        }, {
          key: "initContext",
          value: function initContext() {
            throw new Error("\"initContext\" not defined on ".concat(this.constructor.name));
          }
        }, {
          key: "initPlugins",
          value: function initPlugins(settings) {
            throw new Error("\"initPlugins\" not defined on ".concat(this.constructor.name));
          }
        }, {
          key: "addFunction",
          value: function addFunction(source) {
            var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            if (source.name && source.source && source.argumentTypes && 'returnType' in source) {
              this.functions.push(source);
            } else if ('settings' in source && 'source' in source) {
              this.functions.push(this.functionToIGPUFunction(source.source, source.settings));
            } else if (typeof source === 'string' || typeof source === 'function') {
              this.functions.push(this.functionToIGPUFunction(source, settings));
            } else {
              throw new Error("function not properly defined");
            }
            return this;
          }
        }, {
          key: "addNativeFunction",
          value: function addNativeFunction(name, source) {
            var settings = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
            var _ref = settings.argumentTypes ? splitArgumentTypes(settings.argumentTypes) : this.constructor.nativeFunctionArguments(source) || {},
              argumentTypes = _ref.argumentTypes,
              argumentNames = _ref.argumentNames;
            this.nativeFunctions.push({
              name: name,
              source: source,
              settings: settings,
              argumentTypes: argumentTypes,
              argumentNames: argumentNames,
              returnType: settings.returnType || this.constructor.nativeFunctionReturnType(source)
            });
            return this;
          }
        }, {
          key: "setupArguments",
          value: function setupArguments(args) {
            this.kernelArguments = [];
            if (!this.argumentTypes) {
              if (!this.argumentTypes) {
                this.argumentTypes = [];
                for (var i = 0; i < args.length; i++) {
                  var argType = utils.getVariableType(args[i], this.strictIntegers);
                  var type = argType === 'Integer' ? 'Number' : argType;
                  this.argumentTypes.push(type);
                  this.kernelArguments.push({
                    type: type
                  });
                }
              }
            } else {
              for (var _i13 = 0; _i13 < this.argumentTypes.length; _i13++) {
                this.kernelArguments.push({
                  type: this.argumentTypes[_i13]
                });
              }
            }
            this.argumentSizes = new Array(args.length);
            this.argumentBitRatios = new Int32Array(args.length);
            for (var _i14 = 0; _i14 < args.length; _i14++) {
              var arg = args[_i14];
              this.argumentSizes[_i14] = arg.constructor === Input ? arg.size : null;
              this.argumentBitRatios[_i14] = this.getBitRatio(arg);
            }
            if (this.argumentNames.length !== args.length) {
              throw new Error("arguments are miss-aligned");
            }
          }
        }, {
          key: "setupConstants",
          value: function setupConstants() {
            this.kernelConstants = [];
            var needsConstantTypes = this.constantTypes === null;
            if (needsConstantTypes) {
              this.constantTypes = {};
            }
            this.constantBitRatios = {};
            if (this.constants) {
              for (var _name6 in this.constants) {
                if (needsConstantTypes) {
                  var type = utils.getVariableType(this.constants[_name6], this.strictIntegers);
                  this.constantTypes[_name6] = type;
                  this.kernelConstants.push({
                    name: _name6,
                    type: type
                  });
                } else {
                  this.kernelConstants.push({
                    name: _name6,
                    type: this.constantTypes[_name6]
                  });
                }
                this.constantBitRatios[_name6] = this.getBitRatio(this.constants[_name6]);
              }
            }
          }
        }, {
          key: "setOptimizeFloatMemory",
          value: function setOptimizeFloatMemory(flag) {
            this.optimizeFloatMemory = flag;
            return this;
          }
        }, {
          key: "toKernelOutput",
          value: function toKernelOutput(output) {
            if (output.hasOwnProperty('x')) {
              if (output.hasOwnProperty('y')) {
                if (output.hasOwnProperty('z')) {
                  return [output.x, output.y, output.z];
                } else {
                  return [output.x, output.y];
                }
              } else {
                return [output.x];
              }
            } else {
              return output;
            }
          }
        }, {
          key: "setOutput",
          value: function setOutput(output) {
            this.output = this.toKernelOutput(output);
            return this;
          }
        }, {
          key: "setDebug",
          value: function setDebug(flag) {
            this.debug = flag;
            return this;
          }
        }, {
          key: "setGraphical",
          value: function setGraphical(flag) {
            this.graphical = flag;
            this.precision = 'unsigned';
            return this;
          }
        }, {
          key: "setLoopMaxIterations",
          value: function setLoopMaxIterations(max) {
            this.loopMaxIterations = max;
            return this;
          }
        }, {
          key: "setConstants",
          value: function setConstants(constants) {
            this.constants = constants;
            return this;
          }
        }, {
          key: "setConstantTypes",
          value: function setConstantTypes(constantTypes) {
            this.constantTypes = constantTypes;
            return this;
          }
        }, {
          key: "setFunctions",
          value: function setFunctions(functions) {
            for (var i = 0; i < functions.length; i++) {
              this.addFunction(functions[i]);
            }
            return this;
          }
        }, {
          key: "setNativeFunctions",
          value: function setNativeFunctions(nativeFunctions) {
            for (var i = 0; i < nativeFunctions.length; i++) {
              var settings = nativeFunctions[i];
              var _name7 = settings.name,
                source = settings.source;
              this.addNativeFunction(_name7, source, settings);
            }
            return this;
          }
        }, {
          key: "setInjectedNative",
          value: function setInjectedNative(injectedNative) {
            this.injectedNative = injectedNative;
            return this;
          }
        }, {
          key: "setPipeline",
          value: function setPipeline(flag) {
            this.pipeline = flag;
            return this;
          }
        }, {
          key: "setPrecision",
          value: function setPrecision(flag) {
            this.precision = flag;
            return this;
          }
        }, {
          key: "setDimensions",
          value: function setDimensions(flag) {
            utils.warnDeprecated('method', 'setDimensions', 'setOutput');
            this.output = flag;
            return this;
          }
        }, {
          key: "setOutputToTexture",
          value: function setOutputToTexture(flag) {
            utils.warnDeprecated('method', 'setOutputToTexture', 'setPipeline');
            this.pipeline = flag;
            return this;
          }
        }, {
          key: "setImmutable",
          value: function setImmutable(flag) {
            this.immutable = flag;
            return this;
          }
        }, {
          key: "setCanvas",
          value: function setCanvas(canvas) {
            this.canvas = canvas;
            return this;
          }
        }, {
          key: "setStrictIntegers",
          value: function setStrictIntegers(flag) {
            this.strictIntegers = flag;
            return this;
          }
        }, {
          key: "setDynamicOutput",
          value: function setDynamicOutput(flag) {
            this.dynamicOutput = flag;
            return this;
          }
        }, {
          key: "setHardcodeConstants",
          value: function setHardcodeConstants(flag) {
            utils.warnDeprecated('method', 'setHardcodeConstants');
            this.setDynamicOutput(flag);
            this.setDynamicArguments(flag);
            return this;
          }
        }, {
          key: "setDynamicArguments",
          value: function setDynamicArguments(flag) {
            this.dynamicArguments = flag;
            return this;
          }
        }, {
          key: "setUseLegacyEncoder",
          value: function setUseLegacyEncoder(flag) {
            this.useLegacyEncoder = flag;
            return this;
          }
        }, {
          key: "setWarnVarUsage",
          value: function setWarnVarUsage(flag) {
            utils.warnDeprecated('method', 'setWarnVarUsage');
            return this;
          }
        }, {
          key: "getCanvas",
          value: function getCanvas() {
            utils.warnDeprecated('method', 'getCanvas');
            return this.canvas;
          }
        }, {
          key: "getWebGl",
          value: function getWebGl() {
            utils.warnDeprecated('method', 'getWebGl');
            return this.context;
          }
        }, {
          key: "setContext",
          value: function setContext(context) {
            this.context = context;
            return this;
          }
        }, {
          key: "setArgumentTypes",
          value: function setArgumentTypes(argumentTypes) {
            if (Array.isArray(argumentTypes)) {
              this.argumentTypes = argumentTypes;
            } else {
              this.argumentTypes = [];
              for (var p in argumentTypes) {
                if (!argumentTypes.hasOwnProperty(p)) continue;
                var argumentIndex = this.argumentNames.indexOf(p);
                if (argumentIndex === -1) throw new Error("unable to find argument ".concat(p));
                this.argumentTypes[argumentIndex] = argumentTypes[p];
              }
            }
            return this;
          }
        }, {
          key: "setTactic",
          value: function setTactic(tactic) {
            this.tactic = tactic;
            return this;
          }
        }, {
          key: "requestFallback",
          value: function requestFallback(args) {
            if (!this.onRequestFallback) {
              throw new Error("\"onRequestFallback\" not defined on ".concat(this.constructor.name));
            }
            this.fallbackRequested = true;
            return this.onRequestFallback(args);
          }
        }, {
          key: "validateSettings",
          value: function validateSettings() {
            throw new Error("\"validateSettings\" not defined on ".concat(this.constructor.name));
          }
        }, {
          key: "addSubKernel",
          value: function addSubKernel(subKernel) {
            if (this.subKernels === null) {
              this.subKernels = [];
            }
            if (!subKernel.source) throw new Error('subKernel missing "source" property');
            if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing "property" property');
            if (!subKernel.name) throw new Error('subKernel missing "name" property');
            this.subKernels.push(subKernel);
            return this;
          }
        }, {
          key: "destroy",
          value: function destroy(removeCanvasReferences) {
            throw new Error("\"destroy\" called on ".concat(this.constructor.name));
          }
        }, {
          key: "getBitRatio",
          value: function getBitRatio(value) {
            if (this.precision === 'single') {
              return 4;
            } else if (Array.isArray(value[0])) {
              return this.getBitRatio(value[0]);
            } else if (value.constructor === Input) {
              return this.getBitRatio(value.value);
            }
            switch (value.constructor) {
              case Uint8ClampedArray:
              case Uint8Array:
              case Int8Array:
                return 1;
              case Uint16Array:
              case Int16Array:
                return 2;
              case Float32Array:
              case Int32Array:
              default:
                return 4;
            }
          }
        }, {
          key: "getPixels",
          value: function getPixels(flip) {
            throw new Error("\"getPixels\" called on ".concat(this.constructor.name));
          }
        }, {
          key: "checkOutput",
          value: function checkOutput() {
            if (!this.output || !utils.isArray(this.output)) throw new Error('kernel.output not an array');
            if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');
            for (var i = 0; i < this.output.length; i++) {
              if (isNaN(this.output[i]) || this.output[i] < 1) {
                throw new Error("".concat(this.constructor.name, ".output[").concat(i, "] incorrectly defined as `").concat(this.output[i], "`, needs to be numeric, and greater than 0"));
              }
            }
          }
        }, {
          key: "prependString",
          value: function prependString(value) {
            throw new Error("\"prependString\" called on ".concat(this.constructor.name));
          }
        }, {
          key: "hasPrependString",
          value: function hasPrependString(value) {
            throw new Error("\"hasPrependString\" called on ".concat(this.constructor.name));
          }
        }, {
          key: "toJSON",
          value: function toJSON() {
            return {
              settings: {
                output: this.output,
                pipeline: this.pipeline,
                argumentNames: this.argumentNames,
                argumentsTypes: this.argumentTypes,
                constants: this.constants,
                pluginNames: this.plugins ? this.plugins.map(function (plugin) {
                  return plugin.name;
                }) : null,
                returnType: this.returnType
              }
            };
          }
        }, {
          key: "buildSignature",
          value: function buildSignature(args) {
            var Constructor = this.constructor;
            this.signature = Constructor.getSignature(this, Constructor.getArgumentTypes(this, args));
          }
        }, {
          key: "functionToIGPUFunction",
          value: function functionToIGPUFunction(source) {
            var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');
            var sourceString = typeof source === 'string' ? source : source.toString();
            var argumentTypes = [];
            if (Array.isArray(settings.argumentTypes)) {
              argumentTypes = settings.argumentTypes;
            } else if (typeof settings.argumentTypes === 'object') {
              argumentTypes = utils.getArgumentNamesFromString(sourceString).map(function (name) {
                return settings.argumentTypes[name];
              }) || [];
            } else {
              argumentTypes = settings.argumentTypes || [];
            }
            return {
              name: utils.getFunctionNameFromString(sourceString) || null,
              source: sourceString,
              argumentTypes: argumentTypes,
              returnType: settings.returnType || null
            };
          }
        }, {
          key: "onActivate",
          value: function onActivate(previousKernel) {}
        }], [{
          key: "isSupported",
          get: function get() {
            throw new Error("\"isSupported\" not implemented on ".concat(this.name));
          }
        }, {
          key: "isContextMatch",
          value: function isContextMatch(context) {
            throw new Error("\"isContextMatch\" not implemented on ".concat(this.name));
          }
        }, {
          key: "getFeatures",
          value: function getFeatures() {
            throw new Error("\"getFeatures\" not implemented on ".concat(this.name));
          }
        }, {
          key: "destroyContext",
          value: function destroyContext(context) {
            throw new Error("\"destroyContext\" called on ".concat(this.name));
          }
        }, {
          key: "nativeFunctionArguments",
          value: function nativeFunctionArguments() {
            throw new Error("\"nativeFunctionArguments\" called on ".concat(this.name));
          }
        }, {
          key: "nativeFunctionReturnType",
          value: function nativeFunctionReturnType() {
            throw new Error("\"nativeFunctionReturnType\" called on ".concat(this.name));
          }
        }, {
          key: "combineKernels",
          value: function combineKernels() {
            throw new Error("\"combineKernels\" called on ".concat(this.name));
          }
        }, {
          key: "getArgumentTypes",
          value: function getArgumentTypes(kernel, args) {
            var argumentTypes = new Array(args.length);
            for (var i = 0; i < args.length; i++) {
              var arg = args[i];
              var type = kernel.argumentTypes[i];
              if (arg.type) {
                argumentTypes[i] = arg.type;
              } else {
                switch (type) {
                  case 'Number':
                  case 'Integer':
                  case 'Float':
                  case 'ArrayTexture(1)':
                    argumentTypes[i] = utils.getVariableType(arg);
                    break;
                  default:
                    argumentTypes[i] = type;
                }
              }
            }
            return argumentTypes;
          }
        }, {
          key: "getSignature",
          value: function getSignature(kernel, argumentTypes) {
            throw new Error("\"getSignature\" not implemented on ".concat(this.name));
          }
        }]);
        return Kernel;
      }();
      function splitArgumentTypes(argumentTypesObject) {
        var argumentNames = Object.keys(argumentTypesObject);
        var argumentTypes = [];
        for (var i = 0; i < argumentNames.length; i++) {
          var argumentName = argumentNames[i];
          argumentTypes.push(argumentTypesObject[argumentName]);
        }
        return {
          argumentTypes: argumentTypes,
          argumentNames: argumentNames
        };
      }
      module.exports = {
        Kernel: Kernel
      };
    }, {
      "../input": 110,
      "../utils": 114
    }],
    37: [function (require, module, exports) {
      var fragmentShader = "__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nvarying vec2 vTexCoord;\n\nfloat acosh(float x) {\n  return log(x + sqrt(x * x - 1.0));\n}\n\nfloat sinh(float x) {\n  return (pow(".concat(Math.E, ", x) - pow(").concat(Math.E, ", -x)) / 2.0;\n}\n\nfloat asinh(float x) {\n  return log(x + sqrt(x * x + 1.0));\n}\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat atanh(float x) {\n  x = (x + 1.0) / (x - 1.0);\n  if (x < 0.0) {\n    return 0.5 * log(-x);\n  }\n  return 0.5 * log(x);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat cosh(float x) {\n  return (pow(").concat(Math.E, ", x) + pow(").concat(Math.E, ", -x)) / 2.0; \n}\n\nfloat expm1(float x) {\n  return pow(").concat(Math.E, ", x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat tanh(float x) {\n  float e = exp(2.0 * x);\n  return (e - 1.0) / (e + 1.0);\n}\n\nfloat trunc(float x) {\n  if (x >= 0.0) {\n    return floor(x); \n  } else {\n    return ceil(x);\n  }\n}\n\nvec4 _round(vec4 x) {\n  return floor(x + 0.5);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x / y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(_round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(_round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\n  return 0.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  if (channel == 0) return texel.r * 255.0;\n  if (channel == 1) return texel.g * 255.0;\n  if (channel == 2) return texel.b * 255.0;\n  if (channel == 3) return texel.a * 255.0;\n  return 0.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return texel.r;\n  if (channel == 1) return texel.g;\n  if (channel == 2) return texel.b;\n  if (channel == 3) return texel.a;\n  return 0.0;\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture2D(tex, st / vec2(texSize));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n  \n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nvoid color(sampler2D image) {\n  actualColor = texture2D(image, vTexCoord);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}");
      module.exports = {
        fragmentShader: fragmentShader
      };
    }, {}],
    38: [function (require, module, exports) {
      var _require77 = require('../../utils'),
        utils = _require77.utils;
      var _require78 = require('../function-node'),
        FunctionNode = _require78.FunctionNode;
      var WebGLFunctionNode = /*#__PURE__*/function (_FunctionNode2) {
        "use strict";

        _inherits(WebGLFunctionNode, _FunctionNode2);
        var _super25 = _createSuper(WebGLFunctionNode);
        function WebGLFunctionNode(source, settings) {
          var _this25;
          _classCallCheck(this, WebGLFunctionNode);
          _this25 = _super25.call(this, source, settings);
          if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {
            _this25.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;
          }
          return _this25;
        }
        _createClass(WebGLFunctionNode, [{
          key: "astConditionalExpression",
          value: function astConditionalExpression(ast, retArr) {
            if (ast.type !== 'ConditionalExpression') {
              throw this.astErrorOutput('Not a conditional expression', ast);
            }
            var consequentType = this.getType(ast.consequent);
            var alternateType = this.getType(ast.alternate);
            if (consequentType === null && alternateType === null) {
              retArr.push('if (');
              this.astGeneric(ast.test, retArr);
              retArr.push(') {');
              this.astGeneric(ast.consequent, retArr);
              retArr.push(';');
              retArr.push('} else {');
              this.astGeneric(ast.alternate, retArr);
              retArr.push(';');
              retArr.push('}');
              return retArr;
            }
            retArr.push('(');
            this.astGeneric(ast.test, retArr);
            retArr.push('?');
            this.astGeneric(ast.consequent, retArr);
            retArr.push(':');
            this.astGeneric(ast.alternate, retArr);
            retArr.push(')');
            return retArr;
          }
        }, {
          key: "astFunction",
          value: function astFunction(ast, retArr) {
            if (this.isRootKernel) {
              retArr.push('void');
            } else {
              if (!this.returnType) {
                var lastReturn = this.findLastReturn();
                if (lastReturn) {
                  this.returnType = this.getType(ast.body);
                  if (this.returnType === 'LiteralInteger') {
                    this.returnType = 'Number';
                  }
                }
              }
              var returnType = this.returnType;
              if (!returnType) {
                retArr.push('void');
              } else {
                var type = typeMap[returnType];
                if (!type) {
                  throw new Error("unknown type ".concat(returnType));
                }
                retArr.push(type);
              }
            }
            retArr.push(' ');
            retArr.push(this.name);
            retArr.push('(');
            if (!this.isRootKernel) {
              for (var i = 0; i < this.argumentNames.length; ++i) {
                var argumentName = this.argumentNames[i];
                if (i > 0) {
                  retArr.push(', ');
                }
                var argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)];
                if (!argumentType) {
                  throw this.astErrorOutput("Unknown argument ".concat(argumentName, " type"), ast);
                }
                if (argumentType === 'LiteralInteger') {
                  this.argumentTypes[i] = argumentType = 'Number';
                }
                var _type = typeMap[argumentType];
                if (!_type) {
                  throw this.astErrorOutput('Unexpected expression', ast);
                }
                var _name8 = utils.sanitizeName(argumentName);
                if (_type === 'sampler2D' || _type === 'sampler2DArray') {
                  retArr.push("".concat(_type, " user_").concat(_name8, ",ivec2 user_").concat(_name8, "Size,ivec3 user_").concat(_name8, "Dim"));
                } else {
                  retArr.push("".concat(_type, " user_").concat(_name8));
                }
              }
            }
            retArr.push(') {\n');
            for (var _i15 = 0; _i15 < ast.body.body.length; ++_i15) {
              this.astGeneric(ast.body.body[_i15], retArr);
              retArr.push('\n');
            }
            retArr.push('}\n');
            return retArr;
          }
        }, {
          key: "astReturnStatement",
          value: function astReturnStatement(ast, retArr) {
            if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);
            this.pushState('skip-literal-correction');
            var type = this.getType(ast.argument);
            this.popState('skip-literal-correction');
            var result = [];
            if (!this.returnType) {
              if (type === 'LiteralInteger' || type === 'Integer') {
                this.returnType = 'Number';
              } else {
                this.returnType = type;
              }
            }
            switch (this.returnType) {
              case 'LiteralInteger':
              case 'Number':
              case 'Float':
                switch (type) {
                  case 'Integer':
                    result.push('float(');
                    this.astGeneric(ast.argument, result);
                    result.push(')');
                    break;
                  case 'LiteralInteger':
                    this.castLiteralToFloat(ast.argument, result);
                    if (this.getType(ast) === 'Integer') {
                      result.unshift('float(');
                      result.push(')');
                    }
                    break;
                  default:
                    this.astGeneric(ast.argument, result);
                }
                break;
              case 'Integer':
                switch (type) {
                  case 'Float':
                  case 'Number':
                    this.castValueToInteger(ast.argument, result);
                    break;
                  case 'LiteralInteger':
                    this.castLiteralToInteger(ast.argument, result);
                    break;
                  default:
                    this.astGeneric(ast.argument, result);
                }
                break;
              case 'Array(4)':
              case 'Array(3)':
              case 'Array(2)':
              case 'Matrix(2)':
              case 'Matrix(3)':
              case 'Matrix(4)':
              case 'Input':
                this.astGeneric(ast.argument, result);
                break;
              default:
                throw this.astErrorOutput("unhandled return type ".concat(this.returnType), ast);
            }
            if (this.isRootKernel) {
              retArr.push("kernelResult = ".concat(result.join(''), ";"));
              retArr.push('return;');
            } else if (this.isSubKernel) {
              retArr.push("subKernelResult_".concat(this.name, " = ").concat(result.join(''), ";"));
              retArr.push("return subKernelResult_".concat(this.name, ";"));
            } else {
              retArr.push("return ".concat(result.join(''), ";"));
            }
            return retArr;
          }
        }, {
          key: "astLiteral",
          value: function astLiteral(ast, retArr) {
            if (isNaN(ast.value)) {
              throw this.astErrorOutput('Non-numeric literal not supported : ' + ast.value, ast);
            }
            var key = this.astKey(ast);
            if (Number.isInteger(ast.value)) {
              if (this.isState('casting-to-integer') || this.isState('building-integer')) {
                this.literalTypes[key] = 'Integer';
                retArr.push("".concat(ast.value));
              } else if (this.isState('casting-to-float') || this.isState('building-float')) {
                this.literalTypes[key] = 'Number';
                retArr.push("".concat(ast.value, ".0"));
              } else {
                this.literalTypes[key] = 'Number';
                retArr.push("".concat(ast.value, ".0"));
              }
            } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {
              this.literalTypes[key] = 'Integer';
              retArr.push(Math.round(ast.value));
            } else {
              this.literalTypes[key] = 'Number';
              retArr.push("".concat(ast.value));
            }
            return retArr;
          }
        }, {
          key: "astBinaryExpression",
          value: function astBinaryExpression(ast, retArr) {
            if (this.checkAndUpconvertOperator(ast, retArr)) {
              return retArr;
            }
            if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {
              retArr.push('divWithIntCheck(');
              this.pushState('building-float');
              switch (this.getType(ast.left)) {
                case 'Integer':
                  this.castValueToFloat(ast.left, retArr);
                  break;
                case 'LiteralInteger':
                  this.castLiteralToFloat(ast.left, retArr);
                  break;
                default:
                  this.astGeneric(ast.left, retArr);
              }
              retArr.push(', ');
              switch (this.getType(ast.right)) {
                case 'Integer':
                  this.castValueToFloat(ast.right, retArr);
                  break;
                case 'LiteralInteger':
                  this.castLiteralToFloat(ast.right, retArr);
                  break;
                default:
                  this.astGeneric(ast.right, retArr);
              }
              this.popState('building-float');
              retArr.push(')');
              return retArr;
            }
            retArr.push('(');
            var leftType = this.getType(ast.left) || 'Number';
            var rightType = this.getType(ast.right) || 'Number';
            if (!leftType || !rightType) {
              throw this.astErrorOutput("Unhandled binary expression", ast);
            }
            var key = leftType + ' & ' + rightType;
            switch (key) {
              case 'Integer & Integer':
                this.pushState('building-integer');
                this.astGeneric(ast.left, retArr);
                retArr.push(operatorMap[ast.operator] || ast.operator);
                this.astGeneric(ast.right, retArr);
                this.popState('building-integer');
                break;
              case 'Number & Float':
              case 'Float & Number':
              case 'Float & Float':
              case 'Number & Number':
                this.pushState('building-float');
                this.astGeneric(ast.left, retArr);
                retArr.push(operatorMap[ast.operator] || ast.operator);
                this.astGeneric(ast.right, retArr);
                this.popState('building-float');
                break;
              case 'LiteralInteger & LiteralInteger':
                if (this.isState('casting-to-integer') || this.isState('building-integer')) {
                  this.pushState('building-integer');
                  this.astGeneric(ast.left, retArr);
                  retArr.push(operatorMap[ast.operator] || ast.operator);
                  this.astGeneric(ast.right, retArr);
                  this.popState('building-integer');
                } else {
                  this.pushState('building-float');
                  this.castLiteralToFloat(ast.left, retArr);
                  retArr.push(operatorMap[ast.operator] || ast.operator);
                  this.castLiteralToFloat(ast.right, retArr);
                  this.popState('building-float');
                }
                break;
              case 'Integer & Float':
              case 'Integer & Number':
                if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {
                  if (!Number.isInteger(ast.right.value)) {
                    this.pushState('building-float');
                    this.castValueToFloat(ast.left, retArr);
                    retArr.push(operatorMap[ast.operator] || ast.operator);
                    this.astGeneric(ast.right, retArr);
                    this.popState('building-float');
                    break;
                  }
                }
                this.pushState('building-integer');
                this.astGeneric(ast.left, retArr);
                retArr.push(operatorMap[ast.operator] || ast.operator);
                this.pushState('casting-to-integer');
                if (ast.right.type === 'Literal') {
                  var literalResult = [];
                  this.astGeneric(ast.right, literalResult);
                  var literalType = this.getType(ast.right);
                  if (literalType === 'Integer') {
                    retArr.push(literalResult.join(''));
                  } else {
                    throw this.astErrorOutput("Unhandled binary expression with literal", ast);
                  }
                } else {
                  retArr.push('int(');
                  this.astGeneric(ast.right, retArr);
                  retArr.push(')');
                }
                this.popState('casting-to-integer');
                this.popState('building-integer');
                break;
              case 'Integer & LiteralInteger':
                this.pushState('building-integer');
                this.astGeneric(ast.left, retArr);
                retArr.push(operatorMap[ast.operator] || ast.operator);
                this.castLiteralToInteger(ast.right, retArr);
                this.popState('building-integer');
                break;
              case 'Number & Integer':
                this.pushState('building-float');
                this.astGeneric(ast.left, retArr);
                retArr.push(operatorMap[ast.operator] || ast.operator);
                this.castValueToFloat(ast.right, retArr);
                this.popState('building-float');
                break;
              case 'Float & LiteralInteger':
              case 'Number & LiteralInteger':
                this.pushState('building-float');
                this.astGeneric(ast.left, retArr);
                retArr.push(operatorMap[ast.operator] || ast.operator);
                this.castLiteralToFloat(ast.right, retArr);
                this.popState('building-float');
                break;
              case 'LiteralInteger & Float':
              case 'LiteralInteger & Number':
                if (this.isState('casting-to-integer')) {
                  this.pushState('building-integer');
                  this.castLiteralToInteger(ast.left, retArr);
                  retArr.push(operatorMap[ast.operator] || ast.operator);
                  this.castValueToInteger(ast.right, retArr);
                  this.popState('building-integer');
                } else {
                  this.pushState('building-float');
                  this.astGeneric(ast.left, retArr);
                  retArr.push(operatorMap[ast.operator] || ast.operator);
                  this.pushState('casting-to-float');
                  this.astGeneric(ast.right, retArr);
                  this.popState('casting-to-float');
                  this.popState('building-float');
                }
                break;
              case 'LiteralInteger & Integer':
                this.pushState('building-integer');
                this.castLiteralToInteger(ast.left, retArr);
                retArr.push(operatorMap[ast.operator] || ast.operator);
                this.astGeneric(ast.right, retArr);
                this.popState('building-integer');
                break;
              case 'Boolean & Boolean':
                this.pushState('building-boolean');
                this.astGeneric(ast.left, retArr);
                retArr.push(operatorMap[ast.operator] || ast.operator);
                this.astGeneric(ast.right, retArr);
                this.popState('building-boolean');
                break;
              case 'Float & Integer':
                this.pushState('building-float');
                this.astGeneric(ast.left, retArr);
                retArr.push(operatorMap[ast.operator] || ast.operator);
                this.castValueToFloat(ast.right, retArr);
                this.popState('building-float');
                break;
              default:
                throw this.astErrorOutput("Unhandled binary expression between ".concat(key), ast);
            }
            retArr.push(')');
            return retArr;
          }
        }, {
          key: "checkAndUpconvertOperator",
          value: function checkAndUpconvertOperator(ast, retArr) {
            var bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);
            if (bitwiseResult) {
              return bitwiseResult;
            }
            var upconvertableOperators = {
              '%': this.fixIntegerDivisionAccuracy ? 'integerCorrectionModulo' : 'modulo',
              '**': 'pow'
            };
            var foundOperator = upconvertableOperators[ast.operator];
            if (!foundOperator) return null;
            retArr.push(foundOperator);
            retArr.push('(');
            switch (this.getType(ast.left)) {
              case 'Integer':
                this.castValueToFloat(ast.left, retArr);
                break;
              case 'LiteralInteger':
                this.castLiteralToFloat(ast.left, retArr);
                break;
              default:
                this.astGeneric(ast.left, retArr);
            }
            retArr.push(',');
            switch (this.getType(ast.right)) {
              case 'Integer':
                this.castValueToFloat(ast.right, retArr);
                break;
              case 'LiteralInteger':
                this.castLiteralToFloat(ast.right, retArr);
                break;
              default:
                this.astGeneric(ast.right, retArr);
            }
            retArr.push(')');
            return retArr;
          }
        }, {
          key: "checkAndUpconvertBitwiseOperators",
          value: function checkAndUpconvertBitwiseOperators(ast, retArr) {
            var upconvertableOperators = {
              '&': 'bitwiseAnd',
              '|': 'bitwiseOr',
              '^': 'bitwiseXOR',
              '<<': 'bitwiseZeroFillLeftShift',
              '>>': 'bitwiseSignedRightShift',
              '>>>': 'bitwiseZeroFillRightShift'
            };
            var foundOperator = upconvertableOperators[ast.operator];
            if (!foundOperator) return null;
            retArr.push(foundOperator);
            retArr.push('(');
            var leftType = this.getType(ast.left);
            switch (leftType) {
              case 'Number':
              case 'Float':
                this.castValueToInteger(ast.left, retArr);
                break;
              case 'LiteralInteger':
                this.castLiteralToInteger(ast.left, retArr);
                break;
              default:
                this.astGeneric(ast.left, retArr);
            }
            retArr.push(',');
            var rightType = this.getType(ast.right);
            switch (rightType) {
              case 'Number':
              case 'Float':
                this.castValueToInteger(ast.right, retArr);
                break;
              case 'LiteralInteger':
                this.castLiteralToInteger(ast.right, retArr);
                break;
              default:
                this.astGeneric(ast.right, retArr);
            }
            retArr.push(')');
            return retArr;
          }
        }, {
          key: "checkAndUpconvertBitwiseUnary",
          value: function checkAndUpconvertBitwiseUnary(ast, retArr) {
            var upconvertableOperators = {
              '~': 'bitwiseNot'
            };
            var foundOperator = upconvertableOperators[ast.operator];
            if (!foundOperator) return null;
            retArr.push(foundOperator);
            retArr.push('(');
            switch (this.getType(ast.argument)) {
              case 'Number':
              case 'Float':
                this.castValueToInteger(ast.argument, retArr);
                break;
              case 'LiteralInteger':
                this.castLiteralToInteger(ast.argument, retArr);
                break;
              default:
                this.astGeneric(ast.argument, retArr);
            }
            retArr.push(')');
            return retArr;
          }
        }, {
          key: "castLiteralToInteger",
          value: function castLiteralToInteger(ast, retArr) {
            this.pushState('casting-to-integer');
            this.astGeneric(ast, retArr);
            this.popState('casting-to-integer');
            return retArr;
          }
        }, {
          key: "castLiteralToFloat",
          value: function castLiteralToFloat(ast, retArr) {
            this.pushState('casting-to-float');
            this.astGeneric(ast, retArr);
            this.popState('casting-to-float');
            return retArr;
          }
        }, {
          key: "castValueToInteger",
          value: function castValueToInteger(ast, retArr) {
            this.pushState('casting-to-integer');
            retArr.push('int(');
            this.astGeneric(ast, retArr);
            retArr.push(')');
            this.popState('casting-to-integer');
            return retArr;
          }
        }, {
          key: "castValueToFloat",
          value: function castValueToFloat(ast, retArr) {
            this.pushState('casting-to-float');
            retArr.push('float(');
            this.astGeneric(ast, retArr);
            retArr.push(')');
            this.popState('casting-to-float');
            return retArr;
          }
        }, {
          key: "astIdentifierExpression",
          value: function astIdentifierExpression(idtNode, retArr) {
            if (idtNode.type !== 'Identifier') {
              throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);
            }
            var type = this.getType(idtNode);
            var name = utils.sanitizeName(idtNode.name);
            if (idtNode.name === 'Infinity') {
              retArr.push('3.402823466e+38');
            } else if (type === 'Boolean') {
              if (this.argumentNames.indexOf(name) > -1) {
                retArr.push("bool(user_".concat(name, ")"));
              } else {
                retArr.push("user_".concat(name));
              }
            } else {
              retArr.push("user_".concat(name));
            }
            return retArr;
          }
        }, {
          key: "astForStatement",
          value: function astForStatement(forNode, retArr) {
            if (forNode.type !== 'ForStatement') {
              throw this.astErrorOutput('Invalid for statement', forNode);
            }
            var initArr = [];
            var testArr = [];
            var updateArr = [];
            var bodyArr = [];
            var isSafe = null;
            if (forNode.init) {
              var declarations = forNode.init.declarations;
              if (declarations.length > 1) {
                isSafe = false;
              }
              this.astGeneric(forNode.init, initArr);
              for (var i = 0; i < declarations.length; i++) {
                if (declarations[i].init && declarations[i].init.type !== 'Literal') {
                  isSafe = false;
                }
              }
            } else {
              isSafe = false;
            }
            if (forNode.test) {
              this.astGeneric(forNode.test, testArr);
            } else {
              isSafe = false;
            }
            if (forNode.update) {
              this.astGeneric(forNode.update, updateArr);
            } else {
              isSafe = false;
            }
            if (forNode.body) {
              this.pushState('loop-body');
              this.astGeneric(forNode.body, bodyArr);
              this.popState('loop-body');
            }
            if (isSafe === null) {
              isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);
            }
            if (isSafe) {
              var initString = initArr.join('');
              var initNeedsSemiColon = initString[initString.length - 1] !== ';';
              retArr.push("for (".concat(initString).concat(initNeedsSemiColon ? ';' : '').concat(testArr.join(''), ";").concat(updateArr.join(''), "){\n"));
              retArr.push(bodyArr.join(''));
              retArr.push('}\n');
            } else {
              var iVariableName = this.getInternalVariableName('safeI');
              if (initArr.length > 0) {
                retArr.push(initArr.join(''), '\n');
              }
              retArr.push("for (int ".concat(iVariableName, "=0;").concat(iVariableName, "<LOOP_MAX;").concat(iVariableName, "++){\n"));
              if (testArr.length > 0) {
                retArr.push("if (!".concat(testArr.join(''), ") break;\n"));
              }
              retArr.push(bodyArr.join(''));
              retArr.push("\n".concat(updateArr.join(''), ";"));
              retArr.push('}\n');
            }
            return retArr;
          }
        }, {
          key: "astWhileStatement",
          value: function astWhileStatement(whileNode, retArr) {
            if (whileNode.type !== 'WhileStatement') {
              throw this.astErrorOutput('Invalid while statement', whileNode);
            }
            var iVariableName = this.getInternalVariableName('safeI');
            retArr.push("for (int ".concat(iVariableName, "=0;").concat(iVariableName, "<LOOP_MAX;").concat(iVariableName, "++){\n"));
            retArr.push('if (!');
            this.astGeneric(whileNode.test, retArr);
            retArr.push(') break;\n');
            this.astGeneric(whileNode.body, retArr);
            retArr.push('}\n');
            return retArr;
          }
        }, {
          key: "astDoWhileStatement",
          value: function astDoWhileStatement(doWhileNode, retArr) {
            if (doWhileNode.type !== 'DoWhileStatement') {
              throw this.astErrorOutput('Invalid while statement', doWhileNode);
            }
            var iVariableName = this.getInternalVariableName('safeI');
            retArr.push("for (int ".concat(iVariableName, "=0;").concat(iVariableName, "<LOOP_MAX;").concat(iVariableName, "++){\n"));
            this.astGeneric(doWhileNode.body, retArr);
            retArr.push('if (!');
            this.astGeneric(doWhileNode.test, retArr);
            retArr.push(') break;\n');
            retArr.push('}\n');
            return retArr;
          }
        }, {
          key: "astAssignmentExpression",
          value: function astAssignmentExpression(assNode, retArr) {
            if (assNode.operator === '%=') {
              this.astGeneric(assNode.left, retArr);
              retArr.push('=');
              retArr.push('mod(');
              this.astGeneric(assNode.left, retArr);
              retArr.push(',');
              this.astGeneric(assNode.right, retArr);
              retArr.push(')');
            } else if (assNode.operator === '**=') {
              this.astGeneric(assNode.left, retArr);
              retArr.push('=');
              retArr.push('pow(');
              this.astGeneric(assNode.left, retArr);
              retArr.push(',');
              this.astGeneric(assNode.right, retArr);
              retArr.push(')');
            } else {
              var leftType = this.getType(assNode.left);
              var rightType = this.getType(assNode.right);
              this.astGeneric(assNode.left, retArr);
              retArr.push(assNode.operator);
              if (leftType !== 'Integer' && rightType === 'Integer') {
                retArr.push('float(');
                this.astGeneric(assNode.right, retArr);
                retArr.push(')');
              } else {
                this.astGeneric(assNode.right, retArr);
              }
              return retArr;
            }
          }
        }, {
          key: "astBlockStatement",
          value: function astBlockStatement(bNode, retArr) {
            if (this.isState('loop-body')) {
              this.pushState('block-body');
              for (var i = 0; i < bNode.body.length; i++) {
                this.astGeneric(bNode.body[i], retArr);
              }
              this.popState('block-body');
            } else {
              retArr.push('{\n');
              for (var _i16 = 0; _i16 < bNode.body.length; _i16++) {
                this.astGeneric(bNode.body[_i16], retArr);
              }
              retArr.push('}\n');
            }
            return retArr;
          }
        }, {
          key: "astVariableDeclaration",
          value: function astVariableDeclaration(varDecNode, retArr) {
            var declarations = varDecNode.declarations;
            if (!declarations || !declarations[0] || !declarations[0].init) {
              throw this.astErrorOutput('Unexpected expression', varDecNode);
            }
            var result = [];
            var lastType = null;
            var declarationSets = [];
            var declarationSet = [];
            for (var i = 0; i < declarations.length; i++) {
              var declaration = declarations[i];
              var init = declaration.init;
              var info = this.getDeclaration(declaration.id);
              var actualType = this.getType(declaration.init);
              var type = actualType;
              if (type === 'LiteralInteger') {
                if (info.suggestedType === 'Integer') {
                  type = 'Integer';
                } else {
                  type = 'Number';
                }
              }
              var markupType = typeMap[type];
              if (!markupType) {
                throw this.astErrorOutput("Markup type ".concat(type, " not handled"), varDecNode);
              }
              var declarationResult = [];
              if (actualType === 'Integer' && type === 'Integer') {
                info.valueType = 'Number';
                if (i === 0 || lastType === null) {
                  declarationResult.push('float ');
                } else if (type !== lastType) {
                  throw new Error('Unhandled declaration');
                }
                lastType = type;
                declarationResult.push("user_".concat(utils.sanitizeName(declaration.id.name), "="));
                declarationResult.push('float(');
                this.astGeneric(init, declarationResult);
                declarationResult.push(')');
              } else {
                info.valueType = type;
                if (i === 0 || lastType === null) {
                  declarationResult.push("".concat(markupType, " "));
                } else if (type !== lastType) {
                  declarationSets.push(declarationSet.join(','));
                  declarationSet = [];
                  declarationResult.push("".concat(markupType, " "));
                }
                lastType = type;
                declarationResult.push("user_".concat(utils.sanitizeName(declaration.id.name), "="));
                if (actualType === 'Number' && type === 'Integer') {
                  if (init.left && init.left.type === 'Literal') {
                    this.astGeneric(init, declarationResult);
                  } else {
                    declarationResult.push('int(');
                    this.astGeneric(init, declarationResult);
                    declarationResult.push(')');
                  }
                } else if (actualType === 'LiteralInteger' && type === 'Integer') {
                  this.castLiteralToInteger(init, declarationResult);
                } else {
                  this.astGeneric(init, declarationResult);
                }
              }
              declarationSet.push(declarationResult.join(''));
            }
            if (declarationSet.length > 0) {
              declarationSets.push(declarationSet.join(','));
            }
            result.push(declarationSets.join(';'));
            retArr.push(result.join(''));
            retArr.push(';');
            return retArr;
          }
        }, {
          key: "astIfStatement",
          value: function astIfStatement(ifNode, retArr) {
            retArr.push('if (');
            this.astGeneric(ifNode.test, retArr);
            retArr.push(')');
            if (ifNode.consequent.type === 'BlockStatement') {
              this.astGeneric(ifNode.consequent, retArr);
            } else {
              retArr.push(' {\n');
              this.astGeneric(ifNode.consequent, retArr);
              retArr.push('\n}\n');
            }
            if (ifNode.alternate) {
              retArr.push('else ');
              if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {
                this.astGeneric(ifNode.alternate, retArr);
              } else {
                retArr.push(' {\n');
                this.astGeneric(ifNode.alternate, retArr);
                retArr.push('\n}\n');
              }
            }
            return retArr;
          }
        }, {
          key: "astSwitchStatement",
          value: function astSwitchStatement(ast, retArr) {
            if (ast.type !== 'SwitchStatement') {
              throw this.astErrorOutput('Invalid switch statement', ast);
            }
            var discriminant = ast.discriminant,
              cases = ast.cases;
            var type = this.getType(discriminant);
            var varName = "switchDiscriminant".concat(this.astKey(ast, '_'));
            switch (type) {
              case 'Float':
              case 'Number':
                retArr.push("float ".concat(varName, " = "));
                this.astGeneric(discriminant, retArr);
                retArr.push(';\n');
                break;
              case 'Integer':
                retArr.push("int ".concat(varName, " = "));
                this.astGeneric(discriminant, retArr);
                retArr.push(';\n');
                break;
            }
            if (cases.length === 1 && !cases[0].test) {
              this.astGeneric(cases[0].consequent, retArr);
              return retArr;
            }
            var fallingThrough = false;
            var defaultResult = [];
            var movingDefaultToEnd = false;
            var pastFirstIf = false;
            for (var i = 0; i < cases.length; i++) {
              if (!cases[i].test) {
                if (cases.length > i + 1) {
                  movingDefaultToEnd = true;
                  this.astGeneric(cases[i].consequent, defaultResult);
                  continue;
                } else {
                  retArr.push(' else {\n');
                }
              } else {
                if (i === 0 || !pastFirstIf) {
                  pastFirstIf = true;
                  retArr.push("if (".concat(varName, " == "));
                } else {
                  if (fallingThrough) {
                    retArr.push("".concat(varName, " == "));
                    fallingThrough = false;
                  } else {
                    retArr.push(" else if (".concat(varName, " == "));
                  }
                }
                if (type === 'Integer') {
                  var testType = this.getType(cases[i].test);
                  switch (testType) {
                    case 'Number':
                    case 'Float':
                      this.castValueToInteger(cases[i].test, retArr);
                      break;
                    case 'LiteralInteger':
                      this.castLiteralToInteger(cases[i].test, retArr);
                      break;
                  }
                } else if (type === 'Float') {
                  var _testType = this.getType(cases[i].test);
                  switch (_testType) {
                    case 'LiteralInteger':
                      this.castLiteralToFloat(cases[i].test, retArr);
                      break;
                    case 'Integer':
                      this.castValueToFloat(cases[i].test, retArr);
                      break;
                  }
                } else {
                  throw new Error('unhanlded');
                }
                if (!cases[i].consequent || cases[i].consequent.length === 0) {
                  fallingThrough = true;
                  retArr.push(' || ');
                  continue;
                }
                retArr.push(") {\n");
              }
              this.astGeneric(cases[i].consequent, retArr);
              retArr.push('\n}');
            }
            if (movingDefaultToEnd) {
              retArr.push(' else {');
              retArr.push(defaultResult.join(''));
              retArr.push('}');
            }
            return retArr;
          }
        }, {
          key: "astThisExpression",
          value: function astThisExpression(tNode, retArr) {
            retArr.push('this');
            return retArr;
          }
        }, {
          key: "astMemberExpression",
          value: function astMemberExpression(mNode, retArr) {
            var _this$getMemberExpres2 = this.getMemberExpressionDetails(mNode),
              property = _this$getMemberExpres2.property,
              name = _this$getMemberExpres2.name,
              signature = _this$getMemberExpres2.signature,
              origin = _this$getMemberExpres2.origin,
              type = _this$getMemberExpres2.type,
              xProperty = _this$getMemberExpres2.xProperty,
              yProperty = _this$getMemberExpres2.yProperty,
              zProperty = _this$getMemberExpres2.zProperty;
            switch (signature) {
              case 'value.thread.value':
              case 'this.thread.value':
                if (name !== 'x' && name !== 'y' && name !== 'z') {
                  throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);
                }
                retArr.push("threadId.".concat(name));
                return retArr;
              case 'this.output.value':
                if (this.dynamicOutput) {
                  switch (name) {
                    case 'x':
                      if (this.isState('casting-to-float')) {
                        retArr.push('float(uOutputDim.x)');
                      } else {
                        retArr.push('uOutputDim.x');
                      }
                      break;
                    case 'y':
                      if (this.isState('casting-to-float')) {
                        retArr.push('float(uOutputDim.y)');
                      } else {
                        retArr.push('uOutputDim.y');
                      }
                      break;
                    case 'z':
                      if (this.isState('casting-to-float')) {
                        retArr.push('float(uOutputDim.z)');
                      } else {
                        retArr.push('uOutputDim.z');
                      }
                      break;
                    default:
                      throw this.astErrorOutput('Unexpected expression', mNode);
                  }
                } else {
                  switch (name) {
                    case 'x':
                      if (this.isState('casting-to-integer')) {
                        retArr.push(this.output[0]);
                      } else {
                        retArr.push(this.output[0], '.0');
                      }
                      break;
                    case 'y':
                      if (this.isState('casting-to-integer')) {
                        retArr.push(this.output[1]);
                      } else {
                        retArr.push(this.output[1], '.0');
                      }
                      break;
                    case 'z':
                      if (this.isState('casting-to-integer')) {
                        retArr.push(this.output[2]);
                      } else {
                        retArr.push(this.output[2], '.0');
                      }
                      break;
                    default:
                      throw this.astErrorOutput('Unexpected expression', mNode);
                  }
                }
                return retArr;
              case 'value':
                throw this.astErrorOutput('Unexpected expression', mNode);
              case 'value[]':
              case 'value[][]':
              case 'value[][][]':
              case 'value[][][][]':
              case 'value.value':
                if (origin === 'Math') {
                  retArr.push(Math[name]);
                  return retArr;
                }
                var cleanName = utils.sanitizeName(name);
                switch (property) {
                  case 'r':
                    retArr.push("user_".concat(cleanName, ".r"));
                    return retArr;
                  case 'g':
                    retArr.push("user_".concat(cleanName, ".g"));
                    return retArr;
                  case 'b':
                    retArr.push("user_".concat(cleanName, ".b"));
                    return retArr;
                  case 'a':
                    retArr.push("user_".concat(cleanName, ".a"));
                    return retArr;
                }
                break;
              case 'this.constants.value':
                if (typeof xProperty === 'undefined') {
                  switch (type) {
                    case 'Array(2)':
                    case 'Array(3)':
                    case 'Array(4)':
                      retArr.push("constants_".concat(utils.sanitizeName(name)));
                      return retArr;
                  }
                }
              case 'this.constants.value[]':
              case 'this.constants.value[][]':
              case 'this.constants.value[][][]':
              case 'this.constants.value[][][][]':
                break;
              case 'fn()[]':
                this.astCallExpression(mNode.object, retArr);
                retArr.push('[');
                retArr.push(this.memberExpressionPropertyMarkup(property));
                retArr.push(']');
                return retArr;
              case 'fn()[][]':
                this.astCallExpression(mNode.object.object, retArr);
                retArr.push('[');
                retArr.push(this.memberExpressionPropertyMarkup(mNode.object.property));
                retArr.push(']');
                retArr.push('[');
                retArr.push(this.memberExpressionPropertyMarkup(mNode.property));
                retArr.push(']');
                return retArr;
              case '[][]':
                this.astArrayExpression(mNode.object, retArr);
                retArr.push('[');
                retArr.push(this.memberExpressionPropertyMarkup(property));
                retArr.push(']');
                return retArr;
              default:
                throw this.astErrorOutput('Unexpected expression', mNode);
            }
            if (mNode.computed === false) {
              switch (type) {
                case 'Number':
                case 'Integer':
                case 'Float':
                case 'Boolean':
                  retArr.push("".concat(origin, "_").concat(utils.sanitizeName(name)));
                  return retArr;
              }
            }
            var markupName = "".concat(origin, "_").concat(utils.sanitizeName(name));
            switch (type) {
              case 'Array(2)':
              case 'Array(3)':
              case 'Array(4)':
                this.astGeneric(mNode.object, retArr);
                retArr.push('[');
                retArr.push(this.memberExpressionPropertyMarkup(xProperty));
                retArr.push(']');
                break;
              case 'HTMLImageArray':
                retArr.push("getImage3D(".concat(markupName, ", ").concat(markupName, "Size, ").concat(markupName, "Dim, "));
                this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);
                retArr.push(')');
                break;
              case 'ArrayTexture(1)':
                retArr.push("getFloatFromSampler2D(".concat(markupName, ", ").concat(markupName, "Size, ").concat(markupName, "Dim, "));
                this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);
                retArr.push(')');
                break;
              case 'Array1D(2)':
              case 'Array2D(2)':
              case 'Array3D(2)':
                retArr.push("getMemoryOptimizedVec2(".concat(markupName, ", ").concat(markupName, "Size, ").concat(markupName, "Dim, "));
                this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);
                retArr.push(')');
                break;
              case 'ArrayTexture(2)':
                retArr.push("getVec2FromSampler2D(".concat(markupName, ", ").concat(markupName, "Size, ").concat(markupName, "Dim, "));
                this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);
                retArr.push(')');
                break;
              case 'Array1D(3)':
              case 'Array2D(3)':
              case 'Array3D(3)':
                retArr.push("getMemoryOptimizedVec3(".concat(markupName, ", ").concat(markupName, "Size, ").concat(markupName, "Dim, "));
                this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);
                retArr.push(')');
                break;
              case 'ArrayTexture(3)':
                retArr.push("getVec3FromSampler2D(".concat(markupName, ", ").concat(markupName, "Size, ").concat(markupName, "Dim, "));
                this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);
                retArr.push(')');
                break;
              case 'Array1D(4)':
              case 'Array2D(4)':
              case 'Array3D(4)':
                retArr.push("getMemoryOptimizedVec4(".concat(markupName, ", ").concat(markupName, "Size, ").concat(markupName, "Dim, "));
                this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);
                retArr.push(')');
                break;
              case 'ArrayTexture(4)':
              case 'HTMLCanvas':
              case 'OffscreenCanvas':
              case 'HTMLImage':
              case 'ImageBitmap':
              case 'ImageData':
              case 'HTMLVideo':
                retArr.push("getVec4FromSampler2D(".concat(markupName, ", ").concat(markupName, "Size, ").concat(markupName, "Dim, "));
                this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);
                retArr.push(')');
                break;
              case 'NumberTexture':
              case 'Array':
              case 'Array2D':
              case 'Array3D':
              case 'Array4D':
              case 'Input':
              case 'Number':
              case 'Float':
              case 'Integer':
                if (this.precision === 'single') {
                  retArr.push("getMemoryOptimized32(".concat(markupName, ", ").concat(markupName, "Size, ").concat(markupName, "Dim, "));
                  this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);
                  retArr.push(')');
                } else {
                  var bitRatio = origin === 'user' ? this.lookupFunctionArgumentBitRatio(this.name, name) : this.constantBitRatios[name];
                  switch (bitRatio) {
                    case 1:
                      retArr.push("get8(".concat(markupName, ", ").concat(markupName, "Size, ").concat(markupName, "Dim, "));
                      break;
                    case 2:
                      retArr.push("get16(".concat(markupName, ", ").concat(markupName, "Size, ").concat(markupName, "Dim, "));
                      break;
                    case 4:
                    case 0:
                      retArr.push("get32(".concat(markupName, ", ").concat(markupName, "Size, ").concat(markupName, "Dim, "));
                      break;
                    default:
                      throw new Error("unhandled bit ratio of ".concat(bitRatio));
                  }
                  this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);
                  retArr.push(')');
                }
                break;
              case 'MemoryOptimizedNumberTexture':
                retArr.push("getMemoryOptimized32(".concat(markupName, ", ").concat(markupName, "Size, ").concat(markupName, "Dim, "));
                this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);
                retArr.push(')');
                break;
              case 'Matrix(2)':
              case 'Matrix(3)':
              case 'Matrix(4)':
                retArr.push("".concat(markupName, "[").concat(this.memberExpressionPropertyMarkup(yProperty), "]"));
                if (yProperty) {
                  retArr.push("[".concat(this.memberExpressionPropertyMarkup(xProperty), "]"));
                }
                break;
              default:
                throw new Error("unhandled member expression \"".concat(type, "\""));
            }
            return retArr;
          }
        }, {
          key: "astCallExpression",
          value: function astCallExpression(ast, retArr) {
            if (!ast.callee) {
              throw this.astErrorOutput('Unknown CallExpression', ast);
            }
            var functionName = null;
            var isMathFunction = this.isAstMathFunction(ast);
            if (isMathFunction || ast.callee.object && ast.callee.object.type === 'ThisExpression') {
              functionName = ast.callee.property.name;
            } else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {
              functionName = ast.callee.expressions[1].property.name;
            } else {
              functionName = ast.callee.name;
            }
            if (!functionName) {
              throw this.astErrorOutput("Unhandled function, couldn't find name", ast);
            }
            switch (functionName) {
              case 'pow':
                functionName = '_pow';
                break;
              case 'round':
                functionName = '_round';
                break;
            }
            if (this.calledFunctions.indexOf(functionName) < 0) {
              this.calledFunctions.push(functionName);
            }
            if (functionName === 'random' && this.plugins && this.plugins.length > 0) {
              for (var i = 0; i < this.plugins.length; i++) {
                var plugin = this.plugins[i];
                if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {
                  retArr.push(plugin.functionReplace);
                  return retArr;
                }
              }
            }
            if (this.onFunctionCall) {
              this.onFunctionCall(this.name, functionName, ast.arguments);
            }
            retArr.push(functionName);
            retArr.push('(');
            if (isMathFunction) {
              for (var _i17 = 0; _i17 < ast.arguments.length; ++_i17) {
                var argument = ast.arguments[_i17];
                var argumentType = this.getType(argument);
                if (_i17 > 0) {
                  retArr.push(', ');
                }
                switch (argumentType) {
                  case 'Integer':
                    this.castValueToFloat(argument, retArr);
                    break;
                  default:
                    this.astGeneric(argument, retArr);
                    break;
                }
              }
            } else {
              var targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];
              for (var _i18 = 0; _i18 < ast.arguments.length; ++_i18) {
                var _argument = ast.arguments[_i18];
                var targetType = targetTypes[_i18];
                if (_i18 > 0) {
                  retArr.push(', ');
                }
                var _argumentType = this.getType(_argument);
                if (!targetType) {
                  this.triggerImplyArgumentType(functionName, _i18, _argumentType, this);
                  targetType = _argumentType;
                }
                switch (_argumentType) {
                  case 'Boolean':
                    this.astGeneric(_argument, retArr);
                    continue;
                  case 'Number':
                  case 'Float':
                    if (targetType === 'Integer') {
                      retArr.push('int(');
                      this.astGeneric(_argument, retArr);
                      retArr.push(')');
                      continue;
                    } else if (targetType === 'Number' || targetType === 'Float') {
                      this.astGeneric(_argument, retArr);
                      continue;
                    } else if (targetType === 'LiteralInteger') {
                      this.castLiteralToFloat(_argument, retArr);
                      continue;
                    }
                    break;
                  case 'Integer':
                    if (targetType === 'Number' || targetType === 'Float') {
                      retArr.push('float(');
                      this.astGeneric(_argument, retArr);
                      retArr.push(')');
                      continue;
                    } else if (targetType === 'Integer') {
                      this.astGeneric(_argument, retArr);
                      continue;
                    }
                    break;
                  case 'LiteralInteger':
                    if (targetType === 'Integer') {
                      this.castLiteralToInteger(_argument, retArr);
                      continue;
                    } else if (targetType === 'Number' || targetType === 'Float') {
                      this.castLiteralToFloat(_argument, retArr);
                      continue;
                    } else if (targetType === 'LiteralInteger') {
                      this.astGeneric(_argument, retArr);
                      continue;
                    }
                    break;
                  case 'Array(2)':
                  case 'Array(3)':
                  case 'Array(4)':
                    if (targetType === _argumentType) {
                      if (_argument.type === 'Identifier') {
                        retArr.push("user_".concat(utils.sanitizeName(_argument.name)));
                      } else if (_argument.type === 'ArrayExpression' || _argument.type === 'MemberExpression' || _argument.type === 'CallExpression') {
                        this.astGeneric(_argument, retArr);
                      } else {
                        throw this.astErrorOutput("Unhandled argument type ".concat(_argument.type), ast);
                      }
                      continue;
                    }
                    break;
                  case 'HTMLCanvas':
                  case 'OffscreenCanvas':
                  case 'HTMLImage':
                  case 'ImageBitmap':
                  case 'ImageData':
                  case 'HTMLImageArray':
                  case 'HTMLVideo':
                  case 'ArrayTexture(1)':
                  case 'ArrayTexture(2)':
                  case 'ArrayTexture(3)':
                  case 'ArrayTexture(4)':
                  case 'Array':
                  case 'Input':
                    if (targetType === _argumentType) {
                      if (_argument.type !== 'Identifier') throw this.astErrorOutput("Unhandled argument type ".concat(_argument.type), ast);
                      this.triggerImplyArgumentBitRatio(this.name, _argument.name, functionName, _i18);
                      var _name9 = utils.sanitizeName(_argument.name);
                      retArr.push("user_".concat(_name9, ",user_").concat(_name9, "Size,user_").concat(_name9, "Dim"));
                      continue;
                    }
                    break;
                }
                throw this.astErrorOutput("Unhandled argument combination of ".concat(_argumentType, " and ").concat(targetType, " for argument named \"").concat(_argument.name, "\""), ast);
              }
            }
            retArr.push(')');
            return retArr;
          }
        }, {
          key: "astArrayExpression",
          value: function astArrayExpression(arrNode, retArr) {
            var returnType = this.getType(arrNode);
            var arrLen = arrNode.elements.length;
            switch (returnType) {
              case 'Matrix(2)':
              case 'Matrix(3)':
              case 'Matrix(4)':
                retArr.push("mat".concat(arrLen, "("));
                break;
              default:
                retArr.push("vec".concat(arrLen, "("));
            }
            for (var i = 0; i < arrLen; ++i) {
              if (i > 0) {
                retArr.push(', ');
              }
              var subNode = arrNode.elements[i];
              this.astGeneric(subNode, retArr);
            }
            retArr.push(')');
            return retArr;
          }
        }, {
          key: "memberExpressionXYZ",
          value: function memberExpressionXYZ(x, y, z, retArr) {
            if (z) {
              retArr.push(this.memberExpressionPropertyMarkup(z), ', ');
            } else {
              retArr.push('0, ');
            }
            if (y) {
              retArr.push(this.memberExpressionPropertyMarkup(y), ', ');
            } else {
              retArr.push('0, ');
            }
            retArr.push(this.memberExpressionPropertyMarkup(x));
            return retArr;
          }
        }, {
          key: "memberExpressionPropertyMarkup",
          value: function memberExpressionPropertyMarkup(property) {
            if (!property) {
              throw new Error('Property not set');
            }
            var type = this.getType(property);
            var result = [];
            switch (type) {
              case 'Number':
              case 'Float':
                this.castValueToInteger(property, result);
                break;
              case 'LiteralInteger':
                this.castLiteralToInteger(property, result);
                break;
              default:
                this.astGeneric(property, result);
            }
            return result.join('');
          }
        }]);
        return WebGLFunctionNode;
      }(FunctionNode);
      var typeMap = {
        'Array': 'sampler2D',
        'Array(2)': 'vec2',
        'Array(3)': 'vec3',
        'Array(4)': 'vec4',
        'Matrix(2)': 'mat2',
        'Matrix(3)': 'mat3',
        'Matrix(4)': 'mat4',
        'Array2D': 'sampler2D',
        'Array3D': 'sampler2D',
        'Boolean': 'bool',
        'Float': 'float',
        'Input': 'sampler2D',
        'Integer': 'int',
        'Number': 'float',
        'LiteralInteger': 'float',
        'NumberTexture': 'sampler2D',
        'MemoryOptimizedNumberTexture': 'sampler2D',
        'ArrayTexture(1)': 'sampler2D',
        'ArrayTexture(2)': 'sampler2D',
        'ArrayTexture(3)': 'sampler2D',
        'ArrayTexture(4)': 'sampler2D',
        'HTMLVideo': 'sampler2D',
        'HTMLCanvas': 'sampler2D',
        'OffscreenCanvas': 'sampler2D',
        'HTMLImage': 'sampler2D',
        'ImageBitmap': 'sampler2D',
        'ImageData': 'sampler2D',
        'HTMLImageArray': 'sampler2DArray'
      };
      var operatorMap = {
        '===': '==',
        '!==': '!='
      };
      module.exports = {
        WebGLFunctionNode: WebGLFunctionNode
      };
    }, {
      "../../utils": 114,
      "../function-node": 10
    }],
    39: [function (require, module, exports) {
      var _require79 = require('./kernel-value/boolean'),
        WebGLKernelValueBoolean = _require79.WebGLKernelValueBoolean;
      var _require80 = require('./kernel-value/float'),
        WebGLKernelValueFloat = _require80.WebGLKernelValueFloat;
      var _require81 = require('./kernel-value/integer'),
        WebGLKernelValueInteger = _require81.WebGLKernelValueInteger;
      var _require82 = require('./kernel-value/html-image'),
        WebGLKernelValueHTMLImage = _require82.WebGLKernelValueHTMLImage;
      var _require83 = require('./kernel-value/dynamic-html-image'),
        WebGLKernelValueDynamicHTMLImage = _require83.WebGLKernelValueDynamicHTMLImage;
      var _require84 = require('./kernel-value/html-video'),
        WebGLKernelValueHTMLVideo = _require84.WebGLKernelValueHTMLVideo;
      var _require85 = require('./kernel-value/dynamic-html-video'),
        WebGLKernelValueDynamicHTMLVideo = _require85.WebGLKernelValueDynamicHTMLVideo;
      var _require86 = require('./kernel-value/single-input'),
        WebGLKernelValueSingleInput = _require86.WebGLKernelValueSingleInput;
      var _require87 = require('./kernel-value/dynamic-single-input'),
        WebGLKernelValueDynamicSingleInput = _require87.WebGLKernelValueDynamicSingleInput;
      var _require88 = require('./kernel-value/unsigned-input'),
        WebGLKernelValueUnsignedInput = _require88.WebGLKernelValueUnsignedInput;
      var _require89 = require('./kernel-value/dynamic-unsigned-input'),
        WebGLKernelValueDynamicUnsignedInput = _require89.WebGLKernelValueDynamicUnsignedInput;
      var _require90 = require('./kernel-value/memory-optimized-number-texture'),
        WebGLKernelValueMemoryOptimizedNumberTexture = _require90.WebGLKernelValueMemoryOptimizedNumberTexture;
      var _require91 = require('./kernel-value/dynamic-memory-optimized-number-texture'),
        WebGLKernelValueDynamicMemoryOptimizedNumberTexture = _require91.WebGLKernelValueDynamicMemoryOptimizedNumberTexture;
      var _require92 = require('./kernel-value/number-texture'),
        WebGLKernelValueNumberTexture = _require92.WebGLKernelValueNumberTexture;
      var _require93 = require('./kernel-value/dynamic-number-texture'),
        WebGLKernelValueDynamicNumberTexture = _require93.WebGLKernelValueDynamicNumberTexture;
      var _require94 = require('./kernel-value/single-array'),
        WebGLKernelValueSingleArray = _require94.WebGLKernelValueSingleArray;
      var _require95 = require('./kernel-value/dynamic-single-array'),
        WebGLKernelValueDynamicSingleArray = _require95.WebGLKernelValueDynamicSingleArray;
      var _require96 = require('./kernel-value/single-array1d-i'),
        WebGLKernelValueSingleArray1DI = _require96.WebGLKernelValueSingleArray1DI;
      var _require97 = require('./kernel-value/dynamic-single-array1d-i'),
        WebGLKernelValueDynamicSingleArray1DI = _require97.WebGLKernelValueDynamicSingleArray1DI;
      var _require98 = require('./kernel-value/single-array2d-i'),
        WebGLKernelValueSingleArray2DI = _require98.WebGLKernelValueSingleArray2DI;
      var _require99 = require('./kernel-value/dynamic-single-array2d-i'),
        WebGLKernelValueDynamicSingleArray2DI = _require99.WebGLKernelValueDynamicSingleArray2DI;
      var _require100 = require('./kernel-value/single-array3d-i'),
        WebGLKernelValueSingleArray3DI = _require100.WebGLKernelValueSingleArray3DI;
      var _require101 = require('./kernel-value/dynamic-single-array3d-i'),
        WebGLKernelValueDynamicSingleArray3DI = _require101.WebGLKernelValueDynamicSingleArray3DI;
      var _require102 = require('./kernel-value/array2'),
        WebGLKernelValueArray2 = _require102.WebGLKernelValueArray2;
      var _require103 = require('./kernel-value/array3'),
        WebGLKernelValueArray3 = _require103.WebGLKernelValueArray3;
      var _require104 = require('./kernel-value/array4'),
        WebGLKernelValueArray4 = _require104.WebGLKernelValueArray4;
      var _require105 = require('./kernel-value/unsigned-array'),
        WebGLKernelValueUnsignedArray = _require105.WebGLKernelValueUnsignedArray;
      var _require106 = require('./kernel-value/dynamic-unsigned-array'),
        WebGLKernelValueDynamicUnsignedArray = _require106.WebGLKernelValueDynamicUnsignedArray;
      var kernelValueMaps = {
        unsigned: {
          dynamic: {
            'Boolean': WebGLKernelValueBoolean,
            'Integer': WebGLKernelValueInteger,
            'Float': WebGLKernelValueFloat,
            'Array': WebGLKernelValueDynamicUnsignedArray,
            'Array(2)': WebGLKernelValueArray2,
            'Array(3)': WebGLKernelValueArray3,
            'Array(4)': WebGLKernelValueArray4,
            'Array1D(2)': false,
            'Array1D(3)': false,
            'Array1D(4)': false,
            'Array2D(2)': false,
            'Array2D(3)': false,
            'Array2D(4)': false,
            'Array3D(2)': false,
            'Array3D(3)': false,
            'Array3D(4)': false,
            'Input': WebGLKernelValueDynamicUnsignedInput,
            'NumberTexture': WebGLKernelValueDynamicNumberTexture,
            'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,
            'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,
            'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,
            'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,
            'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,
            'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,
            'OffscreenCanvas': WebGLKernelValueDynamicHTMLImage,
            'HTMLImage': WebGLKernelValueDynamicHTMLImage,
            'ImageBitmap': WebGLKernelValueDynamicHTMLImage,
            'ImageData': WebGLKernelValueDynamicHTMLImage,
            'HTMLImageArray': false,
            'HTMLVideo': WebGLKernelValueDynamicHTMLVideo
          },
          static: {
            'Boolean': WebGLKernelValueBoolean,
            'Float': WebGLKernelValueFloat,
            'Integer': WebGLKernelValueInteger,
            'Array': WebGLKernelValueUnsignedArray,
            'Array(2)': WebGLKernelValueArray2,
            'Array(3)': WebGLKernelValueArray3,
            'Array(4)': WebGLKernelValueArray4,
            'Array1D(2)': false,
            'Array1D(3)': false,
            'Array1D(4)': false,
            'Array2D(2)': false,
            'Array2D(3)': false,
            'Array2D(4)': false,
            'Array3D(2)': false,
            'Array3D(3)': false,
            'Array3D(4)': false,
            'Input': WebGLKernelValueUnsignedInput,
            'NumberTexture': WebGLKernelValueNumberTexture,
            'ArrayTexture(1)': WebGLKernelValueNumberTexture,
            'ArrayTexture(2)': WebGLKernelValueNumberTexture,
            'ArrayTexture(3)': WebGLKernelValueNumberTexture,
            'ArrayTexture(4)': WebGLKernelValueNumberTexture,
            'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,
            'HTMLCanvas': WebGLKernelValueHTMLImage,
            'OffscreenCanvas': WebGLKernelValueHTMLImage,
            'HTMLImage': WebGLKernelValueHTMLImage,
            'ImageBitmap': WebGLKernelValueHTMLImage,
            'ImageData': WebGLKernelValueHTMLImage,
            'HTMLImageArray': false,
            'HTMLVideo': WebGLKernelValueHTMLVideo
          }
        },
        single: {
          dynamic: {
            'Boolean': WebGLKernelValueBoolean,
            'Integer': WebGLKernelValueInteger,
            'Float': WebGLKernelValueFloat,
            'Array': WebGLKernelValueDynamicSingleArray,
            'Array(2)': WebGLKernelValueArray2,
            'Array(3)': WebGLKernelValueArray3,
            'Array(4)': WebGLKernelValueArray4,
            'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,
            'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,
            'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,
            'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,
            'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,
            'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,
            'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,
            'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,
            'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI,
            'Input': WebGLKernelValueDynamicSingleInput,
            'NumberTexture': WebGLKernelValueDynamicNumberTexture,
            'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,
            'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,
            'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,
            'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,
            'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,
            'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,
            'OffscreenCanvas': WebGLKernelValueDynamicHTMLImage,
            'HTMLImage': WebGLKernelValueDynamicHTMLImage,
            'ImageBitmap': WebGLKernelValueDynamicHTMLImage,
            'ImageData': WebGLKernelValueDynamicHTMLImage,
            'HTMLImageArray': false,
            'HTMLVideo': WebGLKernelValueDynamicHTMLVideo
          },
          static: {
            'Boolean': WebGLKernelValueBoolean,
            'Float': WebGLKernelValueFloat,
            'Integer': WebGLKernelValueInteger,
            'Array': WebGLKernelValueSingleArray,
            'Array(2)': WebGLKernelValueArray2,
            'Array(3)': WebGLKernelValueArray3,
            'Array(4)': WebGLKernelValueArray4,
            'Array1D(2)': WebGLKernelValueSingleArray1DI,
            'Array1D(3)': WebGLKernelValueSingleArray1DI,
            'Array1D(4)': WebGLKernelValueSingleArray1DI,
            'Array2D(2)': WebGLKernelValueSingleArray2DI,
            'Array2D(3)': WebGLKernelValueSingleArray2DI,
            'Array2D(4)': WebGLKernelValueSingleArray2DI,
            'Array3D(2)': WebGLKernelValueSingleArray3DI,
            'Array3D(3)': WebGLKernelValueSingleArray3DI,
            'Array3D(4)': WebGLKernelValueSingleArray3DI,
            'Input': WebGLKernelValueSingleInput,
            'NumberTexture': WebGLKernelValueNumberTexture,
            'ArrayTexture(1)': WebGLKernelValueNumberTexture,
            'ArrayTexture(2)': WebGLKernelValueNumberTexture,
            'ArrayTexture(3)': WebGLKernelValueNumberTexture,
            'ArrayTexture(4)': WebGLKernelValueNumberTexture,
            'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,
            'HTMLCanvas': WebGLKernelValueHTMLImage,
            'OffscreenCanvas': WebGLKernelValueHTMLImage,
            'HTMLImage': WebGLKernelValueHTMLImage,
            'ImageBitmap': WebGLKernelValueHTMLImage,
            'ImageData': WebGLKernelValueHTMLImage,
            'HTMLImageArray': false,
            'HTMLVideo': WebGLKernelValueHTMLVideo
          }
        }
      };
      function lookupKernelValueType(type, dynamic, precision, value) {
        if (!type) {
          throw new Error('type missing');
        }
        if (!dynamic) {
          throw new Error('dynamic missing');
        }
        if (!precision) {
          throw new Error('precision missing');
        }
        if (value.type) {
          type = value.type;
        }
        var types = kernelValueMaps[precision][dynamic];
        if (types[type] === false) {
          return null;
        } else if (types[type] === undefined) {
          throw new Error("Could not find a KernelValue for ".concat(type));
        }
        return types[type];
      }
      module.exports = {
        lookupKernelValueType: lookupKernelValueType,
        kernelValueMaps: kernelValueMaps
      };
    }, {
      "./kernel-value/array2": 41,
      "./kernel-value/array3": 42,
      "./kernel-value/array4": 43,
      "./kernel-value/boolean": 44,
      "./kernel-value/dynamic-html-image": 45,
      "./kernel-value/dynamic-html-video": 46,
      "./kernel-value/dynamic-memory-optimized-number-texture": 47,
      "./kernel-value/dynamic-number-texture": 48,
      "./kernel-value/dynamic-single-array": 49,
      "./kernel-value/dynamic-single-array1d-i": 50,
      "./kernel-value/dynamic-single-array2d-i": 51,
      "./kernel-value/dynamic-single-array3d-i": 52,
      "./kernel-value/dynamic-single-input": 53,
      "./kernel-value/dynamic-unsigned-array": 54,
      "./kernel-value/dynamic-unsigned-input": 55,
      "./kernel-value/float": 56,
      "./kernel-value/html-image": 57,
      "./kernel-value/html-video": 58,
      "./kernel-value/integer": 60,
      "./kernel-value/memory-optimized-number-texture": 61,
      "./kernel-value/number-texture": 62,
      "./kernel-value/single-array": 63,
      "./kernel-value/single-array1d-i": 64,
      "./kernel-value/single-array2d-i": 65,
      "./kernel-value/single-array3d-i": 66,
      "./kernel-value/single-input": 67,
      "./kernel-value/unsigned-array": 68,
      "./kernel-value/unsigned-input": 69
    }],
    40: [function (require, module, exports) {
      var _require107 = require('./index'),
        WebGLKernelValue = _require107.WebGLKernelValue;
      var _require108 = require('../../../input'),
        Input = _require108.Input;
      var WebGLKernelArray = /*#__PURE__*/function (_WebGLKernelValue) {
        "use strict";

        _inherits(WebGLKernelArray, _WebGLKernelValue);
        var _super26 = _createSuper(WebGLKernelArray);
        function WebGLKernelArray() {
          _classCallCheck(this, WebGLKernelArray);
          return _super26.apply(this, arguments);
        }
        _createClass(WebGLKernelArray, [{
          key: "checkSize",
          value: function checkSize(width, height) {
            if (!this.kernel.validate) return;
            var maxTextureSize = this.kernel.constructor.features.maxTextureSize;
            if (width > maxTextureSize || height > maxTextureSize) {
              if (width > height) {
                throw new Error("Argument texture width of ".concat(width, " larger than maximum size of ").concat(maxTextureSize, " for your GPU"));
              } else if (width < height) {
                throw new Error("Argument texture height of ".concat(height, " larger than maximum size of ").concat(maxTextureSize, " for your GPU"));
              } else {
                throw new Error("Argument texture height and width of ".concat(height, " larger than maximum size of ").concat(maxTextureSize, " for your GPU"));
              }
            }
          }
        }, {
          key: "setup",
          value: function setup() {
            this.requestTexture();
            this.setupTexture();
            this.defineTexture();
          }
        }, {
          key: "requestTexture",
          value: function requestTexture() {
            this.texture = this.onRequestTexture();
          }
        }, {
          key: "defineTexture",
          value: function defineTexture() {
            var gl = this.context;
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D, this.texture);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
          }
        }, {
          key: "setupTexture",
          value: function setupTexture() {
            this.contextHandle = this.onRequestContextHandle();
            this.index = this.onRequestIndex();
            this.dimensionsId = this.id + 'Dim';
            this.sizeId = this.id + 'Size';
          }
        }, {
          key: "getBitRatio",
          value: function getBitRatio(value) {
            if (Array.isArray(value[0])) {
              return this.getBitRatio(value[0]);
            } else if (value.constructor === Input) {
              return this.getBitRatio(value.value);
            }
            switch (value.constructor) {
              case Uint8ClampedArray:
              case Uint8Array:
              case Int8Array:
                return 1;
              case Uint16Array:
              case Int16Array:
                return 2;
              case Float32Array:
              case Int32Array:
              default:
                return 4;
            }
          }
        }, {
          key: "destroy",
          value: function destroy() {
            if (this.prevArg) {
              this.prevArg.delete();
            }
            this.context.deleteTexture(this.texture);
          }
        }]);
        return WebGLKernelArray;
      }(WebGLKernelValue);
      module.exports = {
        WebGLKernelArray: WebGLKernelArray
      };
    }, {
      "../../../input": 110,
      "./index": 59
    }],
    41: [function (require, module, exports) {
      var _require109 = require('./index'),
        WebGLKernelValue = _require109.WebGLKernelValue;
      var WebGLKernelValueArray2 = /*#__PURE__*/function (_WebGLKernelValue2) {
        "use strict";

        _inherits(WebGLKernelValueArray2, _WebGLKernelValue2);
        var _super27 = _createSuper(WebGLKernelValueArray2);
        function WebGLKernelValueArray2(value, settings) {
          var _this26;
          _classCallCheck(this, WebGLKernelValueArray2);
          _this26 = _super27.call(this, value, settings);
          _this26.uploadValue = value;
          return _this26;
        }
        _createClass(WebGLKernelValueArray2, [{
          key: "getSource",
          value: function getSource(value) {
            if (this.origin === 'constants') {
              return "const vec2 ".concat(this.id, " = vec2(").concat(value[0], ",").concat(value[1], ");\n");
            }
            return "uniform vec2 ".concat(this.id, ";\n");
          }
        }, {
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            if (this.origin === 'constants') return '';
            return "const uploadValue_".concat(this.name, " = ").concat(this.varName, ";\n");
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            if (this.origin === 'constants') return;
            this.kernel.setUniform2fv(this.id, this.uploadValue = value);
          }
        }]);
        return WebGLKernelValueArray2;
      }(WebGLKernelValue);
      module.exports = {
        WebGLKernelValueArray2: WebGLKernelValueArray2
      };
    }, {
      "./index": 59
    }],
    42: [function (require, module, exports) {
      var _require110 = require('./index'),
        WebGLKernelValue = _require110.WebGLKernelValue;
      var WebGLKernelValueArray3 = /*#__PURE__*/function (_WebGLKernelValue3) {
        "use strict";

        _inherits(WebGLKernelValueArray3, _WebGLKernelValue3);
        var _super28 = _createSuper(WebGLKernelValueArray3);
        function WebGLKernelValueArray3(value, settings) {
          var _this27;
          _classCallCheck(this, WebGLKernelValueArray3);
          _this27 = _super28.call(this, value, settings);
          _this27.uploadValue = value;
          return _this27;
        }
        _createClass(WebGLKernelValueArray3, [{
          key: "getSource",
          value: function getSource(value) {
            if (this.origin === 'constants') {
              return "const vec3 ".concat(this.id, " = vec3(").concat(value[0], ",").concat(value[1], ",").concat(value[2], ");\n");
            }
            return "uniform vec3 ".concat(this.id, ";\n");
          }
        }, {
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            if (this.origin === 'constants') return '';
            return "const uploadValue_".concat(this.name, " = ").concat(this.varName, ";\n");
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            if (this.origin === 'constants') return;
            this.kernel.setUniform3fv(this.id, this.uploadValue = value);
          }
        }]);
        return WebGLKernelValueArray3;
      }(WebGLKernelValue);
      module.exports = {
        WebGLKernelValueArray3: WebGLKernelValueArray3
      };
    }, {
      "./index": 59
    }],
    43: [function (require, module, exports) {
      var _require111 = require('./index'),
        WebGLKernelValue = _require111.WebGLKernelValue;
      var WebGLKernelValueArray4 = /*#__PURE__*/function (_WebGLKernelValue4) {
        "use strict";

        _inherits(WebGLKernelValueArray4, _WebGLKernelValue4);
        var _super29 = _createSuper(WebGLKernelValueArray4);
        function WebGLKernelValueArray4(value, settings) {
          var _this28;
          _classCallCheck(this, WebGLKernelValueArray4);
          _this28 = _super29.call(this, value, settings);
          _this28.uploadValue = value;
          return _this28;
        }
        _createClass(WebGLKernelValueArray4, [{
          key: "getSource",
          value: function getSource(value) {
            if (this.origin === 'constants') {
              return "const vec4 ".concat(this.id, " = vec4(").concat(value[0], ",").concat(value[1], ",").concat(value[2], ",").concat(value[3], ");\n");
            }
            return "uniform vec4 ".concat(this.id, ";\n");
          }
        }, {
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            if (this.origin === 'constants') return '';
            return "const uploadValue_".concat(this.name, " = ").concat(this.varName, ";\n");
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            if (this.origin === 'constants') return;
            this.kernel.setUniform4fv(this.id, this.uploadValue = value);
          }
        }]);
        return WebGLKernelValueArray4;
      }(WebGLKernelValue);
      module.exports = {
        WebGLKernelValueArray4: WebGLKernelValueArray4
      };
    }, {
      "./index": 59
    }],
    44: [function (require, module, exports) {
      var _require112 = require('../../../utils'),
        utils = _require112.utils;
      var _require113 = require('./index'),
        WebGLKernelValue = _require113.WebGLKernelValue;
      var WebGLKernelValueBoolean = /*#__PURE__*/function (_WebGLKernelValue5) {
        "use strict";

        _inherits(WebGLKernelValueBoolean, _WebGLKernelValue5);
        var _super30 = _createSuper(WebGLKernelValueBoolean);
        function WebGLKernelValueBoolean(value, settings) {
          var _this29;
          _classCallCheck(this, WebGLKernelValueBoolean);
          _this29 = _super30.call(this, value, settings);
          _this29.uploadValue = value;
          return _this29;
        }
        _createClass(WebGLKernelValueBoolean, [{
          key: "getSource",
          value: function getSource(value) {
            if (this.origin === 'constants') {
              return "const bool ".concat(this.id, " = ").concat(value, ";\n");
            }
            return "uniform bool ".concat(this.id, ";\n");
          }
        }, {
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            return "const uploadValue_".concat(this.name, " = ").concat(this.varName, ";\n");
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            if (this.origin === 'constants') return;
            this.kernel.setUniform1i(this.id, this.uploadValue = value);
          }
        }]);
        return WebGLKernelValueBoolean;
      }(WebGLKernelValue);
      module.exports = {
        WebGLKernelValueBoolean: WebGLKernelValueBoolean
      };
    }, {
      "../../../utils": 114,
      "./index": 59
    }],
    45: [function (require, module, exports) {
      var _require114 = require('../../../utils'),
        utils = _require114.utils;
      var _require115 = require('./html-image'),
        WebGLKernelValueHTMLImage = _require115.WebGLKernelValueHTMLImage;
      var WebGLKernelValueDynamicHTMLImage = /*#__PURE__*/function (_WebGLKernelValueHTML) {
        "use strict";

        _inherits(WebGLKernelValueDynamicHTMLImage, _WebGLKernelValueHTML);
        var _super31 = _createSuper(WebGLKernelValueDynamicHTMLImage);
        function WebGLKernelValueDynamicHTMLImage() {
          _classCallCheck(this, WebGLKernelValueDynamicHTMLImage);
          return _super31.apply(this, arguments);
        }
        _createClass(WebGLKernelValueDynamicHTMLImage, [{
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "uniform ivec2 ".concat(this.sizeId), "uniform ivec3 ".concat(this.dimensionsId)]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            var width = value.width,
              height = value.height;
            this.checkSize(width, height);
            this.dimensions = [width, height, 1];
            this.textureSize = [width, height];
            this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);
            this.kernel.setUniform2iv(this.sizeId, this.textureSize);
            _get(_getPrototypeOf(WebGLKernelValueDynamicHTMLImage.prototype), "updateValue", this).call(this, value);
          }
        }]);
        return WebGLKernelValueDynamicHTMLImage;
      }(WebGLKernelValueHTMLImage);
      module.exports = {
        WebGLKernelValueDynamicHTMLImage: WebGLKernelValueDynamicHTMLImage
      };
    }, {
      "../../../utils": 114,
      "./html-image": 57
    }],
    46: [function (require, module, exports) {
      var _require116 = require('./dynamic-html-image'),
        WebGLKernelValueDynamicHTMLImage = _require116.WebGLKernelValueDynamicHTMLImage;
      var WebGLKernelValueDynamicHTMLVideo = /*#__PURE__*/function (_WebGLKernelValueDyna) {
        "use strict";

        _inherits(WebGLKernelValueDynamicHTMLVideo, _WebGLKernelValueDyna);
        var _super32 = _createSuper(WebGLKernelValueDynamicHTMLVideo);
        function WebGLKernelValueDynamicHTMLVideo() {
          _classCallCheck(this, WebGLKernelValueDynamicHTMLVideo);
          return _super32.apply(this, arguments);
        }
        return _createClass(WebGLKernelValueDynamicHTMLVideo);
      }(WebGLKernelValueDynamicHTMLImage);
      module.exports = {
        WebGLKernelValueDynamicHTMLVideo: WebGLKernelValueDynamicHTMLVideo
      };
    }, {
      "./dynamic-html-image": 45
    }],
    47: [function (require, module, exports) {
      var _require117 = require('../../../utils'),
        utils = _require117.utils;
      var _require118 = require('./memory-optimized-number-texture'),
        WebGLKernelValueMemoryOptimizedNumberTexture = _require118.WebGLKernelValueMemoryOptimizedNumberTexture;
      var WebGLKernelValueDynamicMemoryOptimizedNumberTexture = /*#__PURE__*/function (_WebGLKernelValueMemo) {
        "use strict";

        _inherits(WebGLKernelValueDynamicMemoryOptimizedNumberTexture, _WebGLKernelValueMemo);
        var _super33 = _createSuper(WebGLKernelValueDynamicMemoryOptimizedNumberTexture);
        function WebGLKernelValueDynamicMemoryOptimizedNumberTexture() {
          _classCallCheck(this, WebGLKernelValueDynamicMemoryOptimizedNumberTexture);
          return _super33.apply(this, arguments);
        }
        _createClass(WebGLKernelValueDynamicMemoryOptimizedNumberTexture, [{
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "uniform ivec2 ".concat(this.sizeId), "uniform ivec3 ".concat(this.dimensionsId)]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(inputTexture) {
            this.dimensions = inputTexture.dimensions;
            this.checkSize(inputTexture.size[0], inputTexture.size[1]);
            this.textureSize = inputTexture.size;
            this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);
            this.kernel.setUniform2iv(this.sizeId, this.textureSize);
            _get(_getPrototypeOf(WebGLKernelValueDynamicMemoryOptimizedNumberTexture.prototype), "updateValue", this).call(this, inputTexture);
          }
        }]);
        return WebGLKernelValueDynamicMemoryOptimizedNumberTexture;
      }(WebGLKernelValueMemoryOptimizedNumberTexture);
      module.exports = {
        WebGLKernelValueDynamicMemoryOptimizedNumberTexture: WebGLKernelValueDynamicMemoryOptimizedNumberTexture
      };
    }, {
      "../../../utils": 114,
      "./memory-optimized-number-texture": 61
    }],
    48: [function (require, module, exports) {
      var _require119 = require('../../../utils'),
        utils = _require119.utils;
      var _require120 = require('./number-texture'),
        WebGLKernelValueNumberTexture = _require120.WebGLKernelValueNumberTexture;
      var WebGLKernelValueDynamicNumberTexture = /*#__PURE__*/function (_WebGLKernelValueNumb) {
        "use strict";

        _inherits(WebGLKernelValueDynamicNumberTexture, _WebGLKernelValueNumb);
        var _super34 = _createSuper(WebGLKernelValueDynamicNumberTexture);
        function WebGLKernelValueDynamicNumberTexture() {
          _classCallCheck(this, WebGLKernelValueDynamicNumberTexture);
          return _super34.apply(this, arguments);
        }
        _createClass(WebGLKernelValueDynamicNumberTexture, [{
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "uniform ivec2 ".concat(this.sizeId), "uniform ivec3 ".concat(this.dimensionsId)]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            this.dimensions = value.dimensions;
            this.checkSize(value.size[0], value.size[1]);
            this.textureSize = value.size;
            this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);
            this.kernel.setUniform2iv(this.sizeId, this.textureSize);
            _get(_getPrototypeOf(WebGLKernelValueDynamicNumberTexture.prototype), "updateValue", this).call(this, value);
          }
        }]);
        return WebGLKernelValueDynamicNumberTexture;
      }(WebGLKernelValueNumberTexture);
      module.exports = {
        WebGLKernelValueDynamicNumberTexture: WebGLKernelValueDynamicNumberTexture
      };
    }, {
      "../../../utils": 114,
      "./number-texture": 62
    }],
    49: [function (require, module, exports) {
      var _require121 = require('../../../utils'),
        utils = _require121.utils;
      var _require122 = require('./single-array'),
        WebGLKernelValueSingleArray = _require122.WebGLKernelValueSingleArray;
      var WebGLKernelValueDynamicSingleArray = /*#__PURE__*/function (_WebGLKernelValueSing) {
        "use strict";

        _inherits(WebGLKernelValueDynamicSingleArray, _WebGLKernelValueSing);
        var _super35 = _createSuper(WebGLKernelValueDynamicSingleArray);
        function WebGLKernelValueDynamicSingleArray() {
          _classCallCheck(this, WebGLKernelValueDynamicSingleArray);
          return _super35.apply(this, arguments);
        }
        _createClass(WebGLKernelValueDynamicSingleArray, [{
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "uniform ivec2 ".concat(this.sizeId), "uniform ivec3 ".concat(this.dimensionsId)]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            this.dimensions = utils.getDimensions(value, true);
            this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);
            this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;
            this.checkSize(this.textureSize[0], this.textureSize[1]);
            this.uploadValue = new Float32Array(this.uploadArrayLength);
            this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);
            this.kernel.setUniform2iv(this.sizeId, this.textureSize);
            _get(_getPrototypeOf(WebGLKernelValueDynamicSingleArray.prototype), "updateValue", this).call(this, value);
          }
        }]);
        return WebGLKernelValueDynamicSingleArray;
      }(WebGLKernelValueSingleArray);
      module.exports = {
        WebGLKernelValueDynamicSingleArray: WebGLKernelValueDynamicSingleArray
      };
    }, {
      "../../../utils": 114,
      "./single-array": 63
    }],
    50: [function (require, module, exports) {
      var _require123 = require('../../../utils'),
        utils = _require123.utils;
      var _require124 = require('./single-array1d-i'),
        WebGLKernelValueSingleArray1DI = _require124.WebGLKernelValueSingleArray1DI;
      var WebGLKernelValueDynamicSingleArray1DI = /*#__PURE__*/function (_WebGLKernelValueSing2) {
        "use strict";

        _inherits(WebGLKernelValueDynamicSingleArray1DI, _WebGLKernelValueSing2);
        var _super36 = _createSuper(WebGLKernelValueDynamicSingleArray1DI);
        function WebGLKernelValueDynamicSingleArray1DI() {
          _classCallCheck(this, WebGLKernelValueDynamicSingleArray1DI);
          return _super36.apply(this, arguments);
        }
        _createClass(WebGLKernelValueDynamicSingleArray1DI, [{
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "uniform ivec2 ".concat(this.sizeId), "uniform ivec3 ".concat(this.dimensionsId)]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            this.setShape(value);
            this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);
            this.kernel.setUniform2iv(this.sizeId, this.textureSize);
            _get(_getPrototypeOf(WebGLKernelValueDynamicSingleArray1DI.prototype), "updateValue", this).call(this, value);
          }
        }]);
        return WebGLKernelValueDynamicSingleArray1DI;
      }(WebGLKernelValueSingleArray1DI);
      module.exports = {
        WebGLKernelValueDynamicSingleArray1DI: WebGLKernelValueDynamicSingleArray1DI
      };
    }, {
      "../../../utils": 114,
      "./single-array1d-i": 64
    }],
    51: [function (require, module, exports) {
      var _require125 = require('../../../utils'),
        utils = _require125.utils;
      var _require126 = require('./single-array2d-i'),
        WebGLKernelValueSingleArray2DI = _require126.WebGLKernelValueSingleArray2DI;
      var WebGLKernelValueDynamicSingleArray2DI = /*#__PURE__*/function (_WebGLKernelValueSing3) {
        "use strict";

        _inherits(WebGLKernelValueDynamicSingleArray2DI, _WebGLKernelValueSing3);
        var _super37 = _createSuper(WebGLKernelValueDynamicSingleArray2DI);
        function WebGLKernelValueDynamicSingleArray2DI() {
          _classCallCheck(this, WebGLKernelValueDynamicSingleArray2DI);
          return _super37.apply(this, arguments);
        }
        _createClass(WebGLKernelValueDynamicSingleArray2DI, [{
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "uniform ivec2 ".concat(this.sizeId), "uniform ivec3 ".concat(this.dimensionsId)]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            this.setShape(value);
            this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);
            this.kernel.setUniform2iv(this.sizeId, this.textureSize);
            _get(_getPrototypeOf(WebGLKernelValueDynamicSingleArray2DI.prototype), "updateValue", this).call(this, value);
          }
        }]);
        return WebGLKernelValueDynamicSingleArray2DI;
      }(WebGLKernelValueSingleArray2DI);
      module.exports = {
        WebGLKernelValueDynamicSingleArray2DI: WebGLKernelValueDynamicSingleArray2DI
      };
    }, {
      "../../../utils": 114,
      "./single-array2d-i": 65
    }],
    52: [function (require, module, exports) {
      var _require127 = require('../../../utils'),
        utils = _require127.utils;
      var _require128 = require('./single-array3d-i'),
        WebGLKernelValueSingleArray3DI = _require128.WebGLKernelValueSingleArray3DI;
      var WebGLKernelValueDynamicSingleArray3DI = /*#__PURE__*/function (_WebGLKernelValueSing4) {
        "use strict";

        _inherits(WebGLKernelValueDynamicSingleArray3DI, _WebGLKernelValueSing4);
        var _super38 = _createSuper(WebGLKernelValueDynamicSingleArray3DI);
        function WebGLKernelValueDynamicSingleArray3DI() {
          _classCallCheck(this, WebGLKernelValueDynamicSingleArray3DI);
          return _super38.apply(this, arguments);
        }
        _createClass(WebGLKernelValueDynamicSingleArray3DI, [{
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "uniform ivec2 ".concat(this.sizeId), "uniform ivec3 ".concat(this.dimensionsId)]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            this.setShape(value);
            this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);
            this.kernel.setUniform2iv(this.sizeId, this.textureSize);
            _get(_getPrototypeOf(WebGLKernelValueDynamicSingleArray3DI.prototype), "updateValue", this).call(this, value);
          }
        }]);
        return WebGLKernelValueDynamicSingleArray3DI;
      }(WebGLKernelValueSingleArray3DI);
      module.exports = {
        WebGLKernelValueDynamicSingleArray3DI: WebGLKernelValueDynamicSingleArray3DI
      };
    }, {
      "../../../utils": 114,
      "./single-array3d-i": 66
    }],
    53: [function (require, module, exports) {
      var _require129 = require('../../../utils'),
        utils = _require129.utils;
      var _require130 = require('./single-input'),
        WebGLKernelValueSingleInput = _require130.WebGLKernelValueSingleInput;
      var WebGLKernelValueDynamicSingleInput = /*#__PURE__*/function (_WebGLKernelValueSing5) {
        "use strict";

        _inherits(WebGLKernelValueDynamicSingleInput, _WebGLKernelValueSing5);
        var _super39 = _createSuper(WebGLKernelValueDynamicSingleInput);
        function WebGLKernelValueDynamicSingleInput() {
          _classCallCheck(this, WebGLKernelValueDynamicSingleInput);
          return _super39.apply(this, arguments);
        }
        _createClass(WebGLKernelValueDynamicSingleInput, [{
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "uniform ivec2 ".concat(this.sizeId), "uniform ivec3 ".concat(this.dimensionsId)]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            var _value$size = _slicedToArray(value.size, 3),
              w = _value$size[0],
              h = _value$size[1],
              d = _value$size[2];
            this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);
            this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);
            this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;
            this.checkSize(this.textureSize[0], this.textureSize[1]);
            this.uploadValue = new Float32Array(this.uploadArrayLength);
            this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);
            this.kernel.setUniform2iv(this.sizeId, this.textureSize);
            _get(_getPrototypeOf(WebGLKernelValueDynamicSingleInput.prototype), "updateValue", this).call(this, value);
          }
        }]);
        return WebGLKernelValueDynamicSingleInput;
      }(WebGLKernelValueSingleInput);
      module.exports = {
        WebGLKernelValueDynamicSingleInput: WebGLKernelValueDynamicSingleInput
      };
    }, {
      "../../../utils": 114,
      "./single-input": 67
    }],
    54: [function (require, module, exports) {
      var _require131 = require('../../../utils'),
        utils = _require131.utils;
      var _require132 = require('./unsigned-array'),
        WebGLKernelValueUnsignedArray = _require132.WebGLKernelValueUnsignedArray;
      var WebGLKernelValueDynamicUnsignedArray = /*#__PURE__*/function (_WebGLKernelValueUnsi) {
        "use strict";

        _inherits(WebGLKernelValueDynamicUnsignedArray, _WebGLKernelValueUnsi);
        var _super40 = _createSuper(WebGLKernelValueDynamicUnsignedArray);
        function WebGLKernelValueDynamicUnsignedArray() {
          _classCallCheck(this, WebGLKernelValueDynamicUnsignedArray);
          return _super40.apply(this, arguments);
        }
        _createClass(WebGLKernelValueDynamicUnsignedArray, [{
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "uniform ivec2 ".concat(this.sizeId), "uniform ivec3 ".concat(this.dimensionsId)]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            this.dimensions = utils.getDimensions(value, true);
            this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);
            this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);
            this.checkSize(this.textureSize[0], this.textureSize[1]);
            var Type = this.getTransferArrayType(value);
            this.preUploadValue = new Type(this.uploadArrayLength);
            this.uploadValue = new Uint8Array(this.preUploadValue.buffer);
            this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);
            this.kernel.setUniform2iv(this.sizeId, this.textureSize);
            _get(_getPrototypeOf(WebGLKernelValueDynamicUnsignedArray.prototype), "updateValue", this).call(this, value);
          }
        }]);
        return WebGLKernelValueDynamicUnsignedArray;
      }(WebGLKernelValueUnsignedArray);
      module.exports = {
        WebGLKernelValueDynamicUnsignedArray: WebGLKernelValueDynamicUnsignedArray
      };
    }, {
      "../../../utils": 114,
      "./unsigned-array": 68
    }],
    55: [function (require, module, exports) {
      var _require133 = require('../../../utils'),
        utils = _require133.utils;
      var _require134 = require('./unsigned-input'),
        WebGLKernelValueUnsignedInput = _require134.WebGLKernelValueUnsignedInput;
      var WebGLKernelValueDynamicUnsignedInput = /*#__PURE__*/function (_WebGLKernelValueUnsi2) {
        "use strict";

        _inherits(WebGLKernelValueDynamicUnsignedInput, _WebGLKernelValueUnsi2);
        var _super41 = _createSuper(WebGLKernelValueDynamicUnsignedInput);
        function WebGLKernelValueDynamicUnsignedInput() {
          _classCallCheck(this, WebGLKernelValueDynamicUnsignedInput);
          return _super41.apply(this, arguments);
        }
        _createClass(WebGLKernelValueDynamicUnsignedInput, [{
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "uniform ivec2 ".concat(this.sizeId), "uniform ivec3 ".concat(this.dimensionsId)]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            var _value$size2 = _slicedToArray(value.size, 3),
              w = _value$size2[0],
              h = _value$size2[1],
              d = _value$size2[2];
            this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);
            this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);
            this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);
            this.checkSize(this.textureSize[0], this.textureSize[1]);
            var Type = this.getTransferArrayType(value.value);
            this.preUploadValue = new Type(this.uploadArrayLength);
            this.uploadValue = new Uint8Array(this.preUploadValue.buffer);
            this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);
            this.kernel.setUniform2iv(this.sizeId, this.textureSize);
            _get(_getPrototypeOf(WebGLKernelValueDynamicUnsignedInput.prototype), "updateValue", this).call(this, value);
          }
        }]);
        return WebGLKernelValueDynamicUnsignedInput;
      }(WebGLKernelValueUnsignedInput);
      module.exports = {
        WebGLKernelValueDynamicUnsignedInput: WebGLKernelValueDynamicUnsignedInput
      };
    }, {
      "../../../utils": 114,
      "./unsigned-input": 69
    }],
    56: [function (require, module, exports) {
      var _require135 = require('../../../utils'),
        utils = _require135.utils;
      var _require136 = require('./index'),
        WebGLKernelValue = _require136.WebGLKernelValue;
      var WebGLKernelValueFloat = /*#__PURE__*/function (_WebGLKernelValue6) {
        "use strict";

        _inherits(WebGLKernelValueFloat, _WebGLKernelValue6);
        var _super42 = _createSuper(WebGLKernelValueFloat);
        function WebGLKernelValueFloat(value, settings) {
          var _this30;
          _classCallCheck(this, WebGLKernelValueFloat);
          _this30 = _super42.call(this, value, settings);
          _this30.uploadValue = value;
          return _this30;
        }
        _createClass(WebGLKernelValueFloat, [{
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            return "const uploadValue_".concat(this.name, " = ").concat(this.varName, ";\n");
          }
        }, {
          key: "getSource",
          value: function getSource(value) {
            if (this.origin === 'constants') {
              if (Number.isInteger(value)) {
                return "const float ".concat(this.id, " = ").concat(value, ".0;\n");
              }
              return "const float ".concat(this.id, " = ").concat(value, ";\n");
            }
            return "uniform float ".concat(this.id, ";\n");
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            if (this.origin === 'constants') return;
            this.kernel.setUniform1f(this.id, this.uploadValue = value);
          }
        }]);
        return WebGLKernelValueFloat;
      }(WebGLKernelValue);
      module.exports = {
        WebGLKernelValueFloat: WebGLKernelValueFloat
      };
    }, {
      "../../../utils": 114,
      "./index": 59
    }],
    57: [function (require, module, exports) {
      var _require137 = require('../../../utils'),
        utils = _require137.utils;
      var _require138 = require('./array'),
        WebGLKernelArray = _require138.WebGLKernelArray;
      var WebGLKernelValueHTMLImage = /*#__PURE__*/function (_WebGLKernelArray) {
        "use strict";

        _inherits(WebGLKernelValueHTMLImage, _WebGLKernelArray);
        var _super43 = _createSuper(WebGLKernelValueHTMLImage);
        function WebGLKernelValueHTMLImage(value, settings) {
          var _this31;
          _classCallCheck(this, WebGLKernelValueHTMLImage);
          _this31 = _super43.call(this, value, settings);
          var width = value.width,
            height = value.height;
          _this31.checkSize(width, height);
          _this31.dimensions = [width, height, 1];
          _this31.textureSize = [width, height];
          _this31.uploadValue = value;
          return _this31;
        }
        _createClass(WebGLKernelValueHTMLImage, [{
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            return "const uploadValue_".concat(this.name, " = ").concat(this.varName, ";\n");
          }
        }, {
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "ivec2 ".concat(this.sizeId, " = ivec2(").concat(this.textureSize[0], ", ").concat(this.textureSize[1], ")"), "ivec3 ".concat(this.dimensionsId, " = ivec3(").concat(this.dimensions[0], ", ").concat(this.dimensions[1], ", ").concat(this.dimensions[2], ")")]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(inputImage) {
            if (inputImage.constructor !== this.initialValueConstructor) {
              this.onUpdateValueMismatch(inputImage.constructor);
              return;
            }
            var gl = this.context;
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D, this.texture);
            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);
            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);
            this.kernel.setUniform1i(this.id, this.index);
          }
        }]);
        return WebGLKernelValueHTMLImage;
      }(WebGLKernelArray);
      module.exports = {
        WebGLKernelValueHTMLImage: WebGLKernelValueHTMLImage
      };
    }, {
      "../../../utils": 114,
      "./array": 40
    }],
    58: [function (require, module, exports) {
      var _require139 = require('./html-image'),
        WebGLKernelValueHTMLImage = _require139.WebGLKernelValueHTMLImage;
      var WebGLKernelValueHTMLVideo = /*#__PURE__*/function (_WebGLKernelValueHTML2) {
        "use strict";

        _inherits(WebGLKernelValueHTMLVideo, _WebGLKernelValueHTML2);
        var _super44 = _createSuper(WebGLKernelValueHTMLVideo);
        function WebGLKernelValueHTMLVideo() {
          _classCallCheck(this, WebGLKernelValueHTMLVideo);
          return _super44.apply(this, arguments);
        }
        return _createClass(WebGLKernelValueHTMLVideo);
      }(WebGLKernelValueHTMLImage);
      module.exports = {
        WebGLKernelValueHTMLVideo: WebGLKernelValueHTMLVideo
      };
    }, {
      "./html-image": 57
    }],
    59: [function (require, module, exports) {
      var _require140 = require('../../../utils'),
        utils = _require140.utils;
      var _require141 = require('../../kernel-value'),
        KernelValue = _require141.KernelValue;
      var WebGLKernelValue = /*#__PURE__*/function (_KernelValue) {
        "use strict";

        _inherits(WebGLKernelValue, _KernelValue);
        var _super45 = _createSuper(WebGLKernelValue);
        function WebGLKernelValue(value, settings) {
          var _this32;
          _classCallCheck(this, WebGLKernelValue);
          _this32 = _super45.call(this, value, settings);
          _this32.dimensionsId = null;
          _this32.sizeId = null;
          _this32.initialValueConstructor = value.constructor;
          _this32.onRequestTexture = settings.onRequestTexture;
          _this32.onRequestIndex = settings.onRequestIndex;
          _this32.uploadValue = null;
          _this32.textureSize = null;
          _this32.bitRatio = null;
          _this32.prevArg = null;
          return _this32;
        }
        _createClass(WebGLKernelValue, [{
          key: "id",
          get: function get() {
            return "".concat(this.origin, "_").concat(utils.sanitizeName(this.name));
          }
        }, {
          key: "setup",
          value: function setup() {}
        }, {
          key: "getTransferArrayType",
          value: function getTransferArrayType(value) {
            if (Array.isArray(value[0])) {
              return this.getTransferArrayType(value[0]);
            }
            switch (value.constructor) {
              case Array:
              case Int32Array:
              case Int16Array:
              case Int8Array:
                return Float32Array;
              case Uint8ClampedArray:
              case Uint8Array:
              case Uint16Array:
              case Uint32Array:
              case Float32Array:
              case Float64Array:
                return value.constructor;
            }
            console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');
            return value.constructor;
          }
        }, {
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            throw new Error("\"getStringValueHandler\" not implemented on ".concat(this.constructor.name));
          }
        }, {
          key: "getVariablePrecisionString",
          value: function getVariablePrecisionString() {
            return this.kernel.getVariablePrecisionString(this.textureSize || undefined, this.tactic || undefined);
          }
        }, {
          key: "destroy",
          value: function destroy() {}
        }]);
        return WebGLKernelValue;
      }(KernelValue);
      module.exports = {
        WebGLKernelValue: WebGLKernelValue
      };
    }, {
      "../../../utils": 114,
      "../../kernel-value": 35
    }],
    60: [function (require, module, exports) {
      var _require142 = require('../../../utils'),
        utils = _require142.utils;
      var _require143 = require('./index'),
        WebGLKernelValue = _require143.WebGLKernelValue;
      var WebGLKernelValueInteger = /*#__PURE__*/function (_WebGLKernelValue7) {
        "use strict";

        _inherits(WebGLKernelValueInteger, _WebGLKernelValue7);
        var _super46 = _createSuper(WebGLKernelValueInteger);
        function WebGLKernelValueInteger(value, settings) {
          var _this33;
          _classCallCheck(this, WebGLKernelValueInteger);
          _this33 = _super46.call(this, value, settings);
          _this33.uploadValue = value;
          return _this33;
        }
        _createClass(WebGLKernelValueInteger, [{
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            return "const uploadValue_".concat(this.name, " = ").concat(this.varName, ";\n");
          }
        }, {
          key: "getSource",
          value: function getSource(value) {
            if (this.origin === 'constants') {
              return "const int ".concat(this.id, " = ").concat(parseInt(value), ";\n");
            }
            return "uniform int ".concat(this.id, ";\n");
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            if (this.origin === 'constants') return;
            this.kernel.setUniform1i(this.id, this.uploadValue = value);
          }
        }]);
        return WebGLKernelValueInteger;
      }(WebGLKernelValue);
      module.exports = {
        WebGLKernelValueInteger: WebGLKernelValueInteger
      };
    }, {
      "../../../utils": 114,
      "./index": 59
    }],
    61: [function (require, module, exports) {
      var _require144 = require('../../../utils'),
        utils = _require144.utils;
      var _require145 = require('./array'),
        WebGLKernelArray = _require145.WebGLKernelArray;
      var sameError = "Source and destination textures are the same.  Use immutable = true and manually cleanup kernel output texture memory with texture.delete()";
      var WebGLKernelValueMemoryOptimizedNumberTexture = /*#__PURE__*/function (_WebGLKernelArray2) {
        "use strict";

        _inherits(WebGLKernelValueMemoryOptimizedNumberTexture, _WebGLKernelArray2);
        var _super47 = _createSuper(WebGLKernelValueMemoryOptimizedNumberTexture);
        function WebGLKernelValueMemoryOptimizedNumberTexture(value, settings) {
          var _this34;
          _classCallCheck(this, WebGLKernelValueMemoryOptimizedNumberTexture);
          _this34 = _super47.call(this, value, settings);
          var _value$size3 = _slicedToArray(value.size, 2),
            width = _value$size3[0],
            height = _value$size3[1];
          _this34.checkSize(width, height);
          _this34.dimensions = value.dimensions;
          _this34.textureSize = value.size;
          _this34.uploadValue = value.texture;
          _this34.forceUploadEachRun = true;
          return _this34;
        }
        _createClass(WebGLKernelValueMemoryOptimizedNumberTexture, [{
          key: "setup",
          value: function setup() {
            this.setupTexture();
          }
        }, {
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            return "const uploadValue_".concat(this.name, " = ").concat(this.varName, ".texture;\n");
          }
        }, {
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "ivec2 ".concat(this.sizeId, " = ivec2(").concat(this.textureSize[0], ", ").concat(this.textureSize[1], ")"), "ivec3 ".concat(this.dimensionsId, " = ivec3(").concat(this.dimensions[0], ", ").concat(this.dimensions[1], ", ").concat(this.dimensions[2], ")")]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(inputTexture) {
            if (inputTexture.constructor !== this.initialValueConstructor) {
              this.onUpdateValueMismatch(inputTexture.constructor);
              return;
            }
            if (this.checkContext && inputTexture.context !== this.context) {
              throw new Error("Value ".concat(this.name, " (").concat(this.type, ") must be from same context"));
            }
            var kernel = this.kernel,
              gl = this.context;
            if (kernel.pipeline) {
              if (kernel.immutable) {
                kernel.updateTextureArgumentRefs(this, inputTexture);
              } else {
                if (kernel.texture && kernel.texture.texture === inputTexture.texture) {
                  throw new Error(sameError);
                } else if (kernel.mappedTextures) {
                  var mappedTextures = kernel.mappedTextures;
                  for (var i = 0; i < mappedTextures.length; i++) {
                    if (mappedTextures[i].texture === inputTexture.texture) {
                      throw new Error(sameError);
                    }
                  }
                }
              }
            }
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);
            this.kernel.setUniform1i(this.id, this.index);
          }
        }]);
        return WebGLKernelValueMemoryOptimizedNumberTexture;
      }(WebGLKernelArray);
      module.exports = {
        WebGLKernelValueMemoryOptimizedNumberTexture: WebGLKernelValueMemoryOptimizedNumberTexture,
        sameError: sameError
      };
    }, {
      "../../../utils": 114,
      "./array": 40
    }],
    62: [function (require, module, exports) {
      var _require146 = require('../../../utils'),
        utils = _require146.utils;
      var _require147 = require('./array'),
        WebGLKernelArray = _require147.WebGLKernelArray;
      var _require148 = require('./memory-optimized-number-texture'),
        sameError = _require148.sameError;
      var WebGLKernelValueNumberTexture = /*#__PURE__*/function (_WebGLKernelArray3) {
        "use strict";

        _inherits(WebGLKernelValueNumberTexture, _WebGLKernelArray3);
        var _super48 = _createSuper(WebGLKernelValueNumberTexture);
        function WebGLKernelValueNumberTexture(value, settings) {
          var _this35;
          _classCallCheck(this, WebGLKernelValueNumberTexture);
          _this35 = _super48.call(this, value, settings);
          var _value$size4 = _slicedToArray(value.size, 2),
            width = _value$size4[0],
            height = _value$size4[1];
          _this35.checkSize(width, height);
          var textureSize = value.size,
            dimensions = value.dimensions;
          _this35.bitRatio = _this35.getBitRatio(value);
          _this35.dimensions = dimensions;
          _this35.textureSize = textureSize;
          _this35.uploadValue = value.texture;
          _this35.forceUploadEachRun = true;
          return _this35;
        }
        _createClass(WebGLKernelValueNumberTexture, [{
          key: "setup",
          value: function setup() {
            this.setupTexture();
          }
        }, {
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            return "const uploadValue_".concat(this.name, " = ").concat(this.varName, ".texture;\n");
          }
        }, {
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "ivec2 ".concat(this.sizeId, " = ivec2(").concat(this.textureSize[0], ", ").concat(this.textureSize[1], ")"), "ivec3 ".concat(this.dimensionsId, " = ivec3(").concat(this.dimensions[0], ", ").concat(this.dimensions[1], ", ").concat(this.dimensions[2], ")")]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(inputTexture) {
            if (inputTexture.constructor !== this.initialValueConstructor) {
              this.onUpdateValueMismatch(inputTexture.constructor);
              return;
            }
            if (this.checkContext && inputTexture.context !== this.context) {
              throw new Error("Value ".concat(this.name, " (").concat(this.type, ") must be from same context"));
            }
            var kernel = this.kernel,
              gl = this.context;
            if (kernel.pipeline) {
              if (kernel.immutable) {
                kernel.updateTextureArgumentRefs(this, inputTexture);
              } else {
                if (kernel.texture && kernel.texture.texture === inputTexture.texture) {
                  throw new Error(sameError);
                } else if (kernel.mappedTextures) {
                  var mappedTextures = kernel.mappedTextures;
                  for (var i = 0; i < mappedTextures.length; i++) {
                    if (mappedTextures[i].texture === inputTexture.texture) {
                      throw new Error(sameError);
                    }
                  }
                }
              }
            }
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);
            this.kernel.setUniform1i(this.id, this.index);
          }
        }]);
        return WebGLKernelValueNumberTexture;
      }(WebGLKernelArray);
      module.exports = {
        WebGLKernelValueNumberTexture: WebGLKernelValueNumberTexture
      };
    }, {
      "../../../utils": 114,
      "./array": 40,
      "./memory-optimized-number-texture": 61
    }],
    63: [function (require, module, exports) {
      var _require149 = require('../../../utils'),
        utils = _require149.utils;
      var _require150 = require('./array'),
        WebGLKernelArray = _require150.WebGLKernelArray;
      var WebGLKernelValueSingleArray = /*#__PURE__*/function (_WebGLKernelArray4) {
        "use strict";

        _inherits(WebGLKernelValueSingleArray, _WebGLKernelArray4);
        var _super49 = _createSuper(WebGLKernelValueSingleArray);
        function WebGLKernelValueSingleArray(value, settings) {
          var _this36;
          _classCallCheck(this, WebGLKernelValueSingleArray);
          _this36 = _super49.call(this, value, settings);
          _this36.bitRatio = 4;
          _this36.dimensions = utils.getDimensions(value, true);
          _this36.textureSize = utils.getMemoryOptimizedFloatTextureSize(_this36.dimensions, _this36.bitRatio);
          _this36.uploadArrayLength = _this36.textureSize[0] * _this36.textureSize[1] * _this36.bitRatio;
          _this36.checkSize(_this36.textureSize[0], _this36.textureSize[1]);
          _this36.uploadValue = new Float32Array(_this36.uploadArrayLength);
          return _this36;
        }
        _createClass(WebGLKernelValueSingleArray, [{
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            return utils.linesToString(["const uploadValue_".concat(this.name, " = new Float32Array(").concat(this.uploadArrayLength, ")"), "flattenTo(".concat(this.varName, ", uploadValue_").concat(this.name, ")")]);
          }
        }, {
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "ivec2 ".concat(this.sizeId, " = ivec2(").concat(this.textureSize[0], ", ").concat(this.textureSize[1], ")"), "ivec3 ".concat(this.dimensionsId, " = ivec3(").concat(this.dimensions[0], ", ").concat(this.dimensions[1], ", ").concat(this.dimensions[2], ")")]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            if (value.constructor !== this.initialValueConstructor) {
              this.onUpdateValueMismatch(value.constructor);
              return;
            }
            var gl = this.context;
            utils.flattenTo(value, this.uploadValue);
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D, this.texture);
            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);
            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);
            this.kernel.setUniform1i(this.id, this.index);
          }
        }]);
        return WebGLKernelValueSingleArray;
      }(WebGLKernelArray);
      module.exports = {
        WebGLKernelValueSingleArray: WebGLKernelValueSingleArray
      };
    }, {
      "../../../utils": 114,
      "./array": 40
    }],
    64: [function (require, module, exports) {
      var _require151 = require('../../../utils'),
        utils = _require151.utils;
      var _require152 = require('./array'),
        WebGLKernelArray = _require152.WebGLKernelArray;
      var WebGLKernelValueSingleArray1DI = /*#__PURE__*/function (_WebGLKernelArray5) {
        "use strict";

        _inherits(WebGLKernelValueSingleArray1DI, _WebGLKernelArray5);
        var _super50 = _createSuper(WebGLKernelValueSingleArray1DI);
        function WebGLKernelValueSingleArray1DI(value, settings) {
          var _this37;
          _classCallCheck(this, WebGLKernelValueSingleArray1DI);
          _this37 = _super50.call(this, value, settings);
          _this37.bitRatio = 4;
          _this37.setShape(value);
          return _this37;
        }
        _createClass(WebGLKernelValueSingleArray1DI, [{
          key: "setShape",
          value: function setShape(value) {
            var valueDimensions = utils.getDimensions(value, true);
            this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);
            this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);
            this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;
            this.checkSize(this.textureSize[0], this.textureSize[1]);
            this.uploadValue = new Float32Array(this.uploadArrayLength);
          }
        }, {
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            return utils.linesToString(["const uploadValue_".concat(this.name, " = new Float32Array(").concat(this.uploadArrayLength, ")"), "flattenTo(".concat(this.varName, ", uploadValue_").concat(this.name, ")")]);
          }
        }, {
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "ivec2 ".concat(this.sizeId, " = ivec2(").concat(this.textureSize[0], ", ").concat(this.textureSize[1], ")"), "ivec3 ".concat(this.dimensionsId, " = ivec3(").concat(this.dimensions[0], ", ").concat(this.dimensions[1], ", ").concat(this.dimensions[2], ")")]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            if (value.constructor !== this.initialValueConstructor) {
              this.onUpdateValueMismatch(value.constructor);
              return;
            }
            var gl = this.context;
            utils.flatten2dArrayTo(value, this.uploadValue);
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D, this.texture);
            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);
            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);
            this.kernel.setUniform1i(this.id, this.index);
          }
        }]);
        return WebGLKernelValueSingleArray1DI;
      }(WebGLKernelArray);
      module.exports = {
        WebGLKernelValueSingleArray1DI: WebGLKernelValueSingleArray1DI
      };
    }, {
      "../../../utils": 114,
      "./array": 40
    }],
    65: [function (require, module, exports) {
      var _require153 = require('../../../utils'),
        utils = _require153.utils;
      var _require154 = require('./array'),
        WebGLKernelArray = _require154.WebGLKernelArray;
      var WebGLKernelValueSingleArray2DI = /*#__PURE__*/function (_WebGLKernelArray6) {
        "use strict";

        _inherits(WebGLKernelValueSingleArray2DI, _WebGLKernelArray6);
        var _super51 = _createSuper(WebGLKernelValueSingleArray2DI);
        function WebGLKernelValueSingleArray2DI(value, settings) {
          var _this38;
          _classCallCheck(this, WebGLKernelValueSingleArray2DI);
          _this38 = _super51.call(this, value, settings);
          _this38.bitRatio = 4;
          _this38.setShape(value);
          return _this38;
        }
        _createClass(WebGLKernelValueSingleArray2DI, [{
          key: "setShape",
          value: function setShape(value) {
            var valueDimensions = utils.getDimensions(value, true);
            this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);
            this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);
            this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;
            this.checkSize(this.textureSize[0], this.textureSize[1]);
            this.uploadValue = new Float32Array(this.uploadArrayLength);
          }
        }, {
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            return utils.linesToString(["const uploadValue_".concat(this.name, " = new Float32Array(").concat(this.uploadArrayLength, ")"), "flattenTo(".concat(this.varName, ", uploadValue_").concat(this.name, ")")]);
          }
        }, {
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "ivec2 ".concat(this.sizeId, " = ivec2(").concat(this.textureSize[0], ", ").concat(this.textureSize[1], ")"), "ivec3 ".concat(this.dimensionsId, " = ivec3(").concat(this.dimensions[0], ", ").concat(this.dimensions[1], ", ").concat(this.dimensions[2], ")")]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            if (value.constructor !== this.initialValueConstructor) {
              this.onUpdateValueMismatch(value.constructor);
              return;
            }
            var gl = this.context;
            utils.flatten3dArrayTo(value, this.uploadValue);
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D, this.texture);
            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);
            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);
            this.kernel.setUniform1i(this.id, this.index);
          }
        }]);
        return WebGLKernelValueSingleArray2DI;
      }(WebGLKernelArray);
      module.exports = {
        WebGLKernelValueSingleArray2DI: WebGLKernelValueSingleArray2DI
      };
    }, {
      "../../../utils": 114,
      "./array": 40
    }],
    66: [function (require, module, exports) {
      var _require155 = require('../../../utils'),
        utils = _require155.utils;
      var _require156 = require('./array'),
        WebGLKernelArray = _require156.WebGLKernelArray;
      var WebGLKernelValueSingleArray3DI = /*#__PURE__*/function (_WebGLKernelArray7) {
        "use strict";

        _inherits(WebGLKernelValueSingleArray3DI, _WebGLKernelArray7);
        var _super52 = _createSuper(WebGLKernelValueSingleArray3DI);
        function WebGLKernelValueSingleArray3DI(value, settings) {
          var _this39;
          _classCallCheck(this, WebGLKernelValueSingleArray3DI);
          _this39 = _super52.call(this, value, settings);
          _this39.bitRatio = 4;
          _this39.setShape(value);
          return _this39;
        }
        _createClass(WebGLKernelValueSingleArray3DI, [{
          key: "setShape",
          value: function setShape(value) {
            var valueDimensions = utils.getDimensions(value, true);
            this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);
            this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);
            this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;
            this.checkSize(this.textureSize[0], this.textureSize[1]);
            this.uploadValue = new Float32Array(this.uploadArrayLength);
          }
        }, {
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            return utils.linesToString(["const uploadValue_".concat(this.name, " = new Float32Array(").concat(this.uploadArrayLength, ")"), "flattenTo(".concat(this.varName, ", uploadValue_").concat(this.name, ")")]);
          }
        }, {
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "ivec2 ".concat(this.sizeId, " = ivec2(").concat(this.textureSize[0], ", ").concat(this.textureSize[1], ")"), "ivec3 ".concat(this.dimensionsId, " = ivec3(").concat(this.dimensions[0], ", ").concat(this.dimensions[1], ", ").concat(this.dimensions[2], ")")]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            if (value.constructor !== this.initialValueConstructor) {
              this.onUpdateValueMismatch(value.constructor);
              return;
            }
            var gl = this.context;
            utils.flatten4dArrayTo(value, this.uploadValue);
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D, this.texture);
            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);
            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);
            this.kernel.setUniform1i(this.id, this.index);
          }
        }]);
        return WebGLKernelValueSingleArray3DI;
      }(WebGLKernelArray);
      module.exports = {
        WebGLKernelValueSingleArray3DI: WebGLKernelValueSingleArray3DI
      };
    }, {
      "../../../utils": 114,
      "./array": 40
    }],
    67: [function (require, module, exports) {
      var _require157 = require('../../../utils'),
        utils = _require157.utils;
      var _require158 = require('./array'),
        WebGLKernelArray = _require158.WebGLKernelArray;
      var WebGLKernelValueSingleInput = /*#__PURE__*/function (_WebGLKernelArray8) {
        "use strict";

        _inherits(WebGLKernelValueSingleInput, _WebGLKernelArray8);
        var _super53 = _createSuper(WebGLKernelValueSingleInput);
        function WebGLKernelValueSingleInput(value, settings) {
          var _this40;
          _classCallCheck(this, WebGLKernelValueSingleInput);
          _this40 = _super53.call(this, value, settings);
          _this40.bitRatio = 4;
          var _value$size5 = _slicedToArray(value.size, 3),
            w = _value$size5[0],
            h = _value$size5[1],
            d = _value$size5[2];
          _this40.dimensions = new Int32Array([w || 1, h || 1, d || 1]);
          _this40.textureSize = utils.getMemoryOptimizedFloatTextureSize(_this40.dimensions, _this40.bitRatio);
          _this40.uploadArrayLength = _this40.textureSize[0] * _this40.textureSize[1] * _this40.bitRatio;
          _this40.checkSize(_this40.textureSize[0], _this40.textureSize[1]);
          _this40.uploadValue = new Float32Array(_this40.uploadArrayLength);
          return _this40;
        }
        _createClass(WebGLKernelValueSingleInput, [{
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            return utils.linesToString(["const uploadValue_".concat(this.name, " = new Float32Array(").concat(this.uploadArrayLength, ")"), "flattenTo(".concat(this.varName, ".value, uploadValue_").concat(this.name, ")")]);
          }
        }, {
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "ivec2 ".concat(this.sizeId, " = ivec2(").concat(this.textureSize[0], ", ").concat(this.textureSize[1], ")"), "ivec3 ".concat(this.dimensionsId, " = ivec3(").concat(this.dimensions[0], ", ").concat(this.dimensions[1], ", ").concat(this.dimensions[2], ")")]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(input) {
            if (input.constructor !== this.initialValueConstructor) {
              this.onUpdateValueMismatch(input.constructor);
              return;
            }
            var gl = this.context;
            utils.flattenTo(input.value, this.uploadValue);
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D, this.texture);
            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);
            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);
            this.kernel.setUniform1i(this.id, this.index);
          }
        }]);
        return WebGLKernelValueSingleInput;
      }(WebGLKernelArray);
      module.exports = {
        WebGLKernelValueSingleInput: WebGLKernelValueSingleInput
      };
    }, {
      "../../../utils": 114,
      "./array": 40
    }],
    68: [function (require, module, exports) {
      var _require159 = require('../../../utils'),
        utils = _require159.utils;
      var _require160 = require('./array'),
        WebGLKernelArray = _require160.WebGLKernelArray;
      var WebGLKernelValueUnsignedArray = /*#__PURE__*/function (_WebGLKernelArray9) {
        "use strict";

        _inherits(WebGLKernelValueUnsignedArray, _WebGLKernelArray9);
        var _super54 = _createSuper(WebGLKernelValueUnsignedArray);
        function WebGLKernelValueUnsignedArray(value, settings) {
          var _this41;
          _classCallCheck(this, WebGLKernelValueUnsignedArray);
          _this41 = _super54.call(this, value, settings);
          _this41.bitRatio = _this41.getBitRatio(value);
          _this41.dimensions = utils.getDimensions(value, true);
          _this41.textureSize = utils.getMemoryOptimizedPackedTextureSize(_this41.dimensions, _this41.bitRatio);
          _this41.uploadArrayLength = _this41.textureSize[0] * _this41.textureSize[1] * (4 / _this41.bitRatio);
          _this41.checkSize(_this41.textureSize[0], _this41.textureSize[1]);
          _this41.TranserArrayType = _this41.getTransferArrayType(value);
          _this41.preUploadValue = new _this41.TranserArrayType(_this41.uploadArrayLength);
          _this41.uploadValue = new Uint8Array(_this41.preUploadValue.buffer);
          return _this41;
        }
        _createClass(WebGLKernelValueUnsignedArray, [{
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            return utils.linesToString(["const preUploadValue_".concat(this.name, " = new ").concat(this.TranserArrayType.name, "(").concat(this.uploadArrayLength, ")"), "const uploadValue_".concat(this.name, " = new Uint8Array(preUploadValue_").concat(this.name, ".buffer)"), "flattenTo(".concat(this.varName, ", preUploadValue_").concat(this.name, ")")]);
          }
        }, {
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "ivec2 ".concat(this.sizeId, " = ivec2(").concat(this.textureSize[0], ", ").concat(this.textureSize[1], ")"), "ivec3 ".concat(this.dimensionsId, " = ivec3(").concat(this.dimensions[0], ", ").concat(this.dimensions[1], ", ").concat(this.dimensions[2], ")")]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            if (value.constructor !== this.initialValueConstructor) {
              this.onUpdateValueMismatch(value.constructor);
              return;
            }
            var gl = this.context;
            utils.flattenTo(value, this.preUploadValue);
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D, this.texture);
            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);
            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);
            this.kernel.setUniform1i(this.id, this.index);
          }
        }]);
        return WebGLKernelValueUnsignedArray;
      }(WebGLKernelArray);
      module.exports = {
        WebGLKernelValueUnsignedArray: WebGLKernelValueUnsignedArray
      };
    }, {
      "../../../utils": 114,
      "./array": 40
    }],
    69: [function (require, module, exports) {
      var _require161 = require('../../../utils'),
        utils = _require161.utils;
      var _require162 = require('./array'),
        WebGLKernelArray = _require162.WebGLKernelArray;
      var WebGLKernelValueUnsignedInput = /*#__PURE__*/function (_WebGLKernelArray10) {
        "use strict";

        _inherits(WebGLKernelValueUnsignedInput, _WebGLKernelArray10);
        var _super55 = _createSuper(WebGLKernelValueUnsignedInput);
        function WebGLKernelValueUnsignedInput(value, settings) {
          var _this42;
          _classCallCheck(this, WebGLKernelValueUnsignedInput);
          _this42 = _super55.call(this, value, settings);
          _this42.bitRatio = _this42.getBitRatio(value);
          var _value$size6 = _slicedToArray(value.size, 3),
            w = _value$size6[0],
            h = _value$size6[1],
            d = _value$size6[2];
          _this42.dimensions = new Int32Array([w || 1, h || 1, d || 1]);
          _this42.textureSize = utils.getMemoryOptimizedPackedTextureSize(_this42.dimensions, _this42.bitRatio);
          _this42.uploadArrayLength = _this42.textureSize[0] * _this42.textureSize[1] * (4 / _this42.bitRatio);
          _this42.checkSize(_this42.textureSize[0], _this42.textureSize[1]);
          _this42.TranserArrayType = _this42.getTransferArrayType(value.value);
          _this42.preUploadValue = new _this42.TranserArrayType(_this42.uploadArrayLength);
          _this42.uploadValue = new Uint8Array(_this42.preUploadValue.buffer);
          return _this42;
        }
        _createClass(WebGLKernelValueUnsignedInput, [{
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            return utils.linesToString(["const preUploadValue_".concat(this.name, " = new ").concat(this.TranserArrayType.name, "(").concat(this.uploadArrayLength, ")"), "const uploadValue_".concat(this.name, " = new Uint8Array(preUploadValue_").concat(this.name, ".buffer)"), "flattenTo(".concat(this.varName, ".value, preUploadValue_").concat(this.name, ")")]);
          }
        }, {
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "ivec2 ".concat(this.sizeId, " = ivec2(").concat(this.textureSize[0], ", ").concat(this.textureSize[1], ")"), "ivec3 ".concat(this.dimensionsId, " = ivec3(").concat(this.dimensions[0], ", ").concat(this.dimensions[1], ", ").concat(this.dimensions[2], ")")]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(input) {
            if (input.constructor !== this.initialValueConstructor) {
              this.onUpdateValueMismatch(value.constructor);
              return;
            }
            var gl = this.context;
            utils.flattenTo(input.value, this.preUploadValue);
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D, this.texture);
            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);
            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);
            this.kernel.setUniform1i(this.id, this.index);
          }
        }]);
        return WebGLKernelValueUnsignedInput;
      }(WebGLKernelArray);
      module.exports = {
        WebGLKernelValueUnsignedInput: WebGLKernelValueUnsignedInput
      };
    }, {
      "../../../utils": 114,
      "./array": 40
    }],
    70: [function (require, module, exports) {
      var _require163 = require('../gl/kernel'),
        GLKernel = _require163.GLKernel;
      var _require164 = require('../function-builder'),
        FunctionBuilder = _require164.FunctionBuilder;
      var _require165 = require('./function-node'),
        WebGLFunctionNode = _require165.WebGLFunctionNode;
      var _require166 = require('../../utils'),
        utils = _require166.utils;
      var mrud = require('../../plugins/math-random-uniformly-distributed');
      var _require167 = require('./fragment-shader'),
        fragmentShader = _require167.fragmentShader;
      var _require168 = require('./vertex-shader'),
        vertexShader = _require168.vertexShader;
      var _require169 = require('../gl/kernel-string'),
        glKernelString = _require169.glKernelString;
      var _require170 = require('./kernel-value-maps'),
        _lookupKernelValueType = _require170.lookupKernelValueType;
      var isSupported = null;
      var testCanvas = null;
      var testContext = null;
      var testExtensions = null;
      var features = null;
      var plugins = [mrud];
      var canvases = [];
      var maxTexSizes = {};
      var WebGLKernel = /*#__PURE__*/function (_GLKernel) {
        "use strict";

        _inherits(WebGLKernel, _GLKernel);
        var _super56 = _createSuper(WebGLKernel);
        function WebGLKernel(source, settings) {
          var _this43;
          _classCallCheck(this, WebGLKernel);
          _this43 = _super56.call(this, source, settings);
          _this43.program = null;
          _this43.pipeline = settings.pipeline;
          _this43.endianness = utils.systemEndianness();
          _this43.extensions = {};
          _this43.argumentTextureCount = 0;
          _this43.constantTextureCount = 0;
          _this43.fragShader = null;
          _this43.vertShader = null;
          _this43.drawBuffersMap = null;
          _this43.maxTexSize = null;
          _this43.onRequestSwitchKernel = null;
          _this43.texture = null;
          _this43.mappedTextures = null;
          _this43.mergeSettings(source.settings || settings);
          _this43.threadDim = null;
          _this43.framebuffer = null;
          _this43.buffer = null;
          _this43.textureCache = [];
          _this43.programUniformLocationCache = {};
          _this43.uniform1fCache = {};
          _this43.uniform1iCache = {};
          _this43.uniform2fCache = {};
          _this43.uniform2fvCache = {};
          _this43.uniform2ivCache = {};
          _this43.uniform3fvCache = {};
          _this43.uniform3ivCache = {};
          _this43.uniform4fvCache = {};
          _this43.uniform4ivCache = {};
          return _this43;
        }
        _createClass(WebGLKernel, [{
          key: "initCanvas",
          value: function initCanvas() {
            if (typeof document !== 'undefined') {
              var canvas = document.createElement('canvas');
              canvas.width = 2;
              canvas.height = 2;
              return canvas;
            } else if (typeof OffscreenCanvas !== 'undefined') {
              return new OffscreenCanvas(0, 0);
            }
          }
        }, {
          key: "initContext",
          value: function initContext() {
            var settings = {
              alpha: false,
              depth: false,
              antialias: false
            };
            return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);
          }
        }, {
          key: "initPlugins",
          value: function initPlugins(settings) {
            var pluginsToUse = [];
            var source = this.source;
            if (typeof source === 'string') {
              for (var i = 0; i < plugins.length; i++) {
                var plugin = plugins[i];
                if (source.match(plugin.functionMatch)) {
                  pluginsToUse.push(plugin);
                }
              }
            } else if (typeof source === 'object') {
              if (settings.pluginNames) {
                var _loop2 = function _loop2() {
                  var plugin = plugins[_i19];
                  var usePlugin = settings.pluginNames.some(function (pluginName) {
                    return pluginName === plugin.name;
                  });
                  if (usePlugin) {
                    pluginsToUse.push(plugin);
                  }
                };
                for (var _i19 = 0; _i19 < plugins.length; _i19++) {
                  _loop2();
                }
              }
            }
            return pluginsToUse;
          }
        }, {
          key: "initExtensions",
          value: function initExtensions() {
            this.extensions = {
              OES_texture_float: this.context.getExtension('OES_texture_float'),
              OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),
              OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),
              WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),
              WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float')
            };
          }
        }, {
          key: "validateSettings",
          value: function validateSettings(args) {
            if (!this.validate) {
              this.texSize = utils.getKernelTextureSize({
                optimizeFloatMemory: this.optimizeFloatMemory,
                precision: this.precision
              }, this.output);
              return;
            }
            var features = this.constructor.features;
            if (this.optimizeFloatMemory === true && !features.isTextureFloat) {
              throw new Error('Float textures are not supported');
            } else if (this.precision === 'single' && !features.isFloatRead) {
              throw new Error('Single precision not supported');
            } else if (!this.graphical && this.precision === null && features.isTextureFloat) {
              this.precision = features.isFloatRead ? 'single' : 'unsigned';
            }
            if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {
              throw new Error('could not instantiate draw buffers extension');
            }
            if (this.fixIntegerDivisionAccuracy === null) {
              this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;
            } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {
              this.fixIntegerDivisionAccuracy = false;
            }
            this.checkOutput();
            if (!this.output || this.output.length === 0) {
              if (args.length !== 1) {
                throw new Error('Auto output only supported for kernels with only one input');
              }
              var argType = utils.getVariableType(args[0], this.strictIntegers);
              switch (argType) {
                case 'Array':
                  this.output = utils.getDimensions(argType);
                  break;
                case 'NumberTexture':
                case 'MemoryOptimizedNumberTexture':
                case 'ArrayTexture(1)':
                case 'ArrayTexture(2)':
                case 'ArrayTexture(3)':
                case 'ArrayTexture(4)':
                  this.output = args[0].output;
                  break;
                default:
                  throw new Error('Auto output not supported for input type: ' + argType);
              }
            }
            if (this.graphical) {
              if (this.output.length !== 2) {
                throw new Error('Output must have 2 dimensions on graphical mode');
              }
              if (this.precision === 'precision') {
                this.precision = 'unsigned';
                console.warn('Cannot use graphical mode and single precision at the same time');
              }
              this.texSize = utils.clone(this.output);
              return;
            } else if (this.precision === null && features.isTextureFloat) {
              this.precision = 'single';
            }
            this.texSize = utils.getKernelTextureSize({
              optimizeFloatMemory: this.optimizeFloatMemory,
              precision: this.precision
            }, this.output);
            this.checkTextureSize();
          }
        }, {
          key: "updateMaxTexSize",
          value: function updateMaxTexSize() {
            var texSize = this.texSize,
              canvas = this.canvas;
            if (this.maxTexSize === null) {
              var canvasIndex = canvases.indexOf(canvas);
              if (canvasIndex === -1) {
                canvasIndex = canvases.length;
                canvases.push(canvas);
                maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];
              }
              this.maxTexSize = maxTexSizes[canvasIndex];
            }
            if (this.maxTexSize[0] < texSize[0]) {
              this.maxTexSize[0] = texSize[0];
            }
            if (this.maxTexSize[1] < texSize[1]) {
              this.maxTexSize[1] = texSize[1];
            }
          }
        }, {
          key: "setupArguments",
          value: function setupArguments(args) {
            var _this44 = this;
            this.kernelArguments = [];
            this.argumentTextureCount = 0;
            var needsArgumentTypes = this.argumentTypes === null;
            if (needsArgumentTypes) {
              this.argumentTypes = [];
            }
            this.argumentSizes = [];
            this.argumentBitRatios = [];
            if (args.length < this.argumentNames.length) {
              throw new Error('not enough arguments for kernel');
            } else if (args.length > this.argumentNames.length) {
              throw new Error('too many arguments for kernel');
            }
            var gl = this.context;
            var textureIndexes = 0;
            var onRequestTexture = function onRequestTexture() {
              return _this44.createTexture();
            };
            var onRequestIndex = function onRequestIndex() {
              return _this44.constantTextureCount + textureIndexes++;
            };
            var onUpdateValueMismatch = function onUpdateValueMismatch(constructor) {
              _this44.switchKernels({
                type: 'argumentMismatch',
                needed: constructor
              });
            };
            var onRequestContextHandle = function onRequestContextHandle() {
              return gl.TEXTURE0 + _this44.constantTextureCount + _this44.argumentTextureCount++;
            };
            for (var index = 0; index < args.length; index++) {
              var _value = args[index];
              var _name10 = this.argumentNames[index];
              var type = void 0;
              if (needsArgumentTypes) {
                type = utils.getVariableType(_value, this.strictIntegers);
                this.argumentTypes.push(type);
              } else {
                type = this.argumentTypes[index];
              }
              var KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);
              if (KernelValue === null) {
                return this.requestFallback(args);
              }
              var kernelArgument = new KernelValue(_value, {
                name: _name10,
                type: type,
                tactic: this.tactic,
                origin: 'user',
                context: gl,
                checkContext: this.checkContext,
                kernel: this,
                strictIntegers: this.strictIntegers,
                onRequestTexture: onRequestTexture,
                onRequestIndex: onRequestIndex,
                onUpdateValueMismatch: onUpdateValueMismatch,
                onRequestContextHandle: onRequestContextHandle
              });
              this.kernelArguments.push(kernelArgument);
              kernelArgument.setup();
              this.argumentSizes.push(kernelArgument.textureSize);
              this.argumentBitRatios[index] = kernelArgument.bitRatio;
            }
          }
        }, {
          key: "createTexture",
          value: function createTexture() {
            var texture = this.context.createTexture();
            this.textureCache.push(texture);
            return texture;
          }
        }, {
          key: "setupConstants",
          value: function setupConstants(args) {
            var _this45 = this;
            var gl = this.context;
            this.kernelConstants = [];
            this.forceUploadKernelConstants = [];
            var needsConstantTypes = this.constantTypes === null;
            if (needsConstantTypes) {
              this.constantTypes = {};
            }
            this.constantBitRatios = {};
            var textureIndexes = 0;
            for (var _name11 in this.constants) {
              var _value2 = this.constants[_name11];
              var type = void 0;
              if (needsConstantTypes) {
                type = utils.getVariableType(_value2, this.strictIntegers);
                this.constantTypes[_name11] = type;
              } else {
                type = this.constantTypes[_name11];
              }
              var KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, _value2);
              if (KernelValue === null) {
                return this.requestFallback(args);
              }
              var kernelValue = new KernelValue(_value2, {
                name: _name11,
                type: type,
                tactic: this.tactic,
                origin: 'constants',
                context: this.context,
                checkContext: this.checkContext,
                kernel: this,
                strictIntegers: this.strictIntegers,
                onRequestTexture: function onRequestTexture() {
                  return _this45.createTexture();
                },
                onRequestIndex: function onRequestIndex() {
                  return textureIndexes++;
                },
                onRequestContextHandle: function onRequestContextHandle() {
                  return gl.TEXTURE0 + _this45.constantTextureCount++;
                }
              });
              this.constantBitRatios[_name11] = kernelValue.bitRatio;
              this.kernelConstants.push(kernelValue);
              kernelValue.setup();
              if (kernelValue.forceUploadEachRun) {
                this.forceUploadKernelConstants.push(kernelValue);
              }
            }
          }
        }, {
          key: "build",
          value: function build() {
            if (this.built) return;
            this.initExtensions();
            this.validateSettings(arguments);
            this.setupConstants(arguments);
            if (this.fallbackRequested) return;
            this.setupArguments(arguments);
            if (this.fallbackRequested) return;
            this.updateMaxTexSize();
            this.translateSource();
            var failureResult = this.pickRenderStrategy(arguments);
            if (failureResult) {
              return failureResult;
            }
            var texSize = this.texSize,
              gl = this.context,
              canvas = this.canvas;
            gl.enable(gl.SCISSOR_TEST);
            if (this.pipeline && this.precision === 'single') {
              gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);
              canvas.width = this.maxTexSize[0];
              canvas.height = this.maxTexSize[1];
            } else {
              gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);
              canvas.width = this.maxTexSize[0];
              canvas.height = this.maxTexSize[1];
            }
            var threadDim = this.threadDim = Array.from(this.output);
            while (threadDim.length < 3) {
              threadDim.push(1);
            }
            var compiledVertexShader = this.getVertexShader(arguments);
            var vertShader = gl.createShader(gl.VERTEX_SHADER);
            gl.shaderSource(vertShader, compiledVertexShader);
            gl.compileShader(vertShader);
            this.vertShader = vertShader;
            var compiledFragmentShader = this.getFragmentShader(arguments);
            var fragShader = gl.createShader(gl.FRAGMENT_SHADER);
            gl.shaderSource(fragShader, compiledFragmentShader);
            gl.compileShader(fragShader);
            this.fragShader = fragShader;
            if (this.debug) {
              console.log('GLSL Shader Output:');
              console.log(compiledFragmentShader);
            }
            if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {
              throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));
            }
            if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {
              throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));
            }
            var program = this.program = gl.createProgram();
            gl.attachShader(program, vertShader);
            gl.attachShader(program, fragShader);
            gl.linkProgram(program);
            this.framebuffer = gl.createFramebuffer();
            this.framebuffer.width = texSize[0];
            this.framebuffer.height = texSize[1];
            this.rawValueFramebuffers = {};
            var vertices = new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]);
            var texCoords = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);
            var texCoordOffset = vertices.byteLength;
            var buffer = this.buffer;
            if (!buffer) {
              buffer = this.buffer = gl.createBuffer();
              gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
              gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);
            } else {
              gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
            }
            gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);
            gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);
            var aPosLoc = gl.getAttribLocation(this.program, 'aPos');
            gl.enableVertexAttribArray(aPosLoc);
            gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);
            var aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');
            gl.enableVertexAttribArray(aTexCoordLoc);
            gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);
            gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);
            var i = 0;
            gl.useProgram(this.program);
            for (var p in this.constants) {
              this.kernelConstants[i++].updateValue(this.constants[p]);
            }
            this._setupOutputTexture();
            if (this.subKernels !== null && this.subKernels.length > 0) {
              this._mappedTextureSwitched = {};
              this._setupSubOutputTextures();
            }
            this.buildSignature(arguments);
            this.built = true;
          }
        }, {
          key: "translateSource",
          value: function translateSource() {
            var functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {
              fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy
            });
            this.translatedSource = functionBuilder.getPrototypeString('kernel');
            this.setupReturnTypes(functionBuilder);
          }
        }, {
          key: "setupReturnTypes",
          value: function setupReturnTypes(functionBuilder) {
            if (!this.graphical && !this.returnType) {
              this.returnType = functionBuilder.getKernelResultType();
            }
            if (this.subKernels && this.subKernels.length > 0) {
              for (var i = 0; i < this.subKernels.length; i++) {
                var subKernel = this.subKernels[i];
                if (!subKernel.returnType) {
                  subKernel.returnType = functionBuilder.getSubKernelResultType(i);
                }
              }
            }
          }
        }, {
          key: "run",
          value: function run() {
            var kernelArguments = this.kernelArguments,
              texSize = this.texSize,
              forceUploadKernelConstants = this.forceUploadKernelConstants,
              gl = this.context;
            gl.useProgram(this.program);
            gl.scissor(0, 0, texSize[0], texSize[1]);
            if (this.dynamicOutput) {
              this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));
              this.setUniform2iv('uTexSize', texSize);
            }
            this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);
            for (var i = 0; i < forceUploadKernelConstants.length; i++) {
              var constant = forceUploadKernelConstants[i];
              constant.updateValue(this.constants[constant.name]);
              if (this.switchingKernels) return;
            }
            for (var _i20 = 0; _i20 < kernelArguments.length; _i20++) {
              kernelArguments[_i20].updateValue(arguments[_i20]);
              if (this.switchingKernels) return;
            }
            if (this.plugins) {
              for (var _i21 = 0; _i21 < this.plugins.length; _i21++) {
                var plugin = this.plugins[_i21];
                if (plugin.onBeforeRun) {
                  plugin.onBeforeRun(this);
                }
              }
            }
            if (this.graphical) {
              if (this.pipeline) {
                gl.bindRenderbuffer(gl.RENDERBUFFER, null);
                gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);
                if (this.immutable) {
                  this._replaceOutputTexture();
                }
                gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
                return this.immutable ? this.texture.clone() : this.texture;
              }
              gl.bindRenderbuffer(gl.RENDERBUFFER, null);
              gl.bindFramebuffer(gl.FRAMEBUFFER, null);
              gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
              return;
            }
            gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);
            if (this.immutable) {
              this._replaceOutputTexture();
            }
            if (this.subKernels !== null) {
              if (this.immutable) {
                this._replaceSubOutputTextures();
              }
              this.drawBuffers();
            }
            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
          }
        }, {
          key: "drawBuffers",
          value: function drawBuffers() {
            this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);
          }
        }, {
          key: "getInternalFormat",
          value: function getInternalFormat() {
            return this.context.RGBA;
          }
        }, {
          key: "getTextureFormat",
          value: function getTextureFormat() {
            var gl = this.context;
            switch (this.getInternalFormat()) {
              case gl.RGBA:
                return gl.RGBA;
              default:
                throw new Error('Unknown internal format');
            }
          }
        }, {
          key: "_replaceOutputTexture",
          value: function _replaceOutputTexture() {
            if (this.texture.beforeMutate() || this._textureSwitched) {
              var gl = this.context;
              gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);
              this._textureSwitched = false;
            }
          }
        }, {
          key: "_setupOutputTexture",
          value: function _setupOutputTexture() {
            var gl = this.context;
            var texSize = this.texSize;
            if (this.texture) {
              gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);
              return;
            }
            var texture = this.createTexture();
            gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);
            gl.bindTexture(gl.TEXTURE_2D, texture);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
            var format = this.getInternalFormat();
            if (this.precision === 'single') {
              gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);
            } else {
              gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);
            }
            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);
            this.texture = new this.TextureConstructor({
              texture: texture,
              size: texSize,
              dimensions: this.threadDim,
              output: this.output,
              context: this.context,
              internalFormat: this.getInternalFormat(),
              textureFormat: this.getTextureFormat(),
              kernel: this
            });
          }
        }, {
          key: "_replaceSubOutputTextures",
          value: function _replaceSubOutputTextures() {
            var gl = this.context;
            for (var i = 0; i < this.mappedTextures.length; i++) {
              var mappedTexture = this.mappedTextures[i];
              if (mappedTexture.beforeMutate() || this._mappedTextureSwitched[i]) {
                gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, mappedTexture.texture, 0);
                this._mappedTextureSwitched[i] = false;
              }
            }
          }
        }, {
          key: "_setupSubOutputTextures",
          value: function _setupSubOutputTextures() {
            var gl = this.context;
            if (this.mappedTextures) {
              for (var i = 0; i < this.subKernels.length; i++) {
                gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);
              }
              return;
            }
            var texSize = this.texSize;
            this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];
            this.mappedTextures = [];
            for (var _i22 = 0; _i22 < this.subKernels.length; _i22++) {
              var texture = this.createTexture();
              this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + _i22 + 1);
              gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + _i22);
              gl.bindTexture(gl.TEXTURE_2D, texture);
              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
              if (this.precision === 'single') {
                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);
              } else {
                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);
              }
              gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + _i22 + 1, gl.TEXTURE_2D, texture, 0);
              this.mappedTextures.push(new this.TextureConstructor({
                texture: texture,
                size: texSize,
                dimensions: this.threadDim,
                output: this.output,
                context: this.context,
                internalFormat: this.getInternalFormat(),
                textureFormat: this.getTextureFormat(),
                kernel: this
              }));
            }
          }
        }, {
          key: "setUniform1f",
          value: function setUniform1f(name, value) {
            if (this.uniform1fCache.hasOwnProperty(name)) {
              var cache = this.uniform1fCache[name];
              if (value === cache) {
                return;
              }
            }
            this.uniform1fCache[name] = value;
            var loc = this.getUniformLocation(name);
            this.context.uniform1f(loc, value);
          }
        }, {
          key: "setUniform1i",
          value: function setUniform1i(name, value) {
            if (this.uniform1iCache.hasOwnProperty(name)) {
              var cache = this.uniform1iCache[name];
              if (value === cache) {
                return;
              }
            }
            this.uniform1iCache[name] = value;
            var loc = this.getUniformLocation(name);
            this.context.uniform1i(loc, value);
          }
        }, {
          key: "setUniform2f",
          value: function setUniform2f(name, value1, value2) {
            if (this.uniform2fCache.hasOwnProperty(name)) {
              var cache = this.uniform2fCache[name];
              if (value1 === cache[0] && value2 === cache[1]) {
                return;
              }
            }
            this.uniform2fCache[name] = [value1, value2];
            var loc = this.getUniformLocation(name);
            this.context.uniform2f(loc, value1, value2);
          }
        }, {
          key: "setUniform2fv",
          value: function setUniform2fv(name, value) {
            if (this.uniform2fvCache.hasOwnProperty(name)) {
              var cache = this.uniform2fvCache[name];
              if (value[0] === cache[0] && value[1] === cache[1]) {
                return;
              }
            }
            this.uniform2fvCache[name] = value;
            var loc = this.getUniformLocation(name);
            this.context.uniform2fv(loc, value);
          }
        }, {
          key: "setUniform2iv",
          value: function setUniform2iv(name, value) {
            if (this.uniform2ivCache.hasOwnProperty(name)) {
              var cache = this.uniform2ivCache[name];
              if (value[0] === cache[0] && value[1] === cache[1]) {
                return;
              }
            }
            this.uniform2ivCache[name] = value;
            var loc = this.getUniformLocation(name);
            this.context.uniform2iv(loc, value);
          }
        }, {
          key: "setUniform3fv",
          value: function setUniform3fv(name, value) {
            if (this.uniform3fvCache.hasOwnProperty(name)) {
              var cache = this.uniform3fvCache[name];
              if (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2]) {
                return;
              }
            }
            this.uniform3fvCache[name] = value;
            var loc = this.getUniformLocation(name);
            this.context.uniform3fv(loc, value);
          }
        }, {
          key: "setUniform3iv",
          value: function setUniform3iv(name, value) {
            if (this.uniform3ivCache.hasOwnProperty(name)) {
              var cache = this.uniform3ivCache[name];
              if (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2]) {
                return;
              }
            }
            this.uniform3ivCache[name] = value;
            var loc = this.getUniformLocation(name);
            this.context.uniform3iv(loc, value);
          }
        }, {
          key: "setUniform4fv",
          value: function setUniform4fv(name, value) {
            if (this.uniform4fvCache.hasOwnProperty(name)) {
              var cache = this.uniform4fvCache[name];
              if (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2] && value[3] === cache[3]) {
                return;
              }
            }
            this.uniform4fvCache[name] = value;
            var loc = this.getUniformLocation(name);
            this.context.uniform4fv(loc, value);
          }
        }, {
          key: "setUniform4iv",
          value: function setUniform4iv(name, value) {
            if (this.uniform4ivCache.hasOwnProperty(name)) {
              var cache = this.uniform4ivCache[name];
              if (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2] && value[3] === cache[3]) {
                return;
              }
            }
            this.uniform4ivCache[name] = value;
            var loc = this.getUniformLocation(name);
            this.context.uniform4iv(loc, value);
          }
        }, {
          key: "getUniformLocation",
          value: function getUniformLocation(name) {
            if (this.programUniformLocationCache.hasOwnProperty(name)) {
              return this.programUniformLocationCache[name];
            }
            return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);
          }
        }, {
          key: "_getFragShaderArtifactMap",
          value: function _getFragShaderArtifactMap(args) {
            return {
              HEADER: this._getHeaderString(),
              LOOP_MAX: this._getLoopMaxString(),
              PLUGINS: this._getPluginsString(),
              CONSTANTS: this._getConstantsString(),
              DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),
              ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),
              DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),
              INJECTED_NATIVE: this._getInjectedNative(),
              MAIN_CONSTANTS: this._getMainConstantsString(),
              MAIN_ARGUMENTS: this._getMainArgumentsString(args),
              KERNEL: this.getKernelString(),
              MAIN_RESULT: this.getMainResultString(),
              FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),
              INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),
              SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),
              SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration()
            };
          }
        }, {
          key: "_getVertShaderArtifactMap",
          value: function _getVertShaderArtifactMap(args) {
            return {
              FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),
              INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),
              SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),
              SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration()
            };
          }
        }, {
          key: "_getHeaderString",
          value: function _getHeaderString() {
            return this.subKernels !== null ? '#extension GL_EXT_draw_buffers : require\n' : '';
          }
        }, {
          key: "_getLoopMaxString",
          value: function _getLoopMaxString() {
            return this.loopMaxIterations ? " ".concat(parseInt(this.loopMaxIterations), ";\n") : ' 1000;\n';
          }
        }, {
          key: "_getPluginsString",
          value: function _getPluginsString() {
            var _this46 = this;
            if (!this.plugins) return '\n';
            return this.plugins.map(function (plugin) {
              return plugin.source && _this46.source.match(plugin.functionMatch) ? plugin.source : '';
            }).join('\n');
          }
        }, {
          key: "_getConstantsString",
          value: function _getConstantsString() {
            var result = [];
            var threadDim = this.threadDim,
              texSize = this.texSize;
            if (this.dynamicOutput) {
              result.push('uniform ivec3 uOutputDim', 'uniform ivec2 uTexSize');
            } else {
              result.push("ivec3 uOutputDim = ivec3(".concat(threadDim[0], ", ").concat(threadDim[1], ", ").concat(threadDim[2], ")"), "ivec2 uTexSize = ivec2(".concat(texSize[0], ", ").concat(texSize[1], ")"));
            }
            return utils.linesToString(result);
          }
        }, {
          key: "_getTextureCoordinate",
          value: function _getTextureCoordinate() {
            var subKernels = this.subKernels;
            if (subKernels === null || subKernels.length < 1) {
              return 'varying vec2 vTexCoord;\n';
            } else {
              return 'out vec2 vTexCoord;\n';
            }
          }
        }, {
          key: "_getDecode32EndiannessString",
          value: function _getDecode32EndiannessString() {
            return this.endianness === 'LE' ? '' : '  texel.rgba = texel.abgr;\n';
          }
        }, {
          key: "_getEncode32EndiannessString",
          value: function _getEncode32EndiannessString() {
            return this.endianness === 'LE' ? '' : '  texel.rgba = texel.abgr;\n';
          }
        }, {
          key: "_getDivideWithIntegerCheckString",
          value: function _getDivideWithIntegerCheckString() {
            return this.fixIntegerDivisionAccuracy ? "float divWithIntCheck(float x, float y) {\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\n    return float(int(x) / int(y));\n  }\n  return x / y;\n}\n\nfloat integerCorrectionModulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -(number - (divisor * floor(divWithIntCheck(number, divisor))));\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return number - (divisor * floor(divWithIntCheck(number, divisor)));\n}" : '';
          }
        }, {
          key: "_getMainArgumentsString",
          value: function _getMainArgumentsString(args) {
            var results = [];
            var argumentNames = this.argumentNames;
            for (var i = 0; i < argumentNames.length; i++) {
              results.push(this.kernelArguments[i].getSource(args[i]));
            }
            return results.join('');
          }
        }, {
          key: "_getInjectedNative",
          value: function _getInjectedNative() {
            return this.injectedNative || '';
          }
        }, {
          key: "_getMainConstantsString",
          value: function _getMainConstantsString() {
            var result = [];
            var constants = this.constants;
            if (constants) {
              var i = 0;
              for (var _name12 in constants) {
                if (!this.constants.hasOwnProperty(_name12)) continue;
                result.push(this.kernelConstants[i++].getSource(this.constants[_name12]));
              }
            }
            return result.join('');
          }
        }, {
          key: "getRawValueFramebuffer",
          value: function getRawValueFramebuffer(width, height) {
            if (!this.rawValueFramebuffers[width]) {
              this.rawValueFramebuffers[width] = {};
            }
            if (!this.rawValueFramebuffers[width][height]) {
              var framebuffer = this.context.createFramebuffer();
              framebuffer.width = width;
              framebuffer.height = height;
              this.rawValueFramebuffers[width][height] = framebuffer;
            }
            return this.rawValueFramebuffers[width][height];
          }
        }, {
          key: "getKernelResultDeclaration",
          value: function getKernelResultDeclaration() {
            switch (this.returnType) {
              case 'Array(2)':
                return 'vec2 kernelResult';
              case 'Array(3)':
                return 'vec3 kernelResult';
              case 'Array(4)':
                return 'vec4 kernelResult';
              case 'LiteralInteger':
              case 'Float':
              case 'Number':
              case 'Integer':
                return 'float kernelResult';
              default:
                if (this.graphical) {
                  return 'float kernelResult';
                } else {
                  throw new Error("unrecognized output type \"".concat(this.returnType, "\""));
                }
            }
          }
        }, {
          key: "getKernelString",
          value: function getKernelString() {
            var result = [this.getKernelResultDeclaration()];
            var subKernels = this.subKernels;
            if (subKernels !== null) {
              switch (this.returnType) {
                case 'Number':
                case 'Float':
                case 'Integer':
                  for (var i = 0; i < subKernels.length; i++) {
                    var subKernel = subKernels[i];
                    result.push(subKernel.returnType === 'Integer' ? "int subKernelResult_".concat(subKernel.name, " = 0") : "float subKernelResult_".concat(subKernel.name, " = 0.0"));
                  }
                  break;
                case 'Array(2)':
                  for (var _i23 = 0; _i23 < subKernels.length; _i23++) {
                    result.push("vec2 subKernelResult_".concat(subKernels[_i23].name));
                  }
                  break;
                case 'Array(3)':
                  for (var _i24 = 0; _i24 < subKernels.length; _i24++) {
                    result.push("vec3 subKernelResult_".concat(subKernels[_i24].name));
                  }
                  break;
                case 'Array(4)':
                  for (var _i25 = 0; _i25 < subKernels.length; _i25++) {
                    result.push("vec4 subKernelResult_".concat(subKernels[_i25].name));
                  }
                  break;
              }
            }
            return utils.linesToString(result) + this.translatedSource;
          }
        }, {
          key: "getMainResultGraphical",
          value: function getMainResultGraphical() {
            return utils.linesToString(['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragColor = actualColor']);
          }
        }, {
          key: "getMainResultPackedPixels",
          value: function getMainResultPackedPixels() {
            switch (this.returnType) {
              case 'LiteralInteger':
              case 'Number':
              case 'Integer':
              case 'Float':
                return this.getMainResultKernelPackedPixels() + this.getMainResultSubKernelPackedPixels();
              default:
                throw new Error("packed output only usable with Numbers, \"".concat(this.returnType, "\" specified"));
            }
          }
        }, {
          key: "getMainResultKernelPackedPixels",
          value: function getMainResultKernelPackedPixels() {
            return utils.linesToString(['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', "  gl_FragData[0] = ".concat(this.useLegacyEncoder ? 'legacyEncode32' : 'encode32', "(kernelResult)")]);
          }
        }, {
          key: "getMainResultSubKernelPackedPixels",
          value: function getMainResultSubKernelPackedPixels() {
            var result = [];
            if (!this.subKernels) return '';
            for (var i = 0; i < this.subKernels.length; i++) {
              var subKernel = this.subKernels[i];
              if (subKernel.returnType === 'Integer') {
                result.push("  gl_FragData[".concat(i + 1, "] = ").concat(this.useLegacyEncoder ? 'legacyEncode32' : 'encode32', "(float(subKernelResult_").concat(this.subKernels[i].name, "))"));
              } else {
                result.push("  gl_FragData[".concat(i + 1, "] = ").concat(this.useLegacyEncoder ? 'legacyEncode32' : 'encode32', "(subKernelResult_").concat(this.subKernels[i].name, ")"));
              }
            }
            return utils.linesToString(result);
          }
        }, {
          key: "getMainResultMemoryOptimizedFloats",
          value: function getMainResultMemoryOptimizedFloats() {
            var result = ['  index *= 4'];
            switch (this.returnType) {
              case 'Number':
              case 'Integer':
              case 'Float':
                var channels = ['r', 'g', 'b', 'a'];
                for (var i = 0; i < channels.length; i++) {
                  var channel = channels[i];
                  this.getMainResultKernelMemoryOptimizedFloats(result, channel);
                  this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);
                  if (i + 1 < channels.length) {
                    result.push('  index += 1');
                  }
                }
                break;
              default:
                throw new Error("optimized output only usable with Numbers, ".concat(this.returnType, " specified"));
            }
            return utils.linesToString(result);
          }
        }, {
          key: "getMainResultKernelMemoryOptimizedFloats",
          value: function getMainResultKernelMemoryOptimizedFloats(result, channel) {
            result.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', "  gl_FragData[0].".concat(channel, " = kernelResult"));
          }
        }, {
          key: "getMainResultSubKernelMemoryOptimizedFloats",
          value: function getMainResultSubKernelMemoryOptimizedFloats(result, channel) {
            if (!this.subKernels) return result;
            for (var i = 0; i < this.subKernels.length; i++) {
              var subKernel = this.subKernels[i];
              if (subKernel.returnType === 'Integer') {
                result.push("  gl_FragData[".concat(i + 1, "].").concat(channel, " = float(subKernelResult_").concat(this.subKernels[i].name, ")"));
              } else {
                result.push("  gl_FragData[".concat(i + 1, "].").concat(channel, " = subKernelResult_").concat(this.subKernels[i].name));
              }
            }
          }
        }, {
          key: "getMainResultKernelNumberTexture",
          value: function getMainResultKernelNumberTexture() {
            return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragData[0][0] = kernelResult'];
          }
        }, {
          key: "getMainResultSubKernelNumberTexture",
          value: function getMainResultSubKernelNumberTexture() {
            var result = [];
            if (!this.subKernels) return result;
            for (var i = 0; i < this.subKernels.length; ++i) {
              var subKernel = this.subKernels[i];
              if (subKernel.returnType === 'Integer') {
                result.push("  gl_FragData[".concat(i + 1, "][0] = float(subKernelResult_").concat(subKernel.name, ")"));
              } else {
                result.push("  gl_FragData[".concat(i + 1, "][0] = subKernelResult_").concat(subKernel.name));
              }
            }
            return result;
          }
        }, {
          key: "getMainResultKernelArray2Texture",
          value: function getMainResultKernelArray2Texture() {
            return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragData[0][0] = kernelResult[0]', '  gl_FragData[0][1] = kernelResult[1]'];
          }
        }, {
          key: "getMainResultSubKernelArray2Texture",
          value: function getMainResultSubKernelArray2Texture() {
            var result = [];
            if (!this.subKernels) return result;
            for (var i = 0; i < this.subKernels.length; ++i) {
              result.push("  gl_FragData[".concat(i + 1, "][0] = subKernelResult_").concat(this.subKernels[i].name, "[0]"), "  gl_FragData[".concat(i + 1, "][1] = subKernelResult_").concat(this.subKernels[i].name, "[1]"));
            }
            return result;
          }
        }, {
          key: "getMainResultKernelArray3Texture",
          value: function getMainResultKernelArray3Texture() {
            return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragData[0][0] = kernelResult[0]', '  gl_FragData[0][1] = kernelResult[1]', '  gl_FragData[0][2] = kernelResult[2]'];
          }
        }, {
          key: "getMainResultSubKernelArray3Texture",
          value: function getMainResultSubKernelArray3Texture() {
            var result = [];
            if (!this.subKernels) return result;
            for (var i = 0; i < this.subKernels.length; ++i) {
              result.push("  gl_FragData[".concat(i + 1, "][0] = subKernelResult_").concat(this.subKernels[i].name, "[0]"), "  gl_FragData[".concat(i + 1, "][1] = subKernelResult_").concat(this.subKernels[i].name, "[1]"), "  gl_FragData[".concat(i + 1, "][2] = subKernelResult_").concat(this.subKernels[i].name, "[2]"));
            }
            return result;
          }
        }, {
          key: "getMainResultKernelArray4Texture",
          value: function getMainResultKernelArray4Texture() {
            return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragData[0] = kernelResult'];
          }
        }, {
          key: "getMainResultSubKernelArray4Texture",
          value: function getMainResultSubKernelArray4Texture() {
            var result = [];
            if (!this.subKernels) return result;
            switch (this.returnType) {
              case 'Number':
              case 'Float':
              case 'Integer':
                for (var i = 0; i < this.subKernels.length; ++i) {
                  var subKernel = this.subKernels[i];
                  if (subKernel.returnType === 'Integer') {
                    result.push("  gl_FragData[".concat(i + 1, "] = float(subKernelResult_").concat(this.subKernels[i].name, ")"));
                  } else {
                    result.push("  gl_FragData[".concat(i + 1, "] = subKernelResult_").concat(this.subKernels[i].name));
                  }
                }
                break;
              case 'Array(2)':
                for (var _i26 = 0; _i26 < this.subKernels.length; ++_i26) {
                  result.push("  gl_FragData[".concat(_i26 + 1, "][0] = subKernelResult_").concat(this.subKernels[_i26].name, "[0]"), "  gl_FragData[".concat(_i26 + 1, "][1] = subKernelResult_").concat(this.subKernels[_i26].name, "[1]"));
                }
                break;
              case 'Array(3)':
                for (var _i27 = 0; _i27 < this.subKernels.length; ++_i27) {
                  result.push("  gl_FragData[".concat(_i27 + 1, "][0] = subKernelResult_").concat(this.subKernels[_i27].name, "[0]"), "  gl_FragData[".concat(_i27 + 1, "][1] = subKernelResult_").concat(this.subKernels[_i27].name, "[1]"), "  gl_FragData[".concat(_i27 + 1, "][2] = subKernelResult_").concat(this.subKernels[_i27].name, "[2]"));
                }
                break;
              case 'Array(4)':
                for (var _i28 = 0; _i28 < this.subKernels.length; ++_i28) {
                  result.push("  gl_FragData[".concat(_i28 + 1, "][0] = subKernelResult_").concat(this.subKernels[_i28].name, "[0]"), "  gl_FragData[".concat(_i28 + 1, "][1] = subKernelResult_").concat(this.subKernels[_i28].name, "[1]"), "  gl_FragData[".concat(_i28 + 1, "][2] = subKernelResult_").concat(this.subKernels[_i28].name, "[2]"), "  gl_FragData[".concat(_i28 + 1, "][3] = subKernelResult_").concat(this.subKernels[_i28].name, "[3]"));
                }
                break;
            }
            return result;
          }
        }, {
          key: "replaceArtifacts",
          value: function replaceArtifacts(src, map) {
            return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\n/g, function (match, artifact) {
              if (map.hasOwnProperty(artifact)) {
                return map[artifact];
              }
              throw "unhandled artifact ".concat(artifact);
            });
          }
        }, {
          key: "getFragmentShader",
          value: function getFragmentShader(args) {
            if (this.compiledFragmentShader !== null) {
              return this.compiledFragmentShader;
            }
            return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));
          }
        }, {
          key: "getVertexShader",
          value: function getVertexShader(args) {
            if (this.compiledVertexShader !== null) {
              return this.compiledVertexShader;
            }
            return this.compiledVertexShader = this.replaceArtifacts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));
          }
        }, {
          key: "toString",
          value: function toString() {
            var setupContextString = utils.linesToString(["const gl = context"]);
            return glKernelString(this.constructor, arguments, this, setupContextString);
          }
        }, {
          key: "destroy",
          value: function destroy(removeCanvasReferences) {
            if (!this.context) return;
            if (this.buffer) {
              this.context.deleteBuffer(this.buffer);
            }
            if (this.framebuffer) {
              this.context.deleteFramebuffer(this.framebuffer);
            }
            for (var width in this.rawValueFramebuffers) {
              for (var height in this.rawValueFramebuffers[width]) {
                this.context.deleteFramebuffer(this.rawValueFramebuffers[width][height]);
                delete this.rawValueFramebuffers[width][height];
              }
              delete this.rawValueFramebuffers[width];
            }
            if (this.vertShader) {
              this.context.deleteShader(this.vertShader);
            }
            if (this.fragShader) {
              this.context.deleteShader(this.fragShader);
            }
            if (this.program) {
              this.context.deleteProgram(this.program);
            }
            if (this.texture) {
              this.texture.delete();
              var textureCacheIndex = this.textureCache.indexOf(this.texture.texture);
              if (textureCacheIndex > -1) {
                this.textureCache.splice(textureCacheIndex, 1);
              }
              this.texture = null;
            }
            if (this.mappedTextures && this.mappedTextures.length) {
              for (var _i29 = 0; _i29 < this.mappedTextures.length; _i29++) {
                var mappedTexture = this.mappedTextures[_i29];
                mappedTexture.delete();
                var _textureCacheIndex = this.textureCache.indexOf(mappedTexture.texture);
                if (_textureCacheIndex > -1) {
                  this.textureCache.splice(_textureCacheIndex, 1);
                }
              }
              this.mappedTextures = null;
            }
            if (this.kernelArguments) {
              for (var _i30 = 0; _i30 < this.kernelArguments.length; _i30++) {
                this.kernelArguments[_i30].destroy();
              }
            }
            if (this.kernelConstants) {
              for (var _i31 = 0; _i31 < this.kernelConstants.length; _i31++) {
                this.kernelConstants[_i31].destroy();
              }
            }
            while (this.textureCache.length > 0) {
              var texture = this.textureCache.pop();
              this.context.deleteTexture(texture);
            }
            if (removeCanvasReferences) {
              var idx = canvases.indexOf(this.canvas);
              if (idx >= 0) {
                canvases[idx] = null;
                maxTexSizes[idx] = null;
              }
            }
            this.destroyExtensions();
            delete this.context;
            delete this.canvas;
            if (!this.gpu) return;
            var i = this.gpu.kernels.indexOf(this);
            if (i === -1) return;
            this.gpu.kernels.splice(i, 1);
          }
        }, {
          key: "destroyExtensions",
          value: function destroyExtensions() {
            this.extensions.OES_texture_float = null;
            this.extensions.OES_texture_float_linear = null;
            this.extensions.OES_element_index_uint = null;
            this.extensions.WEBGL_draw_buffers = null;
          }
        }, {
          key: "toJSON",
          value: function toJSON() {
            var json = _get(_getPrototypeOf(WebGLKernel.prototype), "toJSON", this).call(this);
            json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();
            json.settings.threadDim = this.threadDim;
            return json;
          }
        }], [{
          key: "isSupported",
          get: function get() {
            if (isSupported !== null) {
              return isSupported;
            }
            this.setupFeatureChecks();
            isSupported = this.isContextMatch(testContext);
            return isSupported;
          }
        }, {
          key: "setupFeatureChecks",
          value: function setupFeatureChecks() {
            if (typeof document !== 'undefined') {
              testCanvas = document.createElement('canvas');
            } else if (typeof OffscreenCanvas !== 'undefined') {
              testCanvas = new OffscreenCanvas(0, 0);
            }
            if (!testCanvas) return;
            testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');
            if (!testContext || !testContext.getExtension) return;
            testExtensions = {
              OES_texture_float: testContext.getExtension('OES_texture_float'),
              OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),
              OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),
              WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers')
            };
            features = this.getFeatures();
          }
        }, {
          key: "isContextMatch",
          value: function isContextMatch(context) {
            if (typeof WebGLRenderingContext !== 'undefined') {
              return context instanceof WebGLRenderingContext;
            }
            return false;
          }
        }, {
          key: "getIsTextureFloat",
          value: function getIsTextureFloat() {
            return Boolean(testExtensions.OES_texture_float);
          }
        }, {
          key: "getIsDrawBuffers",
          value: function getIsDrawBuffers() {
            return Boolean(testExtensions.WEBGL_draw_buffers);
          }
        }, {
          key: "getChannelCount",
          value: function getChannelCount() {
            return testExtensions.WEBGL_draw_buffers ? testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) : 1;
          }
        }, {
          key: "getMaxTextureSize",
          value: function getMaxTextureSize() {
            return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);
          }
        }, {
          key: "lookupKernelValueType",
          value: function lookupKernelValueType(type, dynamic, precision, value) {
            return _lookupKernelValueType(type, dynamic, precision, value);
          }
        }, {
          key: "testCanvas",
          get: function get() {
            return testCanvas;
          }
        }, {
          key: "testContext",
          get: function get() {
            return testContext;
          }
        }, {
          key: "features",
          get: function get() {
            return features;
          }
        }, {
          key: "fragmentShader",
          get: function get() {
            return fragmentShader;
          }
        }, {
          key: "vertexShader",
          get: function get() {
            return vertexShader;
          }
        }, {
          key: "destroyContext",
          value: function destroyContext(context) {
            var extension = context.getExtension('WEBGL_lose_context');
            if (extension) {
              extension.loseContext();
            }
          }
        }]);
        return WebGLKernel;
      }(GLKernel);
      module.exports = {
        WebGLKernel: WebGLKernel
      };
    }, {
      "../../plugins/math-random-uniformly-distributed": 112,
      "../../utils": 114,
      "../function-builder": 9,
      "../gl/kernel": 13,
      "../gl/kernel-string": 12,
      "./fragment-shader": 37,
      "./function-node": 38,
      "./kernel-value-maps": 39,
      "./vertex-shader": 71
    }],
    71: [function (require, module, exports) {
      var vertexShader = "__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nattribute vec2 aPos;\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}";
      module.exports = {
        vertexShader: vertexShader
      };
    }, {}],
    72: [function (require, module, exports) {
      var fragmentShader = "#version 300 es\n__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nin vec2 vTexCoord;\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat expm1(float x) {\n  return pow(".concat(Math.E, ", x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x/y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  return texel[channel] * 255.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  index = index / 4;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return texel[channel];\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, st / vec2(texSize));\n}\n\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, vec3(st / vec2(texSize), z));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n\n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}");
      module.exports = {
        fragmentShader: fragmentShader
      };
    }, {}],
    73: [function (require, module, exports) {
      var _require171 = require('../../utils'),
        utils = _require171.utils;
      var _require172 = require('../web-gl/function-node'),
        WebGLFunctionNode = _require172.WebGLFunctionNode;
      var WebGL2FunctionNode = /*#__PURE__*/function (_WebGLFunctionNode) {
        "use strict";

        _inherits(WebGL2FunctionNode, _WebGLFunctionNode);
        var _super57 = _createSuper(WebGL2FunctionNode);
        function WebGL2FunctionNode() {
          _classCallCheck(this, WebGL2FunctionNode);
          return _super57.apply(this, arguments);
        }
        _createClass(WebGL2FunctionNode, [{
          key: "astIdentifierExpression",
          value: function astIdentifierExpression(idtNode, retArr) {
            if (idtNode.type !== 'Identifier') {
              throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);
            }
            var type = this.getType(idtNode);
            var name = utils.sanitizeName(idtNode.name);
            if (idtNode.name === 'Infinity') {
              retArr.push('intBitsToFloat(2139095039)');
            } else if (type === 'Boolean') {
              if (this.argumentNames.indexOf(name) > -1) {
                retArr.push("bool(user_".concat(name, ")"));
              } else {
                retArr.push("user_".concat(name));
              }
            } else {
              retArr.push("user_".concat(name));
            }
            return retArr;
          }
        }]);
        return WebGL2FunctionNode;
      }(WebGLFunctionNode);
      module.exports = {
        WebGL2FunctionNode: WebGL2FunctionNode
      };
    }, {
      "../../utils": 114,
      "../web-gl/function-node": 38
    }],
    74: [function (require, module, exports) {
      var _require173 = require('./kernel-value/boolean'),
        WebGL2KernelValueBoolean = _require173.WebGL2KernelValueBoolean;
      var _require174 = require('./kernel-value/float'),
        WebGL2KernelValueFloat = _require174.WebGL2KernelValueFloat;
      var _require175 = require('./kernel-value/integer'),
        WebGL2KernelValueInteger = _require175.WebGL2KernelValueInteger;
      var _require176 = require('./kernel-value/html-image'),
        WebGL2KernelValueHTMLImage = _require176.WebGL2KernelValueHTMLImage;
      var _require177 = require('./kernel-value/dynamic-html-image'),
        WebGL2KernelValueDynamicHTMLImage = _require177.WebGL2KernelValueDynamicHTMLImage;
      var _require178 = require('./kernel-value/html-image-array'),
        WebGL2KernelValueHTMLImageArray = _require178.WebGL2KernelValueHTMLImageArray;
      var _require179 = require('./kernel-value/dynamic-html-image-array'),
        WebGL2KernelValueDynamicHTMLImageArray = _require179.WebGL2KernelValueDynamicHTMLImageArray;
      var _require180 = require('./kernel-value/html-video'),
        WebGL2KernelValueHTMLVideo = _require180.WebGL2KernelValueHTMLVideo;
      var _require181 = require('./kernel-value/dynamic-html-video'),
        WebGL2KernelValueDynamicHTMLVideo = _require181.WebGL2KernelValueDynamicHTMLVideo;
      var _require182 = require('./kernel-value/single-input'),
        WebGL2KernelValueSingleInput = _require182.WebGL2KernelValueSingleInput;
      var _require183 = require('./kernel-value/dynamic-single-input'),
        WebGL2KernelValueDynamicSingleInput = _require183.WebGL2KernelValueDynamicSingleInput;
      var _require184 = require('./kernel-value/unsigned-input'),
        WebGL2KernelValueUnsignedInput = _require184.WebGL2KernelValueUnsignedInput;
      var _require185 = require('./kernel-value/dynamic-unsigned-input'),
        WebGL2KernelValueDynamicUnsignedInput = _require185.WebGL2KernelValueDynamicUnsignedInput;
      var _require186 = require('./kernel-value/memory-optimized-number-texture'),
        WebGL2KernelValueMemoryOptimizedNumberTexture = _require186.WebGL2KernelValueMemoryOptimizedNumberTexture;
      var _require187 = require('./kernel-value/dynamic-memory-optimized-number-texture'),
        WebGL2KernelValueDynamicMemoryOptimizedNumberTexture = _require187.WebGL2KernelValueDynamicMemoryOptimizedNumberTexture;
      var _require188 = require('./kernel-value/number-texture'),
        WebGL2KernelValueNumberTexture = _require188.WebGL2KernelValueNumberTexture;
      var _require189 = require('./kernel-value/dynamic-number-texture'),
        WebGL2KernelValueDynamicNumberTexture = _require189.WebGL2KernelValueDynamicNumberTexture;
      var _require190 = require('./kernel-value/single-array'),
        WebGL2KernelValueSingleArray = _require190.WebGL2KernelValueSingleArray;
      var _require191 = require('./kernel-value/dynamic-single-array'),
        WebGL2KernelValueDynamicSingleArray = _require191.WebGL2KernelValueDynamicSingleArray;
      var _require192 = require('./kernel-value/single-array1d-i'),
        WebGL2KernelValueSingleArray1DI = _require192.WebGL2KernelValueSingleArray1DI;
      var _require193 = require('./kernel-value/dynamic-single-array1d-i'),
        WebGL2KernelValueDynamicSingleArray1DI = _require193.WebGL2KernelValueDynamicSingleArray1DI;
      var _require194 = require('./kernel-value/single-array2d-i'),
        WebGL2KernelValueSingleArray2DI = _require194.WebGL2KernelValueSingleArray2DI;
      var _require195 = require('./kernel-value/dynamic-single-array2d-i'),
        WebGL2KernelValueDynamicSingleArray2DI = _require195.WebGL2KernelValueDynamicSingleArray2DI;
      var _require196 = require('./kernel-value/single-array3d-i'),
        WebGL2KernelValueSingleArray3DI = _require196.WebGL2KernelValueSingleArray3DI;
      var _require197 = require('./kernel-value/dynamic-single-array3d-i'),
        WebGL2KernelValueDynamicSingleArray3DI = _require197.WebGL2KernelValueDynamicSingleArray3DI;
      var _require198 = require('./kernel-value/array2'),
        WebGL2KernelValueArray2 = _require198.WebGL2KernelValueArray2;
      var _require199 = require('./kernel-value/array3'),
        WebGL2KernelValueArray3 = _require199.WebGL2KernelValueArray3;
      var _require200 = require('./kernel-value/array4'),
        WebGL2KernelValueArray4 = _require200.WebGL2KernelValueArray4;
      var _require201 = require('./kernel-value/unsigned-array'),
        WebGL2KernelValueUnsignedArray = _require201.WebGL2KernelValueUnsignedArray;
      var _require202 = require('./kernel-value/dynamic-unsigned-array'),
        WebGL2KernelValueDynamicUnsignedArray = _require202.WebGL2KernelValueDynamicUnsignedArray;
      var kernelValueMaps = {
        unsigned: {
          dynamic: {
            'Boolean': WebGL2KernelValueBoolean,
            'Integer': WebGL2KernelValueInteger,
            'Float': WebGL2KernelValueFloat,
            'Array': WebGL2KernelValueDynamicUnsignedArray,
            'Array(2)': WebGL2KernelValueArray2,
            'Array(3)': WebGL2KernelValueArray3,
            'Array(4)': WebGL2KernelValueArray4,
            'Array1D(2)': false,
            'Array1D(3)': false,
            'Array1D(4)': false,
            'Array2D(2)': false,
            'Array2D(3)': false,
            'Array2D(4)': false,
            'Array3D(2)': false,
            'Array3D(3)': false,
            'Array3D(4)': false,
            'Input': WebGL2KernelValueDynamicUnsignedInput,
            'NumberTexture': WebGL2KernelValueDynamicNumberTexture,
            'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,
            'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,
            'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,
            'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,
            'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,
            'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,
            'OffscreenCanvas': WebGL2KernelValueDynamicHTMLImage,
            'HTMLImage': WebGL2KernelValueDynamicHTMLImage,
            'ImageBitmap': WebGL2KernelValueDynamicHTMLImage,
            'ImageData': WebGL2KernelValueDynamicHTMLImage,
            'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,
            'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo
          },
          static: {
            'Boolean': WebGL2KernelValueBoolean,
            'Float': WebGL2KernelValueFloat,
            'Integer': WebGL2KernelValueInteger,
            'Array': WebGL2KernelValueUnsignedArray,
            'Array(2)': WebGL2KernelValueArray2,
            'Array(3)': WebGL2KernelValueArray3,
            'Array(4)': WebGL2KernelValueArray4,
            'Array1D(2)': false,
            'Array1D(3)': false,
            'Array1D(4)': false,
            'Array2D(2)': false,
            'Array2D(3)': false,
            'Array2D(4)': false,
            'Array3D(2)': false,
            'Array3D(3)': false,
            'Array3D(4)': false,
            'Input': WebGL2KernelValueUnsignedInput,
            'NumberTexture': WebGL2KernelValueNumberTexture,
            'ArrayTexture(1)': WebGL2KernelValueNumberTexture,
            'ArrayTexture(2)': WebGL2KernelValueNumberTexture,
            'ArrayTexture(3)': WebGL2KernelValueNumberTexture,
            'ArrayTexture(4)': WebGL2KernelValueNumberTexture,
            'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,
            'HTMLCanvas': WebGL2KernelValueHTMLImage,
            'OffscreenCanvas': WebGL2KernelValueHTMLImage,
            'HTMLImage': WebGL2KernelValueHTMLImage,
            'ImageBitmap': WebGL2KernelValueHTMLImage,
            'ImageData': WebGL2KernelValueHTMLImage,
            'HTMLImageArray': WebGL2KernelValueHTMLImageArray,
            'HTMLVideo': WebGL2KernelValueHTMLVideo
          }
        },
        single: {
          dynamic: {
            'Boolean': WebGL2KernelValueBoolean,
            'Integer': WebGL2KernelValueInteger,
            'Float': WebGL2KernelValueFloat,
            'Array': WebGL2KernelValueDynamicSingleArray,
            'Array(2)': WebGL2KernelValueArray2,
            'Array(3)': WebGL2KernelValueArray3,
            'Array(4)': WebGL2KernelValueArray4,
            'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,
            'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,
            'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,
            'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,
            'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,
            'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,
            'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,
            'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,
            'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,
            'Input': WebGL2KernelValueDynamicSingleInput,
            'NumberTexture': WebGL2KernelValueDynamicNumberTexture,
            'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,
            'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,
            'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,
            'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,
            'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,
            'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,
            'OffscreenCanvas': WebGL2KernelValueDynamicHTMLImage,
            'HTMLImage': WebGL2KernelValueDynamicHTMLImage,
            'ImageBitmap': WebGL2KernelValueDynamicHTMLImage,
            'ImageData': WebGL2KernelValueDynamicHTMLImage,
            'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,
            'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo
          },
          static: {
            'Boolean': WebGL2KernelValueBoolean,
            'Float': WebGL2KernelValueFloat,
            'Integer': WebGL2KernelValueInteger,
            'Array': WebGL2KernelValueSingleArray,
            'Array(2)': WebGL2KernelValueArray2,
            'Array(3)': WebGL2KernelValueArray3,
            'Array(4)': WebGL2KernelValueArray4,
            'Array1D(2)': WebGL2KernelValueSingleArray1DI,
            'Array1D(3)': WebGL2KernelValueSingleArray1DI,
            'Array1D(4)': WebGL2KernelValueSingleArray1DI,
            'Array2D(2)': WebGL2KernelValueSingleArray2DI,
            'Array2D(3)': WebGL2KernelValueSingleArray2DI,
            'Array2D(4)': WebGL2KernelValueSingleArray2DI,
            'Array3D(2)': WebGL2KernelValueSingleArray3DI,
            'Array3D(3)': WebGL2KernelValueSingleArray3DI,
            'Array3D(4)': WebGL2KernelValueSingleArray3DI,
            'Input': WebGL2KernelValueSingleInput,
            'NumberTexture': WebGL2KernelValueNumberTexture,
            'ArrayTexture(1)': WebGL2KernelValueNumberTexture,
            'ArrayTexture(2)': WebGL2KernelValueNumberTexture,
            'ArrayTexture(3)': WebGL2KernelValueNumberTexture,
            'ArrayTexture(4)': WebGL2KernelValueNumberTexture,
            'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,
            'HTMLCanvas': WebGL2KernelValueHTMLImage,
            'OffscreenCanvas': WebGL2KernelValueHTMLImage,
            'HTMLImage': WebGL2KernelValueHTMLImage,
            'ImageBitmap': WebGL2KernelValueHTMLImage,
            'ImageData': WebGL2KernelValueHTMLImage,
            'HTMLImageArray': WebGL2KernelValueHTMLImageArray,
            'HTMLVideo': WebGL2KernelValueHTMLVideo
          }
        }
      };
      function lookupKernelValueType(type, dynamic, precision, value) {
        if (!type) {
          throw new Error('type missing');
        }
        if (!dynamic) {
          throw new Error('dynamic missing');
        }
        if (!precision) {
          throw new Error('precision missing');
        }
        if (value.type) {
          type = value.type;
        }
        var types = kernelValueMaps[precision][dynamic];
        if (types[type] === false) {
          return null;
        } else if (types[type] === undefined) {
          throw new Error("Could not find a KernelValue for ".concat(type));
        }
        return types[type];
      }
      module.exports = {
        kernelValueMaps: kernelValueMaps,
        lookupKernelValueType: lookupKernelValueType
      };
    }, {
      "./kernel-value/array2": 75,
      "./kernel-value/array3": 76,
      "./kernel-value/array4": 77,
      "./kernel-value/boolean": 78,
      "./kernel-value/dynamic-html-image": 80,
      "./kernel-value/dynamic-html-image-array": 79,
      "./kernel-value/dynamic-html-video": 81,
      "./kernel-value/dynamic-memory-optimized-number-texture": 82,
      "./kernel-value/dynamic-number-texture": 83,
      "./kernel-value/dynamic-single-array": 84,
      "./kernel-value/dynamic-single-array1d-i": 85,
      "./kernel-value/dynamic-single-array2d-i": 86,
      "./kernel-value/dynamic-single-array3d-i": 87,
      "./kernel-value/dynamic-single-input": 88,
      "./kernel-value/dynamic-unsigned-array": 89,
      "./kernel-value/dynamic-unsigned-input": 90,
      "./kernel-value/float": 91,
      "./kernel-value/html-image": 93,
      "./kernel-value/html-image-array": 92,
      "./kernel-value/html-video": 94,
      "./kernel-value/integer": 95,
      "./kernel-value/memory-optimized-number-texture": 96,
      "./kernel-value/number-texture": 97,
      "./kernel-value/single-array": 98,
      "./kernel-value/single-array1d-i": 99,
      "./kernel-value/single-array2d-i": 100,
      "./kernel-value/single-array3d-i": 101,
      "./kernel-value/single-input": 102,
      "./kernel-value/unsigned-array": 103,
      "./kernel-value/unsigned-input": 104
    }],
    75: [function (require, module, exports) {
      var _require203 = require('../../web-gl/kernel-value/array2'),
        WebGLKernelValueArray2 = _require203.WebGLKernelValueArray2;
      var WebGL2KernelValueArray2 = /*#__PURE__*/function (_WebGLKernelValueArra) {
        "use strict";

        _inherits(WebGL2KernelValueArray2, _WebGLKernelValueArra);
        var _super58 = _createSuper(WebGL2KernelValueArray2);
        function WebGL2KernelValueArray2() {
          _classCallCheck(this, WebGL2KernelValueArray2);
          return _super58.apply(this, arguments);
        }
        return _createClass(WebGL2KernelValueArray2);
      }(WebGLKernelValueArray2);
      module.exports = {
        WebGL2KernelValueArray2: WebGL2KernelValueArray2
      };
    }, {
      "../../web-gl/kernel-value/array2": 41
    }],
    76: [function (require, module, exports) {
      var _require204 = require('../../web-gl/kernel-value/array3'),
        WebGLKernelValueArray3 = _require204.WebGLKernelValueArray3;
      var WebGL2KernelValueArray3 = /*#__PURE__*/function (_WebGLKernelValueArra2) {
        "use strict";

        _inherits(WebGL2KernelValueArray3, _WebGLKernelValueArra2);
        var _super59 = _createSuper(WebGL2KernelValueArray3);
        function WebGL2KernelValueArray3() {
          _classCallCheck(this, WebGL2KernelValueArray3);
          return _super59.apply(this, arguments);
        }
        return _createClass(WebGL2KernelValueArray3);
      }(WebGLKernelValueArray3);
      module.exports = {
        WebGL2KernelValueArray3: WebGL2KernelValueArray3
      };
    }, {
      "../../web-gl/kernel-value/array3": 42
    }],
    77: [function (require, module, exports) {
      var _require205 = require('../../web-gl/kernel-value/array4'),
        WebGLKernelValueArray4 = _require205.WebGLKernelValueArray4;
      var WebGL2KernelValueArray4 = /*#__PURE__*/function (_WebGLKernelValueArra3) {
        "use strict";

        _inherits(WebGL2KernelValueArray4, _WebGLKernelValueArra3);
        var _super60 = _createSuper(WebGL2KernelValueArray4);
        function WebGL2KernelValueArray4() {
          _classCallCheck(this, WebGL2KernelValueArray4);
          return _super60.apply(this, arguments);
        }
        return _createClass(WebGL2KernelValueArray4);
      }(WebGLKernelValueArray4);
      module.exports = {
        WebGL2KernelValueArray4: WebGL2KernelValueArray4
      };
    }, {
      "../../web-gl/kernel-value/array4": 43
    }],
    78: [function (require, module, exports) {
      var _require206 = require('../../web-gl/kernel-value/boolean'),
        WebGLKernelValueBoolean = _require206.WebGLKernelValueBoolean;
      var WebGL2KernelValueBoolean = /*#__PURE__*/function (_WebGLKernelValueBool) {
        "use strict";

        _inherits(WebGL2KernelValueBoolean, _WebGLKernelValueBool);
        var _super61 = _createSuper(WebGL2KernelValueBoolean);
        function WebGL2KernelValueBoolean() {
          _classCallCheck(this, WebGL2KernelValueBoolean);
          return _super61.apply(this, arguments);
        }
        return _createClass(WebGL2KernelValueBoolean);
      }(WebGLKernelValueBoolean);
      module.exports = {
        WebGL2KernelValueBoolean: WebGL2KernelValueBoolean
      };
    }, {
      "../../web-gl/kernel-value/boolean": 44
    }],
    79: [function (require, module, exports) {
      var _require207 = require('../../../utils'),
        utils = _require207.utils;
      var _require208 = require('./html-image-array'),
        WebGL2KernelValueHTMLImageArray = _require208.WebGL2KernelValueHTMLImageArray;
      var WebGL2KernelValueDynamicHTMLImageArray = /*#__PURE__*/function (_WebGL2KernelValueHTM) {
        "use strict";

        _inherits(WebGL2KernelValueDynamicHTMLImageArray, _WebGL2KernelValueHTM);
        var _super62 = _createSuper(WebGL2KernelValueDynamicHTMLImageArray);
        function WebGL2KernelValueDynamicHTMLImageArray() {
          _classCallCheck(this, WebGL2KernelValueDynamicHTMLImageArray);
          return _super62.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueDynamicHTMLImageArray, [{
          key: "getSource",
          value: function getSource() {
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2DArray ").concat(this.id), "uniform ".concat(variablePrecision, " ivec2 ").concat(this.sizeId), "uniform ".concat(variablePrecision, " ivec3 ").concat(this.dimensionsId)]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(images) {
            var _images$ = images[0],
              width = _images$.width,
              height = _images$.height;
            this.checkSize(width, height);
            this.dimensions = [width, height, images.length];
            this.textureSize = [width, height];
            this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);
            this.kernel.setUniform2iv(this.sizeId, this.textureSize);
            _get(_getPrototypeOf(WebGL2KernelValueDynamicHTMLImageArray.prototype), "updateValue", this).call(this, images);
          }
        }]);
        return WebGL2KernelValueDynamicHTMLImageArray;
      }(WebGL2KernelValueHTMLImageArray);
      module.exports = {
        WebGL2KernelValueDynamicHTMLImageArray: WebGL2KernelValueDynamicHTMLImageArray
      };
    }, {
      "../../../utils": 114,
      "./html-image-array": 92
    }],
    80: [function (require, module, exports) {
      var _require209 = require('../../../utils'),
        utils = _require209.utils;
      var _require210 = require('../../web-gl/kernel-value/dynamic-html-image'),
        WebGLKernelValueDynamicHTMLImage = _require210.WebGLKernelValueDynamicHTMLImage;
      var WebGL2KernelValueDynamicHTMLImage = /*#__PURE__*/function (_WebGLKernelValueDyna2) {
        "use strict";

        _inherits(WebGL2KernelValueDynamicHTMLImage, _WebGLKernelValueDyna2);
        var _super63 = _createSuper(WebGL2KernelValueDynamicHTMLImage);
        function WebGL2KernelValueDynamicHTMLImage() {
          _classCallCheck(this, WebGL2KernelValueDynamicHTMLImage);
          return _super63.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueDynamicHTMLImage, [{
          key: "getSource",
          value: function getSource() {
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2D ").concat(this.id), "uniform ".concat(variablePrecision, " ivec2 ").concat(this.sizeId), "uniform ".concat(variablePrecision, " ivec3 ").concat(this.dimensionsId)]);
          }
        }]);
        return WebGL2KernelValueDynamicHTMLImage;
      }(WebGLKernelValueDynamicHTMLImage);
      module.exports = {
        WebGL2KernelValueDynamicHTMLImage: WebGL2KernelValueDynamicHTMLImage
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/dynamic-html-image": 45
    }],
    81: [function (require, module, exports) {
      var _require211 = require('../../../utils'),
        utils = _require211.utils;
      var _require212 = require('./dynamic-html-image'),
        WebGL2KernelValueDynamicHTMLImage = _require212.WebGL2KernelValueDynamicHTMLImage;
      var WebGL2KernelValueDynamicHTMLVideo = /*#__PURE__*/function (_WebGL2KernelValueDyn) {
        "use strict";

        _inherits(WebGL2KernelValueDynamicHTMLVideo, _WebGL2KernelValueDyn);
        var _super64 = _createSuper(WebGL2KernelValueDynamicHTMLVideo);
        function WebGL2KernelValueDynamicHTMLVideo() {
          _classCallCheck(this, WebGL2KernelValueDynamicHTMLVideo);
          return _super64.apply(this, arguments);
        }
        return _createClass(WebGL2KernelValueDynamicHTMLVideo);
      }(WebGL2KernelValueDynamicHTMLImage);
      module.exports = {
        WebGL2KernelValueDynamicHTMLVideo: WebGL2KernelValueDynamicHTMLVideo
      };
    }, {
      "../../../utils": 114,
      "./dynamic-html-image": 80
    }],
    82: [function (require, module, exports) {
      var _require213 = require('../../../utils'),
        utils = _require213.utils;
      var _require214 = require('../../web-gl/kernel-value/dynamic-memory-optimized-number-texture'),
        WebGLKernelValueDynamicMemoryOptimizedNumberTexture = _require214.WebGLKernelValueDynamicMemoryOptimizedNumberTexture;
      var WebGL2KernelValueDynamicMemoryOptimizedNumberTexture = /*#__PURE__*/function (_WebGLKernelValueDyna3) {
        "use strict";

        _inherits(WebGL2KernelValueDynamicMemoryOptimizedNumberTexture, _WebGLKernelValueDyna3);
        var _super65 = _createSuper(WebGL2KernelValueDynamicMemoryOptimizedNumberTexture);
        function WebGL2KernelValueDynamicMemoryOptimizedNumberTexture() {
          _classCallCheck(this, WebGL2KernelValueDynamicMemoryOptimizedNumberTexture);
          return _super65.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueDynamicMemoryOptimizedNumberTexture, [{
          key: "getSource",
          value: function getSource() {
            return utils.linesToString(["uniform sampler2D ".concat(this.id), "uniform ivec2 ".concat(this.sizeId), "uniform ivec3 ".concat(this.dimensionsId)]);
          }
        }]);
        return WebGL2KernelValueDynamicMemoryOptimizedNumberTexture;
      }(WebGLKernelValueDynamicMemoryOptimizedNumberTexture);
      module.exports = {
        WebGL2KernelValueDynamicMemoryOptimizedNumberTexture: WebGL2KernelValueDynamicMemoryOptimizedNumberTexture
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/dynamic-memory-optimized-number-texture": 47
    }],
    83: [function (require, module, exports) {
      var _require215 = require('../../../utils'),
        utils = _require215.utils;
      var _require216 = require('../../web-gl/kernel-value/dynamic-number-texture'),
        WebGLKernelValueDynamicNumberTexture = _require216.WebGLKernelValueDynamicNumberTexture;
      var WebGL2KernelValueDynamicNumberTexture = /*#__PURE__*/function (_WebGLKernelValueDyna4) {
        "use strict";

        _inherits(WebGL2KernelValueDynamicNumberTexture, _WebGLKernelValueDyna4);
        var _super66 = _createSuper(WebGL2KernelValueDynamicNumberTexture);
        function WebGL2KernelValueDynamicNumberTexture() {
          _classCallCheck(this, WebGL2KernelValueDynamicNumberTexture);
          return _super66.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueDynamicNumberTexture, [{
          key: "getSource",
          value: function getSource() {
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2D ").concat(this.id), "uniform ".concat(variablePrecision, " ivec2 ").concat(this.sizeId), "uniform ".concat(variablePrecision, " ivec3 ").concat(this.dimensionsId)]);
          }
        }]);
        return WebGL2KernelValueDynamicNumberTexture;
      }(WebGLKernelValueDynamicNumberTexture);
      module.exports = {
        WebGL2KernelValueDynamicNumberTexture: WebGL2KernelValueDynamicNumberTexture
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/dynamic-number-texture": 48
    }],
    84: [function (require, module, exports) {
      var _require217 = require('../../../utils'),
        utils = _require217.utils;
      var _require218 = require('../../web-gl2/kernel-value/single-array'),
        WebGL2KernelValueSingleArray = _require218.WebGL2KernelValueSingleArray;
      var WebGL2KernelValueDynamicSingleArray = /*#__PURE__*/function (_WebGL2KernelValueSin) {
        "use strict";

        _inherits(WebGL2KernelValueDynamicSingleArray, _WebGL2KernelValueSin);
        var _super67 = _createSuper(WebGL2KernelValueDynamicSingleArray);
        function WebGL2KernelValueDynamicSingleArray() {
          _classCallCheck(this, WebGL2KernelValueDynamicSingleArray);
          return _super67.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueDynamicSingleArray, [{
          key: "getSource",
          value: function getSource() {
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2D ").concat(this.id), "uniform ".concat(variablePrecision, " ivec2 ").concat(this.sizeId), "uniform ".concat(variablePrecision, " ivec3 ").concat(this.dimensionsId)]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            this.dimensions = utils.getDimensions(value, true);
            this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);
            this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;
            this.checkSize(this.textureSize[0], this.textureSize[1]);
            this.uploadValue = new Float32Array(this.uploadArrayLength);
            this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);
            this.kernel.setUniform2iv(this.sizeId, this.textureSize);
            _get(_getPrototypeOf(WebGL2KernelValueDynamicSingleArray.prototype), "updateValue", this).call(this, value);
          }
        }]);
        return WebGL2KernelValueDynamicSingleArray;
      }(WebGL2KernelValueSingleArray);
      module.exports = {
        WebGL2KernelValueDynamicSingleArray: WebGL2KernelValueDynamicSingleArray
      };
    }, {
      "../../../utils": 114,
      "../../web-gl2/kernel-value/single-array": 98
    }],
    85: [function (require, module, exports) {
      var _require219 = require('../../../utils'),
        utils = _require219.utils;
      var _require220 = require('../../web-gl2/kernel-value/single-array1d-i'),
        WebGL2KernelValueSingleArray1DI = _require220.WebGL2KernelValueSingleArray1DI;
      var WebGL2KernelValueDynamicSingleArray1DI = /*#__PURE__*/function (_WebGL2KernelValueSin2) {
        "use strict";

        _inherits(WebGL2KernelValueDynamicSingleArray1DI, _WebGL2KernelValueSin2);
        var _super68 = _createSuper(WebGL2KernelValueDynamicSingleArray1DI);
        function WebGL2KernelValueDynamicSingleArray1DI() {
          _classCallCheck(this, WebGL2KernelValueDynamicSingleArray1DI);
          return _super68.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueDynamicSingleArray1DI, [{
          key: "getSource",
          value: function getSource() {
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2D ").concat(this.id), "uniform ".concat(variablePrecision, " ivec2 ").concat(this.sizeId), "uniform ".concat(variablePrecision, " ivec3 ").concat(this.dimensionsId)]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            this.setShape(value);
            this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);
            this.kernel.setUniform2iv(this.sizeId, this.textureSize);
            _get(_getPrototypeOf(WebGL2KernelValueDynamicSingleArray1DI.prototype), "updateValue", this).call(this, value);
          }
        }]);
        return WebGL2KernelValueDynamicSingleArray1DI;
      }(WebGL2KernelValueSingleArray1DI);
      module.exports = {
        WebGL2KernelValueDynamicSingleArray1DI: WebGL2KernelValueDynamicSingleArray1DI
      };
    }, {
      "../../../utils": 114,
      "../../web-gl2/kernel-value/single-array1d-i": 99
    }],
    86: [function (require, module, exports) {
      var _require221 = require('../../../utils'),
        utils = _require221.utils;
      var _require222 = require('../../web-gl2/kernel-value/single-array2d-i'),
        WebGL2KernelValueSingleArray2DI = _require222.WebGL2KernelValueSingleArray2DI;
      var WebGL2KernelValueDynamicSingleArray2DI = /*#__PURE__*/function (_WebGL2KernelValueSin3) {
        "use strict";

        _inherits(WebGL2KernelValueDynamicSingleArray2DI, _WebGL2KernelValueSin3);
        var _super69 = _createSuper(WebGL2KernelValueDynamicSingleArray2DI);
        function WebGL2KernelValueDynamicSingleArray2DI() {
          _classCallCheck(this, WebGL2KernelValueDynamicSingleArray2DI);
          return _super69.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueDynamicSingleArray2DI, [{
          key: "getSource",
          value: function getSource() {
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2D ").concat(this.id), "uniform ".concat(variablePrecision, " ivec2 ").concat(this.sizeId), "uniform ".concat(variablePrecision, " ivec3 ").concat(this.dimensionsId)]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            this.setShape(value);
            this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);
            this.kernel.setUniform2iv(this.sizeId, this.textureSize);
            _get(_getPrototypeOf(WebGL2KernelValueDynamicSingleArray2DI.prototype), "updateValue", this).call(this, value);
          }
        }]);
        return WebGL2KernelValueDynamicSingleArray2DI;
      }(WebGL2KernelValueSingleArray2DI);
      module.exports = {
        WebGL2KernelValueDynamicSingleArray2DI: WebGL2KernelValueDynamicSingleArray2DI
      };
    }, {
      "../../../utils": 114,
      "../../web-gl2/kernel-value/single-array2d-i": 100
    }],
    87: [function (require, module, exports) {
      var _require223 = require('../../../utils'),
        utils = _require223.utils;
      var _require224 = require('../../web-gl2/kernel-value/single-array3d-i'),
        WebGL2KernelValueSingleArray3DI = _require224.WebGL2KernelValueSingleArray3DI;
      var WebGL2KernelValueDynamicSingleArray3DI = /*#__PURE__*/function (_WebGL2KernelValueSin4) {
        "use strict";

        _inherits(WebGL2KernelValueDynamicSingleArray3DI, _WebGL2KernelValueSin4);
        var _super70 = _createSuper(WebGL2KernelValueDynamicSingleArray3DI);
        function WebGL2KernelValueDynamicSingleArray3DI() {
          _classCallCheck(this, WebGL2KernelValueDynamicSingleArray3DI);
          return _super70.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueDynamicSingleArray3DI, [{
          key: "getSource",
          value: function getSource() {
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2D ").concat(this.id), "uniform ".concat(variablePrecision, " ivec2 ").concat(this.sizeId), "uniform ".concat(variablePrecision, " ivec3 ").concat(this.dimensionsId)]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            this.setShape(value);
            this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);
            this.kernel.setUniform2iv(this.sizeId, this.textureSize);
            _get(_getPrototypeOf(WebGL2KernelValueDynamicSingleArray3DI.prototype), "updateValue", this).call(this, value);
          }
        }]);
        return WebGL2KernelValueDynamicSingleArray3DI;
      }(WebGL2KernelValueSingleArray3DI);
      module.exports = {
        WebGL2KernelValueDynamicSingleArray3DI: WebGL2KernelValueDynamicSingleArray3DI
      };
    }, {
      "../../../utils": 114,
      "../../web-gl2/kernel-value/single-array3d-i": 101
    }],
    88: [function (require, module, exports) {
      var _require225 = require('../../../utils'),
        utils = _require225.utils;
      var _require226 = require('../../web-gl2/kernel-value/single-input'),
        WebGL2KernelValueSingleInput = _require226.WebGL2KernelValueSingleInput;
      var WebGL2KernelValueDynamicSingleInput = /*#__PURE__*/function (_WebGL2KernelValueSin5) {
        "use strict";

        _inherits(WebGL2KernelValueDynamicSingleInput, _WebGL2KernelValueSin5);
        var _super71 = _createSuper(WebGL2KernelValueDynamicSingleInput);
        function WebGL2KernelValueDynamicSingleInput() {
          _classCallCheck(this, WebGL2KernelValueDynamicSingleInput);
          return _super71.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueDynamicSingleInput, [{
          key: "getSource",
          value: function getSource() {
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2D ").concat(this.id), "uniform ".concat(variablePrecision, " ivec2 ").concat(this.sizeId), "uniform ".concat(variablePrecision, " ivec3 ").concat(this.dimensionsId)]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            var _value$size7 = _slicedToArray(value.size, 3),
              w = _value$size7[0],
              h = _value$size7[1],
              d = _value$size7[2];
            this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);
            this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);
            this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;
            this.checkSize(this.textureSize[0], this.textureSize[1]);
            this.uploadValue = new Float32Array(this.uploadArrayLength);
            this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);
            this.kernel.setUniform2iv(this.sizeId, this.textureSize);
            _get(_getPrototypeOf(WebGL2KernelValueDynamicSingleInput.prototype), "updateValue", this).call(this, value);
          }
        }]);
        return WebGL2KernelValueDynamicSingleInput;
      }(WebGL2KernelValueSingleInput);
      module.exports = {
        WebGL2KernelValueDynamicSingleInput: WebGL2KernelValueDynamicSingleInput
      };
    }, {
      "../../../utils": 114,
      "../../web-gl2/kernel-value/single-input": 102
    }],
    89: [function (require, module, exports) {
      var _require227 = require('../../../utils'),
        utils = _require227.utils;
      var _require228 = require('../../web-gl/kernel-value/dynamic-unsigned-array'),
        WebGLKernelValueDynamicUnsignedArray = _require228.WebGLKernelValueDynamicUnsignedArray;
      var WebGL2KernelValueDynamicUnsignedArray = /*#__PURE__*/function (_WebGLKernelValueDyna5) {
        "use strict";

        _inherits(WebGL2KernelValueDynamicUnsignedArray, _WebGLKernelValueDyna5);
        var _super72 = _createSuper(WebGL2KernelValueDynamicUnsignedArray);
        function WebGL2KernelValueDynamicUnsignedArray() {
          _classCallCheck(this, WebGL2KernelValueDynamicUnsignedArray);
          return _super72.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueDynamicUnsignedArray, [{
          key: "getSource",
          value: function getSource() {
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2D ").concat(this.id), "uniform ".concat(variablePrecision, " ivec2 ").concat(this.sizeId), "uniform ".concat(variablePrecision, " ivec3 ").concat(this.dimensionsId)]);
          }
        }]);
        return WebGL2KernelValueDynamicUnsignedArray;
      }(WebGLKernelValueDynamicUnsignedArray);
      module.exports = {
        WebGL2KernelValueDynamicUnsignedArray: WebGL2KernelValueDynamicUnsignedArray
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/dynamic-unsigned-array": 54
    }],
    90: [function (require, module, exports) {
      var _require229 = require('../../../utils'),
        utils = _require229.utils;
      var _require230 = require('../../web-gl/kernel-value/dynamic-unsigned-input'),
        WebGLKernelValueDynamicUnsignedInput = _require230.WebGLKernelValueDynamicUnsignedInput;
      var WebGL2KernelValueDynamicUnsignedInput = /*#__PURE__*/function (_WebGLKernelValueDyna6) {
        "use strict";

        _inherits(WebGL2KernelValueDynamicUnsignedInput, _WebGLKernelValueDyna6);
        var _super73 = _createSuper(WebGL2KernelValueDynamicUnsignedInput);
        function WebGL2KernelValueDynamicUnsignedInput() {
          _classCallCheck(this, WebGL2KernelValueDynamicUnsignedInput);
          return _super73.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueDynamicUnsignedInput, [{
          key: "getSource",
          value: function getSource() {
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2D ").concat(this.id), "uniform ".concat(variablePrecision, " ivec2 ").concat(this.sizeId), "uniform ".concat(variablePrecision, " ivec3 ").concat(this.dimensionsId)]);
          }
        }]);
        return WebGL2KernelValueDynamicUnsignedInput;
      }(WebGLKernelValueDynamicUnsignedInput);
      module.exports = {
        WebGL2KernelValueDynamicUnsignedInput: WebGL2KernelValueDynamicUnsignedInput
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/dynamic-unsigned-input": 55
    }],
    91: [function (require, module, exports) {
      var _require231 = require('../../../utils'),
        utils = _require231.utils;
      var _require232 = require('../../web-gl/kernel-value/float'),
        WebGLKernelValueFloat = _require232.WebGLKernelValueFloat;
      var WebGL2KernelValueFloat = /*#__PURE__*/function (_WebGLKernelValueFloa) {
        "use strict";

        _inherits(WebGL2KernelValueFloat, _WebGLKernelValueFloa);
        var _super74 = _createSuper(WebGL2KernelValueFloat);
        function WebGL2KernelValueFloat() {
          _classCallCheck(this, WebGL2KernelValueFloat);
          return _super74.apply(this, arguments);
        }
        return _createClass(WebGL2KernelValueFloat);
      }(WebGLKernelValueFloat);
      module.exports = {
        WebGL2KernelValueFloat: WebGL2KernelValueFloat
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/float": 56
    }],
    92: [function (require, module, exports) {
      var _require233 = require('../../../utils'),
        utils = _require233.utils;
      var _require234 = require('../../web-gl/kernel-value/array'),
        WebGLKernelArray = _require234.WebGLKernelArray;
      var WebGL2KernelValueHTMLImageArray = /*#__PURE__*/function (_WebGLKernelArray11) {
        "use strict";

        _inherits(WebGL2KernelValueHTMLImageArray, _WebGLKernelArray11);
        var _super75 = _createSuper(WebGL2KernelValueHTMLImageArray);
        function WebGL2KernelValueHTMLImageArray(value, settings) {
          var _this47;
          _classCallCheck(this, WebGL2KernelValueHTMLImageArray);
          _this47 = _super75.call(this, value, settings);
          _this47.checkSize(value[0].width, value[0].height);
          _this47.dimensions = [value[0].width, value[0].height, value.length];
          _this47.textureSize = [value[0].width, value[0].height];
          return _this47;
        }
        _createClass(WebGL2KernelValueHTMLImageArray, [{
          key: "defineTexture",
          value: function defineTexture() {
            var gl = this.context;
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);
            gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
            gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
          }
        }, {
          key: "getStringValueHandler",
          value: function getStringValueHandler() {
            return "const uploadValue_".concat(this.name, " = ").concat(this.varName, ";\n");
          }
        }, {
          key: "getSource",
          value: function getSource() {
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2DArray ").concat(this.id), "".concat(variablePrecision, " ivec2 ").concat(this.sizeId, " = ivec2(").concat(this.textureSize[0], ", ").concat(this.textureSize[1], ")"), "".concat(variablePrecision, " ivec3 ").concat(this.dimensionsId, " = ivec3(").concat(this.dimensions[0], ", ").concat(this.dimensions[1], ", ").concat(this.dimensions[2], ")")]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(images) {
            var gl = this.context;
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);
            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);
            gl.texImage3D(gl.TEXTURE_2D_ARRAY, 0, gl.RGBA, images[0].width, images[0].height, images.length, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);
            for (var i = 0; i < images.length; i++) {
              var xOffset = 0;
              var yOffset = 0;
              var imageDepth = 1;
              gl.texSubImage3D(gl.TEXTURE_2D_ARRAY, 0, xOffset, yOffset, i, images[i].width, images[i].height, imageDepth, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = images[i]);
            }
            this.kernel.setUniform1i(this.id, this.index);
          }
        }]);
        return WebGL2KernelValueHTMLImageArray;
      }(WebGLKernelArray);
      module.exports = {
        WebGL2KernelValueHTMLImageArray: WebGL2KernelValueHTMLImageArray
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/array": 40
    }],
    93: [function (require, module, exports) {
      var _require235 = require('../../../utils'),
        utils = _require235.utils;
      var _require236 = require('../../web-gl/kernel-value/html-image'),
        WebGLKernelValueHTMLImage = _require236.WebGLKernelValueHTMLImage;
      var WebGL2KernelValueHTMLImage = /*#__PURE__*/function (_WebGLKernelValueHTML3) {
        "use strict";

        _inherits(WebGL2KernelValueHTMLImage, _WebGLKernelValueHTML3);
        var _super76 = _createSuper(WebGL2KernelValueHTMLImage);
        function WebGL2KernelValueHTMLImage() {
          _classCallCheck(this, WebGL2KernelValueHTMLImage);
          return _super76.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueHTMLImage, [{
          key: "getSource",
          value: function getSource() {
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2D ").concat(this.id), "".concat(variablePrecision, " ivec2 ").concat(this.sizeId, " = ivec2(").concat(this.textureSize[0], ", ").concat(this.textureSize[1], ")"), "".concat(variablePrecision, " ivec3 ").concat(this.dimensionsId, " = ivec3(").concat(this.dimensions[0], ", ").concat(this.dimensions[1], ", ").concat(this.dimensions[2], ")")]);
          }
        }]);
        return WebGL2KernelValueHTMLImage;
      }(WebGLKernelValueHTMLImage);
      module.exports = {
        WebGL2KernelValueHTMLImage: WebGL2KernelValueHTMLImage
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/html-image": 57
    }],
    94: [function (require, module, exports) {
      var _require237 = require('../../../utils'),
        utils = _require237.utils;
      var _require238 = require('./html-image'),
        WebGL2KernelValueHTMLImage = _require238.WebGL2KernelValueHTMLImage;
      var WebGL2KernelValueHTMLVideo = /*#__PURE__*/function (_WebGL2KernelValueHTM2) {
        "use strict";

        _inherits(WebGL2KernelValueHTMLVideo, _WebGL2KernelValueHTM2);
        var _super77 = _createSuper(WebGL2KernelValueHTMLVideo);
        function WebGL2KernelValueHTMLVideo() {
          _classCallCheck(this, WebGL2KernelValueHTMLVideo);
          return _super77.apply(this, arguments);
        }
        return _createClass(WebGL2KernelValueHTMLVideo);
      }(WebGL2KernelValueHTMLImage);
      module.exports = {
        WebGL2KernelValueHTMLVideo: WebGL2KernelValueHTMLVideo
      };
    }, {
      "../../../utils": 114,
      "./html-image": 93
    }],
    95: [function (require, module, exports) {
      var _require239 = require('../../web-gl/kernel-value/integer'),
        WebGLKernelValueInteger = _require239.WebGLKernelValueInteger;
      var WebGL2KernelValueInteger = /*#__PURE__*/function (_WebGLKernelValueInte) {
        "use strict";

        _inherits(WebGL2KernelValueInteger, _WebGLKernelValueInte);
        var _super78 = _createSuper(WebGL2KernelValueInteger);
        function WebGL2KernelValueInteger() {
          _classCallCheck(this, WebGL2KernelValueInteger);
          return _super78.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueInteger, [{
          key: "getSource",
          value: function getSource(value) {
            var variablePrecision = this.getVariablePrecisionString();
            if (this.origin === 'constants') {
              return "const ".concat(variablePrecision, " int ").concat(this.id, " = ").concat(parseInt(value), ";\n");
            }
            return "uniform ".concat(variablePrecision, " int ").concat(this.id, ";\n");
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            if (this.origin === 'constants') return;
            this.kernel.setUniform1i(this.id, this.uploadValue = value);
          }
        }]);
        return WebGL2KernelValueInteger;
      }(WebGLKernelValueInteger);
      module.exports = {
        WebGL2KernelValueInteger: WebGL2KernelValueInteger
      };
    }, {
      "../../web-gl/kernel-value/integer": 60
    }],
    96: [function (require, module, exports) {
      var _require240 = require('../../../utils'),
        utils = _require240.utils;
      var _require241 = require('../../web-gl/kernel-value/memory-optimized-number-texture'),
        WebGLKernelValueMemoryOptimizedNumberTexture = _require241.WebGLKernelValueMemoryOptimizedNumberTexture;
      var WebGL2KernelValueMemoryOptimizedNumberTexture = /*#__PURE__*/function (_WebGLKernelValueMemo2) {
        "use strict";

        _inherits(WebGL2KernelValueMemoryOptimizedNumberTexture, _WebGLKernelValueMemo2);
        var _super79 = _createSuper(WebGL2KernelValueMemoryOptimizedNumberTexture);
        function WebGL2KernelValueMemoryOptimizedNumberTexture() {
          _classCallCheck(this, WebGL2KernelValueMemoryOptimizedNumberTexture);
          return _super79.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueMemoryOptimizedNumberTexture, [{
          key: "getSource",
          value: function getSource() {
            var id = this.id,
              sizeId = this.sizeId,
              textureSize = this.textureSize,
              dimensionsId = this.dimensionsId,
              dimensions = this.dimensions;
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform sampler2D ".concat(id), "".concat(variablePrecision, " ivec2 ").concat(sizeId, " = ivec2(").concat(textureSize[0], ", ").concat(textureSize[1], ")"), "".concat(variablePrecision, " ivec3 ").concat(dimensionsId, " = ivec3(").concat(dimensions[0], ", ").concat(dimensions[1], ", ").concat(dimensions[2], ")")]);
          }
        }]);
        return WebGL2KernelValueMemoryOptimizedNumberTexture;
      }(WebGLKernelValueMemoryOptimizedNumberTexture);
      module.exports = {
        WebGL2KernelValueMemoryOptimizedNumberTexture: WebGL2KernelValueMemoryOptimizedNumberTexture
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/memory-optimized-number-texture": 61
    }],
    97: [function (require, module, exports) {
      var _require242 = require('../../../utils'),
        utils = _require242.utils;
      var _require243 = require('../../web-gl/kernel-value/number-texture'),
        WebGLKernelValueNumberTexture = _require243.WebGLKernelValueNumberTexture;
      var WebGL2KernelValueNumberTexture = /*#__PURE__*/function (_WebGLKernelValueNumb2) {
        "use strict";

        _inherits(WebGL2KernelValueNumberTexture, _WebGLKernelValueNumb2);
        var _super80 = _createSuper(WebGL2KernelValueNumberTexture);
        function WebGL2KernelValueNumberTexture() {
          _classCallCheck(this, WebGL2KernelValueNumberTexture);
          return _super80.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueNumberTexture, [{
          key: "getSource",
          value: function getSource() {
            var id = this.id,
              sizeId = this.sizeId,
              textureSize = this.textureSize,
              dimensionsId = this.dimensionsId,
              dimensions = this.dimensions;
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2D ").concat(id), "".concat(variablePrecision, " ivec2 ").concat(sizeId, " = ivec2(").concat(textureSize[0], ", ").concat(textureSize[1], ")"), "".concat(variablePrecision, " ivec3 ").concat(dimensionsId, " = ivec3(").concat(dimensions[0], ", ").concat(dimensions[1], ", ").concat(dimensions[2], ")")]);
          }
        }]);
        return WebGL2KernelValueNumberTexture;
      }(WebGLKernelValueNumberTexture);
      module.exports = {
        WebGL2KernelValueNumberTexture: WebGL2KernelValueNumberTexture
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/number-texture": 62
    }],
    98: [function (require, module, exports) {
      var _require244 = require('../../../utils'),
        utils = _require244.utils;
      var _require245 = require('../../web-gl/kernel-value/single-array'),
        WebGLKernelValueSingleArray = _require245.WebGLKernelValueSingleArray;
      var WebGL2KernelValueSingleArray = /*#__PURE__*/function (_WebGLKernelValueSing6) {
        "use strict";

        _inherits(WebGL2KernelValueSingleArray, _WebGLKernelValueSing6);
        var _super81 = _createSuper(WebGL2KernelValueSingleArray);
        function WebGL2KernelValueSingleArray() {
          _classCallCheck(this, WebGL2KernelValueSingleArray);
          return _super81.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueSingleArray, [{
          key: "getSource",
          value: function getSource() {
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2D ").concat(this.id), "".concat(variablePrecision, " ivec2 ").concat(this.sizeId, " = ivec2(").concat(this.textureSize[0], ", ").concat(this.textureSize[1], ")"), "".concat(variablePrecision, " ivec3 ").concat(this.dimensionsId, " = ivec3(").concat(this.dimensions[0], ", ").concat(this.dimensions[1], ", ").concat(this.dimensions[2], ")")]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(value) {
            if (value.constructor !== this.initialValueConstructor) {
              this.onUpdateValueMismatch(value.constructor);
              return;
            }
            var gl = this.context;
            utils.flattenTo(value, this.uploadValue);
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D, this.texture);
            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);
            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);
            this.kernel.setUniform1i(this.id, this.index);
          }
        }]);
        return WebGL2KernelValueSingleArray;
      }(WebGLKernelValueSingleArray);
      module.exports = {
        WebGL2KernelValueSingleArray: WebGL2KernelValueSingleArray
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/single-array": 63
    }],
    99: [function (require, module, exports) {
      var _require246 = require('../../../utils'),
        utils = _require246.utils;
      var _require247 = require('../../web-gl/kernel-value/single-array1d-i'),
        WebGLKernelValueSingleArray1DI = _require247.WebGLKernelValueSingleArray1DI;
      var WebGL2KernelValueSingleArray1DI = /*#__PURE__*/function (_WebGLKernelValueSing7) {
        "use strict";

        _inherits(WebGL2KernelValueSingleArray1DI, _WebGLKernelValueSing7);
        var _super82 = _createSuper(WebGL2KernelValueSingleArray1DI);
        function WebGL2KernelValueSingleArray1DI() {
          _classCallCheck(this, WebGL2KernelValueSingleArray1DI);
          return _super82.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueSingleArray1DI, [{
          key: "updateValue",
          value: function updateValue(value) {
            if (value.constructor !== this.initialValueConstructor) {
              this.onUpdateValueMismatch(value.constructor);
              return;
            }
            var gl = this.context;
            utils.flattenTo(value, this.uploadValue);
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D, this.texture);
            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);
            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);
            this.kernel.setUniform1i(this.id, this.index);
          }
        }]);
        return WebGL2KernelValueSingleArray1DI;
      }(WebGLKernelValueSingleArray1DI);
      module.exports = {
        WebGL2KernelValueSingleArray1DI: WebGL2KernelValueSingleArray1DI
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/single-array1d-i": 64
    }],
    100: [function (require, module, exports) {
      var _require248 = require('../../../utils'),
        utils = _require248.utils;
      var _require249 = require('../../web-gl/kernel-value/single-array2d-i'),
        WebGLKernelValueSingleArray2DI = _require249.WebGLKernelValueSingleArray2DI;
      var WebGL2KernelValueSingleArray2DI = /*#__PURE__*/function (_WebGLKernelValueSing8) {
        "use strict";

        _inherits(WebGL2KernelValueSingleArray2DI, _WebGLKernelValueSing8);
        var _super83 = _createSuper(WebGL2KernelValueSingleArray2DI);
        function WebGL2KernelValueSingleArray2DI() {
          _classCallCheck(this, WebGL2KernelValueSingleArray2DI);
          return _super83.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueSingleArray2DI, [{
          key: "updateValue",
          value: function updateValue(value) {
            if (value.constructor !== this.initialValueConstructor) {
              this.onUpdateValueMismatch(value.constructor);
              return;
            }
            var gl = this.context;
            utils.flattenTo(value, this.uploadValue);
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D, this.texture);
            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);
            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);
            this.kernel.setUniform1i(this.id, this.index);
          }
        }]);
        return WebGL2KernelValueSingleArray2DI;
      }(WebGLKernelValueSingleArray2DI);
      module.exports = {
        WebGL2KernelValueSingleArray2DI: WebGL2KernelValueSingleArray2DI
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/single-array2d-i": 65
    }],
    101: [function (require, module, exports) {
      var _require250 = require('../../../utils'),
        utils = _require250.utils;
      var _require251 = require('../../web-gl/kernel-value/single-array3d-i'),
        WebGLKernelValueSingleArray3DI = _require251.WebGLKernelValueSingleArray3DI;
      var WebGL2KernelValueSingleArray3DI = /*#__PURE__*/function (_WebGLKernelValueSing9) {
        "use strict";

        _inherits(WebGL2KernelValueSingleArray3DI, _WebGLKernelValueSing9);
        var _super84 = _createSuper(WebGL2KernelValueSingleArray3DI);
        function WebGL2KernelValueSingleArray3DI() {
          _classCallCheck(this, WebGL2KernelValueSingleArray3DI);
          return _super84.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueSingleArray3DI, [{
          key: "updateValue",
          value: function updateValue(value) {
            if (value.constructor !== this.initialValueConstructor) {
              this.onUpdateValueMismatch(value.constructor);
              return;
            }
            var gl = this.context;
            utils.flattenTo(value, this.uploadValue);
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D, this.texture);
            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);
            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);
            this.kernel.setUniform1i(this.id, this.index);
          }
        }]);
        return WebGL2KernelValueSingleArray3DI;
      }(WebGLKernelValueSingleArray3DI);
      module.exports = {
        WebGL2KernelValueSingleArray3DI: WebGL2KernelValueSingleArray3DI
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/single-array3d-i": 66
    }],
    102: [function (require, module, exports) {
      var _require252 = require('../../../utils'),
        utils = _require252.utils;
      var _require253 = require('../../web-gl/kernel-value/single-input'),
        WebGLKernelValueSingleInput = _require253.WebGLKernelValueSingleInput;
      var WebGL2KernelValueSingleInput = /*#__PURE__*/function (_WebGLKernelValueSing10) {
        "use strict";

        _inherits(WebGL2KernelValueSingleInput, _WebGLKernelValueSing10);
        var _super85 = _createSuper(WebGL2KernelValueSingleInput);
        function WebGL2KernelValueSingleInput() {
          _classCallCheck(this, WebGL2KernelValueSingleInput);
          return _super85.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueSingleInput, [{
          key: "getSource",
          value: function getSource() {
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2D ").concat(this.id), "".concat(variablePrecision, " ivec2 ").concat(this.sizeId, " = ivec2(").concat(this.textureSize[0], ", ").concat(this.textureSize[1], ")"), "".concat(variablePrecision, " ivec3 ").concat(this.dimensionsId, " = ivec3(").concat(this.dimensions[0], ", ").concat(this.dimensions[1], ", ").concat(this.dimensions[2], ")")]);
          }
        }, {
          key: "updateValue",
          value: function updateValue(input) {
            var gl = this.context;
            utils.flattenTo(input.value, this.uploadValue);
            gl.activeTexture(this.contextHandle);
            gl.bindTexture(gl.TEXTURE_2D, this.texture);
            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);
            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);
            this.kernel.setUniform1i(this.id, this.index);
          }
        }]);
        return WebGL2KernelValueSingleInput;
      }(WebGLKernelValueSingleInput);
      module.exports = {
        WebGL2KernelValueSingleInput: WebGL2KernelValueSingleInput
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/single-input": 67
    }],
    103: [function (require, module, exports) {
      var _require254 = require('../../../utils'),
        utils = _require254.utils;
      var _require255 = require('../../web-gl/kernel-value/unsigned-array'),
        WebGLKernelValueUnsignedArray = _require255.WebGLKernelValueUnsignedArray;
      var WebGL2KernelValueUnsignedArray = /*#__PURE__*/function (_WebGLKernelValueUnsi3) {
        "use strict";

        _inherits(WebGL2KernelValueUnsignedArray, _WebGLKernelValueUnsi3);
        var _super86 = _createSuper(WebGL2KernelValueUnsignedArray);
        function WebGL2KernelValueUnsignedArray() {
          _classCallCheck(this, WebGL2KernelValueUnsignedArray);
          return _super86.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueUnsignedArray, [{
          key: "getSource",
          value: function getSource() {
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2D ").concat(this.id), "".concat(variablePrecision, " ivec2 ").concat(this.sizeId, " = ivec2(").concat(this.textureSize[0], ", ").concat(this.textureSize[1], ")"), "".concat(variablePrecision, " ivec3 ").concat(this.dimensionsId, " = ivec3(").concat(this.dimensions[0], ", ").concat(this.dimensions[1], ", ").concat(this.dimensions[2], ")")]);
          }
        }]);
        return WebGL2KernelValueUnsignedArray;
      }(WebGLKernelValueUnsignedArray);
      module.exports = {
        WebGL2KernelValueUnsignedArray: WebGL2KernelValueUnsignedArray
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/unsigned-array": 68
    }],
    104: [function (require, module, exports) {
      var _require256 = require('../../../utils'),
        utils = _require256.utils;
      var _require257 = require('../../web-gl/kernel-value/unsigned-input'),
        WebGLKernelValueUnsignedInput = _require257.WebGLKernelValueUnsignedInput;
      var WebGL2KernelValueUnsignedInput = /*#__PURE__*/function (_WebGLKernelValueUnsi4) {
        "use strict";

        _inherits(WebGL2KernelValueUnsignedInput, _WebGLKernelValueUnsi4);
        var _super87 = _createSuper(WebGL2KernelValueUnsignedInput);
        function WebGL2KernelValueUnsignedInput() {
          _classCallCheck(this, WebGL2KernelValueUnsignedInput);
          return _super87.apply(this, arguments);
        }
        _createClass(WebGL2KernelValueUnsignedInput, [{
          key: "getSource",
          value: function getSource() {
            var variablePrecision = this.getVariablePrecisionString();
            return utils.linesToString(["uniform ".concat(variablePrecision, " sampler2D ").concat(this.id), "".concat(variablePrecision, " ivec2 ").concat(this.sizeId, " = ivec2(").concat(this.textureSize[0], ", ").concat(this.textureSize[1], ")"), "".concat(variablePrecision, " ivec3 ").concat(this.dimensionsId, " = ivec3(").concat(this.dimensions[0], ", ").concat(this.dimensions[1], ", ").concat(this.dimensions[2], ")")]);
          }
        }]);
        return WebGL2KernelValueUnsignedInput;
      }(WebGLKernelValueUnsignedInput);
      module.exports = {
        WebGL2KernelValueUnsignedInput: WebGL2KernelValueUnsignedInput
      };
    }, {
      "../../../utils": 114,
      "../../web-gl/kernel-value/unsigned-input": 69
    }],
    105: [function (require, module, exports) {
      var _require258 = require('../web-gl/kernel'),
        WebGLKernel = _require258.WebGLKernel;
      var _require259 = require('./function-node'),
        WebGL2FunctionNode = _require259.WebGL2FunctionNode;
      var _require260 = require('../function-builder'),
        FunctionBuilder = _require260.FunctionBuilder;
      var _require261 = require('../../utils'),
        utils = _require261.utils;
      var _require262 = require('./fragment-shader'),
        fragmentShader = _require262.fragmentShader;
      var _require263 = require('./vertex-shader'),
        vertexShader = _require263.vertexShader;
      var _require264 = require('./kernel-value-maps'),
        _lookupKernelValueType2 = _require264.lookupKernelValueType;
      var isSupported = null;
      var testCanvas = null;
      var testContext = null;
      var testExtensions = null;
      var features = null;
      var WebGL2Kernel = /*#__PURE__*/function (_WebGLKernel2) {
        "use strict";

        _inherits(WebGL2Kernel, _WebGLKernel2);
        var _super88 = _createSuper(WebGL2Kernel);
        function WebGL2Kernel() {
          _classCallCheck(this, WebGL2Kernel);
          return _super88.apply(this, arguments);
        }
        _createClass(WebGL2Kernel, [{
          key: "initContext",
          value: function initContext() {
            var settings = {
              alpha: false,
              depth: false,
              antialias: false
            };
            return this.canvas.getContext('webgl2', settings);
          }
        }, {
          key: "initExtensions",
          value: function initExtensions() {
            this.extensions = {
              EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),
              OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear')
            };
          }
        }, {
          key: "validateSettings",
          value: function validateSettings(args) {
            if (!this.validate) {
              this.texSize = utils.getKernelTextureSize({
                optimizeFloatMemory: this.optimizeFloatMemory,
                precision: this.precision
              }, this.output);
              return;
            }
            var features = this.constructor.features;
            if (this.precision === 'single' && !features.isFloatRead) {
              throw new Error('Float texture outputs are not supported');
            } else if (!this.graphical && this.precision === null) {
              this.precision = features.isFloatRead ? 'single' : 'unsigned';
            }
            if (this.fixIntegerDivisionAccuracy === null) {
              this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;
            } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {
              this.fixIntegerDivisionAccuracy = false;
            }
            this.checkOutput();
            if (!this.output || this.output.length === 0) {
              if (args.length !== 1) {
                throw new Error('Auto output only supported for kernels with only one input');
              }
              var argType = utils.getVariableType(args[0], this.strictIntegers);
              switch (argType) {
                case 'Array':
                  this.output = utils.getDimensions(argType);
                  break;
                case 'NumberTexture':
                case 'MemoryOptimizedNumberTexture':
                case 'ArrayTexture(1)':
                case 'ArrayTexture(2)':
                case 'ArrayTexture(3)':
                case 'ArrayTexture(4)':
                  this.output = args[0].output;
                  break;
                default:
                  throw new Error('Auto output not supported for input type: ' + argType);
              }
            }
            if (this.graphical) {
              if (this.output.length !== 2) {
                throw new Error('Output must have 2 dimensions on graphical mode');
              }
              if (this.precision === 'single') {
                console.warn('Cannot use graphical mode and single precision at the same time');
                this.precision = 'unsigned';
              }
              this.texSize = utils.clone(this.output);
              return;
            } else if (!this.graphical && this.precision === null && features.isTextureFloat) {
              this.precision = 'single';
            }
            this.texSize = utils.getKernelTextureSize({
              optimizeFloatMemory: this.optimizeFloatMemory,
              precision: this.precision
            }, this.output);
            this.checkTextureSize();
          }
        }, {
          key: "translateSource",
          value: function translateSource() {
            var functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {
              fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy
            });
            this.translatedSource = functionBuilder.getPrototypeString('kernel');
            this.setupReturnTypes(functionBuilder);
          }
        }, {
          key: "drawBuffers",
          value: function drawBuffers() {
            this.context.drawBuffers(this.drawBuffersMap);
          }
        }, {
          key: "getTextureFormat",
          value: function getTextureFormat() {
            var gl = this.context;
            switch (this.getInternalFormat()) {
              case gl.R32F:
                return gl.RED;
              case gl.RG32F:
                return gl.RG;
              case gl.RGBA32F:
                return gl.RGBA;
              case gl.RGBA:
                return gl.RGBA;
              default:
                throw new Error('Unknown internal format');
            }
          }
        }, {
          key: "getInternalFormat",
          value: function getInternalFormat() {
            var gl = this.context;
            if (this.precision === 'single') {
              if (this.pipeline) {
                switch (this.returnType) {
                  case 'Number':
                  case 'Float':
                  case 'Integer':
                    if (this.optimizeFloatMemory) {
                      return gl.RGBA32F;
                    } else {
                      return gl.R32F;
                    }
                  case 'Array(2)':
                    return gl.RG32F;
                  case 'Array(3)':
                  case 'Array(4)':
                    return gl.RGBA32F;
                  default:
                    throw new Error('Unhandled return type');
                }
              }
              return gl.RGBA32F;
            }
            return gl.RGBA;
          }
        }, {
          key: "_setupOutputTexture",
          value: function _setupOutputTexture() {
            var gl = this.context;
            if (this.texture) {
              gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);
              return;
            }
            gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);
            var texture = gl.createTexture();
            var texSize = this.texSize;
            gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);
            gl.bindTexture(gl.TEXTURE_2D, texture);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
            var format = this.getInternalFormat();
            if (this.precision === 'single') {
              gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);
            } else {
              gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);
            }
            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);
            this.texture = new this.TextureConstructor({
              texture: texture,
              size: texSize,
              dimensions: this.threadDim,
              output: this.output,
              context: this.context,
              internalFormat: this.getInternalFormat(),
              textureFormat: this.getTextureFormat(),
              kernel: this
            });
          }
        }, {
          key: "_setupSubOutputTextures",
          value: function _setupSubOutputTextures() {
            var gl = this.context;
            if (this.mappedTextures) {
              for (var i = 0; i < this.subKernels.length; i++) {
                gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);
              }
              return;
            }
            var texSize = this.texSize;
            this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];
            this.mappedTextures = [];
            for (var _i32 = 0; _i32 < this.subKernels.length; _i32++) {
              var texture = this.createTexture();
              this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + _i32 + 1);
              gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + _i32);
              gl.bindTexture(gl.TEXTURE_2D, texture);
              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
              var format = this.getInternalFormat();
              if (this.precision === 'single') {
                gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);
              } else {
                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);
              }
              gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + _i32 + 1, gl.TEXTURE_2D, texture, 0);
              this.mappedTextures.push(new this.TextureConstructor({
                texture: texture,
                size: texSize,
                dimensions: this.threadDim,
                output: this.output,
                context: this.context,
                internalFormat: this.getInternalFormat(),
                textureFormat: this.getTextureFormat(),
                kernel: this
              }));
            }
          }
        }, {
          key: "_getHeaderString",
          value: function _getHeaderString() {
            return '';
          }
        }, {
          key: "_getTextureCoordinate",
          value: function _getTextureCoordinate() {
            var subKernels = this.subKernels;
            var variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);
            if (subKernels === null || subKernels.length < 1) {
              return "in ".concat(variablePrecision, " vec2 vTexCoord;\n");
            } else {
              return "out ".concat(variablePrecision, " vec2 vTexCoord;\n");
            }
          }
        }, {
          key: "_getMainArgumentsString",
          value: function _getMainArgumentsString(args) {
            var result = [];
            var argumentNames = this.argumentNames;
            for (var i = 0; i < argumentNames.length; i++) {
              result.push(this.kernelArguments[i].getSource(args[i]));
            }
            return result.join('');
          }
        }, {
          key: "getKernelString",
          value: function getKernelString() {
            var result = [this.getKernelResultDeclaration()];
            var subKernels = this.subKernels;
            if (subKernels !== null) {
              result.push('layout(location = 0) out vec4 data0');
              switch (this.returnType) {
                case 'Number':
                case 'Float':
                case 'Integer':
                  for (var i = 0; i < subKernels.length; i++) {
                    var subKernel = subKernels[i];
                    result.push(subKernel.returnType === 'Integer' ? "int subKernelResult_".concat(subKernel.name, " = 0") : "float subKernelResult_".concat(subKernel.name, " = 0.0"), "layout(location = ".concat(i + 1, ") out vec4 data").concat(i + 1));
                  }
                  break;
                case 'Array(2)':
                  for (var _i33 = 0; _i33 < subKernels.length; _i33++) {
                    result.push("vec2 subKernelResult_".concat(subKernels[_i33].name), "layout(location = ".concat(_i33 + 1, ") out vec4 data").concat(_i33 + 1));
                  }
                  break;
                case 'Array(3)':
                  for (var _i34 = 0; _i34 < subKernels.length; _i34++) {
                    result.push("vec3 subKernelResult_".concat(subKernels[_i34].name), "layout(location = ".concat(_i34 + 1, ") out vec4 data").concat(_i34 + 1));
                  }
                  break;
                case 'Array(4)':
                  for (var _i35 = 0; _i35 < subKernels.length; _i35++) {
                    result.push("vec4 subKernelResult_".concat(subKernels[_i35].name), "layout(location = ".concat(_i35 + 1, ") out vec4 data").concat(_i35 + 1));
                  }
                  break;
              }
            } else {
              result.push('out vec4 data0');
            }
            return utils.linesToString(result) + this.translatedSource;
          }
        }, {
          key: "getMainResultGraphical",
          value: function getMainResultGraphical() {
            return utils.linesToString(['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0 = actualColor']);
          }
        }, {
          key: "getMainResultPackedPixels",
          value: function getMainResultPackedPixels() {
            switch (this.returnType) {
              case 'LiteralInteger':
              case 'Number':
              case 'Integer':
              case 'Float':
                return this.getMainResultKernelPackedPixels() + this.getMainResultSubKernelPackedPixels();
              default:
                throw new Error("packed output only usable with Numbers, \"".concat(this.returnType, "\" specified"));
            }
          }
        }, {
          key: "getMainResultKernelPackedPixels",
          value: function getMainResultKernelPackedPixels() {
            return utils.linesToString(['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', "  data0 = ".concat(this.useLegacyEncoder ? 'legacyEncode32' : 'encode32', "(kernelResult)")]);
          }
        }, {
          key: "getMainResultSubKernelPackedPixels",
          value: function getMainResultSubKernelPackedPixels() {
            var result = [];
            if (!this.subKernels) return '';
            for (var i = 0; i < this.subKernels.length; i++) {
              var subKernel = this.subKernels[i];
              if (subKernel.returnType === 'Integer') {
                result.push("  data".concat(i + 1, " = ").concat(this.useLegacyEncoder ? 'legacyEncode32' : 'encode32', "(float(subKernelResult_").concat(this.subKernels[i].name, "))"));
              } else {
                result.push("  data".concat(i + 1, " = ").concat(this.useLegacyEncoder ? 'legacyEncode32' : 'encode32', "(subKernelResult_").concat(this.subKernels[i].name, ")"));
              }
            }
            return utils.linesToString(result);
          }
        }, {
          key: "getMainResultKernelMemoryOptimizedFloats",
          value: function getMainResultKernelMemoryOptimizedFloats(result, channel) {
            result.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', "  data0.".concat(channel, " = kernelResult"));
          }
        }, {
          key: "getMainResultSubKernelMemoryOptimizedFloats",
          value: function getMainResultSubKernelMemoryOptimizedFloats(result, channel) {
            if (!this.subKernels) return result;
            for (var i = 0; i < this.subKernels.length; i++) {
              var subKernel = this.subKernels[i];
              if (subKernel.returnType === 'Integer') {
                result.push("  data".concat(i + 1, ".").concat(channel, " = float(subKernelResult_").concat(subKernel.name, ")"));
              } else {
                result.push("  data".concat(i + 1, ".").concat(channel, " = subKernelResult_").concat(subKernel.name));
              }
            }
          }
        }, {
          key: "getMainResultKernelNumberTexture",
          value: function getMainResultKernelNumberTexture() {
            return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0[0] = kernelResult'];
          }
        }, {
          key: "getMainResultSubKernelNumberTexture",
          value: function getMainResultSubKernelNumberTexture() {
            var result = [];
            if (!this.subKernels) return result;
            for (var i = 0; i < this.subKernels.length; ++i) {
              var subKernel = this.subKernels[i];
              if (subKernel.returnType === 'Integer') {
                result.push("  data".concat(i + 1, "[0] = float(subKernelResult_").concat(subKernel.name, ")"));
              } else {
                result.push("  data".concat(i + 1, "[0] = subKernelResult_").concat(subKernel.name));
              }
            }
            return result;
          }
        }, {
          key: "getMainResultKernelArray2Texture",
          value: function getMainResultKernelArray2Texture() {
            return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0[0] = kernelResult[0]', '  data0[1] = kernelResult[1]'];
          }
        }, {
          key: "getMainResultSubKernelArray2Texture",
          value: function getMainResultSubKernelArray2Texture() {
            var result = [];
            if (!this.subKernels) return result;
            for (var i = 0; i < this.subKernels.length; ++i) {
              var subKernel = this.subKernels[i];
              result.push("  data".concat(i + 1, "[0] = subKernelResult_").concat(subKernel.name, "[0]"), "  data".concat(i + 1, "[1] = subKernelResult_").concat(subKernel.name, "[1]"));
            }
            return result;
          }
        }, {
          key: "getMainResultKernelArray3Texture",
          value: function getMainResultKernelArray3Texture() {
            return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0[0] = kernelResult[0]', '  data0[1] = kernelResult[1]', '  data0[2] = kernelResult[2]'];
          }
        }, {
          key: "getMainResultSubKernelArray3Texture",
          value: function getMainResultSubKernelArray3Texture() {
            var result = [];
            if (!this.subKernels) return result;
            for (var i = 0; i < this.subKernels.length; ++i) {
              var subKernel = this.subKernels[i];
              result.push("  data".concat(i + 1, "[0] = subKernelResult_").concat(subKernel.name, "[0]"), "  data".concat(i + 1, "[1] = subKernelResult_").concat(subKernel.name, "[1]"), "  data".concat(i + 1, "[2] = subKernelResult_").concat(subKernel.name, "[2]"));
            }
            return result;
          }
        }, {
          key: "getMainResultKernelArray4Texture",
          value: function getMainResultKernelArray4Texture() {
            return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0 = kernelResult'];
          }
        }, {
          key: "getMainResultSubKernelArray4Texture",
          value: function getMainResultSubKernelArray4Texture() {
            var result = [];
            if (!this.subKernels) return result;
            for (var i = 0; i < this.subKernels.length; ++i) {
              result.push("  data".concat(i + 1, " = subKernelResult_").concat(this.subKernels[i].name));
            }
            return result;
          }
        }, {
          key: "destroyExtensions",
          value: function destroyExtensions() {
            this.extensions.EXT_color_buffer_float = null;
            this.extensions.OES_texture_float_linear = null;
          }
        }, {
          key: "toJSON",
          value: function toJSON() {
            var json = _get(_getPrototypeOf(WebGL2Kernel.prototype), "toJSON", this).call(this);
            json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();
            json.settings.threadDim = this.threadDim;
            return json;
          }
        }], [{
          key: "isSupported",
          get: function get() {
            if (isSupported !== null) {
              return isSupported;
            }
            this.setupFeatureChecks();
            isSupported = this.isContextMatch(testContext);
            return isSupported;
          }
        }, {
          key: "setupFeatureChecks",
          value: function setupFeatureChecks() {
            if (typeof document !== 'undefined') {
              testCanvas = document.createElement('canvas');
            } else if (typeof OffscreenCanvas !== 'undefined') {
              testCanvas = new OffscreenCanvas(0, 0);
            }
            if (!testCanvas) return;
            testContext = testCanvas.getContext('webgl2');
            if (!testContext || !testContext.getExtension) return;
            testExtensions = {
              EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),
              OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear')
            };
            features = this.getFeatures();
          }
        }, {
          key: "isContextMatch",
          value: function isContextMatch(context) {
            if (typeof WebGL2RenderingContext !== 'undefined') {
              return context instanceof WebGL2RenderingContext;
            }
            return false;
          }
        }, {
          key: "getFeatures",
          value: function getFeatures() {
            var gl = this.testContext;
            return Object.freeze({
              isFloatRead: this.getIsFloatRead(),
              isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),
              isSpeedTacticSupported: this.getIsSpeedTacticSupported(),
              kernelMap: true,
              isTextureFloat: true,
              isDrawBuffers: true,
              channelCount: this.getChannelCount(),
              maxTextureSize: this.getMaxTextureSize(),
              lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),
              lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),
              mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),
              mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),
              highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),
              highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT)
            });
          }
        }, {
          key: "getIsTextureFloat",
          value: function getIsTextureFloat() {
            return true;
          }
        }, {
          key: "getChannelCount",
          value: function getChannelCount() {
            return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);
          }
        }, {
          key: "getMaxTextureSize",
          value: function getMaxTextureSize() {
            return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);
          }
        }, {
          key: "lookupKernelValueType",
          value: function lookupKernelValueType(type, dynamic, precision, value) {
            return _lookupKernelValueType2(type, dynamic, precision, value);
          }
        }, {
          key: "testCanvas",
          get: function get() {
            return testCanvas;
          }
        }, {
          key: "testContext",
          get: function get() {
            return testContext;
          }
        }, {
          key: "features",
          get: function get() {
            return features;
          }
        }, {
          key: "fragmentShader",
          get: function get() {
            return fragmentShader;
          }
        }, {
          key: "vertexShader",
          get: function get() {
            return vertexShader;
          }
        }]);
        return WebGL2Kernel;
      }(WebGLKernel);
      module.exports = {
        WebGL2Kernel: WebGL2Kernel
      };
    }, {
      "../../utils": 114,
      "../function-builder": 9,
      "../web-gl/kernel": 70,
      "./fragment-shader": 72,
      "./function-node": 73,
      "./kernel-value-maps": 74,
      "./vertex-shader": 106
    }],
    106: [function (require, module, exports) {
      var vertexShader = "#version 300 es\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nin vec2 aPos;\nin vec2 aTexCoord;\n\nout vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}";
      module.exports = {
        vertexShader: vertexShader
      };
    }, {}],
    107: [function (require, module, exports) {
      var lib = require('./index');
      var GPU = lib.GPU;
      for (var p in lib) {
        if (!lib.hasOwnProperty(p)) continue;
        if (p === 'GPU') continue;
        GPU[p] = lib[p];
      }
      if (typeof window !== 'undefined') {
        bindTo(window);
      }
      if (typeof self !== 'undefined') {
        bindTo(self);
      }
      function bindTo(target) {
        if (target.GPU) return;
        Object.defineProperty(target, 'GPU', {
          get: function get() {
            return GPU;
          }
        });
      }
      module.exports = lib;
    }, {
      "./index": 109
    }],
    108: [function (require, module, exports) {
      var _require265 = require('gpu-mock.js'),
        gpuMock = _require265.gpuMock;
      var _require266 = require('./utils'),
        utils = _require266.utils;
      var _require267 = require('./backend/kernel'),
        Kernel = _require267.Kernel;
      var _require268 = require('./backend/cpu/kernel'),
        CPUKernel = _require268.CPUKernel;
      var _require269 = require('./backend/headless-gl/kernel'),
        HeadlessGLKernel = _require269.HeadlessGLKernel;
      var _require270 = require('./backend/web-gl2/kernel'),
        WebGL2Kernel = _require270.WebGL2Kernel;
      var _require271 = require('./backend/web-gl/kernel'),
        WebGLKernel = _require271.WebGLKernel;
      var _require272 = require('./kernel-run-shortcut'),
        kernelRunShortcut = _require272.kernelRunShortcut;
      var kernelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];
      var kernelTypes = ['gpu', 'cpu'];
      var internalKernels = {
        'headlessgl': HeadlessGLKernel,
        'webgl2': WebGL2Kernel,
        'webgl': WebGLKernel
      };
      var validate = true;
      var GPU = /*#__PURE__*/function () {
        "use strict";

        function GPU(settings) {
          _classCallCheck(this, GPU);
          settings = settings || {};
          this.canvas = settings.canvas || null;
          this.context = settings.context || null;
          this.mode = settings.mode;
          this.Kernel = null;
          this.kernels = [];
          this.functions = [];
          this.nativeFunctions = [];
          this.injectedNative = null;
          if (this.mode === 'dev') return;
          this.chooseKernel();
          if (settings.functions) {
            for (var i = 0; i < settings.functions.length; i++) {
              this.addFunction(settings.functions[i]);
            }
          }
          if (settings.nativeFunctions) {
            for (var p in settings.nativeFunctions) {
              if (!settings.nativeFunctions.hasOwnProperty(p)) continue;
              var s = settings.nativeFunctions[p];
              var _name13 = s.name,
                source = s.source;
              this.addNativeFunction(_name13, source, s);
            }
          }
        }
        _createClass(GPU, [{
          key: "chooseKernel",
          value: function chooseKernel() {
            if (this.Kernel) return;
            var Kernel = null;
            if (this.context) {
              for (var i = 0; i < kernelOrder.length; i++) {
                var ExternalKernel = kernelOrder[i];
                if (ExternalKernel.isContextMatch(this.context)) {
                  if (!ExternalKernel.isSupported) {
                    throw new Error("Kernel type ".concat(ExternalKernel.name, " not supported"));
                  }
                  Kernel = ExternalKernel;
                  break;
                }
              }
              if (Kernel === null) {
                throw new Error('unknown Context');
              }
            } else if (this.mode) {
              if (this.mode in internalKernels) {
                if (!validate || internalKernels[this.mode].isSupported) {
                  Kernel = internalKernels[this.mode];
                }
              } else if (this.mode === 'gpu') {
                for (var _i36 = 0; _i36 < kernelOrder.length; _i36++) {
                  if (kernelOrder[_i36].isSupported) {
                    Kernel = kernelOrder[_i36];
                    break;
                  }
                }
              } else if (this.mode === 'cpu') {
                Kernel = CPUKernel;
              }
              if (!Kernel) {
                throw new Error("A requested mode of \"".concat(this.mode, "\" and is not supported"));
              }
            } else {
              for (var _i37 = 0; _i37 < kernelOrder.length; _i37++) {
                if (kernelOrder[_i37].isSupported) {
                  Kernel = kernelOrder[_i37];
                  break;
                }
              }
              if (!Kernel) {
                Kernel = CPUKernel;
              }
            }
            if (!this.mode) {
              this.mode = Kernel.mode;
            }
            this.Kernel = Kernel;
          }
        }, {
          key: "createKernel",
          value: function createKernel(source, settings) {
            if (typeof source === 'undefined') {
              throw new Error('Missing source parameter');
            }
            if (typeof source !== 'object' && !utils.isFunction(source) && typeof source !== 'string') {
              throw new Error('source parameter not a function');
            }
            var kernels = this.kernels;
            if (this.mode === 'dev') {
              var devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));
              kernels.push(devKernel);
              return devKernel;
            }
            source = typeof source === 'function' ? source.toString() : source;
            var switchableKernels = {};
            var settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {};
            if (settings && typeof settings.argumentTypes === 'object') {
              settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(function (argumentName) {
                return settings.argumentTypes[argumentName];
              });
            }
            function onRequestFallback(args) {
              console.warn('Falling back to CPU');
              var fallbackKernel = new CPUKernel(source, {
                argumentTypes: kernelRun.argumentTypes,
                constantTypes: kernelRun.constantTypes,
                graphical: kernelRun.graphical,
                loopMaxIterations: kernelRun.loopMaxIterations,
                constants: kernelRun.constants,
                dynamicOutput: kernelRun.dynamicOutput,
                dynamicArgument: kernelRun.dynamicArguments,
                output: kernelRun.output,
                precision: kernelRun.precision,
                pipeline: kernelRun.pipeline,
                immutable: kernelRun.immutable,
                optimizeFloatMemory: kernelRun.optimizeFloatMemory,
                fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,
                functions: kernelRun.functions,
                nativeFunctions: kernelRun.nativeFunctions,
                injectedNative: kernelRun.injectedNative,
                subKernels: kernelRun.subKernels,
                strictIntegers: kernelRun.strictIntegers,
                debug: kernelRun.debug
              });
              fallbackKernel.build.apply(fallbackKernel, args);
              var result = fallbackKernel.run.apply(fallbackKernel, args);
              kernelRun.replaceKernel(fallbackKernel);
              return result;
            }
            function onRequestSwitchKernel(reasons, args, _kernel) {
              if (_kernel.debug) {
                console.warn('Switching kernels');
              }
              var newOutput = null;
              if (_kernel.signature && !switchableKernels[_kernel.signature]) {
                switchableKernels[_kernel.signature] = _kernel;
              }
              if (_kernel.dynamicOutput) {
                for (var i = reasons.length - 1; i >= 0; i--) {
                  var reason = reasons[i];
                  if (reason.type === 'outputPrecisionMismatch') {
                    newOutput = reason.needed;
                  }
                }
              }
              var Constructor = _kernel.constructor;
              var argumentTypes = Constructor.getArgumentTypes(_kernel, args);
              var signature = Constructor.getSignature(_kernel, argumentTypes);
              var existingKernel = switchableKernels[signature];
              if (existingKernel) {
                existingKernel.onActivate(_kernel);
                return existingKernel;
              }
              var newKernel = switchableKernels[signature] = new Constructor(source, {
                argumentTypes: argumentTypes,
                constantTypes: _kernel.constantTypes,
                graphical: _kernel.graphical,
                loopMaxIterations: _kernel.loopMaxIterations,
                constants: _kernel.constants,
                dynamicOutput: _kernel.dynamicOutput,
                dynamicArgument: _kernel.dynamicArguments,
                context: _kernel.context,
                canvas: _kernel.canvas,
                output: newOutput || _kernel.output,
                precision: _kernel.precision,
                pipeline: _kernel.pipeline,
                immutable: _kernel.immutable,
                optimizeFloatMemory: _kernel.optimizeFloatMemory,
                fixIntegerDivisionAccuracy: _kernel.fixIntegerDivisionAccuracy,
                functions: _kernel.functions,
                nativeFunctions: _kernel.nativeFunctions,
                injectedNative: _kernel.injectedNative,
                subKernels: _kernel.subKernels,
                strictIntegers: _kernel.strictIntegers,
                debug: _kernel.debug,
                gpu: _kernel.gpu,
                validate: validate,
                returnType: _kernel.returnType,
                tactic: _kernel.tactic,
                onRequestFallback: onRequestFallback,
                onRequestSwitchKernel: onRequestSwitchKernel,
                texture: _kernel.texture,
                mappedTextures: _kernel.mappedTextures,
                drawBuffersMap: _kernel.drawBuffersMap
              });
              newKernel.build.apply(newKernel, args);
              kernelRun.replaceKernel(newKernel);
              kernels.push(newKernel);
              return newKernel;
            }
            var mergedSettings = Object.assign({
              context: this.context,
              canvas: this.canvas,
              functions: this.functions,
              nativeFunctions: this.nativeFunctions,
              injectedNative: this.injectedNative,
              gpu: this,
              validate: validate,
              onRequestFallback: onRequestFallback,
              onRequestSwitchKernel: onRequestSwitchKernel
            }, settingsCopy);
            var kernel = new this.Kernel(source, mergedSettings);
            var kernelRun = kernelRunShortcut(kernel);
            if (!this.canvas) {
              this.canvas = kernel.canvas;
            }
            if (!this.context) {
              this.context = kernel.context;
            }
            kernels.push(kernel);
            return kernelRun;
          }
        }, {
          key: "createKernelMap",
          value: function createKernelMap() {
            var fn;
            var settings;
            var argument2Type = typeof arguments[arguments.length - 2];
            if (argument2Type === 'function' || argument2Type === 'string') {
              fn = arguments[arguments.length - 2];
              settings = arguments[arguments.length - 1];
            } else {
              fn = arguments[arguments.length - 1];
            }
            if (this.mode !== 'dev') {
              if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {
                if (this.mode && kernelTypes.indexOf(this.mode) < 0) {
                  throw new Error("kernelMap not supported on ".concat(this.Kernel.name));
                }
              }
            }
            var settingsCopy = upgradeDeprecatedCreateKernelSettings(settings);
            if (settings && typeof settings.argumentTypes === 'object') {
              settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(function (argumentName) {
                return settings.argumentTypes[argumentName];
              });
            }
            if (Array.isArray(arguments[0])) {
              settingsCopy.subKernels = [];
              var functions = arguments[0];
              for (var i = 0; i < functions.length; i++) {
                var source = functions[i].toString();
                var _name14 = utils.getFunctionNameFromString(source);
                settingsCopy.subKernels.push({
                  name: _name14,
                  source: source,
                  property: i
                });
              }
            } else {
              settingsCopy.subKernels = [];
              var _functions = arguments[0];
              for (var p in _functions) {
                if (!_functions.hasOwnProperty(p)) continue;
                var _source = _functions[p].toString();
                var _name15 = utils.getFunctionNameFromString(_source);
                settingsCopy.subKernels.push({
                  name: _name15 || p,
                  source: _source,
                  property: p
                });
              }
            }
            return this.createKernel(fn, settingsCopy);
          }
        }, {
          key: "combineKernels",
          value: function combineKernels() {
            var firstKernel = arguments[0];
            var combinedKernel = arguments[arguments.length - 1];
            if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;
            var canvas = arguments[0].canvas;
            var context = arguments[0].context;
            var max = arguments.length - 1;
            for (var i = 0; i < max; i++) {
              arguments[i].setCanvas(canvas).setContext(context).setPipeline(true);
            }
            return function () {
              var texture = combinedKernel.apply(this, arguments);
              if (texture.toArray) {
                return texture.toArray();
              }
              return texture;
            };
          }
        }, {
          key: "setFunctions",
          value: function setFunctions(functions) {
            this.functions = functions;
            return this;
          }
        }, {
          key: "setNativeFunctions",
          value: function setNativeFunctions(nativeFunctions) {
            this.nativeFunctions = nativeFunctions;
            return this;
          }
        }, {
          key: "addFunction",
          value: function addFunction(source, settings) {
            this.functions.push({
              source: source,
              settings: settings
            });
            return this;
          }
        }, {
          key: "addNativeFunction",
          value: function addNativeFunction(name, source, settings) {
            if (this.kernels.length > 0) {
              throw new Error('Cannot call "addNativeFunction" after "createKernels" has been called.');
            }
            this.nativeFunctions.push(Object.assign({
              name: name,
              source: source
            }, settings));
            return this;
          }
        }, {
          key: "injectNative",
          value: function injectNative(source) {
            this.injectedNative = source;
            return this;
          }
        }, {
          key: "destroy",
          value: function destroy() {
            var _this48 = this;
            return new Promise(function (resolve, reject) {
              if (!_this48.kernels) {
                resolve();
              }
              setTimeout(function () {
                try {
                  for (var i = 0; i < _this48.kernels.length; i++) {
                    _this48.kernels[i].destroy(true);
                  }
                  var firstKernel = _this48.kernels[0];
                  if (firstKernel) {
                    if (firstKernel.kernel) {
                      firstKernel = firstKernel.kernel;
                    }
                    if (firstKernel.constructor.destroyContext) {
                      firstKernel.constructor.destroyContext(_this48.context);
                    }
                  }
                } catch (e) {
                  reject(e);
                }
                resolve();
              }, 0);
            });
          }
        }], [{
          key: "disableValidation",
          value: function disableValidation() {
            validate = false;
          }
        }, {
          key: "enableValidation",
          value: function enableValidation() {
            validate = true;
          }
        }, {
          key: "isGPUSupported",
          get: function get() {
            return kernelOrder.some(function (Kernel) {
              return Kernel.isSupported;
            });
          }
        }, {
          key: "isKernelMapSupported",
          get: function get() {
            return kernelOrder.some(function (Kernel) {
              return Kernel.isSupported && Kernel.features.kernelMap;
            });
          }
        }, {
          key: "isOffscreenCanvasSupported",
          get: function get() {
            return typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined' || typeof importScripts !== 'undefined';
          }
        }, {
          key: "isWebGLSupported",
          get: function get() {
            return WebGLKernel.isSupported;
          }
        }, {
          key: "isWebGL2Supported",
          get: function get() {
            return WebGL2Kernel.isSupported;
          }
        }, {
          key: "isHeadlessGLSupported",
          get: function get() {
            return HeadlessGLKernel.isSupported;
          }
        }, {
          key: "isCanvasSupported",
          get: function get() {
            return typeof HTMLCanvasElement !== 'undefined';
          }
        }, {
          key: "isGPUHTMLImageArraySupported",
          get: function get() {
            return WebGL2Kernel.isSupported;
          }
        }, {
          key: "isSinglePrecisionSupported",
          get: function get() {
            return kernelOrder.some(function (Kernel) {
              return Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat;
            });
          }
        }]);
        return GPU;
      }();
      function upgradeDeprecatedCreateKernelSettings(settings) {
        if (!settings) {
          return {};
        }
        var upgradedSettings = Object.assign({}, settings);
        if (settings.hasOwnProperty('floatOutput')) {
          utils.warnDeprecated('setting', 'floatOutput', 'precision');
          upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';
        }
        if (settings.hasOwnProperty('outputToTexture')) {
          utils.warnDeprecated('setting', 'outputToTexture', 'pipeline');
          upgradedSettings.pipeline = Boolean(settings.outputToTexture);
        }
        if (settings.hasOwnProperty('outputImmutable')) {
          utils.warnDeprecated('setting', 'outputImmutable', 'immutable');
          upgradedSettings.immutable = Boolean(settings.outputImmutable);
        }
        if (settings.hasOwnProperty('floatTextures')) {
          utils.warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');
          upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);
        }
        return upgradedSettings;
      }
      module.exports = {
        GPU: GPU,
        kernelOrder: kernelOrder,
        kernelTypes: kernelTypes
      };
    }, {
      "./backend/cpu/kernel": 8,
      "./backend/headless-gl/kernel": 34,
      "./backend/kernel": 36,
      "./backend/web-gl/kernel": 70,
      "./backend/web-gl2/kernel": 105,
      "./kernel-run-shortcut": 111,
      "./utils": 114,
      "gpu-mock.js": 4
    }],
    109: [function (require, module, exports) {
      var _require273 = require('./gpu'),
        GPU = _require273.GPU;
      var _require274 = require('./alias'),
        alias = _require274.alias;
      var _require275 = require('./utils'),
        utils = _require275.utils;
      var _require276 = require('./input'),
        Input = _require276.Input,
        input = _require276.input;
      var _require277 = require('./texture'),
        Texture = _require277.Texture;
      var _require278 = require('./backend/function-builder'),
        FunctionBuilder = _require278.FunctionBuilder;
      var _require279 = require('./backend/function-node'),
        FunctionNode = _require279.FunctionNode;
      var _require280 = require('./backend/cpu/function-node'),
        CPUFunctionNode = _require280.CPUFunctionNode;
      var _require281 = require('./backend/cpu/kernel'),
        CPUKernel = _require281.CPUKernel;
      var _require282 = require('./backend/headless-gl/kernel'),
        HeadlessGLKernel = _require282.HeadlessGLKernel;
      var _require283 = require('./backend/web-gl/function-node'),
        WebGLFunctionNode = _require283.WebGLFunctionNode;
      var _require284 = require('./backend/web-gl/kernel'),
        WebGLKernel = _require284.WebGLKernel;
      var _require285 = require('./backend/web-gl/kernel-value-maps'),
        webGLKernelValueMaps = _require285.kernelValueMaps;
      var _require286 = require('./backend/web-gl2/function-node'),
        WebGL2FunctionNode = _require286.WebGL2FunctionNode;
      var _require287 = require('./backend/web-gl2/kernel'),
        WebGL2Kernel = _require287.WebGL2Kernel;
      var _require288 = require('./backend/web-gl2/kernel-value-maps'),
        webGL2KernelValueMaps = _require288.kernelValueMaps;
      var _require289 = require('./backend/gl/kernel'),
        GLKernel = _require289.GLKernel;
      var _require290 = require('./backend/kernel'),
        Kernel = _require290.Kernel;
      var _require291 = require('./backend/function-tracer'),
        FunctionTracer = _require291.FunctionTracer;
      var mathRandom = require('./plugins/math-random-uniformly-distributed');
      module.exports = {
        alias: alias,
        CPUFunctionNode: CPUFunctionNode,
        CPUKernel: CPUKernel,
        GPU: GPU,
        FunctionBuilder: FunctionBuilder,
        FunctionNode: FunctionNode,
        HeadlessGLKernel: HeadlessGLKernel,
        Input: Input,
        input: input,
        Texture: Texture,
        utils: utils,
        WebGL2FunctionNode: WebGL2FunctionNode,
        WebGL2Kernel: WebGL2Kernel,
        webGL2KernelValueMaps: webGL2KernelValueMaps,
        WebGLFunctionNode: WebGLFunctionNode,
        WebGLKernel: WebGLKernel,
        webGLKernelValueMaps: webGLKernelValueMaps,
        GLKernel: GLKernel,
        Kernel: Kernel,
        FunctionTracer: FunctionTracer,
        plugins: {
          mathRandom: mathRandom
        }
      };
    }, {
      "./alias": 5,
      "./backend/cpu/function-node": 6,
      "./backend/cpu/kernel": 8,
      "./backend/function-builder": 9,
      "./backend/function-node": 10,
      "./backend/function-tracer": 11,
      "./backend/gl/kernel": 13,
      "./backend/headless-gl/kernel": 34,
      "./backend/kernel": 36,
      "./backend/web-gl/function-node": 38,
      "./backend/web-gl/kernel": 70,
      "./backend/web-gl/kernel-value-maps": 39,
      "./backend/web-gl2/function-node": 73,
      "./backend/web-gl2/kernel": 105,
      "./backend/web-gl2/kernel-value-maps": 74,
      "./gpu": 108,
      "./input": 110,
      "./plugins/math-random-uniformly-distributed": 112,
      "./texture": 113,
      "./utils": 114
    }],
    110: [function (require, module, exports) {
      var Input = /*#__PURE__*/function () {
        "use strict";

        function Input(value, size) {
          _classCallCheck(this, Input);
          this.value = value;
          if (Array.isArray(size)) {
            this.size = size;
          } else {
            this.size = new Int32Array(3);
            if (size.z) {
              this.size = new Int32Array([size.x, size.y, size.z]);
            } else if (size.y) {
              this.size = new Int32Array([size.x, size.y]);
            } else {
              this.size = new Int32Array([size.x]);
            }
          }
          var _this$size = _slicedToArray(this.size, 3),
            w = _this$size[0],
            h = _this$size[1],
            d = _this$size[2];
          if (d) {
            if (this.value.length !== w * h * d) {
              throw new Error("Input size ".concat(this.value.length, " does not match ").concat(w, " * ").concat(h, " * ").concat(d, " = ").concat(h * w * d));
            }
          } else if (h) {
            if (this.value.length !== w * h) {
              throw new Error("Input size ".concat(this.value.length, " does not match ").concat(w, " * ").concat(h, " = ").concat(h * w));
            }
          } else {
            if (this.value.length !== w) {
              throw new Error("Input size ".concat(this.value.length, " does not match ").concat(w));
            }
          }
        }
        _createClass(Input, [{
          key: "toArray",
          value: function toArray() {
            var _require292 = require('./utils'),
              utils = _require292.utils;
            var _this$size2 = _slicedToArray(this.size, 3),
              w = _this$size2[0],
              h = _this$size2[1],
              d = _this$size2[2];
            if (d) {
              return utils.erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);
            } else if (h) {
              return utils.erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);
            } else {
              return this.value;
            }
          }
        }]);
        return Input;
      }();
      function input(value, size) {
        return new Input(value, size);
      }
      module.exports = {
        Input: Input,
        input: input
      };
    }, {
      "./utils": 114
    }],
    111: [function (require, module, exports) {
      var _require293 = require('./utils'),
        utils = _require293.utils;
      function kernelRunShortcut(kernel) {
        var _run = function run() {
          kernel.build.apply(kernel, arguments);
          _run = function run() {
            var result = kernel.run.apply(kernel, arguments);
            if (kernel.switchingKernels) {
              var reasons = kernel.resetSwitchingKernels();
              var newKernel = kernel.onRequestSwitchKernel(reasons, arguments, kernel);
              shortcut.kernel = kernel = newKernel;
              result = newKernel.run.apply(newKernel, arguments);
            }
            if (kernel.renderKernels) {
              return kernel.renderKernels();
            } else if (kernel.renderOutput) {
              return kernel.renderOutput();
            } else {
              return result;
            }
          };
          return _run.apply(kernel, arguments);
        };
        var shortcut = function shortcut() {
          return _run.apply(kernel, arguments);
        };
        shortcut.exec = function () {
          var _arguments2 = arguments,
            _this49 = this;
          return new Promise(function (accept, reject) {
            try {
              accept(_run.apply(_this49, _arguments2));
            } catch (e) {
              reject(e);
            }
          });
        };
        shortcut.replaceKernel = function (replacementKernel) {
          kernel = replacementKernel;
          bindKernelToShortcut(kernel, shortcut);
        };
        bindKernelToShortcut(kernel, shortcut);
        return shortcut;
      }
      function bindKernelToShortcut(kernel, shortcut) {
        if (shortcut.kernel) {
          shortcut.kernel = kernel;
          return;
        }
        var properties = utils.allPropertiesOf(kernel);
        var _loop3 = function _loop3() {
          var property = properties[i];
          if (property[0] === '_' && property[1] === '_') return "continue";
          if (typeof kernel[property] === 'function') {
            if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {
              shortcut[property] = function () {
                shortcut.kernel[property].apply(shortcut.kernel, arguments);
                return shortcut;
              };
            } else {
              shortcut[property] = function () {
                return shortcut.kernel[property].apply(shortcut.kernel, arguments);
              };
            }
          } else {
            shortcut.__defineGetter__(property, function () {
              return shortcut.kernel[property];
            });
            shortcut.__defineSetter__(property, function (value) {
              shortcut.kernel[property] = value;
            });
          }
        };
        for (var i = 0; i < properties.length; i++) {
          var _ret = _loop3();
          if (_ret === "continue") continue;
        }
        shortcut.kernel = kernel;
      }
      module.exports = {
        kernelRunShortcut: kernelRunShortcut
      };
    }, {
      "./utils": 114
    }],
    112: [function (require, module, exports) {
      var source = "// https://www.shadertoy.com/view/4t2SDh\n//note: uniformly distributed, normalized rand, [0,1]\nhighp float randomSeedShift = 1.0;\nhighp float slide = 1.0;\nuniform highp float randomSeed1;\nuniform highp float randomSeed2;\n\nhighp float nrand(highp vec2 n) {\n  highp float result = fract(sin(dot((n.xy + 1.0) * vec2(randomSeed1 * slide, randomSeed2 * randomSeedShift), vec2(12.9898, 78.233))) * 43758.5453);\n  randomSeedShift = result;\n  if (randomSeedShift > 0.5) {\n    slide += 0.00009; \n  } else {\n    slide += 0.0009;\n  }\n  return result;\n}";
      var name = 'math-random-uniformly-distributed';
      var functionMatch = "Math.random()";
      var functionReplace = "nrand(vTexCoord)";
      var functionReturnType = 'Number';
      var onBeforeRun = function onBeforeRun(kernel) {
        kernel.setUniform1f('randomSeed1', Math.random());
        kernel.setUniform1f('randomSeed2', Math.random());
      };
      var plugin = {
        name: name,
        onBeforeRun: onBeforeRun,
        functionMatch: functionMatch,
        functionReplace: functionReplace,
        functionReturnType: functionReturnType,
        source: source
      };
      module.exports = plugin;
    }, {}],
    113: [function (require, module, exports) {
      var Texture = /*#__PURE__*/function () {
        "use strict";

        function Texture(settings) {
          _classCallCheck(this, Texture);
          var texture = settings.texture,
            size = settings.size,
            dimensions = settings.dimensions,
            output = settings.output,
            context = settings.context,
            _settings$type = settings.type,
            type = _settings$type === void 0 ? 'NumberTexture' : _settings$type,
            kernel = settings.kernel,
            internalFormat = settings.internalFormat,
            textureFormat = settings.textureFormat;
          if (!output) throw new Error('settings property "output" required.');
          if (!context) throw new Error('settings property "context" required.');
          if (!texture) throw new Error('settings property "texture" required.');
          if (!kernel) throw new Error('settings property "kernel" required.');
          this.texture = texture;
          if (texture._refs) {
            texture._refs++;
          } else {
            texture._refs = 1;
          }
          this.size = size;
          this.dimensions = dimensions;
          this.output = output;
          this.context = context;
          this.kernel = kernel;
          this.type = type;
          this._deleted = false;
          this.internalFormat = internalFormat;
          this.textureFormat = textureFormat;
        }
        _createClass(Texture, [{
          key: "toArray",
          value: function toArray() {
            throw new Error("Not implemented on ".concat(this.constructor.name));
          }
        }, {
          key: "clone",
          value: function clone() {
            throw new Error("Not implemented on ".concat(this.constructor.name));
          }
        }, {
          key: "delete",
          value: function _delete() {
            throw new Error("Not implemented on ".concat(this.constructor.name));
          }
        }, {
          key: "clear",
          value: function clear() {
            throw new Error("Not implemented on ".concat(this.constructor.name));
          }
        }]);
        return Texture;
      }();
      module.exports = {
        Texture: Texture
      };
    }, {}],
    114: [function (require, module, exports) {
      var acorn = require('acorn');
      var _require294 = require('./input'),
        Input = _require294.Input;
      var _require295 = require('./texture'),
        Texture = _require295.Texture;
      var FUNCTION_NAME = /function ([^(]*)/;
      var STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;
      var ARGUMENT_NAMES = /([^\s,]+)/g;
      var utils = {
        systemEndianness: function systemEndianness() {
          return _systemEndianness;
        },
        getSystemEndianness: function getSystemEndianness() {
          var b = new ArrayBuffer(4);
          var a = new Uint32Array(b);
          var c = new Uint8Array(b);
          a[0] = 0xdeadbeef;
          if (c[0] === 0xef) return 'LE';
          if (c[0] === 0xde) return 'BE';
          throw new Error('unknown endianness');
        },
        isFunction: function isFunction(funcObj) {
          return typeof funcObj === 'function';
        },
        isFunctionString: function isFunctionString(fn) {
          if (typeof fn === 'string') {
            return fn.slice(0, 'function'.length).toLowerCase() === 'function';
          }
          return false;
        },
        getFunctionNameFromString: function getFunctionNameFromString(funcStr) {
          var result = FUNCTION_NAME.exec(funcStr);
          if (!result || result.length === 0) return null;
          return result[1].trim();
        },
        getFunctionBodyFromString: function getFunctionBodyFromString(funcStr) {
          return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));
        },
        getArgumentNamesFromString: function getArgumentNamesFromString(fn) {
          var fnStr = fn.replace(STRIP_COMMENTS, '');
          var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);
          if (result === null) {
            result = [];
          }
          return result;
        },
        clone: function clone(obj) {
          if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;
          var temp = obj.constructor();
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              obj.isActiveClone = null;
              temp[key] = utils.clone(obj[key]);
              delete obj.isActiveClone;
            }
          }
          return temp;
        },
        isArray: function isArray(array) {
          return !isNaN(array.length);
        },
        getVariableType: function getVariableType(value, strictIntegers) {
          if (utils.isArray(value)) {
            if (value.length > 0 && value[0].nodeName === 'IMG') {
              return 'HTMLImageArray';
            }
            return 'Array';
          }
          switch (value.constructor) {
            case Boolean:
              return 'Boolean';
            case Number:
              if (strictIntegers && Number.isInteger(value)) {
                return 'Integer';
              }
              return 'Float';
            case Texture:
              return value.type;
            case Input:
              return 'Input';
          }
          if ('nodeName' in value) {
            switch (value.nodeName) {
              case 'IMG':
                return 'HTMLImage';
              case 'CANVAS':
                return 'HTMLImage';
              case 'VIDEO':
                return 'HTMLVideo';
            }
          } else if (value.hasOwnProperty('type')) {
            return value.type;
          } else if (typeof OffscreenCanvas !== 'undefined' && value instanceof OffscreenCanvas) {
            return 'OffscreenCanvas';
          } else if (typeof ImageBitmap !== 'undefined' && value instanceof ImageBitmap) {
            return 'ImageBitmap';
          } else if (typeof ImageData !== 'undefined' && value instanceof ImageData) {
            return 'ImageData';
          }
          return 'Unknown';
        },
        getKernelTextureSize: function getKernelTextureSize(settings, dimensions) {
          var _dimensions = _slicedToArray(dimensions, 3),
            w = _dimensions[0],
            h = _dimensions[1],
            d = _dimensions[2];
          var texelCount = (w || 1) * (h || 1) * (d || 1);
          if (settings.optimizeFloatMemory && settings.precision === 'single') {
            w = texelCount = Math.ceil(texelCount / 4);
          }
          if (h > 1 && w * h === texelCount) {
            return new Int32Array([w, h]);
          }
          return utils.closestSquareDimensions(texelCount);
        },
        closestSquareDimensions: function closestSquareDimensions(length) {
          var sqrt = Math.sqrt(length);
          var high = Math.ceil(sqrt);
          var low = Math.floor(sqrt);
          while (high * low < length) {
            high--;
            low = Math.ceil(length / high);
          }
          return new Int32Array([low, Math.ceil(length / low)]);
        },
        getMemoryOptimizedFloatTextureSize: function getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {
          var totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);
          var texelCount = totalArea / bitRatio;
          return utils.closestSquareDimensions(texelCount);
        },
        getMemoryOptimizedPackedTextureSize: function getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {
          var _dimensions2 = _slicedToArray(dimensions, 3),
            w = _dimensions2[0],
            h = _dimensions2[1],
            d = _dimensions2[2];
          var totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);
          var texelCount = totalArea / (4 / bitRatio);
          return utils.closestSquareDimensions(texelCount);
        },
        roundTo: function roundTo(n, d) {
          return Math.floor((n + d - 1) / d) * d;
        },
        getDimensions: function getDimensions(x, pad) {
          var ret;
          if (utils.isArray(x)) {
            var dim = [];
            var temp = x;
            while (utils.isArray(temp)) {
              dim.push(temp.length);
              temp = temp[0];
            }
            ret = dim.reverse();
          } else if (x instanceof Texture) {
            ret = x.output;
          } else if (x instanceof Input) {
            ret = x.size;
          } else {
            throw new Error("Unknown dimensions of ".concat(x));
          }
          if (pad) {
            ret = Array.from(ret);
            while (ret.length < 3) {
              ret.push(1);
            }
          }
          return new Int32Array(ret);
        },
        flatten2dArrayTo: function flatten2dArrayTo(array, target) {
          var offset = 0;
          for (var y = 0; y < array.length; y++) {
            target.set(array[y], offset);
            offset += array[y].length;
          }
        },
        flatten3dArrayTo: function flatten3dArrayTo(array, target) {
          var offset = 0;
          for (var z = 0; z < array.length; z++) {
            for (var y = 0; y < array[z].length; y++) {
              target.set(array[z][y], offset);
              offset += array[z][y].length;
            }
          }
        },
        flatten4dArrayTo: function flatten4dArrayTo(array, target) {
          var offset = 0;
          for (var l = 0; l < array.length; l++) {
            for (var z = 0; z < array[l].length; z++) {
              for (var y = 0; y < array[l][z].length; y++) {
                target.set(array[l][z][y], offset);
                offset += array[l][z][y].length;
              }
            }
          }
        },
        flattenTo: function flattenTo(array, target) {
          if (utils.isArray(array[0])) {
            if (utils.isArray(array[0][0])) {
              if (utils.isArray(array[0][0][0])) {
                utils.flatten4dArrayTo(array, target);
              } else {
                utils.flatten3dArrayTo(array, target);
              }
            } else {
              utils.flatten2dArrayTo(array, target);
            }
          } else {
            target.set(array);
          }
        },
        splitArray: function splitArray(array, part) {
          var result = [];
          for (var i = 0; i < array.length; i += part) {
            result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));
          }
          return result;
        },
        getAstString: function getAstString(source, ast) {
          var lines = Array.isArray(source) ? source : source.split(/\r?\n/g);
          var start = ast.loc.start;
          var end = ast.loc.end;
          var result = [];
          if (start.line === end.line) {
            result.push(lines[start.line - 1].substring(start.column, end.column));
          } else {
            result.push(lines[start.line - 1].slice(start.column));
            for (var i = start.line; i < end.line; i++) {
              result.push(lines[i]);
            }
            result.push(lines[end.line - 1].slice(0, end.column));
          }
          return result.join('\n');
        },
        allPropertiesOf: function allPropertiesOf(obj) {
          var props = [];
          do {
            props.push.apply(props, Object.getOwnPropertyNames(obj));
          } while (obj = Object.getPrototypeOf(obj));
          return props;
        },
        linesToString: function linesToString(lines) {
          if (lines.length > 0) {
            return lines.join(';\n') + ';\n';
          } else {
            return '\n';
          }
        },
        warnDeprecated: function warnDeprecated(type, oldName, newName) {
          if (newName) {
            console.warn("You are using a deprecated ".concat(type, " \"").concat(oldName, "\". It has been replaced with \"").concat(newName, "\". Fixing, but please upgrade as it will soon be removed."));
          } else {
            console.warn("You are using a deprecated ".concat(type, " \"").concat(oldName, "\". It has been removed. Fixing, but please upgrade as it will soon be removed."));
          }
        },
        flipPixels: function flipPixels(pixels, width, height) {
          var halfHeight = height / 2 | 0;
          var bytesPerRow = width * 4;
          var temp = new Uint8ClampedArray(width * 4);
          var result = pixels.slice(0);
          for (var y = 0; y < halfHeight; ++y) {
            var topOffset = y * bytesPerRow;
            var bottomOffset = (height - y - 1) * bytesPerRow;
            temp.set(result.subarray(topOffset, topOffset + bytesPerRow));
            result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);
            result.set(temp, bottomOffset);
          }
          return result;
        },
        erectPackedFloat: function erectPackedFloat(array, width) {
          return array.subarray(0, width);
        },
        erect2DPackedFloat: function erect2DPackedFloat(array, width, height) {
          var yResults = new Array(height);
          for (var y = 0; y < height; y++) {
            var xStart = y * width;
            var xEnd = xStart + width;
            yResults[y] = array.subarray(xStart, xEnd);
          }
          return yResults;
        },
        erect3DPackedFloat: function erect3DPackedFloat(array, width, height, depth) {
          var zResults = new Array(depth);
          for (var z = 0; z < depth; z++) {
            var yResults = new Array(height);
            for (var y = 0; y < height; y++) {
              var xStart = z * height * width + y * width;
              var xEnd = xStart + width;
              yResults[y] = array.subarray(xStart, xEnd);
            }
            zResults[z] = yResults;
          }
          return zResults;
        },
        erectMemoryOptimizedFloat: function erectMemoryOptimizedFloat(array, width) {
          return array.subarray(0, width);
        },
        erectMemoryOptimized2DFloat: function erectMemoryOptimized2DFloat(array, width, height) {
          var yResults = new Array(height);
          for (var y = 0; y < height; y++) {
            var offset = y * width;
            yResults[y] = array.subarray(offset, offset + width);
          }
          return yResults;
        },
        erectMemoryOptimized3DFloat: function erectMemoryOptimized3DFloat(array, width, height, depth) {
          var zResults = new Array(depth);
          for (var z = 0; z < depth; z++) {
            var yResults = new Array(height);
            for (var y = 0; y < height; y++) {
              var offset = z * height * width + y * width;
              yResults[y] = array.subarray(offset, offset + width);
            }
            zResults[z] = yResults;
          }
          return zResults;
        },
        erectFloat: function erectFloat(array, width) {
          var xResults = new Float32Array(width);
          var i = 0;
          for (var x = 0; x < width; x++) {
            xResults[x] = array[i];
            i += 4;
          }
          return xResults;
        },
        erect2DFloat: function erect2DFloat(array, width, height) {
          var yResults = new Array(height);
          var i = 0;
          for (var y = 0; y < height; y++) {
            var xResults = new Float32Array(width);
            for (var x = 0; x < width; x++) {
              xResults[x] = array[i];
              i += 4;
            }
            yResults[y] = xResults;
          }
          return yResults;
        },
        erect3DFloat: function erect3DFloat(array, width, height, depth) {
          var zResults = new Array(depth);
          var i = 0;
          for (var z = 0; z < depth; z++) {
            var yResults = new Array(height);
            for (var y = 0; y < height; y++) {
              var xResults = new Float32Array(width);
              for (var x = 0; x < width; x++) {
                xResults[x] = array[i];
                i += 4;
              }
              yResults[y] = xResults;
            }
            zResults[z] = yResults;
          }
          return zResults;
        },
        erectArray2: function erectArray2(array, width) {
          var xResults = new Array(width);
          var xResultsMax = width * 4;
          var i = 0;
          for (var x = 0; x < xResultsMax; x += 4) {
            xResults[i++] = array.subarray(x, x + 2);
          }
          return xResults;
        },
        erect2DArray2: function erect2DArray2(array, width, height) {
          var yResults = new Array(height);
          var XResultsMax = width * 4;
          for (var y = 0; y < height; y++) {
            var xResults = new Array(width);
            var offset = y * XResultsMax;
            var i = 0;
            for (var x = 0; x < XResultsMax; x += 4) {
              xResults[i++] = array.subarray(x + offset, x + offset + 2);
            }
            yResults[y] = xResults;
          }
          return yResults;
        },
        erect3DArray2: function erect3DArray2(array, width, height, depth) {
          var xResultsMax = width * 4;
          var zResults = new Array(depth);
          for (var z = 0; z < depth; z++) {
            var yResults = new Array(height);
            for (var y = 0; y < height; y++) {
              var xResults = new Array(width);
              var offset = z * xResultsMax * height + y * xResultsMax;
              var i = 0;
              for (var x = 0; x < xResultsMax; x += 4) {
                xResults[i++] = array.subarray(x + offset, x + offset + 2);
              }
              yResults[y] = xResults;
            }
            zResults[z] = yResults;
          }
          return zResults;
        },
        erectArray3: function erectArray3(array, width) {
          var xResults = new Array(width);
          var xResultsMax = width * 4;
          var i = 0;
          for (var x = 0; x < xResultsMax; x += 4) {
            xResults[i++] = array.subarray(x, x + 3);
          }
          return xResults;
        },
        erect2DArray3: function erect2DArray3(array, width, height) {
          var xResultsMax = width * 4;
          var yResults = new Array(height);
          for (var y = 0; y < height; y++) {
            var xResults = new Array(width);
            var offset = y * xResultsMax;
            var i = 0;
            for (var x = 0; x < xResultsMax; x += 4) {
              xResults[i++] = array.subarray(x + offset, x + offset + 3);
            }
            yResults[y] = xResults;
          }
          return yResults;
        },
        erect3DArray3: function erect3DArray3(array, width, height, depth) {
          var xResultsMax = width * 4;
          var zResults = new Array(depth);
          for (var z = 0; z < depth; z++) {
            var yResults = new Array(height);
            for (var y = 0; y < height; y++) {
              var xResults = new Array(width);
              var offset = z * xResultsMax * height + y * xResultsMax;
              var i = 0;
              for (var x = 0; x < xResultsMax; x += 4) {
                xResults[i++] = array.subarray(x + offset, x + offset + 3);
              }
              yResults[y] = xResults;
            }
            zResults[z] = yResults;
          }
          return zResults;
        },
        erectArray4: function erectArray4(array, width) {
          var xResults = new Array(array);
          var xResultsMax = width * 4;
          var i = 0;
          for (var x = 0; x < xResultsMax; x += 4) {
            xResults[i++] = array.subarray(x, x + 4);
          }
          return xResults;
        },
        erect2DArray4: function erect2DArray4(array, width, height) {
          var xResultsMax = width * 4;
          var yResults = new Array(height);
          for (var y = 0; y < height; y++) {
            var xResults = new Array(width);
            var offset = y * xResultsMax;
            var i = 0;
            for (var x = 0; x < xResultsMax; x += 4) {
              xResults[i++] = array.subarray(x + offset, x + offset + 4);
            }
            yResults[y] = xResults;
          }
          return yResults;
        },
        erect3DArray4: function erect3DArray4(array, width, height, depth) {
          var xResultsMax = width * 4;
          var zResults = new Array(depth);
          for (var z = 0; z < depth; z++) {
            var yResults = new Array(height);
            for (var y = 0; y < height; y++) {
              var xResults = new Array(width);
              var offset = z * xResultsMax * height + y * xResultsMax;
              var i = 0;
              for (var x = 0; x < xResultsMax; x += 4) {
                xResults[i++] = array.subarray(x + offset, x + offset + 4);
              }
              yResults[y] = xResults;
            }
            zResults[z] = yResults;
          }
          return zResults;
        },
        flattenFunctionToString: function flattenFunctionToString(source, settings) {
          var findDependency = settings.findDependency,
            thisLookup = settings.thisLookup,
            doNotDefine = settings.doNotDefine;
          var flattened = settings.flattened;
          if (!flattened) {
            flattened = settings.flattened = {};
          }
          var ast = acorn.parse(source);
          var functionDependencies = [];
          var indent = 0;
          function flatten(ast) {
            if (Array.isArray(ast)) {
              var results = [];
              for (var i = 0; i < ast.length; i++) {
                results.push(flatten(ast[i]));
              }
              return results.join('');
            }
            switch (ast.type) {
              case 'Program':
                return flatten(ast.body) + (ast.body[0].type === 'VariableDeclaration' ? ';' : '');
              case 'FunctionDeclaration':
                return "function ".concat(ast.id.name, "(").concat(ast.params.map(flatten).join(', '), ") ").concat(flatten(ast.body));
              case 'BlockStatement':
                {
                  var _result2 = [];
                  indent += 2;
                  for (var _i38 = 0; _i38 < ast.body.length; _i38++) {
                    var flat = flatten(ast.body[_i38]);
                    if (flat) {
                      _result2.push(' '.repeat(indent) + flat, ';\n');
                    }
                  }
                  indent -= 2;
                  return "{\n".concat(_result2.join(''), "}");
                }
              case 'VariableDeclaration':
                var declarations = utils.normalizeDeclarations(ast).map(flatten).filter(function (r) {
                  return r !== null;
                });
                if (declarations.length < 1) {
                  return '';
                } else {
                  return "".concat(ast.kind, " ").concat(declarations.join(','));
                }
              case 'VariableDeclarator':
                if (ast.init.object && ast.init.object.type === 'ThisExpression') {
                  var lookup = thisLookup(ast.init.property.name, true);
                  if (lookup) {
                    return "".concat(ast.id.name, " = ").concat(flatten(ast.init));
                  } else {
                    return null;
                  }
                } else {
                  return "".concat(ast.id.name, " = ").concat(flatten(ast.init));
                }
              case 'CallExpression':
                {
                  if (ast.callee.property.name === 'subarray') {
                    return "".concat(flatten(ast.callee.object), ".").concat(flatten(ast.callee.property), "(").concat(ast.arguments.map(function (value) {
                      return flatten(value);
                    }).join(', '), ")");
                  }
                  if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {
                    return "".concat(flatten(ast.callee.object), ".").concat(flatten(ast.callee.property), "(").concat(ast.arguments.map(function (value) {
                      return flatten(value);
                    }).join(', '), ")");
                  }
                  if (ast.callee.object.type === 'ThisExpression') {
                    functionDependencies.push(findDependency('this', ast.callee.property.name));
                    return "".concat(ast.callee.property.name, "(").concat(ast.arguments.map(function (value) {
                      return flatten(value);
                    }).join(', '), ")");
                  } else if (ast.callee.object.name) {
                    var foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);
                    if (foundSource === null) {
                      return "".concat(ast.callee.object.name, ".").concat(ast.callee.property.name, "(").concat(ast.arguments.map(function (value) {
                        return flatten(value);
                      }).join(', '), ")");
                    } else {
                      functionDependencies.push(foundSource);
                      return "".concat(ast.callee.property.name, "(").concat(ast.arguments.map(function (value) {
                        return flatten(value);
                      }).join(', '), ")");
                    }
                  } else if (ast.callee.object.type === 'MemberExpression') {
                    return "".concat(flatten(ast.callee.object), ".").concat(ast.callee.property.name, "(").concat(ast.arguments.map(function (value) {
                      return flatten(value);
                    }).join(', '), ")");
                  } else {
                    throw new Error('unknown ast.callee');
                  }
                }
              case 'ReturnStatement':
                return "return ".concat(flatten(ast.argument));
              case 'BinaryExpression':
                return "(".concat(flatten(ast.left)).concat(ast.operator).concat(flatten(ast.right), ")");
              case 'UnaryExpression':
                if (ast.prefix) {
                  return "".concat(ast.operator, " ").concat(flatten(ast.argument));
                } else {
                  return "".concat(flatten(ast.argument), " ").concat(ast.operator);
                }
              case 'ExpressionStatement':
                return "".concat(flatten(ast.expression));
              case 'SequenceExpression':
                return "(".concat(flatten(ast.expressions), ")");
              case 'ArrowFunctionExpression':
                return "(".concat(ast.params.map(flatten).join(', '), ") => ").concat(flatten(ast.body));
              case 'Literal':
                return ast.raw;
              case 'Identifier':
                return ast.name;
              case 'MemberExpression':
                if (ast.object.type === 'ThisExpression') {
                  return thisLookup(ast.property.name);
                }
                if (ast.computed) {
                  return "".concat(flatten(ast.object), "[").concat(flatten(ast.property), "]");
                }
                return flatten(ast.object) + '.' + flatten(ast.property);
              case 'ThisExpression':
                return 'this';
              case 'NewExpression':
                return "new ".concat(flatten(ast.callee), "(").concat(ast.arguments.map(function (value) {
                  return flatten(value);
                }).join(', '), ")");
              case 'ForStatement':
                return "for (".concat(flatten(ast.init), ";").concat(flatten(ast.test), ";").concat(flatten(ast.update), ") ").concat(flatten(ast.body));
              case 'AssignmentExpression':
                return "".concat(flatten(ast.left)).concat(ast.operator).concat(flatten(ast.right));
              case 'UpdateExpression':
                return "".concat(flatten(ast.argument)).concat(ast.operator);
              case 'IfStatement':
                return "if (".concat(flatten(ast.test), ") ").concat(flatten(ast.consequent));
              case 'ThrowStatement':
                return "throw ".concat(flatten(ast.argument));
              case 'ObjectPattern':
                return ast.properties.map(flatten).join(', ');
              case 'ArrayPattern':
                return ast.elements.map(flatten).join(', ');
              case 'DebuggerStatement':
                return 'debugger;';
              case 'ConditionalExpression':
                return "".concat(flatten(ast.test), "?").concat(flatten(ast.consequent), ":").concat(flatten(ast.alternate));
              case 'Property':
                if (ast.kind === 'init') {
                  return flatten(ast.key);
                }
            }
            throw new Error("unhandled ast.type of ".concat(ast.type));
          }
          var result = flatten(ast);
          if (functionDependencies.length > 0) {
            var flattenedFunctionDependencies = [];
            for (var i = 0; i < functionDependencies.length; i++) {
              var functionDependency = functionDependencies[i];
              if (!flattened[functionDependency]) {
                flattened[functionDependency] = true;
              }
              functionDependency ? flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + '\n') : '';
            }
            return flattenedFunctionDependencies.join('') + result;
          }
          return result;
        },
        normalizeDeclarations: function normalizeDeclarations(ast) {
          if (ast.type !== 'VariableDeclaration') throw new Error('Ast is not of type "VariableDeclaration"');
          var normalizedDeclarations = [];
          for (var declarationIndex = 0; declarationIndex < ast.declarations.length; declarationIndex++) {
            var declaration = ast.declarations[declarationIndex];
            if (declaration.id && declaration.id.type === 'ObjectPattern' && declaration.id.properties) {
              var properties = declaration.id.properties;
              for (var propertyIndex = 0; propertyIndex < properties.length; propertyIndex++) {
                var property = properties[propertyIndex];
                if (property.value.type === 'ObjectPattern' && property.value.properties) {
                  for (var subPropertyIndex = 0; subPropertyIndex < property.value.properties.length; subPropertyIndex++) {
                    var subProperty = property.value.properties[subPropertyIndex];
                    if (subProperty.type === 'Property') {
                      normalizedDeclarations.push({
                        type: 'VariableDeclarator',
                        id: {
                          type: 'Identifier',
                          name: subProperty.key.name
                        },
                        init: {
                          type: 'MemberExpression',
                          object: {
                            type: 'MemberExpression',
                            object: declaration.init,
                            property: {
                              type: 'Identifier',
                              name: property.key.name
                            },
                            computed: false
                          },
                          property: {
                            type: 'Identifier',
                            name: subProperty.key.name
                          },
                          computed: false
                        }
                      });
                    } else {
                      throw new Error('unexpected state');
                    }
                  }
                } else if (property.value.type === 'Identifier') {
                  normalizedDeclarations.push({
                    type: 'VariableDeclarator',
                    id: {
                      type: 'Identifier',
                      name: property.value && property.value.name ? property.value.name : property.key.name
                    },
                    init: {
                      type: 'MemberExpression',
                      object: declaration.init,
                      property: {
                        type: 'Identifier',
                        name: property.key.name
                      },
                      computed: false
                    }
                  });
                } else {
                  throw new Error('unexpected state');
                }
              }
            } else if (declaration.id && declaration.id.type === 'ArrayPattern' && declaration.id.elements) {
              var elements = declaration.id.elements;
              for (var elementIndex = 0; elementIndex < elements.length; elementIndex++) {
                var element = elements[elementIndex];
                if (element.type === 'Identifier') {
                  normalizedDeclarations.push({
                    type: 'VariableDeclarator',
                    id: {
                      type: 'Identifier',
                      name: element.name
                    },
                    init: {
                      type: 'MemberExpression',
                      object: declaration.init,
                      property: {
                        type: 'Literal',
                        value: elementIndex,
                        raw: elementIndex.toString(),
                        start: element.start,
                        end: element.end
                      },
                      computed: true
                    }
                  });
                } else {
                  throw new Error('unexpected state');
                }
              }
            } else {
              normalizedDeclarations.push(declaration);
            }
          }
          return normalizedDeclarations;
        },
        splitHTMLImageToRGB: function splitHTMLImageToRGB(gpu, image) {
          var rKernel = gpu.createKernel(function (a) {
            var pixel = a[this.thread.y][this.thread.x];
            return pixel.r * 255;
          }, {
            output: [image.width, image.height],
            precision: 'unsigned',
            argumentTypes: {
              a: 'HTMLImage'
            }
          });
          var gKernel = gpu.createKernel(function (a) {
            var pixel = a[this.thread.y][this.thread.x];
            return pixel.g * 255;
          }, {
            output: [image.width, image.height],
            precision: 'unsigned',
            argumentTypes: {
              a: 'HTMLImage'
            }
          });
          var bKernel = gpu.createKernel(function (a) {
            var pixel = a[this.thread.y][this.thread.x];
            return pixel.b * 255;
          }, {
            output: [image.width, image.height],
            precision: 'unsigned',
            argumentTypes: {
              a: 'HTMLImage'
            }
          });
          var aKernel = gpu.createKernel(function (a) {
            var pixel = a[this.thread.y][this.thread.x];
            return pixel.a * 255;
          }, {
            output: [image.width, image.height],
            precision: 'unsigned',
            argumentTypes: {
              a: 'HTMLImage'
            }
          });
          var result = [rKernel(image), gKernel(image), bKernel(image), aKernel(image)];
          result.rKernel = rKernel;
          result.gKernel = gKernel;
          result.bKernel = bKernel;
          result.aKernel = aKernel;
          result.gpu = gpu;
          return result;
        },
        splitRGBAToCanvases: function splitRGBAToCanvases(gpu, rgba, width, height) {
          var visualKernelR = gpu.createKernel(function (v) {
            var pixel = v[this.thread.y][this.thread.x];
            this.color(pixel.r / 255, 0, 0, 255);
          }, {
            output: [width, height],
            graphical: true,
            argumentTypes: {
              v: 'Array2D(4)'
            }
          });
          visualKernelR(rgba);
          var visualKernelG = gpu.createKernel(function (v) {
            var pixel = v[this.thread.y][this.thread.x];
            this.color(0, pixel.g / 255, 0, 255);
          }, {
            output: [width, height],
            graphical: true,
            argumentTypes: {
              v: 'Array2D(4)'
            }
          });
          visualKernelG(rgba);
          var visualKernelB = gpu.createKernel(function (v) {
            var pixel = v[this.thread.y][this.thread.x];
            this.color(0, 0, pixel.b / 255, 255);
          }, {
            output: [width, height],
            graphical: true,
            argumentTypes: {
              v: 'Array2D(4)'
            }
          });
          visualKernelB(rgba);
          var visualKernelA = gpu.createKernel(function (v) {
            var pixel = v[this.thread.y][this.thread.x];
            this.color(255, 255, 255, pixel.a / 255);
          }, {
            output: [width, height],
            graphical: true,
            argumentTypes: {
              v: 'Array2D(4)'
            }
          });
          visualKernelA(rgba);
          return [visualKernelR.canvas, visualKernelG.canvas, visualKernelB.canvas, visualKernelA.canvas];
        },
        getMinifySafeName: function getMinifySafeName(fn) {
          try {
            var ast = acorn.parse("const value = ".concat(fn.toString()));
            var init = ast.body[0].declarations[0].init;
            return init.body.name || init.body.body[0].argument.name;
          } catch (e) {
            throw new Error('Unrecognized function type.  Please use `() => yourFunctionVariableHere` or function() { return yourFunctionVariableHere; }');
          }
        },
        sanitizeName: function sanitizeName(name) {
          if (dollarSign.test(name)) {
            name = name.replace(dollarSign, 'S_S');
          }
          if (doubleUnderscore.test(name)) {
            name = name.replace(doubleUnderscore, 'U_U');
          } else if (singleUnderscore.test(name)) {
            name = name.replace(singleUnderscore, 'u_u');
          }
          return name;
        }
      };
      var dollarSign = /\$/;
      var doubleUnderscore = /__/;
      var singleUnderscore = /_/;
      var _systemEndianness = utils.getSystemEndianness();
      module.exports = {
        utils: utils
      };
    }, {
      "./input": 110,
      "./texture": 113,
      "acorn": 1
    }]
  }, {}, [107])(107);
});

/***/ }),

/***/ 463:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/


var aa = __webpack_require__(791),
  ca = __webpack_require__(296);
function p(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);
  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var da = new Set(),
  ea = {};
function fa(a, b) {
  ha(a, b);
  ha(a + "Capture", b);
}
function ha(a, b) {
  ea[a] = b;
  for (a = 0; a < b.length; a++) da.add(b[a]);
}
var ia = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement),
  ja = Object.prototype.hasOwnProperty,
  ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
  la = {},
  ma = {};
function oa(a) {
  if (ja.call(ma, a)) return !0;
  if (ja.call(la, a)) return !1;
  if (ka.test(a)) return ma[a] = !0;
  la[a] = !0;
  return !1;
}
function pa(a, b, c, d) {
  if (null !== c && 0 === c.type) return !1;
  switch (typeof b) {
    case "function":
    case "symbol":
      return !0;
    case "boolean":
      if (d) return !1;
      if (null !== c) return !c.acceptsBooleans;
      a = a.toLowerCase().slice(0, 5);
      return "data-" !== a && "aria-" !== a;
    default:
      return !1;
  }
}
function qa(a, b, c, d) {
  if (null === b || "undefined" === typeof b || pa(a, b, c, d)) return !0;
  if (d) return !1;
  if (null !== c) switch (c.type) {
    case 3:
      return !b;
    case 4:
      return !1 === b;
    case 5:
      return isNaN(b);
    case 6:
      return isNaN(b) || 1 > b;
  }
  return !1;
}
function v(a, b, c, d, e, f, g) {
  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
  this.attributeName = d;
  this.attributeNamespace = e;
  this.mustUseProperty = c;
  this.propertyName = a;
  this.type = b;
  this.sanitizeURL = f;
  this.removeEmptyString = g;
}
var z = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function (a) {
  z[a] = new v(a, 0, !1, a, null, !1, !1);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function (a) {
  var b = a[0];
  z[b] = new v(b, 1, !1, a[1], null, !1, !1);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (a) {
  z[a] = new v(a, 2, !1, a.toLowerCase(), null, !1, !1);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function (a) {
  z[a] = new v(a, 2, !1, a, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function (a) {
  z[a] = new v(a, 3, !1, a.toLowerCase(), null, !1, !1);
});
["checked", "multiple", "muted", "selected"].forEach(function (a) {
  z[a] = new v(a, 3, !0, a, null, !1, !1);
});
["capture", "download"].forEach(function (a) {
  z[a] = new v(a, 4, !1, a, null, !1, !1);
});
["cols", "rows", "size", "span"].forEach(function (a) {
  z[a] = new v(a, 6, !1, a, null, !1, !1);
});
["rowSpan", "start"].forEach(function (a) {
  z[a] = new v(a, 5, !1, a.toLowerCase(), null, !1, !1);
});
var ra = /[\-:]([a-z])/g;
function sa(a) {
  return a[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function (a) {
  var b = a.replace(ra, sa);
  z[b] = new v(b, 1, !1, a, null, !1, !1);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function (a) {
  var b = a.replace(ra, sa);
  z[b] = new v(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
});
["xml:base", "xml:lang", "xml:space"].forEach(function (a) {
  var b = a.replace(ra, sa);
  z[b] = new v(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
["tabIndex", "crossOrigin"].forEach(function (a) {
  z[a] = new v(a, 1, !1, a.toLowerCase(), null, !1, !1);
});
z.xlinkHref = new v("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
["src", "href", "action", "formAction"].forEach(function (a) {
  z[a] = new v(a, 1, !1, a.toLowerCase(), null, !0, !0);
});
function ta(a, b, c, d) {
  var e = z.hasOwnProperty(b) ? z[b] : null;
  if (null !== e ? 0 !== e.type : d || !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1]) qa(b, c, e, d) && (c = null), d || null === e ? oa(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c)));
}
var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  va = Symbol.for("react.element"),
  wa = Symbol.for("react.portal"),
  ya = Symbol.for("react.fragment"),
  za = Symbol.for("react.strict_mode"),
  Aa = Symbol.for("react.profiler"),
  Ba = Symbol.for("react.provider"),
  Ca = Symbol.for("react.context"),
  Da = Symbol.for("react.forward_ref"),
  Ea = Symbol.for("react.suspense"),
  Fa = Symbol.for("react.suspense_list"),
  Ga = Symbol.for("react.memo"),
  Ha = Symbol.for("react.lazy");
Symbol.for("react.scope");
Symbol.for("react.debug_trace_mode");
var Ia = Symbol.for("react.offscreen");
Symbol.for("react.legacy_hidden");
Symbol.for("react.cache");
Symbol.for("react.tracing_marker");
var Ja = Symbol.iterator;
function Ka(a) {
  if (null === a || "object" !== typeof a) return null;
  a = Ja && a[Ja] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
var A = Object.assign,
  La;
function Ma(a) {
  if (void 0 === La) try {
    throw Error();
  } catch (c) {
    var b = c.stack.trim().match(/\n( *(at )?)/);
    La = b && b[1] || "";
  }
  return "\n" + La + a;
}
var Na = !1;
function Oa(a, b) {
  if (!a || Na) return "";
  Na = !0;
  var c = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b) {
      if (b = function b() {
        throw Error();
      }, Object.defineProperty(b.prototype, "props", {
        set: function set() {
          throw Error();
        }
      }), "object" === typeof Reflect && Reflect.construct) {
        try {
          Reflect.construct(b, []);
        } catch (l) {
          var d = l;
        }
        Reflect.construct(a, [], b);
      } else {
        try {
          b.call();
        } catch (l) {
          d = l;
        }
        a.call(b.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (l) {
        d = l;
      }
      a();
    }
  } catch (l) {
    if (l && d && "string" === typeof l.stack) {
      for (var e = l.stack.split("\n"), f = d.stack.split("\n"), g = e.length - 1, h = f.length - 1; 1 <= g && 0 <= h && e[g] !== f[h];) h--;
      for (; 1 <= g && 0 <= h; g--, h--) if (e[g] !== f[h]) {
        if (1 !== g || 1 !== h) {
          do if (g--, h--, 0 > h || e[g] !== f[h]) {
            var k = "\n" + e[g].replace(" at new ", " at ");
            a.displayName && k.includes("<anonymous>") && (k = k.replace("<anonymous>", a.displayName));
            return k;
          } while (1 <= g && 0 <= h);
        }
        break;
      }
    }
  } finally {
    Na = !1, Error.prepareStackTrace = c;
  }
  return (a = a ? a.displayName || a.name : "") ? Ma(a) : "";
}
function Pa(a) {
  switch (a.tag) {
    case 5:
      return Ma(a.type);
    case 16:
      return Ma("Lazy");
    case 13:
      return Ma("Suspense");
    case 19:
      return Ma("SuspenseList");
    case 0:
    case 2:
    case 15:
      return a = Oa(a.type, !1), a;
    case 11:
      return a = Oa(a.type.render, !1), a;
    case 1:
      return a = Oa(a.type, !0), a;
    default:
      return "";
  }
}
function Qa(a) {
  if (null == a) return null;
  if ("function" === typeof a) return a.displayName || a.name || null;
  if ("string" === typeof a) return a;
  switch (a) {
    case ya:
      return "Fragment";
    case wa:
      return "Portal";
    case Aa:
      return "Profiler";
    case za:
      return "StrictMode";
    case Ea:
      return "Suspense";
    case Fa:
      return "SuspenseList";
  }
  if ("object" === typeof a) switch (a.$$typeof) {
    case Ca:
      return (a.displayName || "Context") + ".Consumer";
    case Ba:
      return (a._context.displayName || "Context") + ".Provider";
    case Da:
      var b = a.render;
      a = a.displayName;
      a || (a = b.displayName || b.name || "", a = "" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
      return a;
    case Ga:
      return b = a.displayName || null, null !== b ? b : Qa(a.type) || "Memo";
    case Ha:
      b = a._payload;
      a = a._init;
      try {
        return Qa(a(b));
      } catch (c) {}
  }
  return null;
}
function Ra(a) {
  var b = a.type;
  switch (a.tag) {
    case 24:
      return "Cache";
    case 9:
      return (b.displayName || "Context") + ".Consumer";
    case 10:
      return (b._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return a = b.render, a = a.displayName || a.name || "", b.displayName || ("" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
    case 7:
      return "Fragment";
    case 5:
      return b;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Qa(b);
    case 8:
      return b === za ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if ("function" === typeof b) return b.displayName || b.name || null;
      if ("string" === typeof b) return b;
  }
  return null;
}
function Sa(a) {
  switch (typeof a) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return a;
    case "object":
      return a;
    default:
      return "";
  }
}
function Ta(a) {
  var b = a.type;
  return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
}
function Ua(a) {
  var b = Ta(a) ? "checked" : "value",
    c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
    d = "" + a[b];
  if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {
    var e = c.get,
      f = c.set;
    Object.defineProperty(a, b, {
      configurable: !0,
      get: function get() {
        return e.call(this);
      },
      set: function set(a) {
        d = "" + a;
        f.call(this, a);
      }
    });
    Object.defineProperty(a, b, {
      enumerable: c.enumerable
    });
    return {
      getValue: function getValue() {
        return d;
      },
      setValue: function setValue(a) {
        d = "" + a;
      },
      stopTracking: function stopTracking() {
        a._valueTracker = null;
        delete a[b];
      }
    };
  }
}
function Va(a) {
  a._valueTracker || (a._valueTracker = Ua(a));
}
function Wa(a) {
  if (!a) return !1;
  var b = a._valueTracker;
  if (!b) return !0;
  var c = b.getValue();
  var d = "";
  a && (d = Ta(a) ? a.checked ? "true" : "false" : a.value);
  a = d;
  return a !== c ? (b.setValue(a), !0) : !1;
}
function Xa(a) {
  a = a || ("undefined" !== typeof document ? document : void 0);
  if ("undefined" === typeof a) return null;
  try {
    return a.activeElement || a.body;
  } catch (b) {
    return a.body;
  }
}
function Ya(a, b) {
  var c = b.checked;
  return A({}, b, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: null != c ? c : a._wrapperState.initialChecked
  });
}
function Za(a, b) {
  var c = null == b.defaultValue ? "" : b.defaultValue,
    d = null != b.checked ? b.checked : b.defaultChecked;
  c = Sa(null != b.value ? b.value : c);
  a._wrapperState = {
    initialChecked: d,
    initialValue: c,
    controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value
  };
}
function ab(a, b) {
  b = b.checked;
  null != b && ta(a, "checked", b, !1);
}
function bb(a, b) {
  ab(a, b);
  var c = Sa(b.value),
    d = b.type;
  if (null != c) {
    if ("number" === d) {
      if (0 === c && "" === a.value || a.value != c) a.value = "" + c;
    } else a.value !== "" + c && (a.value = "" + c);
  } else if ("submit" === d || "reset" === d) {
    a.removeAttribute("value");
    return;
  }
  b.hasOwnProperty("value") ? cb(a, b.type, c) : b.hasOwnProperty("defaultValue") && cb(a, b.type, Sa(b.defaultValue));
  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
}
function db(a, b, c) {
  if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
    var d = b.type;
    if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value)) return;
    b = "" + a._wrapperState.initialValue;
    c || b === a.value || (a.value = b);
    a.defaultValue = b;
  }
  c = a.name;
  "" !== c && (a.name = "");
  a.defaultChecked = !!a._wrapperState.initialChecked;
  "" !== c && (a.name = c);
}
function cb(a, b, c) {
  if ("number" !== b || Xa(a.ownerDocument) !== a) null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c);
}
var eb = Array.isArray;
function fb(a, b, c, d) {
  a = a.options;
  if (b) {
    b = {};
    for (var e = 0; e < c.length; e++) b["$" + c[e]] = !0;
    for (c = 0; c < a.length; c++) e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);
  } else {
    c = "" + Sa(c);
    b = null;
    for (e = 0; e < a.length; e++) {
      if (a[e].value === c) {
        a[e].selected = !0;
        d && (a[e].defaultSelected = !0);
        return;
      }
      null !== b || a[e].disabled || (b = a[e]);
    }
    null !== b && (b.selected = !0);
  }
}
function gb(a, b) {
  if (null != b.dangerouslySetInnerHTML) throw Error(p(91));
  return A({}, b, {
    value: void 0,
    defaultValue: void 0,
    children: "" + a._wrapperState.initialValue
  });
}
function hb(a, b) {
  var c = b.value;
  if (null == c) {
    c = b.children;
    b = b.defaultValue;
    if (null != c) {
      if (null != b) throw Error(p(92));
      if (eb(c)) {
        if (1 < c.length) throw Error(p(93));
        c = c[0];
      }
      b = c;
    }
    null == b && (b = "");
    c = b;
  }
  a._wrapperState = {
    initialValue: Sa(c)
  };
}
function ib(a, b) {
  var c = Sa(b.value),
    d = Sa(b.defaultValue);
  null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));
  null != d && (a.defaultValue = "" + d);
}
function jb(a) {
  var b = a.textContent;
  b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b);
}
function kb(a) {
  switch (a) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function lb(a, b) {
  return null == a || "http://www.w3.org/1999/xhtml" === a ? kb(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
}
var mb,
  nb = function (a) {
    return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {
      MSApp.execUnsafeLocalFunction(function () {
        return a(b, c, d, e);
      });
    } : a;
  }(function (a, b) {
    if ("http://www.w3.org/2000/svg" !== a.namespaceURI || "innerHTML" in a) a.innerHTML = b;else {
      mb = mb || document.createElement("div");
      mb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";
      for (b = mb.firstChild; a.firstChild;) a.removeChild(a.firstChild);
      for (; b.firstChild;) a.appendChild(b.firstChild);
    }
  });
function ob(a, b) {
  if (b) {
    var c = a.firstChild;
    if (c && c === a.lastChild && 3 === c.nodeType) {
      c.nodeValue = b;
      return;
    }
  }
  a.textContent = b;
}
var pb = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
  },
  qb = ["Webkit", "ms", "Moz", "O"];
Object.keys(pb).forEach(function (a) {
  qb.forEach(function (b) {
    b = b + a.charAt(0).toUpperCase() + a.substring(1);
    pb[b] = pb[a];
  });
});
function rb(a, b, c) {
  return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || pb.hasOwnProperty(a) && pb[a] ? ("" + b).trim() : b + "px";
}
function sb(a, b) {
  a = a.style;
  for (var c in b) if (b.hasOwnProperty(c)) {
    var d = 0 === c.indexOf("--"),
      e = rb(c, b[c], d);
    "float" === c && (c = "cssFloat");
    d ? a.setProperty(c, e) : a[c] = e;
  }
}
var tb = A({
  menuitem: !0
}, {
  area: !0,
  base: !0,
  br: !0,
  col: !0,
  embed: !0,
  hr: !0,
  img: !0,
  input: !0,
  keygen: !0,
  link: !0,
  meta: !0,
  param: !0,
  source: !0,
  track: !0,
  wbr: !0
});
function ub(a, b) {
  if (b) {
    if (tb[a] && (null != b.children || null != b.dangerouslySetInnerHTML)) throw Error(p(137, a));
    if (null != b.dangerouslySetInnerHTML) {
      if (null != b.children) throw Error(p(60));
      if ("object" !== typeof b.dangerouslySetInnerHTML || !("__html" in b.dangerouslySetInnerHTML)) throw Error(p(61));
    }
    if (null != b.style && "object" !== typeof b.style) throw Error(p(62));
  }
}
function vb(a, b) {
  if (-1 === a.indexOf("-")) return "string" === typeof b.is;
  switch (a) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;
    default:
      return !0;
  }
}
var wb = null;
function xb(a) {
  a = a.target || a.srcElement || window;
  a.correspondingUseElement && (a = a.correspondingUseElement);
  return 3 === a.nodeType ? a.parentNode : a;
}
var yb = null,
  zb = null,
  Ab = null;
function Bb(a) {
  if (a = Cb(a)) {
    if ("function" !== typeof yb) throw Error(p(280));
    var b = a.stateNode;
    b && (b = Db(b), yb(a.stateNode, a.type, b));
  }
}
function Eb(a) {
  zb ? Ab ? Ab.push(a) : Ab = [a] : zb = a;
}
function Fb() {
  if (zb) {
    var a = zb,
      b = Ab;
    Ab = zb = null;
    Bb(a);
    if (b) for (a = 0; a < b.length; a++) Bb(b[a]);
  }
}
function Gb(a, b) {
  return a(b);
}
function Hb() {}
var Ib = !1;
function Jb(a, b, c) {
  if (Ib) return a(b, c);
  Ib = !0;
  try {
    return Gb(a, b, c);
  } finally {
    if (Ib = !1, null !== zb || null !== Ab) Hb(), Fb();
  }
}
function Kb(a, b) {
  var c = a.stateNode;
  if (null === c) return null;
  var d = Db(c);
  if (null === d) return null;
  c = d[b];
  a: switch (b) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));
      a = !d;
      break a;
    default:
      a = !1;
  }
  if (a) return null;
  if (c && "function" !== typeof c) throw Error(p(231, b, typeof c));
  return c;
}
var Lb = !1;
if (ia) try {
  var Mb = {};
  Object.defineProperty(Mb, "passive", {
    get: function get() {
      Lb = !0;
    }
  });
  window.addEventListener("test", Mb, Mb);
  window.removeEventListener("test", Mb, Mb);
} catch (a) {
  Lb = !1;
}
function Nb(a, b, c, d, e, f, g, h, k) {
  var l = Array.prototype.slice.call(arguments, 3);
  try {
    b.apply(c, l);
  } catch (m) {
    this.onError(m);
  }
}
var Ob = !1,
  Pb = null,
  Qb = !1,
  Rb = null,
  Sb = {
    onError: function onError(a) {
      Ob = !0;
      Pb = a;
    }
  };
function Tb(a, b, c, d, e, f, g, h, k) {
  Ob = !1;
  Pb = null;
  Nb.apply(Sb, arguments);
}
function Ub(a, b, c, d, e, f, g, h, k) {
  Tb.apply(this, arguments);
  if (Ob) {
    if (Ob) {
      var l = Pb;
      Ob = !1;
      Pb = null;
    } else throw Error(p(198));
    Qb || (Qb = !0, Rb = l);
  }
}
function Vb(a) {
  var b = a,
    c = a;
  if (a.alternate) for (; b.return;) b = b.return;else {
    a = b;
    do b = a, 0 !== (b.flags & 4098) && (c = b.return), a = b.return; while (a);
  }
  return 3 === b.tag ? c : null;
}
function Wb(a) {
  if (13 === a.tag) {
    var b = a.memoizedState;
    null === b && (a = a.alternate, null !== a && (b = a.memoizedState));
    if (null !== b) return b.dehydrated;
  }
  return null;
}
function Xb(a) {
  if (Vb(a) !== a) throw Error(p(188));
}
function Yb(a) {
  var b = a.alternate;
  if (!b) {
    b = Vb(a);
    if (null === b) throw Error(p(188));
    return b !== a ? null : a;
  }
  for (var c = a, d = b;;) {
    var e = c.return;
    if (null === e) break;
    var f = e.alternate;
    if (null === f) {
      d = e.return;
      if (null !== d) {
        c = d;
        continue;
      }
      break;
    }
    if (e.child === f.child) {
      for (f = e.child; f;) {
        if (f === c) return Xb(e), a;
        if (f === d) return Xb(e), b;
        f = f.sibling;
      }
      throw Error(p(188));
    }
    if (c.return !== d.return) c = e, d = f;else {
      for (var g = !1, h = e.child; h;) {
        if (h === c) {
          g = !0;
          c = e;
          d = f;
          break;
        }
        if (h === d) {
          g = !0;
          d = e;
          c = f;
          break;
        }
        h = h.sibling;
      }
      if (!g) {
        for (h = f.child; h;) {
          if (h === c) {
            g = !0;
            c = f;
            d = e;
            break;
          }
          if (h === d) {
            g = !0;
            d = f;
            c = e;
            break;
          }
          h = h.sibling;
        }
        if (!g) throw Error(p(189));
      }
    }
    if (c.alternate !== d) throw Error(p(190));
  }
  if (3 !== c.tag) throw Error(p(188));
  return c.stateNode.current === c ? a : b;
}
function Zb(a) {
  a = Yb(a);
  return null !== a ? $b(a) : null;
}
function $b(a) {
  if (5 === a.tag || 6 === a.tag) return a;
  for (a = a.child; null !== a;) {
    var b = $b(a);
    if (null !== b) return b;
    a = a.sibling;
  }
  return null;
}
var ac = ca.unstable_scheduleCallback,
  bc = ca.unstable_cancelCallback,
  cc = ca.unstable_shouldYield,
  dc = ca.unstable_requestPaint,
  B = ca.unstable_now,
  ec = ca.unstable_getCurrentPriorityLevel,
  fc = ca.unstable_ImmediatePriority,
  gc = ca.unstable_UserBlockingPriority,
  hc = ca.unstable_NormalPriority,
  ic = ca.unstable_LowPriority,
  jc = ca.unstable_IdlePriority,
  kc = null,
  lc = null;
function mc(a) {
  if (lc && "function" === typeof lc.onCommitFiberRoot) try {
    lc.onCommitFiberRoot(kc, a, void 0, 128 === (a.current.flags & 128));
  } catch (b) {}
}
var oc = Math.clz32 ? Math.clz32 : nc,
  pc = Math.log,
  qc = Math.LN2;
function nc(a) {
  a >>>= 0;
  return 0 === a ? 32 : 31 - (pc(a) / qc | 0) | 0;
}
var rc = 64,
  sc = 4194304;
function tc(a) {
  switch (a & -a) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return a & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return a;
  }
}
function uc(a, b) {
  var c = a.pendingLanes;
  if (0 === c) return 0;
  var d = 0,
    e = a.suspendedLanes,
    f = a.pingedLanes,
    g = c & 268435455;
  if (0 !== g) {
    var h = g & ~e;
    0 !== h ? d = tc(h) : (f &= g, 0 !== f && (d = tc(f)));
  } else g = c & ~e, 0 !== g ? d = tc(g) : 0 !== f && (d = tc(f));
  if (0 === d) return 0;
  if (0 !== b && b !== d && 0 === (b & e) && (e = d & -d, f = b & -b, e >= f || 16 === e && 0 !== (f & 4194240))) return b;
  0 !== (d & 4) && (d |= c & 16);
  b = a.entangledLanes;
  if (0 !== b) for (a = a.entanglements, b &= d; 0 < b;) c = 31 - oc(b), e = 1 << c, d |= a[c], b &= ~e;
  return d;
}
function vc(a, b) {
  switch (a) {
    case 1:
    case 2:
    case 4:
      return b + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return b + 5E3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function wc(a, b) {
  for (var c = a.suspendedLanes, d = a.pingedLanes, e = a.expirationTimes, f = a.pendingLanes; 0 < f;) {
    var g = 31 - oc(f),
      h = 1 << g,
      k = e[g];
    if (-1 === k) {
      if (0 === (h & c) || 0 !== (h & d)) e[g] = vc(h, b);
    } else k <= b && (a.expiredLanes |= h);
    f &= ~h;
  }
}
function xc(a) {
  a = a.pendingLanes & -1073741825;
  return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0;
}
function yc() {
  var a = rc;
  rc <<= 1;
  0 === (rc & 4194240) && (rc = 64);
  return a;
}
function zc(a) {
  for (var b = [], c = 0; 31 > c; c++) b.push(a);
  return b;
}
function Ac(a, b, c) {
  a.pendingLanes |= b;
  536870912 !== b && (a.suspendedLanes = 0, a.pingedLanes = 0);
  a = a.eventTimes;
  b = 31 - oc(b);
  a[b] = c;
}
function Bc(a, b) {
  var c = a.pendingLanes & ~b;
  a.pendingLanes = b;
  a.suspendedLanes = 0;
  a.pingedLanes = 0;
  a.expiredLanes &= b;
  a.mutableReadLanes &= b;
  a.entangledLanes &= b;
  b = a.entanglements;
  var d = a.eventTimes;
  for (a = a.expirationTimes; 0 < c;) {
    var e = 31 - oc(c),
      f = 1 << e;
    b[e] = 0;
    d[e] = -1;
    a[e] = -1;
    c &= ~f;
  }
}
function Cc(a, b) {
  var c = a.entangledLanes |= b;
  for (a = a.entanglements; c;) {
    var d = 31 - oc(c),
      e = 1 << d;
    e & b | a[d] & b && (a[d] |= b);
    c &= ~e;
  }
}
var C = 0;
function Dc(a) {
  a &= -a;
  return 1 < a ? 4 < a ? 0 !== (a & 268435455) ? 16 : 536870912 : 4 : 1;
}
var Ec,
  Fc,
  Gc,
  Hc,
  Ic,
  Jc = !1,
  Kc = [],
  Lc = null,
  Mc = null,
  Nc = null,
  Oc = new Map(),
  Pc = new Map(),
  Qc = [],
  Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function Sc(a, b) {
  switch (a) {
    case "focusin":
    case "focusout":
      Lc = null;
      break;
    case "dragenter":
    case "dragleave":
      Mc = null;
      break;
    case "mouseover":
    case "mouseout":
      Nc = null;
      break;
    case "pointerover":
    case "pointerout":
      Oc.delete(b.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Pc.delete(b.pointerId);
  }
}
function Tc(a, b, c, d, e, f) {
  if (null === a || a.nativeEvent !== f) return a = {
    blockedOn: b,
    domEventName: c,
    eventSystemFlags: d,
    nativeEvent: f,
    targetContainers: [e]
  }, null !== b && (b = Cb(b), null !== b && Fc(b)), a;
  a.eventSystemFlags |= d;
  b = a.targetContainers;
  null !== e && -1 === b.indexOf(e) && b.push(e);
  return a;
}
function Uc(a, b, c, d, e) {
  switch (b) {
    case "focusin":
      return Lc = Tc(Lc, a, b, c, d, e), !0;
    case "dragenter":
      return Mc = Tc(Mc, a, b, c, d, e), !0;
    case "mouseover":
      return Nc = Tc(Nc, a, b, c, d, e), !0;
    case "pointerover":
      var f = e.pointerId;
      Oc.set(f, Tc(Oc.get(f) || null, a, b, c, d, e));
      return !0;
    case "gotpointercapture":
      return f = e.pointerId, Pc.set(f, Tc(Pc.get(f) || null, a, b, c, d, e)), !0;
  }
  return !1;
}
function Vc(a) {
  var b = Wc(a.target);
  if (null !== b) {
    var c = Vb(b);
    if (null !== c) if (b = c.tag, 13 === b) {
      if (b = Wb(c), null !== b) {
        a.blockedOn = b;
        Ic(a.priority, function () {
          Gc(c);
        });
        return;
      }
    } else if (3 === b && c.stateNode.current.memoizedState.isDehydrated) {
      a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;
      return;
    }
  }
  a.blockedOn = null;
}
function Xc(a) {
  if (null !== a.blockedOn) return !1;
  for (var b = a.targetContainers; 0 < b.length;) {
    var c = Yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);
    if (null === c) {
      c = a.nativeEvent;
      var d = new c.constructor(c.type, c);
      wb = d;
      c.target.dispatchEvent(d);
      wb = null;
    } else return b = Cb(c), null !== b && Fc(b), a.blockedOn = c, !1;
    b.shift();
  }
  return !0;
}
function Zc(a, b, c) {
  Xc(a) && c.delete(b);
}
function $c() {
  Jc = !1;
  null !== Lc && Xc(Lc) && (Lc = null);
  null !== Mc && Xc(Mc) && (Mc = null);
  null !== Nc && Xc(Nc) && (Nc = null);
  Oc.forEach(Zc);
  Pc.forEach(Zc);
}
function ad(a, b) {
  a.blockedOn === b && (a.blockedOn = null, Jc || (Jc = !0, ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
}
function bd(a) {
  function b(b) {
    return ad(b, a);
  }
  if (0 < Kc.length) {
    ad(Kc[0], a);
    for (var c = 1; c < Kc.length; c++) {
      var d = Kc[c];
      d.blockedOn === a && (d.blockedOn = null);
    }
  }
  null !== Lc && ad(Lc, a);
  null !== Mc && ad(Mc, a);
  null !== Nc && ad(Nc, a);
  Oc.forEach(b);
  Pc.forEach(b);
  for (c = 0; c < Qc.length; c++) d = Qc[c], d.blockedOn === a && (d.blockedOn = null);
  for (; 0 < Qc.length && (c = Qc[0], null === c.blockedOn);) Vc(c), null === c.blockedOn && Qc.shift();
}
var cd = ua.ReactCurrentBatchConfig,
  dd = !0;
function ed(a, b, c, d) {
  var e = C,
    f = cd.transition;
  cd.transition = null;
  try {
    C = 1, fd(a, b, c, d);
  } finally {
    C = e, cd.transition = f;
  }
}
function gd(a, b, c, d) {
  var e = C,
    f = cd.transition;
  cd.transition = null;
  try {
    C = 4, fd(a, b, c, d);
  } finally {
    C = e, cd.transition = f;
  }
}
function fd(a, b, c, d) {
  if (dd) {
    var e = Yc(a, b, c, d);
    if (null === e) hd(a, b, d, id, c), Sc(a, d);else if (Uc(e, a, b, c, d)) d.stopPropagation();else if (Sc(a, d), b & 4 && -1 < Rc.indexOf(a)) {
      for (; null !== e;) {
        var f = Cb(e);
        null !== f && Ec(f);
        f = Yc(a, b, c, d);
        null === f && hd(a, b, d, id, c);
        if (f === e) break;
        e = f;
      }
      null !== e && d.stopPropagation();
    } else hd(a, b, d, null, c);
  }
}
var id = null;
function Yc(a, b, c, d) {
  id = null;
  a = xb(d);
  a = Wc(a);
  if (null !== a) if (b = Vb(a), null === b) a = null;else if (c = b.tag, 13 === c) {
    a = Wb(b);
    if (null !== a) return a;
    a = null;
  } else if (3 === c) {
    if (b.stateNode.current.memoizedState.isDehydrated) return 3 === b.tag ? b.stateNode.containerInfo : null;
    a = null;
  } else b !== a && (a = null);
  id = a;
  return null;
}
function jd(a) {
  switch (a) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (ec()) {
        case fc:
          return 1;
        case gc:
          return 4;
        case hc:
        case ic:
          return 16;
        case jc:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var kd = null,
  ld = null,
  md = null;
function nd() {
  if (md) return md;
  var a,
    b = ld,
    c = b.length,
    d,
    e = "value" in kd ? kd.value : kd.textContent,
    f = e.length;
  for (a = 0; a < c && b[a] === e[a]; a++);
  var g = c - a;
  for (d = 1; d <= g && b[c - d] === e[f - d]; d++);
  return md = e.slice(a, 1 < d ? 1 - d : void 0);
}
function od(a) {
  var b = a.keyCode;
  "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;
  10 === a && (a = 13);
  return 32 <= a || 13 === a ? a : 0;
}
function pd() {
  return !0;
}
function qd() {
  return !1;
}
function rd(a) {
  function b(b, d, e, f, g) {
    this._reactName = b;
    this._targetInst = e;
    this.type = d;
    this.nativeEvent = f;
    this.target = g;
    this.currentTarget = null;
    for (var c in a) a.hasOwnProperty(c) && (b = a[c], this[c] = b ? b(f) : f[c]);
    this.isDefaultPrevented = (null != f.defaultPrevented ? f.defaultPrevented : !1 === f.returnValue) ? pd : qd;
    this.isPropagationStopped = qd;
    return this;
  }
  A(b.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = !0;
      var a = this.nativeEvent;
      a && (a.preventDefault ? a.preventDefault() : "unknown" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = pd);
    },
    stopPropagation: function stopPropagation() {
      var a = this.nativeEvent;
      a && (a.stopPropagation ? a.stopPropagation() : "unknown" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = pd);
    },
    persist: function persist() {},
    isPersistent: pd
  });
  return b;
}
var sd = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function timeStamp(a) {
      return a.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0
  },
  td = rd(sd),
  ud = A({}, sd, {
    view: 0,
    detail: 0
  }),
  vd = rd(ud),
  wd,
  xd,
  yd,
  Ad = A({}, ud, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: zd,
    button: 0,
    buttons: 0,
    relatedTarget: function relatedTarget(a) {
      return void 0 === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
    },
    movementX: function movementX(a) {
      if ("movementX" in a) return a.movementX;
      a !== yd && (yd && "mousemove" === a.type ? (wd = a.screenX - yd.screenX, xd = a.screenY - yd.screenY) : xd = wd = 0, yd = a);
      return wd;
    },
    movementY: function movementY(a) {
      return "movementY" in a ? a.movementY : xd;
    }
  }),
  Bd = rd(Ad),
  Cd = A({}, Ad, {
    dataTransfer: 0
  }),
  Dd = rd(Cd),
  Ed = A({}, ud, {
    relatedTarget: 0
  }),
  Fd = rd(Ed),
  Gd = A({}, sd, {
    animationName: 0,
    elapsedTime: 0,
    pseudoElement: 0
  }),
  Hd = rd(Gd),
  Id = A({}, sd, {
    clipboardData: function clipboardData(a) {
      return "clipboardData" in a ? a.clipboardData : window.clipboardData;
    }
  }),
  Jd = rd(Id),
  Kd = A({}, sd, {
    data: 0
  }),
  Ld = rd(Kd),
  Md = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
  },
  Nd = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
  },
  Od = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey"
  };
function Pd(a) {
  var b = this.nativeEvent;
  return b.getModifierState ? b.getModifierState(a) : (a = Od[a]) ? !!b[a] : !1;
}
function zd() {
  return Pd;
}
var Qd = A({}, ud, {
    key: function key(a) {
      if (a.key) {
        var b = Md[a.key] || a.key;
        if ("Unidentified" !== b) return b;
      }
      return "keypress" === a.type ? (a = od(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? Nd[a.keyCode] || "Unidentified" : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: zd,
    charCode: function charCode(a) {
      return "keypress" === a.type ? od(a) : 0;
    },
    keyCode: function keyCode(a) {
      return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
    },
    which: function which(a) {
      return "keypress" === a.type ? od(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
    }
  }),
  Rd = rd(Qd),
  Sd = A({}, Ad, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0
  }),
  Td = rd(Sd),
  Ud = A({}, ud, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: zd
  }),
  Vd = rd(Ud),
  Wd = A({}, sd, {
    propertyName: 0,
    elapsedTime: 0,
    pseudoElement: 0
  }),
  Xd = rd(Wd),
  Yd = A({}, Ad, {
    deltaX: function deltaX(a) {
      return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
    },
    deltaY: function deltaY(a) {
      return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
  }),
  Zd = rd(Yd),
  $d = [9, 13, 27, 32],
  ae = ia && "CompositionEvent" in window,
  be = null;
ia && "documentMode" in document && (be = document.documentMode);
var ce = ia && "TextEvent" in window && !be,
  de = ia && (!ae || be && 8 < be && 11 >= be),
  ee = String.fromCharCode(32),
  fe = !1;
function ge(a, b) {
  switch (a) {
    case "keyup":
      return -1 !== $d.indexOf(b.keyCode);
    case "keydown":
      return 229 !== b.keyCode;
    case "keypress":
    case "mousedown":
    case "focusout":
      return !0;
    default:
      return !1;
  }
}
function he(a) {
  a = a.detail;
  return "object" === typeof a && "data" in a ? a.data : null;
}
var ie = !1;
function je(a, b) {
  switch (a) {
    case "compositionend":
      return he(b);
    case "keypress":
      if (32 !== b.which) return null;
      fe = !0;
      return ee;
    case "textInput":
      return a = b.data, a === ee && fe ? null : a;
    default:
      return null;
  }
}
function ke(a, b) {
  if (ie) return "compositionend" === a || !ae && ge(a, b) ? (a = nd(), md = ld = kd = null, ie = !1, a) : null;
  switch (a) {
    case "paste":
      return null;
    case "keypress":
      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
        if (b.char && 1 < b.char.length) return b.char;
        if (b.which) return String.fromCharCode(b.which);
      }
      return null;
    case "compositionend":
      return de && "ko" !== b.locale ? null : b.data;
    default:
      return null;
  }
}
var le = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0
};
function me(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return "input" === b ? !!le[a.type] : "textarea" === b ? !0 : !1;
}
function ne(a, b, c, d) {
  Eb(d);
  b = oe(b, "onChange");
  0 < b.length && (c = new td("onChange", "change", null, c, d), a.push({
    event: c,
    listeners: b
  }));
}
var pe = null,
  qe = null;
function re(a) {
  se(a, 0);
}
function te(a) {
  var b = ue(a);
  if (Wa(b)) return a;
}
function ve(a, b) {
  if ("change" === a) return b;
}
var we = !1;
if (ia) {
  var xe;
  if (ia) {
    var ye = ("oninput" in document);
    if (!ye) {
      var ze = document.createElement("div");
      ze.setAttribute("oninput", "return;");
      ye = "function" === typeof ze.oninput;
    }
    xe = ye;
  } else xe = !1;
  we = xe && (!document.documentMode || 9 < document.documentMode);
}
function Ae() {
  pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
}
function Be(a) {
  if ("value" === a.propertyName && te(qe)) {
    var b = [];
    ne(b, qe, a, xb(a));
    Jb(re, b);
  }
}
function Ce(a, b, c) {
  "focusin" === a ? (Ae(), pe = b, qe = c, pe.attachEvent("onpropertychange", Be)) : "focusout" === a && Ae();
}
function De(a) {
  if ("selectionchange" === a || "keyup" === a || "keydown" === a) return te(qe);
}
function Ee(a, b) {
  if ("click" === a) return te(b);
}
function Fe(a, b) {
  if ("input" === a || "change" === a) return te(b);
}
function Ge(a, b) {
  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var He = "function" === typeof Object.is ? Object.is : Ge;
function Ie(a, b) {
  if (He(a, b)) return !0;
  if ("object" !== typeof a || null === a || "object" !== typeof b || null === b) return !1;
  var c = Object.keys(a),
    d = Object.keys(b);
  if (c.length !== d.length) return !1;
  for (d = 0; d < c.length; d++) {
    var e = c[d];
    if (!ja.call(b, e) || !He(a[e], b[e])) return !1;
  }
  return !0;
}
function Je(a) {
  for (; a && a.firstChild;) a = a.firstChild;
  return a;
}
function Ke(a, b) {
  var c = Je(a);
  a = 0;
  for (var d; c;) {
    if (3 === c.nodeType) {
      d = a + c.textContent.length;
      if (a <= b && d >= b) return {
        node: c,
        offset: b - a
      };
      a = d;
    }
    a: {
      for (; c;) {
        if (c.nextSibling) {
          c = c.nextSibling;
          break a;
        }
        c = c.parentNode;
      }
      c = void 0;
    }
    c = Je(c);
  }
}
function Le(a, b) {
  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Le(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;
}
function Me() {
  for (var a = window, b = Xa(); b instanceof a.HTMLIFrameElement;) {
    try {
      var c = "string" === typeof b.contentWindow.location.href;
    } catch (d) {
      c = !1;
    }
    if (c) a = b.contentWindow;else break;
    b = Xa(a.document);
  }
  return b;
}
function Ne(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);
}
function Oe(a) {
  var b = Me(),
    c = a.focusedElem,
    d = a.selectionRange;
  if (b !== c && c && c.ownerDocument && Le(c.ownerDocument.documentElement, c)) {
    if (null !== d && Ne(c)) if (b = d.start, a = d.end, void 0 === a && (a = b), "selectionStart" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {
      a = a.getSelection();
      var e = c.textContent.length,
        f = Math.min(d.start, e);
      d = void 0 === d.end ? f : Math.min(d.end, e);
      !a.extend && f > d && (e = d, d = f, f = e);
      e = Ke(c, f);
      var g = Ke(c, d);
      e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));
    }
    b = [];
    for (a = c; a = a.parentNode;) 1 === a.nodeType && b.push({
      element: a,
      left: a.scrollLeft,
      top: a.scrollTop
    });
    "function" === typeof c.focus && c.focus();
    for (c = 0; c < b.length; c++) a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
  }
}
var Pe = ia && "documentMode" in document && 11 >= document.documentMode,
  Qe = null,
  Re = null,
  Se = null,
  Te = !1;
function Ue(a, b, c) {
  var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument;
  Te || null == Qe || Qe !== Xa(d) || (d = Qe, "selectionStart" in d && Ne(d) ? d = {
    start: d.selectionStart,
    end: d.selectionEnd
  } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = {
    anchorNode: d.anchorNode,
    anchorOffset: d.anchorOffset,
    focusNode: d.focusNode,
    focusOffset: d.focusOffset
  }), Se && Ie(Se, d) || (Se = d, d = oe(Re, "onSelect"), 0 < d.length && (b = new td("onSelect", "select", null, b, c), a.push({
    event: b,
    listeners: d
  }), b.target = Qe)));
}
function Ve(a, b) {
  var c = {};
  c[a.toLowerCase()] = b.toLowerCase();
  c["Webkit" + a] = "webkit" + b;
  c["Moz" + a] = "moz" + b;
  return c;
}
var We = {
    animationend: Ve("Animation", "AnimationEnd"),
    animationiteration: Ve("Animation", "AnimationIteration"),
    animationstart: Ve("Animation", "AnimationStart"),
    transitionend: Ve("Transition", "TransitionEnd")
  },
  Xe = {},
  Ye = {};
ia && (Ye = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);
function Ze(a) {
  if (Xe[a]) return Xe[a];
  if (!We[a]) return a;
  var b = We[a],
    c;
  for (c in b) if (b.hasOwnProperty(c) && c in Ye) return Xe[a] = b[c];
  return a;
}
var $e = Ze("animationend"),
  af = Ze("animationiteration"),
  bf = Ze("animationstart"),
  cf = Ze("transitionend"),
  df = new Map(),
  ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function ff(a, b) {
  df.set(a, b);
  fa(b, [a]);
}
for (var gf = 0; gf < ef.length; gf++) {
  var hf = ef[gf],
    jf = hf.toLowerCase(),
    kf = hf[0].toUpperCase() + hf.slice(1);
  ff(jf, "on" + kf);
}
ff($e, "onAnimationEnd");
ff(af, "onAnimationIteration");
ff(bf, "onAnimationStart");
ff("dblclick", "onDoubleClick");
ff("focusin", "onFocus");
ff("focusout", "onBlur");
ff(cf, "onTransitionEnd");
ha("onMouseEnter", ["mouseout", "mouseover"]);
ha("onMouseLeave", ["mouseout", "mouseover"]);
ha("onPointerEnter", ["pointerout", "pointerover"]);
ha("onPointerLeave", ["pointerout", "pointerover"]);
fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
fa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),
  mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
function nf(a, b, c) {
  var d = a.type || "unknown-event";
  a.currentTarget = c;
  Ub(d, b, void 0, a);
  a.currentTarget = null;
}
function se(a, b) {
  b = 0 !== (b & 4);
  for (var c = 0; c < a.length; c++) {
    var d = a[c],
      e = d.event;
    d = d.listeners;
    a: {
      var f = void 0;
      if (b) for (var g = d.length - 1; 0 <= g; g--) {
        var h = d[g],
          k = h.instance,
          l = h.currentTarget;
        h = h.listener;
        if (k !== f && e.isPropagationStopped()) break a;
        nf(e, h, l);
        f = k;
      } else for (g = 0; g < d.length; g++) {
        h = d[g];
        k = h.instance;
        l = h.currentTarget;
        h = h.listener;
        if (k !== f && e.isPropagationStopped()) break a;
        nf(e, h, l);
        f = k;
      }
    }
  }
  if (Qb) throw a = Rb, Qb = !1, Rb = null, a;
}
function D(a, b) {
  var c = b[of];
  void 0 === c && (c = b[of] = new Set());
  var d = a + "__bubble";
  c.has(d) || (pf(b, a, 2, !1), c.add(d));
}
function qf(a, b, c) {
  var d = 0;
  b && (d |= 4);
  pf(c, a, d, b);
}
var rf = "_reactListening" + Math.random().toString(36).slice(2);
function sf(a) {
  if (!a[rf]) {
    a[rf] = !0;
    da.forEach(function (b) {
      "selectionchange" !== b && (mf.has(b) || qf(b, !1, a), qf(b, !0, a));
    });
    var b = 9 === a.nodeType ? a : a.ownerDocument;
    null === b || b[rf] || (b[rf] = !0, qf("selectionchange", !1, b));
  }
}
function pf(a, b, c, d) {
  switch (jd(b)) {
    case 1:
      var e = ed;
      break;
    case 4:
      e = gd;
      break;
    default:
      e = fd;
  }
  c = e.bind(null, b, c, a);
  e = void 0;
  !Lb || "touchstart" !== b && "touchmove" !== b && "wheel" !== b || (e = !0);
  d ? void 0 !== e ? a.addEventListener(b, c, {
    capture: !0,
    passive: e
  }) : a.addEventListener(b, c, !0) : void 0 !== e ? a.addEventListener(b, c, {
    passive: e
  }) : a.addEventListener(b, c, !1);
}
function hd(a, b, c, d, e) {
  var f = d;
  if (0 === (b & 1) && 0 === (b & 2) && null !== d) a: for (;;) {
    if (null === d) return;
    var g = d.tag;
    if (3 === g || 4 === g) {
      var h = d.stateNode.containerInfo;
      if (h === e || 8 === h.nodeType && h.parentNode === e) break;
      if (4 === g) for (g = d.return; null !== g;) {
        var k = g.tag;
        if (3 === k || 4 === k) if (k = g.stateNode.containerInfo, k === e || 8 === k.nodeType && k.parentNode === e) return;
        g = g.return;
      }
      for (; null !== h;) {
        g = Wc(h);
        if (null === g) return;
        k = g.tag;
        if (5 === k || 6 === k) {
          d = f = g;
          continue a;
        }
        h = h.parentNode;
      }
    }
    d = d.return;
  }
  Jb(function () {
    var d = f,
      e = xb(c),
      g = [];
    a: {
      var h = df.get(a);
      if (void 0 !== h) {
        var k = td,
          n = a;
        switch (a) {
          case "keypress":
            if (0 === od(c)) break a;
          case "keydown":
          case "keyup":
            k = Rd;
            break;
          case "focusin":
            n = "focus";
            k = Fd;
            break;
          case "focusout":
            n = "blur";
            k = Fd;
            break;
          case "beforeblur":
          case "afterblur":
            k = Fd;
            break;
          case "click":
            if (2 === c.button) break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k = Bd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k = Dd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k = Vd;
            break;
          case $e:
          case af:
          case bf:
            k = Hd;
            break;
          case cf:
            k = Xd;
            break;
          case "scroll":
            k = vd;
            break;
          case "wheel":
            k = Zd;
            break;
          case "copy":
          case "cut":
          case "paste":
            k = Jd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k = Td;
        }
        var t = 0 !== (b & 4),
          J = !t && "scroll" === a,
          x = t ? null !== h ? h + "Capture" : null : h;
        t = [];
        for (var w = d, u; null !== w;) {
          u = w;
          var F = u.stateNode;
          5 === u.tag && null !== F && (u = F, null !== x && (F = Kb(w, x), null != F && t.push(tf(w, F, u))));
          if (J) break;
          w = w.return;
        }
        0 < t.length && (h = new k(h, n, null, c, e), g.push({
          event: h,
          listeners: t
        }));
      }
    }
    if (0 === (b & 7)) {
      a: {
        h = "mouseover" === a || "pointerover" === a;
        k = "mouseout" === a || "pointerout" === a;
        if (h && c !== wb && (n = c.relatedTarget || c.fromElement) && (Wc(n) || n[uf])) break a;
        if (k || h) {
          h = e.window === e ? e : (h = e.ownerDocument) ? h.defaultView || h.parentWindow : window;
          if (k) {
            if (n = c.relatedTarget || c.toElement, k = d, n = n ? Wc(n) : null, null !== n && (J = Vb(n), n !== J || 5 !== n.tag && 6 !== n.tag)) n = null;
          } else k = null, n = d;
          if (k !== n) {
            t = Bd;
            F = "onMouseLeave";
            x = "onMouseEnter";
            w = "mouse";
            if ("pointerout" === a || "pointerover" === a) t = Td, F = "onPointerLeave", x = "onPointerEnter", w = "pointer";
            J = null == k ? h : ue(k);
            u = null == n ? h : ue(n);
            h = new t(F, w + "leave", k, c, e);
            h.target = J;
            h.relatedTarget = u;
            F = null;
            Wc(e) === d && (t = new t(x, w + "enter", n, c, e), t.target = u, t.relatedTarget = J, F = t);
            J = F;
            if (k && n) b: {
              t = k;
              x = n;
              w = 0;
              for (u = t; u; u = vf(u)) w++;
              u = 0;
              for (F = x; F; F = vf(F)) u++;
              for (; 0 < w - u;) t = vf(t), w--;
              for (; 0 < u - w;) x = vf(x), u--;
              for (; w--;) {
                if (t === x || null !== x && t === x.alternate) break b;
                t = vf(t);
                x = vf(x);
              }
              t = null;
            } else t = null;
            null !== k && wf(g, h, k, t, !1);
            null !== n && null !== J && wf(g, J, n, t, !0);
          }
        }
      }
      a: {
        h = d ? ue(d) : window;
        k = h.nodeName && h.nodeName.toLowerCase();
        if ("select" === k || "input" === k && "file" === h.type) var na = ve;else if (me(h)) {
          if (we) na = Fe;else {
            na = De;
            var xa = Ce;
          }
        } else (k = h.nodeName) && "input" === k.toLowerCase() && ("checkbox" === h.type || "radio" === h.type) && (na = Ee);
        if (na && (na = na(a, d))) {
          ne(g, na, c, e);
          break a;
        }
        xa && xa(a, h, d);
        "focusout" === a && (xa = h._wrapperState) && xa.controlled && "number" === h.type && cb(h, "number", h.value);
      }
      xa = d ? ue(d) : window;
      switch (a) {
        case "focusin":
          if (me(xa) || "true" === xa.contentEditable) Qe = xa, Re = d, Se = null;
          break;
        case "focusout":
          Se = Re = Qe = null;
          break;
        case "mousedown":
          Te = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Te = !1;
          Ue(g, c, e);
          break;
        case "selectionchange":
          if (Pe) break;
        case "keydown":
        case "keyup":
          Ue(g, c, e);
      }
      var $a;
      if (ae) b: {
        switch (a) {
          case "compositionstart":
            var ba = "onCompositionStart";
            break b;
          case "compositionend":
            ba = "onCompositionEnd";
            break b;
          case "compositionupdate":
            ba = "onCompositionUpdate";
            break b;
        }
        ba = void 0;
      } else ie ? ge(a, c) && (ba = "onCompositionEnd") : "keydown" === a && 229 === c.keyCode && (ba = "onCompositionStart");
      ba && (de && "ko" !== c.locale && (ie || "onCompositionStart" !== ba ? "onCompositionEnd" === ba && ie && ($a = nd()) : (kd = e, ld = "value" in kd ? kd.value : kd.textContent, ie = !0)), xa = oe(d, ba), 0 < xa.length && (ba = new Ld(ba, a, null, c, e), g.push({
        event: ba,
        listeners: xa
      }), $a ? ba.data = $a : ($a = he(c), null !== $a && (ba.data = $a))));
      if ($a = ce ? je(a, c) : ke(a, c)) d = oe(d, "onBeforeInput"), 0 < d.length && (e = new Ld("onBeforeInput", "beforeinput", null, c, e), g.push({
        event: e,
        listeners: d
      }), e.data = $a);
    }
    se(g, b);
  });
}
function tf(a, b, c) {
  return {
    instance: a,
    listener: b,
    currentTarget: c
  };
}
function oe(a, b) {
  for (var c = b + "Capture", d = []; null !== a;) {
    var e = a,
      f = e.stateNode;
    5 === e.tag && null !== f && (e = f, f = Kb(a, c), null != f && d.unshift(tf(a, f, e)), f = Kb(a, b), null != f && d.push(tf(a, f, e)));
    a = a.return;
  }
  return d;
}
function vf(a) {
  if (null === a) return null;
  do a = a.return; while (a && 5 !== a.tag);
  return a ? a : null;
}
function wf(a, b, c, d, e) {
  for (var f = b._reactName, g = []; null !== c && c !== d;) {
    var h = c,
      k = h.alternate,
      l = h.stateNode;
    if (null !== k && k === d) break;
    5 === h.tag && null !== l && (h = l, e ? (k = Kb(c, f), null != k && g.unshift(tf(c, k, h))) : e || (k = Kb(c, f), null != k && g.push(tf(c, k, h))));
    c = c.return;
  }
  0 !== g.length && a.push({
    event: b,
    listeners: g
  });
}
var xf = /\r\n?/g,
  yf = /\u0000|\uFFFD/g;
function zf(a) {
  return ("string" === typeof a ? a : "" + a).replace(xf, "\n").replace(yf, "");
}
function Af(a, b, c) {
  b = zf(b);
  if (zf(a) !== b && c) throw Error(p(425));
}
function Bf() {}
var Cf = null,
  Df = null;
function Ef(a, b) {
  return "textarea" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
}
var Ff = "function" === typeof setTimeout ? setTimeout : void 0,
  Gf = "function" === typeof clearTimeout ? clearTimeout : void 0,
  Hf = "function" === typeof Promise ? Promise : void 0,
  Jf = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof Hf ? function (a) {
    return Hf.resolve(null).then(a).catch(If);
  } : Ff;
function If(a) {
  setTimeout(function () {
    throw a;
  });
}
function Kf(a, b) {
  var c = b,
    d = 0;
  do {
    var e = c.nextSibling;
    a.removeChild(c);
    if (e && 8 === e.nodeType) if (c = e.data, "/$" === c) {
      if (0 === d) {
        a.removeChild(e);
        bd(b);
        return;
      }
      d--;
    } else "$" !== c && "$?" !== c && "$!" !== c || d++;
    c = e;
  } while (c);
  bd(b);
}
function Lf(a) {
  for (; null != a; a = a.nextSibling) {
    var b = a.nodeType;
    if (1 === b || 3 === b) break;
    if (8 === b) {
      b = a.data;
      if ("$" === b || "$!" === b || "$?" === b) break;
      if ("/$" === b) return null;
    }
  }
  return a;
}
function Mf(a) {
  a = a.previousSibling;
  for (var b = 0; a;) {
    if (8 === a.nodeType) {
      var c = a.data;
      if ("$" === c || "$!" === c || "$?" === c) {
        if (0 === b) return a;
        b--;
      } else "/$" === c && b++;
    }
    a = a.previousSibling;
  }
  return null;
}
var Nf = Math.random().toString(36).slice(2),
  Of = "__reactFiber$" + Nf,
  Pf = "__reactProps$" + Nf,
  uf = "__reactContainer$" + Nf,
  of = "__reactEvents$" + Nf,
  Qf = "__reactListeners$" + Nf,
  Rf = "__reactHandles$" + Nf;
function Wc(a) {
  var b = a[Of];
  if (b) return b;
  for (var c = a.parentNode; c;) {
    if (b = c[uf] || c[Of]) {
      c = b.alternate;
      if (null !== b.child || null !== c && null !== c.child) for (a = Mf(a); null !== a;) {
        if (c = a[Of]) return c;
        a = Mf(a);
      }
      return b;
    }
    a = c;
    c = a.parentNode;
  }
  return null;
}
function Cb(a) {
  a = a[Of] || a[uf];
  return !a || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;
}
function ue(a) {
  if (5 === a.tag || 6 === a.tag) return a.stateNode;
  throw Error(p(33));
}
function Db(a) {
  return a[Pf] || null;
}
var Sf = [],
  Tf = -1;
function Uf(a) {
  return {
    current: a
  };
}
function E(a) {
  0 > Tf || (a.current = Sf[Tf], Sf[Tf] = null, Tf--);
}
function G(a, b) {
  Tf++;
  Sf[Tf] = a.current;
  a.current = b;
}
var Vf = {},
  H = Uf(Vf),
  Wf = Uf(!1),
  Xf = Vf;
function Yf(a, b) {
  var c = a.type.contextTypes;
  if (!c) return Vf;
  var d = a.stateNode;
  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;
  var e = {},
    f;
  for (f in c) e[f] = b[f];
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);
  return e;
}
function Zf(a) {
  a = a.childContextTypes;
  return null !== a && void 0 !== a;
}
function $f() {
  E(Wf);
  E(H);
}
function ag(a, b, c) {
  if (H.current !== Vf) throw Error(p(168));
  G(H, b);
  G(Wf, c);
}
function bg(a, b, c) {
  var d = a.stateNode;
  b = b.childContextTypes;
  if ("function" !== typeof d.getChildContext) return c;
  d = d.getChildContext();
  for (var e in d) if (!(e in b)) throw Error(p(108, Ra(a) || "Unknown", e));
  return A({}, c, d);
}
function cg(a) {
  a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Vf;
  Xf = H.current;
  G(H, a);
  G(Wf, Wf.current);
  return !0;
}
function dg(a, b, c) {
  var d = a.stateNode;
  if (!d) throw Error(p(169));
  c ? (a = bg(a, b, Xf), d.__reactInternalMemoizedMergedChildContext = a, E(Wf), E(H), G(H, a)) : E(Wf);
  G(Wf, c);
}
var eg = null,
  fg = !1,
  gg = !1;
function hg(a) {
  null === eg ? eg = [a] : eg.push(a);
}
function ig(a) {
  fg = !0;
  hg(a);
}
function jg() {
  if (!gg && null !== eg) {
    gg = !0;
    var a = 0,
      b = C;
    try {
      var c = eg;
      for (C = 1; a < c.length; a++) {
        var d = c[a];
        do d = d(!0); while (null !== d);
      }
      eg = null;
      fg = !1;
    } catch (e) {
      throw null !== eg && (eg = eg.slice(a + 1)), ac(fc, jg), e;
    } finally {
      C = b, gg = !1;
    }
  }
  return null;
}
var kg = [],
  lg = 0,
  mg = null,
  ng = 0,
  og = [],
  pg = 0,
  qg = null,
  rg = 1,
  sg = "";
function tg(a, b) {
  kg[lg++] = ng;
  kg[lg++] = mg;
  mg = a;
  ng = b;
}
function ug(a, b, c) {
  og[pg++] = rg;
  og[pg++] = sg;
  og[pg++] = qg;
  qg = a;
  var d = rg;
  a = sg;
  var e = 32 - oc(d) - 1;
  d &= ~(1 << e);
  c += 1;
  var f = 32 - oc(b) + e;
  if (30 < f) {
    var g = e - e % 5;
    f = (d & (1 << g) - 1).toString(32);
    d >>= g;
    e -= g;
    rg = 1 << 32 - oc(b) + e | c << e | d;
    sg = f + a;
  } else rg = 1 << f | c << e | d, sg = a;
}
function vg(a) {
  null !== a.return && (tg(a, 1), ug(a, 1, 0));
}
function wg(a) {
  for (; a === mg;) mg = kg[--lg], kg[lg] = null, ng = kg[--lg], kg[lg] = null;
  for (; a === qg;) qg = og[--pg], og[pg] = null, sg = og[--pg], og[pg] = null, rg = og[--pg], og[pg] = null;
}
var xg = null,
  yg = null,
  I = !1,
  zg = null;
function Ag(a, b) {
  var c = Bg(5, null, null, 0);
  c.elementType = "DELETED";
  c.stateNode = b;
  c.return = a;
  b = a.deletions;
  null === b ? (a.deletions = [c], a.flags |= 16) : b.push(c);
}
function Cg(a, b) {
  switch (a.tag) {
    case 5:
      var c = a.type;
      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;
      return null !== b ? (a.stateNode = b, xg = a, yg = Lf(b.firstChild), !0) : !1;
    case 6:
      return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, xg = a, yg = null, !0) : !1;
    case 13:
      return b = 8 !== b.nodeType ? null : b, null !== b ? (c = null !== qg ? {
        id: rg,
        overflow: sg
      } : null, a.memoizedState = {
        dehydrated: b,
        treeContext: c,
        retryLane: 1073741824
      }, c = Bg(18, null, null, 0), c.stateNode = b, c.return = a, a.child = c, xg = a, yg = null, !0) : !1;
    default:
      return !1;
  }
}
function Dg(a) {
  return 0 !== (a.mode & 1) && 0 === (a.flags & 128);
}
function Eg(a) {
  if (I) {
    var b = yg;
    if (b) {
      var c = b;
      if (!Cg(a, b)) {
        if (Dg(a)) throw Error(p(418));
        b = Lf(c.nextSibling);
        var d = xg;
        b && Cg(a, b) ? Ag(d, c) : (a.flags = a.flags & -4097 | 2, I = !1, xg = a);
      }
    } else {
      if (Dg(a)) throw Error(p(418));
      a.flags = a.flags & -4097 | 2;
      I = !1;
      xg = a;
    }
  }
}
function Fg(a) {
  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag;) a = a.return;
  xg = a;
}
function Gg(a) {
  if (a !== xg) return !1;
  if (!I) return Fg(a), I = !0, !1;
  var b;
  (b = 3 !== a.tag) && !(b = 5 !== a.tag) && (b = a.type, b = "head" !== b && "body" !== b && !Ef(a.type, a.memoizedProps));
  if (b && (b = yg)) {
    if (Dg(a)) throw Hg(), Error(p(418));
    for (; b;) Ag(a, b), b = Lf(b.nextSibling);
  }
  Fg(a);
  if (13 === a.tag) {
    a = a.memoizedState;
    a = null !== a ? a.dehydrated : null;
    if (!a) throw Error(p(317));
    a: {
      a = a.nextSibling;
      for (b = 0; a;) {
        if (8 === a.nodeType) {
          var c = a.data;
          if ("/$" === c) {
            if (0 === b) {
              yg = Lf(a.nextSibling);
              break a;
            }
            b--;
          } else "$" !== c && "$!" !== c && "$?" !== c || b++;
        }
        a = a.nextSibling;
      }
      yg = null;
    }
  } else yg = xg ? Lf(a.stateNode.nextSibling) : null;
  return !0;
}
function Hg() {
  for (var a = yg; a;) a = Lf(a.nextSibling);
}
function Ig() {
  yg = xg = null;
  I = !1;
}
function Jg(a) {
  null === zg ? zg = [a] : zg.push(a);
}
var Kg = ua.ReactCurrentBatchConfig;
function Lg(a, b) {
  if (a && a.defaultProps) {
    b = A({}, b);
    a = a.defaultProps;
    for (var c in a) void 0 === b[c] && (b[c] = a[c]);
    return b;
  }
  return b;
}
var Mg = Uf(null),
  Ng = null,
  Og = null,
  Pg = null;
function Qg() {
  Pg = Og = Ng = null;
}
function Rg(a) {
  var b = Mg.current;
  E(Mg);
  a._currentValue = b;
}
function Sg(a, b, c) {
  for (; null !== a;) {
    var d = a.alternate;
    (a.childLanes & b) !== b ? (a.childLanes |= b, null !== d && (d.childLanes |= b)) : null !== d && (d.childLanes & b) !== b && (d.childLanes |= b);
    if (a === c) break;
    a = a.return;
  }
}
function Tg(a, b) {
  Ng = a;
  Pg = Og = null;
  a = a.dependencies;
  null !== a && null !== a.firstContext && (0 !== (a.lanes & b) && (Ug = !0), a.firstContext = null);
}
function Vg(a) {
  var b = a._currentValue;
  if (Pg !== a) if (a = {
    context: a,
    memoizedValue: b,
    next: null
  }, null === Og) {
    if (null === Ng) throw Error(p(308));
    Og = a;
    Ng.dependencies = {
      lanes: 0,
      firstContext: a
    };
  } else Og = Og.next = a;
  return b;
}
var Wg = null;
function Xg(a) {
  null === Wg ? Wg = [a] : Wg.push(a);
}
function Yg(a, b, c, d) {
  var e = b.interleaved;
  null === e ? (c.next = c, Xg(b)) : (c.next = e.next, e.next = c);
  b.interleaved = c;
  return Zg(a, d);
}
function Zg(a, b) {
  a.lanes |= b;
  var c = a.alternate;
  null !== c && (c.lanes |= b);
  c = a;
  for (a = a.return; null !== a;) a.childLanes |= b, c = a.alternate, null !== c && (c.childLanes |= b), c = a, a = a.return;
  return 3 === c.tag ? c.stateNode : null;
}
var $g = !1;
function ah(a) {
  a.updateQueue = {
    baseState: a.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: {
      pending: null,
      interleaved: null,
      lanes: 0
    },
    effects: null
  };
}
function bh(a, b) {
  a = a.updateQueue;
  b.updateQueue === a && (b.updateQueue = {
    baseState: a.baseState,
    firstBaseUpdate: a.firstBaseUpdate,
    lastBaseUpdate: a.lastBaseUpdate,
    shared: a.shared,
    effects: a.effects
  });
}
function ch(a, b) {
  return {
    eventTime: a,
    lane: b,
    tag: 0,
    payload: null,
    callback: null,
    next: null
  };
}
function dh(a, b, c) {
  var d = a.updateQueue;
  if (null === d) return null;
  d = d.shared;
  if (0 !== (K & 2)) {
    var e = d.pending;
    null === e ? b.next = b : (b.next = e.next, e.next = b);
    d.pending = b;
    return Zg(a, c);
  }
  e = d.interleaved;
  null === e ? (b.next = b, Xg(d)) : (b.next = e.next, e.next = b);
  d.interleaved = b;
  return Zg(a, c);
}
function eh(a, b, c) {
  b = b.updateQueue;
  if (null !== b && (b = b.shared, 0 !== (c & 4194240))) {
    var d = b.lanes;
    d &= a.pendingLanes;
    c |= d;
    b.lanes = c;
    Cc(a, c);
  }
}
function fh(a, b) {
  var c = a.updateQueue,
    d = a.alternate;
  if (null !== d && (d = d.updateQueue, c === d)) {
    var e = null,
      f = null;
    c = c.firstBaseUpdate;
    if (null !== c) {
      do {
        var g = {
          eventTime: c.eventTime,
          lane: c.lane,
          tag: c.tag,
          payload: c.payload,
          callback: c.callback,
          next: null
        };
        null === f ? e = f = g : f = f.next = g;
        c = c.next;
      } while (null !== c);
      null === f ? e = f = b : f = f.next = b;
    } else e = f = b;
    c = {
      baseState: d.baseState,
      firstBaseUpdate: e,
      lastBaseUpdate: f,
      shared: d.shared,
      effects: d.effects
    };
    a.updateQueue = c;
    return;
  }
  a = c.lastBaseUpdate;
  null === a ? c.firstBaseUpdate = b : a.next = b;
  c.lastBaseUpdate = b;
}
function gh(a, b, c, d) {
  var e = a.updateQueue;
  $g = !1;
  var f = e.firstBaseUpdate,
    g = e.lastBaseUpdate,
    h = e.shared.pending;
  if (null !== h) {
    e.shared.pending = null;
    var k = h,
      l = k.next;
    k.next = null;
    null === g ? f = l : g.next = l;
    g = k;
    var m = a.alternate;
    null !== m && (m = m.updateQueue, h = m.lastBaseUpdate, h !== g && (null === h ? m.firstBaseUpdate = l : h.next = l, m.lastBaseUpdate = k));
  }
  if (null !== f) {
    var q = e.baseState;
    g = 0;
    m = l = k = null;
    h = f;
    do {
      var r = h.lane,
        y = h.eventTime;
      if ((d & r) === r) {
        null !== m && (m = m.next = {
          eventTime: y,
          lane: 0,
          tag: h.tag,
          payload: h.payload,
          callback: h.callback,
          next: null
        });
        a: {
          var n = a,
            t = h;
          r = b;
          y = c;
          switch (t.tag) {
            case 1:
              n = t.payload;
              if ("function" === typeof n) {
                q = n.call(y, q, r);
                break a;
              }
              q = n;
              break a;
            case 3:
              n.flags = n.flags & -65537 | 128;
            case 0:
              n = t.payload;
              r = "function" === typeof n ? n.call(y, q, r) : n;
              if (null === r || void 0 === r) break a;
              q = A({}, q, r);
              break a;
            case 2:
              $g = !0;
          }
        }
        null !== h.callback && 0 !== h.lane && (a.flags |= 64, r = e.effects, null === r ? e.effects = [h] : r.push(h));
      } else y = {
        eventTime: y,
        lane: r,
        tag: h.tag,
        payload: h.payload,
        callback: h.callback,
        next: null
      }, null === m ? (l = m = y, k = q) : m = m.next = y, g |= r;
      h = h.next;
      if (null === h) if (h = e.shared.pending, null === h) break;else r = h, h = r.next, r.next = null, e.lastBaseUpdate = r, e.shared.pending = null;
    } while (1);
    null === m && (k = q);
    e.baseState = k;
    e.firstBaseUpdate = l;
    e.lastBaseUpdate = m;
    b = e.shared.interleaved;
    if (null !== b) {
      e = b;
      do g |= e.lane, e = e.next; while (e !== b);
    } else null === f && (e.shared.lanes = 0);
    hh |= g;
    a.lanes = g;
    a.memoizedState = q;
  }
}
function ih(a, b, c) {
  a = b.effects;
  b.effects = null;
  if (null !== a) for (b = 0; b < a.length; b++) {
    var d = a[b],
      e = d.callback;
    if (null !== e) {
      d.callback = null;
      d = c;
      if ("function" !== typeof e) throw Error(p(191, e));
      e.call(d);
    }
  }
}
var jh = new aa.Component().refs;
function kh(a, b, c, d) {
  b = a.memoizedState;
  c = c(d, b);
  c = null === c || void 0 === c ? b : A({}, b, c);
  a.memoizedState = c;
  0 === a.lanes && (a.updateQueue.baseState = c);
}
var nh = {
  isMounted: function isMounted(a) {
    return (a = a._reactInternals) ? Vb(a) === a : !1;
  },
  enqueueSetState: function enqueueSetState(a, b, c) {
    a = a._reactInternals;
    var d = L(),
      e = lh(a),
      f = ch(d, e);
    f.payload = b;
    void 0 !== c && null !== c && (f.callback = c);
    b = dh(a, f, e);
    null !== b && (mh(b, a, e, d), eh(b, a, e));
  },
  enqueueReplaceState: function enqueueReplaceState(a, b, c) {
    a = a._reactInternals;
    var d = L(),
      e = lh(a),
      f = ch(d, e);
    f.tag = 1;
    f.payload = b;
    void 0 !== c && null !== c && (f.callback = c);
    b = dh(a, f, e);
    null !== b && (mh(b, a, e, d), eh(b, a, e));
  },
  enqueueForceUpdate: function enqueueForceUpdate(a, b) {
    a = a._reactInternals;
    var c = L(),
      d = lh(a),
      e = ch(c, d);
    e.tag = 2;
    void 0 !== b && null !== b && (e.callback = b);
    b = dh(a, e, d);
    null !== b && (mh(b, a, d, c), eh(b, a, d));
  }
};
function oh(a, b, c, d, e, f, g) {
  a = a.stateNode;
  return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !Ie(c, d) || !Ie(e, f) : !0;
}
function ph(a, b, c) {
  var d = !1,
    e = Vf;
  var f = b.contextType;
  "object" === typeof f && null !== f ? f = Vg(f) : (e = Zf(b) ? Xf : H.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Yf(a, e) : Vf);
  b = new b(c, f);
  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
  b.updater = nh;
  a.stateNode = b;
  b._reactInternals = a;
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);
  return b;
}
function qh(a, b, c, d) {
  a = b.state;
  "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
  "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
  b.state !== a && nh.enqueueReplaceState(b, b.state, null);
}
function rh(a, b, c, d) {
  var e = a.stateNode;
  e.props = c;
  e.state = a.memoizedState;
  e.refs = jh;
  ah(a);
  var f = b.contextType;
  "object" === typeof f && null !== f ? e.context = Vg(f) : (f = Zf(b) ? Xf : H.current, e.context = Yf(a, f));
  e.state = a.memoizedState;
  f = b.getDerivedStateFromProps;
  "function" === typeof f && (kh(a, b, f, c), e.state = a.memoizedState);
  "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && nh.enqueueReplaceState(e, e.state, null), gh(a, c, e, d), e.state = a.memoizedState);
  "function" === typeof e.componentDidMount && (a.flags |= 4194308);
}
function sh(a, b, c) {
  a = c.ref;
  if (null !== a && "function" !== typeof a && "object" !== typeof a) {
    if (c._owner) {
      c = c._owner;
      if (c) {
        if (1 !== c.tag) throw Error(p(309));
        var d = c.stateNode;
      }
      if (!d) throw Error(p(147, a));
      var e = d,
        f = "" + a;
      if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === f) return b.ref;
      b = function b(a) {
        var b = e.refs;
        b === jh && (b = e.refs = {});
        null === a ? delete b[f] : b[f] = a;
      };
      b._stringRef = f;
      return b;
    }
    if ("string" !== typeof a) throw Error(p(284));
    if (!c._owner) throw Error(p(290, a));
  }
  return a;
}
function th(a, b) {
  a = Object.prototype.toString.call(b);
  throw Error(p(31, "[object Object]" === a ? "object with keys {" + Object.keys(b).join(", ") + "}" : a));
}
function uh(a) {
  var b = a._init;
  return b(a._payload);
}
function vh(a) {
  function b(b, c) {
    if (a) {
      var d = b.deletions;
      null === d ? (b.deletions = [c], b.flags |= 16) : d.push(c);
    }
  }
  function c(c, d) {
    if (!a) return null;
    for (; null !== d;) b(c, d), d = d.sibling;
    return null;
  }
  function d(a, b) {
    for (a = new Map(); null !== b;) null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;
    return a;
  }
  function e(a, b) {
    a = wh(a, b);
    a.index = 0;
    a.sibling = null;
    return a;
  }
  function f(b, c, d) {
    b.index = d;
    if (!a) return b.flags |= 1048576, c;
    d = b.alternate;
    if (null !== d) return d = d.index, d < c ? (b.flags |= 2, c) : d;
    b.flags |= 2;
    return c;
  }
  function g(b) {
    a && null === b.alternate && (b.flags |= 2);
    return b;
  }
  function h(a, b, c, d) {
    if (null === b || 6 !== b.tag) return b = xh(c, a.mode, d), b.return = a, b;
    b = e(b, c);
    b.return = a;
    return b;
  }
  function k(a, b, c, d) {
    var f = c.type;
    if (f === ya) return m(a, b, c.props.children, d, c.key);
    if (null !== b && (b.elementType === f || "object" === typeof f && null !== f && f.$$typeof === Ha && uh(f) === b.type)) return d = e(b, c.props), d.ref = sh(a, b, c), d.return = a, d;
    d = yh(c.type, c.key, c.props, null, a.mode, d);
    d.ref = sh(a, b, c);
    d.return = a;
    return d;
  }
  function l(a, b, c, d) {
    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = zh(c, a.mode, d), b.return = a, b;
    b = e(b, c.children || []);
    b.return = a;
    return b;
  }
  function m(a, b, c, d, f) {
    if (null === b || 7 !== b.tag) return b = Ah(c, a.mode, d, f), b.return = a, b;
    b = e(b, c);
    b.return = a;
    return b;
  }
  function q(a, b, c) {
    if ("string" === typeof b && "" !== b || "number" === typeof b) return b = xh("" + b, a.mode, c), b.return = a, b;
    if ("object" === typeof b && null !== b) {
      switch (b.$$typeof) {
        case va:
          return c = yh(b.type, b.key, b.props, null, a.mode, c), c.ref = sh(a, null, b), c.return = a, c;
        case wa:
          return b = zh(b, a.mode, c), b.return = a, b;
        case Ha:
          var d = b._init;
          return q(a, d(b._payload), c);
      }
      if (eb(b) || Ka(b)) return b = Ah(b, a.mode, c, null), b.return = a, b;
      th(a, b);
    }
    return null;
  }
  function r(a, b, c, d) {
    var e = null !== b ? b.key : null;
    if ("string" === typeof c && "" !== c || "number" === typeof c) return null !== e ? null : h(a, b, "" + c, d);
    if ("object" === typeof c && null !== c) {
      switch (c.$$typeof) {
        case va:
          return c.key === e ? k(a, b, c, d) : null;
        case wa:
          return c.key === e ? l(a, b, c, d) : null;
        case Ha:
          return e = c._init, r(a, b, e(c._payload), d);
      }
      if (eb(c) || Ka(c)) return null !== e ? null : m(a, b, c, d, null);
      th(a, c);
    }
    return null;
  }
  function y(a, b, c, d, e) {
    if ("string" === typeof d && "" !== d || "number" === typeof d) return a = a.get(c) || null, h(b, a, "" + d, e);
    if ("object" === typeof d && null !== d) {
      switch (d.$$typeof) {
        case va:
          return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);
        case wa:
          return a = a.get(null === d.key ? c : d.key) || null, l(b, a, d, e);
        case Ha:
          var f = d._init;
          return y(a, b, c, f(d._payload), e);
      }
      if (eb(d) || Ka(d)) return a = a.get(c) || null, m(b, a, d, e, null);
      th(b, d);
    }
    return null;
  }
  function n(e, g, h, k) {
    for (var l = null, m = null, u = g, w = g = 0, x = null; null !== u && w < h.length; w++) {
      u.index > w ? (x = u, u = null) : x = u.sibling;
      var n = r(e, u, h[w], k);
      if (null === n) {
        null === u && (u = x);
        break;
      }
      a && u && null === n.alternate && b(e, u);
      g = f(n, g, w);
      null === m ? l = n : m.sibling = n;
      m = n;
      u = x;
    }
    if (w === h.length) return c(e, u), I && tg(e, w), l;
    if (null === u) {
      for (; w < h.length; w++) u = q(e, h[w], k), null !== u && (g = f(u, g, w), null === m ? l = u : m.sibling = u, m = u);
      I && tg(e, w);
      return l;
    }
    for (u = d(e, u); w < h.length; w++) x = y(u, e, w, h[w], k), null !== x && (a && null !== x.alternate && u.delete(null === x.key ? w : x.key), g = f(x, g, w), null === m ? l = x : m.sibling = x, m = x);
    a && u.forEach(function (a) {
      return b(e, a);
    });
    I && tg(e, w);
    return l;
  }
  function t(e, g, h, k) {
    var l = Ka(h);
    if ("function" !== typeof l) throw Error(p(150));
    h = l.call(h);
    if (null == h) throw Error(p(151));
    for (var u = l = null, m = g, w = g = 0, x = null, n = h.next(); null !== m && !n.done; w++, n = h.next()) {
      m.index > w ? (x = m, m = null) : x = m.sibling;
      var t = r(e, m, n.value, k);
      if (null === t) {
        null === m && (m = x);
        break;
      }
      a && m && null === t.alternate && b(e, m);
      g = f(t, g, w);
      null === u ? l = t : u.sibling = t;
      u = t;
      m = x;
    }
    if (n.done) return c(e, m), I && tg(e, w), l;
    if (null === m) {
      for (; !n.done; w++, n = h.next()) n = q(e, n.value, k), null !== n && (g = f(n, g, w), null === u ? l = n : u.sibling = n, u = n);
      I && tg(e, w);
      return l;
    }
    for (m = d(e, m); !n.done; w++, n = h.next()) n = y(m, e, w, n.value, k), null !== n && (a && null !== n.alternate && m.delete(null === n.key ? w : n.key), g = f(n, g, w), null === u ? l = n : u.sibling = n, u = n);
    a && m.forEach(function (a) {
      return b(e, a);
    });
    I && tg(e, w);
    return l;
  }
  function J(a, d, f, h) {
    "object" === typeof f && null !== f && f.type === ya && null === f.key && (f = f.props.children);
    if ("object" === typeof f && null !== f) {
      switch (f.$$typeof) {
        case va:
          a: {
            for (var k = f.key, l = d; null !== l;) {
              if (l.key === k) {
                k = f.type;
                if (k === ya) {
                  if (7 === l.tag) {
                    c(a, l.sibling);
                    d = e(l, f.props.children);
                    d.return = a;
                    a = d;
                    break a;
                  }
                } else if (l.elementType === k || "object" === typeof k && null !== k && k.$$typeof === Ha && uh(k) === l.type) {
                  c(a, l.sibling);
                  d = e(l, f.props);
                  d.ref = sh(a, l, f);
                  d.return = a;
                  a = d;
                  break a;
                }
                c(a, l);
                break;
              } else b(a, l);
              l = l.sibling;
            }
            f.type === ya ? (d = Ah(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = yh(f.type, f.key, f.props, null, a.mode, h), h.ref = sh(a, d, f), h.return = a, a = h);
          }
          return g(a);
        case wa:
          a: {
            for (l = f.key; null !== d;) {
              if (d.key === l) {
                if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {
                  c(a, d.sibling);
                  d = e(d, f.children || []);
                  d.return = a;
                  a = d;
                  break a;
                } else {
                  c(a, d);
                  break;
                }
              } else b(a, d);
              d = d.sibling;
            }
            d = zh(f, a.mode, h);
            d.return = a;
            a = d;
          }
          return g(a);
        case Ha:
          return l = f._init, J(a, d, l(f._payload), h);
      }
      if (eb(f)) return n(a, d, f, h);
      if (Ka(f)) return t(a, d, f, h);
      th(a, f);
    }
    return "string" === typeof f && "" !== f || "number" === typeof f ? (f = "" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f), d.return = a, a = d) : (c(a, d), d = xh(f, a.mode, h), d.return = a, a = d), g(a)) : c(a, d);
  }
  return J;
}
var Bh = vh(!0),
  Ch = vh(!1),
  Dh = {},
  Eh = Uf(Dh),
  Fh = Uf(Dh),
  Gh = Uf(Dh);
function Hh(a) {
  if (a === Dh) throw Error(p(174));
  return a;
}
function Ih(a, b) {
  G(Gh, b);
  G(Fh, a);
  G(Eh, Dh);
  a = b.nodeType;
  switch (a) {
    case 9:
    case 11:
      b = (b = b.documentElement) ? b.namespaceURI : lb(null, "");
      break;
    default:
      a = 8 === a ? b.parentNode : b, b = a.namespaceURI || null, a = a.tagName, b = lb(b, a);
  }
  E(Eh);
  G(Eh, b);
}
function Jh() {
  E(Eh);
  E(Fh);
  E(Gh);
}
function Kh(a) {
  Hh(Gh.current);
  var b = Hh(Eh.current);
  var c = lb(b, a.type);
  b !== c && (G(Fh, a), G(Eh, c));
}
function Lh(a) {
  Fh.current === a && (E(Eh), E(Fh));
}
var M = Uf(0);
function Mh(a) {
  for (var b = a; null !== b;) {
    if (13 === b.tag) {
      var c = b.memoizedState;
      if (null !== c && (c = c.dehydrated, null === c || "$?" === c.data || "$!" === c.data)) return b;
    } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
      if (0 !== (b.flags & 128)) return b;
    } else if (null !== b.child) {
      b.child.return = b;
      b = b.child;
      continue;
    }
    if (b === a) break;
    for (; null === b.sibling;) {
      if (null === b.return || b.return === a) return null;
      b = b.return;
    }
    b.sibling.return = b.return;
    b = b.sibling;
  }
  return null;
}
var Nh = [];
function Oh() {
  for (var a = 0; a < Nh.length; a++) Nh[a]._workInProgressVersionPrimary = null;
  Nh.length = 0;
}
var Ph = ua.ReactCurrentDispatcher,
  Qh = ua.ReactCurrentBatchConfig,
  Rh = 0,
  N = null,
  O = null,
  P = null,
  Sh = !1,
  Th = !1,
  Uh = 0,
  Vh = 0;
function Q() {
  throw Error(p(321));
}
function Wh(a, b) {
  if (null === b) return !1;
  for (var c = 0; c < b.length && c < a.length; c++) if (!He(a[c], b[c])) return !1;
  return !0;
}
function Xh(a, b, c, d, e, f) {
  Rh = f;
  N = b;
  b.memoizedState = null;
  b.updateQueue = null;
  b.lanes = 0;
  Ph.current = null === a || null === a.memoizedState ? Yh : Zh;
  a = c(d, e);
  if (Th) {
    f = 0;
    do {
      Th = !1;
      Uh = 0;
      if (25 <= f) throw Error(p(301));
      f += 1;
      P = O = null;
      b.updateQueue = null;
      Ph.current = $h;
      a = c(d, e);
    } while (Th);
  }
  Ph.current = ai;
  b = null !== O && null !== O.next;
  Rh = 0;
  P = O = N = null;
  Sh = !1;
  if (b) throw Error(p(300));
  return a;
}
function bi() {
  var a = 0 !== Uh;
  Uh = 0;
  return a;
}
function ci() {
  var a = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null
  };
  null === P ? N.memoizedState = P = a : P = P.next = a;
  return P;
}
function di() {
  if (null === O) {
    var a = N.alternate;
    a = null !== a ? a.memoizedState : null;
  } else a = O.next;
  var b = null === P ? N.memoizedState : P.next;
  if (null !== b) P = b, O = a;else {
    if (null === a) throw Error(p(310));
    O = a;
    a = {
      memoizedState: O.memoizedState,
      baseState: O.baseState,
      baseQueue: O.baseQueue,
      queue: O.queue,
      next: null
    };
    null === P ? N.memoizedState = P = a : P = P.next = a;
  }
  return P;
}
function ei(a, b) {
  return "function" === typeof b ? b(a) : b;
}
function fi(a) {
  var b = di(),
    c = b.queue;
  if (null === c) throw Error(p(311));
  c.lastRenderedReducer = a;
  var d = O,
    e = d.baseQueue,
    f = c.pending;
  if (null !== f) {
    if (null !== e) {
      var g = e.next;
      e.next = f.next;
      f.next = g;
    }
    d.baseQueue = e = f;
    c.pending = null;
  }
  if (null !== e) {
    f = e.next;
    d = d.baseState;
    var h = g = null,
      k = null,
      l = f;
    do {
      var m = l.lane;
      if ((Rh & m) === m) null !== k && (k = k.next = {
        lane: 0,
        action: l.action,
        hasEagerState: l.hasEagerState,
        eagerState: l.eagerState,
        next: null
      }), d = l.hasEagerState ? l.eagerState : a(d, l.action);else {
        var q = {
          lane: m,
          action: l.action,
          hasEagerState: l.hasEagerState,
          eagerState: l.eagerState,
          next: null
        };
        null === k ? (h = k = q, g = d) : k = k.next = q;
        N.lanes |= m;
        hh |= m;
      }
      l = l.next;
    } while (null !== l && l !== f);
    null === k ? g = d : k.next = h;
    He(d, b.memoizedState) || (Ug = !0);
    b.memoizedState = d;
    b.baseState = g;
    b.baseQueue = k;
    c.lastRenderedState = d;
  }
  a = c.interleaved;
  if (null !== a) {
    e = a;
    do f = e.lane, N.lanes |= f, hh |= f, e = e.next; while (e !== a);
  } else null === e && (c.lanes = 0);
  return [b.memoizedState, c.dispatch];
}
function gi(a) {
  var b = di(),
    c = b.queue;
  if (null === c) throw Error(p(311));
  c.lastRenderedReducer = a;
  var d = c.dispatch,
    e = c.pending,
    f = b.memoizedState;
  if (null !== e) {
    c.pending = null;
    var g = e = e.next;
    do f = a(f, g.action), g = g.next; while (g !== e);
    He(f, b.memoizedState) || (Ug = !0);
    b.memoizedState = f;
    null === b.baseQueue && (b.baseState = f);
    c.lastRenderedState = f;
  }
  return [f, d];
}
function hi() {}
function ii(a, b) {
  var c = N,
    d = di(),
    e = b(),
    f = !He(d.memoizedState, e);
  f && (d.memoizedState = e, Ug = !0);
  d = d.queue;
  ji(ki.bind(null, c, d, a), [a]);
  if (d.getSnapshot !== b || f || null !== P && P.memoizedState.tag & 1) {
    c.flags |= 2048;
    li(9, mi.bind(null, c, d, e, b), void 0, null);
    if (null === R) throw Error(p(349));
    0 !== (Rh & 30) || ni(c, b, e);
  }
  return e;
}
function ni(a, b, c) {
  a.flags |= 16384;
  a = {
    getSnapshot: b,
    value: c
  };
  b = N.updateQueue;
  null === b ? (b = {
    lastEffect: null,
    stores: null
  }, N.updateQueue = b, b.stores = [a]) : (c = b.stores, null === c ? b.stores = [a] : c.push(a));
}
function mi(a, b, c, d) {
  b.value = c;
  b.getSnapshot = d;
  oi(b) && pi(a);
}
function ki(a, b, c) {
  return c(function () {
    oi(b) && pi(a);
  });
}
function oi(a) {
  var b = a.getSnapshot;
  a = a.value;
  try {
    var c = b();
    return !He(a, c);
  } catch (d) {
    return !0;
  }
}
function pi(a) {
  var b = Zg(a, 1);
  null !== b && mh(b, a, 1, -1);
}
function qi(a) {
  var b = ci();
  "function" === typeof a && (a = a());
  b.memoizedState = b.baseState = a;
  a = {
    pending: null,
    interleaved: null,
    lanes: 0,
    dispatch: null,
    lastRenderedReducer: ei,
    lastRenderedState: a
  };
  b.queue = a;
  a = a.dispatch = ri.bind(null, N, a);
  return [b.memoizedState, a];
}
function li(a, b, c, d) {
  a = {
    tag: a,
    create: b,
    destroy: c,
    deps: d,
    next: null
  };
  b = N.updateQueue;
  null === b ? (b = {
    lastEffect: null,
    stores: null
  }, N.updateQueue = b, b.lastEffect = a.next = a) : (c = b.lastEffect, null === c ? b.lastEffect = a.next = a : (d = c.next, c.next = a, a.next = d, b.lastEffect = a));
  return a;
}
function si() {
  return di().memoizedState;
}
function ti(a, b, c, d) {
  var e = ci();
  N.flags |= a;
  e.memoizedState = li(1 | b, c, void 0, void 0 === d ? null : d);
}
function ui(a, b, c, d) {
  var e = di();
  d = void 0 === d ? null : d;
  var f = void 0;
  if (null !== O) {
    var g = O.memoizedState;
    f = g.destroy;
    if (null !== d && Wh(d, g.deps)) {
      e.memoizedState = li(b, c, f, d);
      return;
    }
  }
  N.flags |= a;
  e.memoizedState = li(1 | b, c, f, d);
}
function vi(a, b) {
  return ti(8390656, 8, a, b);
}
function ji(a, b) {
  return ui(2048, 8, a, b);
}
function wi(a, b) {
  return ui(4, 2, a, b);
}
function xi(a, b) {
  return ui(4, 4, a, b);
}
function yi(a, b) {
  if ("function" === typeof b) return a = a(), b(a), function () {
    b(null);
  };
  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {
    b.current = null;
  };
}
function zi(a, b, c) {
  c = null !== c && void 0 !== c ? c.concat([a]) : null;
  return ui(4, 4, yi.bind(null, b, a), c);
}
function Ai() {}
function Bi(a, b) {
  var c = di();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Wh(b, d[1])) return d[0];
  c.memoizedState = [a, b];
  return a;
}
function Ci(a, b) {
  var c = di();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Wh(b, d[1])) return d[0];
  a = a();
  c.memoizedState = [a, b];
  return a;
}
function Di(a, b, c) {
  if (0 === (Rh & 21)) return a.baseState && (a.baseState = !1, Ug = !0), a.memoizedState = c;
  He(c, b) || (c = yc(), N.lanes |= c, hh |= c, a.baseState = !0);
  return b;
}
function Ei(a, b) {
  var c = C;
  C = 0 !== c && 4 > c ? c : 4;
  a(!0);
  var d = Qh.transition;
  Qh.transition = {};
  try {
    a(!1), b();
  } finally {
    C = c, Qh.transition = d;
  }
}
function Fi() {
  return di().memoizedState;
}
function Gi(a, b, c) {
  var d = lh(a);
  c = {
    lane: d,
    action: c,
    hasEagerState: !1,
    eagerState: null,
    next: null
  };
  if (Hi(a)) Ii(b, c);else if (c = Yg(a, b, c, d), null !== c) {
    var e = L();
    mh(c, a, d, e);
    Ji(c, b, d);
  }
}
function ri(a, b, c) {
  var d = lh(a),
    e = {
      lane: d,
      action: c,
      hasEagerState: !1,
      eagerState: null,
      next: null
    };
  if (Hi(a)) Ii(b, e);else {
    var f = a.alternate;
    if (0 === a.lanes && (null === f || 0 === f.lanes) && (f = b.lastRenderedReducer, null !== f)) try {
      var g = b.lastRenderedState,
        h = f(g, c);
      e.hasEagerState = !0;
      e.eagerState = h;
      if (He(h, g)) {
        var k = b.interleaved;
        null === k ? (e.next = e, Xg(b)) : (e.next = k.next, k.next = e);
        b.interleaved = e;
        return;
      }
    } catch (l) {} finally {}
    c = Yg(a, b, e, d);
    null !== c && (e = L(), mh(c, a, d, e), Ji(c, b, d));
  }
}
function Hi(a) {
  var b = a.alternate;
  return a === N || null !== b && b === N;
}
function Ii(a, b) {
  Th = Sh = !0;
  var c = a.pending;
  null === c ? b.next = b : (b.next = c.next, c.next = b);
  a.pending = b;
}
function Ji(a, b, c) {
  if (0 !== (c & 4194240)) {
    var d = b.lanes;
    d &= a.pendingLanes;
    c |= d;
    b.lanes = c;
    Cc(a, c);
  }
}
var ai = {
    readContext: Vg,
    useCallback: Q,
    useContext: Q,
    useEffect: Q,
    useImperativeHandle: Q,
    useInsertionEffect: Q,
    useLayoutEffect: Q,
    useMemo: Q,
    useReducer: Q,
    useRef: Q,
    useState: Q,
    useDebugValue: Q,
    useDeferredValue: Q,
    useTransition: Q,
    useMutableSource: Q,
    useSyncExternalStore: Q,
    useId: Q,
    unstable_isNewReconciler: !1
  },
  Yh = {
    readContext: Vg,
    useCallback: function useCallback(a, b) {
      ci().memoizedState = [a, void 0 === b ? null : b];
      return a;
    },
    useContext: Vg,
    useEffect: vi,
    useImperativeHandle: function useImperativeHandle(a, b, c) {
      c = null !== c && void 0 !== c ? c.concat([a]) : null;
      return ti(4194308, 4, yi.bind(null, b, a), c);
    },
    useLayoutEffect: function useLayoutEffect(a, b) {
      return ti(4194308, 4, a, b);
    },
    useInsertionEffect: function useInsertionEffect(a, b) {
      return ti(4, 2, a, b);
    },
    useMemo: function useMemo(a, b) {
      var c = ci();
      b = void 0 === b ? null : b;
      a = a();
      c.memoizedState = [a, b];
      return a;
    },
    useReducer: function useReducer(a, b, c) {
      var d = ci();
      b = void 0 !== c ? c(b) : b;
      d.memoizedState = d.baseState = b;
      a = {
        pending: null,
        interleaved: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: a,
        lastRenderedState: b
      };
      d.queue = a;
      a = a.dispatch = Gi.bind(null, N, a);
      return [d.memoizedState, a];
    },
    useRef: function useRef(a) {
      var b = ci();
      a = {
        current: a
      };
      return b.memoizedState = a;
    },
    useState: qi,
    useDebugValue: Ai,
    useDeferredValue: function useDeferredValue(a) {
      return ci().memoizedState = a;
    },
    useTransition: function useTransition() {
      var a = qi(!1),
        b = a[0];
      a = Ei.bind(null, a[1]);
      ci().memoizedState = a;
      return [b, a];
    },
    useMutableSource: function useMutableSource() {},
    useSyncExternalStore: function useSyncExternalStore(a, b, c) {
      var d = N,
        e = ci();
      if (I) {
        if (void 0 === c) throw Error(p(407));
        c = c();
      } else {
        c = b();
        if (null === R) throw Error(p(349));
        0 !== (Rh & 30) || ni(d, b, c);
      }
      e.memoizedState = c;
      var f = {
        value: c,
        getSnapshot: b
      };
      e.queue = f;
      vi(ki.bind(null, d, f, a), [a]);
      d.flags |= 2048;
      li(9, mi.bind(null, d, f, c, b), void 0, null);
      return c;
    },
    useId: function useId() {
      var a = ci(),
        b = R.identifierPrefix;
      if (I) {
        var c = sg;
        var d = rg;
        c = (d & ~(1 << 32 - oc(d) - 1)).toString(32) + c;
        b = ":" + b + "R" + c;
        c = Uh++;
        0 < c && (b += "H" + c.toString(32));
        b += ":";
      } else c = Vh++, b = ":" + b + "r" + c.toString(32) + ":";
      return a.memoizedState = b;
    },
    unstable_isNewReconciler: !1
  },
  Zh = {
    readContext: Vg,
    useCallback: Bi,
    useContext: Vg,
    useEffect: ji,
    useImperativeHandle: zi,
    useInsertionEffect: wi,
    useLayoutEffect: xi,
    useMemo: Ci,
    useReducer: fi,
    useRef: si,
    useState: function useState() {
      return fi(ei);
    },
    useDebugValue: Ai,
    useDeferredValue: function useDeferredValue(a) {
      var b = di();
      return Di(b, O.memoizedState, a);
    },
    useTransition: function useTransition() {
      var a = fi(ei)[0],
        b = di().memoizedState;
      return [a, b];
    },
    useMutableSource: hi,
    useSyncExternalStore: ii,
    useId: Fi,
    unstable_isNewReconciler: !1
  },
  $h = {
    readContext: Vg,
    useCallback: Bi,
    useContext: Vg,
    useEffect: ji,
    useImperativeHandle: zi,
    useInsertionEffect: wi,
    useLayoutEffect: xi,
    useMemo: Ci,
    useReducer: gi,
    useRef: si,
    useState: function useState() {
      return gi(ei);
    },
    useDebugValue: Ai,
    useDeferredValue: function useDeferredValue(a) {
      var b = di();
      return null === O ? b.memoizedState = a : Di(b, O.memoizedState, a);
    },
    useTransition: function useTransition() {
      var a = gi(ei)[0],
        b = di().memoizedState;
      return [a, b];
    },
    useMutableSource: hi,
    useSyncExternalStore: ii,
    useId: Fi,
    unstable_isNewReconciler: !1
  };
function Ki(a, b) {
  try {
    var c = "",
      d = b;
    do c += Pa(d), d = d.return; while (d);
    var e = c;
  } catch (f) {
    e = "\nError generating stack: " + f.message + "\n" + f.stack;
  }
  return {
    value: a,
    source: b,
    stack: e,
    digest: null
  };
}
function Li(a, b, c) {
  return {
    value: a,
    source: null,
    stack: null != c ? c : null,
    digest: null != b ? b : null
  };
}
function Mi(a, b) {
  try {
    console.error(b.value);
  } catch (c) {
    setTimeout(function () {
      throw c;
    });
  }
}
var Ni = "function" === typeof WeakMap ? WeakMap : Map;
function Oi(a, b, c) {
  c = ch(-1, c);
  c.tag = 3;
  c.payload = {
    element: null
  };
  var d = b.value;
  c.callback = function () {
    Pi || (Pi = !0, Qi = d);
    Mi(a, b);
  };
  return c;
}
function Ri(a, b, c) {
  c = ch(-1, c);
  c.tag = 3;
  var d = a.type.getDerivedStateFromError;
  if ("function" === typeof d) {
    var e = b.value;
    c.payload = function () {
      return d(e);
    };
    c.callback = function () {
      Mi(a, b);
    };
  }
  var f = a.stateNode;
  null !== f && "function" === typeof f.componentDidCatch && (c.callback = function () {
    Mi(a, b);
    "function" !== typeof d && (null === Si ? Si = new Set([this]) : Si.add(this));
    var c = b.stack;
    this.componentDidCatch(b.value, {
      componentStack: null !== c ? c : ""
    });
  });
  return c;
}
function Ti(a, b, c) {
  var d = a.pingCache;
  if (null === d) {
    d = a.pingCache = new Ni();
    var e = new Set();
    d.set(b, e);
  } else e = d.get(b), void 0 === e && (e = new Set(), d.set(b, e));
  e.has(c) || (e.add(c), a = Ui.bind(null, a, b, c), b.then(a, a));
}
function Vi(a) {
  do {
    var b;
    if (b = 13 === a.tag) b = a.memoizedState, b = null !== b ? null !== b.dehydrated ? !0 : !1 : !0;
    if (b) return a;
    a = a.return;
  } while (null !== a);
  return null;
}
function Wi(a, b, c, d, e) {
  if (0 === (a.mode & 1)) return a === b ? a.flags |= 65536 : (a.flags |= 128, c.flags |= 131072, c.flags &= -52805, 1 === c.tag && (null === c.alternate ? c.tag = 17 : (b = ch(-1, 1), b.tag = 2, dh(c, b, 1))), c.lanes |= 1), a;
  a.flags |= 65536;
  a.lanes = e;
  return a;
}
var Xi = ua.ReactCurrentOwner,
  Ug = !1;
function Yi(a, b, c, d) {
  b.child = null === a ? Ch(b, null, c, d) : Bh(b, a.child, c, d);
}
function Zi(a, b, c, d, e) {
  c = c.render;
  var f = b.ref;
  Tg(b, e);
  d = Xh(a, b, c, d, f, e);
  c = bi();
  if (null !== a && !Ug) return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e, $i(a, b, e);
  I && c && vg(b);
  b.flags |= 1;
  Yi(a, b, d, e);
  return b.child;
}
function aj(a, b, c, d, e) {
  if (null === a) {
    var f = c.type;
    if ("function" === typeof f && !bj(f) && void 0 === f.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = f, cj(a, b, f, d, e);
    a = yh(c.type, null, d, b, b.mode, e);
    a.ref = b.ref;
    a.return = b;
    return b.child = a;
  }
  f = a.child;
  if (0 === (a.lanes & e)) {
    var g = f.memoizedProps;
    c = c.compare;
    c = null !== c ? c : Ie;
    if (c(g, d) && a.ref === b.ref) return $i(a, b, e);
  }
  b.flags |= 1;
  a = wh(f, d);
  a.ref = b.ref;
  a.return = b;
  return b.child = a;
}
function cj(a, b, c, d, e) {
  if (null !== a) {
    var f = a.memoizedProps;
    if (Ie(f, d) && a.ref === b.ref) if (Ug = !1, b.pendingProps = d = f, 0 !== (a.lanes & e)) 0 !== (a.flags & 131072) && (Ug = !0);else return b.lanes = a.lanes, $i(a, b, e);
  }
  return dj(a, b, c, d, e);
}
function ej(a, b, c) {
  var d = b.pendingProps,
    e = d.children,
    f = null !== a ? a.memoizedState : null;
  if ("hidden" === d.mode) {
    if (0 === (b.mode & 1)) b.memoizedState = {
      baseLanes: 0,
      cachePool: null,
      transitions: null
    }, G(fj, gj), gj |= c;else {
      if (0 === (c & 1073741824)) return a = null !== f ? f.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, b.memoizedState = {
        baseLanes: a,
        cachePool: null,
        transitions: null
      }, b.updateQueue = null, G(fj, gj), gj |= a, null;
      b.memoizedState = {
        baseLanes: 0,
        cachePool: null,
        transitions: null
      };
      d = null !== f ? f.baseLanes : c;
      G(fj, gj);
      gj |= d;
    }
  } else null !== f ? (d = f.baseLanes | c, b.memoizedState = null) : d = c, G(fj, gj), gj |= d;
  Yi(a, b, e, c);
  return b.child;
}
function hj(a, b) {
  var c = b.ref;
  if (null === a && null !== c || null !== a && a.ref !== c) b.flags |= 512, b.flags |= 2097152;
}
function dj(a, b, c, d, e) {
  var f = Zf(c) ? Xf : H.current;
  f = Yf(b, f);
  Tg(b, e);
  c = Xh(a, b, c, d, f, e);
  d = bi();
  if (null !== a && !Ug) return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e, $i(a, b, e);
  I && d && vg(b);
  b.flags |= 1;
  Yi(a, b, c, e);
  return b.child;
}
function ij(a, b, c, d, e) {
  if (Zf(c)) {
    var f = !0;
    cg(b);
  } else f = !1;
  Tg(b, e);
  if (null === b.stateNode) jj(a, b), ph(b, c, d), rh(b, c, d, e), d = !0;else if (null === a) {
    var g = b.stateNode,
      h = b.memoizedProps;
    g.props = h;
    var k = g.context,
      l = c.contextType;
    "object" === typeof l && null !== l ? l = Vg(l) : (l = Zf(c) ? Xf : H.current, l = Yf(b, l));
    var m = c.getDerivedStateFromProps,
      q = "function" === typeof m || "function" === typeof g.getSnapshotBeforeUpdate;
    q || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && qh(b, g, d, l);
    $g = !1;
    var r = b.memoizedState;
    g.state = r;
    gh(b, d, g, e);
    k = b.memoizedState;
    h !== d || r !== k || Wf.current || $g ? ("function" === typeof m && (kh(b, c, m, d), k = b.memoizedState), (h = $g || oh(b, c, h, d, r, k, l)) ? (q || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.flags |= 4194308)) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, d = h) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), d = !1);
  } else {
    g = b.stateNode;
    bh(a, b);
    h = b.memoizedProps;
    l = b.type === b.elementType ? h : Lg(b.type, h);
    g.props = l;
    q = b.pendingProps;
    r = g.context;
    k = c.contextType;
    "object" === typeof k && null !== k ? k = Vg(k) : (k = Zf(c) ? Xf : H.current, k = Yf(b, k));
    var y = c.getDerivedStateFromProps;
    (m = "function" === typeof y || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== q || r !== k) && qh(b, g, d, k);
    $g = !1;
    r = b.memoizedState;
    g.state = r;
    gh(b, d, g, e);
    var n = b.memoizedState;
    h !== q || r !== n || Wf.current || $g ? ("function" === typeof y && (kh(b, c, y, d), n = b.memoizedState), (l = $g || oh(b, c, l, d, r, n, k) || !1) ? (m || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, n, k), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, n, k)), "function" === typeof g.componentDidUpdate && (b.flags |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.flags |= 1024)) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 1024), b.memoizedProps = d, b.memoizedState = n), g.props = d, g.state = n, g.context = k, d = l) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 1024), d = !1);
  }
  return kj(a, b, c, d, f, e);
}
function kj(a, b, c, d, e, f) {
  hj(a, b);
  var g = 0 !== (b.flags & 128);
  if (!d && !g) return e && dg(b, c, !1), $i(a, b, f);
  d = b.stateNode;
  Xi.current = b;
  var h = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render();
  b.flags |= 1;
  null !== a && g ? (b.child = Bh(b, a.child, null, f), b.child = Bh(b, null, h, f)) : Yi(a, b, h, f);
  b.memoizedState = d.state;
  e && dg(b, c, !0);
  return b.child;
}
function lj(a) {
  var b = a.stateNode;
  b.pendingContext ? ag(a, b.pendingContext, b.pendingContext !== b.context) : b.context && ag(a, b.context, !1);
  Ih(a, b.containerInfo);
}
function mj(a, b, c, d, e) {
  Ig();
  Jg(e);
  b.flags |= 256;
  Yi(a, b, c, d);
  return b.child;
}
var nj = {
  dehydrated: null,
  treeContext: null,
  retryLane: 0
};
function oj(a) {
  return {
    baseLanes: a,
    cachePool: null,
    transitions: null
  };
}
function pj(a, b, c) {
  var d = b.pendingProps,
    e = M.current,
    f = !1,
    g = 0 !== (b.flags & 128),
    h;
  (h = g) || (h = null !== a && null === a.memoizedState ? !1 : 0 !== (e & 2));
  if (h) f = !0, b.flags &= -129;else if (null === a || null !== a.memoizedState) e |= 1;
  G(M, e & 1);
  if (null === a) {
    Eg(b);
    a = b.memoizedState;
    if (null !== a && (a = a.dehydrated, null !== a)) return 0 === (b.mode & 1) ? b.lanes = 1 : "$!" === a.data ? b.lanes = 8 : b.lanes = 1073741824, null;
    g = d.children;
    a = d.fallback;
    return f ? (d = b.mode, f = b.child, g = {
      mode: "hidden",
      children: g
    }, 0 === (d & 1) && null !== f ? (f.childLanes = 0, f.pendingProps = g) : f = qj(g, d, 0, null), a = Ah(a, d, c, null), f.return = b, a.return = b, f.sibling = a, b.child = f, b.child.memoizedState = oj(c), b.memoizedState = nj, a) : rj(b, g);
  }
  e = a.memoizedState;
  if (null !== e && (h = e.dehydrated, null !== h)) return sj(a, b, g, d, h, e, c);
  if (f) {
    f = d.fallback;
    g = b.mode;
    e = a.child;
    h = e.sibling;
    var k = {
      mode: "hidden",
      children: d.children
    };
    0 === (g & 1) && b.child !== e ? (d = b.child, d.childLanes = 0, d.pendingProps = k, b.deletions = null) : (d = wh(e, k), d.subtreeFlags = e.subtreeFlags & 14680064);
    null !== h ? f = wh(h, f) : (f = Ah(f, g, c, null), f.flags |= 2);
    f.return = b;
    d.return = b;
    d.sibling = f;
    b.child = d;
    d = f;
    f = b.child;
    g = a.child.memoizedState;
    g = null === g ? oj(c) : {
      baseLanes: g.baseLanes | c,
      cachePool: null,
      transitions: g.transitions
    };
    f.memoizedState = g;
    f.childLanes = a.childLanes & ~c;
    b.memoizedState = nj;
    return d;
  }
  f = a.child;
  a = f.sibling;
  d = wh(f, {
    mode: "visible",
    children: d.children
  });
  0 === (b.mode & 1) && (d.lanes = c);
  d.return = b;
  d.sibling = null;
  null !== a && (c = b.deletions, null === c ? (b.deletions = [a], b.flags |= 16) : c.push(a));
  b.child = d;
  b.memoizedState = null;
  return d;
}
function rj(a, b) {
  b = qj({
    mode: "visible",
    children: b
  }, a.mode, 0, null);
  b.return = a;
  return a.child = b;
}
function tj(a, b, c, d) {
  null !== d && Jg(d);
  Bh(b, a.child, null, c);
  a = rj(b, b.pendingProps.children);
  a.flags |= 2;
  b.memoizedState = null;
  return a;
}
function sj(a, b, c, d, e, f, g) {
  if (c) {
    if (b.flags & 256) return b.flags &= -257, d = Li(Error(p(422))), tj(a, b, g, d);
    if (null !== b.memoizedState) return b.child = a.child, b.flags |= 128, null;
    f = d.fallback;
    e = b.mode;
    d = qj({
      mode: "visible",
      children: d.children
    }, e, 0, null);
    f = Ah(f, e, g, null);
    f.flags |= 2;
    d.return = b;
    f.return = b;
    d.sibling = f;
    b.child = d;
    0 !== (b.mode & 1) && Bh(b, a.child, null, g);
    b.child.memoizedState = oj(g);
    b.memoizedState = nj;
    return f;
  }
  if (0 === (b.mode & 1)) return tj(a, b, g, null);
  if ("$!" === e.data) {
    d = e.nextSibling && e.nextSibling.dataset;
    if (d) var h = d.dgst;
    d = h;
    f = Error(p(419));
    d = Li(f, d, void 0);
    return tj(a, b, g, d);
  }
  h = 0 !== (g & a.childLanes);
  if (Ug || h) {
    d = R;
    if (null !== d) {
      switch (g & -g) {
        case 4:
          e = 2;
          break;
        case 16:
          e = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          e = 32;
          break;
        case 536870912:
          e = 268435456;
          break;
        default:
          e = 0;
      }
      e = 0 !== (e & (d.suspendedLanes | g)) ? 0 : e;
      0 !== e && e !== f.retryLane && (f.retryLane = e, Zg(a, e), mh(d, a, e, -1));
    }
    uj();
    d = Li(Error(p(421)));
    return tj(a, b, g, d);
  }
  if ("$?" === e.data) return b.flags |= 128, b.child = a.child, b = vj.bind(null, a), e._reactRetry = b, null;
  a = f.treeContext;
  yg = Lf(e.nextSibling);
  xg = b;
  I = !0;
  zg = null;
  null !== a && (og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, rg = a.id, sg = a.overflow, qg = b);
  b = rj(b, d.children);
  b.flags |= 4096;
  return b;
}
function wj(a, b, c) {
  a.lanes |= b;
  var d = a.alternate;
  null !== d && (d.lanes |= b);
  Sg(a.return, b, c);
}
function xj(a, b, c, d, e) {
  var f = a.memoizedState;
  null === f ? a.memoizedState = {
    isBackwards: b,
    rendering: null,
    renderingStartTime: 0,
    last: d,
    tail: c,
    tailMode: e
  } : (f.isBackwards = b, f.rendering = null, f.renderingStartTime = 0, f.last = d, f.tail = c, f.tailMode = e);
}
function yj(a, b, c) {
  var d = b.pendingProps,
    e = d.revealOrder,
    f = d.tail;
  Yi(a, b, d.children, c);
  d = M.current;
  if (0 !== (d & 2)) d = d & 1 | 2, b.flags |= 128;else {
    if (null !== a && 0 !== (a.flags & 128)) a: for (a = b.child; null !== a;) {
      if (13 === a.tag) null !== a.memoizedState && wj(a, c, b);else if (19 === a.tag) wj(a, c, b);else if (null !== a.child) {
        a.child.return = a;
        a = a.child;
        continue;
      }
      if (a === b) break a;
      for (; null === a.sibling;) {
        if (null === a.return || a.return === b) break a;
        a = a.return;
      }
      a.sibling.return = a.return;
      a = a.sibling;
    }
    d &= 1;
  }
  G(M, d);
  if (0 === (b.mode & 1)) b.memoizedState = null;else switch (e) {
    case "forwards":
      c = b.child;
      for (e = null; null !== c;) a = c.alternate, null !== a && null === Mh(a) && (e = c), c = c.sibling;
      c = e;
      null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);
      xj(b, !1, e, c, f);
      break;
    case "backwards":
      c = null;
      e = b.child;
      for (b.child = null; null !== e;) {
        a = e.alternate;
        if (null !== a && null === Mh(a)) {
          b.child = e;
          break;
        }
        a = e.sibling;
        e.sibling = c;
        c = e;
        e = a;
      }
      xj(b, !0, c, null, f);
      break;
    case "together":
      xj(b, !1, null, null, void 0);
      break;
    default:
      b.memoizedState = null;
  }
  return b.child;
}
function jj(a, b) {
  0 === (b.mode & 1) && null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);
}
function $i(a, b, c) {
  null !== a && (b.dependencies = a.dependencies);
  hh |= b.lanes;
  if (0 === (c & b.childLanes)) return null;
  if (null !== a && b.child !== a.child) throw Error(p(153));
  if (null !== b.child) {
    a = b.child;
    c = wh(a, a.pendingProps);
    b.child = c;
    for (c.return = b; null !== a.sibling;) a = a.sibling, c = c.sibling = wh(a, a.pendingProps), c.return = b;
    c.sibling = null;
  }
  return b.child;
}
function zj(a, b, c) {
  switch (b.tag) {
    case 3:
      lj(b);
      Ig();
      break;
    case 5:
      Kh(b);
      break;
    case 1:
      Zf(b.type) && cg(b);
      break;
    case 4:
      Ih(b, b.stateNode.containerInfo);
      break;
    case 10:
      var d = b.type._context,
        e = b.memoizedProps.value;
      G(Mg, d._currentValue);
      d._currentValue = e;
      break;
    case 13:
      d = b.memoizedState;
      if (null !== d) {
        if (null !== d.dehydrated) return G(M, M.current & 1), b.flags |= 128, null;
        if (0 !== (c & b.child.childLanes)) return pj(a, b, c);
        G(M, M.current & 1);
        a = $i(a, b, c);
        return null !== a ? a.sibling : null;
      }
      G(M, M.current & 1);
      break;
    case 19:
      d = 0 !== (c & b.childLanes);
      if (0 !== (a.flags & 128)) {
        if (d) return yj(a, b, c);
        b.flags |= 128;
      }
      e = b.memoizedState;
      null !== e && (e.rendering = null, e.tail = null, e.lastEffect = null);
      G(M, M.current);
      if (d) break;else return null;
    case 22:
    case 23:
      return b.lanes = 0, ej(a, b, c);
  }
  return $i(a, b, c);
}
var Aj, Bj, Cj, Dj;
Aj = function Aj(a, b) {
  for (var c = b.child; null !== c;) {
    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {
      c.child.return = c;
      c = c.child;
      continue;
    }
    if (c === b) break;
    for (; null === c.sibling;) {
      if (null === c.return || c.return === b) return;
      c = c.return;
    }
    c.sibling.return = c.return;
    c = c.sibling;
  }
};
Bj = function Bj() {};
Cj = function Cj(a, b, c, d) {
  var e = a.memoizedProps;
  if (e !== d) {
    a = b.stateNode;
    Hh(Eh.current);
    var f = null;
    switch (c) {
      case "input":
        e = Ya(a, e);
        d = Ya(a, d);
        f = [];
        break;
      case "select":
        e = A({}, e, {
          value: void 0
        });
        d = A({}, d, {
          value: void 0
        });
        f = [];
        break;
      case "textarea":
        e = gb(a, e);
        d = gb(a, d);
        f = [];
        break;
      default:
        "function" !== typeof e.onClick && "function" === typeof d.onClick && (a.onclick = Bf);
    }
    ub(c, d);
    var g;
    c = null;
    for (l in e) if (!d.hasOwnProperty(l) && e.hasOwnProperty(l) && null != e[l]) if ("style" === l) {
      var h = e[l];
      for (g in h) h.hasOwnProperty(g) && (c || (c = {}), c[g] = "");
    } else "dangerouslySetInnerHTML" !== l && "children" !== l && "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && "autoFocus" !== l && (ea.hasOwnProperty(l) ? f || (f = []) : (f = f || []).push(l, null));
    for (l in d) {
      var k = d[l];
      h = null != e ? e[l] : void 0;
      if (d.hasOwnProperty(l) && k !== h && (null != k || null != h)) if ("style" === l) {
        if (h) {
          for (g in h) !h.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (c || (c = {}), c[g] = "");
          for (g in k) k.hasOwnProperty(g) && h[g] !== k[g] && (c || (c = {}), c[g] = k[g]);
        } else c || (f || (f = []), f.push(l, c)), c = k;
      } else "dangerouslySetInnerHTML" === l ? (k = k ? k.__html : void 0, h = h ? h.__html : void 0, null != k && h !== k && (f = f || []).push(l, k)) : "children" === l ? "string" !== typeof k && "number" !== typeof k || (f = f || []).push(l, "" + k) : "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && (ea.hasOwnProperty(l) ? (null != k && "onScroll" === l && D("scroll", a), f || h === k || (f = [])) : (f = f || []).push(l, k));
    }
    c && (f = f || []).push("style", c);
    var l = f;
    if (b.updateQueue = l) b.flags |= 4;
  }
};
Dj = function Dj(a, b, c, d) {
  c !== d && (b.flags |= 4);
};
function Ej(a, b) {
  if (!I) switch (a.tailMode) {
    case "hidden":
      b = a.tail;
      for (var c = null; null !== b;) null !== b.alternate && (c = b), b = b.sibling;
      null === c ? a.tail = null : c.sibling = null;
      break;
    case "collapsed":
      c = a.tail;
      for (var d = null; null !== c;) null !== c.alternate && (d = c), c = c.sibling;
      null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;
  }
}
function S(a) {
  var b = null !== a.alternate && a.alternate.child === a.child,
    c = 0,
    d = 0;
  if (b) for (var e = a.child; null !== e;) c |= e.lanes | e.childLanes, d |= e.subtreeFlags & 14680064, d |= e.flags & 14680064, e.return = a, e = e.sibling;else for (e = a.child; null !== e;) c |= e.lanes | e.childLanes, d |= e.subtreeFlags, d |= e.flags, e.return = a, e = e.sibling;
  a.subtreeFlags |= d;
  a.childLanes = c;
  return b;
}
function Fj(a, b, c) {
  var d = b.pendingProps;
  wg(b);
  switch (b.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return S(b), null;
    case 1:
      return Zf(b.type) && $f(), S(b), null;
    case 3:
      d = b.stateNode;
      Jh();
      E(Wf);
      E(H);
      Oh();
      d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);
      if (null === a || null === a.child) Gg(b) ? b.flags |= 4 : null === a || a.memoizedState.isDehydrated && 0 === (b.flags & 256) || (b.flags |= 1024, null !== zg && (Gj(zg), zg = null));
      Bj(a, b);
      S(b);
      return null;
    case 5:
      Lh(b);
      var e = Hh(Gh.current);
      c = b.type;
      if (null !== a && null != b.stateNode) Cj(a, b, c, d, e), a.ref !== b.ref && (b.flags |= 512, b.flags |= 2097152);else {
        if (!d) {
          if (null === b.stateNode) throw Error(p(166));
          S(b);
          return null;
        }
        a = Hh(Eh.current);
        if (Gg(b)) {
          d = b.stateNode;
          c = b.type;
          var f = b.memoizedProps;
          d[Of] = b;
          d[Pf] = f;
          a = 0 !== (b.mode & 1);
          switch (c) {
            case "dialog":
              D("cancel", d);
              D("close", d);
              break;
            case "iframe":
            case "object":
            case "embed":
              D("load", d);
              break;
            case "video":
            case "audio":
              for (e = 0; e < lf.length; e++) D(lf[e], d);
              break;
            case "source":
              D("error", d);
              break;
            case "img":
            case "image":
            case "link":
              D("error", d);
              D("load", d);
              break;
            case "details":
              D("toggle", d);
              break;
            case "input":
              Za(d, f);
              D("invalid", d);
              break;
            case "select":
              d._wrapperState = {
                wasMultiple: !!f.multiple
              };
              D("invalid", d);
              break;
            case "textarea":
              hb(d, f), D("invalid", d);
          }
          ub(c, f);
          e = null;
          for (var g in f) if (f.hasOwnProperty(g)) {
            var h = f[g];
            "children" === g ? "string" === typeof h ? d.textContent !== h && (!0 !== f.suppressHydrationWarning && Af(d.textContent, h, a), e = ["children", h]) : "number" === typeof h && d.textContent !== "" + h && (!0 !== f.suppressHydrationWarning && Af(d.textContent, h, a), e = ["children", "" + h]) : ea.hasOwnProperty(g) && null != h && "onScroll" === g && D("scroll", d);
          }
          switch (c) {
            case "input":
              Va(d);
              db(d, f, !0);
              break;
            case "textarea":
              Va(d);
              jb(d);
              break;
            case "select":
            case "option":
              break;
            default:
              "function" === typeof f.onClick && (d.onclick = Bf);
          }
          d = e;
          b.updateQueue = d;
          null !== d && (b.flags |= 4);
        } else {
          g = 9 === e.nodeType ? e : e.ownerDocument;
          "http://www.w3.org/1999/xhtml" === a && (a = kb(c));
          "http://www.w3.org/1999/xhtml" === a ? "script" === c ? (a = g.createElement("div"), a.innerHTML = "<script>\x3c/script>", a = a.removeChild(a.firstChild)) : "string" === typeof d.is ? a = g.createElement(c, {
            is: d.is
          }) : (a = g.createElement(c), "select" === c && (g = a, d.multiple ? g.multiple = !0 : d.size && (g.size = d.size))) : a = g.createElementNS(a, c);
          a[Of] = b;
          a[Pf] = d;
          Aj(a, b, !1, !1);
          b.stateNode = a;
          a: {
            g = vb(c, d);
            switch (c) {
              case "dialog":
                D("cancel", a);
                D("close", a);
                e = d;
                break;
              case "iframe":
              case "object":
              case "embed":
                D("load", a);
                e = d;
                break;
              case "video":
              case "audio":
                for (e = 0; e < lf.length; e++) D(lf[e], a);
                e = d;
                break;
              case "source":
                D("error", a);
                e = d;
                break;
              case "img":
              case "image":
              case "link":
                D("error", a);
                D("load", a);
                e = d;
                break;
              case "details":
                D("toggle", a);
                e = d;
                break;
              case "input":
                Za(a, d);
                e = Ya(a, d);
                D("invalid", a);
                break;
              case "option":
                e = d;
                break;
              case "select":
                a._wrapperState = {
                  wasMultiple: !!d.multiple
                };
                e = A({}, d, {
                  value: void 0
                });
                D("invalid", a);
                break;
              case "textarea":
                hb(a, d);
                e = gb(a, d);
                D("invalid", a);
                break;
              default:
                e = d;
            }
            ub(c, e);
            h = e;
            for (f in h) if (h.hasOwnProperty(f)) {
              var k = h[f];
              "style" === f ? sb(a, k) : "dangerouslySetInnerHTML" === f ? (k = k ? k.__html : void 0, null != k && nb(a, k)) : "children" === f ? "string" === typeof k ? ("textarea" !== c || "" !== k) && ob(a, k) : "number" === typeof k && ob(a, "" + k) : "suppressContentEditableWarning" !== f && "suppressHydrationWarning" !== f && "autoFocus" !== f && (ea.hasOwnProperty(f) ? null != k && "onScroll" === f && D("scroll", a) : null != k && ta(a, f, k, g));
            }
            switch (c) {
              case "input":
                Va(a);
                db(a, d, !1);
                break;
              case "textarea":
                Va(a);
                jb(a);
                break;
              case "option":
                null != d.value && a.setAttribute("value", "" + Sa(d.value));
                break;
              case "select":
                a.multiple = !!d.multiple;
                f = d.value;
                null != f ? fb(a, !!d.multiple, f, !1) : null != d.defaultValue && fb(a, !!d.multiple, d.defaultValue, !0);
                break;
              default:
                "function" === typeof e.onClick && (a.onclick = Bf);
            }
            switch (c) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                d = !!d.autoFocus;
                break a;
              case "img":
                d = !0;
                break a;
              default:
                d = !1;
            }
          }
          d && (b.flags |= 4);
        }
        null !== b.ref && (b.flags |= 512, b.flags |= 2097152);
      }
      S(b);
      return null;
    case 6:
      if (a && null != b.stateNode) Dj(a, b, a.memoizedProps, d);else {
        if ("string" !== typeof d && null === b.stateNode) throw Error(p(166));
        c = Hh(Gh.current);
        Hh(Eh.current);
        if (Gg(b)) {
          d = b.stateNode;
          c = b.memoizedProps;
          d[Of] = b;
          if (f = d.nodeValue !== c) if (a = xg, null !== a) switch (a.tag) {
            case 3:
              Af(d.nodeValue, c, 0 !== (a.mode & 1));
              break;
            case 5:
              !0 !== a.memoizedProps.suppressHydrationWarning && Af(d.nodeValue, c, 0 !== (a.mode & 1));
          }
          f && (b.flags |= 4);
        } else d = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d), d[Of] = b, b.stateNode = d;
      }
      S(b);
      return null;
    case 13:
      E(M);
      d = b.memoizedState;
      if (null === a || null !== a.memoizedState && null !== a.memoizedState.dehydrated) {
        if (I && null !== yg && 0 !== (b.mode & 1) && 0 === (b.flags & 128)) Hg(), Ig(), b.flags |= 98560, f = !1;else if (f = Gg(b), null !== d && null !== d.dehydrated) {
          if (null === a) {
            if (!f) throw Error(p(318));
            f = b.memoizedState;
            f = null !== f ? f.dehydrated : null;
            if (!f) throw Error(p(317));
            f[Of] = b;
          } else Ig(), 0 === (b.flags & 128) && (b.memoizedState = null), b.flags |= 4;
          S(b);
          f = !1;
        } else null !== zg && (Gj(zg), zg = null), f = !0;
        if (!f) return b.flags & 65536 ? b : null;
      }
      if (0 !== (b.flags & 128)) return b.lanes = c, b;
      d = null !== d;
      d !== (null !== a && null !== a.memoizedState) && d && (b.child.flags |= 8192, 0 !== (b.mode & 1) && (null === a || 0 !== (M.current & 1) ? 0 === T && (T = 3) : uj()));
      null !== b.updateQueue && (b.flags |= 4);
      S(b);
      return null;
    case 4:
      return Jh(), Bj(a, b), null === a && sf(b.stateNode.containerInfo), S(b), null;
    case 10:
      return Rg(b.type._context), S(b), null;
    case 17:
      return Zf(b.type) && $f(), S(b), null;
    case 19:
      E(M);
      f = b.memoizedState;
      if (null === f) return S(b), null;
      d = 0 !== (b.flags & 128);
      g = f.rendering;
      if (null === g) {
        if (d) Ej(f, !1);else {
          if (0 !== T || null !== a && 0 !== (a.flags & 128)) for (a = b.child; null !== a;) {
            g = Mh(a);
            if (null !== g) {
              b.flags |= 128;
              Ej(f, !1);
              d = g.updateQueue;
              null !== d && (b.updateQueue = d, b.flags |= 4);
              b.subtreeFlags = 0;
              d = c;
              for (c = b.child; null !== c;) f = c, a = d, f.flags &= 14680066, g = f.alternate, null === g ? (f.childLanes = 0, f.lanes = a, f.child = null, f.subtreeFlags = 0, f.memoizedProps = null, f.memoizedState = null, f.updateQueue = null, f.dependencies = null, f.stateNode = null) : (f.childLanes = g.childLanes, f.lanes = g.lanes, f.child = g.child, f.subtreeFlags = 0, f.deletions = null, f.memoizedProps = g.memoizedProps, f.memoizedState = g.memoizedState, f.updateQueue = g.updateQueue, f.type = g.type, a = g.dependencies, f.dependencies = null === a ? null : {
                lanes: a.lanes,
                firstContext: a.firstContext
              }), c = c.sibling;
              G(M, M.current & 1 | 2);
              return b.child;
            }
            a = a.sibling;
          }
          null !== f.tail && B() > Hj && (b.flags |= 128, d = !0, Ej(f, !1), b.lanes = 4194304);
        }
      } else {
        if (!d) if (a = Mh(g), null !== a) {
          if (b.flags |= 128, d = !0, c = a.updateQueue, null !== c && (b.updateQueue = c, b.flags |= 4), Ej(f, !0), null === f.tail && "hidden" === f.tailMode && !g.alternate && !I) return S(b), null;
        } else 2 * B() - f.renderingStartTime > Hj && 1073741824 !== c && (b.flags |= 128, d = !0, Ej(f, !1), b.lanes = 4194304);
        f.isBackwards ? (g.sibling = b.child, b.child = g) : (c = f.last, null !== c ? c.sibling = g : b.child = g, f.last = g);
      }
      if (null !== f.tail) return b = f.tail, f.rendering = b, f.tail = b.sibling, f.renderingStartTime = B(), b.sibling = null, c = M.current, G(M, d ? c & 1 | 2 : c & 1), b;
      S(b);
      return null;
    case 22:
    case 23:
      return Ij(), d = null !== b.memoizedState, null !== a && null !== a.memoizedState !== d && (b.flags |= 8192), d && 0 !== (b.mode & 1) ? 0 !== (gj & 1073741824) && (S(b), b.subtreeFlags & 6 && (b.flags |= 8192)) : S(b), null;
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(p(156, b.tag));
}
function Jj(a, b) {
  wg(b);
  switch (b.tag) {
    case 1:
      return Zf(b.type) && $f(), a = b.flags, a & 65536 ? (b.flags = a & -65537 | 128, b) : null;
    case 3:
      return Jh(), E(Wf), E(H), Oh(), a = b.flags, 0 !== (a & 65536) && 0 === (a & 128) ? (b.flags = a & -65537 | 128, b) : null;
    case 5:
      return Lh(b), null;
    case 13:
      E(M);
      a = b.memoizedState;
      if (null !== a && null !== a.dehydrated) {
        if (null === b.alternate) throw Error(p(340));
        Ig();
      }
      a = b.flags;
      return a & 65536 ? (b.flags = a & -65537 | 128, b) : null;
    case 19:
      return E(M), null;
    case 4:
      return Jh(), null;
    case 10:
      return Rg(b.type._context), null;
    case 22:
    case 23:
      return Ij(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Kj = !1,
  U = !1,
  Lj = "function" === typeof WeakSet ? WeakSet : Set,
  V = null;
function Mj(a, b) {
  var c = a.ref;
  if (null !== c) if ("function" === typeof c) try {
    c(null);
  } catch (d) {
    W(a, b, d);
  } else c.current = null;
}
function Nj(a, b, c) {
  try {
    c();
  } catch (d) {
    W(a, b, d);
  }
}
var Oj = !1;
function Pj(a, b) {
  Cf = dd;
  a = Me();
  if (Ne(a)) {
    if ("selectionStart" in a) var c = {
      start: a.selectionStart,
      end: a.selectionEnd
    };else a: {
      c = (c = a.ownerDocument) && c.defaultView || window;
      var d = c.getSelection && c.getSelection();
      if (d && 0 !== d.rangeCount) {
        c = d.anchorNode;
        var e = d.anchorOffset,
          f = d.focusNode;
        d = d.focusOffset;
        try {
          c.nodeType, f.nodeType;
        } catch (F) {
          c = null;
          break a;
        }
        var g = 0,
          h = -1,
          k = -1,
          l = 0,
          m = 0,
          q = a,
          r = null;
        b: for (;;) {
          for (var y;;) {
            q !== c || 0 !== e && 3 !== q.nodeType || (h = g + e);
            q !== f || 0 !== d && 3 !== q.nodeType || (k = g + d);
            3 === q.nodeType && (g += q.nodeValue.length);
            if (null === (y = q.firstChild)) break;
            r = q;
            q = y;
          }
          for (;;) {
            if (q === a) break b;
            r === c && ++l === e && (h = g);
            r === f && ++m === d && (k = g);
            if (null !== (y = q.nextSibling)) break;
            q = r;
            r = q.parentNode;
          }
          q = y;
        }
        c = -1 === h || -1 === k ? null : {
          start: h,
          end: k
        };
      } else c = null;
    }
    c = c || {
      start: 0,
      end: 0
    };
  } else c = null;
  Df = {
    focusedElem: a,
    selectionRange: c
  };
  dd = !1;
  for (V = b; null !== V;) if (b = V, a = b.child, 0 !== (b.subtreeFlags & 1028) && null !== a) a.return = b, V = a;else for (; null !== V;) {
    b = V;
    try {
      var n = b.alternate;
      if (0 !== (b.flags & 1024)) switch (b.tag) {
        case 0:
        case 11:
        case 15:
          break;
        case 1:
          if (null !== n) {
            var t = n.memoizedProps,
              J = n.memoizedState,
              x = b.stateNode,
              w = x.getSnapshotBeforeUpdate(b.elementType === b.type ? t : Lg(b.type, t), J);
            x.__reactInternalSnapshotBeforeUpdate = w;
          }
          break;
        case 3:
          var u = b.stateNode.containerInfo;
          1 === u.nodeType ? u.textContent = "" : 9 === u.nodeType && u.documentElement && u.removeChild(u.documentElement);
          break;
        case 5:
        case 6:
        case 4:
        case 17:
          break;
        default:
          throw Error(p(163));
      }
    } catch (F) {
      W(b, b.return, F);
    }
    a = b.sibling;
    if (null !== a) {
      a.return = b.return;
      V = a;
      break;
    }
    V = b.return;
  }
  n = Oj;
  Oj = !1;
  return n;
}
function Qj(a, b, c) {
  var d = b.updateQueue;
  d = null !== d ? d.lastEffect : null;
  if (null !== d) {
    var e = d = d.next;
    do {
      if ((e.tag & a) === a) {
        var f = e.destroy;
        e.destroy = void 0;
        void 0 !== f && Nj(b, c, f);
      }
      e = e.next;
    } while (e !== d);
  }
}
function Rj(a, b) {
  b = b.updateQueue;
  b = null !== b ? b.lastEffect : null;
  if (null !== b) {
    var c = b = b.next;
    do {
      if ((c.tag & a) === a) {
        var d = c.create;
        c.destroy = d();
      }
      c = c.next;
    } while (c !== b);
  }
}
function Sj(a) {
  var b = a.ref;
  if (null !== b) {
    var c = a.stateNode;
    switch (a.tag) {
      case 5:
        a = c;
        break;
      default:
        a = c;
    }
    "function" === typeof b ? b(a) : b.current = a;
  }
}
function Tj(a) {
  var b = a.alternate;
  null !== b && (a.alternate = null, Tj(b));
  a.child = null;
  a.deletions = null;
  a.sibling = null;
  5 === a.tag && (b = a.stateNode, null !== b && (delete b[Of], delete b[Pf], delete b[of], delete b[Qf], delete b[Rf]));
  a.stateNode = null;
  a.return = null;
  a.dependencies = null;
  a.memoizedProps = null;
  a.memoizedState = null;
  a.pendingProps = null;
  a.stateNode = null;
  a.updateQueue = null;
}
function Uj(a) {
  return 5 === a.tag || 3 === a.tag || 4 === a.tag;
}
function Vj(a) {
  a: for (;;) {
    for (; null === a.sibling;) {
      if (null === a.return || Uj(a.return)) return null;
      a = a.return;
    }
    a.sibling.return = a.return;
    for (a = a.sibling; 5 !== a.tag && 6 !== a.tag && 18 !== a.tag;) {
      if (a.flags & 2) continue a;
      if (null === a.child || 4 === a.tag) continue a;else a.child.return = a, a = a.child;
    }
    if (!(a.flags & 2)) return a.stateNode;
  }
}
function Wj(a, b, c) {
  var d = a.tag;
  if (5 === d || 6 === d) a = a.stateNode, b ? 8 === c.nodeType ? c.parentNode.insertBefore(a, b) : c.insertBefore(a, b) : (8 === c.nodeType ? (b = c.parentNode, b.insertBefore(a, c)) : (b = c, b.appendChild(a)), c = c._reactRootContainer, null !== c && void 0 !== c || null !== b.onclick || (b.onclick = Bf));else if (4 !== d && (a = a.child, null !== a)) for (Wj(a, b, c), a = a.sibling; null !== a;) Wj(a, b, c), a = a.sibling;
}
function Xj(a, b, c) {
  var d = a.tag;
  if (5 === d || 6 === d) a = a.stateNode, b ? c.insertBefore(a, b) : c.appendChild(a);else if (4 !== d && (a = a.child, null !== a)) for (Xj(a, b, c), a = a.sibling; null !== a;) Xj(a, b, c), a = a.sibling;
}
var X = null,
  Yj = !1;
function Zj(a, b, c) {
  for (c = c.child; null !== c;) ak(a, b, c), c = c.sibling;
}
function ak(a, b, c) {
  if (lc && "function" === typeof lc.onCommitFiberUnmount) try {
    lc.onCommitFiberUnmount(kc, c);
  } catch (h) {}
  switch (c.tag) {
    case 5:
      U || Mj(c, b);
    case 6:
      var d = X,
        e = Yj;
      X = null;
      Zj(a, b, c);
      X = d;
      Yj = e;
      null !== X && (Yj ? (a = X, c = c.stateNode, 8 === a.nodeType ? a.parentNode.removeChild(c) : a.removeChild(c)) : X.removeChild(c.stateNode));
      break;
    case 18:
      null !== X && (Yj ? (a = X, c = c.stateNode, 8 === a.nodeType ? Kf(a.parentNode, c) : 1 === a.nodeType && Kf(a, c), bd(a)) : Kf(X, c.stateNode));
      break;
    case 4:
      d = X;
      e = Yj;
      X = c.stateNode.containerInfo;
      Yj = !0;
      Zj(a, b, c);
      X = d;
      Yj = e;
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (!U && (d = c.updateQueue, null !== d && (d = d.lastEffect, null !== d))) {
        e = d = d.next;
        do {
          var f = e,
            g = f.destroy;
          f = f.tag;
          void 0 !== g && (0 !== (f & 2) ? Nj(c, b, g) : 0 !== (f & 4) && Nj(c, b, g));
          e = e.next;
        } while (e !== d);
      }
      Zj(a, b, c);
      break;
    case 1:
      if (!U && (Mj(c, b), d = c.stateNode, "function" === typeof d.componentWillUnmount)) try {
        d.props = c.memoizedProps, d.state = c.memoizedState, d.componentWillUnmount();
      } catch (h) {
        W(c, b, h);
      }
      Zj(a, b, c);
      break;
    case 21:
      Zj(a, b, c);
      break;
    case 22:
      c.mode & 1 ? (U = (d = U) || null !== c.memoizedState, Zj(a, b, c), U = d) : Zj(a, b, c);
      break;
    default:
      Zj(a, b, c);
  }
}
function bk(a) {
  var b = a.updateQueue;
  if (null !== b) {
    a.updateQueue = null;
    var c = a.stateNode;
    null === c && (c = a.stateNode = new Lj());
    b.forEach(function (b) {
      var d = ck.bind(null, a, b);
      c.has(b) || (c.add(b), b.then(d, d));
    });
  }
}
function dk(a, b) {
  var c = b.deletions;
  if (null !== c) for (var d = 0; d < c.length; d++) {
    var e = c[d];
    try {
      var f = a,
        g = b,
        h = g;
      a: for (; null !== h;) {
        switch (h.tag) {
          case 5:
            X = h.stateNode;
            Yj = !1;
            break a;
          case 3:
            X = h.stateNode.containerInfo;
            Yj = !0;
            break a;
          case 4:
            X = h.stateNode.containerInfo;
            Yj = !0;
            break a;
        }
        h = h.return;
      }
      if (null === X) throw Error(p(160));
      ak(f, g, e);
      X = null;
      Yj = !1;
      var k = e.alternate;
      null !== k && (k.return = null);
      e.return = null;
    } catch (l) {
      W(e, b, l);
    }
  }
  if (b.subtreeFlags & 12854) for (b = b.child; null !== b;) ek(b, a), b = b.sibling;
}
function ek(a, b) {
  var c = a.alternate,
    d = a.flags;
  switch (a.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      dk(b, a);
      fk(a);
      if (d & 4) {
        try {
          Qj(3, a, a.return), Rj(3, a);
        } catch (t) {
          W(a, a.return, t);
        }
        try {
          Qj(5, a, a.return);
        } catch (t) {
          W(a, a.return, t);
        }
      }
      break;
    case 1:
      dk(b, a);
      fk(a);
      d & 512 && null !== c && Mj(c, c.return);
      break;
    case 5:
      dk(b, a);
      fk(a);
      d & 512 && null !== c && Mj(c, c.return);
      if (a.flags & 32) {
        var e = a.stateNode;
        try {
          ob(e, "");
        } catch (t) {
          W(a, a.return, t);
        }
      }
      if (d & 4 && (e = a.stateNode, null != e)) {
        var f = a.memoizedProps,
          g = null !== c ? c.memoizedProps : f,
          h = a.type,
          k = a.updateQueue;
        a.updateQueue = null;
        if (null !== k) try {
          "input" === h && "radio" === f.type && null != f.name && ab(e, f);
          vb(h, g);
          var l = vb(h, f);
          for (g = 0; g < k.length; g += 2) {
            var m = k[g],
              q = k[g + 1];
            "style" === m ? sb(e, q) : "dangerouslySetInnerHTML" === m ? nb(e, q) : "children" === m ? ob(e, q) : ta(e, m, q, l);
          }
          switch (h) {
            case "input":
              bb(e, f);
              break;
            case "textarea":
              ib(e, f);
              break;
            case "select":
              var r = e._wrapperState.wasMultiple;
              e._wrapperState.wasMultiple = !!f.multiple;
              var y = f.value;
              null != y ? fb(e, !!f.multiple, y, !1) : r !== !!f.multiple && (null != f.defaultValue ? fb(e, !!f.multiple, f.defaultValue, !0) : fb(e, !!f.multiple, f.multiple ? [] : "", !1));
          }
          e[Pf] = f;
        } catch (t) {
          W(a, a.return, t);
        }
      }
      break;
    case 6:
      dk(b, a);
      fk(a);
      if (d & 4) {
        if (null === a.stateNode) throw Error(p(162));
        e = a.stateNode;
        f = a.memoizedProps;
        try {
          e.nodeValue = f;
        } catch (t) {
          W(a, a.return, t);
        }
      }
      break;
    case 3:
      dk(b, a);
      fk(a);
      if (d & 4 && null !== c && c.memoizedState.isDehydrated) try {
        bd(b.containerInfo);
      } catch (t) {
        W(a, a.return, t);
      }
      break;
    case 4:
      dk(b, a);
      fk(a);
      break;
    case 13:
      dk(b, a);
      fk(a);
      e = a.child;
      e.flags & 8192 && (f = null !== e.memoizedState, e.stateNode.isHidden = f, !f || null !== e.alternate && null !== e.alternate.memoizedState || (gk = B()));
      d & 4 && bk(a);
      break;
    case 22:
      m = null !== c && null !== c.memoizedState;
      a.mode & 1 ? (U = (l = U) || m, dk(b, a), U = l) : dk(b, a);
      fk(a);
      if (d & 8192) {
        l = null !== a.memoizedState;
        if ((a.stateNode.isHidden = l) && !m && 0 !== (a.mode & 1)) for (V = a, m = a.child; null !== m;) {
          for (q = V = m; null !== V;) {
            r = V;
            y = r.child;
            switch (r.tag) {
              case 0:
              case 11:
              case 14:
              case 15:
                Qj(4, r, r.return);
                break;
              case 1:
                Mj(r, r.return);
                var n = r.stateNode;
                if ("function" === typeof n.componentWillUnmount) {
                  d = r;
                  c = r.return;
                  try {
                    b = d, n.props = b.memoizedProps, n.state = b.memoizedState, n.componentWillUnmount();
                  } catch (t) {
                    W(d, c, t);
                  }
                }
                break;
              case 5:
                Mj(r, r.return);
                break;
              case 22:
                if (null !== r.memoizedState) {
                  hk(q);
                  continue;
                }
            }
            null !== y ? (y.return = r, V = y) : hk(q);
          }
          m = m.sibling;
        }
        a: for (m = null, q = a;;) {
          if (5 === q.tag) {
            if (null === m) {
              m = q;
              try {
                e = q.stateNode, l ? (f = e.style, "function" === typeof f.setProperty ? f.setProperty("display", "none", "important") : f.display = "none") : (h = q.stateNode, k = q.memoizedProps.style, g = void 0 !== k && null !== k && k.hasOwnProperty("display") ? k.display : null, h.style.display = rb("display", g));
              } catch (t) {
                W(a, a.return, t);
              }
            }
          } else if (6 === q.tag) {
            if (null === m) try {
              q.stateNode.nodeValue = l ? "" : q.memoizedProps;
            } catch (t) {
              W(a, a.return, t);
            }
          } else if ((22 !== q.tag && 23 !== q.tag || null === q.memoizedState || q === a) && null !== q.child) {
            q.child.return = q;
            q = q.child;
            continue;
          }
          if (q === a) break a;
          for (; null === q.sibling;) {
            if (null === q.return || q.return === a) break a;
            m === q && (m = null);
            q = q.return;
          }
          m === q && (m = null);
          q.sibling.return = q.return;
          q = q.sibling;
        }
      }
      break;
    case 19:
      dk(b, a);
      fk(a);
      d & 4 && bk(a);
      break;
    case 21:
      break;
    default:
      dk(b, a), fk(a);
  }
}
function fk(a) {
  var b = a.flags;
  if (b & 2) {
    try {
      a: {
        for (var c = a.return; null !== c;) {
          if (Uj(c)) {
            var d = c;
            break a;
          }
          c = c.return;
        }
        throw Error(p(160));
      }
      switch (d.tag) {
        case 5:
          var e = d.stateNode;
          d.flags & 32 && (ob(e, ""), d.flags &= -33);
          var f = Vj(a);
          Xj(a, f, e);
          break;
        case 3:
        case 4:
          var g = d.stateNode.containerInfo,
            h = Vj(a);
          Wj(a, h, g);
          break;
        default:
          throw Error(p(161));
      }
    } catch (k) {
      W(a, a.return, k);
    }
    a.flags &= -3;
  }
  b & 4096 && (a.flags &= -4097);
}
function ik(a, b, c) {
  V = a;
  jk(a, b, c);
}
function jk(a, b, c) {
  for (var d = 0 !== (a.mode & 1); null !== V;) {
    var e = V,
      f = e.child;
    if (22 === e.tag && d) {
      var g = null !== e.memoizedState || Kj;
      if (!g) {
        var h = e.alternate,
          k = null !== h && null !== h.memoizedState || U;
        h = Kj;
        var l = U;
        Kj = g;
        if ((U = k) && !l) for (V = e; null !== V;) g = V, k = g.child, 22 === g.tag && null !== g.memoizedState ? kk(e) : null !== k ? (k.return = g, V = k) : kk(e);
        for (; null !== f;) V = f, jk(f, b, c), f = f.sibling;
        V = e;
        Kj = h;
        U = l;
      }
      lk(a, b, c);
    } else 0 !== (e.subtreeFlags & 8772) && null !== f ? (f.return = e, V = f) : lk(a, b, c);
  }
}
function lk(a) {
  for (; null !== V;) {
    var b = V;
    if (0 !== (b.flags & 8772)) {
      var c = b.alternate;
      try {
        if (0 !== (b.flags & 8772)) switch (b.tag) {
          case 0:
          case 11:
          case 15:
            U || Rj(5, b);
            break;
          case 1:
            var d = b.stateNode;
            if (b.flags & 4 && !U) if (null === c) d.componentDidMount();else {
              var e = b.elementType === b.type ? c.memoizedProps : Lg(b.type, c.memoizedProps);
              d.componentDidUpdate(e, c.memoizedState, d.__reactInternalSnapshotBeforeUpdate);
            }
            var f = b.updateQueue;
            null !== f && ih(b, f, d);
            break;
          case 3:
            var g = b.updateQueue;
            if (null !== g) {
              c = null;
              if (null !== b.child) switch (b.child.tag) {
                case 5:
                  c = b.child.stateNode;
                  break;
                case 1:
                  c = b.child.stateNode;
              }
              ih(b, g, c);
            }
            break;
          case 5:
            var h = b.stateNode;
            if (null === c && b.flags & 4) {
              c = h;
              var k = b.memoizedProps;
              switch (b.type) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  k.autoFocus && c.focus();
                  break;
                case "img":
                  k.src && (c.src = k.src);
              }
            }
            break;
          case 6:
            break;
          case 4:
            break;
          case 12:
            break;
          case 13:
            if (null === b.memoizedState) {
              var l = b.alternate;
              if (null !== l) {
                var m = l.memoizedState;
                if (null !== m) {
                  var q = m.dehydrated;
                  null !== q && bd(q);
                }
              }
            }
            break;
          case 19:
          case 17:
          case 21:
          case 22:
          case 23:
          case 25:
            break;
          default:
            throw Error(p(163));
        }
        U || b.flags & 512 && Sj(b);
      } catch (r) {
        W(b, b.return, r);
      }
    }
    if (b === a) {
      V = null;
      break;
    }
    c = b.sibling;
    if (null !== c) {
      c.return = b.return;
      V = c;
      break;
    }
    V = b.return;
  }
}
function hk(a) {
  for (; null !== V;) {
    var b = V;
    if (b === a) {
      V = null;
      break;
    }
    var c = b.sibling;
    if (null !== c) {
      c.return = b.return;
      V = c;
      break;
    }
    V = b.return;
  }
}
function kk(a) {
  for (; null !== V;) {
    var b = V;
    try {
      switch (b.tag) {
        case 0:
        case 11:
        case 15:
          var c = b.return;
          try {
            Rj(4, b);
          } catch (k) {
            W(b, c, k);
          }
          break;
        case 1:
          var d = b.stateNode;
          if ("function" === typeof d.componentDidMount) {
            var e = b.return;
            try {
              d.componentDidMount();
            } catch (k) {
              W(b, e, k);
            }
          }
          var f = b.return;
          try {
            Sj(b);
          } catch (k) {
            W(b, f, k);
          }
          break;
        case 5:
          var g = b.return;
          try {
            Sj(b);
          } catch (k) {
            W(b, g, k);
          }
      }
    } catch (k) {
      W(b, b.return, k);
    }
    if (b === a) {
      V = null;
      break;
    }
    var h = b.sibling;
    if (null !== h) {
      h.return = b.return;
      V = h;
      break;
    }
    V = b.return;
  }
}
var mk = Math.ceil,
  nk = ua.ReactCurrentDispatcher,
  ok = ua.ReactCurrentOwner,
  pk = ua.ReactCurrentBatchConfig,
  K = 0,
  R = null,
  Y = null,
  Z = 0,
  gj = 0,
  fj = Uf(0),
  T = 0,
  qk = null,
  hh = 0,
  rk = 0,
  sk = 0,
  tk = null,
  uk = null,
  gk = 0,
  Hj = Infinity,
  vk = null,
  Pi = !1,
  Qi = null,
  Si = null,
  wk = !1,
  xk = null,
  yk = 0,
  zk = 0,
  Ak = null,
  Bk = -1,
  Ck = 0;
function L() {
  return 0 !== (K & 6) ? B() : -1 !== Bk ? Bk : Bk = B();
}
function lh(a) {
  if (0 === (a.mode & 1)) return 1;
  if (0 !== (K & 2) && 0 !== Z) return Z & -Z;
  if (null !== Kg.transition) return 0 === Ck && (Ck = yc()), Ck;
  a = C;
  if (0 !== a) return a;
  a = window.event;
  a = void 0 === a ? 16 : jd(a.type);
  return a;
}
function mh(a, b, c, d) {
  if (50 < zk) throw zk = 0, Ak = null, Error(p(185));
  Ac(a, c, d);
  if (0 === (K & 2) || a !== R) a === R && (0 === (K & 2) && (rk |= c), 4 === T && Dk(a, Z)), Ek(a, d), 1 === c && 0 === K && 0 === (b.mode & 1) && (Hj = B() + 500, fg && jg());
}
function Ek(a, b) {
  var c = a.callbackNode;
  wc(a, b);
  var d = uc(a, a === R ? Z : 0);
  if (0 === d) null !== c && bc(c), a.callbackNode = null, a.callbackPriority = 0;else if (b = d & -d, a.callbackPriority !== b) {
    null != c && bc(c);
    if (1 === b) 0 === a.tag ? ig(Fk.bind(null, a)) : hg(Fk.bind(null, a)), Jf(function () {
      0 === (K & 6) && jg();
    }), c = null;else {
      switch (Dc(d)) {
        case 1:
          c = fc;
          break;
        case 4:
          c = gc;
          break;
        case 16:
          c = hc;
          break;
        case 536870912:
          c = jc;
          break;
        default:
          c = hc;
      }
      c = Gk(c, Hk.bind(null, a));
    }
    a.callbackPriority = b;
    a.callbackNode = c;
  }
}
function Hk(a, b) {
  Bk = -1;
  Ck = 0;
  if (0 !== (K & 6)) throw Error(p(327));
  var c = a.callbackNode;
  if (Ik() && a.callbackNode !== c) return null;
  var d = uc(a, a === R ? Z : 0);
  if (0 === d) return null;
  if (0 !== (d & 30) || 0 !== (d & a.expiredLanes) || b) b = Jk(a, d);else {
    b = d;
    var e = K;
    K |= 2;
    var f = Kk();
    if (R !== a || Z !== b) vk = null, Hj = B() + 500, Lk(a, b);
    do try {
      Mk();
      break;
    } catch (h) {
      Nk(a, h);
    } while (1);
    Qg();
    nk.current = f;
    K = e;
    null !== Y ? b = 0 : (R = null, Z = 0, b = T);
  }
  if (0 !== b) {
    2 === b && (e = xc(a), 0 !== e && (d = e, b = Ok(a, e)));
    if (1 === b) throw c = qk, Lk(a, 0), Dk(a, d), Ek(a, B()), c;
    if (6 === b) Dk(a, d);else {
      e = a.current.alternate;
      if (0 === (d & 30) && !Pk(e) && (b = Jk(a, d), 2 === b && (f = xc(a), 0 !== f && (d = f, b = Ok(a, f))), 1 === b)) throw c = qk, Lk(a, 0), Dk(a, d), Ek(a, B()), c;
      a.finishedWork = e;
      a.finishedLanes = d;
      switch (b) {
        case 0:
        case 1:
          throw Error(p(345));
        case 2:
          Qk(a, uk, vk);
          break;
        case 3:
          Dk(a, d);
          if ((d & 130023424) === d && (b = gk + 500 - B(), 10 < b)) {
            if (0 !== uc(a, 0)) break;
            e = a.suspendedLanes;
            if ((e & d) !== d) {
              L();
              a.pingedLanes |= a.suspendedLanes & e;
              break;
            }
            a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), b);
            break;
          }
          Qk(a, uk, vk);
          break;
        case 4:
          Dk(a, d);
          if ((d & 4194240) === d) break;
          b = a.eventTimes;
          for (e = -1; 0 < d;) {
            var g = 31 - oc(d);
            f = 1 << g;
            g = b[g];
            g > e && (e = g);
            d &= ~f;
          }
          d = e;
          d = B() - d;
          d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3E3 > d ? 3E3 : 4320 > d ? 4320 : 1960 * mk(d / 1960)) - d;
          if (10 < d) {
            a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), d);
            break;
          }
          Qk(a, uk, vk);
          break;
        case 5:
          Qk(a, uk, vk);
          break;
        default:
          throw Error(p(329));
      }
    }
  }
  Ek(a, B());
  return a.callbackNode === c ? Hk.bind(null, a) : null;
}
function Ok(a, b) {
  var c = tk;
  a.current.memoizedState.isDehydrated && (Lk(a, b).flags |= 256);
  a = Jk(a, b);
  2 !== a && (b = uk, uk = c, null !== b && Gj(b));
  return a;
}
function Gj(a) {
  null === uk ? uk = a : uk.push.apply(uk, a);
}
function Pk(a) {
  for (var b = a;;) {
    if (b.flags & 16384) {
      var c = b.updateQueue;
      if (null !== c && (c = c.stores, null !== c)) for (var d = 0; d < c.length; d++) {
        var e = c[d],
          f = e.getSnapshot;
        e = e.value;
        try {
          if (!He(f(), e)) return !1;
        } catch (g) {
          return !1;
        }
      }
    }
    c = b.child;
    if (b.subtreeFlags & 16384 && null !== c) c.return = b, b = c;else {
      if (b === a) break;
      for (; null === b.sibling;) {
        if (null === b.return || b.return === a) return !0;
        b = b.return;
      }
      b.sibling.return = b.return;
      b = b.sibling;
    }
  }
  return !0;
}
function Dk(a, b) {
  b &= ~sk;
  b &= ~rk;
  a.suspendedLanes |= b;
  a.pingedLanes &= ~b;
  for (a = a.expirationTimes; 0 < b;) {
    var c = 31 - oc(b),
      d = 1 << c;
    a[c] = -1;
    b &= ~d;
  }
}
function Fk(a) {
  if (0 !== (K & 6)) throw Error(p(327));
  Ik();
  var b = uc(a, 0);
  if (0 === (b & 1)) return Ek(a, B()), null;
  var c = Jk(a, b);
  if (0 !== a.tag && 2 === c) {
    var d = xc(a);
    0 !== d && (b = d, c = Ok(a, d));
  }
  if (1 === c) throw c = qk, Lk(a, 0), Dk(a, b), Ek(a, B()), c;
  if (6 === c) throw Error(p(345));
  a.finishedWork = a.current.alternate;
  a.finishedLanes = b;
  Qk(a, uk, vk);
  Ek(a, B());
  return null;
}
function Rk(a, b) {
  var c = K;
  K |= 1;
  try {
    return a(b);
  } finally {
    K = c, 0 === K && (Hj = B() + 500, fg && jg());
  }
}
function Sk(a) {
  null !== xk && 0 === xk.tag && 0 === (K & 6) && Ik();
  var b = K;
  K |= 1;
  var c = pk.transition,
    d = C;
  try {
    if (pk.transition = null, C = 1, a) return a();
  } finally {
    C = d, pk.transition = c, K = b, 0 === (K & 6) && jg();
  }
}
function Ij() {
  gj = fj.current;
  E(fj);
}
function Lk(a, b) {
  a.finishedWork = null;
  a.finishedLanes = 0;
  var c = a.timeoutHandle;
  -1 !== c && (a.timeoutHandle = -1, Gf(c));
  if (null !== Y) for (c = Y.return; null !== c;) {
    var d = c;
    wg(d);
    switch (d.tag) {
      case 1:
        d = d.type.childContextTypes;
        null !== d && void 0 !== d && $f();
        break;
      case 3:
        Jh();
        E(Wf);
        E(H);
        Oh();
        break;
      case 5:
        Lh(d);
        break;
      case 4:
        Jh();
        break;
      case 13:
        E(M);
        break;
      case 19:
        E(M);
        break;
      case 10:
        Rg(d.type._context);
        break;
      case 22:
      case 23:
        Ij();
    }
    c = c.return;
  }
  R = a;
  Y = a = wh(a.current, null);
  Z = gj = b;
  T = 0;
  qk = null;
  sk = rk = hh = 0;
  uk = tk = null;
  if (null !== Wg) {
    for (b = 0; b < Wg.length; b++) if (c = Wg[b], d = c.interleaved, null !== d) {
      c.interleaved = null;
      var e = d.next,
        f = c.pending;
      if (null !== f) {
        var g = f.next;
        f.next = e;
        d.next = g;
      }
      c.pending = d;
    }
    Wg = null;
  }
  return a;
}
function Nk(a, b) {
  do {
    var c = Y;
    try {
      Qg();
      Ph.current = ai;
      if (Sh) {
        for (var d = N.memoizedState; null !== d;) {
          var e = d.queue;
          null !== e && (e.pending = null);
          d = d.next;
        }
        Sh = !1;
      }
      Rh = 0;
      P = O = N = null;
      Th = !1;
      Uh = 0;
      ok.current = null;
      if (null === c || null === c.return) {
        T = 1;
        qk = b;
        Y = null;
        break;
      }
      a: {
        var f = a,
          g = c.return,
          h = c,
          k = b;
        b = Z;
        h.flags |= 32768;
        if (null !== k && "object" === typeof k && "function" === typeof k.then) {
          var l = k,
            m = h,
            q = m.tag;
          if (0 === (m.mode & 1) && (0 === q || 11 === q || 15 === q)) {
            var r = m.alternate;
            r ? (m.updateQueue = r.updateQueue, m.memoizedState = r.memoizedState, m.lanes = r.lanes) : (m.updateQueue = null, m.memoizedState = null);
          }
          var y = Vi(g);
          if (null !== y) {
            y.flags &= -257;
            Wi(y, g, h, f, b);
            y.mode & 1 && Ti(f, l, b);
            b = y;
            k = l;
            var n = b.updateQueue;
            if (null === n) {
              var t = new Set();
              t.add(k);
              b.updateQueue = t;
            } else n.add(k);
            break a;
          } else {
            if (0 === (b & 1)) {
              Ti(f, l, b);
              uj();
              break a;
            }
            k = Error(p(426));
          }
        } else if (I && h.mode & 1) {
          var J = Vi(g);
          if (null !== J) {
            0 === (J.flags & 65536) && (J.flags |= 256);
            Wi(J, g, h, f, b);
            Jg(Ki(k, h));
            break a;
          }
        }
        f = k = Ki(k, h);
        4 !== T && (T = 2);
        null === tk ? tk = [f] : tk.push(f);
        f = g;
        do {
          switch (f.tag) {
            case 3:
              f.flags |= 65536;
              b &= -b;
              f.lanes |= b;
              var x = Oi(f, k, b);
              fh(f, x);
              break a;
            case 1:
              h = k;
              var w = f.type,
                u = f.stateNode;
              if (0 === (f.flags & 128) && ("function" === typeof w.getDerivedStateFromError || null !== u && "function" === typeof u.componentDidCatch && (null === Si || !Si.has(u)))) {
                f.flags |= 65536;
                b &= -b;
                f.lanes |= b;
                var F = Ri(f, h, b);
                fh(f, F);
                break a;
              }
          }
          f = f.return;
        } while (null !== f);
      }
      Tk(c);
    } catch (na) {
      b = na;
      Y === c && null !== c && (Y = c = c.return);
      continue;
    }
    break;
  } while (1);
}
function Kk() {
  var a = nk.current;
  nk.current = ai;
  return null === a ? ai : a;
}
function uj() {
  if (0 === T || 3 === T || 2 === T) T = 4;
  null === R || 0 === (hh & 268435455) && 0 === (rk & 268435455) || Dk(R, Z);
}
function Jk(a, b) {
  var c = K;
  K |= 2;
  var d = Kk();
  if (R !== a || Z !== b) vk = null, Lk(a, b);
  do try {
    Uk();
    break;
  } catch (e) {
    Nk(a, e);
  } while (1);
  Qg();
  K = c;
  nk.current = d;
  if (null !== Y) throw Error(p(261));
  R = null;
  Z = 0;
  return T;
}
function Uk() {
  for (; null !== Y;) Vk(Y);
}
function Mk() {
  for (; null !== Y && !cc();) Vk(Y);
}
function Vk(a) {
  var b = Wk(a.alternate, a, gj);
  a.memoizedProps = a.pendingProps;
  null === b ? Tk(a) : Y = b;
  ok.current = null;
}
function Tk(a) {
  var b = a;
  do {
    var c = b.alternate;
    a = b.return;
    if (0 === (b.flags & 32768)) {
      if (c = Fj(c, b, gj), null !== c) {
        Y = c;
        return;
      }
    } else {
      c = Jj(c, b);
      if (null !== c) {
        c.flags &= 32767;
        Y = c;
        return;
      }
      if (null !== a) a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;else {
        T = 6;
        Y = null;
        return;
      }
    }
    b = b.sibling;
    if (null !== b) {
      Y = b;
      return;
    }
    Y = b = a;
  } while (null !== b);
  0 === T && (T = 5);
}
function Qk(a, b, c) {
  var d = C,
    e = pk.transition;
  try {
    pk.transition = null, C = 1, Xk(a, b, c, d);
  } finally {
    pk.transition = e, C = d;
  }
  return null;
}
function Xk(a, b, c, d) {
  do Ik(); while (null !== xk);
  if (0 !== (K & 6)) throw Error(p(327));
  c = a.finishedWork;
  var e = a.finishedLanes;
  if (null === c) return null;
  a.finishedWork = null;
  a.finishedLanes = 0;
  if (c === a.current) throw Error(p(177));
  a.callbackNode = null;
  a.callbackPriority = 0;
  var f = c.lanes | c.childLanes;
  Bc(a, f);
  a === R && (Y = R = null, Z = 0);
  0 === (c.subtreeFlags & 2064) && 0 === (c.flags & 2064) || wk || (wk = !0, Gk(hc, function () {
    Ik();
    return null;
  }));
  f = 0 !== (c.flags & 15990);
  if (0 !== (c.subtreeFlags & 15990) || f) {
    f = pk.transition;
    pk.transition = null;
    var g = C;
    C = 1;
    var h = K;
    K |= 4;
    ok.current = null;
    Pj(a, c);
    ek(c, a);
    Oe(Df);
    dd = !!Cf;
    Df = Cf = null;
    a.current = c;
    ik(c, a, e);
    dc();
    K = h;
    C = g;
    pk.transition = f;
  } else a.current = c;
  wk && (wk = !1, xk = a, yk = e);
  f = a.pendingLanes;
  0 === f && (Si = null);
  mc(c.stateNode, d);
  Ek(a, B());
  if (null !== b) for (d = a.onRecoverableError, c = 0; c < b.length; c++) e = b[c], d(e.value, {
    componentStack: e.stack,
    digest: e.digest
  });
  if (Pi) throw Pi = !1, a = Qi, Qi = null, a;
  0 !== (yk & 1) && 0 !== a.tag && Ik();
  f = a.pendingLanes;
  0 !== (f & 1) ? a === Ak ? zk++ : (zk = 0, Ak = a) : zk = 0;
  jg();
  return null;
}
function Ik() {
  if (null !== xk) {
    var a = Dc(yk),
      b = pk.transition,
      c = C;
    try {
      pk.transition = null;
      C = 16 > a ? 16 : a;
      if (null === xk) var d = !1;else {
        a = xk;
        xk = null;
        yk = 0;
        if (0 !== (K & 6)) throw Error(p(331));
        var e = K;
        K |= 4;
        for (V = a.current; null !== V;) {
          var f = V,
            g = f.child;
          if (0 !== (V.flags & 16)) {
            var h = f.deletions;
            if (null !== h) {
              for (var k = 0; k < h.length; k++) {
                var l = h[k];
                for (V = l; null !== V;) {
                  var m = V;
                  switch (m.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(8, m, f);
                  }
                  var q = m.child;
                  if (null !== q) q.return = m, V = q;else for (; null !== V;) {
                    m = V;
                    var r = m.sibling,
                      y = m.return;
                    Tj(m);
                    if (m === l) {
                      V = null;
                      break;
                    }
                    if (null !== r) {
                      r.return = y;
                      V = r;
                      break;
                    }
                    V = y;
                  }
                }
              }
              var n = f.alternate;
              if (null !== n) {
                var t = n.child;
                if (null !== t) {
                  n.child = null;
                  do {
                    var J = t.sibling;
                    t.sibling = null;
                    t = J;
                  } while (null !== t);
                }
              }
              V = f;
            }
          }
          if (0 !== (f.subtreeFlags & 2064) && null !== g) g.return = f, V = g;else b: for (; null !== V;) {
            f = V;
            if (0 !== (f.flags & 2048)) switch (f.tag) {
              case 0:
              case 11:
              case 15:
                Qj(9, f, f.return);
            }
            var x = f.sibling;
            if (null !== x) {
              x.return = f.return;
              V = x;
              break b;
            }
            V = f.return;
          }
        }
        var w = a.current;
        for (V = w; null !== V;) {
          g = V;
          var u = g.child;
          if (0 !== (g.subtreeFlags & 2064) && null !== u) u.return = g, V = u;else b: for (g = w; null !== V;) {
            h = V;
            if (0 !== (h.flags & 2048)) try {
              switch (h.tag) {
                case 0:
                case 11:
                case 15:
                  Rj(9, h);
              }
            } catch (na) {
              W(h, h.return, na);
            }
            if (h === g) {
              V = null;
              break b;
            }
            var F = h.sibling;
            if (null !== F) {
              F.return = h.return;
              V = F;
              break b;
            }
            V = h.return;
          }
        }
        K = e;
        jg();
        if (lc && "function" === typeof lc.onPostCommitFiberRoot) try {
          lc.onPostCommitFiberRoot(kc, a);
        } catch (na) {}
        d = !0;
      }
      return d;
    } finally {
      C = c, pk.transition = b;
    }
  }
  return !1;
}
function Yk(a, b, c) {
  b = Ki(c, b);
  b = Oi(a, b, 1);
  a = dh(a, b, 1);
  b = L();
  null !== a && (Ac(a, 1, b), Ek(a, b));
}
function W(a, b, c) {
  if (3 === a.tag) Yk(a, a, c);else for (; null !== b;) {
    if (3 === b.tag) {
      Yk(b, a, c);
      break;
    } else if (1 === b.tag) {
      var d = b.stateNode;
      if ("function" === typeof b.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === Si || !Si.has(d))) {
        a = Ki(c, a);
        a = Ri(b, a, 1);
        b = dh(b, a, 1);
        a = L();
        null !== b && (Ac(b, 1, a), Ek(b, a));
        break;
      }
    }
    b = b.return;
  }
}
function Ui(a, b, c) {
  var d = a.pingCache;
  null !== d && d.delete(b);
  b = L();
  a.pingedLanes |= a.suspendedLanes & c;
  R === a && (Z & c) === c && (4 === T || 3 === T && (Z & 130023424) === Z && 500 > B() - gk ? Lk(a, 0) : sk |= c);
  Ek(a, b);
}
function Zk(a, b) {
  0 === b && (0 === (a.mode & 1) ? b = 1 : (b = sc, sc <<= 1, 0 === (sc & 130023424) && (sc = 4194304)));
  var c = L();
  a = Zg(a, b);
  null !== a && (Ac(a, b, c), Ek(a, c));
}
function vj(a) {
  var b = a.memoizedState,
    c = 0;
  null !== b && (c = b.retryLane);
  Zk(a, c);
}
function ck(a, b) {
  var c = 0;
  switch (a.tag) {
    case 13:
      var d = a.stateNode;
      var e = a.memoizedState;
      null !== e && (c = e.retryLane);
      break;
    case 19:
      d = a.stateNode;
      break;
    default:
      throw Error(p(314));
  }
  null !== d && d.delete(b);
  Zk(a, c);
}
var Wk;
Wk = function Wk(a, b, c) {
  if (null !== a) {
    if (a.memoizedProps !== b.pendingProps || Wf.current) Ug = !0;else {
      if (0 === (a.lanes & c) && 0 === (b.flags & 128)) return Ug = !1, zj(a, b, c);
      Ug = 0 !== (a.flags & 131072) ? !0 : !1;
    }
  } else Ug = !1, I && 0 !== (b.flags & 1048576) && ug(b, ng, b.index);
  b.lanes = 0;
  switch (b.tag) {
    case 2:
      var d = b.type;
      jj(a, b);
      a = b.pendingProps;
      var e = Yf(b, H.current);
      Tg(b, c);
      e = Xh(null, b, d, a, e, c);
      var f = bi();
      b.flags |= 1;
      "object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof ? (b.tag = 1, b.memoizedState = null, b.updateQueue = null, Zf(d) ? (f = !0, cg(b)) : f = !1, b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null, ah(b), e.updater = nh, b.stateNode = e, e._reactInternals = b, rh(b, d, a, c), b = kj(null, b, d, !0, f, c)) : (b.tag = 0, I && f && vg(b), Yi(null, b, e, c), b = b.child);
      return b;
    case 16:
      d = b.elementType;
      a: {
        jj(a, b);
        a = b.pendingProps;
        e = d._init;
        d = e(d._payload);
        b.type = d;
        e = b.tag = $k(d);
        a = Lg(d, a);
        switch (e) {
          case 0:
            b = dj(null, b, d, a, c);
            break a;
          case 1:
            b = ij(null, b, d, a, c);
            break a;
          case 11:
            b = Zi(null, b, d, a, c);
            break a;
          case 14:
            b = aj(null, b, d, Lg(d.type, a), c);
            break a;
        }
        throw Error(p(306, d, ""));
      }
      return b;
    case 0:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), dj(a, b, d, e, c);
    case 1:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), ij(a, b, d, e, c);
    case 3:
      a: {
        lj(b);
        if (null === a) throw Error(p(387));
        d = b.pendingProps;
        f = b.memoizedState;
        e = f.element;
        bh(a, b);
        gh(b, d, null, c);
        var g = b.memoizedState;
        d = g.element;
        if (f.isDehydrated) {
          if (f = {
            element: d,
            isDehydrated: !1,
            cache: g.cache,
            pendingSuspenseBoundaries: g.pendingSuspenseBoundaries,
            transitions: g.transitions
          }, b.updateQueue.baseState = f, b.memoizedState = f, b.flags & 256) {
            e = Ki(Error(p(423)), b);
            b = mj(a, b, d, c, e);
            break a;
          } else if (d !== e) {
            e = Ki(Error(p(424)), b);
            b = mj(a, b, d, c, e);
            break a;
          } else for (yg = Lf(b.stateNode.containerInfo.firstChild), xg = b, I = !0, zg = null, c = Ch(b, null, d, c), b.child = c; c;) c.flags = c.flags & -3 | 4096, c = c.sibling;
        } else {
          Ig();
          if (d === e) {
            b = $i(a, b, c);
            break a;
          }
          Yi(a, b, d, c);
        }
        b = b.child;
      }
      return b;
    case 5:
      return Kh(b), null === a && Eg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, Ef(d, e) ? g = null : null !== f && Ef(d, f) && (b.flags |= 32), hj(a, b), Yi(a, b, g, c), b.child;
    case 6:
      return null === a && Eg(b), null;
    case 13:
      return pj(a, b, c);
    case 4:
      return Ih(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Bh(b, null, d, c) : Yi(a, b, d, c), b.child;
    case 11:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), Zi(a, b, d, e, c);
    case 7:
      return Yi(a, b, b.pendingProps, c), b.child;
    case 8:
      return Yi(a, b, b.pendingProps.children, c), b.child;
    case 12:
      return Yi(a, b, b.pendingProps.children, c), b.child;
    case 10:
      a: {
        d = b.type._context;
        e = b.pendingProps;
        f = b.memoizedProps;
        g = e.value;
        G(Mg, d._currentValue);
        d._currentValue = g;
        if (null !== f) if (He(f.value, g)) {
          if (f.children === e.children && !Wf.current) {
            b = $i(a, b, c);
            break a;
          }
        } else for (f = b.child, null !== f && (f.return = b); null !== f;) {
          var h = f.dependencies;
          if (null !== h) {
            g = f.child;
            for (var k = h.firstContext; null !== k;) {
              if (k.context === d) {
                if (1 === f.tag) {
                  k = ch(-1, c & -c);
                  k.tag = 2;
                  var l = f.updateQueue;
                  if (null !== l) {
                    l = l.shared;
                    var m = l.pending;
                    null === m ? k.next = k : (k.next = m.next, m.next = k);
                    l.pending = k;
                  }
                }
                f.lanes |= c;
                k = f.alternate;
                null !== k && (k.lanes |= c);
                Sg(f.return, c, b);
                h.lanes |= c;
                break;
              }
              k = k.next;
            }
          } else if (10 === f.tag) g = f.type === b.type ? null : f.child;else if (18 === f.tag) {
            g = f.return;
            if (null === g) throw Error(p(341));
            g.lanes |= c;
            h = g.alternate;
            null !== h && (h.lanes |= c);
            Sg(g, c, b);
            g = f.sibling;
          } else g = f.child;
          if (null !== g) g.return = f;else for (g = f; null !== g;) {
            if (g === b) {
              g = null;
              break;
            }
            f = g.sibling;
            if (null !== f) {
              f.return = g.return;
              g = f;
              break;
            }
            g = g.return;
          }
          f = g;
        }
        Yi(a, b, e.children, c);
        b = b.child;
      }
      return b;
    case 9:
      return e = b.type, d = b.pendingProps.children, Tg(b, c), e = Vg(e), d = d(e), b.flags |= 1, Yi(a, b, d, c), b.child;
    case 14:
      return d = b.type, e = Lg(d, b.pendingProps), e = Lg(d.type, e), aj(a, b, d, e, c);
    case 15:
      return cj(a, b, b.type, b.pendingProps, c);
    case 17:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), jj(a, b), b.tag = 1, Zf(d) ? (a = !0, cg(b)) : a = !1, Tg(b, c), ph(b, d, e), rh(b, d, e, c), kj(null, b, d, !0, a, c);
    case 19:
      return yj(a, b, c);
    case 22:
      return ej(a, b, c);
  }
  throw Error(p(156, b.tag));
};
function Gk(a, b) {
  return ac(a, b);
}
function al(a, b, c, d) {
  this.tag = a;
  this.key = c;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d;
  this.subtreeFlags = this.flags = 0;
  this.deletions = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function Bg(a, b, c, d) {
  return new al(a, b, c, d);
}
function bj(a) {
  a = a.prototype;
  return !(!a || !a.isReactComponent);
}
function $k(a) {
  if ("function" === typeof a) return bj(a) ? 1 : 0;
  if (void 0 !== a && null !== a) {
    a = a.$$typeof;
    if (a === Da) return 11;
    if (a === Ga) return 14;
  }
  return 2;
}
function wh(a, b) {
  var c = a.alternate;
  null === c ? (c = Bg(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.type = a.type, c.flags = 0, c.subtreeFlags = 0, c.deletions = null);
  c.flags = a.flags & 14680064;
  c.childLanes = a.childLanes;
  c.lanes = a.lanes;
  c.child = a.child;
  c.memoizedProps = a.memoizedProps;
  c.memoizedState = a.memoizedState;
  c.updateQueue = a.updateQueue;
  b = a.dependencies;
  c.dependencies = null === b ? null : {
    lanes: b.lanes,
    firstContext: b.firstContext
  };
  c.sibling = a.sibling;
  c.index = a.index;
  c.ref = a.ref;
  return c;
}
function yh(a, b, c, d, e, f) {
  var g = 2;
  d = a;
  if ("function" === typeof a) bj(a) && (g = 1);else if ("string" === typeof a) g = 5;else a: switch (a) {
    case ya:
      return Ah(c.children, e, f, b);
    case za:
      g = 8;
      e |= 8;
      break;
    case Aa:
      return a = Bg(12, c, b, e | 2), a.elementType = Aa, a.lanes = f, a;
    case Ea:
      return a = Bg(13, c, b, e), a.elementType = Ea, a.lanes = f, a;
    case Fa:
      return a = Bg(19, c, b, e), a.elementType = Fa, a.lanes = f, a;
    case Ia:
      return qj(c, e, f, b);
    default:
      if ("object" === typeof a && null !== a) switch (a.$$typeof) {
        case Ba:
          g = 10;
          break a;
        case Ca:
          g = 9;
          break a;
        case Da:
          g = 11;
          break a;
        case Ga:
          g = 14;
          break a;
        case Ha:
          g = 16;
          d = null;
          break a;
      }
      throw Error(p(130, null == a ? a : typeof a, ""));
  }
  b = Bg(g, c, b, e);
  b.elementType = a;
  b.type = d;
  b.lanes = f;
  return b;
}
function Ah(a, b, c, d) {
  a = Bg(7, a, d, b);
  a.lanes = c;
  return a;
}
function qj(a, b, c, d) {
  a = Bg(22, a, d, b);
  a.elementType = Ia;
  a.lanes = c;
  a.stateNode = {
    isHidden: !1
  };
  return a;
}
function xh(a, b, c) {
  a = Bg(6, a, null, b);
  a.lanes = c;
  return a;
}
function zh(a, b, c) {
  b = Bg(4, null !== a.children ? a.children : [], a.key, b);
  b.lanes = c;
  b.stateNode = {
    containerInfo: a.containerInfo,
    pendingChildren: null,
    implementation: a.implementation
  };
  return b;
}
function bl(a, b, c, d, e) {
  this.tag = b;
  this.containerInfo = a;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.callbackNode = this.pendingContext = this.context = null;
  this.callbackPriority = 0;
  this.eventTimes = zc(0);
  this.expirationTimes = zc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = zc(0);
  this.identifierPrefix = d;
  this.onRecoverableError = e;
  this.mutableSourceEagerHydrationData = null;
}
function cl(a, b, c, d, e, f, g, h, k) {
  a = new bl(a, b, c, h, k);
  1 === b ? (b = 1, !0 === f && (b |= 8)) : b = 0;
  f = Bg(3, null, null, b);
  a.current = f;
  f.stateNode = a;
  f.memoizedState = {
    element: d,
    isDehydrated: c,
    cache: null,
    transitions: null,
    pendingSuspenseBoundaries: null
  };
  ah(f);
  return a;
}
function dl(a, b, c) {
  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
  return {
    $$typeof: wa,
    key: null == d ? null : "" + d,
    children: a,
    containerInfo: b,
    implementation: c
  };
}
function el(a) {
  if (!a) return Vf;
  a = a._reactInternals;
  a: {
    if (Vb(a) !== a || 1 !== a.tag) throw Error(p(170));
    var b = a;
    do {
      switch (b.tag) {
        case 3:
          b = b.stateNode.context;
          break a;
        case 1:
          if (Zf(b.type)) {
            b = b.stateNode.__reactInternalMemoizedMergedChildContext;
            break a;
          }
      }
      b = b.return;
    } while (null !== b);
    throw Error(p(171));
  }
  if (1 === a.tag) {
    var c = a.type;
    if (Zf(c)) return bg(a, c, b);
  }
  return b;
}
function fl(a, b, c, d, e, f, g, h, k) {
  a = cl(c, d, !0, a, e, f, g, h, k);
  a.context = el(null);
  c = a.current;
  d = L();
  e = lh(c);
  f = ch(d, e);
  f.callback = void 0 !== b && null !== b ? b : null;
  dh(c, f, e);
  a.current.lanes = e;
  Ac(a, e, d);
  Ek(a, d);
  return a;
}
function gl(a, b, c, d) {
  var e = b.current,
    f = L(),
    g = lh(e);
  c = el(c);
  null === b.context ? b.context = c : b.pendingContext = c;
  b = ch(f, g);
  b.payload = {
    element: a
  };
  d = void 0 === d ? null : d;
  null !== d && (b.callback = d);
  a = dh(e, b, g);
  null !== a && (mh(a, e, g, f), eh(a, e, g));
  return g;
}
function hl(a) {
  a = a.current;
  if (!a.child) return null;
  switch (a.child.tag) {
    case 5:
      return a.child.stateNode;
    default:
      return a.child.stateNode;
  }
}
function il(a, b) {
  a = a.memoizedState;
  if (null !== a && null !== a.dehydrated) {
    var c = a.retryLane;
    a.retryLane = 0 !== c && c < b ? c : b;
  }
}
function jl(a, b) {
  il(a, b);
  (a = a.alternate) && il(a, b);
}
function kl() {
  return null;
}
var ll = "function" === typeof reportError ? reportError : function (a) {
  console.error(a);
};
function ml(a) {
  this._internalRoot = a;
}
nl.prototype.render = ml.prototype.render = function (a) {
  var b = this._internalRoot;
  if (null === b) throw Error(p(409));
  gl(a, b, null, null);
};
nl.prototype.unmount = ml.prototype.unmount = function () {
  var a = this._internalRoot;
  if (null !== a) {
    this._internalRoot = null;
    var b = a.containerInfo;
    Sk(function () {
      gl(null, a, null, null);
    });
    b[uf] = null;
  }
};
function nl(a) {
  this._internalRoot = a;
}
nl.prototype.unstable_scheduleHydration = function (a) {
  if (a) {
    var b = Hc();
    a = {
      blockedOn: null,
      target: a,
      priority: b
    };
    for (var c = 0; c < Qc.length && 0 !== b && b < Qc[c].priority; c++);
    Qc.splice(c, 0, a);
    0 === c && Vc(a);
  }
};
function ol(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType);
}
function pl(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
}
function ql() {}
function rl(a, b, c, d, e) {
  if (e) {
    if ("function" === typeof d) {
      var f = d;
      d = function d() {
        var a = hl(g);
        f.call(a);
      };
    }
    var g = fl(b, d, a, 0, null, !1, !1, "", ql);
    a._reactRootContainer = g;
    a[uf] = g.current;
    sf(8 === a.nodeType ? a.parentNode : a);
    Sk();
    return g;
  }
  for (; e = a.lastChild;) a.removeChild(e);
  if ("function" === typeof d) {
    var h = d;
    d = function d() {
      var a = hl(k);
      h.call(a);
    };
  }
  var k = cl(a, 0, !1, null, null, !1, !1, "", ql);
  a._reactRootContainer = k;
  a[uf] = k.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  Sk(function () {
    gl(b, k, c, d);
  });
  return k;
}
function sl(a, b, c, d, e) {
  var f = c._reactRootContainer;
  if (f) {
    var g = f;
    if ("function" === typeof e) {
      var h = e;
      e = function e() {
        var a = hl(g);
        h.call(a);
      };
    }
    gl(b, g, a, e);
  } else g = rl(c, b, a, e, d);
  return hl(g);
}
Ec = function Ec(a) {
  switch (a.tag) {
    case 3:
      var b = a.stateNode;
      if (b.current.memoizedState.isDehydrated) {
        var c = tc(b.pendingLanes);
        0 !== c && (Cc(b, c | 1), Ek(b, B()), 0 === (K & 6) && (Hj = B() + 500, jg()));
      }
      break;
    case 13:
      Sk(function () {
        var b = Zg(a, 1);
        if (null !== b) {
          var c = L();
          mh(b, a, 1, c);
        }
      }), jl(a, 1);
  }
};
Fc = function Fc(a) {
  if (13 === a.tag) {
    var b = Zg(a, 134217728);
    if (null !== b) {
      var c = L();
      mh(b, a, 134217728, c);
    }
    jl(a, 134217728);
  }
};
Gc = function Gc(a) {
  if (13 === a.tag) {
    var b = lh(a),
      c = Zg(a, b);
    if (null !== c) {
      var d = L();
      mh(c, a, b, d);
    }
    jl(a, b);
  }
};
Hc = function Hc() {
  return C;
};
Ic = function Ic(a, b) {
  var c = C;
  try {
    return C = a, b();
  } finally {
    C = c;
  }
};
yb = function yb(a, b, c) {
  switch (b) {
    case "input":
      bb(a, c);
      b = c.name;
      if ("radio" === c.type && null != b) {
        for (c = a; c.parentNode;) c = c.parentNode;
        c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');
        for (b = 0; b < c.length; b++) {
          var d = c[b];
          if (d !== a && d.form === a.form) {
            var e = Db(d);
            if (!e) throw Error(p(90));
            Wa(d);
            bb(d, e);
          }
        }
      }
      break;
    case "textarea":
      ib(a, c);
      break;
    case "select":
      b = c.value, null != b && fb(a, !!c.multiple, b, !1);
  }
};
Gb = Rk;
Hb = Sk;
var tl = {
    usingClientEntryPoint: !1,
    Events: [Cb, ue, Db, Eb, Fb, Rk]
  },
  ul = {
    findFiberByHostInstance: Wc,
    bundleType: 0,
    version: "18.2.0",
    rendererPackageName: "react-dom"
  };
var vl = {
  bundleType: ul.bundleType,
  version: ul.version,
  rendererPackageName: ul.rendererPackageName,
  rendererConfig: ul.rendererConfig,
  overrideHookState: null,
  overrideHookStateDeletePath: null,
  overrideHookStateRenamePath: null,
  overrideProps: null,
  overridePropsDeletePath: null,
  overridePropsRenamePath: null,
  setErrorHandler: null,
  setSuspenseHandler: null,
  scheduleUpdate: null,
  currentDispatcherRef: ua.ReactCurrentDispatcher,
  findHostInstanceByFiber: function findHostInstanceByFiber(a) {
    a = Zb(a);
    return null === a ? null : a.stateNode;
  },
  findFiberByHostInstance: ul.findFiberByHostInstance || kl,
  findHostInstancesForRefresh: null,
  scheduleRefresh: null,
  scheduleRoot: null,
  setRefreshHandler: null,
  getCurrentFiber: null,
  reconcilerVersion: "18.2.0-next-9e3b772b8-20220608"
};
if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
  var wl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!wl.isDisabled && wl.supportsFiber) try {
    kc = wl.inject(vl), lc = wl;
  } catch (a) {}
}
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tl;
exports.createPortal = function (a, b) {
  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
  if (!ol(b)) throw Error(p(200));
  return dl(a, b, null, c);
};
exports.createRoot = function (a, b) {
  if (!ol(a)) throw Error(p(299));
  var c = !1,
    d = "",
    e = ll;
  null !== b && void 0 !== b && (!0 === b.unstable_strictMode && (c = !0), void 0 !== b.identifierPrefix && (d = b.identifierPrefix), void 0 !== b.onRecoverableError && (e = b.onRecoverableError));
  b = cl(a, 1, !1, null, null, c, !1, d, e);
  a[uf] = b.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  return new ml(b);
};
exports.findDOMNode = function (a) {
  if (null == a) return null;
  if (1 === a.nodeType) return a;
  var b = a._reactInternals;
  if (void 0 === b) {
    if ("function" === typeof a.render) throw Error(p(188));
    a = Object.keys(a).join(",");
    throw Error(p(268, a));
  }
  a = Zb(b);
  a = null === a ? null : a.stateNode;
  return a;
};
exports.flushSync = function (a) {
  return Sk(a);
};
exports.hydrate = function (a, b, c) {
  if (!pl(b)) throw Error(p(200));
  return sl(null, a, b, !0, c);
};
exports.hydrateRoot = function (a, b, c) {
  if (!ol(a)) throw Error(p(405));
  var d = null != c && c.hydratedSources || null,
    e = !1,
    f = "",
    g = ll;
  null !== c && void 0 !== c && (!0 === c.unstable_strictMode && (e = !0), void 0 !== c.identifierPrefix && (f = c.identifierPrefix), void 0 !== c.onRecoverableError && (g = c.onRecoverableError));
  b = fl(b, null, a, 1, null != c ? c : null, e, !1, f, g);
  a[uf] = b.current;
  sf(a);
  if (d) for (a = 0; a < d.length; a++) c = d[a], e = c._getVersion, e = e(c._source), null == b.mutableSourceEagerHydrationData ? b.mutableSourceEagerHydrationData = [c, e] : b.mutableSourceEagerHydrationData.push(c, e);
  return new nl(b);
};
exports.render = function (a, b, c) {
  if (!pl(b)) throw Error(p(200));
  return sl(null, a, b, !1, c);
};
exports.unmountComponentAtNode = function (a) {
  if (!pl(a)) throw Error(p(40));
  return a._reactRootContainer ? (Sk(function () {
    sl(null, null, a, !1, function () {
      a._reactRootContainer = null;
      a[uf] = null;
    });
  }), !0) : !1;
};
exports.unstable_batchedUpdates = Rk;
exports.unstable_renderSubtreeIntoContainer = function (a, b, c, d) {
  if (!pl(c)) throw Error(p(200));
  if (null == a || void 0 === a._reactInternals) throw Error(p(38));
  return sl(a, b, c, !1, d);
};
exports.version = "18.2.0-next-9e3b772b8-20220608";

/***/ }),

/***/ 250:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var m = __webpack_require__(164);
if (true) {
  exports.createRoot = m.createRoot;
  exports.hydrateRoot = m.hydrateRoot;
} else { var i; }

/***/ }),

/***/ 164:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
    return;
  }
  if (false) {}
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}
if (true) {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(463);
} else {}

/***/ }),

/***/ 77:
/***/ (function(module) {

/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */

var hasElementType = typeof Element !== 'undefined';
var hasMap = typeof Map === 'function';
var hasSet = typeof Set === 'function';
var hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;

// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js

function equal(a, b) {
  // START: fast-deep-equal es6/index.js 3.1.3
  if (a === b) return true;
  if (a && b && typeof a == 'object' && typeof b == 'object') {
    if (a.constructor !== b.constructor) return false;
    var length, i, keys;
    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;) if (!equal(a[i], b[i])) return false;
      return true;
    }

    // START: Modifications:
    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code
    //    to co-exist with es5.
    // 2. Replace `for of` with es5 compliant iteration using `for`.
    //    Basically, take:
    //
    //    ```js
    //    for (i of a.entries())
    //      if (!b.has(i[0])) return false;
    //    ```
    //
    //    ... and convert to:
    //
    //    ```js
    //    it = a.entries();
    //    while (!(i = it.next()).done)
    //      if (!b.has(i.value[0])) return false;
    //    ```
    //
    //    **Note**: `i` access switches to `i.value`.
    var it;
    if (hasMap && a instanceof Map && b instanceof Map) {
      if (a.size !== b.size) return false;
      it = a.entries();
      while (!(i = it.next()).done) if (!b.has(i.value[0])) return false;
      it = a.entries();
      while (!(i = it.next()).done) if (!equal(i.value[1], b.get(i.value[0]))) return false;
      return true;
    }
    if (hasSet && a instanceof Set && b instanceof Set) {
      if (a.size !== b.size) return false;
      it = a.entries();
      while (!(i = it.next()).done) if (!b.has(i.value[0])) return false;
      return true;
    }
    // END: Modifications

    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;) if (a[i] !== b[i]) return false;
      return true;
    }
    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
    // START: Modifications:
    // Apply guards for `Object.create(null)` handling. See:
    // - https://github.com/FormidableLabs/react-fast-compare/issues/64
    // - https://github.com/epoberezkin/fast-deep-equal/issues/49
    if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === 'function' && typeof b.valueOf === 'function') return a.valueOf() === b.valueOf();
    if (a.toString !== Object.prototype.toString && typeof a.toString === 'function' && typeof b.toString === 'function') return a.toString() === b.toString();
    // END: Modifications

    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) return false;
    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
    // END: fast-deep-equal

    // START: react-fast-compare
    // custom handling for DOM elements
    if (hasElementType && a instanceof Element) return false;

    // custom handling for React/Preact
    for (i = length; i-- !== 0;) {
      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {
        // React-specific: avoid traversing React elements' _owner
        // Preact-specific: avoid traversing Preact elements' __v and __o
        //    __v = $_original / $_vnode
        //    __o = $_owner
        // These properties contain circular references and are not needed when
        // comparing the actual elements (and not their owners)
        // .$$typeof and ._store on just reasonable markers of elements

        continue;
      }

      // all other properties should be traversed as usual
      if (!equal(a[keys[i]], b[keys[i]])) return false;
    }
    // END: react-fast-compare

    // START: fast-deep-equal
    return true;
  }
  return a !== a && b !== b;
}
// end fast-deep-equal

module.exports = function isEqual(a, b) {
  try {
    return equal(a, b);
  } catch (error) {
    if ((error.message || '').match(/stack|recursion/i)) {
      // warn on circular references, don't crash
      // browsers give this different errors name and messages:
      // chrome/safari: "RangeError", "Maximum call stack size exceeded"
      // firefox: "InternalError", too much recursion"
      // edge: "Error", "Out of stack space"
      console.warn('react-fast-compare cannot handle circular refs');
      return false;
    }
    // some other error. we should definitely know about these
    throw error;
  }
};

/***/ }),

/***/ 374:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var f = __webpack_require__(791),
  k = Symbol.for("react.element"),
  l = Symbol.for("react.fragment"),
  m = Object.prototype.hasOwnProperty,
  n = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
  p = {
    key: !0,
    ref: !0,
    __self: !0,
    __source: !0
  };
function q(c, a, g) {
  var b,
    d = {},
    e = null,
    h = null;
  void 0 !== g && (e = "" + g);
  void 0 !== a.key && (e = "" + a.key);
  void 0 !== a.ref && (h = a.ref);
  for (b in a) m.call(a, b) && !p.hasOwnProperty(b) && (d[b] = a[b]);
  if (c && c.defaultProps) for (b in a = c.defaultProps, a) void 0 === d[b] && (d[b] = a[b]);
  return {
    $$typeof: k,
    type: c,
    key: e,
    ref: h,
    props: d,
    _owner: n.current
  };
}
exports.Fragment = l;
exports.jsx = q;
exports.jsxs = q;

/***/ }),

/***/ 117:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var l = Symbol.for("react.element"),
  n = Symbol.for("react.portal"),
  p = Symbol.for("react.fragment"),
  q = Symbol.for("react.strict_mode"),
  r = Symbol.for("react.profiler"),
  t = Symbol.for("react.provider"),
  u = Symbol.for("react.context"),
  v = Symbol.for("react.forward_ref"),
  w = Symbol.for("react.suspense"),
  x = Symbol.for("react.memo"),
  y = Symbol.for("react.lazy"),
  z = Symbol.iterator;
function A(a) {
  if (null === a || "object" !== typeof a) return null;
  a = z && a[z] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
var B = {
    isMounted: function isMounted() {
      return !1;
    },
    enqueueForceUpdate: function enqueueForceUpdate() {},
    enqueueReplaceState: function enqueueReplaceState() {},
    enqueueSetState: function enqueueSetState() {}
  },
  C = Object.assign,
  D = {};
function E(a, b, e) {
  this.props = a;
  this.context = b;
  this.refs = D;
  this.updater = e || B;
}
E.prototype.isReactComponent = {};
E.prototype.setState = function (a, b) {
  if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
  this.updater.enqueueSetState(this, a, b, "setState");
};
E.prototype.forceUpdate = function (a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function F() {}
F.prototype = E.prototype;
function G(a, b, e) {
  this.props = a;
  this.context = b;
  this.refs = D;
  this.updater = e || B;
}
var H = G.prototype = new F();
H.constructor = G;
C(H, E.prototype);
H.isPureReactComponent = !0;
var I = Array.isArray,
  J = Object.prototype.hasOwnProperty,
  K = {
    current: null
  },
  L = {
    key: !0,
    ref: !0,
    __self: !0,
    __source: !0
  };
function M(a, b, e) {
  var d,
    c = {},
    k = null,
    h = null;
  if (null != b) for (d in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k = "" + b.key), b) J.call(b, d) && !L.hasOwnProperty(d) && (c[d] = b[d]);
  var g = arguments.length - 2;
  if (1 === g) c.children = e;else if (1 < g) {
    for (var f = Array(g), m = 0; m < g; m++) f[m] = arguments[m + 2];
    c.children = f;
  }
  if (a && a.defaultProps) for (d in g = a.defaultProps, g) void 0 === c[d] && (c[d] = g[d]);
  return {
    $$typeof: l,
    type: a,
    key: k,
    ref: h,
    props: c,
    _owner: K.current
  };
}
function N(a, b) {
  return {
    $$typeof: l,
    type: a.type,
    key: b,
    ref: a.ref,
    props: a.props,
    _owner: a._owner
  };
}
function O(a) {
  return "object" === typeof a && null !== a && a.$$typeof === l;
}
function escape(a) {
  var b = {
    "=": "=0",
    ":": "=2"
  };
  return "$" + a.replace(/[=:]/g, function (a) {
    return b[a];
  });
}
var P = /\/+/g;
function Q(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape("" + a.key) : b.toString(36);
}
function R(a, b, e, d, c) {
  var k = typeof a;
  if ("undefined" === k || "boolean" === k) a = null;
  var h = !1;
  if (null === a) h = !0;else switch (k) {
    case "string":
    case "number":
      h = !0;
      break;
    case "object":
      switch (a.$$typeof) {
        case l:
        case n:
          h = !0;
      }
  }
  if (h) return h = a, c = c(h), a = "" === d ? "." + Q(h, 0) : d, I(c) ? (e = "", null != a && (e = a.replace(P, "$&/") + "/"), R(c, b, e, "", function (a) {
    return a;
  })) : null != c && (O(c) && (c = N(c, e + (!c.key || h && h.key === c.key ? "" : ("" + c.key).replace(P, "$&/") + "/") + a)), b.push(c)), 1;
  h = 0;
  d = "" === d ? "." : d + ":";
  if (I(a)) for (var g = 0; g < a.length; g++) {
    k = a[g];
    var f = d + Q(k, g);
    h += R(k, b, e, f, c);
  } else if (f = A(a), "function" === typeof f) for (a = f.call(a), g = 0; !(k = a.next()).done;) k = k.value, f = d + Q(k, g++), h += R(k, b, e, f, c);else if ("object" === k) throw b = String(a), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");
  return h;
}
function S(a, b, e) {
  if (null == a) return a;
  var d = [],
    c = 0;
  R(a, d, "", "", function (a) {
    return b.call(e, a, c++);
  });
  return d;
}
function T(a) {
  if (-1 === a._status) {
    var b = a._result;
    b = b();
    b.then(function (b) {
      if (0 === a._status || -1 === a._status) a._status = 1, a._result = b;
    }, function (b) {
      if (0 === a._status || -1 === a._status) a._status = 2, a._result = b;
    });
    -1 === a._status && (a._status = 0, a._result = b);
  }
  if (1 === a._status) return a._result.default;
  throw a._result;
}
var U = {
    current: null
  },
  V = {
    transition: null
  },
  W = {
    ReactCurrentDispatcher: U,
    ReactCurrentBatchConfig: V,
    ReactCurrentOwner: K
  };
exports.Children = {
  map: S,
  forEach: function forEach(a, b, e) {
    S(a, function () {
      b.apply(this, arguments);
    }, e);
  },
  count: function count(a) {
    var b = 0;
    S(a, function () {
      b++;
    });
    return b;
  },
  toArray: function toArray(a) {
    return S(a, function (a) {
      return a;
    }) || [];
  },
  only: function only(a) {
    if (!O(a)) throw Error("React.Children.only expected to receive a single React element child.");
    return a;
  }
};
exports.Component = E;
exports.Fragment = p;
exports.Profiler = r;
exports.PureComponent = G;
exports.StrictMode = q;
exports.Suspense = w;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W;
exports.cloneElement = function (a, b, e) {
  if (null === a || void 0 === a) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");
  var d = C({}, a.props),
    c = a.key,
    k = a.ref,
    h = a._owner;
  if (null != b) {
    void 0 !== b.ref && (k = b.ref, h = K.current);
    void 0 !== b.key && (c = "" + b.key);
    if (a.type && a.type.defaultProps) var g = a.type.defaultProps;
    for (f in b) J.call(b, f) && !L.hasOwnProperty(f) && (d[f] = void 0 === b[f] && void 0 !== g ? g[f] : b[f]);
  }
  var f = arguments.length - 2;
  if (1 === f) d.children = e;else if (1 < f) {
    g = Array(f);
    for (var m = 0; m < f; m++) g[m] = arguments[m + 2];
    d.children = g;
  }
  return {
    $$typeof: l,
    type: a.type,
    key: c,
    ref: k,
    props: d,
    _owner: h
  };
};
exports.createContext = function (a) {
  a = {
    $$typeof: u,
    _currentValue: a,
    _currentValue2: a,
    _threadCount: 0,
    Provider: null,
    Consumer: null,
    _defaultValue: null,
    _globalName: null
  };
  a.Provider = {
    $$typeof: t,
    _context: a
  };
  return a.Consumer = a;
};
exports.createElement = M;
exports.createFactory = function (a) {
  var b = M.bind(null, a);
  b.type = a;
  return b;
};
exports.createRef = function () {
  return {
    current: null
  };
};
exports.forwardRef = function (a) {
  return {
    $$typeof: v,
    render: a
  };
};
exports.isValidElement = O;
exports.lazy = function (a) {
  return {
    $$typeof: y,
    _payload: {
      _status: -1,
      _result: a
    },
    _init: T
  };
};
exports.memo = function (a, b) {
  return {
    $$typeof: x,
    type: a,
    compare: void 0 === b ? null : b
  };
};
exports.startTransition = function (a) {
  var b = V.transition;
  V.transition = {};
  try {
    a();
  } finally {
    V.transition = b;
  }
};
exports.unstable_act = function () {
  throw Error("act(...) is not supported in production builds of React.");
};
exports.useCallback = function (a, b) {
  return U.current.useCallback(a, b);
};
exports.useContext = function (a) {
  return U.current.useContext(a);
};
exports.useDebugValue = function () {};
exports.useDeferredValue = function (a) {
  return U.current.useDeferredValue(a);
};
exports.useEffect = function (a, b) {
  return U.current.useEffect(a, b);
};
exports.useId = function () {
  return U.current.useId();
};
exports.useImperativeHandle = function (a, b, e) {
  return U.current.useImperativeHandle(a, b, e);
};
exports.useInsertionEffect = function (a, b) {
  return U.current.useInsertionEffect(a, b);
};
exports.useLayoutEffect = function (a, b) {
  return U.current.useLayoutEffect(a, b);
};
exports.useMemo = function (a, b) {
  return U.current.useMemo(a, b);
};
exports.useReducer = function (a, b, e) {
  return U.current.useReducer(a, b, e);
};
exports.useRef = function (a) {
  return U.current.useRef(a);
};
exports.useState = function (a) {
  return U.current.useState(a);
};
exports.useSyncExternalStore = function (a, b, e) {
  return U.current.useSyncExternalStore(a, b, e);
};
exports.useTransition = function () {
  return U.current.useTransition();
};
exports.version = "18.2.0";

/***/ }),

/***/ 791:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(117);
} else {}

/***/ }),

/***/ 184:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(374);
} else {}

/***/ }),

/***/ 813:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


function f(a, b) {
  var c = a.length;
  a.push(b);
  a: for (; 0 < c;) {
    var d = c - 1 >>> 1,
      e = a[d];
    if (0 < g(e, b)) a[d] = b, a[c] = e, c = d;else break a;
  }
}
function h(a) {
  return 0 === a.length ? null : a[0];
}
function k(a) {
  if (0 === a.length) return null;
  var b = a[0],
    c = a.pop();
  if (c !== b) {
    a[0] = c;
    a: for (var d = 0, e = a.length, w = e >>> 1; d < w;) {
      var m = 2 * (d + 1) - 1,
        C = a[m],
        n = m + 1,
        x = a[n];
      if (0 > g(C, c)) n < e && 0 > g(x, C) ? (a[d] = x, a[n] = c, d = n) : (a[d] = C, a[m] = c, d = m);else if (n < e && 0 > g(x, c)) a[d] = x, a[n] = c, d = n;else break a;
    }
  }
  return b;
}
function g(a, b) {
  var c = a.sortIndex - b.sortIndex;
  return 0 !== c ? c : a.id - b.id;
}
if ("object" === typeof performance && "function" === typeof performance.now) {
  var l = performance;
  exports.unstable_now = function () {
    return l.now();
  };
} else {
  var p = Date,
    q = p.now();
  exports.unstable_now = function () {
    return p.now() - q;
  };
}
var r = [],
  t = [],
  u = 1,
  v = null,
  y = 3,
  z = !1,
  A = !1,
  B = !1,
  D = "function" === typeof setTimeout ? setTimeout : null,
  E = "function" === typeof clearTimeout ? clearTimeout : null,
  F = "undefined" !== typeof setImmediate ? setImmediate : null;
"undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
function G(a) {
  for (var b = h(t); null !== b;) {
    if (null === b.callback) k(t);else if (b.startTime <= a) k(t), b.sortIndex = b.expirationTime, f(r, b);else break;
    b = h(t);
  }
}
function H(a) {
  B = !1;
  G(a);
  if (!A) if (null !== h(r)) A = !0, I(J);else {
    var b = h(t);
    null !== b && K(H, b.startTime - a);
  }
}
function J(a, b) {
  A = !1;
  B && (B = !1, E(L), L = -1);
  z = !0;
  var c = y;
  try {
    G(b);
    for (v = h(r); null !== v && (!(v.expirationTime > b) || a && !M());) {
      var d = v.callback;
      if ("function" === typeof d) {
        v.callback = null;
        y = v.priorityLevel;
        var e = d(v.expirationTime <= b);
        b = exports.unstable_now();
        "function" === typeof e ? v.callback = e : v === h(r) && k(r);
        G(b);
      } else k(r);
      v = h(r);
    }
    if (null !== v) var w = !0;else {
      var m = h(t);
      null !== m && K(H, m.startTime - b);
      w = !1;
    }
    return w;
  } finally {
    v = null, y = c, z = !1;
  }
}
var N = !1,
  O = null,
  L = -1,
  P = 5,
  Q = -1;
function M() {
  return exports.unstable_now() - Q < P ? !1 : !0;
}
function R() {
  if (null !== O) {
    var a = exports.unstable_now();
    Q = a;
    var b = !0;
    try {
      b = O(!0, a);
    } finally {
      b ? S() : (N = !1, O = null);
    }
  } else N = !1;
}
var S;
if ("function" === typeof F) S = function S() {
  F(R);
};else if ("undefined" !== typeof MessageChannel) {
  var T = new MessageChannel(),
    U = T.port2;
  T.port1.onmessage = R;
  S = function S() {
    U.postMessage(null);
  };
} else S = function S() {
  D(R, 0);
};
function I(a) {
  O = a;
  N || (N = !0, S());
}
function K(a, b) {
  L = D(function () {
    a(exports.unstable_now());
  }, b);
}
exports.unstable_IdlePriority = 5;
exports.unstable_ImmediatePriority = 1;
exports.unstable_LowPriority = 4;
exports.unstable_NormalPriority = 3;
exports.unstable_Profiling = null;
exports.unstable_UserBlockingPriority = 2;
exports.unstable_cancelCallback = function (a) {
  a.callback = null;
};
exports.unstable_continueExecution = function () {
  A || z || (A = !0, I(J));
};
exports.unstable_forceFrameRate = function (a) {
  0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P = 0 < a ? Math.floor(1E3 / a) : 5;
};
exports.unstable_getCurrentPriorityLevel = function () {
  return y;
};
exports.unstable_getFirstCallbackNode = function () {
  return h(r);
};
exports.unstable_next = function (a) {
  switch (y) {
    case 1:
    case 2:
    case 3:
      var b = 3;
      break;
    default:
      b = y;
  }
  var c = y;
  y = b;
  try {
    return a();
  } finally {
    y = c;
  }
};
exports.unstable_pauseExecution = function () {};
exports.unstable_requestPaint = function () {};
exports.unstable_runWithPriority = function (a, b) {
  switch (a) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      break;
    default:
      a = 3;
  }
  var c = y;
  y = a;
  try {
    return b();
  } finally {
    y = c;
  }
};
exports.unstable_scheduleCallback = function (a, b, c) {
  var d = exports.unstable_now();
  "object" === typeof c && null !== c ? (c = c.delay, c = "number" === typeof c && 0 < c ? d + c : d) : c = d;
  switch (a) {
    case 1:
      var e = -1;
      break;
    case 2:
      e = 250;
      break;
    case 5:
      e = 1073741823;
      break;
    case 4:
      e = 1E4;
      break;
    default:
      e = 5E3;
  }
  e = c + e;
  a = {
    id: u++,
    callback: b,
    priorityLevel: a,
    startTime: c,
    expirationTime: e,
    sortIndex: -1
  };
  c > d ? (a.sortIndex = c, f(t, a), null === h(r) && a === h(t) && (B ? (E(L), L = -1) : B = !0, K(H, c - d))) : (a.sortIndex = e, f(r, a), A || z || (A = !0, I(J)));
  return a;
};
exports.unstable_shouldYield = M;
exports.unstable_wrapCallback = function (a) {
  var b = y;
  return function () {
    var c = y;
    y = b;
    try {
      return a.apply(this, arguments);
    } finally {
      y = c;
    }
  };
};

/***/ }),

/***/ 296:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(813);
} else {}

/***/ }),

/***/ 391:
/***/ (function(module) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */
var __DEV__ = "production" !== 'production';
var warning = function warning() {};
if (__DEV__) {
  var printWarning = function printWarning(format, args) {
    var len = arguments.length;
    args = new Array(len > 1 ? len - 1 : 0);
    for (var key = 1; key < len; key++) {
      args[key - 1] = arguments[key];
    }
    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
  warning = function warning(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      printWarning.apply(null, [format].concat(args));
    }
  };
}
module.exports = warning;

/***/ }),

/***/ 530:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/clip.ed65813a95d287a040c2.mp4";

/***/ }),

/***/ 214:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/dimensions.4ec658a9db4ce50d7b38.png";

/***/ }),

/***/ 6:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/fractal-dimensions.3bb06d9bbc7bfa6500e4.png";

/***/ }),

/***/ 108:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/chaotic-orbit-seeds.0e34b985a9316b8c0335.png";

/***/ }),

/***/ 876:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/complex-plane.353aeebca6a843c5087b.png";

/***/ }),

/***/ 673:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/r3_3i-5.df4699dc9905e8cfe097.png";

/***/ }),

/***/ 945:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/r5_5in0_2.13094fc72b7610b38c51.png";

/***/ }),

/***/ 994:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/r_3_34_in5_01.d88e94adb20eec370ff6.png";

/***/ }),

/***/ 139:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/simple-orbit-seeds.d4e1425be862712ce7f1.png";

/***/ }),

/***/ 29:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/bulbs.f30df08413c4749de7df.png";

/***/ }),

/***/ 473:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/mandel-julia.e8573f1eb6806a475e17.png";

/***/ }),

/***/ 897:
/***/ (function(module) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 372:
/***/ (function(module) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 115:
/***/ (function(module) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 690:
/***/ (function(module) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 728:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(62);
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 389:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(808);
var isNativeReflectConstruct = __webpack_require__(617);
var possibleConstructorReturn = __webpack_require__(993);
function _createSuper(Derived) {
  var hasNativeReflectConstruct = isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return possibleConstructorReturn(this, result);
  };
}
module.exports = _createSuper, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 416:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(62);
function _defineProperty(obj, key, value) {
  key = toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 588:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var superPropBase = __webpack_require__(753);
function _get() {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports["default"] = module.exports;
  } else {
    module.exports = _get = function _get(target, property, receiver) {
      var base = superPropBase(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);
      if (desc.get) {
        return desc.get.call(arguments.length < 3 ? target : receiver);
      }
      return desc.value;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
  return _get.apply(this, arguments);
}
module.exports = _get, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 808:
/***/ (function(module) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _getPrototypeOf(o);
}
module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 655:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(15);
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}
module.exports = _inherits, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 617:
/***/ (function(module) {

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
module.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 872:
/***/ (function(module) {

function _iterableToArrayLimit(arr, i) {
  var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
  if (null != _i) {
    var _s,
      _e,
      _x,
      _r,
      _arr = [],
      _n = !0,
      _d = !1;
    try {
      if (_x = (_i = _i.call(arr)).next, 0 === i) {
        if (Object(_i) !== _i) return;
        _n = !1;
      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return;
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 218:
/***/ (function(module) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 993:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var _typeof = (__webpack_require__(698)["default"]);
var assertThisInitialized = __webpack_require__(115);
function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return assertThisInitialized(self);
}
module.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 15:
/***/ (function(module) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _setPrototypeOf(o, p);
}
module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 424:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(372);
var iterableToArrayLimit = __webpack_require__(872);
var unsupportedIterableToArray = __webpack_require__(116);
var nonIterableRest = __webpack_require__(218);
function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}
module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 753:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(808);
function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = getPrototypeOf(object);
    if (object === null) break;
  }
  return object;
}
module.exports = _superPropBase, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 36:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var _typeof = (__webpack_require__(698)["default"]);
function _toPrimitive(input, hint) {
  if (_typeof(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (_typeof(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
module.exports = _toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 62:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var _typeof = (__webpack_require__(698)["default"]);
var toPrimitive = __webpack_require__(36);
function _toPropertyKey(arg) {
  var key = toPrimitive(arg, "string");
  return _typeof(key) === "symbol" ? key : String(key);
}
module.exports = _toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 698:
/***/ (function(module) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(obj);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 116:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(897);
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}
module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	!function() {
/******/ 		var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });
/******/ 			}
/******/ 			def['default'] = function() { return value; };
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	!function() {
/******/ 		__webpack_require__.nmd = function(module) {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	!function() {
/******/ 		__webpack_require__.p = "/";
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
!function() {
"use strict";

// NAMESPACE OBJECT: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/index.js
var paths_namespaceObject = {};
__webpack_require__.r(paths_namespaceObject);
__webpack_require__.d(paths_namespaceObject, {
  "Add": function() { return add; },
  "AddClip": function() { return add_clip; },
  "AddColumnLeft": function() { return add_column_left; },
  "AddColumnRight": function() { return add_column_right; },
  "AddLocation": function() { return add_location; },
  "AddRowBottom": function() { return add_row_bottom; },
  "AddRowTop": function() { return add_row_top; },
  "AddToArtifact": function() { return add_to_artifact; },
  "AddToFolder": function() { return add_to_folder; },
  "AimpointsTarget": function() { return aimpoints_target; },
  "Airplane": function() { return airplane; },
  "AlignCenter": function() { return align_center; },
  "AlignJustify": function() { return align_justify; },
  "AlignLeft": function() { return align_left; },
  "AlignRight": function() { return align_right; },
  "AlignmentBottom": function() { return alignment_bottom; },
  "AlignmentHorizontalCenter": function() { return alignment_horizontal_center; },
  "AlignmentLeft": function() { return alignment_left; },
  "AlignmentRight": function() { return alignment_right; },
  "AlignmentTop": function() { return alignment_top; },
  "AlignmentVerticalCenter": function() { return alignment_vertical_center; },
  "Anchor": function() { return paths_anchor; },
  "Annotation": function() { return annotation; },
  "Antenna": function() { return antenna; },
  "AppHeader": function() { return app_header; },
  "Application": function() { return application; },
  "Applications": function() { return applications; },
  "Archive": function() { return archive; },
  "AreaOfInterest": function() { return area_of_interest; },
  "Array": function() { return array; },
  "ArrayBoolean": function() { return array_boolean; },
  "ArrayDate": function() { return array_date; },
  "ArrayFloatingPoint": function() { return array_floating_point; },
  "ArrayNumeric": function() { return array_numeric; },
  "ArrayString": function() { return array_string; },
  "ArrayTimestamp": function() { return array_timestamp; },
  "ArrowBottomLeft": function() { return arrow_bottom_left; },
  "ArrowBottomRight": function() { return arrow_bottom_right; },
  "ArrowDown": function() { return arrow_down; },
  "ArrowLeft": function() { return arrow_left; },
  "ArrowRight": function() { return arrow_right; },
  "ArrowTopLeft": function() { return arrow_top_left; },
  "ArrowTopRight": function() { return arrow_top_right; },
  "ArrowUp": function() { return arrow_up; },
  "ArrowsHorizontal": function() { return arrows_horizontal; },
  "ArrowsVertical": function() { return arrows_vertical; },
  "Asterisk": function() { return asterisk; },
  "At": function() { return at; },
  "AutomaticUpdates": function() { return automatic_updates; },
  "Axle": function() { return axle; },
  "Backlink": function() { return backlink; },
  "Badge": function() { return badge; },
  "BanCircle": function() { return ban_circle; },
  "BankAccount": function() { return bank_account; },
  "Barcode": function() { return barcode; },
  "Blank": function() { return blank; },
  "BlockedPerson": function() { return blocked_person; },
  "Bold": function() { return bold; },
  "Book": function() { return book; },
  "Bookmark": function() { return bookmark; },
  "Box": function() { return box; },
  "Briefcase": function() { return briefcase; },
  "BringData": function() { return bring_data; },
  "Bug": function() { return bug; },
  "Buggy": function() { return buggy; },
  "Build": function() { return build; },
  "Calculator": function() { return calculator; },
  "Calendar": function() { return calendar; },
  "Camera": function() { return camera; },
  "CaretDown": function() { return caret_down; },
  "CaretLeft": function() { return caret_left; },
  "CaretRight": function() { return caret_right; },
  "CaretUp": function() { return caret_up; },
  "CargoShip": function() { return cargo_ship; },
  "CellTower": function() { return cell_tower; },
  "Changes": function() { return changes; },
  "Chart": function() { return chart; },
  "Chat": function() { return chat; },
  "ChevronBackward": function() { return chevron_backward; },
  "ChevronDown": function() { return chevron_down; },
  "ChevronForward": function() { return chevron_forward; },
  "ChevronLeft": function() { return chevron_left; },
  "ChevronRight": function() { return chevron_right; },
  "ChevronUp": function() { return chevron_up; },
  "Circle": function() { return circle; },
  "CircleArrowDown": function() { return circle_arrow_down; },
  "CircleArrowLeft": function() { return circle_arrow_left; },
  "CircleArrowRight": function() { return circle_arrow_right; },
  "CircleArrowUp": function() { return circle_arrow_up; },
  "Citation": function() { return citation; },
  "Clean": function() { return clean; },
  "Clip": function() { return clip; },
  "Clipboard": function() { return clipboard; },
  "Cloud": function() { return cloud; },
  "CloudDownload": function() { return cloud_download; },
  "CloudUpload": function() { return cloud_upload; },
  "Code": function() { return code; },
  "CodeBlock": function() { return code_block; },
  "Cog": function() { return cog; },
  "CollapseAll": function() { return collapse_all; },
  "ColorFill": function() { return color_fill; },
  "ColumnLayout": function() { return column_layout; },
  "Comment": function() { return comment; },
  "Comparison": function() { return comparison; },
  "Compass": function() { return compass; },
  "Compressed": function() { return compressed; },
  "Confirm": function() { return paths_confirm; },
  "Console": function() { return paths_console; },
  "Contrast": function() { return contrast; },
  "Control": function() { return control; },
  "CreditCard": function() { return credit_card; },
  "Cross": function() { return cross; },
  "CrossCircle": function() { return cross_circle; },
  "Crown": function() { return crown; },
  "Cube": function() { return cube; },
  "CubeAdd": function() { return cube_add; },
  "CubeRemove": function() { return cube_remove; },
  "CurvedRangeChart": function() { return curved_range_chart; },
  "Cut": function() { return cut; },
  "Cycle": function() { return cycle; },
  "Dashboard": function() { return dashboard; },
  "DataConnection": function() { return data_connection; },
  "DataLineage": function() { return data_lineage; },
  "Database": function() { return database; },
  "Delete": function() { return paths_delete; },
  "Delta": function() { return delta; },
  "DeriveColumn": function() { return derive_column; },
  "Desktop": function() { return desktop; },
  "Diagnosis": function() { return diagnosis; },
  "DiagramTree": function() { return diagram_tree; },
  "DirectionLeft": function() { return direction_left; },
  "DirectionRight": function() { return direction_right; },
  "Disable": function() { return disable; },
  "Divide": function() { return divide; },
  "Document": function() { return paths_document; },
  "DocumentOpen": function() { return document_open; },
  "DocumentShare": function() { return document_share; },
  "Dollar": function() { return dollar; },
  "Dot": function() { return dot; },
  "DoubleCaretHorizontal": function() { return double_caret_horizontal; },
  "DoubleCaretVertical": function() { return double_caret_vertical; },
  "DoubleChevronDown": function() { return double_chevron_down; },
  "DoubleChevronLeft": function() { return double_chevron_left; },
  "DoubleChevronRight": function() { return double_chevron_right; },
  "DoubleChevronUp": function() { return double_chevron_up; },
  "DoughnutChart": function() { return doughnut_chart; },
  "Download": function() { return download; },
  "DragHandleHorizontal": function() { return drag_handle_horizontal; },
  "DragHandleVertical": function() { return drag_handle_vertical; },
  "Draw": function() { return draw; },
  "DrawerLeft": function() { return drawer_left; },
  "DrawerLeftFilled": function() { return drawer_left_filled; },
  "DrawerRight": function() { return drawer_right; },
  "DrawerRightFilled": function() { return drawer_right_filled; },
  "DriveTime": function() { return drive_time; },
  "Duplicate": function() { return duplicate; },
  "Edit": function() { return edit; },
  "Eject": function() { return eject; },
  "Emoji": function() { return emoji; },
  "Endorsed": function() { return endorsed; },
  "Envelope": function() { return envelope; },
  "Equals": function() { return equals; },
  "Eraser": function() { return eraser; },
  "Error": function() { return error; },
  "Euro": function() { return euro; },
  "Exchange": function() { return exchange; },
  "ExcludeRow": function() { return exclude_row; },
  "ExpandAll": function() { return expand_all; },
  "Export": function() { return paths_export; },
  "EyeOff": function() { return eye_off; },
  "EyeOn": function() { return eye_on; },
  "EyeOpen": function() { return eye_open; },
  "FastBackward": function() { return fast_backward; },
  "FastForward": function() { return fast_forward; },
  "Feed": function() { return feed; },
  "FeedSubscribed": function() { return feed_subscribed; },
  "Film": function() { return film; },
  "Filter": function() { return filter; },
  "FilterKeep": function() { return filter_keep; },
  "FilterList": function() { return filter_list; },
  "FilterOpen": function() { return filter_open; },
  "FilterRemove": function() { return filter_remove; },
  "Flag": function() { return flag; },
  "Flame": function() { return flame; },
  "Flash": function() { return flash; },
  "FloatingPoint": function() { return floating_point; },
  "FloppyDisk": function() { return floppy_disk; },
  "FlowBranch": function() { return flow_branch; },
  "FlowEnd": function() { return flow_end; },
  "FlowLinear": function() { return flow_linear; },
  "FlowReview": function() { return flow_review; },
  "FlowReviewBranch": function() { return flow_review_branch; },
  "Flows": function() { return flows; },
  "FolderClose": function() { return folder_close; },
  "FolderNew": function() { return folder_new; },
  "FolderOpen": function() { return folder_open; },
  "FolderShared": function() { return folder_shared; },
  "FolderSharedOpen": function() { return folder_shared_open; },
  "Follower": function() { return follower; },
  "Following": function() { return following; },
  "Font": function() { return font; },
  "Fork": function() { return fork; },
  "Form": function() { return paths_form; },
  "Fuel": function() { return fuel; },
  "FullCircle": function() { return full_circle; },
  "FullStackedChart": function() { return full_stacked_chart; },
  "Fullscreen": function() { return fullscreen; },
  "Function": function() { return paths_function; },
  "GanttChart": function() { return gantt_chart; },
  "Geofence": function() { return geofence; },
  "Geolocation": function() { return geolocation; },
  "Geosearch": function() { return geosearch; },
  "GitBranch": function() { return git_branch; },
  "GitCommit": function() { return git_commit; },
  "GitMerge": function() { return git_merge; },
  "GitNewBranch": function() { return git_new_branch; },
  "GitPull": function() { return git_pull; },
  "GitPush": function() { return git_push; },
  "GitRepo": function() { return git_repo; },
  "Glass": function() { return glass; },
  "Globe": function() { return globe; },
  "GlobeNetwork": function() { return globe_network; },
  "Graph": function() { return graph; },
  "GraphRemove": function() { return graph_remove; },
  "GreaterThan": function() { return greater_than; },
  "GreaterThanOrEqualTo": function() { return greater_than_or_equal_to; },
  "Grid": function() { return grid; },
  "GridView": function() { return grid_view; },
  "GroupObjects": function() { return group_objects; },
  "GroupedBarChart": function() { return grouped_bar_chart; },
  "Hand": function() { return hand; },
  "HandDown": function() { return hand_down; },
  "HandLeft": function() { return hand_left; },
  "HandRight": function() { return hand_right; },
  "HandUp": function() { return hand_up; },
  "Hat": function() { return hat; },
  "Header": function() { return header; },
  "HeaderOne": function() { return header_one; },
  "HeaderThree": function() { return header_three; },
  "HeaderTwo": function() { return header_two; },
  "Headset": function() { return headset; },
  "Heart": function() { return heart; },
  "HeartBroken": function() { return heart_broken; },
  "HeatGrid": function() { return heat_grid; },
  "Heatmap": function() { return heatmap; },
  "Helicopter": function() { return helicopter; },
  "Help": function() { return help; },
  "HelperManagement": function() { return helper_management; },
  "HighPriority": function() { return high_priority; },
  "HighVoltagePole": function() { return high_voltage_pole; },
  "Highlight": function() { return highlight; },
  "History": function() { return paths_history; },
  "Home": function() { return home; },
  "HorizontalBarChart": function() { return horizontal_bar_chart; },
  "HorizontalBarChartAsc": function() { return horizontal_bar_chart_asc; },
  "HorizontalBarChartDesc": function() { return horizontal_bar_chart_desc; },
  "HorizontalDistribution": function() { return horizontal_distribution; },
  "HorizontalInbetween": function() { return horizontal_inbetween; },
  "Hurricane": function() { return hurricane; },
  "IdNumber": function() { return id_number; },
  "ImageRotateLeft": function() { return image_rotate_left; },
  "ImageRotateRight": function() { return image_rotate_right; },
  "Import": function() { return paths_import; },
  "Inbox": function() { return inbox; },
  "InboxFiltered": function() { return inbox_filtered; },
  "InboxGeo": function() { return inbox_geo; },
  "InboxSearch": function() { return inbox_search; },
  "InboxUpdate": function() { return inbox_update; },
  "InfoSign": function() { return info_sign; },
  "Inheritance": function() { return inheritance; },
  "InheritedGroup": function() { return inherited_group; },
  "InnerJoin": function() { return inner_join; },
  "Insert": function() { return insert; },
  "Intelligence": function() { return intelligence; },
  "Intersection": function() { return intersection; },
  "IpAddress": function() { return ip_address; },
  "Issue": function() { return issue; },
  "IssueClosed": function() { return issue_closed; },
  "IssueNew": function() { return issue_new; },
  "Italic": function() { return italic; },
  "JoinTable": function() { return join_table; },
  "Key": function() { return key; },
  "KeyBackspace": function() { return key_backspace; },
  "KeyCommand": function() { return key_command; },
  "KeyControl": function() { return key_control; },
  "KeyDelete": function() { return key_delete; },
  "KeyEnter": function() { return key_enter; },
  "KeyEscape": function() { return key_escape; },
  "KeyOption": function() { return key_option; },
  "KeyShift": function() { return key_shift; },
  "KeyTab": function() { return key_tab; },
  "KnownVehicle": function() { return known_vehicle; },
  "LabTest": function() { return lab_test; },
  "Label": function() { return label; },
  "Layer": function() { return paths_layer; },
  "LayerOutline": function() { return layer_outline; },
  "Layers": function() { return paths_layers; },
  "Layout": function() { return layout; },
  "LayoutAuto": function() { return layout_auto; },
  "LayoutBalloon": function() { return layout_balloon; },
  "LayoutCircle": function() { return layout_circle; },
  "LayoutGrid": function() { return layout_grid; },
  "LayoutGroupBy": function() { return layout_group_by; },
  "LayoutHierarchy": function() { return layout_hierarchy; },
  "LayoutLinear": function() { return layout_linear; },
  "LayoutSkewGrid": function() { return layout_skew_grid; },
  "LayoutSortedClusters": function() { return layout_sorted_clusters; },
  "Learning": function() { return learning; },
  "LeftJoin": function() { return left_join; },
  "LessThan": function() { return less_than; },
  "LessThanOrEqualTo": function() { return less_than_or_equal_to; },
  "Lifesaver": function() { return lifesaver; },
  "Lightbulb": function() { return lightbulb; },
  "Lightning": function() { return lightning; },
  "Link": function() { return paths_link; },
  "List": function() { return list; },
  "ListColumns": function() { return list_columns; },
  "ListDetailView": function() { return list_detail_view; },
  "Locate": function() { return locate; },
  "Lock": function() { return lock; },
  "LogIn": function() { return log_in; },
  "LogOut": function() { return log_out; },
  "LowVoltagePole": function() { return low_voltage_pole; },
  "Manual": function() { return manual; },
  "ManuallyEnteredData": function() { return manually_entered_data; },
  "ManyToMany": function() { return many_to_many; },
  "ManyToOne": function() { return many_to_one; },
  "Map": function() { return map; },
  "MapCreate": function() { return map_create; },
  "MapMarker": function() { return map_marker; },
  "Maximize": function() { return maximize; },
  "Media": function() { return media; },
  "Menu": function() { return menu; },
  "MenuClosed": function() { return menu_closed; },
  "MenuOpen": function() { return menu_open; },
  "MergeColumns": function() { return merge_columns; },
  "MergeLinks": function() { return merge_links; },
  "Minimize": function() { return minimize; },
  "Minus": function() { return minus; },
  "MobilePhone": function() { return mobile_phone; },
  "MobileVideo": function() { return mobile_video; },
  "Modal": function() { return modal; },
  "ModalFilled": function() { return modal_filled; },
  "Moon": function() { return moon; },
  "More": function() { return more; },
  "Mountain": function() { return mountain; },
  "Move": function() { return move; },
  "Mugshot": function() { return mugshot; },
  "MultiSelect": function() { return multi_select; },
  "Music": function() { return music; },
  "Nest": function() { return nest; },
  "NewDrawing": function() { return new_drawing; },
  "NewGridItem": function() { return new_grid_item; },
  "NewLayer": function() { return new_layer; },
  "NewLayers": function() { return new_layers; },
  "NewLink": function() { return new_link; },
  "NewObject": function() { return new_object; },
  "NewPerson": function() { return new_person; },
  "NewPrescription": function() { return new_prescription; },
  "NewTextBox": function() { return new_text_box; },
  "Ninja": function() { return ninja; },
  "NotEqualTo": function() { return not_equal_to; },
  "Notifications": function() { return notifications; },
  "NotificationsSnooze": function() { return notifications_snooze; },
  "NotificationsUpdated": function() { return notifications_updated; },
  "NumberedList": function() { return numbered_list; },
  "Numerical": function() { return numerical; },
  "Office": function() { return office; },
  "Offline": function() { return offline; },
  "OilField": function() { return oil_field; },
  "OneColumn": function() { return one_column; },
  "OneToMany": function() { return one_to_many; },
  "OneToOne": function() { return one_to_one; },
  "OpenApplication": function() { return open_application; },
  "Outdated": function() { return outdated; },
  "PageLayout": function() { return page_layout; },
  "PanelStats": function() { return panel_stats; },
  "PanelTable": function() { return panel_table; },
  "Paperclip": function() { return paperclip; },
  "Paragraph": function() { return paragraph; },
  "Path": function() { return path; },
  "PathSearch": function() { return path_search; },
  "Pause": function() { return pause; },
  "People": function() { return people; },
  "Percentage": function() { return percentage; },
  "Person": function() { return person; },
  "Phone": function() { return phone; },
  "PieChart": function() { return pie_chart; },
  "Pin": function() { return pin; },
  "Pivot": function() { return pivot; },
  "PivotTable": function() { return pivot_table; },
  "Play": function() { return play; },
  "Playbook": function() { return playbook; },
  "Plus": function() { return plus; },
  "PolygonFilter": function() { return polygon_filter; },
  "Power": function() { return power; },
  "PredictiveAnalysis": function() { return predictive_analysis; },
  "Prescription": function() { return prescription; },
  "Presentation": function() { return presentation; },
  "Print": function() { return print; },
  "Projects": function() { return projects; },
  "Properties": function() { return properties; },
  "Property": function() { return property; },
  "PublishFunction": function() { return publish_function; },
  "Pulse": function() { return pulse; },
  "Rain": function() { return rain; },
  "Random": function() { return random; },
  "Record": function() { return record; },
  "RectHeight": function() { return rect_height; },
  "RectWidth": function() { return rect_width; },
  "Rectangle": function() { return rectangle; },
  "Redo": function() { return redo; },
  "Refresh": function() { return refresh; },
  "Regex": function() { return regex; },
  "RegressionChart": function() { return regression_chart; },
  "Remove": function() { return remove; },
  "RemoveColumn": function() { return remove_column; },
  "RemoveColumnLeft": function() { return remove_column_left; },
  "RemoveColumnRight": function() { return remove_column_right; },
  "RemoveRowBottom": function() { return remove_row_bottom; },
  "RemoveRowTop": function() { return remove_row_top; },
  "Repeat": function() { return repeat; },
  "Reset": function() { return paths_reset; },
  "Resolve": function() { return resolve; },
  "Rig": function() { return rig; },
  "RightJoin": function() { return right_join; },
  "Ring": function() { return ring; },
  "Rocket": function() { return rocket; },
  "RocketSlant": function() { return rocket_slant; },
  "RotateDocument": function() { return rotate_document; },
  "RotatePage": function() { return rotate_page; },
  "Route": function() { return route; },
  "Satellite": function() { return satellite; },
  "Saved": function() { return saved; },
  "ScatterPlot": function() { return scatter_plot; },
  "Search": function() { return search; },
  "SearchAround": function() { return search_around; },
  "SearchTemplate": function() { return search_template; },
  "SearchText": function() { return search_text; },
  "SegmentedControl": function() { return segmented_control; },
  "Select": function() { return paths_select; },
  "Selection": function() { return selection; },
  "SendMessage": function() { return send_message; },
  "SendTo": function() { return send_to; },
  "SendToGraph": function() { return send_to_graph; },
  "SendToMap": function() { return send_to_map; },
  "SeriesAdd": function() { return series_add; },
  "SeriesConfiguration": function() { return series_configuration; },
  "SeriesDerived": function() { return series_derived; },
  "SeriesFiltered": function() { return series_filtered; },
  "SeriesSearch": function() { return series_search; },
  "Settings": function() { return settings; },
  "Shapes": function() { return shapes; },
  "Share": function() { return share; },
  "SharedFilter": function() { return shared_filter; },
  "Shield": function() { return shield; },
  "Ship": function() { return ship; },
  "Shop": function() { return shop; },
  "ShoppingCart": function() { return shopping_cart; },
  "SignalSearch": function() { return signal_search; },
  "SimCard": function() { return sim_card; },
  "Slash": function() { return slash; },
  "SmallCross": function() { return small_cross; },
  "SmallInfoSign": function() { return small_info_sign; },
  "SmallMinus": function() { return small_minus; },
  "SmallPlus": function() { return small_plus; },
  "SmallSquare": function() { return small_square; },
  "SmallTick": function() { return small_tick; },
  "Snowflake": function() { return snowflake; },
  "SocialMedia": function() { return social_media; },
  "Sort": function() { return sort; },
  "SortAlphabetical": function() { return sort_alphabetical; },
  "SortAlphabeticalDesc": function() { return sort_alphabetical_desc; },
  "SortAsc": function() { return sort_asc; },
  "SortDesc": function() { return sort_desc; },
  "SortNumerical": function() { return sort_numerical; },
  "SortNumericalDesc": function() { return sort_numerical_desc; },
  "SplitColumns": function() { return split_columns; },
  "Square": function() { return square; },
  "StackedChart": function() { return stacked_chart; },
  "StadiumGeometry": function() { return stadium_geometry; },
  "Star": function() { return star; },
  "StarEmpty": function() { return star_empty; },
  "StepBackward": function() { return step_backward; },
  "StepChart": function() { return step_chart; },
  "StepForward": function() { return step_forward; },
  "Stop": function() { return stop; },
  "Stopwatch": function() { return stopwatch; },
  "Strikethrough": function() { return strikethrough; },
  "Style": function() { return style; },
  "SwapHorizontal": function() { return swap_horizontal; },
  "SwapVertical": function() { return swap_vertical; },
  "Switch": function() { return paths_switch; },
  "SymbolCircle": function() { return symbol_circle; },
  "SymbolCross": function() { return symbol_cross; },
  "SymbolDiamond": function() { return symbol_diamond; },
  "SymbolRectangle": function() { return symbol_rectangle; },
  "SymbolSquare": function() { return symbol_square; },
  "SymbolTriangleDown": function() { return symbol_triangle_down; },
  "SymbolTriangleUp": function() { return symbol_triangle_up; },
  "Syringe": function() { return syringe; },
  "Tag": function() { return tag; },
  "TakeAction": function() { return take_action; },
  "Tank": function() { return tank; },
  "Target": function() { return target; },
  "Taxi": function() { return taxi; },
  "Temperature": function() { return temperature; },
  "TextHighlight": function() { return text_highlight; },
  "Th": function() { return th; },
  "ThDerived": function() { return th_derived; },
  "ThDisconnect": function() { return th_disconnect; },
  "ThFiltered": function() { return th_filtered; },
  "ThList": function() { return th_list; },
  "ThirdParty": function() { return third_party; },
  "ThumbsDown": function() { return thumbs_down; },
  "ThumbsUp": function() { return thumbs_up; },
  "Tick": function() { return tick; },
  "TickCircle": function() { return tick_circle; },
  "Time": function() { return time; },
  "TimelineAreaChart": function() { return timeline_area_chart; },
  "TimelineBarChart": function() { return timeline_bar_chart; },
  "TimelineEvents": function() { return timeline_events; },
  "TimelineLineChart": function() { return timeline_line_chart; },
  "Tint": function() { return tint; },
  "Torch": function() { return torch; },
  "Tractor": function() { return tractor; },
  "Train": function() { return train; },
  "Translate": function() { return translate; },
  "Trash": function() { return trash; },
  "Tree": function() { return tree; },
  "TrendingDown": function() { return trending_down; },
  "TrendingUp": function() { return trending_up; },
  "Truck": function() { return truck; },
  "TwoColumns": function() { return two_columns; },
  "Unarchive": function() { return unarchive; },
  "Underline": function() { return underline; },
  "Undo": function() { return undo; },
  "UngroupObjects": function() { return ungroup_objects; },
  "UnknownVehicle": function() { return unknown_vehicle; },
  "Unlock": function() { return unlock; },
  "Unpin": function() { return unpin; },
  "Unresolve": function() { return unresolve; },
  "Updated": function() { return updated; },
  "Upload": function() { return upload; },
  "User": function() { return user; },
  "Variable": function() { return variable; },
  "VerticalBarChartAsc": function() { return vertical_bar_chart_asc; },
  "VerticalBarChartDesc": function() { return vertical_bar_chart_desc; },
  "VerticalDistribution": function() { return vertical_distribution; },
  "VerticalInbetween": function() { return vertical_inbetween; },
  "Video": function() { return video; },
  "Virus": function() { return virus; },
  "VolumeDown": function() { return volume_down; },
  "VolumeOff": function() { return volume_off; },
  "VolumeUp": function() { return volume_up; },
  "Walk": function() { return walk; },
  "WarningSign": function() { return warning_sign; },
  "WaterfallChart": function() { return waterfall_chart; },
  "Waves": function() { return waves; },
  "Widget": function() { return widget; },
  "WidgetButton": function() { return widget_button; },
  "WidgetFooter": function() { return widget_footer; },
  "WidgetHeader": function() { return widget_header; },
  "Wind": function() { return wind; },
  "Wrench": function() { return wrench; },
  "ZoomIn": function() { return zoom_in; },
  "ZoomOut": function() { return zoom_out; },
  "ZoomToFit": function() { return zoom_to_fit; }
});

// NAMESPACE OBJECT: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/index.js
var _20px_paths_namespaceObject = {};
__webpack_require__.r(_20px_paths_namespaceObject);
__webpack_require__.d(_20px_paths_namespaceObject, {
  "Add": function() { return paths_add; },
  "AddClip": function() { return paths_add_clip; },
  "AddColumnLeft": function() { return paths_add_column_left; },
  "AddColumnRight": function() { return paths_add_column_right; },
  "AddLocation": function() { return paths_add_location; },
  "AddRowBottom": function() { return paths_add_row_bottom; },
  "AddRowTop": function() { return paths_add_row_top; },
  "AddToArtifact": function() { return paths_add_to_artifact; },
  "AddToFolder": function() { return paths_add_to_folder; },
  "AimpointsTarget": function() { return paths_aimpoints_target; },
  "Airplane": function() { return paths_airplane; },
  "AlignCenter": function() { return paths_align_center; },
  "AlignJustify": function() { return paths_align_justify; },
  "AlignLeft": function() { return paths_align_left; },
  "AlignRight": function() { return paths_align_right; },
  "AlignmentBottom": function() { return paths_alignment_bottom; },
  "AlignmentHorizontalCenter": function() { return paths_alignment_horizontal_center; },
  "AlignmentLeft": function() { return paths_alignment_left; },
  "AlignmentRight": function() { return paths_alignment_right; },
  "AlignmentTop": function() { return paths_alignment_top; },
  "AlignmentVerticalCenter": function() { return paths_alignment_vertical_center; },
  "Anchor": function() { return _20px_paths_anchor; },
  "Annotation": function() { return paths_annotation; },
  "Antenna": function() { return paths_antenna; },
  "AppHeader": function() { return paths_app_header; },
  "Application": function() { return paths_application; },
  "Applications": function() { return paths_applications; },
  "Archive": function() { return paths_archive; },
  "AreaOfInterest": function() { return paths_area_of_interest; },
  "Array": function() { return paths_array; },
  "ArrayBoolean": function() { return paths_array_boolean; },
  "ArrayDate": function() { return paths_array_date; },
  "ArrayFloatingPoint": function() { return paths_array_floating_point; },
  "ArrayNumeric": function() { return paths_array_numeric; },
  "ArrayString": function() { return paths_array_string; },
  "ArrayTimestamp": function() { return paths_array_timestamp; },
  "ArrowBottomLeft": function() { return paths_arrow_bottom_left; },
  "ArrowBottomRight": function() { return paths_arrow_bottom_right; },
  "ArrowDown": function() { return paths_arrow_down; },
  "ArrowLeft": function() { return paths_arrow_left; },
  "ArrowRight": function() { return paths_arrow_right; },
  "ArrowTopLeft": function() { return paths_arrow_top_left; },
  "ArrowTopRight": function() { return paths_arrow_top_right; },
  "ArrowUp": function() { return paths_arrow_up; },
  "ArrowsHorizontal": function() { return paths_arrows_horizontal; },
  "ArrowsVertical": function() { return paths_arrows_vertical; },
  "Asterisk": function() { return paths_asterisk; },
  "At": function() { return paths_at; },
  "AutomaticUpdates": function() { return paths_automatic_updates; },
  "Axle": function() { return paths_axle; },
  "Backlink": function() { return paths_backlink; },
  "Badge": function() { return paths_badge; },
  "BanCircle": function() { return paths_ban_circle; },
  "BankAccount": function() { return paths_bank_account; },
  "Barcode": function() { return paths_barcode; },
  "Blank": function() { return paths_blank; },
  "BlockedPerson": function() { return paths_blocked_person; },
  "Bold": function() { return paths_bold; },
  "Book": function() { return paths_book; },
  "Bookmark": function() { return paths_bookmark; },
  "Box": function() { return paths_box; },
  "Briefcase": function() { return paths_briefcase; },
  "BringData": function() { return paths_bring_data; },
  "Bug": function() { return paths_bug; },
  "Buggy": function() { return paths_buggy; },
  "Build": function() { return paths_build; },
  "Calculator": function() { return paths_calculator; },
  "Calendar": function() { return paths_calendar; },
  "Camera": function() { return paths_camera; },
  "CaretDown": function() { return paths_caret_down; },
  "CaretLeft": function() { return paths_caret_left; },
  "CaretRight": function() { return paths_caret_right; },
  "CaretUp": function() { return paths_caret_up; },
  "CargoShip": function() { return paths_cargo_ship; },
  "CellTower": function() { return paths_cell_tower; },
  "Changes": function() { return paths_changes; },
  "Chart": function() { return paths_chart; },
  "Chat": function() { return paths_chat; },
  "ChevronBackward": function() { return paths_chevron_backward; },
  "ChevronDown": function() { return paths_chevron_down; },
  "ChevronForward": function() { return paths_chevron_forward; },
  "ChevronLeft": function() { return paths_chevron_left; },
  "ChevronRight": function() { return paths_chevron_right; },
  "ChevronUp": function() { return paths_chevron_up; },
  "Circle": function() { return paths_circle; },
  "CircleArrowDown": function() { return paths_circle_arrow_down; },
  "CircleArrowLeft": function() { return paths_circle_arrow_left; },
  "CircleArrowRight": function() { return paths_circle_arrow_right; },
  "CircleArrowUp": function() { return paths_circle_arrow_up; },
  "Citation": function() { return paths_citation; },
  "Clean": function() { return paths_clean; },
  "Clip": function() { return paths_clip; },
  "Clipboard": function() { return paths_clipboard; },
  "Cloud": function() { return paths_cloud; },
  "CloudDownload": function() { return paths_cloud_download; },
  "CloudUpload": function() { return paths_cloud_upload; },
  "Code": function() { return paths_code; },
  "CodeBlock": function() { return paths_code_block; },
  "Cog": function() { return paths_cog; },
  "CollapseAll": function() { return paths_collapse_all; },
  "ColorFill": function() { return paths_color_fill; },
  "ColumnLayout": function() { return paths_column_layout; },
  "Comment": function() { return paths_comment; },
  "Comparison": function() { return paths_comparison; },
  "Compass": function() { return paths_compass; },
  "Compressed": function() { return paths_compressed; },
  "Confirm": function() { return _20px_paths_confirm; },
  "Console": function() { return _20px_paths_console; },
  "Contrast": function() { return paths_contrast; },
  "Control": function() { return paths_control; },
  "CreditCard": function() { return paths_credit_card; },
  "Cross": function() { return paths_cross; },
  "CrossCircle": function() { return paths_cross_circle; },
  "Crown": function() { return paths_crown; },
  "Cube": function() { return paths_cube; },
  "CubeAdd": function() { return paths_cube_add; },
  "CubeRemove": function() { return paths_cube_remove; },
  "CurvedRangeChart": function() { return paths_curved_range_chart; },
  "Cut": function() { return paths_cut; },
  "Cycle": function() { return paths_cycle; },
  "Dashboard": function() { return paths_dashboard; },
  "DataConnection": function() { return paths_data_connection; },
  "DataLineage": function() { return paths_data_lineage; },
  "Database": function() { return paths_database; },
  "Delete": function() { return _20px_paths_delete; },
  "Delta": function() { return paths_delta; },
  "DeriveColumn": function() { return paths_derive_column; },
  "Desktop": function() { return paths_desktop; },
  "Diagnosis": function() { return paths_diagnosis; },
  "DiagramTree": function() { return paths_diagram_tree; },
  "DirectionLeft": function() { return paths_direction_left; },
  "DirectionRight": function() { return paths_direction_right; },
  "Disable": function() { return paths_disable; },
  "Divide": function() { return paths_divide; },
  "Document": function() { return _20px_paths_document; },
  "DocumentOpen": function() { return paths_document_open; },
  "DocumentShare": function() { return paths_document_share; },
  "Dollar": function() { return paths_dollar; },
  "Dot": function() { return paths_dot; },
  "DoubleCaretHorizontal": function() { return paths_double_caret_horizontal; },
  "DoubleCaretVertical": function() { return paths_double_caret_vertical; },
  "DoubleChevronDown": function() { return paths_double_chevron_down; },
  "DoubleChevronLeft": function() { return paths_double_chevron_left; },
  "DoubleChevronRight": function() { return paths_double_chevron_right; },
  "DoubleChevronUp": function() { return paths_double_chevron_up; },
  "DoughnutChart": function() { return paths_doughnut_chart; },
  "Download": function() { return paths_download; },
  "DragHandleHorizontal": function() { return paths_drag_handle_horizontal; },
  "DragHandleVertical": function() { return paths_drag_handle_vertical; },
  "Draw": function() { return paths_draw; },
  "DrawerLeft": function() { return paths_drawer_left; },
  "DrawerLeftFilled": function() { return paths_drawer_left_filled; },
  "DrawerRight": function() { return paths_drawer_right; },
  "DrawerRightFilled": function() { return paths_drawer_right_filled; },
  "DriveTime": function() { return paths_drive_time; },
  "Duplicate": function() { return paths_duplicate; },
  "Edit": function() { return paths_edit; },
  "Eject": function() { return paths_eject; },
  "Emoji": function() { return paths_emoji; },
  "Endorsed": function() { return paths_endorsed; },
  "Envelope": function() { return paths_envelope; },
  "Equals": function() { return paths_equals; },
  "Eraser": function() { return paths_eraser; },
  "Error": function() { return paths_error; },
  "Euro": function() { return paths_euro; },
  "Exchange": function() { return paths_exchange; },
  "ExcludeRow": function() { return paths_exclude_row; },
  "ExpandAll": function() { return paths_expand_all; },
  "Export": function() { return _20px_paths_export; },
  "EyeOff": function() { return paths_eye_off; },
  "EyeOn": function() { return paths_eye_on; },
  "EyeOpen": function() { return paths_eye_open; },
  "FastBackward": function() { return paths_fast_backward; },
  "FastForward": function() { return paths_fast_forward; },
  "Feed": function() { return paths_feed; },
  "FeedSubscribed": function() { return paths_feed_subscribed; },
  "Film": function() { return paths_film; },
  "Filter": function() { return paths_filter; },
  "FilterKeep": function() { return paths_filter_keep; },
  "FilterList": function() { return paths_filter_list; },
  "FilterOpen": function() { return paths_filter_open; },
  "FilterRemove": function() { return paths_filter_remove; },
  "Flag": function() { return paths_flag; },
  "Flame": function() { return paths_flame; },
  "Flash": function() { return paths_flash; },
  "FloatingPoint": function() { return paths_floating_point; },
  "FloppyDisk": function() { return paths_floppy_disk; },
  "FlowBranch": function() { return paths_flow_branch; },
  "FlowEnd": function() { return paths_flow_end; },
  "FlowLinear": function() { return paths_flow_linear; },
  "FlowReview": function() { return paths_flow_review; },
  "FlowReviewBranch": function() { return paths_flow_review_branch; },
  "Flows": function() { return paths_flows; },
  "FolderClose": function() { return paths_folder_close; },
  "FolderNew": function() { return paths_folder_new; },
  "FolderOpen": function() { return paths_folder_open; },
  "FolderShared": function() { return paths_folder_shared; },
  "FolderSharedOpen": function() { return paths_folder_shared_open; },
  "Follower": function() { return paths_follower; },
  "Following": function() { return paths_following; },
  "Font": function() { return paths_font; },
  "Fork": function() { return paths_fork; },
  "Form": function() { return _20px_paths_form; },
  "Fuel": function() { return paths_fuel; },
  "FullCircle": function() { return paths_full_circle; },
  "FullStackedChart": function() { return paths_full_stacked_chart; },
  "Fullscreen": function() { return paths_fullscreen; },
  "Function": function() { return _20px_paths_function; },
  "GanttChart": function() { return paths_gantt_chart; },
  "Geofence": function() { return paths_geofence; },
  "Geolocation": function() { return paths_geolocation; },
  "Geosearch": function() { return paths_geosearch; },
  "GitBranch": function() { return paths_git_branch; },
  "GitCommit": function() { return paths_git_commit; },
  "GitMerge": function() { return paths_git_merge; },
  "GitNewBranch": function() { return paths_git_new_branch; },
  "GitPull": function() { return paths_git_pull; },
  "GitPush": function() { return paths_git_push; },
  "GitRepo": function() { return paths_git_repo; },
  "Glass": function() { return paths_glass; },
  "Globe": function() { return paths_globe; },
  "GlobeNetwork": function() { return paths_globe_network; },
  "Graph": function() { return paths_graph; },
  "GraphRemove": function() { return paths_graph_remove; },
  "GreaterThan": function() { return paths_greater_than; },
  "GreaterThanOrEqualTo": function() { return paths_greater_than_or_equal_to; },
  "Grid": function() { return paths_grid; },
  "GridView": function() { return paths_grid_view; },
  "GroupObjects": function() { return paths_group_objects; },
  "GroupedBarChart": function() { return paths_grouped_bar_chart; },
  "Hand": function() { return paths_hand; },
  "HandDown": function() { return paths_hand_down; },
  "HandLeft": function() { return paths_hand_left; },
  "HandRight": function() { return paths_hand_right; },
  "HandUp": function() { return paths_hand_up; },
  "Hat": function() { return paths_hat; },
  "Header": function() { return paths_header; },
  "HeaderOne": function() { return paths_header_one; },
  "HeaderThree": function() { return paths_header_three; },
  "HeaderTwo": function() { return paths_header_two; },
  "Headset": function() { return paths_headset; },
  "Heart": function() { return paths_heart; },
  "HeartBroken": function() { return paths_heart_broken; },
  "HeatGrid": function() { return paths_heat_grid; },
  "Heatmap": function() { return paths_heatmap; },
  "Helicopter": function() { return paths_helicopter; },
  "Help": function() { return paths_help; },
  "HelperManagement": function() { return paths_helper_management; },
  "HighPriority": function() { return paths_high_priority; },
  "HighVoltagePole": function() { return paths_high_voltage_pole; },
  "Highlight": function() { return paths_highlight; },
  "History": function() { return _20px_paths_history; },
  "Home": function() { return paths_home; },
  "HorizontalBarChart": function() { return paths_horizontal_bar_chart; },
  "HorizontalBarChartAsc": function() { return paths_horizontal_bar_chart_asc; },
  "HorizontalBarChartDesc": function() { return paths_horizontal_bar_chart_desc; },
  "HorizontalDistribution": function() { return paths_horizontal_distribution; },
  "HorizontalInbetween": function() { return paths_horizontal_inbetween; },
  "Hurricane": function() { return paths_hurricane; },
  "IdNumber": function() { return paths_id_number; },
  "ImageRotateLeft": function() { return paths_image_rotate_left; },
  "ImageRotateRight": function() { return paths_image_rotate_right; },
  "Import": function() { return _20px_paths_import; },
  "Inbox": function() { return paths_inbox; },
  "InboxFiltered": function() { return paths_inbox_filtered; },
  "InboxGeo": function() { return paths_inbox_geo; },
  "InboxSearch": function() { return paths_inbox_search; },
  "InboxUpdate": function() { return paths_inbox_update; },
  "InfoSign": function() { return paths_info_sign; },
  "Inheritance": function() { return paths_inheritance; },
  "InheritedGroup": function() { return paths_inherited_group; },
  "InnerJoin": function() { return paths_inner_join; },
  "Insert": function() { return paths_insert; },
  "Intelligence": function() { return paths_intelligence; },
  "Intersection": function() { return paths_intersection; },
  "IpAddress": function() { return paths_ip_address; },
  "Issue": function() { return paths_issue; },
  "IssueClosed": function() { return paths_issue_closed; },
  "IssueNew": function() { return paths_issue_new; },
  "Italic": function() { return paths_italic; },
  "JoinTable": function() { return paths_join_table; },
  "Key": function() { return paths_key; },
  "KeyBackspace": function() { return paths_key_backspace; },
  "KeyCommand": function() { return paths_key_command; },
  "KeyControl": function() { return paths_key_control; },
  "KeyDelete": function() { return paths_key_delete; },
  "KeyEnter": function() { return paths_key_enter; },
  "KeyEscape": function() { return paths_key_escape; },
  "KeyOption": function() { return paths_key_option; },
  "KeyShift": function() { return paths_key_shift; },
  "KeyTab": function() { return paths_key_tab; },
  "KnownVehicle": function() { return paths_known_vehicle; },
  "LabTest": function() { return paths_lab_test; },
  "Label": function() { return paths_label; },
  "Layer": function() { return _20px_paths_layer; },
  "LayerOutline": function() { return paths_layer_outline; },
  "Layers": function() { return _20px_paths_layers; },
  "Layout": function() { return paths_layout; },
  "LayoutAuto": function() { return paths_layout_auto; },
  "LayoutBalloon": function() { return paths_layout_balloon; },
  "LayoutCircle": function() { return paths_layout_circle; },
  "LayoutGrid": function() { return paths_layout_grid; },
  "LayoutGroupBy": function() { return paths_layout_group_by; },
  "LayoutHierarchy": function() { return paths_layout_hierarchy; },
  "LayoutLinear": function() { return paths_layout_linear; },
  "LayoutSkewGrid": function() { return paths_layout_skew_grid; },
  "LayoutSortedClusters": function() { return paths_layout_sorted_clusters; },
  "Learning": function() { return paths_learning; },
  "LeftJoin": function() { return paths_left_join; },
  "LessThan": function() { return paths_less_than; },
  "LessThanOrEqualTo": function() { return paths_less_than_or_equal_to; },
  "Lifesaver": function() { return paths_lifesaver; },
  "Lightbulb": function() { return paths_lightbulb; },
  "Lightning": function() { return paths_lightning; },
  "Link": function() { return _20px_paths_link; },
  "List": function() { return paths_list; },
  "ListColumns": function() { return paths_list_columns; },
  "ListDetailView": function() { return paths_list_detail_view; },
  "Locate": function() { return paths_locate; },
  "Lock": function() { return paths_lock; },
  "LogIn": function() { return paths_log_in; },
  "LogOut": function() { return paths_log_out; },
  "LowVoltagePole": function() { return paths_low_voltage_pole; },
  "Manual": function() { return paths_manual; },
  "ManuallyEnteredData": function() { return paths_manually_entered_data; },
  "ManyToMany": function() { return paths_many_to_many; },
  "ManyToOne": function() { return paths_many_to_one; },
  "Map": function() { return paths_map; },
  "MapCreate": function() { return paths_map_create; },
  "MapMarker": function() { return paths_map_marker; },
  "Maximize": function() { return paths_maximize; },
  "Media": function() { return paths_media; },
  "Menu": function() { return paths_menu; },
  "MenuClosed": function() { return paths_menu_closed; },
  "MenuOpen": function() { return paths_menu_open; },
  "MergeColumns": function() { return paths_merge_columns; },
  "MergeLinks": function() { return paths_merge_links; },
  "Minimize": function() { return paths_minimize; },
  "Minus": function() { return paths_minus; },
  "MobilePhone": function() { return paths_mobile_phone; },
  "MobileVideo": function() { return paths_mobile_video; },
  "Modal": function() { return paths_modal; },
  "ModalFilled": function() { return paths_modal_filled; },
  "Moon": function() { return paths_moon; },
  "More": function() { return paths_more; },
  "Mountain": function() { return paths_mountain; },
  "Move": function() { return paths_move; },
  "Mugshot": function() { return paths_mugshot; },
  "MultiSelect": function() { return paths_multi_select; },
  "Music": function() { return paths_music; },
  "Nest": function() { return paths_nest; },
  "NewDrawing": function() { return paths_new_drawing; },
  "NewGridItem": function() { return paths_new_grid_item; },
  "NewLayer": function() { return paths_new_layer; },
  "NewLayers": function() { return paths_new_layers; },
  "NewLink": function() { return paths_new_link; },
  "NewObject": function() { return paths_new_object; },
  "NewPerson": function() { return paths_new_person; },
  "NewPrescription": function() { return paths_new_prescription; },
  "NewTextBox": function() { return paths_new_text_box; },
  "Ninja": function() { return paths_ninja; },
  "NotEqualTo": function() { return paths_not_equal_to; },
  "Notifications": function() { return paths_notifications; },
  "NotificationsSnooze": function() { return paths_notifications_snooze; },
  "NotificationsUpdated": function() { return paths_notifications_updated; },
  "NumberedList": function() { return paths_numbered_list; },
  "Numerical": function() { return paths_numerical; },
  "Office": function() { return paths_office; },
  "Offline": function() { return paths_offline; },
  "OilField": function() { return paths_oil_field; },
  "OneColumn": function() { return paths_one_column; },
  "OneToMany": function() { return paths_one_to_many; },
  "OneToOne": function() { return paths_one_to_one; },
  "OpenApplication": function() { return paths_open_application; },
  "Outdated": function() { return paths_outdated; },
  "PageLayout": function() { return paths_page_layout; },
  "PanelStats": function() { return paths_panel_stats; },
  "PanelTable": function() { return paths_panel_table; },
  "Paperclip": function() { return paths_paperclip; },
  "Paragraph": function() { return paths_paragraph; },
  "Path": function() { return paths_path; },
  "PathSearch": function() { return paths_path_search; },
  "Pause": function() { return paths_pause; },
  "People": function() { return paths_people; },
  "Percentage": function() { return paths_percentage; },
  "Person": function() { return paths_person; },
  "Phone": function() { return paths_phone; },
  "PieChart": function() { return paths_pie_chart; },
  "Pin": function() { return paths_pin; },
  "Pivot": function() { return paths_pivot; },
  "PivotTable": function() { return paths_pivot_table; },
  "Play": function() { return paths_play; },
  "Playbook": function() { return paths_playbook; },
  "Plus": function() { return paths_plus; },
  "PolygonFilter": function() { return paths_polygon_filter; },
  "Power": function() { return paths_power; },
  "PredictiveAnalysis": function() { return paths_predictive_analysis; },
  "Prescription": function() { return paths_prescription; },
  "Presentation": function() { return paths_presentation; },
  "Print": function() { return paths_print; },
  "Projects": function() { return paths_projects; },
  "Properties": function() { return paths_properties; },
  "Property": function() { return paths_property; },
  "PublishFunction": function() { return paths_publish_function; },
  "Pulse": function() { return paths_pulse; },
  "Rain": function() { return paths_rain; },
  "Random": function() { return paths_random; },
  "Record": function() { return paths_record; },
  "RectHeight": function() { return paths_rect_height; },
  "RectWidth": function() { return paths_rect_width; },
  "Rectangle": function() { return paths_rectangle; },
  "Redo": function() { return paths_redo; },
  "Refresh": function() { return paths_refresh; },
  "Regex": function() { return paths_regex; },
  "RegressionChart": function() { return paths_regression_chart; },
  "Remove": function() { return paths_remove; },
  "RemoveColumn": function() { return paths_remove_column; },
  "RemoveColumnLeft": function() { return paths_remove_column_left; },
  "RemoveColumnRight": function() { return paths_remove_column_right; },
  "RemoveRowBottom": function() { return paths_remove_row_bottom; },
  "RemoveRowTop": function() { return paths_remove_row_top; },
  "Repeat": function() { return paths_repeat; },
  "Reset": function() { return _20px_paths_reset; },
  "Resolve": function() { return paths_resolve; },
  "Rig": function() { return paths_rig; },
  "RightJoin": function() { return paths_right_join; },
  "Ring": function() { return paths_ring; },
  "Rocket": function() { return paths_rocket; },
  "RocketSlant": function() { return paths_rocket_slant; },
  "RotateDocument": function() { return paths_rotate_document; },
  "RotatePage": function() { return paths_rotate_page; },
  "Route": function() { return paths_route; },
  "Satellite": function() { return paths_satellite; },
  "Saved": function() { return paths_saved; },
  "ScatterPlot": function() { return paths_scatter_plot; },
  "Search": function() { return paths_search; },
  "SearchAround": function() { return paths_search_around; },
  "SearchTemplate": function() { return paths_search_template; },
  "SearchText": function() { return paths_search_text; },
  "SegmentedControl": function() { return paths_segmented_control; },
  "Select": function() { return _20px_paths_select; },
  "Selection": function() { return paths_selection; },
  "SendMessage": function() { return paths_send_message; },
  "SendTo": function() { return paths_send_to; },
  "SendToGraph": function() { return paths_send_to_graph; },
  "SendToMap": function() { return paths_send_to_map; },
  "SeriesAdd": function() { return paths_series_add; },
  "SeriesConfiguration": function() { return paths_series_configuration; },
  "SeriesDerived": function() { return paths_series_derived; },
  "SeriesFiltered": function() { return paths_series_filtered; },
  "SeriesSearch": function() { return paths_series_search; },
  "Settings": function() { return paths_settings; },
  "Shapes": function() { return paths_shapes; },
  "Share": function() { return paths_share; },
  "SharedFilter": function() { return paths_shared_filter; },
  "Shield": function() { return paths_shield; },
  "Ship": function() { return paths_ship; },
  "Shop": function() { return paths_shop; },
  "ShoppingCart": function() { return paths_shopping_cart; },
  "SignalSearch": function() { return paths_signal_search; },
  "SimCard": function() { return paths_sim_card; },
  "Slash": function() { return paths_slash; },
  "SmallCross": function() { return paths_small_cross; },
  "SmallInfoSign": function() { return paths_small_info_sign; },
  "SmallMinus": function() { return paths_small_minus; },
  "SmallPlus": function() { return paths_small_plus; },
  "SmallSquare": function() { return paths_small_square; },
  "SmallTick": function() { return paths_small_tick; },
  "Snowflake": function() { return paths_snowflake; },
  "SocialMedia": function() { return paths_social_media; },
  "Sort": function() { return paths_sort; },
  "SortAlphabetical": function() { return paths_sort_alphabetical; },
  "SortAlphabeticalDesc": function() { return paths_sort_alphabetical_desc; },
  "SortAsc": function() { return paths_sort_asc; },
  "SortDesc": function() { return paths_sort_desc; },
  "SortNumerical": function() { return paths_sort_numerical; },
  "SortNumericalDesc": function() { return paths_sort_numerical_desc; },
  "SplitColumns": function() { return paths_split_columns; },
  "Square": function() { return paths_square; },
  "StackedChart": function() { return paths_stacked_chart; },
  "StadiumGeometry": function() { return paths_stadium_geometry; },
  "Star": function() { return paths_star; },
  "StarEmpty": function() { return paths_star_empty; },
  "StepBackward": function() { return paths_step_backward; },
  "StepChart": function() { return paths_step_chart; },
  "StepForward": function() { return paths_step_forward; },
  "Stop": function() { return paths_stop; },
  "Stopwatch": function() { return paths_stopwatch; },
  "Strikethrough": function() { return paths_strikethrough; },
  "Style": function() { return paths_style; },
  "SwapHorizontal": function() { return paths_swap_horizontal; },
  "SwapVertical": function() { return paths_swap_vertical; },
  "Switch": function() { return _20px_paths_switch; },
  "SymbolCircle": function() { return paths_symbol_circle; },
  "SymbolCross": function() { return paths_symbol_cross; },
  "SymbolDiamond": function() { return paths_symbol_diamond; },
  "SymbolRectangle": function() { return paths_symbol_rectangle; },
  "SymbolSquare": function() { return paths_symbol_square; },
  "SymbolTriangleDown": function() { return paths_symbol_triangle_down; },
  "SymbolTriangleUp": function() { return paths_symbol_triangle_up; },
  "Syringe": function() { return paths_syringe; },
  "Tag": function() { return paths_tag; },
  "TakeAction": function() { return paths_take_action; },
  "Tank": function() { return paths_tank; },
  "Target": function() { return paths_target; },
  "Taxi": function() { return paths_taxi; },
  "Temperature": function() { return paths_temperature; },
  "TextHighlight": function() { return paths_text_highlight; },
  "Th": function() { return paths_th; },
  "ThDerived": function() { return paths_th_derived; },
  "ThDisconnect": function() { return paths_th_disconnect; },
  "ThFiltered": function() { return paths_th_filtered; },
  "ThList": function() { return paths_th_list; },
  "ThirdParty": function() { return paths_third_party; },
  "ThumbsDown": function() { return paths_thumbs_down; },
  "ThumbsUp": function() { return paths_thumbs_up; },
  "Tick": function() { return paths_tick; },
  "TickCircle": function() { return paths_tick_circle; },
  "Time": function() { return paths_time; },
  "TimelineAreaChart": function() { return paths_timeline_area_chart; },
  "TimelineBarChart": function() { return paths_timeline_bar_chart; },
  "TimelineEvents": function() { return paths_timeline_events; },
  "TimelineLineChart": function() { return paths_timeline_line_chart; },
  "Tint": function() { return paths_tint; },
  "Torch": function() { return paths_torch; },
  "Tractor": function() { return paths_tractor; },
  "Train": function() { return paths_train; },
  "Translate": function() { return paths_translate; },
  "Trash": function() { return paths_trash; },
  "Tree": function() { return paths_tree; },
  "TrendingDown": function() { return paths_trending_down; },
  "TrendingUp": function() { return paths_trending_up; },
  "Truck": function() { return paths_truck; },
  "TwoColumns": function() { return paths_two_columns; },
  "Unarchive": function() { return paths_unarchive; },
  "Underline": function() { return paths_underline; },
  "Undo": function() { return paths_undo; },
  "UngroupObjects": function() { return paths_ungroup_objects; },
  "UnknownVehicle": function() { return paths_unknown_vehicle; },
  "Unlock": function() { return paths_unlock; },
  "Unpin": function() { return paths_unpin; },
  "Unresolve": function() { return paths_unresolve; },
  "Updated": function() { return paths_updated; },
  "Upload": function() { return paths_upload; },
  "User": function() { return paths_user; },
  "Variable": function() { return paths_variable; },
  "VerticalBarChartAsc": function() { return paths_vertical_bar_chart_asc; },
  "VerticalBarChartDesc": function() { return paths_vertical_bar_chart_desc; },
  "VerticalDistribution": function() { return paths_vertical_distribution; },
  "VerticalInbetween": function() { return paths_vertical_inbetween; },
  "Video": function() { return paths_video; },
  "Virus": function() { return paths_virus; },
  "VolumeDown": function() { return paths_volume_down; },
  "VolumeOff": function() { return paths_volume_off; },
  "VolumeUp": function() { return paths_volume_up; },
  "Walk": function() { return paths_walk; },
  "WarningSign": function() { return paths_warning_sign; },
  "WaterfallChart": function() { return paths_waterfall_chart; },
  "Waves": function() { return paths_waves; },
  "Widget": function() { return paths_widget; },
  "WidgetButton": function() { return paths_widget_button; },
  "WidgetFooter": function() { return paths_widget_footer; },
  "WidgetHeader": function() { return paths_widget_header; },
  "Wind": function() { return paths_wind; },
  "Wrench": function() { return paths_wrench; },
  "ZoomIn": function() { return paths_zoom_in; },
  "ZoomOut": function() { return paths_zoom_out; },
  "ZoomToFit": function() { return paths_zoom_to_fit; }
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(791);
var react_namespaceObject = /*#__PURE__*/__webpack_require__.t(react, 2);
// EXTERNAL MODULE: ./node_modules/react-dom/client.js
var client = __webpack_require__(250);
;// CONCATENATED MODULE: ./src/index.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var src = ({});
;// CONCATENATED MODULE: ./src/App.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var App = ({});
;// CONCATENATED MODULE: ./node_modules/normalize.css/normalize.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var normalize = ({});
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/css/blueprint.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var blueprint = ({});
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/css/blueprint-icons.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var blueprint_icons = ({});
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js




function toConsumableArray_toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function classCallCheck_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toPrimitive.js

function _toPrimitive(input, hint) {
  if (_typeof(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (_typeof(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js


function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return _typeof(key) === "symbol" ? key : String(key);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
  }
}
function createClass_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js


function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createSuper.js



function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(arr, i) {
  var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
  if (null != _i) {
    var _s,
      _e,
      _x,
      _r,
      _arr = [],
      _n = !0,
      _d = !1;
    try {
      if (_x = (_i = _i.call(arr)).next, 0 === i) {
        if (Object(_i) !== _i) return;
        _n = !1;
      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return;
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js




function slicedToArray_slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js
function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/construct.js


function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct.bind();
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }
  return _construct.apply(null, arguments);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js




function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;
  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;
    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);
      _cache.set(Class, Wrapper);
    }
    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };
  return _wrapNativeSuper(Class);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toArray.js




function _toArray(arr) {
  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js

function createForOfIteratorHelper_createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F() {};
      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e) {
          throw _e;
        },
        f: F
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true,
    didErr = false,
    err;
  return {
    s: function s() {
      it = it.call(o);
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e2) {
      didErr = true;
      err = _e2;
    },
    f: function f() {
      try {
        if (!normalCompletion && it["return"] != null) it["return"]();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}
;// CONCATENATED MODULE: ./node_modules/@remix-run/router/dist/router.js












/**
 * @remix-run/router v1.5.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

////////////////////////////////////////////////////////////////////////////////
//#region Types and Constants
////////////////////////////////////////////////////////////////////////////////

/**
 * Actions represent the type of change to a location value.
 */
var Action;
(function (Action) {
  /**
   * A POP indicates a change to an arbitrary index in the history stack, such
   * as a back or forward navigation. It does not describe the direction of the
   * navigation, only that the current index changed.
   *
   * Note: This is the default action for newly created history objects.
   */
  Action["Pop"] = "POP";
  /**
   * A PUSH indicates a new entry being added to the history stack, such as when
   * a link is clicked and a new page loads. When this happens, all subsequent
   * entries in the stack are lost.
   */

  Action["Push"] = "PUSH";
  /**
   * A REPLACE indicates the entry at the current index in the history stack
   * being replaced by a new one.
   */

  Action["Replace"] = "REPLACE";
})(Action || (Action = {}));
var PopStateEventType = "popstate";
/**
 * Memory history stores the current location in memory. It is designed for use
 * in stateful non-browser environments like tests and React Native.
 */

function router_createMemoryHistory(options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options,
    _options$initialEntri = _options.initialEntries,
    initialEntries = _options$initialEntri === void 0 ? ["/"] : _options$initialEntri,
    initialIndex = _options.initialIndex,
    _options$v5Compat = _options.v5Compat,
    v5Compat = _options$v5Compat === void 0 ? false : _options$v5Compat;
  var entries; // Declare so we can access from createMemoryLocation

  entries = initialEntries.map(function (entry, index) {
    return createMemoryLocation(entry, typeof entry === "string" ? null : entry.state, index === 0 ? "default" : undefined);
  });
  var index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);
  var action = Action.Pop;
  var listener = null;
  function clampIndex(n) {
    return Math.min(Math.max(n, 0), entries.length - 1);
  }
  function getCurrentLocation() {
    return entries[index];
  }
  function createMemoryLocation(to, state, key) {
    if (state === void 0) {
      state = null;
    }
    var location = createLocation(entries ? getCurrentLocation().pathname : "/", to, state, key);
    warning(location.pathname.charAt(0) === "/", "relative pathnames are not supported in memory history: " + JSON.stringify(to));
    return location;
  }
  function createHref(to) {
    return typeof to === "string" ? to : router_createPath(to);
  }
  var history = {
    get index() {
      return index;
    },
    get action() {
      return action;
    },
    get location() {
      return getCurrentLocation();
    },
    createHref: createHref,
    createURL: function createURL(to) {
      return new URL(createHref(to), "http://localhost");
    },
    encodeLocation: function encodeLocation(to) {
      var path = typeof to === "string" ? parsePath(to) : to;
      return {
        pathname: path.pathname || "",
        search: path.search || "",
        hash: path.hash || ""
      };
    },
    push: function push(to, state) {
      action = Action.Push;
      var nextLocation = createMemoryLocation(to, state);
      index += 1;
      entries.splice(index, entries.length, nextLocation);
      if (v5Compat && listener) {
        listener({
          action: action,
          location: nextLocation,
          delta: 1
        });
      }
    },
    replace: function replace(to, state) {
      action = Action.Replace;
      var nextLocation = createMemoryLocation(to, state);
      entries[index] = nextLocation;
      if (v5Compat && listener) {
        listener({
          action: action,
          location: nextLocation,
          delta: 0
        });
      }
    },
    go: function go(delta) {
      action = Action.Pop;
      var nextIndex = clampIndex(index + delta);
      var nextLocation = entries[nextIndex];
      index = nextIndex;
      if (listener) {
        listener({
          action: action,
          location: nextLocation,
          delta: delta
        });
      }
    },
    listen: function listen(fn) {
      listener = fn;
      return function () {
        listener = null;
      };
    }
  };
  return history;
}
/**
 * Browser history stores the location in regular URLs. This is the standard for
 * most web apps, but it requires some configuration on the server to ensure you
 * serve the same app at multiple URLs.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory
 */

function router_createBrowserHistory(options) {
  if (options === void 0) {
    options = {};
  }
  function createBrowserLocation(window, globalHistory) {
    var _window$location = window.location,
      pathname = _window$location.pathname,
      search = _window$location.search,
      hash = _window$location.hash;
    return createLocation("", {
      pathname: pathname,
      search: search,
      hash: hash
    },
    // state defaults to `null` because `window.history.state` does
    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || "default");
  }
  function createBrowserHref(window, to) {
    return typeof to === "string" ? to : router_createPath(to);
  }
  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
}
/**
 * Hash history stores the location in window.location.hash. This makes it ideal
 * for situations where you don't want to send the location to the server for
 * some reason, either because you do cannot configure it or the URL space is
 * reserved for something else.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory
 */

function router_createHashHistory(options) {
  if (options === void 0) {
    options = {};
  }
  function createHashLocation(window, globalHistory) {
    var _parsePath = parsePath(window.location.hash.substr(1)),
      _parsePath$pathname = _parsePath.pathname,
      pathname = _parsePath$pathname === void 0 ? "/" : _parsePath$pathname,
      _parsePath$search = _parsePath.search,
      search = _parsePath$search === void 0 ? "" : _parsePath$search,
      _parsePath$hash = _parsePath.hash,
      hash = _parsePath$hash === void 0 ? "" : _parsePath$hash;
    return createLocation("", {
      pathname: pathname,
      search: search,
      hash: hash
    },
    // state defaults to `null` because `window.history.state` does
    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || "default");
  }
  function createHashHref(window, to) {
    var base = window.document.querySelector("base");
    var href = "";
    if (base && base.getAttribute("href")) {
      var url = window.location.href;
      var hashIndex = url.indexOf("#");
      href = hashIndex === -1 ? url : url.slice(0, hashIndex);
    }
    return href + "#" + (typeof to === "string" ? to : router_createPath(to));
  }
  function validateHashLocation(location, to) {
    warning(location.pathname.charAt(0) === "/", "relative pathnames are not supported in hash history.push(" + JSON.stringify(to) + ")");
  }
  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);
}
function invariant(value, message) {
  if (value === false || value === null || typeof value === "undefined") {
    throw new Error(message);
  }
}
function warning(cond, message) {
  if (!cond) {
    // eslint-disable-next-line no-console
    if (typeof console !== "undefined") console.warn(message);
    try {
      // Welcome to debugging history!
      //
      // This error is thrown as a convenience so you can more easily
      // find the source for a warning that appears in the console by
      // enabling "pause on exceptions" in your JavaScript debugger.
      throw new Error(message); // eslint-disable-next-line no-empty
    } catch (e) {}
  }
}
function createKey() {
  return Math.random().toString(36).substr(2, 8);
}
/**
 * For browser-based histories, we combine the state and key into an object
 */

function getHistoryState(location, index) {
  return {
    usr: location.state,
    key: location.key,
    idx: index
  };
}
/**
 * Creates a Location object with a unique key from the given Path
 */

function createLocation(current, to, state, key) {
  if (state === void 0) {
    state = null;
  }
  var location = _extends({
    pathname: typeof current === "string" ? current : current.pathname,
    search: "",
    hash: ""
  }, typeof to === "string" ? parsePath(to) : to, {
    state: state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to && to.key || key || createKey()
  });
  return location;
}
/**
 * Creates a string URL path from the given pathname, search, and hash components.
 */

function router_createPath(_ref) {
  var _ref$pathname = _ref.pathname,
    pathname = _ref$pathname === void 0 ? "/" : _ref$pathname,
    _ref$search = _ref.search,
    search = _ref$search === void 0 ? "" : _ref$search,
    _ref$hash = _ref.hash,
    hash = _ref$hash === void 0 ? "" : _ref$hash;
  if (search && search !== "?") pathname += search.charAt(0) === "?" ? search : "?" + search;
  if (hash && hash !== "#") pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
  return pathname;
}
/**
 * Parses a string URL path into its separate pathname, search, and hash components.
 */

function parsePath(path) {
  var parsedPath = {};
  if (path) {
    var hashIndex = path.indexOf("#");
    if (hashIndex >= 0) {
      parsedPath.hash = path.substr(hashIndex);
      path = path.substr(0, hashIndex);
    }
    var searchIndex = path.indexOf("?");
    if (searchIndex >= 0) {
      parsedPath.search = path.substr(searchIndex);
      path = path.substr(0, searchIndex);
    }
    if (path) {
      parsedPath.pathname = path;
    }
  }
  return parsedPath;
}
function getUrlBasedHistory(getLocation, _createHref, validateLocation, options) {
  if (options === void 0) {
    options = {};
  }
  var _options2 = options,
    _options2$window = _options2.window,
    window = _options2$window === void 0 ? document.defaultView : _options2$window,
    _options2$v5Compat = _options2.v5Compat,
    v5Compat = _options2$v5Compat === void 0 ? false : _options2$v5Compat;
  var globalHistory = window.history;
  var action = Action.Pop;
  var listener = null;
  var index = getIndex(); // Index should only be null when we initialize. If not, it's because the
  // user called history.pushState or history.replaceState directly, in which
  // case we should log a warning as it will result in bugs.

  if (index == null) {
    index = 0;
    globalHistory.replaceState(_extends({}, globalHistory.state, {
      idx: index
    }), "");
  }
  function getIndex() {
    var state = globalHistory.state || {
      idx: null
    };
    return state.idx;
  }
  function handlePop() {
    action = Action.Pop;
    var nextIndex = getIndex();
    var delta = nextIndex == null ? null : nextIndex - index;
    index = nextIndex;
    if (listener) {
      listener({
        action: action,
        location: history.location,
        delta: delta
      });
    }
  }
  function push(to, state) {
    action = Action.Push;
    var location = createLocation(history.location, to, state);
    if (validateLocation) validateLocation(location, to);
    index = getIndex() + 1;
    var historyState = getHistoryState(location, index);
    var url = history.createHref(location); // try...catch because iOS limits us to 100 pushState calls :/

    try {
      globalHistory.pushState(historyState, "", url);
    } catch (error) {
      // They are going to lose state here, but there is no real
      // way to warn them about it since the page will refresh...
      window.location.assign(url);
    }
    if (v5Compat && listener) {
      listener({
        action: action,
        location: history.location,
        delta: 1
      });
    }
  }
  function replace(to, state) {
    action = Action.Replace;
    var location = createLocation(history.location, to, state);
    if (validateLocation) validateLocation(location, to);
    index = getIndex();
    var historyState = getHistoryState(location, index);
    var url = history.createHref(location);
    globalHistory.replaceState(historyState, "", url);
    if (v5Compat && listener) {
      listener({
        action: action,
        location: history.location,
        delta: 0
      });
    }
  }
  function createURL(to) {
    // window.location.origin is "null" (the literal string value) in Firefox
    // under certain conditions, notably when serving from a local HTML file
    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297
    var base = window.location.origin !== "null" ? window.location.origin : window.location.href;
    var href = typeof to === "string" ? to : router_createPath(to);
    invariant(base, "No window.location.(origin|href) available to create URL for href: " + href);
    return new URL(href, base);
  }
  var history = {
    get action() {
      return action;
    },
    get location() {
      return getLocation(window, globalHistory);
    },
    listen: function listen(fn) {
      if (listener) {
        throw new Error("A history only accepts one active listener");
      }
      window.addEventListener(PopStateEventType, handlePop);
      listener = fn;
      return function () {
        window.removeEventListener(PopStateEventType, handlePop);
        listener = null;
      };
    },
    createHref: function createHref(to) {
      return _createHref(window, to);
    },
    createURL: createURL,
    encodeLocation: function encodeLocation(to) {
      // Encode a Location the same way window.location would
      var url = createURL(to);
      return {
        pathname: url.pathname,
        search: url.search,
        hash: url.hash
      };
    },
    push: push,
    replace: replace,
    go: function go(n) {
      return globalHistory.go(n);
    }
  };
  return history;
} //#endregion

var ResultType;
(function (ResultType) {
  ResultType["data"] = "data";
  ResultType["deferred"] = "deferred";
  ResultType["redirect"] = "redirect";
  ResultType["error"] = "error";
})(ResultType || (ResultType = {}));
var immutableRouteKeys = new Set(["lazy", "caseSensitive", "path", "id", "index", "children"]);
function isIndexRoute(route) {
  return route.index === true;
} // Walk the route tree generating unique IDs where necessary so we are working
// solely with AgnosticDataRouteObject's within the Router

function convertRoutesToDataRoutes(routes, detectErrorBoundary, parentPath, manifest) {
  if (parentPath === void 0) {
    parentPath = [];
  }
  if (manifest === void 0) {
    manifest = {};
  }
  return routes.map(function (route, index) {
    var treePath = [].concat(_toConsumableArray(parentPath), [index]);
    var id = typeof route.id === "string" ? route.id : treePath.join("-");
    invariant(route.index !== true || !route.children, "Cannot specify children on an index route");
    invariant(!manifest[id], "Found a route id collision on id \"" + id + "\".  Route " + "id's must be globally unique within Data Router usages");
    if (isIndexRoute(route)) {
      var indexRoute = _extends({}, route, {
        hasErrorBoundary: detectErrorBoundary(route),
        id: id
      });
      manifest[id] = indexRoute;
      return indexRoute;
    } else {
      var pathOrLayoutRoute = _extends({}, route, {
        id: id,
        hasErrorBoundary: detectErrorBoundary(route),
        children: undefined
      });
      manifest[id] = pathOrLayoutRoute;
      if (route.children) {
        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, detectErrorBoundary, treePath, manifest);
      }
      return pathOrLayoutRoute;
    }
  });
}
/**
 * Matches the given routes to a location and returns the match data.
 *
 * @see https://reactrouter.com/utils/match-routes
 */

function matchRoutes(routes, locationArg, basename) {
  if (basename === void 0) {
    basename = "/";
  }
  var location = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
  var pathname = stripBasename(location.pathname || "/", basename);
  if (pathname == null) {
    return null;
  }
  var branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  var matches = null;
  for (var i = 0; matches == null && i < branches.length; ++i) {
    matches = matchRouteBranch(branches[i],
    // Incoming pathnames are generally encoded from either window.location
    // or from router.navigate, but we want to match against the unencoded
    // paths in the route definitions.  Memory router locations won't be
    // encoded here but there also shouldn't be anything to decode so this
    // should be a safe operation.  This avoids needing matchRoutes to be
    // history-aware.
    safelyDecodeURI(pathname));
  }
  return matches;
}
function flattenRoutes(routes, branches, parentsMeta, parentPath) {
  if (branches === void 0) {
    branches = [];
  }
  if (parentsMeta === void 0) {
    parentsMeta = [];
  }
  if (parentPath === void 0) {
    parentPath = "";
  }
  var flattenRoute = function flattenRoute(route, index, relativePath) {
    var meta = {
      relativePath: relativePath === undefined ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index,
      route: route
    };
    if (meta.relativePath.startsWith("/")) {
      invariant(meta.relativePath.startsWith(parentPath), "Absolute route path \"" + meta.relativePath + "\" nested under path " + ("\"" + parentPath + "\" is not valid. An absolute child route path ") + "must start with the combined path of all its parent routes.");
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }
    var path = router_joinPaths([parentPath, meta.relativePath]);
    var routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the
    // route tree depth-first and child routes appear before their parents in
    // the "flattened" version.

    if (route.children && route.children.length > 0) {
      invariant(
      // Our types know better, but runtime JS may not!
      // @ts-expect-error
      route.index !== true, "Index routes must not have child routes. Please remove " + ("all child routes from route path \"" + path + "\"."));
      flattenRoutes(route.children, branches, routesMeta, path);
    } // Routes without a path shouldn't ever match by themselves unless they are
    // index routes, so don't add them to the list of possible branches.

    if (route.path == null && !route.index) {
      return;
    }
    branches.push({
      path: path,
      score: computeScore(path, route.index),
      routesMeta: routesMeta
    });
  };
  routes.forEach(function (route, index) {
    var _route$path;

    // coarse-grain check for optional params
    if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?"))) {
      flattenRoute(route, index);
    } else {
      var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(explodeOptionalSegments(route.path)),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var exploded = _step.value;
          flattenRoute(route, index, exploded);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  });
  return branches;
}
/**
 * Computes all combinations of optional path segments for a given path,
 * excluding combinations that are ambiguous and of lower priority.
 *
 * For example, `/one/:two?/three/:four?/:five?` explodes to:
 * - `/one/three`
 * - `/one/:two/three`
 * - `/one/three/:four`
 * - `/one/three/:five`
 * - `/one/:two/three/:four`
 * - `/one/:two/three/:five`
 * - `/one/three/:four/:five`
 * - `/one/:two/three/:four/:five`
 */

function explodeOptionalSegments(path) {
  var segments = path.split("/");
  if (segments.length === 0) return [];
  var _segments = _toArray(segments),
    first = _segments[0],
    rest = _segments.slice(1); // Optional path segments are denoted by a trailing `?`

  var isOptional = first.endsWith("?"); // Compute the corresponding required segment: `foo?` -> `foo`

  var required = first.replace(/\?$/, "");
  if (rest.length === 0) {
    // Intepret empty string as omitting an optional segment
    // `["one", "", "three"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`
    return isOptional ? [required, ""] : [required];
  }
  var restExploded = explodeOptionalSegments(rest.join("/"));
  var result = []; // All child paths with the prefix.  Do this for all children before the
  // optional version for all children so we get consistent ordering where the
  // parent optional aspect is preferred as required.  Otherwise, we can get
  // child sections interspersed where deeper optional segments are higher than
  // parent optional segments, where for example, /:two would explodes _earlier_
  // then /:one.  By always including the parent as required _for all children_
  // first, we avoid this issue

  result.push.apply(result, toConsumableArray_toConsumableArray(restExploded.map(function (subpath) {
    return subpath === "" ? required : [required, subpath].join("/");
  }))); // Then if this is an optional value, add all child versions without

  if (isOptional) {
    result.push.apply(result, toConsumableArray_toConsumableArray(restExploded));
  } // for absolute paths, ensure `/` instead of empty segment

  return result.map(function (exploded) {
    return path.startsWith("/") && exploded === "" ? "/" : exploded;
  });
}
function rankRouteBranches(branches) {
  branches.sort(function (a, b) {
    return a.score !== b.score ? b.score - a.score // Higher score first
    : compareIndexes(a.routesMeta.map(function (meta) {
      return meta.childrenIndex;
    }), b.routesMeta.map(function (meta) {
      return meta.childrenIndex;
    }));
  });
}
var paramRe = /^:\w+$/;
var dynamicSegmentValue = 3;
var indexRouteValue = 2;
var emptySegmentValue = 1;
var staticSegmentValue = 10;
var splatPenalty = -2;
var isSplat = function isSplat(s) {
  return s === "*";
};
function computeScore(path, index) {
  var segments = path.split("/");
  var initialScore = segments.length;
  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }
  if (index) {
    initialScore += indexRouteValue;
  }
  return segments.filter(function (s) {
    return !isSplat(s);
  }).reduce(function (score, segment) {
    return score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue);
  }, initialScore);
}
function compareIndexes(a, b) {
  var siblings = a.length === b.length && a.slice(0, -1).every(function (n, i) {
    return n === b[i];
  });
  return siblings ?
  // If two routes are siblings, we should try to match the earlier sibling
  // first. This allows people to have fine-grained control over the matching
  // behavior by simply putting routes with identical paths in the order they
  // want them tried.
  a[a.length - 1] - b[b.length - 1] :
  // Otherwise, it doesn't really make sense to rank non-siblings by index,
  // so they sort equally.
  0;
}
function matchRouteBranch(branch, pathname) {
  var routesMeta = branch.routesMeta;
  var matchedParams = {};
  var matchedPathname = "/";
  var matches = [];
  for (var i = 0; i < routesMeta.length; ++i) {
    var meta = routesMeta[i];
    var end = i === routesMeta.length - 1;
    var remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
    var match = router_matchPath({
      path: meta.relativePath,
      caseSensitive: meta.caseSensitive,
      end: end
    }, remainingPathname);
    if (!match) return null;
    Object.assign(matchedParams, match.params);
    var route = meta.route;
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: router_joinPaths([matchedPathname, match.pathname]),
      pathnameBase: normalizePathname(router_joinPaths([matchedPathname, match.pathnameBase])),
      route: route
    });
    if (match.pathnameBase !== "/") {
      matchedPathname = router_joinPaths([matchedPathname, match.pathnameBase]);
    }
  }
  return matches;
}
/**
 * Returns a path with params interpolated.
 *
 * @see https://reactrouter.com/utils/generate-path
 */

function generatePath(originalPath, params) {
  if (params === void 0) {
    params = {};
  }
  var path = originalPath;
  if (path.endsWith("*") && path !== "*" && !path.endsWith("/*")) {
    warning(false, "Route path \"" + path + "\" will be treated as if it were " + ("\"" + path.replace(/\*$/, "/*") + "\" because the `*` character must ") + "always follow a `/` in the pattern. To get rid of this warning, " + ("please change the route path to \"" + path.replace(/\*$/, "/*") + "\"."));
    path = path.replace(/\*$/, "/*");
  } // ensure `/` is added at the beginning if the path is absolute

  var prefix = path.startsWith("/") ? "/" : "";
  var segments = path.split(/\/+/).map(function (segment, index, array) {
    var isLastSegment = index === array.length - 1; // only apply the splat if it's the last segment

    if (isLastSegment && segment === "*") {
      var star = "*";
      var starParam = params[star]; // Apply the splat

      return starParam;
    }
    var keyMatch = segment.match(/^:(\w+)(\??)$/);
    if (keyMatch) {
      var _keyMatch = _slicedToArray(keyMatch, 3),
        key = _keyMatch[1],
        optional = _keyMatch[2];
      var param = params[key];
      if (optional === "?") {
        return param == null ? "" : param;
      }
      if (param == null) {
        invariant(false, "Missing \":" + key + "\" param");
      }
      return param;
    } // Remove any optional markers from optional static segments

    return segment.replace(/\?$/g, "");
  }) // Remove empty segments
  .filter(function (segment) {
    return !!segment;
  });
  return prefix + segments.join("/");
}
/**
 * Performs pattern matching on a URL pathname and returns information about
 * the match.
 *
 * @see https://reactrouter.com/utils/match-path
 */

function router_matchPath(pattern, pathname) {
  if (typeof pattern === "string") {
    pattern = {
      path: pattern,
      caseSensitive: false,
      end: true
    };
  }
  var _compilePath = compilePath(pattern.path, pattern.caseSensitive, pattern.end),
    _compilePath2 = slicedToArray_slicedToArray(_compilePath, 2),
    matcher = _compilePath2[0],
    paramNames = _compilePath2[1];
  var match = pathname.match(matcher);
  if (!match) return null;
  var matchedPathname = match[0];
  var pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  var captureGroups = match.slice(1);
  var params = paramNames.reduce(function (memo, paramName, index) {
    // We need to compute the pathnameBase here using the raw splat value
    // instead of using params["*"] later because it will be decoded then
    if (paramName === "*") {
      var splatValue = captureGroups[index] || "";
      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
    }
    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || "", paramName);
    return memo;
  }, {});
  return {
    params: params,
    pathname: matchedPathname,
    pathnameBase: pathnameBase,
    pattern: pattern
  };
}
function compilePath(path, caseSensitive, end) {
  if (caseSensitive === void 0) {
    caseSensitive = false;
  }
  if (end === void 0) {
    end = true;
  }
  warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), "Route path \"" + path + "\" will be treated as if it were " + ("\"" + path.replace(/\*$/, "/*") + "\" because the `*` character must ") + "always follow a `/` in the pattern. To get rid of this warning, " + ("please change the route path to \"" + path.replace(/\*$/, "/*") + "\"."));
  var paramNames = [];
  var regexpSource = "^" + path.replace(/\/*\*?$/, "") // Ignore trailing / and /*, we'll handle it below
  .replace(/^\/*/, "/") // Make sure it has a leading /
  .replace(/[\\.*+^$?{}|()[\]]/g, "\\$&") // Escape special regex chars
  .replace(/\/:(\w+)/g, function (_, paramName) {
    paramNames.push(paramName);
    return "/([^\\/]+)";
  });
  if (path.endsWith("*")) {
    paramNames.push("*");
    regexpSource += path === "*" || path === "/*" ? "(.*)$" // Already matched the initial /, just match the rest
    : "(?:\\/(.+)|\\/*)$"; // Don't include the / in params["*"]
  } else if (end) {
    // When matching to the end, ignore trailing slashes
    regexpSource += "\\/*$";
  } else if (path !== "" && path !== "/") {
    // If our path is non-empty and contains anything beyond an initial slash,
    // then we have _some_ form of path in our regex so we should expect to
    // match only if we find the end of this path segment.  Look for an optional
    // non-captured trailing slash (to match a portion of the URL) or the end
    // of the path (if we've matched to the end).  We used to do this with a
    // word boundary but that gives false positives on routes like
    // /user-preferences since `-` counts as a word boundary.
    regexpSource += "(?:(?=\\/|$))";
  } else ;
  var matcher = new RegExp(regexpSource, caseSensitive ? undefined : "i");
  return [matcher, paramNames];
}
function safelyDecodeURI(value) {
  try {
    return decodeURI(value);
  } catch (error) {
    warning(false, "The URL path \"" + value + "\" could not be decoded because it is is a " + "malformed URL segment. This is probably due to a bad percent " + ("encoding (" + error + ")."));
    return value;
  }
}
function safelyDecodeURIComponent(value, paramName) {
  try {
    return decodeURIComponent(value);
  } catch (error) {
    warning(false, "The value for the URL param \"" + paramName + "\" will not be decoded because" + (" the string \"" + value + "\" is a malformed URL segment. This is probably") + (" due to a bad percent encoding (" + error + ")."));
    return value;
  }
}
/**
 * @private
 */

function stripBasename(pathname, basename) {
  if (basename === "/") return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  } // We want to leave trailing slash behavior in the user's control, so if they
  // specify a basename with a trailing slash, we should support it

  var startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
  var nextChar = pathname.charAt(startIndex);
  if (nextChar && nextChar !== "/") {
    // pathname does not start with basename/
    return null;
  }
  return pathname.slice(startIndex) || "/";
}
/**
 * Returns a resolved path object relative to the given pathname.
 *
 * @see https://reactrouter.com/utils/resolve-path
 */

function resolvePath(to, fromPathname) {
  if (fromPathname === void 0) {
    fromPathname = "/";
  }
  var _ref3 = typeof to === "string" ? parsePath(to) : to,
    toPathname = _ref3.pathname,
    _ref3$search = _ref3.search,
    search = _ref3$search === void 0 ? "" : _ref3$search,
    _ref3$hash = _ref3.hash,
    hash = _ref3$hash === void 0 ? "" : _ref3$hash;
  var pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
  return {
    pathname: pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash)
  };
}
function resolvePathname(relativePath, fromPathname) {
  var segments = fromPathname.replace(/\/+$/, "").split("/");
  var relativeSegments = relativePath.split("/");
  relativeSegments.forEach(function (segment) {
    if (segment === "..") {
      // Keep the root "" segment so the pathname starts at /
      if (segments.length > 1) segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path) {
  return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + "a string in <Link to=\"...\"> and the router will parse it for you.";
}
/**
 * @private
 *
 * When processing relative navigation we want to ignore ancestor routes that
 * do not contribute to the path, such that index/pathless layout routes don't
 * interfere.
 *
 * For example, when moving a route element into an index route and/or a
 * pathless layout route, relative link behavior contained within should stay
 * the same.  Both of the following examples should link back to the root:
 *
 *   <Route path="/">
 *     <Route path="accounts" element={<Link to=".."}>
 *   </Route>
 *
 *   <Route path="/">
 *     <Route path="accounts">
 *       <Route element={<AccountsLayout />}>       // <-- Does not contribute
 *         <Route index element={<Link to=".."} />  // <-- Does not contribute
 *       </Route
 *     </Route>
 *   </Route>
 */

function getPathContributingMatches(matches) {
  return matches.filter(function (match, index) {
    return index === 0 || match.route.path && match.route.path.length > 0;
  });
}
/**
 * @private
 */

function resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
  if (isPathRelative === void 0) {
    isPathRelative = false;
  }
  var to;
  if (typeof toArg === "string") {
    to = parsePath(toArg);
  } else {
    to = _extends({}, toArg);
    invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to));
    invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to));
    invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to));
  }
  var isEmptyPath = toArg === "" || to.pathname === "";
  var toPathname = isEmptyPath ? "/" : to.pathname;
  var from; // Routing is relative to the current pathname if explicitly requested.
  //
  // If a pathname is explicitly provided in `to`, it should be relative to the
  // route context. This is explained in `Note on `<Link to>` values` in our
  // migration guide from v5 as a means of disambiguation between `to` values
  // that begin with `/` and those that do not. However, this is problematic for
  // `to` values that do not provide a pathname. `to` can simply be a search or
  // hash string, in which case we should assume that the navigation is relative
  // to the current location's pathname and *not* the route pathname.

  if (isPathRelative || toPathname == null) {
    from = locationPathname;
  } else {
    var routePathnameIndex = routePathnames.length - 1;
    if (toPathname.startsWith("..")) {
      var toSegments = toPathname.split("/"); // Each leading .. segment means "go up one route" instead of "go up one
      // URL segment".  This is a key difference from how <a href> works and a
      // major reason we call this a "to" value instead of a "href".

      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }
      to.pathname = toSegments.join("/");
    } // If there are more ".." segments than parent routes, resolve relative to
    // the root / URL.

    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }
  var path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original "to" had one

  var hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/"); // Or if this was a link to the current path which has a trailing slash

  var hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
  if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {
    path.pathname += "/";
  }
  return path;
}
/**
 * @private
 */

function getToPathname(to) {
  // Empty strings should be treated the same as / paths
  return to === "" || to.pathname === "" ? "/" : typeof to === "string" ? parsePath(to).pathname : to.pathname;
}
/**
 * @private
 */

var router_joinPaths = function joinPaths(paths) {
  return paths.join("/").replace(/\/\/+/g, "/");
};
/**
 * @private
 */

var normalizePathname = function normalizePathname(pathname) {
  return pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
};
/**
 * @private
 */

var normalizeSearch = function normalizeSearch(search) {
  return !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
};
/**
 * @private
 */

var normalizeHash = function normalizeHash(hash) {
  return !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
};
/**
 * This is a shortcut for creating `application/json` responses. Converts `data`
 * to JSON and sets the `Content-Type` header.
 */

var json = function json(data, init) {
  if (init === void 0) {
    init = {};
  }
  var responseInit = typeof init === "number" ? {
    status: init
  } : init;
  var headers = new Headers(responseInit.headers);
  if (!headers.has("Content-Type")) {
    headers.set("Content-Type", "application/json; charset=utf-8");
  }
  return new Response(JSON.stringify(data), _extends({}, responseInit, {
    headers: headers
  }));
};
var AbortedDeferredError = /*#__PURE__*/function (_Error) {
  _inherits(AbortedDeferredError, _Error);
  var _super = _createSuper(AbortedDeferredError);
  function AbortedDeferredError() {
    classCallCheck_classCallCheck(this, AbortedDeferredError);
    return _super.apply(this, arguments);
  }
  return createClass_createClass(AbortedDeferredError);
}( /*#__PURE__*/_wrapNativeSuper(Error));
var DeferredData = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function DeferredData(data, responseInit) {
    var _this = this;
    _classCallCheck(this, DeferredData);
    this.pendingKeysSet = new Set();
    this.subscribers = new Set();
    this.deferredKeys = [];
    invariant(data && typeof data === "object" && !Array.isArray(data), "defer() only accepts plain objects"); // Set up an AbortController + Promise we can race against to exit early
    // cancellation

    var reject;
    this.abortPromise = new Promise(function (_, r) {
      return reject = r;
    });
    this.controller = new AbortController();
    var onAbort = function onAbort() {
      return reject(new AbortedDeferredError("Deferred data aborted"));
    };
    this.unlistenAbortSignal = function () {
      return _this.controller.signal.removeEventListener("abort", onAbort);
    };
    this.controller.signal.addEventListener("abort", onAbort);
    this.data = Object.entries(data).reduce(function (acc, _ref) {
      var _ref4 = _slicedToArray(_ref, 2),
        key = _ref4[0],
        value = _ref4[1];
      return Object.assign(acc, _defineProperty({}, key, _this.trackPromise(key, value)));
    }, {});
    if (this.done) {
      // All incoming values were resolved
      this.unlistenAbortSignal();
    }
    this.init = responseInit;
  }
  _createClass(DeferredData, [{
    key: "trackPromise",
    value: function trackPromise(key, value) {
      var _this2 = this;
      if (!(value instanceof Promise)) {
        return value;
      }
      this.deferredKeys.push(key);
      this.pendingKeysSet.add(key); // We store a little wrapper promise that will be extended with
      // _data/_error props upon resolve/reject

      var promise = Promise.race([value, this.abortPromise]).then(function (data) {
        return _this2.onSettle(promise, key, null, data);
      }, function (error) {
        return _this2.onSettle(promise, key, error);
      }); // Register rejection listeners to avoid uncaught promise rejections on
      // errors or aborted deferred values

      promise.catch(function () {});
      Object.defineProperty(promise, "_tracked", {
        get: function get() {
          return true;
        }
      });
      return promise;
    }
  }, {
    key: "onSettle",
    value: function onSettle(promise, key, error, data) {
      if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {
        this.unlistenAbortSignal();
        Object.defineProperty(promise, "_error", {
          get: function get() {
            return error;
          }
        });
        return Promise.reject(error);
      }
      this.pendingKeysSet.delete(key);
      if (this.done) {
        // Nothing left to abort!
        this.unlistenAbortSignal();
      }
      if (error) {
        Object.defineProperty(promise, "_error", {
          get: function get() {
            return error;
          }
        });
        this.emit(false, key);
        return Promise.reject(error);
      }
      Object.defineProperty(promise, "_data", {
        get: function get() {
          return data;
        }
      });
      this.emit(false, key);
      return data;
    }
  }, {
    key: "emit",
    value: function emit(aborted, settledKey) {
      this.subscribers.forEach(function (subscriber) {
        return subscriber(aborted, settledKey);
      });
    }
  }, {
    key: "subscribe",
    value: function subscribe(fn) {
      var _this3 = this;
      this.subscribers.add(fn);
      return function () {
        return _this3.subscribers.delete(fn);
      };
    }
  }, {
    key: "cancel",
    value: function cancel() {
      var _this4 = this;
      this.controller.abort();
      this.pendingKeysSet.forEach(function (v, k) {
        return _this4.pendingKeysSet.delete(k);
      });
      this.emit(true);
    }
  }, {
    key: "resolveData",
    value: function () {
      var _resolveData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(signal) {
        var _this5 = this;
        var aborted, onAbort;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              aborted = false;
              if (this.done) {
                _context.next = 7;
                break;
              }
              onAbort = function onAbort() {
                return _this5.cancel();
              };
              signal.addEventListener("abort", onAbort);
              _context.next = 6;
              return new Promise(function (resolve) {
                _this5.subscribe(function (aborted) {
                  signal.removeEventListener("abort", onAbort);
                  if (aborted || _this5.done) {
                    resolve(aborted);
                  }
                });
              });
            case 6:
              aborted = _context.sent;
            case 7:
              return _context.abrupt("return", aborted);
            case 8:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function resolveData(_x) {
        return _resolveData.apply(this, arguments);
      }
      return resolveData;
    }()
  }, {
    key: "done",
    get: function get() {
      return this.pendingKeysSet.size === 0;
    }
  }, {
    key: "unwrappedData",
    get: function get() {
      invariant(this.data !== null && this.done, "Can only unwrap data on initialized and settled deferreds");
      return Object.entries(this.data).reduce(function (acc, _ref2) {
        var _ref5 = _slicedToArray(_ref2, 2),
          key = _ref5[0],
          value = _ref5[1];
        return Object.assign(acc, _defineProperty({}, key, unwrapTrackedPromise(value)));
      }, {});
    }
  }, {
    key: "pendingKeys",
    get: function get() {
      return Array.from(this.pendingKeysSet);
    }
  }]);
  return DeferredData;
}()));
function isTrackedPromise(value) {
  return value instanceof Promise && value._tracked === true;
}
function unwrapTrackedPromise(value) {
  if (!isTrackedPromise(value)) {
    return value;
  }
  if (value._error) {
    throw value._error;
  }
  return value._data;
}
var defer = function defer(data, init) {
  if (init === void 0) {
    init = {};
  }
  var responseInit = typeof init === "number" ? {
    status: init
  } : init;
  return new DeferredData(data, responseInit);
};
/**
 * A redirect response. Sets the status code and the `Location` header.
 * Defaults to "302 Found".
 */

var redirect = function redirect(url, init) {
  if (init === void 0) {
    init = 302;
  }
  var responseInit = init;
  if (typeof responseInit === "number") {
    responseInit = {
      status: responseInit
    };
  } else if (typeof responseInit.status === "undefined") {
    responseInit.status = 302;
  }
  var headers = new Headers(responseInit.headers);
  headers.set("Location", url);
  return new Response(null, _extends({}, responseInit, {
    headers: headers
  }));
};
/**
 * @private
 * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies
 */
var router_ErrorResponse = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function ErrorResponse(status, statusText, data, internal) {
  _classCallCheck(this, ErrorResponse);
  if (internal === void 0) {
    internal = false;
  }
  this.status = status;
  this.statusText = statusText || "";
  this.internal = internal;
  if (data instanceof Error) {
    this.data = data.toString();
    this.error = data;
  } else {
    this.data = data;
  }
})));
/**
 * Check if the given error is an ErrorResponse generated from a 4xx/5xx
 * Response thrown from an action/loader
 */
function isRouteErrorResponse(error) {
  return error != null && typeof error.status === "number" && typeof error.statusText === "string" && typeof error.internal === "boolean" && "data" in error;
}
var validMutationMethodsArr = ["post", "put", "patch", "delete"];
var validMutationMethods = new Set(validMutationMethodsArr);
var validRequestMethodsArr = ["get"].concat(validMutationMethodsArr);
var validRequestMethods = new Set(validRequestMethodsArr);
var redirectStatusCodes = new Set([301, 302, 303, 307, 308]);
var redirectPreserveMethodStatusCodes = new Set([307, 308]);
var IDLE_NAVIGATION = {
  state: "idle",
  location: undefined,
  formMethod: undefined,
  formAction: undefined,
  formEncType: undefined,
  formData: undefined
};
var IDLE_FETCHER = {
  state: "idle",
  data: undefined,
  formMethod: undefined,
  formAction: undefined,
  formEncType: undefined,
  formData: undefined
};
var IDLE_BLOCKER = {
  state: "unblocked",
  proceed: undefined,
  reset: undefined,
  location: undefined
};
var ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
var isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
var isServer = !isBrowser;
var defaultDetectErrorBoundary = function defaultDetectErrorBoundary(route) {
  return Boolean(route.hasErrorBoundary);
}; //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region createRouter
////////////////////////////////////////////////////////////////////////////////

/**
 * Create a router and listen to history POP navigations
 */

function router_createRouter(init) {
  invariant(init.routes.length > 0, "You must provide a non-empty routes array to createRouter");
  var detectErrorBoundary = init.detectErrorBoundary || defaultDetectErrorBoundary; // Routes keyed by ID

  var manifest = {}; // Routes in tree format for matching

  var dataRoutes = convertRoutesToDataRoutes(init.routes, detectErrorBoundary, undefined, manifest);
  var inFlightDataRoutes; // Config driven behavior flags

  var future = _extends({
    v7_normalizeFormMethod: false
  }, init.future); // Cleanup function for history

  var unlistenHistory = null; // Externally-provided functions to call on all state changes

  var subscribers = new Set(); // Externally-provided object to hold scroll restoration locations during routing

  var savedScrollPositions = null; // Externally-provided function to get scroll restoration keys

  var getScrollRestorationKey = null; // Externally-provided function to get current scroll position

  var getScrollPosition = null; // One-time flag to control the initial hydration scroll restoration.  Because
  // we don't get the saved positions from <ScrollRestoration /> until _after_
  // the initial render, we need to manually trigger a separate updateState to
  // send along the restoreScrollPosition
  // Set to true if we have `hydrationData` since we assume we were SSR'd and that
  // SSR did the initial scroll restoration.

  var initialScrollRestored = init.hydrationData != null;
  var initialMatches = matchRoutes(dataRoutes, init.history.location, init.basename);
  var initialErrors = null;
  if (initialMatches == null) {
    // If we do not match a user-provided-route, fall back to the root
    // to allow the error boundary to take over
    var error = getInternalRouterError(404, {
      pathname: init.history.location.pathname
    });
    var _getShortCircuitMatch = getShortCircuitMatches(dataRoutes),
      matches = _getShortCircuitMatch.matches,
      route = _getShortCircuitMatch.route;
    initialMatches = matches;
    initialErrors = _defineProperty({}, route.id, error);
  }
  var initialized =
  // All initialMatches need to be loaded before we're ready.  If we have lazy
  // functions around still then we'll need to run them in initialize()
  !initialMatches.some(function (m) {
    return m.route.lazy;
  }) && (
  // And we have to either have no loaders or have been provided hydrationData
  !initialMatches.some(function (m) {
    return m.route.loader;
  }) || init.hydrationData != null);
  var router;
  var state = {
    historyAction: init.history.action,
    location: init.history.location,
    matches: initialMatches,
    initialized: initialized,
    navigation: IDLE_NAVIGATION,
    // Don't restore on initial updateState() if we were SSR'd
    restoreScrollPosition: init.hydrationData != null ? false : null,
    preventScrollReset: false,
    revalidation: "idle",
    loaderData: init.hydrationData && init.hydrationData.loaderData || {},
    actionData: init.hydrationData && init.hydrationData.actionData || null,
    errors: init.hydrationData && init.hydrationData.errors || initialErrors,
    fetchers: new Map(),
    blockers: new Map()
  }; // -- Stateful internal variables to manage navigations --
  // Current navigation in progress (to be committed in completeNavigation)

  var pendingAction = Action.Pop; // Should the current navigation prevent the scroll reset if scroll cannot
  // be restored?

  var pendingPreventScrollReset = false; // AbortController for the active navigation

  var pendingNavigationController; // We use this to avoid touching history in completeNavigation if a
  // revalidation is entirely uninterrupted

  var isUninterruptedRevalidation = false; // Use this internal flag to force revalidation of all loaders:
  //  - submissions (completed or interrupted)
  //  - useRevalidate()
  //  - X-Remix-Revalidate (from redirect)

  var isRevalidationRequired = false; // Use this internal array to capture routes that require revalidation due
  // to a cancelled deferred on action submission

  var cancelledDeferredRoutes = []; // Use this internal array to capture fetcher loads that were cancelled by an
  // action navigation and require revalidation

  var cancelledFetcherLoads = []; // AbortControllers for any in-flight fetchers

  var fetchControllers = new Map(); // Track loads based on the order in which they started

  var incrementingLoadId = 0; // Track the outstanding pending navigation data load to be compared against
  // the globally incrementing load when a fetcher load lands after a completed
  // navigation

  var pendingNavigationLoadId = -1; // Fetchers that triggered data reloads as a result of their actions

  var fetchReloadIds = new Map(); // Fetchers that triggered redirect navigations from their actions

  var fetchRedirectIds = new Set(); // Most recent href/match for fetcher.load calls for fetchers

  var fetchLoadMatches = new Map(); // Store DeferredData instances for active route matches.  When a
  // route loader returns defer() we stick one in here.  Then, when a nested
  // promise resolves we update loaderData.  If a new navigation starts we
  // cancel active deferreds for eliminated routes.

  var activeDeferreds = new Map(); // Store blocker functions in a separate Map outside of router state since
  // we don't need to update UI state if they change

  var blockerFunctions = new Map(); // Flag to ignore the next history update, so we can revert the URL change on
  // a POP navigation that was blocked by the user without touching router state

  var ignoreNextHistoryUpdate = false; // Initialize the router, all side effects should be kicked off from here.
  // Implemented as a Fluent API for ease of:
  //   let router = createRouter(init).initialize();

  function initialize() {
    // If history informs us of a POP navigation, start the navigation but do not update
    // state.  We'll update our own state once the navigation completes
    unlistenHistory = init.history.listen(function (_ref) {
      var historyAction = _ref.action,
        location = _ref.location,
        delta = _ref.delta;

      // Ignore this event if it was just us resetting the URL from a
      // blocked POP navigation
      if (ignoreNextHistoryUpdate) {
        ignoreNextHistoryUpdate = false;
        return;
      }
      warning(blockerFunctions.size === 0 || delta != null, "You are trying to use a blocker on a POP navigation to a location " + "that was not created by @remix-run/router. This will fail silently in " + "production. This can happen if you are navigating outside the router " + "via `window.history.pushState`/`window.location.hash` instead of using " + "router navigation APIs.  This can also happen if you are using " + "createHashRouter and the user manually changes the URL.");
      var blockerKey = shouldBlockNavigation({
        currentLocation: state.location,
        nextLocation: location,
        historyAction: historyAction
      });
      if (blockerKey && delta != null) {
        // Restore the URL to match the current UI, but don't update router state
        ignoreNextHistoryUpdate = true;
        init.history.go(delta * -1); // Put the blocker into a blocked state

        updateBlocker(blockerKey, {
          state: "blocked",
          location: location,
          proceed: function proceed() {
            updateBlocker(blockerKey, {
              state: "proceeding",
              proceed: undefined,
              reset: undefined,
              location: location
            }); // Re-do the same POP navigation we just blocked

            init.history.go(delta);
          },
          reset: function reset() {
            deleteBlocker(blockerKey);
            updateState({
              blockers: new Map(router.state.blockers)
            });
          }
        });
        return;
      }
      return startNavigation(historyAction, location);
    }); // Kick off initial data load if needed.  Use Pop to avoid modifying history
    // Note we don't do any handling of lazy here.  For SPA's it'll get handled
    // in the normal navigation flow.  For SSR it's expected that lazy modules are
    // resolved prior to router creation since we can't go into a fallbackElement
    // UI for SSR'd apps

    if (!state.initialized) {
      startNavigation(Action.Pop, state.location);
    }
    return router;
  } // Clean up a router and it's side effects

  function dispose() {
    if (unlistenHistory) {
      unlistenHistory();
    }
    subscribers.clear();
    pendingNavigationController && pendingNavigationController.abort();
    state.fetchers.forEach(function (_, key) {
      return deleteFetcher(key);
    });
    state.blockers.forEach(function (_, key) {
      return deleteBlocker(key);
    });
  } // Subscribe to state updates for the router

  function subscribe(fn) {
    subscribers.add(fn);
    return function () {
      return subscribers.delete(fn);
    };
  } // Update our state and notify the calling context of the change

  function updateState(newState) {
    state = _extends({}, state, newState);
    subscribers.forEach(function (subscriber) {
      return subscriber(state);
    });
  } // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION
  // and setting state.[historyAction/location/matches] to the new route.
  // - Location is a required param
  // - Navigation will always be set to IDLE_NAVIGATION
  // - Can pass any other state in newState

  function completeNavigation(location, newState) {
    var _location$state, _location$state2;

    // Deduce if we're in a loading/actionReload state:
    // - We have committed actionData in the store
    // - The current navigation was a mutation submission
    // - We're past the submitting state and into the loading state
    // - The location being loaded is not the result of a redirect
    var isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;
    var actionData;
    if (newState.actionData) {
      if (Object.keys(newState.actionData).length > 0) {
        actionData = newState.actionData;
      } else {
        // Empty actionData -> clear prior actionData due to an action error
        actionData = null;
      }
    } else if (isActionReload) {
      // Keep the current data if we're wrapping up the action reload
      actionData = state.actionData;
    } else {
      // Clear actionData on any other completed navigations
      actionData = null;
    } // Always preserve any existing loaderData from re-used routes

    var loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData; // On a successful navigation we can assume we got through all blockers
    // so we can start fresh
    var _iterator2 = _createForOfIteratorHelper(blockerFunctions),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var _step2$value = _slicedToArray(_step2.value, 1),
          key = _step2$value[0];
        deleteBlocker(key);
      } // Always respect the user flag.  Otherwise don't reset on mutation
      // submission navigations unless they redirect
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    var preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;
    if (inFlightDataRoutes) {
      dataRoutes = inFlightDataRoutes;
      inFlightDataRoutes = undefined;
    }
    updateState(_extends({}, newState, {
      actionData: actionData,
      loaderData: loaderData,
      historyAction: pendingAction,
      location: location,
      initialized: true,
      navigation: IDLE_NAVIGATION,
      revalidation: "idle",
      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),
      preventScrollReset: preventScrollReset,
      blockers: new Map(state.blockers)
    }));
    if (isUninterruptedRevalidation) ;else if (pendingAction === Action.Pop) ;else if (pendingAction === Action.Push) {
      init.history.push(location, location.state);
    } else if (pendingAction === Action.Replace) {
      init.history.replace(location, location.state);
    } // Reset stateful navigation vars

    pendingAction = Action.Pop;
    pendingPreventScrollReset = false;
    isUninterruptedRevalidation = false;
    isRevalidationRequired = false;
    cancelledDeferredRoutes = [];
    cancelledFetcherLoads = [];
  } // Trigger a navigation event, which can either be a numerical POP or a PUSH
  // replace with an optional submission
  function navigate(_x2, _x3) {
    return _navigate.apply(this, arguments);
  } // Revalidate all current loaders.  If a navigation is in progress or if this
  // is interrupted by a navigation, allow this to "succeed" by calling all
  // loaders during the next loader round
  function _navigate() {
    _navigate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(to, opts) {
      var _normalizeNavigateOpt2, path, submission, error, currentLocation, nextLocation, userReplace, historyAction, preventScrollReset, blockerKey;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            if (!(typeof to === "number")) {
              _context2.next = 3;
              break;
            }
            init.history.go(to);
            return _context2.abrupt("return");
          case 3:
            _normalizeNavigateOpt2 = normalizeNavigateOptions(to, future, opts), path = _normalizeNavigateOpt2.path, submission = _normalizeNavigateOpt2.submission, error = _normalizeNavigateOpt2.error;
            currentLocation = state.location;
            nextLocation = createLocation(state.location, path, opts && opts.state); // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded
            // URL from window.location, so we need to encode it here so the behavior
            // remains the same as POP and non-data-router usages.  new URL() does all
            // the same encoding we'd get from a history.pushState/window.location read
            // without having to touch history
            nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));
            userReplace = opts && opts.replace != null ? opts.replace : undefined;
            historyAction = Action.Push;
            if (userReplace === true) {
              historyAction = Action.Replace;
            } else if (userReplace === false) ;else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {
              // By default on submissions to the current location we REPLACE so that
              // users don't have to double-click the back button to get to the prior
              // location.  If the user redirects to a different location from the
              // action/loader this will be ignored and the redirect will be a PUSH
              historyAction = Action.Replace;
            }
            preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === true : undefined;
            blockerKey = shouldBlockNavigation({
              currentLocation: currentLocation,
              nextLocation: nextLocation,
              historyAction: historyAction
            });
            if (!blockerKey) {
              _context2.next = 15;
              break;
            }
            // Put the blocker into a blocked state
            updateBlocker(blockerKey, {
              state: "blocked",
              location: nextLocation,
              proceed: function proceed() {
                updateBlocker(blockerKey, {
                  state: "proceeding",
                  proceed: undefined,
                  reset: undefined,
                  location: nextLocation
                }); // Send the same navigation through

                navigate(to, opts);
              },
              reset: function reset() {
                deleteBlocker(blockerKey);
                updateState({
                  blockers: new Map(state.blockers)
                });
              }
            });
            return _context2.abrupt("return");
          case 15:
            _context2.next = 17;
            return startNavigation(historyAction, nextLocation, {
              submission: submission,
              // Send through the formData serialization error if we have one so we can
              // render at the right error boundary after we match routes
              pendingError: error,
              preventScrollReset: preventScrollReset,
              replace: opts && opts.replace
            });
          case 17:
            return _context2.abrupt("return", _context2.sent);
          case 18:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    return _navigate.apply(this, arguments);
  }
  function revalidate() {
    interruptActiveLoads();
    updateState({
      revalidation: "loading"
    }); // If we're currently submitting an action, we don't need to start a new
    // navigation, we'll just let the follow up loader execution call all loaders

    if (state.navigation.state === "submitting") {
      return;
    } // If we're currently in an idle state, start a new navigation for the current
    // action/location and mark it as uninterrupted, which will skip the history
    // update in completeNavigation

    if (state.navigation.state === "idle") {
      startNavigation(state.historyAction, state.location, {
        startUninterruptedRevalidation: true
      });
      return;
    } // Otherwise, if we're currently in a loading state, just start a new
    // navigation to the navigation.location but do not trigger an uninterrupted
    // revalidation so that history correctly updates once the navigation completes

    startNavigation(pendingAction || state.historyAction, state.navigation.location, {
      overrideNavigation: state.navigation
    });
  } // Start a navigation to the given action/location.  Can optionally provide a
  // overrideNavigation which will override the normalLoad in the case of a redirect
  // navigation
  function startNavigation(_x4, _x5, _x6) {
    return _startNavigation.apply(this, arguments);
  } // Call the action matched by the leaf route for this navigation and handle
  // redirects/errors
  function _startNavigation() {
    _startNavigation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(historyAction, location, opts) {
      var routesToUse, loadingNavigation, matches, _error, _getShortCircuitMatch2, notFoundMatches, _route, request, pendingActionData, pendingError, actionOutput, navigation, _yield$handleLoaders, shortCircuited, loaderData, errors;
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            // Abort any in-progress navigations and start a new one. Unset any ongoing
            // uninterrupted revalidations unless told otherwise, since we want this
            // new navigation to update history normally
            pendingNavigationController && pendingNavigationController.abort();
            pendingNavigationController = null;
            pendingAction = historyAction;
            isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true; // Save the current scroll position every time we start a new navigation,
            // and track whether we should reset scroll on completion

            saveScrollPosition(state.location, state.matches);
            pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;
            routesToUse = inFlightDataRoutes || dataRoutes;
            loadingNavigation = opts && opts.overrideNavigation;
            matches = matchRoutes(routesToUse, location, init.basename); // Short circuit with a 404 on the root error boundary if we match nothing
            if (matches) {
              _context3.next = 15;
              break;
            }
            _error = getInternalRouterError(404, {
              pathname: location.pathname
            });
            _getShortCircuitMatch2 = getShortCircuitMatches(routesToUse), notFoundMatches = _getShortCircuitMatch2.matches, _route = _getShortCircuitMatch2.route; // Cancel all pending deferred on 404s since we don't keep any routes
            cancelActiveDeferreds();
            completeNavigation(location, {
              matches: notFoundMatches,
              loaderData: {},
              errors: _defineProperty({}, _route.id, _error)
            });
            return _context3.abrupt("return");
          case 15:
            if (!(isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod)))) {
              _context3.next = 18;
              break;
            }
            completeNavigation(location, {
              matches: matches
            });
            return _context3.abrupt("return");
          case 18:
            // Create a controller/Request for this navigation

            pendingNavigationController = new AbortController();
            request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);
            if (!(opts && opts.pendingError)) {
              _context3.next = 24;
              break;
            }
            // If we have a pendingError, it means the user attempted a GET submission
            // with binary FormData so assign here and skip to handleLoaders.  That
            // way we handle calling loaders above the boundary etc.  It's not really
            // different from an actionError in that sense.
            pendingError = _defineProperty({}, findNearestBoundary(matches).route.id, opts.pendingError);
            _context3.next = 35;
            break;
          case 24:
            if (!(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {
              _context3.next = 35;
              break;
            }
            _context3.next = 27;
            return handleAction(request, location, opts.submission, matches, {
              replace: opts.replace
            });
          case 27:
            actionOutput = _context3.sent;
            if (!actionOutput.shortCircuited) {
              _context3.next = 30;
              break;
            }
            return _context3.abrupt("return");
          case 30:
            pendingActionData = actionOutput.pendingActionData;
            pendingError = actionOutput.pendingActionError;
            navigation = _extends({
              state: "loading",
              location: location
            }, opts.submission);
            loadingNavigation = navigation; // Create a GET request for the loaders

            request = new Request(request.url, {
              signal: request.signal
            });
          case 35:
            _context3.next = 37;
            return handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);
          case 37:
            _yield$handleLoaders = _context3.sent;
            shortCircuited = _yield$handleLoaders.shortCircuited;
            loaderData = _yield$handleLoaders.loaderData;
            errors = _yield$handleLoaders.errors;
            if (!shortCircuited) {
              _context3.next = 43;
              break;
            }
            return _context3.abrupt("return");
          case 43:
            // Clean up now that the action/loaders have completed.  Don't clean up if
            // we short circuited because pendingNavigationController will have already
            // been assigned to a new controller for the next navigation

            pendingNavigationController = null;
            completeNavigation(location, _extends({
              matches: matches
            }, pendingActionData ? {
              actionData: pendingActionData
            } : {}, {
              loaderData: loaderData,
              errors: errors
            }));
          case 45:
          case "end":
            return _context3.stop();
        }
      }, _callee3);
    }));
    return _startNavigation.apply(this, arguments);
  }
  function handleAction(_x7, _x8, _x9, _x10, _x11) {
    return _handleAction.apply(this, arguments);
  } // Call all applicable loaders for the given matches, handling redirects,
  // errors, etc.
  function _handleAction() {
    _handleAction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request, location, submission, matches, opts) {
      var navigation, result, actionMatch, replace, boundaryMatch;
      return _regeneratorRuntime().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            interruptActiveLoads(); // Put us in a submitting state
            navigation = _extends({
              state: "submitting",
              location: location
            }, submission);
            updateState({
              navigation: navigation
            }); // Call our action and get the result
            actionMatch = getTargetMatch(matches, location);
            if (!(!actionMatch.route.action && !actionMatch.route.lazy)) {
              _context4.next = 8;
              break;
            }
            result = {
              type: ResultType.error,
              error: getInternalRouterError(405, {
                method: request.method,
                pathname: location.pathname,
                routeId: actionMatch.route.id
              })
            };
            _context4.next = 13;
            break;
          case 8:
            _context4.next = 10;
            return callLoaderOrAction("action", request, actionMatch, matches, manifest, detectErrorBoundary, router.basename);
          case 10:
            result = _context4.sent;
            if (!request.signal.aborted) {
              _context4.next = 13;
              break;
            }
            return _context4.abrupt("return", {
              shortCircuited: true
            });
          case 13:
            if (!isRedirectResult(result)) {
              _context4.next = 18;
              break;
            }
            if (opts && opts.replace != null) {
              replace = opts.replace;
            } else {
              // If the user didn't explicity indicate replace behavior, replace if
              // we redirected to the exact same location we're currently at to avoid
              // double back-buttons
              replace = result.location === state.location.pathname + state.location.search;
            }
            _context4.next = 17;
            return startRedirectNavigation(state, result, {
              submission: submission,
              replace: replace
            });
          case 17:
            return _context4.abrupt("return", {
              shortCircuited: true
            });
          case 18:
            if (!isErrorResult(result)) {
              _context4.next = 22;
              break;
            }
            // Store off the pending error - we use it to determine which loaders
            // to call and will commit it when we complete the navigation
            boundaryMatch = findNearestBoundary(matches, actionMatch.route.id); // By default, all submissions are REPLACE navigations, but if the
            // action threw an error that'll be rendered in an errorElement, we fall
            // back to PUSH so that the user can use the back button to get back to
            // the pre-submission form location to try again
            if ((opts && opts.replace) !== true) {
              pendingAction = Action.Push;
            }
            return _context4.abrupt("return", {
              // Send back an empty object we can use to clear out any prior actionData
              pendingActionData: {},
              pendingActionError: _defineProperty({}, boundaryMatch.route.id, result.error)
            });
          case 22:
            if (!isDeferredResult(result)) {
              _context4.next = 24;
              break;
            }
            throw getInternalRouterError(400, {
              type: "defer-action"
            });
          case 24:
            return _context4.abrupt("return", {
              pendingActionData: _defineProperty({}, actionMatch.route.id, result.data)
            });
          case 25:
          case "end":
            return _context4.stop();
        }
      }, _callee4);
    }));
    return _handleAction.apply(this, arguments);
  }
  function handleLoaders(_x12, _x13, _x14, _x15, _x16, _x17, _x18, _x19, _x20) {
    return _handleLoaders.apply(this, arguments);
  }
  function _handleLoaders() {
    _handleLoaders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {
      var loadingNavigation, navigation, activeSubmission, routesToUse, _getMatchesToLoad, _getMatchesToLoad2, matchesToLoad, revalidatingFetchers, actionData, _yield$callLoadersAnd, results, loaderResults, fetcherResults, redirect, _processLoaderData, loaderData, errors, didAbortFetchLoads;
      return _regeneratorRuntime().wrap(function _callee5$(_context5) {
        while (1) switch (_context5.prev = _context5.next) {
          case 0:
            // Figure out the right navigation we want to use for data loading
            loadingNavigation = overrideNavigation;
            if (!loadingNavigation) {
              navigation = _extends({
                state: "loading",
                location: location,
                formMethod: undefined,
                formAction: undefined,
                formEncType: undefined,
                formData: undefined
              }, submission);
              loadingNavigation = navigation;
            } // If this was a redirect from an action we don't have a "submission" but
            // we have it on the loading navigation so use that if available
            activeSubmission = submission || fetcherSubmission ? submission || fetcherSubmission : loadingNavigation.formMethod && loadingNavigation.formAction && loadingNavigation.formData && loadingNavigation.formEncType ? {
              formMethod: loadingNavigation.formMethod,
              formAction: loadingNavigation.formAction,
              formData: loadingNavigation.formData,
              formEncType: loadingNavigation.formEncType
            } : undefined;
            routesToUse = inFlightDataRoutes || dataRoutes;
            _getMatchesToLoad = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, init.basename, pendingActionData, pendingError), _getMatchesToLoad2 = _slicedToArray(_getMatchesToLoad, 2), matchesToLoad = _getMatchesToLoad2[0], revalidatingFetchers = _getMatchesToLoad2[1]; // Cancel pending deferreds for no-longer-matched routes or routes we're
            // about to reload.  Note that if this is an action reload we would have
            // already cancelled all pending deferreds so this would be a no-op
            cancelActiveDeferreds(function (routeId) {
              return !(matches && matches.some(function (m) {
                return m.route.id === routeId;
              })) || matchesToLoad && matchesToLoad.some(function (m) {
                return m.route.id === routeId;
              });
            }); // Short circuit if we have no loaders to run
            if (!(matchesToLoad.length === 0 && revalidatingFetchers.length === 0)) {
              _context5.next = 9;
              break;
            }
            completeNavigation(location, _extends({
              matches: matches,
              loaderData: {},
              // Commit pending error if we're short circuiting
              errors: pendingError || null
            }, pendingActionData ? {
              actionData: pendingActionData
            } : {}));
            return _context5.abrupt("return", {
              shortCircuited: true
            });
          case 9:
            // If this is an uninterrupted revalidation, we remain in our current idle
            // state.  If not, we need to switch to our loading state and load data,
            // preserving any new action data or existing action data (in the case of
            // a revalidation interrupting an actionReload)

            if (!isUninterruptedRevalidation) {
              revalidatingFetchers.forEach(function (rf) {
                var fetcher = state.fetchers.get(rf.key);
                var revalidatingFetcher = {
                  state: "loading",
                  data: fetcher && fetcher.data,
                  formMethod: undefined,
                  formAction: undefined,
                  formEncType: undefined,
                  formData: undefined,
                  " _hasFetcherDoneAnything ": true
                };
                state.fetchers.set(rf.key, revalidatingFetcher);
              });
              actionData = pendingActionData || state.actionData;
              updateState(_extends({
                navigation: loadingNavigation
              }, actionData ? Object.keys(actionData).length === 0 ? {
                actionData: null
              } : {
                actionData: actionData
              } : {}, revalidatingFetchers.length > 0 ? {
                fetchers: new Map(state.fetchers)
              } : {}));
            }
            pendingNavigationLoadId = ++incrementingLoadId;
            revalidatingFetchers.forEach(function (rf) {
              return fetchControllers.set(rf.key, pendingNavigationController);
            });
            _context5.next = 14;
            return callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);
          case 14:
            _yield$callLoadersAnd = _context5.sent;
            results = _yield$callLoadersAnd.results;
            loaderResults = _yield$callLoadersAnd.loaderResults;
            fetcherResults = _yield$callLoadersAnd.fetcherResults;
            if (!request.signal.aborted) {
              _context5.next = 20;
              break;
            }
            return _context5.abrupt("return", {
              shortCircuited: true
            });
          case 20:
            // Clean up _after_ loaders have completed.  Don't clean up if we short
            // circuited because fetchControllers would have been aborted and
            // reassigned to new controllers for the next navigation

            revalidatingFetchers.forEach(function (rf) {
              return fetchControllers.delete(rf.key);
            }); // If any loaders returned a redirect Response, start a new REPLACE navigation
            redirect = findRedirect(results);
            if (!redirect) {
              _context5.next = 26;
              break;
            }
            _context5.next = 25;
            return startRedirectNavigation(state, redirect, {
              replace: replace
            });
          case 25:
            return _context5.abrupt("return", {
              shortCircuited: true
            });
          case 26:
            // Process and commit output from loaders
            _processLoaderData = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds), loaderData = _processLoaderData.loaderData, errors = _processLoaderData.errors; // Wire up subscribers to update loaderData as promises settle
            activeDeferreds.forEach(function (deferredData, routeId) {
              deferredData.subscribe(function (aborted) {
                // Note: No need to updateState here since the TrackedPromise on
                // loaderData is stable across resolve/reject
                // Remove this instance if we were aborted or if promises have settled
                if (aborted || deferredData.done) {
                  activeDeferreds.delete(routeId);
                }
              });
            });
            markFetchRedirectsDone();
            didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);
            return _context5.abrupt("return", _extends({
              loaderData: loaderData,
              errors: errors
            }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {
              fetchers: new Map(state.fetchers)
            } : {}));
          case 31:
          case "end":
            return _context5.stop();
        }
      }, _callee5);
    }));
    return _handleLoaders.apply(this, arguments);
  }
  function getFetcher(key) {
    return state.fetchers.get(key) || IDLE_FETCHER;
  } // Trigger a fetcher load/submit for the given fetcher key

  function fetch(key, routeId, href, opts) {
    if (isServer) {
      throw new Error("router.fetch() was called during the server render, but it shouldn't be. " + "You are likely calling a useFetcher() method in the body of your component. " + "Try moving it to a useEffect or a callback.");
    }
    if (fetchControllers.has(key)) abortFetcher(key);
    var routesToUse = inFlightDataRoutes || dataRoutes;
    var matches = matchRoutes(routesToUse, href, init.basename);
    if (!matches) {
      setFetcherError(key, routeId, getInternalRouterError(404, {
        pathname: href
      }));
      return;
    }
    var _normalizeNavigateOpt = normalizeNavigateOptions(href, future, opts, true),
      path = _normalizeNavigateOpt.path,
      submission = _normalizeNavigateOpt.submission;
    var match = getTargetMatch(matches, path);
    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;
    if (submission && isMutationMethod(submission.formMethod)) {
      handleFetcherAction(key, routeId, path, match, matches, submission);
      return;
    } // Store off the match so we can call it's shouldRevalidate on subsequent
    // revalidations

    fetchLoadMatches.set(key, {
      routeId: routeId,
      path: path
    });
    handleFetcherLoader(key, routeId, path, match, matches, submission);
  } // Call the action for the matched fetcher.submit(), and then handle redirects,
  // errors, and revalidation
  function handleFetcherAction(_x21, _x22, _x23, _x24, _x25, _x26) {
    return _handleFetcherAction.apply(this, arguments);
  } // Call the matched loader for fetcher.load(), handling redirects, errors, etc.
  function _handleFetcherAction() {
    _handleFetcherAction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(key, routeId, path, match, requestMatches, submission) {
      var _error2, existingFetcher, fetcher, abortController, fetchRequest, actionResult, loadingFetcher, nextLocation, revalidationRequest, routesToUse, matches, loadId, loadFetcher, _getMatchesToLoad3, _getMatchesToLoad4, matchesToLoad, revalidatingFetchers, _yield$callLoadersAnd2, results, loaderResults, fetcherResults, redirect, _processLoaderData2, loaderData, errors, doneFetcher, didAbortFetchLoads;
      return _regeneratorRuntime().wrap(function _callee6$(_context6) {
        while (1) switch (_context6.prev = _context6.next) {
          case 0:
            interruptActiveLoads();
            fetchLoadMatches.delete(key);
            if (!(!match.route.action && !match.route.lazy)) {
              _context6.next = 6;
              break;
            }
            _error2 = getInternalRouterError(405, {
              method: submission.formMethod,
              pathname: path,
              routeId: routeId
            });
            setFetcherError(key, routeId, _error2);
            return _context6.abrupt("return");
          case 6:
            // Put this fetcher into it's submitting state
            existingFetcher = state.fetchers.get(key);
            fetcher = _extends({
              state: "submitting"
            }, submission, {
              data: existingFetcher && existingFetcher.data,
              " _hasFetcherDoneAnything ": true
            });
            state.fetchers.set(key, fetcher);
            updateState({
              fetchers: new Map(state.fetchers)
            }); // Call the action for the fetcher
            abortController = new AbortController();
            fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);
            fetchControllers.set(key, abortController);
            _context6.next = 15;
            return callLoaderOrAction("action", fetchRequest, match, requestMatches, manifest, detectErrorBoundary, router.basename);
          case 15:
            actionResult = _context6.sent;
            if (!fetchRequest.signal.aborted) {
              _context6.next = 19;
              break;
            }
            // We can delete this so long as we weren't aborted by ou our own fetcher
            // re-submit which would have put _new_ controller is in fetchControllers
            if (fetchControllers.get(key) === abortController) {
              fetchControllers.delete(key);
            }
            return _context6.abrupt("return");
          case 19:
            if (!isRedirectResult(actionResult)) {
              _context6.next = 26;
              break;
            }
            fetchControllers.delete(key);
            fetchRedirectIds.add(key);
            loadingFetcher = _extends({
              state: "loading"
            }, submission, {
              data: undefined,
              " _hasFetcherDoneAnything ": true
            });
            state.fetchers.set(key, loadingFetcher);
            updateState({
              fetchers: new Map(state.fetchers)
            });
            return _context6.abrupt("return", startRedirectNavigation(state, actionResult, {
              submission: submission,
              isFetchActionRedirect: true
            }));
          case 26:
            if (!isErrorResult(actionResult)) {
              _context6.next = 29;
              break;
            }
            setFetcherError(key, routeId, actionResult.error);
            return _context6.abrupt("return");
          case 29:
            if (!isDeferredResult(actionResult)) {
              _context6.next = 31;
              break;
            }
            throw getInternalRouterError(400, {
              type: "defer-action"
            });
          case 31:
            // Start the data load for current matches, or the next location if we're
            // in the middle of a navigation
            nextLocation = state.navigation.location || state.location;
            revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);
            routesToUse = inFlightDataRoutes || dataRoutes;
            matches = state.navigation.state !== "idle" ? matchRoutes(routesToUse, state.navigation.location, init.basename) : state.matches;
            invariant(matches, "Didn't find any matches after fetcher action");
            loadId = ++incrementingLoadId;
            fetchReloadIds.set(key, loadId);
            loadFetcher = _extends({
              state: "loading",
              data: actionResult.data
            }, submission, {
              " _hasFetcherDoneAnything ": true
            });
            state.fetchers.set(key, loadFetcher);
            _getMatchesToLoad3 = getMatchesToLoad(init.history, state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, init.basename, _defineProperty({}, match.route.id, actionResult.data), undefined // No need to send through errors since we short circuit above
            ), _getMatchesToLoad4 = _slicedToArray(_getMatchesToLoad3, 2), matchesToLoad = _getMatchesToLoad4[0], revalidatingFetchers = _getMatchesToLoad4[1]; // Put all revalidating fetchers into the loading state, except for the
            // current fetcher which we want to keep in it's current loading state which
            // contains it's action submission info + action data
            revalidatingFetchers.filter(function (rf) {
              return rf.key !== key;
            }).forEach(function (rf) {
              var staleKey = rf.key;
              var existingFetcher = state.fetchers.get(staleKey);
              var revalidatingFetcher = {
                state: "loading",
                data: existingFetcher && existingFetcher.data,
                formMethod: undefined,
                formAction: undefined,
                formEncType: undefined,
                formData: undefined,
                " _hasFetcherDoneAnything ": true
              };
              state.fetchers.set(staleKey, revalidatingFetcher);
              fetchControllers.set(staleKey, abortController);
            });
            updateState({
              fetchers: new Map(state.fetchers)
            });
            _context6.next = 45;
            return callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);
          case 45:
            _yield$callLoadersAnd2 = _context6.sent;
            results = _yield$callLoadersAnd2.results;
            loaderResults = _yield$callLoadersAnd2.loaderResults;
            fetcherResults = _yield$callLoadersAnd2.fetcherResults;
            if (!abortController.signal.aborted) {
              _context6.next = 51;
              break;
            }
            return _context6.abrupt("return");
          case 51:
            fetchReloadIds.delete(key);
            fetchControllers.delete(key);
            revalidatingFetchers.forEach(function (r) {
              return fetchControllers.delete(r.key);
            });
            redirect = findRedirect(results);
            if (!redirect) {
              _context6.next = 57;
              break;
            }
            return _context6.abrupt("return", startRedirectNavigation(state, redirect));
          case 57:
            // Process and commit output from loaders
            _processLoaderData2 = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds), loaderData = _processLoaderData2.loaderData, errors = _processLoaderData2.errors;
            doneFetcher = {
              state: "idle",
              data: actionResult.data,
              formMethod: undefined,
              formAction: undefined,
              formEncType: undefined,
              formData: undefined,
              " _hasFetcherDoneAnything ": true
            };
            state.fetchers.set(key, doneFetcher);
            didAbortFetchLoads = abortStaleFetchLoads(loadId); // If we are currently in a navigation loading state and this fetcher is
            // more recent than the navigation, we want the newer data so abort the
            // navigation and complete it with the fetcher data
            if (state.navigation.state === "loading" && loadId > pendingNavigationLoadId) {
              invariant(pendingAction, "Expected pending action");
              pendingNavigationController && pendingNavigationController.abort();
              completeNavigation(state.navigation.location, {
                matches: matches,
                loaderData: loaderData,
                errors: errors,
                fetchers: new Map(state.fetchers)
              });
            } else {
              // otherwise just update with the fetcher data, preserving any existing
              // loaderData for loaders that did not need to reload.  We have to
              // manually merge here since we aren't going through completeNavigation
              updateState(_extends({
                errors: errors,
                loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)
              }, didAbortFetchLoads ? {
                fetchers: new Map(state.fetchers)
              } : {}));
              isRevalidationRequired = false;
            }
          case 62:
          case "end":
            return _context6.stop();
        }
      }, _callee6);
    }));
    return _handleFetcherAction.apply(this, arguments);
  }
  function handleFetcherLoader(_x27, _x28, _x29, _x30, _x31, _x32) {
    return _handleFetcherLoader.apply(this, arguments);
  }
  /**
   * Utility function to handle redirects returned from an action or loader.
   * Normally, a redirect "replaces" the navigation that triggered it.  So, for
   * example:
   *
   *  - user is on /a
   *  - user clicks a link to /b
   *  - loader for /b redirects to /c
   *
   * In a non-JS app the browser would track the in-flight navigation to /b and
   * then replace it with /c when it encountered the redirect response.  In
   * the end it would only ever update the URL bar with /c.
   *
   * In client-side routing using pushState/replaceState, we aim to emulate
   * this behavior and we also do not update history until the end of the
   * navigation (including processed redirects).  This means that we never
   * actually touch history until we've processed redirects, so we just use
   * the history action from the original navigation (PUSH or REPLACE).
   */
  function _handleFetcherLoader() {
    _handleFetcherLoader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(key, routeId, path, match, matches, submission) {
      var existingFetcher, loadingFetcher, abortController, fetchRequest, result, boundaryMatch, doneFetcher;
      return _regeneratorRuntime().wrap(function _callee7$(_context7) {
        while (1) switch (_context7.prev = _context7.next) {
          case 0:
            existingFetcher = state.fetchers.get(key); // Put this fetcher into it's loading state
            loadingFetcher = _extends({
              state: "loading",
              formMethod: undefined,
              formAction: undefined,
              formEncType: undefined,
              formData: undefined
            }, submission, {
              data: existingFetcher && existingFetcher.data,
              " _hasFetcherDoneAnything ": true
            });
            state.fetchers.set(key, loadingFetcher);
            updateState({
              fetchers: new Map(state.fetchers)
            }); // Call the loader for this fetcher route match
            abortController = new AbortController();
            fetchRequest = createClientSideRequest(init.history, path, abortController.signal);
            fetchControllers.set(key, abortController);
            _context7.next = 9;
            return callLoaderOrAction("loader", fetchRequest, match, matches, manifest, detectErrorBoundary, router.basename);
          case 9:
            result = _context7.sent;
            if (!isDeferredResult(result)) {
              _context7.next = 17;
              break;
            }
            _context7.next = 13;
            return resolveDeferredData(result, fetchRequest.signal, true);
          case 13:
            _context7.t0 = _context7.sent;
            if (_context7.t0) {
              _context7.next = 16;
              break;
            }
            _context7.t0 = result;
          case 16:
            result = _context7.t0;
          case 17:
            // We can delete this so long as we weren't aborted by ou our own fetcher
            // re-load which would have put _new_ controller is in fetchControllers

            if (fetchControllers.get(key) === abortController) {
              fetchControllers.delete(key);
            }
            if (!fetchRequest.signal.aborted) {
              _context7.next = 20;
              break;
            }
            return _context7.abrupt("return");
          case 20:
            if (!isRedirectResult(result)) {
              _context7.next = 24;
              break;
            }
            _context7.next = 23;
            return startRedirectNavigation(state, result);
          case 23:
            return _context7.abrupt("return");
          case 24:
            if (!isErrorResult(result)) {
              _context7.next = 29;
              break;
            }
            boundaryMatch = findNearestBoundary(state.matches, routeId);
            state.fetchers.delete(key); // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -
            // do we need to behave any differently with our non-redirect errors?
            // What if it was a non-redirect Response?

            updateState({
              fetchers: new Map(state.fetchers),
              errors: _defineProperty({}, boundaryMatch.route.id, result.error)
            });
            return _context7.abrupt("return");
          case 29:
            invariant(!isDeferredResult(result), "Unhandled fetcher deferred data"); // Put the fetcher back into an idle state
            doneFetcher = {
              state: "idle",
              data: result.data,
              formMethod: undefined,
              formAction: undefined,
              formEncType: undefined,
              formData: undefined,
              " _hasFetcherDoneAnything ": true
            };
            state.fetchers.set(key, doneFetcher);
            updateState({
              fetchers: new Map(state.fetchers)
            });
          case 33:
          case "end":
            return _context7.stop();
        }
      }, _callee7);
    }));
    return _handleFetcherLoader.apply(this, arguments);
  }
  function startRedirectNavigation(_x33, _x34, _x35) {
    return _startRedirectNavigation.apply(this, arguments);
  }
  function _startRedirectNavigation() {
    _startRedirectNavigation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(state, redirect, _temp) {
      var _window, _ref6, submission, replace, isFetchActionRedirect, redirectLocation, url, isDifferentBasename, redirectHistoryAction, _state$navigation, formMethod, formAction, formEncType, formData;
      return _regeneratorRuntime().wrap(function _callee8$(_context8) {
        while (1) switch (_context8.prev = _context8.next) {
          case 0:
            _ref6 = _temp === void 0 ? {} : _temp, submission = _ref6.submission, replace = _ref6.replace, isFetchActionRedirect = _ref6.isFetchActionRedirect;
            if (redirect.revalidate) {
              isRevalidationRequired = true;
            }
            redirectLocation = createLocation(state.location, redirect.location,
            // TODO: This can be removed once we get rid of useTransition in Remix v2
            _extends({
              _isRedirect: true
            }, isFetchActionRedirect ? {
              _isFetchActionRedirect: true
            } : {}));
            invariant(redirectLocation, "Expected a location on the redirect navigation"); // Check if this an absolute external redirect that goes to a new origin
            if (!(ABSOLUTE_URL_REGEX.test(redirect.location) && isBrowser && typeof ((_window = window) == null ? void 0 : _window.location) !== "undefined")) {
              _context8.next = 10;
              break;
            }
            url = init.history.createURL(redirect.location);
            isDifferentBasename = stripBasename(url.pathname, init.basename || "/") == null;
            if (!(window.location.origin !== url.origin || isDifferentBasename)) {
              _context8.next = 10;
              break;
            }
            if (replace) {
              window.location.replace(redirect.location);
            } else {
              window.location.assign(redirect.location);
            }
            return _context8.abrupt("return");
          case 10:
            // There's no need to abort on redirects, since we don't detect the
            // redirect until the action/loaders have settled

            pendingNavigationController = null;
            redirectHistoryAction = replace === true ? Action.Replace : Action.Push; // Use the incoming submission if provided, fallback on the active one in
            // state.navigation
            _state$navigation = state.navigation, formMethod = _state$navigation.formMethod, formAction = _state$navigation.formAction, formEncType = _state$navigation.formEncType, formData = _state$navigation.formData;
            if (!submission && formMethod && formAction && formData && formEncType) {
              submission = {
                formMethod: formMethod,
                formAction: formAction,
                formEncType: formEncType,
                formData: formData
              };
            } // If this was a 307/308 submission we want to preserve the HTTP method and
            // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the
            // redirected location
            if (!(redirectPreserveMethodStatusCodes.has(redirect.status) && submission && isMutationMethod(submission.formMethod))) {
              _context8.next = 19;
              break;
            }
            _context8.next = 17;
            return startNavigation(redirectHistoryAction, redirectLocation, {
              submission: _extends({}, submission, {
                formAction: redirect.location
              }),
              // Preserve this flag across redirects
              preventScrollReset: pendingPreventScrollReset
            });
          case 17:
            _context8.next = 26;
            break;
          case 19:
            if (!isFetchActionRedirect) {
              _context8.next = 24;
              break;
            }
            _context8.next = 22;
            return startNavigation(redirectHistoryAction, redirectLocation, {
              overrideNavigation: {
                state: "loading",
                location: redirectLocation,
                formMethod: undefined,
                formAction: undefined,
                formEncType: undefined,
                formData: undefined
              },
              fetcherSubmission: submission,
              // Preserve this flag across redirects
              preventScrollReset: pendingPreventScrollReset
            });
          case 22:
            _context8.next = 26;
            break;
          case 24:
            _context8.next = 26;
            return startNavigation(redirectHistoryAction, redirectLocation, {
              overrideNavigation: {
                state: "loading",
                location: redirectLocation,
                formMethod: submission ? submission.formMethod : undefined,
                formAction: submission ? submission.formAction : undefined,
                formEncType: submission ? submission.formEncType : undefined,
                formData: submission ? submission.formData : undefined
              },
              // Preserve this flag across redirects
              preventScrollReset: pendingPreventScrollReset
            });
          case 26:
          case "end":
            return _context8.stop();
        }
      }, _callee8);
    }));
    return _startRedirectNavigation.apply(this, arguments);
  }
  function callLoadersAndMaybeResolveData(_x36, _x37, _x38, _x39, _x40) {
    return _callLoadersAndMaybeResolveData.apply(this, arguments);
  }
  function _callLoadersAndMaybeResolveData() {
    _callLoadersAndMaybeResolveData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {
      var results, loaderResults, fetcherResults;
      return _regeneratorRuntime().wrap(function _callee9$(_context9) {
        while (1) switch (_context9.prev = _context9.next) {
          case 0:
            _context9.next = 2;
            return Promise.all([].concat(_toConsumableArray(matchesToLoad.map(function (match) {
              return callLoaderOrAction("loader", request, match, matches, manifest, detectErrorBoundary, router.basename);
            })), _toConsumableArray(fetchersToLoad.map(function (f) {
              if (f.matches && f.match) {
                return callLoaderOrAction("loader", createClientSideRequest(init.history, f.path, request.signal), f.match, f.matches, manifest, detectErrorBoundary, router.basename);
              } else {
                var _error3 = {
                  type: ResultType.error,
                  error: getInternalRouterError(404, {
                    pathname: f.path
                  })
                };
                return _error3;
              }
            }))));
          case 2:
            results = _context9.sent;
            loaderResults = results.slice(0, matchesToLoad.length);
            fetcherResults = results.slice(matchesToLoad.length);
            _context9.next = 7;
            return Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, request.signal, false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(function (f) {
              return f.match;
            }), fetcherResults, request.signal, true)]);
          case 7:
            return _context9.abrupt("return", {
              results: results,
              loaderResults: loaderResults,
              fetcherResults: fetcherResults
            });
          case 8:
          case "end":
            return _context9.stop();
        }
      }, _callee9);
    }));
    return _callLoadersAndMaybeResolveData.apply(this, arguments);
  }
  function interruptActiveLoads() {
    var _cancelledDeferredRou;
    // Every interruption triggers a revalidation
    isRevalidationRequired = true; // Cancel pending route-level deferreds and mark cancelled routes for
    // revalidation

    (_cancelledDeferredRou = cancelledDeferredRoutes).push.apply(_cancelledDeferredRou, _toConsumableArray(cancelActiveDeferreds())); // Abort in-flight fetcher loads

    fetchLoadMatches.forEach(function (_, key) {
      if (fetchControllers.has(key)) {
        cancelledFetcherLoads.push(key);
        abortFetcher(key);
      }
    });
  }
  function setFetcherError(key, routeId, error) {
    var boundaryMatch = findNearestBoundary(state.matches, routeId);
    deleteFetcher(key);
    updateState({
      errors: _defineProperty({}, boundaryMatch.route.id, error),
      fetchers: new Map(state.fetchers)
    });
  }
  function deleteFetcher(key) {
    if (fetchControllers.has(key)) abortFetcher(key);
    fetchLoadMatches.delete(key);
    fetchReloadIds.delete(key);
    fetchRedirectIds.delete(key);
    state.fetchers.delete(key);
  }
  function abortFetcher(key) {
    var controller = fetchControllers.get(key);
    invariant(controller, "Expected fetch controller: " + key);
    controller.abort();
    fetchControllers.delete(key);
  }
  function markFetchersDone(keys) {
    var _iterator3 = _createForOfIteratorHelper(keys),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var key = _step3.value;
        var fetcher = getFetcher(key);
        var doneFetcher = {
          state: "idle",
          data: fetcher.data,
          formMethod: undefined,
          formAction: undefined,
          formEncType: undefined,
          formData: undefined,
          " _hasFetcherDoneAnything ": true
        };
        state.fetchers.set(key, doneFetcher);
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
  }
  function markFetchRedirectsDone() {
    var doneKeys = [];
    var _iterator4 = _createForOfIteratorHelper(fetchRedirectIds),
      _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var key = _step4.value;
        var fetcher = state.fetchers.get(key);
        invariant(fetcher, "Expected fetcher: " + key);
        if (fetcher.state === "loading") {
          fetchRedirectIds.delete(key);
          doneKeys.push(key);
        }
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
    markFetchersDone(doneKeys);
  }
  function abortStaleFetchLoads(landedId) {
    var yeetedKeys = [];
    var _iterator5 = _createForOfIteratorHelper(fetchReloadIds),
      _step5;
    try {
      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
        var _step5$value = _slicedToArray(_step5.value, 2),
          key = _step5$value[0],
          id = _step5$value[1];
        if (id < landedId) {
          var fetcher = state.fetchers.get(key);
          invariant(fetcher, "Expected fetcher: " + key);
          if (fetcher.state === "loading") {
            abortFetcher(key);
            fetchReloadIds.delete(key);
            yeetedKeys.push(key);
          }
        }
      }
    } catch (err) {
      _iterator5.e(err);
    } finally {
      _iterator5.f();
    }
    markFetchersDone(yeetedKeys);
    return yeetedKeys.length > 0;
  }
  function getBlocker(key, fn) {
    var blocker = state.blockers.get(key) || IDLE_BLOCKER;
    if (blockerFunctions.get(key) !== fn) {
      blockerFunctions.set(key, fn);
    }
    return blocker;
  }
  function deleteBlocker(key) {
    state.blockers.delete(key);
    blockerFunctions.delete(key);
  } // Utility function to update blockers, ensuring valid state transitions

  function updateBlocker(key, newBlocker) {
    var blocker = state.blockers.get(key) || IDLE_BLOCKER; // Poor mans state machine :)
    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM

    invariant(blocker.state === "unblocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "proceeding" || blocker.state === "blocked" && newBlocker.state === "unblocked" || blocker.state === "proceeding" && newBlocker.state === "unblocked", "Invalid blocker state transition: " + blocker.state + " -> " + newBlocker.state);
    state.blockers.set(key, newBlocker);
    updateState({
      blockers: new Map(state.blockers)
    });
  }
  function shouldBlockNavigation(_ref2) {
    var currentLocation = _ref2.currentLocation,
      nextLocation = _ref2.nextLocation,
      historyAction = _ref2.historyAction;
    if (blockerFunctions.size === 0) {
      return;
    } // We ony support a single active blocker at the moment since we don't have
    // any compelling use cases for multi-blocker yet

    if (blockerFunctions.size > 1) {
      warning(false, "A router only supports one blocker at a time");
    }
    var entries = Array.from(blockerFunctions.entries());
    var _entries = _slicedToArray(entries[entries.length - 1], 2),
      blockerKey = _entries[0],
      blockerFunction = _entries[1];
    var blocker = state.blockers.get(blockerKey);
    if (blocker && blocker.state === "proceeding") {
      // If the blocker is currently proceeding, we don't need to re-check
      // it and can let this navigation continue
      return;
    } // At this point, we know we're unblocked/blocked so we need to check the
    // user-provided blocker function

    if (blockerFunction({
      currentLocation: currentLocation,
      nextLocation: nextLocation,
      historyAction: historyAction
    })) {
      return blockerKey;
    }
  }
  function cancelActiveDeferreds(predicate) {
    var cancelledRouteIds = [];
    activeDeferreds.forEach(function (dfd, routeId) {
      if (!predicate || predicate(routeId)) {
        // Cancel the deferred - but do not remove from activeDeferreds here -
        // we rely on the subscribers to do that so our tests can assert proper
        // cleanup via _internalActiveDeferreds
        dfd.cancel();
        cancelledRouteIds.push(routeId);
        activeDeferreds.delete(routeId);
      }
    });
    return cancelledRouteIds;
  } // Opt in to capturing and reporting scroll positions during navigations,
  // used by the <ScrollRestoration> component

  function enableScrollRestoration(positions, getPosition, getKey) {
    savedScrollPositions = positions;
    getScrollPosition = getPosition;
    getScrollRestorationKey = getKey || function (location) {
      return location.key;
    }; // Perform initial hydration scroll restoration, since we miss the boat on
    // the initial updateState() because we've not yet rendered <ScrollRestoration/>
    // and therefore have no savedScrollPositions available

    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {
      initialScrollRestored = true;
      var y = getSavedScrollPosition(state.location, state.matches);
      if (y != null) {
        updateState({
          restoreScrollPosition: y
        });
      }
    }
    return function () {
      savedScrollPositions = null;
      getScrollPosition = null;
      getScrollRestorationKey = null;
    };
  }
  function saveScrollPosition(location, matches) {
    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {
      var userMatches = matches.map(function (m) {
        return createUseMatchesMatch(m, state.loaderData);
      });
      var key = getScrollRestorationKey(location, userMatches) || location.key;
      savedScrollPositions[key] = getScrollPosition();
    }
  }
  function getSavedScrollPosition(location, matches) {
    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {
      var userMatches = matches.map(function (m) {
        return createUseMatchesMatch(m, state.loaderData);
      });
      var key = getScrollRestorationKey(location, userMatches) || location.key;
      var y = savedScrollPositions[key];
      if (typeof y === "number") {
        return y;
      }
    }
    return null;
  }
  function _internalSetRoutes(newRoutes) {
    inFlightDataRoutes = newRoutes;
  }
  router = {
    get basename() {
      return init.basename;
    },
    get state() {
      return state;
    },
    get routes() {
      return dataRoutes;
    },
    initialize: initialize,
    subscribe: subscribe,
    enableScrollRestoration: enableScrollRestoration,
    navigate: navigate,
    fetch: fetch,
    revalidate: revalidate,
    // Passthrough to history-aware createHref used by useHref so we get proper
    // hash-aware URLs in DOM paths
    createHref: function createHref(to) {
      return init.history.createHref(to);
    },
    encodeLocation: function encodeLocation(to) {
      return init.history.encodeLocation(to);
    },
    getFetcher: getFetcher,
    deleteFetcher: deleteFetcher,
    dispose: dispose,
    getBlocker: getBlocker,
    deleteBlocker: deleteBlocker,
    _internalFetchControllers: fetchControllers,
    _internalActiveDeferreds: activeDeferreds,
    // TODO: Remove setRoutes, it's temporary to avoid dealing with
    // updating the tree while validating the update algorithm.
    _internalSetRoutes: _internalSetRoutes
  };
  return router;
} //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region createStaticHandler
////////////////////////////////////////////////////////////////////////////////

var UNSAFE_DEFERRED_SYMBOL = Symbol("deferred");
function createStaticHandler(routes, opts) {
  invariant(routes.length > 0, "You must provide a non-empty routes array to createStaticHandler");
  var manifest = {};
  var detectErrorBoundary = (opts == null ? void 0 : opts.detectErrorBoundary) || defaultDetectErrorBoundary;
  var dataRoutes = convertRoutesToDataRoutes(routes, detectErrorBoundary, undefined, manifest);
  var basename = (opts ? opts.basename : null) || "/";
  /**
   * The query() method is intended for document requests, in which we want to
   * call an optional action and potentially multiple loaders for all nested
   * routes.  It returns a StaticHandlerContext object, which is very similar
   * to the router state (location, loaderData, actionData, errors, etc.) and
   * also adds SSR-specific information such as the statusCode and headers
   * from action/loaders Responses.
   *
   * It _should_ never throw and should report all errors through the
   * returned context.errors object, properly associating errors to their error
   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be
   * used to emulate React error boundaries during SSr by performing a second
   * pass only down to the boundaryId.
   *
   * The one exception where we do not return a StaticHandlerContext is when a
   * redirect response is returned or thrown from any action/loader.  We
   * propagate that out and return the raw Response so the HTTP server can
   * return it directly.
   */
  function query(_x41, _x42) {
    return _query.apply(this, arguments);
  }
  /**
   * The queryRoute() method is intended for targeted route requests, either
   * for fetch ?_data requests or resource route requests.  In this case, we
   * are only ever calling a single action or loader, and we are returning the
   * returned value directly.  In most cases, this will be a Response returned
   * from the action/loader, but it may be a primitive or other value as well -
   * and in such cases the calling context should handle that accordingly.
   *
   * We do respect the throw/return differentiation, so if an action/loader
   * throws, then this method will throw the value.  This is important so we
   * can do proper boundary identification in Remix where a thrown Response
   * must go to the Catch Boundary but a returned Response is happy-path.
   *
   * One thing to note is that any Router-initiated Errors that make sense
   * to associate with a status code will be thrown as an ErrorResponse
   * instance which include the raw Error, such that the calling context can
   * serialize the error as they see fit while including the proper response
   * code.  Examples here are 404 and 405 errors that occur prior to reaching
   * any user-defined loaders.
   */
  function _query() {
    _query = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(request, _temp2) {
      var _ref7, requestContext, url, method, location, matches, error, _getShortCircuitMatch3, methodNotAllowedMatches, route, _error4, _getShortCircuitMatch4, notFoundMatches, _route2, result;
      return _regeneratorRuntime().wrap(function _callee10$(_context10) {
        while (1) switch (_context10.prev = _context10.next) {
          case 0:
            _ref7 = _temp2 === void 0 ? {} : _temp2, requestContext = _ref7.requestContext;
            url = new URL(request.url);
            method = request.method;
            location = createLocation("", router_createPath(url), null, "default");
            matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't
            if (!(!isValidMethod(method) && method !== "HEAD")) {
              _context10.next = 11;
              break;
            }
            error = getInternalRouterError(405, {
              method: method
            });
            _getShortCircuitMatch3 = getShortCircuitMatches(dataRoutes), methodNotAllowedMatches = _getShortCircuitMatch3.matches, route = _getShortCircuitMatch3.route;
            return _context10.abrupt("return", {
              basename: basename,
              location: location,
              matches: methodNotAllowedMatches,
              loaderData: {},
              actionData: null,
              errors: _defineProperty({}, route.id, error),
              statusCode: error.status,
              loaderHeaders: {},
              actionHeaders: {},
              activeDeferreds: null
            });
          case 11:
            if (matches) {
              _context10.next = 15;
              break;
            }
            _error4 = getInternalRouterError(404, {
              pathname: location.pathname
            });
            _getShortCircuitMatch4 = getShortCircuitMatches(dataRoutes), notFoundMatches = _getShortCircuitMatch4.matches, _route2 = _getShortCircuitMatch4.route;
            return _context10.abrupt("return", {
              basename: basename,
              location: location,
              matches: notFoundMatches,
              loaderData: {},
              actionData: null,
              errors: _defineProperty({}, _route2.id, _error4),
              statusCode: _error4.status,
              loaderHeaders: {},
              actionHeaders: {},
              activeDeferreds: null
            });
          case 15:
            _context10.next = 17;
            return queryImpl(request, location, matches, requestContext);
          case 17:
            result = _context10.sent;
            if (!isResponse(result)) {
              _context10.next = 20;
              break;
            }
            return _context10.abrupt("return", result);
          case 20:
            return _context10.abrupt("return", _extends({
              location: location,
              basename: basename
            }, result));
          case 21:
          case "end":
            return _context10.stop();
        }
      }, _callee10);
    }));
    return _query.apply(this, arguments);
  }
  function queryRoute(_x43, _x44) {
    return _queryRoute.apply(this, arguments);
  }
  function _queryRoute() {
    _queryRoute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(request, _temp3) {
      var _ref8, routeId, requestContext, url, method, location, matches, match, result, error, _result$activeDeferre, data;
      return _regeneratorRuntime().wrap(function _callee11$(_context11) {
        while (1) switch (_context11.prev = _context11.next) {
          case 0:
            _ref8 = _temp3 === void 0 ? {} : _temp3, routeId = _ref8.routeId, requestContext = _ref8.requestContext;
            url = new URL(request.url);
            method = request.method;
            location = createLocation("", router_createPath(url), null, "default");
            matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't
            if (!(!isValidMethod(method) && method !== "HEAD" && method !== "OPTIONS")) {
              _context11.next = 9;
              break;
            }
            throw getInternalRouterError(405, {
              method: method
            });
          case 9:
            if (matches) {
              _context11.next = 11;
              break;
            }
            throw getInternalRouterError(404, {
              pathname: location.pathname
            });
          case 11:
            match = routeId ? matches.find(function (m) {
              return m.route.id === routeId;
            }) : getTargetMatch(matches, location);
            if (!(routeId && !match)) {
              _context11.next = 16;
              break;
            }
            throw getInternalRouterError(403, {
              pathname: location.pathname,
              routeId: routeId
            });
          case 16:
            if (match) {
              _context11.next = 18;
              break;
            }
            throw getInternalRouterError(404, {
              pathname: location.pathname
            });
          case 18:
            _context11.next = 20;
            return queryImpl(request, location, matches, requestContext, match);
          case 20:
            result = _context11.sent;
            if (!isResponse(result)) {
              _context11.next = 23;
              break;
            }
            return _context11.abrupt("return", result);
          case 23:
            error = result.errors ? Object.values(result.errors)[0] : undefined;
            if (!(error !== undefined)) {
              _context11.next = 26;
              break;
            }
            throw error;
          case 26:
            if (!result.actionData) {
              _context11.next = 28;
              break;
            }
            return _context11.abrupt("return", Object.values(result.actionData)[0]);
          case 28:
            if (!result.loaderData) {
              _context11.next = 32;
              break;
            }
            data = Object.values(result.loaderData)[0];
            if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {
              data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];
            }
            return _context11.abrupt("return", data);
          case 32:
            return _context11.abrupt("return", undefined);
          case 33:
          case "end":
            return _context11.stop();
        }
      }, _callee11);
    }));
    return _queryRoute.apply(this, arguments);
  }
  function queryImpl(_x45, _x46, _x47, _x48, _x49) {
    return _queryImpl.apply(this, arguments);
  }
  function _queryImpl() {
    _queryImpl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(request, location, matches, requestContext, routeMatch) {
      var _result, result;
      return _regeneratorRuntime().wrap(function _callee12$(_context12) {
        while (1) switch (_context12.prev = _context12.next) {
          case 0:
            invariant(request.signal, "query()/queryRoute() requests must contain an AbortController signal");
            _context12.prev = 1;
            if (!isMutationMethod(request.method.toLowerCase())) {
              _context12.next = 7;
              break;
            }
            _context12.next = 5;
            return submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);
          case 5:
            _result = _context12.sent;
            return _context12.abrupt("return", _result);
          case 7:
            _context12.next = 9;
            return loadRouteData(request, matches, requestContext, routeMatch);
          case 9:
            result = _context12.sent;
            return _context12.abrupt("return", isResponse(result) ? result : _extends({}, result, {
              actionData: null,
              actionHeaders: {}
            }));
          case 13:
            _context12.prev = 13;
            _context12.t0 = _context12["catch"](1);
            if (!isQueryRouteResponse(_context12.t0)) {
              _context12.next = 19;
              break;
            }
            if (!(_context12.t0.type === ResultType.error && !isRedirectResponse(_context12.t0.response))) {
              _context12.next = 18;
              break;
            }
            throw _context12.t0.response;
          case 18:
            return _context12.abrupt("return", _context12.t0.response);
          case 19:
            if (!isRedirectResponse(_context12.t0)) {
              _context12.next = 21;
              break;
            }
            return _context12.abrupt("return", _context12.t0);
          case 21:
            throw _context12.t0;
          case 22:
          case "end":
            return _context12.stop();
        }
      }, _callee12, null, [[1, 13]]);
    }));
    return _queryImpl.apply(this, arguments);
  }
  function submit(_x50, _x51, _x52, _x53, _x54) {
    return _submit.apply(this, arguments);
  }
  function _submit() {
    _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(request, matches, actionMatch, requestContext, isRouteRequest) {
      var result, error, method, _error5, boundaryMatch, _context13, loaderRequest, context;
      return _regeneratorRuntime().wrap(function _callee13$(_context14) {
        while (1) switch (_context14.prev = _context14.next) {
          case 0:
            if (!(!actionMatch.route.action && !actionMatch.route.lazy)) {
              _context14.next = 7;
              break;
            }
            error = getInternalRouterError(405, {
              method: request.method,
              pathname: new URL(request.url).pathname,
              routeId: actionMatch.route.id
            });
            if (!isRouteRequest) {
              _context14.next = 4;
              break;
            }
            throw error;
          case 4:
            result = {
              type: ResultType.error,
              error: error
            };
            _context14.next = 13;
            break;
          case 7:
            _context14.next = 9;
            return callLoaderOrAction("action", request, actionMatch, matches, manifest, detectErrorBoundary, basename, true, isRouteRequest, requestContext);
          case 9:
            result = _context14.sent;
            if (!request.signal.aborted) {
              _context14.next = 13;
              break;
            }
            method = isRouteRequest ? "queryRoute" : "query";
            throw new Error(method + "() call aborted");
          case 13:
            if (!isRedirectResult(result)) {
              _context14.next = 15;
              break;
            }
            throw new Response(null, {
              status: result.status,
              headers: {
                Location: result.location
              }
            });
          case 15:
            if (!isDeferredResult(result)) {
              _context14.next = 20;
              break;
            }
            _error5 = getInternalRouterError(400, {
              type: "defer-action"
            });
            if (!isRouteRequest) {
              _context14.next = 19;
              break;
            }
            throw _error5;
          case 19:
            result = {
              type: ResultType.error,
              error: _error5
            };
          case 20:
            if (!isRouteRequest) {
              _context14.next = 24;
              break;
            }
            if (!isErrorResult(result)) {
              _context14.next = 23;
              break;
            }
            throw result.error;
          case 23:
            return _context14.abrupt("return", {
              matches: [actionMatch],
              loaderData: {},
              actionData: _defineProperty({}, actionMatch.route.id, result.data),
              errors: null,
              // Note: statusCode + headers are unused here since queryRoute will
              // return the raw Response or value
              statusCode: 200,
              loaderHeaders: {},
              actionHeaders: {},
              activeDeferreds: null
            });
          case 24:
            if (!isErrorResult(result)) {
              _context14.next = 30;
              break;
            }
            // Store off the pending error - we use it to determine which loaders
            // to call and will commit it when we complete the navigation
            boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);
            _context14.next = 28;
            return loadRouteData(request, matches, requestContext, undefined, _defineProperty({}, boundaryMatch.route.id, result.error));
          case 28:
            _context13 = _context14.sent;
            return _context14.abrupt("return", _extends({}, _context13, {
              statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,
              actionData: null,
              actionHeaders: _extends({}, result.headers ? _defineProperty({}, actionMatch.route.id, result.headers) : {})
            }));
          case 30:
            // Create a GET request for the loaders
            loaderRequest = new Request(request.url, {
              headers: request.headers,
              redirect: request.redirect,
              signal: request.signal
            });
            _context14.next = 33;
            return loadRouteData(loaderRequest, matches, requestContext);
          case 33:
            context = _context14.sent;
            return _context14.abrupt("return", _extends({}, context, result.statusCode ? {
              statusCode: result.statusCode
            } : {}, {
              actionData: _defineProperty({}, actionMatch.route.id, result.data),
              actionHeaders: _extends({}, result.headers ? _defineProperty({}, actionMatch.route.id, result.headers) : {})
            }));
          case 35:
          case "end":
            return _context14.stop();
        }
      }, _callee13);
    }));
    return _submit.apply(this, arguments);
  }
  function loadRouteData(_x55, _x56, _x57, _x58, _x59) {
    return _loadRouteData.apply(this, arguments);
  }
  function _loadRouteData() {
    _loadRouteData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(request, matches, requestContext, routeMatch, pendingActionError) {
      var isRouteRequest, requestMatches, matchesToLoad, results, method, activeDeferreds, context, executedLoaders;
      return _regeneratorRuntime().wrap(function _callee14$(_context15) {
        while (1) switch (_context15.prev = _context15.next) {
          case 0:
            isRouteRequest = routeMatch != null; // Short circuit if we have no loaders to run (queryRoute())
            if (!(isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy))) {
              _context15.next = 3;
              break;
            }
            throw getInternalRouterError(400, {
              method: request.method,
              pathname: new URL(request.url).pathname,
              routeId: routeMatch == null ? void 0 : routeMatch.route.id
            });
          case 3:
            requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);
            matchesToLoad = requestMatches.filter(function (m) {
              return m.route.loader || m.route.lazy;
            }); // Short circuit if we have no loaders to run (query())
            if (!(matchesToLoad.length === 0)) {
              _context15.next = 7;
              break;
            }
            return _context15.abrupt("return", {
              matches: matches,
              // Add a null for all matched routes for proper revalidation on the client
              loaderData: matches.reduce(function (acc, m) {
                return Object.assign(acc, _defineProperty({}, m.route.id, null));
              }, {}),
              errors: pendingActionError || null,
              statusCode: 200,
              loaderHeaders: {},
              activeDeferreds: null
            });
          case 7:
            _context15.next = 9;
            return Promise.all(_toConsumableArray(matchesToLoad.map(function (match) {
              return callLoaderOrAction("loader", request, match, matches, manifest, detectErrorBoundary, basename, true, isRouteRequest, requestContext);
            })));
          case 9:
            results = _context15.sent;
            if (!request.signal.aborted) {
              _context15.next = 13;
              break;
            }
            method = isRouteRequest ? "queryRoute" : "query";
            throw new Error(method + "() call aborted");
          case 13:
            // Process and commit output from loaders
            activeDeferreds = new Map();
            context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds); // Add a null for any non-loader matches for proper revalidation on the client
            executedLoaders = new Set(matchesToLoad.map(function (match) {
              return match.route.id;
            }));
            matches.forEach(function (match) {
              if (!executedLoaders.has(match.route.id)) {
                context.loaderData[match.route.id] = null;
              }
            });
            return _context15.abrupt("return", _extends({}, context, {
              matches: matches,
              activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null
            }));
          case 18:
          case "end":
            return _context15.stop();
        }
      }, _callee14);
    }));
    return _loadRouteData.apply(this, arguments);
  }
  return {
    dataRoutes: dataRoutes,
    query: query,
    queryRoute: queryRoute
  };
} //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region Helpers
////////////////////////////////////////////////////////////////////////////////

/**
 * Given an existing StaticHandlerContext and an error thrown at render time,
 * provide an updated StaticHandlerContext suitable for a second SSR render
 */

function getStaticContextFromError(routes, context, error) {
  var newContext = _extends({}, context, {
    statusCode: 500,
    errors: _defineProperty({}, context._deepestRenderedBoundaryId || routes[0].id, error)
  });
  return newContext;
}
function isSubmissionNavigation(opts) {
  return opts != null && "formData" in opts;
} // Normalize navigation options by converting formMethod=GET formData objects to
// URLSearchParams so they behave identically to links with query params

function normalizeNavigateOptions(to, future, opts, isFetcher) {
  if (isFetcher === void 0) {
    isFetcher = false;
  }
  var path = typeof to === "string" ? to : router_createPath(to); // Return location verbatim on non-submission navigations

  if (!opts || !isSubmissionNavigation(opts)) {
    return {
      path: path
    };
  }
  if (opts.formMethod && !isValidMethod(opts.formMethod)) {
    return {
      path: path,
      error: getInternalRouterError(405, {
        method: opts.formMethod
      })
    };
  } // Create a Submission on non-GET navigations

  var submission;
  if (opts.formData) {
    var formMethod = opts.formMethod || "get";
    submission = {
      formMethod: future.v7_normalizeFormMethod ? formMethod.toUpperCase() : formMethod.toLowerCase(),
      formAction: stripHashFromPath(path),
      formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
      formData: opts.formData
    };
    if (isMutationMethod(submission.formMethod)) {
      return {
        path: path,
        submission: submission
      };
    }
  } // Flatten submission onto URLSearchParams for GET submissions

  var parsedPath = parsePath(path);
  var searchParams = convertFormDataToSearchParams(opts.formData); // Since fetcher GET submissions only run a single loader (as opposed to
  // navigation GET submissions which run all loaders), we need to preserve
  // any incoming ?index params

  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {
    searchParams.append("index", "");
  }
  parsedPath.search = "?" + searchParams;
  return {
    path: router_createPath(parsedPath),
    submission: submission
  };
} // Filter out all routes below any caught error as they aren't going to
// render so we don't need to load them

function getLoaderMatchesUntilBoundary(matches, boundaryId) {
  var boundaryMatches = matches;
  if (boundaryId) {
    var index = matches.findIndex(function (m) {
      return m.route.id === boundaryId;
    });
    if (index >= 0) {
      boundaryMatches = matches.slice(0, index);
    }
  }
  return boundaryMatches;
}
function getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError) {
  var actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;
  var currentUrl = history.createURL(state.location);
  var nextUrl = history.createURL(location);
  var defaultShouldRevalidate =
  // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate
  isRevalidationRequired ||
  // Clicked the same link, resubmitted a GET form
  currentUrl.toString() === nextUrl.toString() ||
  // Search params affect all loaders
  currentUrl.search !== nextUrl.search; // Pick navigation matches that are net-new or qualify for revalidation

  var boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;
  var boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);
  var navigationMatches = boundaryMatches.filter(function (match, index) {
    if (match.route.lazy) {
      // We haven't loaded this route yet so we don't know if it's got a loader!
      return true;
    }
    if (match.route.loader == null) {
      return false;
    } // Always call the loader on new route instances and pending defer cancellations

    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(function (id) {
      return id === match.route.id;
    })) {
      return true;
    } // This is the default implementation for when we revalidate.  If the route
    // provides it's own implementation, then we give them full control but
    // provide this value so they can leverage it if needed after they check
    // their own specific use cases

    var currentRouteMatch = state.matches[index];
    var nextRouteMatch = match;
    return shouldRevalidateLoader(match, _extends({
      currentUrl: currentUrl,
      currentParams: currentRouteMatch.params,
      nextUrl: nextUrl,
      nextParams: nextRouteMatch.params
    }, submission, {
      actionResult: actionResult,
      defaultShouldRevalidate: defaultShouldRevalidate || isNewRouteInstance(currentRouteMatch, nextRouteMatch)
    }));
  }); // Pick fetcher.loads that need to be revalidated

  var revalidatingFetchers = [];
  fetchLoadMatches.forEach(function (f, key) {
    // Don't revalidate if fetcher won't be present in the subsequent render
    if (!matches.some(function (m) {
      return m.route.id === f.routeId;
    })) {
      return;
    }
    var fetcherMatches = matchRoutes(routesToUse, f.path, basename); // If the fetcher path no longer matches, push it in with null matches so
    // we can trigger a 404 in callLoadersAndMaybeResolveData

    if (!fetcherMatches) {
      revalidatingFetchers.push(_extends({
        key: key
      }, f, {
        matches: null,
        match: null
      }));
      return;
    }
    var fetcherMatch = getTargetMatch(fetcherMatches, f.path);
    if (cancelledFetcherLoads.includes(key)) {
      revalidatingFetchers.push(_extends({
        key: key,
        matches: fetcherMatches,
        match: fetcherMatch
      }, f));
      return;
    } // Revalidating fetchers are decoupled from the route matches since they
    // hit a static href, so they _always_ check shouldRevalidate and the
    // default is strictly if a revalidation is explicitly required (action
    // submissions, useRevalidator, X-Remix-Revalidate).

    var shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({
      currentUrl: currentUrl,
      currentParams: state.matches[state.matches.length - 1].params,
      nextUrl: nextUrl,
      nextParams: matches[matches.length - 1].params
    }, submission, {
      actionResult: actionResult,
      defaultShouldRevalidate: defaultShouldRevalidate
    }));
    if (shouldRevalidate) {
      revalidatingFetchers.push(_extends({
        key: key,
        matches: fetcherMatches,
        match: fetcherMatch
      }, f));
    }
  });
  return [navigationMatches, revalidatingFetchers];
}
function isNewLoader(currentLoaderData, currentMatch, match) {
  var isNew =
  // [a] -> [a, b]
  !currentMatch ||
  // [a, b] -> [a, c]
  match.route.id !== currentMatch.route.id; // Handle the case that we don't have data for a re-used route, potentially
  // from a prior error or from a cancelled pending deferred

  var isMissingData = currentLoaderData[match.route.id] === undefined; // Always load if this is a net-new route or we don't yet have data

  return isNew || isMissingData;
}
function isNewRouteInstance(currentMatch, match) {
  var currentPath = currentMatch.route.path;
  return (
    // param change for this match, /users/123 -> /users/456
    currentMatch.pathname !== match.pathname ||
    // splat param changed, which is not present in match.path
    // e.g. /files/images/avatar.jpg -> files/finances.xls
    currentPath != null && currentPath.endsWith("*") && currentMatch.params["*"] !== match.params["*"]
  );
}
function shouldRevalidateLoader(loaderMatch, arg) {
  if (loaderMatch.route.shouldRevalidate) {
    var routeChoice = loaderMatch.route.shouldRevalidate(arg);
    if (typeof routeChoice === "boolean") {
      return routeChoice;
    }
  }
  return arg.defaultShouldRevalidate;
}
/**
 * Execute route.lazy() methods to lazily load route modules (loader, action,
 * shouldRevalidate) and update the routeManifest in place which shares objects
 * with dataRoutes so those get updated as well.
 */
function loadLazyRouteModule(_x60, _x61, _x62) {
  return _loadLazyRouteModule.apply(this, arguments);
}
function _loadLazyRouteModule() {
  _loadLazyRouteModule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(route, detectErrorBoundary, manifest) {
    var lazyRoute, routeToUpdate, routeUpdates, lazyRouteProperty, staticRouteValue, isPropertyStaticallyDefined;
    return _regeneratorRuntime().wrap(function _callee15$(_context16) {
      while (1) switch (_context16.prev = _context16.next) {
        case 0:
          if (route.lazy) {
            _context16.next = 2;
            break;
          }
          return _context16.abrupt("return");
        case 2:
          _context16.next = 4;
          return route.lazy();
        case 4:
          lazyRoute = _context16.sent;
          if (route.lazy) {
            _context16.next = 7;
            break;
          }
          return _context16.abrupt("return");
        case 7:
          routeToUpdate = manifest[route.id];
          invariant(routeToUpdate, "No route found in manifest"); // Update the route in place.  This should be safe because there's no way
          // we could yet be sitting on this route as we can't get there without
          // resolving lazy() first.
          //
          // This is different than the HMR "update" use-case where we may actively be
          // on the route being updated.  The main concern boils down to "does this
          // mutation affect any ongoing navigations or any current state.matches
          // values?".  If not, it should be safe to update in place.
          routeUpdates = {};
          for (lazyRouteProperty in lazyRoute) {
            staticRouteValue = routeToUpdate[lazyRouteProperty];
            isPropertyStaticallyDefined = staticRouteValue !== undefined &&
            // This property isn't static since it should always be updated based
            // on the route updates
            lazyRouteProperty !== "hasErrorBoundary";
            warning(!isPropertyStaticallyDefined, "Route \"" + routeToUpdate.id + "\" has a static property \"" + lazyRouteProperty + "\" " + "defined but its lazy function is also returning a value for this property. " + ("The lazy route property \"" + lazyRouteProperty + "\" will be ignored."));
            if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {
              routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];
            }
          } // Mutate the route with the provided updates.  Do this first so we pass
          // the updated version to detectErrorBoundary

          Object.assign(routeToUpdate, routeUpdates); // Mutate the `hasErrorBoundary` property on the route based on the route
          // updates and remove the `lazy` function so we don't resolve the lazy
          // route again.

          Object.assign(routeToUpdate, {
            // To keep things framework agnostic, we use the provided
            // `detectErrorBoundary` function to set the `hasErrorBoundary` route
            // property since the logic will differ between frameworks.
            hasErrorBoundary: detectErrorBoundary(_extends({}, routeToUpdate)),
            lazy: undefined
          });
        case 13:
        case "end":
          return _context16.stop();
      }
    }, _callee15);
  }));
  return _loadLazyRouteModule.apply(this, arguments);
}
function callLoaderOrAction(_x63, _x64, _x65, _x66, _x67, _x68, _x69, _x70, _x71, _x72) {
  return _callLoaderOrAction.apply(this, arguments);
} // Utility method for creating the Request instances for loaders/actions during
// client-side navigations and fetches.  During SSR we will always have a
// Request instance from the static handler (query/queryRoute)
function _callLoaderOrAction() {
  _callLoaderOrAction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(type, request, match, matches, manifest, detectErrorBoundary, basename, isStaticRequest, isRouteRequest, requestContext) {
    var resultType, result, onReject, runHandler, handler, values, status, location, activeMatches, routePathnames, resolvedLocation, path, currentUrl, url, isSameBasename, data, contentType, _result$init, _result$init2;
    return _regeneratorRuntime().wrap(function _callee16$(_context17) {
      while (1) switch (_context17.prev = _context17.next) {
        case 0:
          if (basename === void 0) {
            basename = "/";
          }
          if (isStaticRequest === void 0) {
            isStaticRequest = false;
          }
          if (isRouteRequest === void 0) {
            isRouteRequest = false;
          }
          runHandler = function runHandler(handler) {
            // Setup a promise we can race against so that abort signals short circuit
            var reject;
            var abortPromise = new Promise(function (_, r) {
              return reject = r;
            });
            onReject = function onReject() {
              return reject();
            };
            request.signal.addEventListener("abort", onReject);
            return Promise.race([handler({
              request: request,
              params: match.params,
              context: requestContext
            }), abortPromise]);
          };
          _context17.prev = 4;
          handler = match.route[type];
          if (!match.route.lazy) {
            _context17.next = 30;
            break;
          }
          if (!handler) {
            _context17.next = 14;
            break;
          }
          _context17.next = 10;
          return Promise.all([runHandler(handler), loadLazyRouteModule(match.route, detectErrorBoundary, manifest)]);
        case 10:
          values = _context17.sent;
          result = values[0];
          _context17.next = 28;
          break;
        case 14:
          _context17.next = 16;
          return loadLazyRouteModule(match.route, detectErrorBoundary, manifest);
        case 16:
          handler = match.route[type];
          if (!handler) {
            _context17.next = 23;
            break;
          }
          _context17.next = 20;
          return runHandler(handler);
        case 20:
          result = _context17.sent;
          _context17.next = 28;
          break;
        case 23:
          if (!(type === "action")) {
            _context17.next = 27;
            break;
          }
          throw getInternalRouterError(405, {
            method: request.method,
            pathname: new URL(request.url).pathname,
            routeId: match.route.id
          });
        case 27:
          return _context17.abrupt("return", {
            type: ResultType.data,
            data: undefined
          });
        case 28:
          _context17.next = 34;
          break;
        case 30:
          invariant(handler, "Could not find the " + type + " to run on the \"" + match.route.id + "\" route");
          _context17.next = 33;
          return runHandler(handler);
        case 33:
          result = _context17.sent;
        case 34:
          invariant(result !== undefined, "You defined " + (type === "action" ? "an action" : "a loader") + " for route " + ("\"" + match.route.id + "\" but didn't return anything from your `" + type + "` ") + "function. Please return a value or `null`.");
          _context17.next = 41;
          break;
        case 37:
          _context17.prev = 37;
          _context17.t0 = _context17["catch"](4);
          resultType = ResultType.error;
          result = _context17.t0;
        case 41:
          _context17.prev = 41;
          if (onReject) {
            request.signal.removeEventListener("abort", onReject);
          }
          return _context17.finish(41);
        case 44:
          if (!isResponse(result)) {
            _context17.next = 69;
            break;
          }
          status = result.status; // Process redirects
          if (!redirectStatusCodes.has(status)) {
            _context17.next = 54;
            break;
          }
          location = result.headers.get("Location");
          invariant(location, "Redirects returned/thrown from loaders/actions must have a Location header"); // Support relative routing in internal redirects

          if (!ABSOLUTE_URL_REGEX.test(location)) {
            activeMatches = matches.slice(0, matches.indexOf(match) + 1);
            routePathnames = getPathContributingMatches(activeMatches).map(function (match) {
              return match.pathnameBase;
            });
            resolvedLocation = resolveTo(location, routePathnames, new URL(request.url).pathname);
            invariant(router_createPath(resolvedLocation), "Unable to resolve redirect location: " + location); // Prepend the basename to the redirect location if we have one

            if (basename) {
              path = resolvedLocation.pathname;
              resolvedLocation.pathname = path === "/" ? basename : router_joinPaths([basename, path]);
            }
            location = router_createPath(resolvedLocation);
          } else if (!isStaticRequest) {
            // Strip off the protocol+origin for same-origin + same-basename absolute
            // redirects. If this is a static request, we can let it go back to the
            // browser as-is
            currentUrl = new URL(request.url);
            url = location.startsWith("//") ? new URL(currentUrl.protocol + location) : new URL(location);
            isSameBasename = stripBasename(url.pathname, basename) != null;
            if (url.origin === currentUrl.origin && isSameBasename) {
              location = url.pathname + url.search + url.hash;
            }
          } // Don't process redirects in the router during static requests requests.
          // Instead, throw the Response and let the server handle it with an HTTP
          // redirect.  We also update the Location header in place in this flow so
          // basename and relative routing is taken into account
          if (!isStaticRequest) {
            _context17.next = 53;
            break;
          }
          result.headers.set("Location", location);
          throw result;
        case 53:
          return _context17.abrupt("return", {
            type: ResultType.redirect,
            status: status,
            location: location,
            revalidate: result.headers.get("X-Remix-Revalidate") !== null
          });
        case 54:
          if (!isRouteRequest) {
            _context17.next = 56;
            break;
          }
          throw {
            type: resultType || ResultType.data,
            response: result
          };
        case 56:
          contentType = result.headers.get("Content-Type"); // Check between word boundaries instead of startsWith() due to the last
          // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type
          if (!(contentType && /\bapplication\/json\b/.test(contentType))) {
            _context17.next = 63;
            break;
          }
          _context17.next = 60;
          return result.json();
        case 60:
          data = _context17.sent;
          _context17.next = 66;
          break;
        case 63:
          _context17.next = 65;
          return result.text();
        case 65:
          data = _context17.sent;
        case 66:
          if (!(resultType === ResultType.error)) {
            _context17.next = 68;
            break;
          }
          return _context17.abrupt("return", {
            type: resultType,
            error: new router_ErrorResponse(status, result.statusText, data),
            headers: result.headers
          });
        case 68:
          return _context17.abrupt("return", {
            type: ResultType.data,
            data: data,
            statusCode: result.status,
            headers: result.headers
          });
        case 69:
          if (!(resultType === ResultType.error)) {
            _context17.next = 71;
            break;
          }
          return _context17.abrupt("return", {
            type: resultType,
            error: result
          });
        case 71:
          if (!isDeferredData(result)) {
            _context17.next = 73;
            break;
          }
          return _context17.abrupt("return", {
            type: ResultType.deferred,
            deferredData: result,
            statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,
            headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)
          });
        case 73:
          return _context17.abrupt("return", {
            type: ResultType.data,
            data: result
          });
        case 74:
        case "end":
          return _context17.stop();
      }
    }, _callee16, null, [[4, 37, 41, 44]]);
  }));
  return _callLoaderOrAction.apply(this, arguments);
}
function createClientSideRequest(history, location, signal, submission) {
  var url = history.createURL(stripHashFromPath(location)).toString();
  var init = {
    signal: signal
  };
  if (submission && isMutationMethod(submission.formMethod)) {
    var formMethod = submission.formMethod,
      formEncType = submission.formEncType,
      formData = submission.formData; // Didn't think we needed this but it turns out unlike other methods, patch
    // won't be properly normalized to uppercase and results in a 405 error.
    // See: https://fetch.spec.whatwg.org/#concept-method

    init.method = formMethod.toUpperCase();
    init.body = formEncType === "application/x-www-form-urlencoded" ? convertFormDataToSearchParams(formData) : formData;
  } // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)

  return new Request(url, init);
}
function convertFormDataToSearchParams(formData) {
  var searchParams = new URLSearchParams();
  var _iterator6 = _createForOfIteratorHelper(formData.entries()),
    _step6;
  try {
    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
      var _step6$value = _slicedToArray(_step6.value, 2),
        key = _step6$value[0],
        value = _step6$value[1];
      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs
      searchParams.append(key, value instanceof File ? value.name : value);
    }
  } catch (err) {
    _iterator6.e(err);
  } finally {
    _iterator6.f();
  }
  return searchParams;
}
function processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {
  // Fill in loaderData/errors from our loaders
  var loaderData = {};
  var errors = null;
  var statusCode;
  var foundError = false;
  var loaderHeaders = {}; // Process loader results into state.loaderData/state.errors

  results.forEach(function (result, index) {
    var id = matchesToLoad[index].route.id;
    invariant(!isRedirectResult(result), "Cannot handle redirect results in processLoaderData");
    if (isErrorResult(result)) {
      // Look upwards from the matched route for the closest ancestor
      // error boundary, defaulting to the root match
      var boundaryMatch = findNearestBoundary(matches, id);
      var error = result.error; // If we have a pending action error, we report it at the highest-route
      // that throws a loader error, and then clear it out to indicate that
      // it was consumed

      if (pendingError) {
        error = Object.values(pendingError)[0];
        pendingError = undefined;
      }
      errors = errors || {}; // Prefer higher error values if lower errors bubble to the same boundary

      if (errors[boundaryMatch.route.id] == null) {
        errors[boundaryMatch.route.id] = error;
      } // Clear our any prior loaderData for the throwing route

      loaderData[id] = undefined; // Once we find our first (highest) error, we set the status code and
      // prevent deeper status codes from overriding

      if (!foundError) {
        foundError = true;
        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;
      }
      if (result.headers) {
        loaderHeaders[id] = result.headers;
      }
    } else {
      if (isDeferredResult(result)) {
        activeDeferreds.set(id, result.deferredData);
        loaderData[id] = result.deferredData.data;
      } else {
        loaderData[id] = result.data;
      } // Error status codes always override success status codes, but if all
      // loaders are successful we take the deepest status code.

      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {
        statusCode = result.statusCode;
      }
      if (result.headers) {
        loaderHeaders[id] = result.headers;
      }
    }
  }); // If we didn't consume the pending action error (i.e., all loaders
  // resolved), then consume it here.  Also clear out any loaderData for the
  // throwing route

  if (pendingError) {
    errors = pendingError;
    loaderData[Object.keys(pendingError)[0]] = undefined;
  }
  return {
    loaderData: loaderData,
    errors: errors,
    statusCode: statusCode || 200,
    loaderHeaders: loaderHeaders
  };
}
function processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {
  var _processRouteLoaderDa = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds),
    loaderData = _processRouteLoaderDa.loaderData,
    errors = _processRouteLoaderDa.errors; // Process results from our revalidating fetchers

  for (var index = 0; index < revalidatingFetchers.length; index++) {
    var _revalidatingFetchers = revalidatingFetchers[index],
      key = _revalidatingFetchers.key,
      match = _revalidatingFetchers.match;
    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, "Did not find corresponding fetcher result");
    var result = fetcherResults[index]; // Process fetcher non-redirect errors

    if (isErrorResult(result)) {
      var boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);
      if (!(errors && errors[boundaryMatch.route.id])) {
        errors = _extends({}, errors, _defineProperty({}, boundaryMatch.route.id, result.error));
      }
      state.fetchers.delete(key);
    } else if (isRedirectResult(result)) {
      // Should never get here, redirects should get processed above, but we
      // keep this to type narrow to a success result in the else
      invariant(false, "Unhandled fetcher revalidation redirect");
    } else if (isDeferredResult(result)) {
      // Should never get here, deferred data should be awaited for fetchers
      // in resolveDeferredResults
      invariant(false, "Unhandled fetcher deferred data");
    } else {
      var doneFetcher = {
        state: "idle",
        data: result.data,
        formMethod: undefined,
        formAction: undefined,
        formEncType: undefined,
        formData: undefined,
        " _hasFetcherDoneAnything ": true
      };
      state.fetchers.set(key, doneFetcher);
    }
  }
  return {
    loaderData: loaderData,
    errors: errors
  };
}
function mergeLoaderData(loaderData, newLoaderData, matches, errors) {
  var mergedLoaderData = _extends({}, newLoaderData);
  var _iterator7 = _createForOfIteratorHelper(matches),
    _step7;
  try {
    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
      var match = _step7.value;
      var id = match.route.id;
      if (newLoaderData.hasOwnProperty(id)) {
        if (newLoaderData[id] !== undefined) {
          mergedLoaderData[id] = newLoaderData[id];
        }
      } else if (loaderData[id] !== undefined && match.route.loader) {
        // Preserve existing keys not included in newLoaderData and where a loader
        // wasn't removed by HMR
        mergedLoaderData[id] = loaderData[id];
      }
      if (errors && errors.hasOwnProperty(id)) {
        // Don't keep any loader data below the boundary
        break;
      }
    }
  } catch (err) {
    _iterator7.e(err);
  } finally {
    _iterator7.f();
  }
  return mergedLoaderData;
} // Find the nearest error boundary, looking upwards from the leaf route (or the
// route specified by routeId) for the closest ancestor error boundary,
// defaulting to the root match

function findNearestBoundary(matches, routeId) {
  var eligibleMatches = routeId ? matches.slice(0, matches.findIndex(function (m) {
    return m.route.id === routeId;
  }) + 1) : _toConsumableArray(matches);
  return eligibleMatches.reverse().find(function (m) {
    return m.route.hasErrorBoundary === true;
  }) || matches[0];
}
function getShortCircuitMatches(routes) {
  // Prefer a root layout route if present, otherwise shim in a route object
  var route = routes.find(function (r) {
    return r.index || !r.path || r.path === "/";
  }) || {
    id: "__shim-error-route__"
  };
  return {
    matches: [{
      params: {},
      pathname: "",
      pathnameBase: "",
      route: route
    }],
    route: route
  };
}
function getInternalRouterError(status, _temp4) {
  var _ref11 = _temp4 === void 0 ? {} : _temp4,
    pathname = _ref11.pathname,
    routeId = _ref11.routeId,
    method = _ref11.method,
    type = _ref11.type;
  var statusText = "Unknown Server Error";
  var errorMessage = "Unknown @remix-run/router error";
  if (status === 400) {
    statusText = "Bad Request";
    if (method && pathname && routeId) {
      errorMessage = "You made a " + method + " request to \"" + pathname + "\" but " + ("did not provide a `loader` for route \"" + routeId + "\", ") + "so there is no way to handle the request.";
    } else if (type === "defer-action") {
      errorMessage = "defer() is not supported in actions";
    }
  } else if (status === 403) {
    statusText = "Forbidden";
    errorMessage = "Route \"" + routeId + "\" does not match URL \"" + pathname + "\"";
  } else if (status === 404) {
    statusText = "Not Found";
    errorMessage = "No route matches URL \"" + pathname + "\"";
  } else if (status === 405) {
    statusText = "Method Not Allowed";
    if (method && pathname && routeId) {
      errorMessage = "You made a " + method.toUpperCase() + " request to \"" + pathname + "\" but " + ("did not provide an `action` for route \"" + routeId + "\", ") + "so there is no way to handle the request.";
    } else if (method) {
      errorMessage = "Invalid request method \"" + method.toUpperCase() + "\"";
    }
  }
  return new router_ErrorResponse(status || 500, statusText, new Error(errorMessage), true);
} // Find any returned redirect errors, starting from the lowest match

function findRedirect(results) {
  for (var i = results.length - 1; i >= 0; i--) {
    var result = results[i];
    if (isRedirectResult(result)) {
      return result;
    }
  }
}
function stripHashFromPath(path) {
  var parsedPath = typeof path === "string" ? parsePath(path) : path;
  return router_createPath(_extends({}, parsedPath, {
    hash: ""
  }));
}
function isHashChangeOnly(a, b) {
  return a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash;
}
function isDeferredResult(result) {
  return result.type === ResultType.deferred;
}
function isErrorResult(result) {
  return result.type === ResultType.error;
}
function isRedirectResult(result) {
  return (result && result.type) === ResultType.redirect;
}
function isDeferredData(value) {
  var deferred = value;
  return deferred && typeof deferred === "object" && typeof deferred.data === "object" && typeof deferred.subscribe === "function" && typeof deferred.cancel === "function" && typeof deferred.resolveData === "function";
}
function isResponse(value) {
  return value != null && typeof value.status === "number" && typeof value.statusText === "string" && typeof value.headers === "object" && typeof value.body !== "undefined";
}
function isRedirectResponse(result) {
  if (!isResponse(result)) {
    return false;
  }
  var status = result.status;
  var location = result.headers.get("Location");
  return status >= 300 && status <= 399 && location != null;
}
function isQueryRouteResponse(obj) {
  return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);
}
function isValidMethod(method) {
  return validRequestMethods.has(method.toLowerCase());
}
function isMutationMethod(method) {
  return validMutationMethods.has(method.toLowerCase());
}
function resolveDeferredResults(_x73, _x74, _x75, _x76, _x77, _x78) {
  return _resolveDeferredResults.apply(this, arguments);
}
function _resolveDeferredResults() {
  _resolveDeferredResults = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(currentMatches, matchesToLoad, results, signal, isFetcher, currentLoaderData) {
    var _loop, index, _ret;
    return _regeneratorRuntime().wrap(function _callee17$(_context19) {
      while (1) switch (_context19.prev = _context19.next) {
        case 0:
          _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop(index) {
            var result, match, currentMatch, isRevalidatingLoader;
            return _regeneratorRuntime().wrap(function _loop$(_context18) {
              while (1) switch (_context18.prev = _context18.next) {
                case 0:
                  result = results[index];
                  match = matchesToLoad[index]; // If we don't have a match, then we can have a deferred result to do
                  // anything with.  This is for revalidating fetchers where the route was
                  // removed during HMR
                  if (match) {
                    _context18.next = 4;
                    break;
                  }
                  return _context18.abrupt("return", "continue");
                case 4:
                  currentMatch = currentMatches.find(function (m) {
                    return m.route.id === match.route.id;
                  });
                  isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;
                  if (!(isDeferredResult(result) && (isFetcher || isRevalidatingLoader))) {
                    _context18.next = 9;
                    break;
                  }
                  _context18.next = 9;
                  return resolveDeferredData(result, signal, isFetcher).then(function (result) {
                    if (result) {
                      results[index] = result || results[index];
                    }
                  });
                case 9:
                case "end":
                  return _context18.stop();
              }
            }, _loop);
          });
          index = 0;
        case 2:
          if (!(index < results.length)) {
            _context19.next = 10;
            break;
          }
          return _context19.delegateYield(_loop(index), "t0", 4);
        case 4:
          _ret = _context19.t0;
          if (!(_ret === "continue")) {
            _context19.next = 7;
            break;
          }
          return _context19.abrupt("continue", 7);
        case 7:
          index++;
          _context19.next = 2;
          break;
        case 10:
        case "end":
          return _context19.stop();
      }
    }, _callee17);
  }));
  return _resolveDeferredResults.apply(this, arguments);
}
function resolveDeferredData(_x79, _x80, _x81) {
  return _resolveDeferredData.apply(this, arguments);
}
function _resolveDeferredData() {
  _resolveDeferredData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(result, signal, unwrap) {
    var aborted;
    return _regeneratorRuntime().wrap(function _callee18$(_context20) {
      while (1) switch (_context20.prev = _context20.next) {
        case 0:
          if (unwrap === void 0) {
            unwrap = false;
          }
          _context20.next = 3;
          return result.deferredData.resolveData(signal);
        case 3:
          aborted = _context20.sent;
          if (!aborted) {
            _context20.next = 6;
            break;
          }
          return _context20.abrupt("return");
        case 6:
          if (!unwrap) {
            _context20.next = 14;
            break;
          }
          _context20.prev = 7;
          return _context20.abrupt("return", {
            type: ResultType.data,
            data: result.deferredData.unwrappedData
          });
        case 11:
          _context20.prev = 11;
          _context20.t0 = _context20["catch"](7);
          return _context20.abrupt("return", {
            type: ResultType.error,
            error: _context20.t0
          });
        case 14:
          return _context20.abrupt("return", {
            type: ResultType.data,
            data: result.deferredData.data
          });
        case 15:
        case "end":
          return _context20.stop();
      }
    }, _callee18, null, [[7, 11]]);
  }));
  return _resolveDeferredData.apply(this, arguments);
}
function hasNakedIndexQuery(search) {
  return new URLSearchParams(search).getAll("index").some(function (v) {
    return v === "";
  });
} // Note: This should match the format exported by useMatches, so if you change
// this please also change that :)  Eventually we'll DRY this up

function createUseMatchesMatch(match, loaderData) {
  var route = match.route,
    pathname = match.pathname,
    params = match.params;
  return {
    id: route.id,
    pathname: pathname,
    params: params,
    data: loaderData[route.id],
    handle: route.handle
  };
}
function getTargetMatch(matches, location) {
  var search = typeof location === "string" ? parsePath(location).search : location.search;
  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || "")) {
    // Return the leaf index route when index is present
    return matches[matches.length - 1];
  } // Otherwise grab the deepest "path contributing" match (ignoring index and
  // pathless layout routes)

  var pathMatches = getPathContributingMatches(matches);
  return pathMatches[pathMatches.length - 1];
} //#endregion


;// CONCATENATED MODULE: ./node_modules/react-router/dist/index.js






/**
 * React Router v6.10.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */




/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */

function isPolyfill(x, y) {
  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
  ;
}

var is = typeof Object.is === "function" ? Object.is : isPolyfill; // Intentionally not using named imports because Rollup uses dynamic
// dispatch for CommonJS interop named imports.

var useState = react.useState,
  useEffect = react.useEffect,
  useLayoutEffect = react.useLayoutEffect,
  useDebugValue = react.useDebugValue;
var didWarnOld18Alpha = false;
var didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works
// because of a very particular set of implementation details and assumptions
// -- change any one of them and it will break. The most important assumption
// is that updates are always synchronous, because concurrent rendering is
// only available in versions of React that also have a built-in
// useSyncExternalStore API. And we only use this shim when the built-in API
// does not exist.
//
// Do not assume that the clever hacks used by this hook also work in general.
// The point of this shim is to replace the need for hacks by other libraries.

function useSyncExternalStore$2(subscribe, getSnapshot,
// Note: The shim does not use getServerSnapshot, because pre-18 versions of
// React do not expose a way to check if we're hydrating. So users of the shim
// will need to track that themselves and return the correct value
// from `getSnapshot`.
getServerSnapshot) {
  if (false) {} // Read the current snapshot from the store on every render. Again, this
  // breaks the rules of React, and only works here because of specific
  // implementation details, most importantly that updates are
  // always synchronous.

  var value = getSnapshot();
  if (false) { var cachedValue; } // Because updates are synchronous, we don't queue them. Instead we force a
  // re-render whenever the subscribed state changes by updating an some
  // arbitrary useState hook. Then, during render, we call getSnapshot to read
  // the current value.
  //
  // Because we don't actually use the state returned by the useState hook, we
  // can save a bit of memory by storing other stuff in that slot.
  //
  // To implement the early bailout, we need to track some things on a mutable
  // object. Usually, we would put that in a useRef hook, but we can stash it in
  // our useState hook instead.
  //
  // To force a re-render, we call forceUpdate({inst}). That works because the
  // new object always fails an equality check.

  var _useState = useState({
      inst: {
        value: value,
        getSnapshot: getSnapshot
      }
    }),
    _useState2 = slicedToArray_slicedToArray(_useState, 2),
    inst = _useState2[0].inst,
    forceUpdate = _useState2[1]; // Track the latest getSnapshot function with a ref. This needs to be updated
  // in the layout phase so we can access it during the tearing check that
  // happens on subscribe.

  useLayoutEffect(function () {
    inst.value = value;
    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the
    // commit phase if there was an interleaved mutation. In concurrent mode
    // this can happen all the time, but even in synchronous mode, an earlier
    // effect may have mutated the store.

    if (checkIfSnapshotChanged(inst)) {
      // Force a re-render.
      forceUpdate({
        inst: inst
      });
    } // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [subscribe, value, getSnapshot]);
  useEffect(function () {
    // Check for changes right before subscribing. Subsequent changes will be
    // detected in the subscription handler.
    if (checkIfSnapshotChanged(inst)) {
      // Force a re-render.
      forceUpdate({
        inst: inst
      });
    }
    var handleStoreChange = function handleStoreChange() {
      // TODO: Because there is no cross-renderer API for batching updates, it's
      // up to the consumer of this library to wrap their subscription event
      // with unstable_batchedUpdates. Should we try to detect when this isn't
      // the case and print a warning in development?
      // The store changed. Check if the snapshot changed since the last time we
      // read from the store.
      if (checkIfSnapshotChanged(inst)) {
        // Force a re-render.
        forceUpdate({
          inst: inst
        });
      }
    }; // Subscribe to the store and return a clean-up function.

    return subscribe(handleStoreChange); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [subscribe]);
  useDebugValue(value);
  return value;
}
function checkIfSnapshotChanged(inst) {
  var latestGetSnapshot = inst.getSnapshot;
  var prevValue = inst.value;
  try {
    var nextValue = latestGetSnapshot();
    return !is(prevValue, nextValue);
  } catch (error) {
    return true;
  }
}

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 */
function useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {
  // Note: The shim does not use getServerSnapshot, because pre-18 versions of
  // React do not expose a way to check if we're hydrating. So users of the shim
  // will need to track that themselves and return the correct value
  // from `getSnapshot`.
  return getSnapshot();
}

/**
 * Inlined into the react-router repo since use-sync-external-store does not
 * provide a UMD-compatible package, so we need this to be able to distribute
 * UMD react-router bundles
 */
var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
var isServerEnvironment = !canUseDOM;
var shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore$2;
var useSyncExternalStore =  true ? function (module) {
  return module.useSyncExternalStore;
}(react_namespaceObject) : shim;
var DataRouterContext = /*#__PURE__*/react.createContext(null);
if (false) {}
var DataRouterStateContext = /*#__PURE__*/react.createContext(null);
if (false) {}
var AwaitContext = /*#__PURE__*/react.createContext(null);
if (false) {}
var NavigationContext = /*#__PURE__*/react.createContext(null);
if (false) {}
var LocationContext = /*#__PURE__*/react.createContext(null);
if (false) {}
var RouteContext = /*#__PURE__*/react.createContext({
  outlet: null,
  matches: []
});
if (false) {}
var RouteErrorContext = /*#__PURE__*/react.createContext(null);
if (false) {}
function dist_extends() {
  dist_extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return dist_extends.apply(this, arguments);
}

/**
 * Returns the full href for the given "to" value. This is useful for building
 * custom links that are also accessible and preserve right-click behavior.
 *
 * @see https://reactrouter.com/hooks/use-href
 */

function useHref(to, _temp) {
  var _ref8 = _temp === void 0 ? {} : _temp,
    relative = _ref8.relative;
  !useInRouterContext() ?  false ? 0 : invariant(false) : void 0;
  var _React$useContext = react.useContext(NavigationContext),
    basename = _React$useContext.basename,
    navigator = _React$useContext.navigator;
  var _useResolvedPath = dist_useResolvedPath(to, {
      relative: relative
    }),
    hash = _useResolvedPath.hash,
    pathname = _useResolvedPath.pathname,
    search = _useResolvedPath.search;
  var joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior
  // to creating the href.  If this is a root navigation, then just use the raw
  // basename which allows the basename to have full control over the presence
  // of a trailing slash on root links

  if (basename !== "/") {
    joinedPathname = pathname === "/" ? basename : router_joinPaths([basename, pathname]);
  }
  return navigator.createHref({
    pathname: joinedPathname,
    search: search,
    hash: hash
  });
}
/**
 * Returns true if this component is a descendant of a <Router>.
 *
 * @see https://reactrouter.com/hooks/use-in-router-context
 */

function useInRouterContext() {
  return react.useContext(LocationContext) != null;
}
/**
 * Returns the current location object, which represents the current URL in web
 * browsers.
 *
 * Note: If you're using this it may mean you're doing some of your own
 * "routing" in your app, and we'd like to know what your use case is. We may
 * be able to provide something higher-level to better suit your needs.
 *
 * @see https://reactrouter.com/hooks/use-location
 */

function dist_useLocation() {
  !useInRouterContext() ?  false ? 0 : invariant(false) : void 0;
  return react.useContext(LocationContext).location;
}
/**
 * Returns the current navigation action which describes how the router came to
 * the current location, either by a pop, push, or replace on the history stack.
 *
 * @see https://reactrouter.com/hooks/use-navigation-type
 */

function useNavigationType() {
  return React.useContext(LocationContext).navigationType;
}
/**
 * Returns a PathMatch object if the given pattern matches the current URL.
 * This is useful for components that need to know "active" state, e.g.
 * <NavLink>.
 *
 * @see https://reactrouter.com/hooks/use-match
 */

function useMatch(pattern) {
  !useInRouterContext() ?  false ? 0 : UNSAFE_invariant(false) : void 0;
  var _useLocation = dist_useLocation(),
    pathname = _useLocation.pathname;
  return React.useMemo(function () {
    return matchPath(pattern, pathname);
  }, [pathname, pattern]);
}
/**
 * The interface for the navigate() function returned from useNavigate().
 */

/**
 * Returns an imperative method for changing the location. Used by <Link>s, but
 * may also be used by other elements to change the location.
 *
 * @see https://reactrouter.com/hooks/use-navigate
 */
function dist_useNavigate() {
  !useInRouterContext() ?  false ? 0 : invariant(false) : void 0;
  var _React$useContext2 = react.useContext(NavigationContext),
    basename = _React$useContext2.basename,
    navigator = _React$useContext2.navigator;
  var _React$useContext3 = react.useContext(RouteContext),
    matches = _React$useContext3.matches;
  var _useLocation2 = dist_useLocation(),
    locationPathname = _useLocation2.pathname;
  var routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map(function (match) {
    return match.pathnameBase;
  }));
  var activeRef = react.useRef(false);
  react.useEffect(function () {
    activeRef.current = true;
  });
  var navigate = react.useCallback(function (to, options) {
    if (options === void 0) {
      options = {};
    }
     false ? 0 : void 0;
    if (!activeRef.current) return;
    if (typeof to === "number") {
      navigator.go(to);
      return;
    }
    var path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path"); // If we're operating within a basename, prepend it to the pathname prior
    // to handing off to history.  If this is a root navigation, then we
    // navigate to the raw basename which allows the basename to have full
    // control over the presence of a trailing slash on root links

    if (basename !== "/") {
      path.pathname = path.pathname === "/" ? basename : router_joinPaths([basename, path.pathname]);
    }
    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);
  }, [basename, navigator, routePathnamesJson, locationPathname]);
  return navigate;
}
var OutletContext = /*#__PURE__*/(/* unused pure expression or super */ null && (React.createContext(null)));
/**
 * Returns the context (if provided) for the child route at this level of the route
 * hierarchy.
 * @see https://reactrouter.com/hooks/use-outlet-context
 */

function useOutletContext() {
  return React.useContext(OutletContext);
}
/**
 * Returns the element for the child route at this level of the route
 * hierarchy. Used internally by <Outlet> to render child routes.
 *
 * @see https://reactrouter.com/hooks/use-outlet
 */

function useOutlet(context) {
  var outlet = React.useContext(RouteContext).outlet;
  if (outlet) {
    return /*#__PURE__*/React.createElement(OutletContext.Provider, {
      value: context
    }, outlet);
  }
  return outlet;
}
/**
 * Returns an object of key/value pairs of the dynamic params from the current
 * URL that were matched by the route path.
 *
 * @see https://reactrouter.com/hooks/use-params
 */

function useParams() {
  var _React$useContext4 = React.useContext(RouteContext),
    matches = _React$useContext4.matches;
  var routeMatch = matches[matches.length - 1];
  return routeMatch ? routeMatch.params : {};
}
/**
 * Resolves the pathname of the given `to` value against the current location.
 *
 * @see https://reactrouter.com/hooks/use-resolved-path
 */

function dist_useResolvedPath(to, _temp2) {
  var _ref9 = _temp2 === void 0 ? {} : _temp2,
    relative = _ref9.relative;
  var _React$useContext5 = react.useContext(RouteContext),
    matches = _React$useContext5.matches;
  var _useLocation3 = dist_useLocation(),
    locationPathname = _useLocation3.pathname;
  var routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map(function (match) {
    return match.pathnameBase;
  }));
  return react.useMemo(function () {
    return resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === "path");
  }, [to, routePathnamesJson, locationPathname, relative]);
}
/**
 * Returns the element of the route that matched the current location, prepared
 * with the correct context to render the remainder of the route tree. Route
 * elements in the tree must render an <Outlet> to render their child route's
 * element.
 *
 * @see https://reactrouter.com/hooks/use-routes
 */

function useRoutes(routes, locationArg) {
  !useInRouterContext() ?  false ? 0 : invariant(false) : void 0;
  var _React$useContext6 = react.useContext(NavigationContext),
    navigator = _React$useContext6.navigator;
  var dataRouterStateContext = react.useContext(DataRouterStateContext);
  var _React$useContext7 = react.useContext(RouteContext),
    parentMatches = _React$useContext7.matches;
  var routeMatch = parentMatches[parentMatches.length - 1];
  var parentParams = routeMatch ? routeMatch.params : {};
  var parentPathname = routeMatch ? routeMatch.pathname : "/";
  var parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  var parentRoute = routeMatch && routeMatch.route;
  if (false) { var parentPath; }
  var locationFromContext = dist_useLocation();
  var location;
  if (locationArg) {
    var _parsedLocationArg$pa;
    var parsedLocationArg = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
    !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ?  false ? 0 : invariant(false) : void 0;
    location = parsedLocationArg;
  } else {
    location = locationFromContext;
  }
  var pathname = location.pathname || "/";
  var remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/";
  var matches = matchRoutes(routes, {
    pathname: remainingPathname
  });
  if (false) {}
  var renderedMatches = _renderMatches(matches && matches.map(function (match) {
    return Object.assign({}, match, {
      params: Object.assign({}, parentParams, match.params),
      pathname: router_joinPaths([parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),
      pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : router_joinPaths([parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])
    });
  }), parentMatches, dataRouterStateContext || undefined); // When a user passes in a `locationArg`, the associated routes need to
  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`
  // to use the scoped location instead of the global location.

  if (locationArg && renderedMatches) {
    return /*#__PURE__*/react.createElement(LocationContext.Provider, {
      value: {
        location: dist_extends({
          pathname: "/",
          search: "",
          hash: "",
          state: null,
          key: "default"
        }, location),
        navigationType: Action.Pop
      }
    }, renderedMatches);
  }
  return renderedMatches;
}
function DefaultErrorComponent() {
  var error = useRouteError();
  var message = isRouteErrorResponse(error) ? error.status + " " + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);
  var stack = error instanceof Error ? error.stack : null;
  var lightgrey = "rgba(200,200,200, 0.5)";
  var preStyles = {
    padding: "0.5rem",
    backgroundColor: lightgrey
  };
  var codeStyles = {
    padding: "2px 4px",
    backgroundColor: lightgrey
  };
  var devInfo = null;
  if (false) {}
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("h2", null, "Unexpected Application Error!"), /*#__PURE__*/react.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, message), stack ? /*#__PURE__*/react.createElement("pre", {
    style: preStyles
  }, stack) : null, devInfo);
}
var RenderErrorBoundary = /*#__PURE__*/function (_React$Component) {
  _inherits(RenderErrorBoundary, _React$Component);
  var _super = _createSuper(RenderErrorBoundary);
  function RenderErrorBoundary(props) {
    var _this;
    classCallCheck_classCallCheck(this, RenderErrorBoundary);
    _this = _super.call(this, props);
    _this.state = {
      location: props.location,
      error: props.error
    };
    return _this;
  }
  createClass_createClass(RenderErrorBoundary, [{
    key: "componentDidCatch",
    value: function componentDidCatch(error, errorInfo) {
      console.error("React Router caught the following error during render", error, errorInfo);
    }
  }, {
    key: "render",
    value: function render() {
      return this.state.error ? /*#__PURE__*/react.createElement(RouteContext.Provider, {
        value: this.props.routeContext
      }, /*#__PURE__*/react.createElement(RouteErrorContext.Provider, {
        value: this.state.error,
        children: this.props.component
      })) : this.props.children;
    }
  }], [{
    key: "getDerivedStateFromError",
    value: function getDerivedStateFromError(error) {
      return {
        error: error
      };
    }
  }, {
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props, state) {
      // When we get into an error state, the user will likely click "back" to the
      // previous page that didn't have an error. Because this wraps the entire
      // application, that will have no effect--the error page continues to display.
      // This gives us a mechanism to recover from the error when the location changes.
      //
      // Whether we're in an error state or not, we update the location in state
      // so that when we are in an error state, it gets reset when a new location
      // comes in and the user recovers from the error.
      if (state.location !== props.location) {
        return {
          error: props.error,
          location: props.location
        };
      } // If we're not changing locations, preserve the location but still surface
      // any new errors that may come through. We retain the existing error, we do
      // this because the error provided from the app state may be cleared without
      // the location changing.

      return {
        error: props.error || state.error,
        location: state.location
      };
    }
  }]);
  return RenderErrorBoundary;
}(react.Component);
function RenderedRoute(_ref) {
  var routeContext = _ref.routeContext,
    match = _ref.match,
    children = _ref.children;
  var dataRouterContext = react.useContext(DataRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch
  // in a DataStaticRouter

  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {
    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;
  }
  return /*#__PURE__*/react.createElement(RouteContext.Provider, {
    value: routeContext
  }, children);
}
function _renderMatches(matches, parentMatches, dataRouterState) {
  if (parentMatches === void 0) {
    parentMatches = [];
  }
  if (matches == null) {
    if (dataRouterState != null && dataRouterState.errors) {
      // Don't bail if we have data router errors so we can render them in the
      // boundary.  Use the pre-matched (or shimmed) matches
      matches = dataRouterState.matches;
    } else {
      return null;
    }
  }
  var renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary

  var errors = dataRouterState == null ? void 0 : dataRouterState.errors;
  if (errors != null) {
    var errorIndex = renderedMatches.findIndex(function (m) {
      return m.route.id && (errors == null ? void 0 : errors[m.route.id]);
    });
    !(errorIndex >= 0) ?  false ? 0 : invariant(false) : void 0;
    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
  }
  return renderedMatches.reduceRight(function (outlet, match, index) {
    var error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors

    var errorElement = null;
    if (dataRouterState) {
      if (match.route.ErrorBoundary) {
        errorElement = /*#__PURE__*/react.createElement(match.route.ErrorBoundary, null);
      } else if (match.route.errorElement) {
        errorElement = match.route.errorElement;
      } else {
        errorElement = /*#__PURE__*/react.createElement(DefaultErrorComponent, null);
      }
    }
    var matches = parentMatches.concat(renderedMatches.slice(0, index + 1));
    var getChildren = function getChildren() {
      var children = outlet;
      if (error) {
        children = errorElement;
      } else if (match.route.Component) {
        children = /*#__PURE__*/react.createElement(match.route.Component, null);
      } else if (match.route.element) {
        children = match.route.element;
      }
      return /*#__PURE__*/react.createElement(RenderedRoute, {
        match: match,
        routeContext: {
          outlet: outlet,
          matches: matches
        },
        children: children
      });
    }; // Only wrap in an error boundary within data router usages when we have an
    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to
    // an ancestor ErrorBoundary/errorElement

    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/react.createElement(RenderErrorBoundary, {
      location: dataRouterState.location,
      component: errorElement,
      error: error,
      children: getChildren(),
      routeContext: {
        outlet: null,
        matches: matches
      }
    }) : getChildren();
  }, null);
}
var DataRouterHook;
(function (DataRouterHook) {
  DataRouterHook["UseBlocker"] = "useBlocker";
  DataRouterHook["UseRevalidator"] = "useRevalidator";
})(DataRouterHook || (DataRouterHook = {}));
var DataRouterStateHook;
(function (DataRouterStateHook) {
  DataRouterStateHook["UseBlocker"] = "useBlocker";
  DataRouterStateHook["UseLoaderData"] = "useLoaderData";
  DataRouterStateHook["UseActionData"] = "useActionData";
  DataRouterStateHook["UseRouteError"] = "useRouteError";
  DataRouterStateHook["UseNavigation"] = "useNavigation";
  DataRouterStateHook["UseRouteLoaderData"] = "useRouteLoaderData";
  DataRouterStateHook["UseMatches"] = "useMatches";
  DataRouterStateHook["UseRevalidator"] = "useRevalidator";
})(DataRouterStateHook || (DataRouterStateHook = {}));
function getDataRouterConsoleError(hookName) {
  return hookName + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function useDataRouterContext(hookName) {
  var ctx = React.useContext(DataRouterContext);
  !ctx ?  false ? 0 : UNSAFE_invariant(false) : void 0;
  return ctx;
}
function useDataRouterState(hookName) {
  var state = react.useContext(DataRouterStateContext);
  !state ?  false ? 0 : invariant(false) : void 0;
  return state;
}
function useRouteContext(hookName) {
  var route = react.useContext(RouteContext);
  !route ?  false ? 0 : invariant(false) : void 0;
  return route;
}
function useCurrentRouteId(hookName) {
  var route = useRouteContext(hookName);
  var thisRoute = route.matches[route.matches.length - 1];
  !thisRoute.route.id ?  false ? 0 : invariant(false) : void 0;
  return thisRoute.route.id;
}
/**
 * Returns the current navigation, defaulting to an "idle" navigation when
 * no navigation is in progress
 */

function dist_useNavigation() {
  var state = useDataRouterState(DataRouterStateHook.UseNavigation);
  return state.navigation;
}
/**
 * Returns a revalidate function for manually triggering revalidation, as well
 * as the current state of any manual revalidations
 */

function useRevalidator() {
  var dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);
  var state = useDataRouterState(DataRouterStateHook.UseRevalidator);
  return {
    revalidate: dataRouterContext.router.revalidate,
    state: state.revalidation
  };
}
/**
 * Returns the active route matches, useful for accessing loaderData for
 * parent/child routes or the route "handle" property
 */

function dist_useMatches() {
  var _useDataRouterState = useDataRouterState(DataRouterStateHook.UseMatches),
    matches = _useDataRouterState.matches,
    loaderData = _useDataRouterState.loaderData;
  return React.useMemo(function () {
    return matches.map(function (match) {
      var pathname = match.pathname,
        params = match.params; // Note: This structure matches that created by createUseMatchesMatch
      // in the @remix-run/router , so if you change this please also change
      // that :)  Eventually we'll DRY this up

      return {
        id: match.route.id,
        pathname: pathname,
        params: params,
        data: loaderData[match.route.id],
        handle: match.route.handle
      };
    });
  }, [matches, loaderData]);
}
/**
 * Returns the loader data for the nearest ancestor Route loader
 */

function useLoaderData() {
  var state = useDataRouterState(DataRouterStateHook.UseLoaderData);
  var routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);
  if (state.errors && state.errors[routeId] != null) {
    console.error("You cannot `useLoaderData` in an errorElement (routeId: " + routeId + ")");
    return undefined;
  }
  return state.loaderData[routeId];
}
/**
 * Returns the loaderData for the given routeId
 */

function useRouteLoaderData(routeId) {
  var state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);
  return state.loaderData[routeId];
}
/**
 * Returns the action data for the nearest ancestor Route action
 */

function useActionData() {
  var state = useDataRouterState(DataRouterStateHook.UseActionData);
  var route = React.useContext(RouteContext);
  !route ?  false ? 0 : UNSAFE_invariant(false) : void 0;
  return Object.values((state == null ? void 0 : state.actionData) || {})[0];
}
/**
 * Returns the nearest ancestor Route error, which could be a loader/action
 * error or a render error.  This is intended to be called from your
 * ErrorBoundary/errorElement to display a proper error message.
 */

function useRouteError() {
  var _state$errors;
  var error = react.useContext(RouteErrorContext);
  var state = useDataRouterState(DataRouterStateHook.UseRouteError);
  var routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError); // If this was a render error, we put it in a RouteError context inside
  // of RenderErrorBoundary

  if (error) {
    return error;
  } // Otherwise look for errors from our data router state

  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];
}
/**
 * Returns the happy-path data from the nearest ancestor <Await /> value
 */

function useAsyncValue() {
  var value = React.useContext(AwaitContext);
  return value == null ? void 0 : value._data;
}
/**
 * Returns the error from the nearest ancestor <Await /> value
 */

function useAsyncError() {
  var value = React.useContext(AwaitContext);
  return value == null ? void 0 : value._error;
}
var blockerId = 0;
/**
 * Allow the application to block navigations within the SPA and present the
 * user a confirmation dialog to confirm the navigation.  Mostly used to avoid
 * using half-filled form data.  This does not handle hard-reloads or
 * cross-origin navigations.
 */

function useBlocker(shouldBlock) {
  var _useDataRouterContext = useDataRouterContext(DataRouterHook.UseBlocker),
    router = _useDataRouterContext.router;
  var state = useDataRouterState(DataRouterStateHook.UseBlocker);
  var _React$useState = React.useState(function () {
      return String(++blockerId);
    }),
    _React$useState2 = _slicedToArray(_React$useState, 1),
    blockerKey = _React$useState2[0];
  var blockerFunction = React.useCallback(function (args) {
    return typeof shouldBlock === "function" ? !!shouldBlock(args) : !!shouldBlock;
  }, [shouldBlock]);
  var blocker = router.getBlocker(blockerKey, blockerFunction); // Cleanup on unmount

  React.useEffect(function () {
    return function () {
      return router.deleteBlocker(blockerKey);
    };
  }, [router, blockerKey]); // Prefer the blocker from state since DataRouterContext is memoized so this
  // ensures we update on blocker state updates

  return state.blockers.get(blockerKey) || blocker;
}
var alreadyWarned = {};
function warningOnce(key, cond, message) {
  if (!cond && !alreadyWarned[key]) {
    alreadyWarned[key] = true;
     false ? 0 : void 0;
  }
}

/**
 * Given a Remix Router instance, render the appropriate UI
 */
function RouterProvider(_ref) {
  var fallbackElement = _ref.fallbackElement,
    router = _ref.router;
  var getState = React.useCallback(function () {
    return router.state;
  }, [router]); // Sync router state to our component state to force re-renders

  var state = useSyncExternalStore(router.subscribe, getState,
  // We have to provide this so React@18 doesn't complain during hydration,
  // but we pass our serialized hydration data into the router so state here
  // is already synced with what the server saw
  getState);
  var navigator = React.useMemo(function () {
    return {
      createHref: router.createHref,
      encodeLocation: router.encodeLocation,
      go: function go(n) {
        return router.navigate(n);
      },
      push: function push(to, state, opts) {
        return router.navigate(to, {
          state: state,
          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
        });
      },
      replace: function replace(to, state, opts) {
        return router.navigate(to, {
          replace: true,
          state: state,
          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
        });
      }
    };
  }, [router]);
  var basename = router.basename || "/";
  var dataRouterContext = React.useMemo(function () {
    return {
      router: router,
      navigator: navigator,
      static: false,
      basename: basename
    };
  }, [router, navigator, basename]); // The fragment and {null} here are important!  We need them to keep React 18's
  // useId happy when we are server-rendering since we may have a <script> here
  // containing the hydrated server-side staticContext (from StaticRouterProvider).
  // useId relies on the component tree structure to generate deterministic id's
  // so we need to ensure it remains the same on the client even though
  // we don't need the <script> tag

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {
    value: dataRouterContext
  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {
    value: state
  }, /*#__PURE__*/React.createElement(dist_Router, {
    basename: router.basename,
    location: router.state.location,
    navigationType: router.state.historyAction,
    navigator: navigator
  }, router.state.initialized ? /*#__PURE__*/React.createElement(Routes, null) : fallbackElement))), null);
}

/**
 * A <Router> that stores all entries in memory.
 *
 * @see https://reactrouter.com/router-components/memory-router
 */
function MemoryRouter(_ref2) {
  var basename = _ref2.basename,
    children = _ref2.children,
    initialEntries = _ref2.initialEntries,
    initialIndex = _ref2.initialIndex;
  var historyRef = React.useRef();
  if (historyRef.current == null) {
    historyRef.current = createMemoryHistory({
      initialEntries: initialEntries,
      initialIndex: initialIndex,
      v5Compat: true
    });
  }
  var history = historyRef.current;
  var _React$useState3 = React.useState({
      action: history.action,
      location: history.location
    }),
    _React$useState4 = _slicedToArray(_React$useState3, 2),
    state = _React$useState4[0],
    setState = _React$useState4[1];
  React.useLayoutEffect(function () {
    return history.listen(setState);
  }, [history]);
  return /*#__PURE__*/React.createElement(dist_Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}

/**
 * Changes the current location.
 *
 * Note: This API is mostly useful in React.Component subclasses that are not
 * able to use hooks. In functional components, we recommend you use the
 * `useNavigate` hook instead.
 *
 * @see https://reactrouter.com/components/navigate
 */
function Navigate(_ref3) {
  var to = _ref3.to,
    replace = _ref3.replace,
    state = _ref3.state,
    relative = _ref3.relative;
  !useInRouterContext() ?  false ? 0 : UNSAFE_invariant(false) : void 0;
   false ? 0 : void 0;
  var dataRouterState = React.useContext(DataRouterStateContext);
  var navigate = dist_useNavigate();
  React.useEffect(function () {
    // Avoid kicking off multiple navigations if we're in the middle of a
    // data-router navigation, since components get re-rendered when we enter
    // a submitting/loading state
    if (dataRouterState && dataRouterState.navigation.state !== "idle") {
      return;
    }
    navigate(to, {
      replace: replace,
      state: state,
      relative: relative
    });
  });
  return null;
}

/**
 * Renders the child route's element, if there is one.
 *
 * @see https://reactrouter.com/components/outlet
 */
function Outlet(props) {
  return useOutlet(props.context);
}

/**
 * Declares an element that should be rendered at a certain URL path.
 *
 * @see https://reactrouter.com/components/route
 */
function Route(_props) {
   false ? 0 : invariant(false);
}

/**
 * Provides location context for the rest of the app.
 *
 * Note: You usually won't render a <Router> directly. Instead, you'll render a
 * router that is more specific to your environment such as a <BrowserRouter>
 * in web browsers or a <StaticRouter> for server rendering.
 *
 * @see https://reactrouter.com/router-components/router
 */
function dist_Router(_ref4) {
  var _ref4$basename = _ref4.basename,
    basenameProp = _ref4$basename === void 0 ? "/" : _ref4$basename,
    _ref4$children = _ref4.children,
    children = _ref4$children === void 0 ? null : _ref4$children,
    locationProp = _ref4.location,
    _ref4$navigationType = _ref4.navigationType,
    navigationType = _ref4$navigationType === void 0 ? Action.Pop : _ref4$navigationType,
    navigator = _ref4.navigator,
    _ref4$static = _ref4.static,
    staticProp = _ref4$static === void 0 ? false : _ref4$static;
  !!useInRouterContext() ?  false ? 0 : invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control
  // the enforcement of trailing slashes throughout the app

  var basename = basenameProp.replace(/^\/*/, "/");
  var navigationContext = react.useMemo(function () {
    return {
      basename: basename,
      navigator: navigator,
      static: staticProp
    };
  }, [basename, navigator, staticProp]);
  if (typeof locationProp === "string") {
    locationProp = parsePath(locationProp);
  }
  var _locationProp = locationProp,
    _locationProp$pathnam = _locationProp.pathname,
    pathname = _locationProp$pathnam === void 0 ? "/" : _locationProp$pathnam,
    _locationProp$search = _locationProp.search,
    search = _locationProp$search === void 0 ? "" : _locationProp$search,
    _locationProp$hash = _locationProp.hash,
    hash = _locationProp$hash === void 0 ? "" : _locationProp$hash,
    _locationProp$state = _locationProp.state,
    state = _locationProp$state === void 0 ? null : _locationProp$state,
    _locationProp$key = _locationProp.key,
    key = _locationProp$key === void 0 ? "default" : _locationProp$key;
  var locationContext = react.useMemo(function () {
    var trailingPathname = stripBasename(pathname, basename);
    if (trailingPathname == null) {
      return null;
    }
    return {
      location: {
        pathname: trailingPathname,
        search: search,
        hash: hash,
        state: state,
        key: key
      },
      navigationType: navigationType
    };
  }, [basename, pathname, search, hash, state, key, navigationType]);
   false ? 0 : void 0;
  if (locationContext == null) {
    return null;
  }
  return /*#__PURE__*/react.createElement(NavigationContext.Provider, {
    value: navigationContext
  }, /*#__PURE__*/react.createElement(LocationContext.Provider, {
    children: children,
    value: locationContext
  }));
}

/**
 * A container for a nested tree of <Route> elements that renders the branch
 * that best matches the current location.
 *
 * @see https://reactrouter.com/components/routes
 */
function Routes(_ref5) {
  var children = _ref5.children,
    location = _ref5.location;
  var dataRouterContext = react.useContext(DataRouterContext); // When in a DataRouterContext _without_ children, we use the router routes
  // directly.  If we have children, then we're in a descendant tree and we
  // need to use child routes.

  var routes = dataRouterContext && !children ? dataRouterContext.router.routes : createRoutesFromChildren(children);
  return useRoutes(routes, location);
}

/**
 * Component to use for rendering lazily loaded data from returning defer()
 * in a loader function
 */
function Await(_ref6) {
  var children = _ref6.children,
    errorElement = _ref6.errorElement,
    resolve = _ref6.resolve;
  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {
    resolve: resolve,
    errorElement: errorElement
  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));
}
var AwaitRenderStatus;
(function (AwaitRenderStatus) {
  AwaitRenderStatus[AwaitRenderStatus["pending"] = 0] = "pending";
  AwaitRenderStatus[AwaitRenderStatus["success"] = 1] = "success";
  AwaitRenderStatus[AwaitRenderStatus["error"] = 2] = "error";
})(AwaitRenderStatus || (AwaitRenderStatus = {}));
var neverSettledPromise = new Promise(function () {});
var AwaitErrorBoundary = /*#__PURE__*/function (_React$Component2) {
  _inherits(AwaitErrorBoundary, _React$Component2);
  var _super2 = _createSuper(AwaitErrorBoundary);
  function AwaitErrorBoundary(props) {
    var _this2;
    classCallCheck_classCallCheck(this, AwaitErrorBoundary);
    _this2 = _super2.call(this, props);
    _this2.state = {
      error: null
    };
    return _this2;
  }
  createClass_createClass(AwaitErrorBoundary, [{
    key: "componentDidCatch",
    value: function componentDidCatch(error, errorInfo) {
      console.error("<Await> caught the following error during render", error, errorInfo);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        children = _this$props.children,
        errorElement = _this$props.errorElement,
        resolve = _this$props.resolve;
      var promise = null;
      var status = AwaitRenderStatus.pending;
      if (!(resolve instanceof Promise)) {
        // Didn't get a promise - provide as a resolved promise
        status = AwaitRenderStatus.success;
        promise = Promise.resolve();
        Object.defineProperty(promise, "_tracked", {
          get: function get() {
            return true;
          }
        });
        Object.defineProperty(promise, "_data", {
          get: function get() {
            return resolve;
          }
        });
      } else if (this.state.error) {
        // Caught a render error, provide it as a rejected promise
        status = AwaitRenderStatus.error;
        var renderError = this.state.error;
        promise = Promise.reject().catch(function () {}); // Avoid unhandled rejection warnings

        Object.defineProperty(promise, "_tracked", {
          get: function get() {
            return true;
          }
        });
        Object.defineProperty(promise, "_error", {
          get: function get() {
            return renderError;
          }
        });
      } else if (resolve._tracked) {
        // Already tracked promise - check contents
        promise = resolve;
        status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;
      } else {
        // Raw (untracked) promise - track it
        status = AwaitRenderStatus.pending;
        Object.defineProperty(resolve, "_tracked", {
          get: function get() {
            return true;
          }
        });
        promise = resolve.then(function (data) {
          return Object.defineProperty(resolve, "_data", {
            get: function get() {
              return data;
            }
          });
        }, function (error) {
          return Object.defineProperty(resolve, "_error", {
            get: function get() {
              return error;
            }
          });
        });
      }
      if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {
        // Freeze the UI by throwing a never resolved promise
        throw neverSettledPromise;
      }
      if (status === AwaitRenderStatus.error && !errorElement) {
        // No errorElement, throw to the nearest route-level error boundary
        throw promise._error;
      }
      if (status === AwaitRenderStatus.error) {
        // Render via our errorElement
        return /*#__PURE__*/react.createElement(AwaitContext.Provider, {
          value: promise,
          children: errorElement
        });
      }
      if (status === AwaitRenderStatus.success) {
        // Render children with resolved value
        return /*#__PURE__*/react.createElement(AwaitContext.Provider, {
          value: promise,
          children: children
        });
      } // Throw to the suspense boundary

      throw promise;
    }
  }], [{
    key: "getDerivedStateFromError",
    value: function getDerivedStateFromError(error) {
      return {
        error: error
      };
    }
  }]);
  return AwaitErrorBoundary;
}(react.Component);
/**
 * @private
 * Indirection to leverage useAsyncValue for a render-prop API on <Await>
 */
function ResolveAwait(_ref7) {
  var children = _ref7.children;
  var data = useAsyncValue();
  var toRender = typeof children === "function" ? children(data) : children;
  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);
} ///////////////////////////////////////////////////////////////////////////////
// UTILS
///////////////////////////////////////////////////////////////////////////////

/**
 * Creates a route config from a React "children" object, which is usually
 * either a `<Route>` element or an array of them. Used internally by
 * `<Routes>` to create a route config from its children.
 *
 * @see https://reactrouter.com/utils/create-routes-from-children
 */

function createRoutesFromChildren(children, parentPath) {
  if (parentPath === void 0) {
    parentPath = [];
  }
  var routes = [];
  react.Children.forEach(children, function (element, index) {
    if (! /*#__PURE__*/react.isValidElement(element)) {
      // Ignore non-elements. This allows people to more easily inline
      // conditionals in their route config.
      return;
    }
    var treePath = [].concat(toConsumableArray_toConsumableArray(parentPath), [index]);
    if (element.type === react.Fragment) {
      // Transparently support React.Fragment and its children.
      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));
      return;
    }
    !(element.type === Route) ?  false ? 0 : invariant(false) : void 0;
    !(!element.props.index || !element.props.children) ?  false ? 0 : invariant(false) : void 0;
    var route = {
      id: element.props.id || treePath.join("-"),
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      Component: element.props.Component,
      index: element.props.index,
      path: element.props.path,
      loader: element.props.loader,
      action: element.props.action,
      errorElement: element.props.errorElement,
      ErrorBoundary: element.props.ErrorBoundary,
      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,
      shouldRevalidate: element.props.shouldRevalidate,
      handle: element.props.handle,
      lazy: element.props.lazy
    };
    if (element.props.children) {
      route.children = createRoutesFromChildren(element.props.children, treePath);
    }
    routes.push(route);
  });
  return routes;
}
/**
 * Renders the result of `matchRoutes()` into a React element.
 */

function renderMatches(matches) {
  return _renderMatches(matches);
}
function detectErrorBoundary(route) {
  if (false) {} // Note: this check also occurs in createRoutesFromChildren so update
  // there if you change this

  return Boolean(route.ErrorBoundary) || Boolean(route.errorElement);
}
function createMemoryRouter(routes, opts) {
  return createRouter({
    basename: opts == null ? void 0 : opts.basename,
    future: opts == null ? void 0 : opts.future,
    history: createMemoryHistory({
      initialEntries: opts == null ? void 0 : opts.initialEntries,
      initialIndex: opts == null ? void 0 : opts.initialIndex
    }),
    hydrationData: opts == null ? void 0 : opts.hydrationData,
    routes: routes,
    detectErrorBoundary: detectErrorBoundary
  }).initialize();
} ///////////////////////////////////////////////////////////////////////////////


;// CONCATENATED MODULE: ./node_modules/react-router-dom/dist/index.js



/**
 * React Router DOM v6.10.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */




function react_router_dom_dist_extends() {
  react_router_dom_dist_extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return react_router_dom_dist_extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
var defaultMethod = "get";
var defaultEncType = "application/x-www-form-urlencoded";
function isHtmlElement(object) {
  return object != null && typeof object.tagName === "string";
}
function isButtonElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "button";
}
function isFormElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "form";
}
function isInputElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "input";
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function shouldProcessLinkClick(event, target) {
  return event.button === 0 && (
  // Ignore everything but left clicks
  !target || target === "_self") &&
  // Let browser handle "target=_blank" etc.
  !isModifiedEvent(event) // Ignore clicks with modifier keys
  ;
}
/**
 * Creates a URLSearchParams object using the given initializer.
 *
 * This is identical to `new URLSearchParams(init)` except it also
 * supports arrays as values in the object form of the initializer
 * instead of just strings. This is convenient when you need multiple
 * values for a given key, but don't want to use an array initializer.
 *
 * For example, instead of:
 *
 *   let searchParams = new URLSearchParams([
 *     ['sort', 'name'],
 *     ['sort', 'price']
 *   ]);
 *
 * you can do:
 *
 *   let searchParams = createSearchParams({
 *     sort: ['name', 'price']
 *   });
 */

function createSearchParams(init) {
  if (init === void 0) {
    init = "";
  }
  return new URLSearchParams(typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {
    var value = init[key];
    return memo.concat(Array.isArray(value) ? value.map(function (v) {
      return [key, v];
    }) : [[key, value]]);
  }, []));
}
function getSearchParamsForLocation(locationSearch, defaultSearchParams) {
  var searchParams = createSearchParams(locationSearch);
  if (defaultSearchParams) {
    var _iterator = _createForOfIteratorHelper(defaultSearchParams.keys()),
      _step;
    try {
      var _loop = function _loop() {
        var key = _step.value;
        if (!searchParams.has(key)) {
          defaultSearchParams.getAll(key).forEach(function (value) {
            searchParams.append(key, value);
          });
        }
      };
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        _loop();
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  return searchParams;
}
function getFormSubmissionInfo(target, defaultAction, options) {
  var method;
  var action;
  var encType;
  var formData;
  if (isFormElement(target)) {
    var submissionTrigger = options.submissionTrigger;
    method = options.method || target.getAttribute("method") || defaultMethod;
    action = options.action || target.getAttribute("action") || defaultAction;
    encType = options.encType || target.getAttribute("enctype") || defaultEncType;
    formData = new FormData(target);
    if (submissionTrigger && submissionTrigger.name) {
      formData.append(submissionTrigger.name, submissionTrigger.value);
    }
  } else if (isButtonElement(target) || isInputElement(target) && (target.type === "submit" || target.type === "image")) {
    var form = target.form;
    if (form == null) {
      throw new Error("Cannot submit a <button> or <input type=\"submit\"> without a <form>");
    } // <button>/<input type="submit"> may override attributes of <form>

    method = options.method || target.getAttribute("formmethod") || form.getAttribute("method") || defaultMethod;
    action = options.action || target.getAttribute("formaction") || form.getAttribute("action") || defaultAction;
    encType = options.encType || target.getAttribute("formenctype") || form.getAttribute("enctype") || defaultEncType;
    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name
    // matches an existing input name

    if (target.name) {
      formData.append(target.name, target.value);
    }
  } else if (isHtmlElement(target)) {
    throw new Error("Cannot submit element that is not <form>, <button>, or " + "<input type=\"submit|image\">");
  } else {
    method = options.method || defaultMethod;
    action = options.action || defaultAction;
    encType = options.encType || defaultEncType;
    if (target instanceof FormData) {
      formData = target;
    } else {
      formData = new FormData();
      if (target instanceof URLSearchParams) {
        var _iterator2 = _createForOfIteratorHelper(target),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var _step2$value = _slicedToArray(_step2.value, 2),
              name = _step2$value[0],
              value = _step2$value[1];
            formData.append(name, value);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      } else if (target != null) {
        for (var _i = 0, _Object$keys = Object.keys(target); _i < _Object$keys.length; _i++) {
          var _name = _Object$keys[_i];
          formData.append(_name, target[_name]);
        }
      }
    }
  }
  var _window$location = window.location,
    protocol = _window$location.protocol,
    host = _window$location.host;
  var url = new URL(action, protocol + "//" + host);
  return {
    url: url,
    method: method.toLowerCase(),
    encType: encType,
    formData: formData
  };
}
var _excluded = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset"],
  _excluded2 = (/* unused pure expression or super */ null && (["aria-current", "caseSensitive", "className", "end", "style", "to", "children"])),
  _excluded3 = (/* unused pure expression or super */ null && (["reloadDocument", "replace", "method", "action", "onSubmit", "fetcherKey", "routeId", "relative", "preventScrollReset"]));
function createBrowserRouter(routes, opts) {
  return createRouter({
    basename: opts == null ? void 0 : opts.basename,
    future: opts == null ? void 0 : opts.future,
    history: createBrowserHistory({
      window: opts == null ? void 0 : opts.window
    }),
    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),
    routes: routes,
    detectErrorBoundary: UNSAFE_detectErrorBoundary
  }).initialize();
}
function createHashRouter(routes, opts) {
  return createRouter({
    basename: opts == null ? void 0 : opts.basename,
    future: opts == null ? void 0 : opts.future,
    history: createHashHistory({
      window: opts == null ? void 0 : opts.window
    }),
    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),
    routes: routes,
    detectErrorBoundary: UNSAFE_detectErrorBoundary
  }).initialize();
}
function parseHydrationData() {
  var _window;
  var state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;
  if (state && state.errors) {
    state = react_router_dom_dist_extends({}, state, {
      errors: deserializeErrors(state.errors)
    });
  }
  return state;
}
function deserializeErrors(errors) {
  if (!errors) return null;
  var entries = Object.entries(errors);
  var serialized = {};
  for (var _i2 = 0, _entries = entries; _i2 < _entries.length; _i2++) {
    var _entries$_i = _slicedToArray(_entries[_i2], 2),
      key = _entries$_i[0],
      val = _entries$_i[1];
    // Hey you!  If you change this, please change the corresponding logic in
    // serializeErrors in react-router-dom/server.tsx :)
    if (val && val.__type === "RouteErrorResponse") {
      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);
    } else if (val && val.__type === "Error") {
      var error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with
      // because we don't serialize SSR stack traces for security reasons

      error.stack = "";
      serialized[key] = error;
    } else {
      serialized[key] = val;
    }
  }
  return serialized;
}
/**
 * A `<Router>` for use in web browsers. Provides the cleanest URLs.
 */

function BrowserRouter(_ref) {
  var basename = _ref.basename,
    children = _ref.children,
    window = _ref.window;
  var historyRef = React.useRef();
  if (historyRef.current == null) {
    historyRef.current = createBrowserHistory({
      window: window,
      v5Compat: true
    });
  }
  var history = historyRef.current;
  var _React$useState = React.useState({
      action: history.action,
      location: history.location
    }),
    _React$useState2 = _slicedToArray(_React$useState, 2),
    state = _React$useState2[0],
    setState = _React$useState2[1];
  React.useLayoutEffect(function () {
    return history.listen(setState);
  }, [history]);
  return /*#__PURE__*/React.createElement(Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
/**
 * A `<Router>` for use in web browsers. Stores the location in the hash
 * portion of the URL so it is not sent to the server.
 */

function HashRouter(_ref2) {
  var basename = _ref2.basename,
    children = _ref2.children,
    window = _ref2.window;
  var historyRef = react.useRef();
  if (historyRef.current == null) {
    historyRef.current = router_createHashHistory({
      window: window,
      v5Compat: true
    });
  }
  var history = historyRef.current;
  var _React$useState3 = react.useState({
      action: history.action,
      location: history.location
    }),
    _React$useState4 = slicedToArray_slicedToArray(_React$useState3, 2),
    state = _React$useState4[0],
    setState = _React$useState4[1];
  react.useLayoutEffect(function () {
    return history.listen(setState);
  }, [history]);
  return /*#__PURE__*/react.createElement(dist_Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
/**
 * A `<Router>` that accepts a pre-instantiated history object. It's important
 * to note that using your own history object is highly discouraged and may add
 * two versions of the history library to your bundles unless you use the same
 * version of the history library that React Router uses internally.
 */

function HistoryRouter(_ref3) {
  var basename = _ref3.basename,
    children = _ref3.children,
    history = _ref3.history;
  var _React$useState5 = React.useState({
      action: history.action,
      location: history.location
    }),
    _React$useState6 = _slicedToArray(_React$useState5, 2),
    state = _React$useState6[0],
    setState = _React$useState6[1];
  React.useLayoutEffect(function () {
    return history.listen(setState);
  }, [history]);
  return /*#__PURE__*/React.createElement(Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
if (false) {}
var dist_isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
var dist_ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
/**
 * The public API for rendering a history-aware <a>.
 */

var Link = /*#__PURE__*/react.forwardRef(function LinkWithRef(_ref4, ref) {
  var onClick = _ref4.onClick,
    relative = _ref4.relative,
    reloadDocument = _ref4.reloadDocument,
    replace = _ref4.replace,
    state = _ref4.state,
    target = _ref4.target,
    to = _ref4.to,
    preventScrollReset = _ref4.preventScrollReset,
    rest = _objectWithoutPropertiesLoose(_ref4, _excluded);
  var _React$useContext = react.useContext(NavigationContext),
    basename = _React$useContext.basename; // Rendered into <a href> for absolute URLs

  var absoluteHref;
  var isExternal = false;
  if (typeof to === "string" && dist_ABSOLUTE_URL_REGEX.test(to)) {
    // Render the absolute href server- and client-side
    absoluteHref = to; // Only check for external origins client-side

    if (dist_isBrowser) {
      var currentUrl = new URL(window.location.href);
      var targetUrl = to.startsWith("//") ? new URL(currentUrl.protocol + to) : new URL(to);
      var path = stripBasename(targetUrl.pathname, basename);
      if (targetUrl.origin === currentUrl.origin && path != null) {
        // Strip the protocol/origin/basename for same-origin absolute URLs
        to = path + targetUrl.search + targetUrl.hash;
      } else {
        isExternal = true;
      }
    }
  } // Rendered into <a href> for relative URLs

  var href = useHref(to, {
    relative: relative
  });
  var internalOnClick = useLinkClickHandler(to, {
    replace: replace,
    state: state,
    target: target,
    preventScrollReset: preventScrollReset,
    relative: relative
  });
  function handleClick(event) {
    if (onClick) onClick(event);
    if (!event.defaultPrevented) {
      internalOnClick(event);
    }
  }
  return /*#__PURE__*/(
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    react.createElement("a", react_router_dom_dist_extends({}, rest, {
      href: absoluteHref || href,
      onClick: isExternal || reloadDocument ? onClick : handleClick,
      ref: ref,
      target: target
    }))
  );
});
if (false) {}
/**
 * A <Link> wrapper that knows if it's "active" or not.
 */

var NavLink = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function NavLinkWithRef(_ref5, ref) {
  var _ref5$ariaCurrent = _ref5["aria-current"],
    ariaCurrentProp = _ref5$ariaCurrent === void 0 ? "page" : _ref5$ariaCurrent,
    _ref5$caseSensitive = _ref5.caseSensitive,
    caseSensitive = _ref5$caseSensitive === void 0 ? false : _ref5$caseSensitive,
    _ref5$className = _ref5.className,
    classNameProp = _ref5$className === void 0 ? "" : _ref5$className,
    _ref5$end = _ref5.end,
    end = _ref5$end === void 0 ? false : _ref5$end,
    styleProp = _ref5.style,
    to = _ref5.to,
    children = _ref5.children,
    rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);
  var path = useResolvedPath(to, {
    relative: rest.relative
  });
  var location = useLocation();
  var routerState = React.useContext(UNSAFE_DataRouterStateContext);
  var _React$useContext2 = React.useContext(UNSAFE_NavigationContext),
    navigator = _React$useContext2.navigator;
  var toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;
  var locationPathname = location.pathname;
  var nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;
  if (!caseSensitive) {
    locationPathname = locationPathname.toLowerCase();
    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;
    toPathname = toPathname.toLowerCase();
  }
  var isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === "/";
  var isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === "/");
  var ariaCurrent = isActive ? ariaCurrentProp : undefined;
  var className;
  if (typeof classNameProp === "function") {
    className = classNameProp({
      isActive: isActive,
      isPending: isPending
    });
  } else {
    // If the className prop is not a function, we use a default `active`
    // class for <NavLink />s that are active. In v5 `active` was the default
    // value for `activeClassName`, but we are removing that API and can still
    // use the old default behavior for a cleaner upgrade path and keep the
    // simple styling rules working as they currently do.
    className = [classNameProp, isActive ? "active" : null, isPending ? "pending" : null].filter(Boolean).join(" ");
  }
  var style = typeof styleProp === "function" ? styleProp({
    isActive: isActive,
    isPending: isPending
  }) : styleProp;
  return /*#__PURE__*/React.createElement(Link, react_router_dom_dist_extends({}, rest, {
    "aria-current": ariaCurrent,
    className: className,
    ref: ref,
    style: style,
    to: to
  }), typeof children === "function" ? children({
    isActive: isActive,
    isPending: isPending
  }) : children);
})));
if (false) {}
/**
 * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except
 * that the interaction with the server is with `fetch` instead of new document
 * requests, allowing components to add nicer UX to the page as the form is
 * submitted and returns with data.
 */

var Form = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(FormImpl, react_router_dom_dist_extends({}, props, {
    ref: ref
  }));
})));
if (false) {}
var FormImpl = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function (_ref6, forwardedRef) {
  var reloadDocument = _ref6.reloadDocument,
    replace = _ref6.replace,
    _ref6$method = _ref6.method,
    method = _ref6$method === void 0 ? defaultMethod : _ref6$method,
    action = _ref6.action,
    onSubmit = _ref6.onSubmit,
    fetcherKey = _ref6.fetcherKey,
    routeId = _ref6.routeId,
    relative = _ref6.relative,
    preventScrollReset = _ref6.preventScrollReset,
    props = _objectWithoutPropertiesLoose(_ref6, _excluded3);
  var submit = useSubmitImpl(fetcherKey, routeId);
  var formMethod = method.toLowerCase() === "get" ? "get" : "post";
  var formAction = useFormAction(action, {
    relative: relative
  });
  var submitHandler = function submitHandler(event) {
    onSubmit && onSubmit(event);
    if (event.defaultPrevented) return;
    event.preventDefault();
    var submitter = event.nativeEvent.submitter;
    var submitMethod = (submitter == null ? void 0 : submitter.getAttribute("formmethod")) || method;
    submit(submitter || event.currentTarget, {
      method: submitMethod,
      replace: replace,
      relative: relative,
      preventScrollReset: preventScrollReset
    });
  };
  return /*#__PURE__*/React.createElement("form", react_router_dom_dist_extends({
    ref: forwardedRef,
    method: formMethod,
    action: formAction,
    onSubmit: reloadDocument ? onSubmit : submitHandler
  }, props));
})));
if (false) {}
/**
 * This component will emulate the browser's scroll restoration on location
 * changes.
 */

function ScrollRestoration(_ref7) {
  var getKey = _ref7.getKey,
    storageKey = _ref7.storageKey;
  useScrollRestoration({
    getKey: getKey,
    storageKey: storageKey
  });
  return null;
}
if (false) {} //#endregion
////////////////////////////////////////////////////////////////////////////////
//#region Hooks
////////////////////////////////////////////////////////////////////////////////

var dist_DataRouterHook;
(function (DataRouterHook) {
  DataRouterHook["UseScrollRestoration"] = "useScrollRestoration";
  DataRouterHook["UseSubmitImpl"] = "useSubmitImpl";
  DataRouterHook["UseFetcher"] = "useFetcher";
})(dist_DataRouterHook || (dist_DataRouterHook = {}));
var dist_DataRouterStateHook;
(function (DataRouterStateHook) {
  DataRouterStateHook["UseFetchers"] = "useFetchers";
  DataRouterStateHook["UseScrollRestoration"] = "useScrollRestoration";
})(dist_DataRouterStateHook || (dist_DataRouterStateHook = {}));
function dist_getDataRouterConsoleError(hookName) {
  return hookName + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function dist_useDataRouterContext(hookName) {
  var ctx = React.useContext(UNSAFE_DataRouterContext);
  !ctx ?  false ? 0 : UNSAFE_invariant(false) : void 0;
  return ctx;
}
function dist_useDataRouterState(hookName) {
  var state = React.useContext(UNSAFE_DataRouterStateContext);
  !state ?  false ? 0 : UNSAFE_invariant(false) : void 0;
  return state;
}
/**
 * Handles the click behavior for router `<Link>` components. This is useful if
 * you need to create custom `<Link>` components with the same click behavior we
 * use in our exported `<Link>`.
 */

function useLinkClickHandler(to, _temp) {
  var _ref9 = _temp === void 0 ? {} : _temp,
    target = _ref9.target,
    replaceProp = _ref9.replace,
    state = _ref9.state,
    preventScrollReset = _ref9.preventScrollReset,
    relative = _ref9.relative;
  var navigate = dist_useNavigate();
  var location = dist_useLocation();
  var path = dist_useResolvedPath(to, {
    relative: relative
  });
  return react.useCallback(function (event) {
    if (shouldProcessLinkClick(event, target)) {
      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of
      // a push, so do the same here unless the replace prop is explicitly set

      var replace = replaceProp !== undefined ? replaceProp : router_createPath(location) === router_createPath(path);
      navigate(to, {
        replace: replace,
        state: state,
        preventScrollReset: preventScrollReset,
        relative: relative
      });
    }
  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);
}
/**
 * A convenient wrapper for reading and writing search parameters via the
 * URLSearchParams interface.
 */

function useSearchParams(defaultInit) {
   false ? 0 : void 0;
  var defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));
  var hasSetSearchParamsRef = React.useRef(false);
  var location = useLocation();
  var searchParams = React.useMemo(function () {
    return (
      // Only merge in the defaults if we haven't yet called setSearchParams.
      // Once we call that we want those to take precedence, otherwise you can't
      // remove a param with setSearchParams({}) if it has an initial value
      getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current)
    );
  }, [location.search]);
  var navigate = useNavigate();
  var setSearchParams = React.useCallback(function (nextInit, navigateOptions) {
    var newSearchParams = createSearchParams(typeof nextInit === "function" ? nextInit(searchParams) : nextInit);
    hasSetSearchParamsRef.current = true;
    navigate("?" + newSearchParams, navigateOptions);
  }, [navigate, searchParams]);
  return [searchParams, setSearchParams];
}
/**
 * Returns a function that may be used to programmatically submit a form (or
 * some arbitrary data) to the server.
 */

function useSubmit() {
  return useSubmitImpl();
}
function useSubmitImpl(fetcherKey, routeId) {
  var _useDataRouterContext = dist_useDataRouterContext(dist_DataRouterHook.UseSubmitImpl),
    router = _useDataRouterContext.router;
  var defaultAction = useFormAction();
  return React.useCallback(function (target, options) {
    if (options === void 0) {
      options = {};
    }
    if (typeof document === "undefined") {
      throw new Error("You are calling submit during the server render. " + "Try calling submit within a `useEffect` or callback instead.");
    }
    var _getFormSubmissionInf = getFormSubmissionInfo(target, defaultAction, options),
      method = _getFormSubmissionInf.method,
      encType = _getFormSubmissionInf.encType,
      formData = _getFormSubmissionInf.formData,
      url = _getFormSubmissionInf.url;
    var href = url.pathname + url.search;
    var opts = {
      replace: options.replace,
      preventScrollReset: options.preventScrollReset,
      formData: formData,
      formMethod: method,
      formEncType: encType
    };
    if (fetcherKey) {
      !(routeId != null) ?  false ? 0 : UNSAFE_invariant(false) : void 0;
      router.fetch(fetcherKey, routeId, href, opts);
    } else {
      router.navigate(href, opts);
    }
  }, [defaultAction, router, fetcherKey, routeId]);
}
function useFormAction(action, _temp2) {
  var _ref10 = _temp2 === void 0 ? {} : _temp2,
    relative = _ref10.relative;
  var _React$useContext3 = React.useContext(UNSAFE_NavigationContext),
    basename = _React$useContext3.basename;
  var routeContext = React.useContext(UNSAFE_RouteContext);
  !routeContext ?  false ? 0 : UNSAFE_invariant(false) : void 0;
  var _routeContext$matches = routeContext.matches.slice(-1),
    _routeContext$matches2 = _slicedToArray(_routeContext$matches, 1),
    match = _routeContext$matches2[0]; // Shallow clone path so we can modify it below, otherwise we modify the
  // object referenced by useMemo inside useResolvedPath

  var path = react_router_dom_dist_extends({}, useResolvedPath(action ? action : ".", {
    relative: relative
  })); // Previously we set the default action to ".". The problem with this is that
  // `useResolvedPath(".")` excludes search params and the hash of the resolved
  // URL. This is the intended behavior of when "." is specifically provided as
  // the form action, but inconsistent w/ browsers when the action is omitted.
  // https://github.com/remix-run/remix/issues/927

  var location = useLocation();
  if (action == null) {
    // Safe to write to these directly here since if action was undefined, we
    // would have called useResolvedPath(".") which will never include a search
    // or hash
    path.search = location.search;
    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically
    // inserted ?index param so we match the useResolvedPath search behavior
    // which would not include ?index

    if (match.route.index) {
      var params = new URLSearchParams(path.search);
      params.delete("index");
      path.search = params.toString() ? "?" + params.toString() : "";
    }
  }
  if ((!action || action === ".") && match.route.index) {
    path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
  } // If we're operating within a basename, prepend it to the pathname prior
  // to creating the form action.  If this is a root navigation, then just use
  // the raw basename which allows the basename to have full control over the
  // presence of a trailing slash on root actions

  if (basename !== "/") {
    path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
  }
  return createPath(path);
}
function createFetcherForm(fetcherKey, routeId) {
  var FetcherForm = /*#__PURE__*/React.forwardRef(function (props, ref) {
    return /*#__PURE__*/React.createElement(FormImpl, react_router_dom_dist_extends({}, props, {
      ref: ref,
      fetcherKey: fetcherKey,
      routeId: routeId
    }));
  });
  if (false) {}
  return FetcherForm;
}
var fetcherId = 0;
/**
 * Interacts with route loaders and actions without causing a navigation. Great
 * for any interaction that stays on the same page.
 */

function useFetcher() {
  var _route$matches;
  var _useDataRouterContext2 = dist_useDataRouterContext(dist_DataRouterHook.UseFetcher),
    router = _useDataRouterContext2.router;
  var route = React.useContext(UNSAFE_RouteContext);
  !route ?  false ? 0 : UNSAFE_invariant(false) : void 0;
  var routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;
  !(routeId != null) ?  false ? 0 : UNSAFE_invariant(false) : void 0;
  var _React$useState7 = React.useState(function () {
      return String(++fetcherId);
    }),
    _React$useState8 = _slicedToArray(_React$useState7, 1),
    fetcherKey = _React$useState8[0];
  var _React$useState9 = React.useState(function () {
      !routeId ?  false ? 0 : UNSAFE_invariant(false) : void 0;
      return createFetcherForm(fetcherKey, routeId);
    }),
    _React$useState10 = _slicedToArray(_React$useState9, 1),
    Form = _React$useState10[0];
  var _React$useState11 = React.useState(function () {
      return function (href) {
        !router ?  false ? 0 : UNSAFE_invariant(false) : void 0;
        !routeId ?  false ? 0 : UNSAFE_invariant(false) : void 0;
        router.fetch(fetcherKey, routeId, href);
      };
    }),
    _React$useState12 = _slicedToArray(_React$useState11, 1),
    load = _React$useState12[0];
  var submit = useSubmitImpl(fetcherKey, routeId);
  var fetcher = router.getFetcher(fetcherKey);
  var fetcherWithComponents = React.useMemo(function () {
    return react_router_dom_dist_extends({
      Form: Form,
      submit: submit,
      load: load
    }, fetcher);
  }, [fetcher, Form, submit, load]);
  React.useEffect(function () {
    // Is this busted when the React team gets real weird and calls effects
    // twice on mount?  We really just need to garbage collect here when this
    // fetcher is no longer around.
    return function () {
      if (!router) {
        console.warn("No fetcher available to clean up from useFetcher()");
        return;
      }
      router.deleteFetcher(fetcherKey);
    };
  }, [router, fetcherKey]);
  return fetcherWithComponents;
}
/**
 * Provides all fetchers currently on the page. Useful for layouts and parent
 * routes that need to provide pending/optimistic UI regarding the fetch.
 */

function useFetchers() {
  var state = dist_useDataRouterState(dist_DataRouterStateHook.UseFetchers);
  return _toConsumableArray(state.fetchers.values());
}
var SCROLL_RESTORATION_STORAGE_KEY = "react-router-scroll-positions";
var savedScrollPositions = {};
/**
 * When rendered inside a RouterProvider, will restore scroll positions on navigations
 */

function useScrollRestoration(_temp3) {
  var _ref11 = _temp3 === void 0 ? {} : _temp3,
    getKey = _ref11.getKey,
    storageKey = _ref11.storageKey;
  var _useDataRouterContext3 = dist_useDataRouterContext(dist_DataRouterHook.UseScrollRestoration),
    router = _useDataRouterContext3.router;
  var _useDataRouterState = dist_useDataRouterState(dist_DataRouterStateHook.UseScrollRestoration),
    restoreScrollPosition = _useDataRouterState.restoreScrollPosition,
    preventScrollReset = _useDataRouterState.preventScrollReset;
  var location = useLocation();
  var matches = useMatches();
  var navigation = useNavigation(); // Trigger manual scroll restoration while we're active

  React.useEffect(function () {
    window.history.scrollRestoration = "manual";
    return function () {
      window.history.scrollRestoration = "auto";
    };
  }, []); // Save positions on pagehide

  usePageHide(React.useCallback(function () {
    if (navigation.state === "idle") {
      var key = (getKey ? getKey(location, matches) : null) || location.key;
      savedScrollPositions[key] = window.scrollY;
    }
    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));
    window.history.scrollRestoration = "auto";
  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations

  if (typeof document !== "undefined") {
    // eslint-disable-next-line react-hooks/rules-of-hooks
    React.useLayoutEffect(function () {
      try {
        var sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);
        if (sessionPositions) {
          savedScrollPositions = JSON.parse(sessionPositions);
        }
      } catch (e) {// no-op, use default empty object
      }
    }, [storageKey]); // Enable scroll restoration in the router
    // eslint-disable-next-line react-hooks/rules-of-hooks

    React.useLayoutEffect(function () {
      var disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, function () {
        return window.scrollY;
      }, getKey);
      return function () {
        return disableScrollRestoration && disableScrollRestoration();
      };
    }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes
    // eslint-disable-next-line react-hooks/rules-of-hooks

    React.useLayoutEffect(function () {
      // Explicit false means don't do anything (used for submissions)
      if (restoreScrollPosition === false) {
        return;
      } // been here before, scroll to it

      if (typeof restoreScrollPosition === "number") {
        window.scrollTo(0, restoreScrollPosition);
        return;
      } // try to scroll to the hash

      if (location.hash) {
        var el = document.getElementById(location.hash.slice(1));
        if (el) {
          el.scrollIntoView();
          return;
        }
      } // Don't reset if this navigation opted out

      if (preventScrollReset === true) {
        return;
      } // otherwise go to the top on new locations

      window.scrollTo(0, 0);
    }, [location, restoreScrollPosition, preventScrollReset]);
  }
}
/**
 * Setup a callback to be fired on the window's `beforeunload` event. This is
 * useful for saving some data to `window.localStorage` just before the page
 * refreshes.
 *
 * Note: The `callback` argument should be a function created with
 * `React.useCallback()`.
 */

function useBeforeUnload(callback, options) {
  var _ref12 = options || {},
    capture = _ref12.capture;
  React.useEffect(function () {
    var opts = capture != null ? {
      capture: capture
    } : undefined;
    window.addEventListener("beforeunload", callback, opts);
    return function () {
      window.removeEventListener("beforeunload", callback, opts);
    };
  }, [callback, capture]);
}
/**
 * Setup a callback to be fired on the window's `pagehide` event. This is
 * useful for saving some data to `window.localStorage` just before the page
 * refreshes.  This event is better supported than beforeunload across browsers.
 *
 * Note: The `callback` argument should be a function created with
 * `React.useCallback()`.
 */

function usePageHide(callback, options) {
  var _ref13 = options || {},
    capture = _ref13.capture;
  React.useEffect(function () {
    var opts = capture != null ? {
      capture: capture
    } : undefined;
    window.addEventListener("pagehide", callback, opts);
    return function () {
      window.removeEventListener("pagehide", callback, opts);
    };
  }, [callback, capture]);
}
/**
 * Wrapper around useBlocker to show a window.confirm prompt to users instead
 * of building a custom UI with useBlocker.
 *
 * Warning: This has *a lot of rough edges* and behaves very differently (and
 * very incorrectly in some cases) across browsers if user click addition
 * back/forward navigations while the confirm is open.  Use at your own risk.
 */

function usePrompt(_ref8) {
  var when = _ref8.when,
    message = _ref8.message;
  var blocker = unstable_useBlocker(when);
  React.useEffect(function () {
    if (blocker.state === "blocked" && !when) {
      blocker.reset();
    }
  }, [blocker, when]);
  React.useEffect(function () {
    if (blocker.state === "blocked") {
      var proceed = window.confirm(message);
      if (proceed) {
        setTimeout(blocker.proceed, 0);
      } else {
        blocker.reset();
      }
    }
  }, [blocker, message]);
}
//#endregion


;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/common/configureDom4.js
/*
 * Copyright 2019 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
if ( true && typeof window !== "undefined" && typeof document !== "undefined") {
  // we're in browser
  __webpack_require__(137); // only import actual dom4 if we're in the browser (not server-compatible)
  // we'll still need dom4 types for the TypeScript to compile, these are included in package.json
}


;// CONCATENATED MODULE: ./node_modules/tslib/tslib.es6.js
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var _extendStatics = function extendStatics(d, b) {
  _extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
  };
  return _extendStatics(d, b);
};
function __extends(d, b) {
  if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
  _extendStatics(d, b);
  function __() {
    this.constructor = d;
  }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var _assign = function __assign() {
  _assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return _assign.apply(this, arguments);
};

function __rest(s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c = arguments.length,
    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
    d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}
function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
  function accept(f) {
    if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected");
    return f;
  }
  var kind = contextIn.kind,
    key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
  var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
  var _,
    done = false;
  for (var i = decorators.length - 1; i >= 0; i--) {
    var context = {};
    for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
    for (var p in contextIn.access) context.access[p] = contextIn.access[p];
    context.addInitializer = function (f) {
      if (done) throw new TypeError("Cannot add initializers after decoration has completed");
      extraInitializers.push(accept(f || null));
    };
    var result = (0, decorators[i])(kind === "accessor" ? {
      get: descriptor.get,
      set: descriptor.set
    } : descriptor[key], context);
    if (kind === "accessor") {
      if (result === void 0) continue;
      if (result === null || typeof result !== "object") throw new TypeError("Object expected");
      if (_ = accept(result.get)) descriptor.get = _;
      if (_ = accept(result.set)) descriptor.set = _;
      if (_ = accept(result.init)) initializers.push(_);
    } else if (_ = accept(result)) {
      if (kind === "field") initializers.push(_);else descriptor[key] = _;
    }
  }
  if (target) Object.defineProperty(target, contextIn.name, descriptor);
  done = true;
}
;
function __runInitializers(thisArg, initializers, value) {
  var useValue = arguments.length > 2;
  for (var i = 0; i < initializers.length; i++) {
    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
  }
  return useValue ? value : void 0;
}
;
function __propKey(x) {
  return typeof x === "symbol" ? x : "".concat(x);
}
;
function __setFunctionName(f, name, prefix) {
  if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
  return Object.defineProperty(f, "name", {
    configurable: true,
    value: prefix ? "".concat(prefix, " ", name) : name
  });
}
;
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_ = 0)), _) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
}
var __createBinding = Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);
  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
    desc = {
      enumerable: true,
      get: function get() {
        return m[k];
      }
    };
  }
  Object.defineProperty(o, k2, desc);
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
};
function __exportStar(m, o) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}
function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
    m = s && o[s],
    i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
    r,
    ar = [],
    e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }
  return ar;
}

/** @deprecated */
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
  return ar;
}

/** @deprecated */
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];
  return r;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
}
function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []),
    i,
    q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i;
  function verb(n) {
    if (g[n]) i[n] = function (v) {
      return new Promise(function (a, b) {
        q.push([n, v, a, b]) > 1 || resume(n, v);
      });
    };
  }
  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }
  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function () {
    return this;
  }, i;
  function verb(n, f) {
    i[n] = o[n] ? function (v) {
      return (p = !p) ? {
        value: __await(o[n](v)),
        done: false
      } : f ? f(v) : v;
    } : f;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator],
    i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i);
  function verb(n) {
    i[n] = o[n] && function (v) {
      return new Promise(function (resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }
  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function (v) {
      resolve({
        value: v,
        done: d
      });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", {
      value: raw
    });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
;
var __setModuleDefault = Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
};
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  __setModuleDefault(result, mod);
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : {
    default: mod
  };
}
function __classPrivateFieldGet(receiver, state, kind, f) {
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
  if (kind === "m") throw new TypeError("Private method is not writable");
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}
function __classPrivateFieldIn(state, receiver) {
  if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
  return typeof state === "function" ? receiver === state : state.has(receiver);
}
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/common/props.js
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var DISPLAYNAME_PREFIX = "Blueprint4";
/** A collection of curated prop keys used across our Components which are not valid HTMLElement props. */
var INVALID_PROPS = ["active", "alignText", "asyncControl", "containerRef", "current", "elementRef", "fill", "icon", "inputClassName", "inputRef", "intent", "inline", "large", "loading", "leftElement", "leftIcon", "minimal", "onRemove", "outlined", "panel", "panelClassName", "popoverProps", "rightElement", "rightIcon", "round", "small", "tagName", "text"];
/**
 * Typically applied to HTMLElements to filter out disallowed props. When applied to a Component,
 * can filter props from being passed down to the children. Can also filter by a combined list of
 * supplied prop keys and the denylist (only appropriate for HTMLElements).
 *
 * @param props The original props object to filter down.
 * @param {string[]} invalidProps If supplied, overwrites the default denylist.
 * @param {boolean} shouldMerge If true, will merge supplied invalidProps and denylist together.
 */
function removeNonHTMLProps(props, invalidProps, shouldMerge) {
  if (invalidProps === void 0) {
    invalidProps = INVALID_PROPS;
  }
  if (shouldMerge === void 0) {
    shouldMerge = false;
  }
  if (shouldMerge) {
    invalidProps = invalidProps.concat(INVALID_PROPS);
  }
  return invalidProps.reduce(function (prev, curr) {
    // Props with hyphens (e.g. data-*) are always considered html props
    if (curr.indexOf("-") !== -1) {
      return prev;
    }
    if (prev.hasOwnProperty(curr)) {
      delete prev[curr];
    }
    return prev;
  }, _assign({}, props));
}
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/common/refs.js
/*
 * Copyright 2020 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function isRefObject(value) {
  return value != null && typeof value !== "function";
}
function isRefCallback(value) {
  return typeof value === "function";
}
/**
 * Assign the given ref to a target, either a React ref object or a callback which takes the ref as its first argument.
 */
function setRef(refTarget, ref) {
  if (isRefObject(refTarget)) {
    // HACKHACK: .current property is readonly
    refTarget.current = ref;
  } else if (isRefCallback(refTarget)) {
    refTarget(ref);
  }
}
/** @deprecated use mergeRefs() instead */
function combineRefs(ref1, ref2) {
  return mergeRefs(ref1, ref2);
}
/**
 * Utility for merging refs into one singular callback ref.
 * If using in a functional component, would recomend using `useMemo` to preserve function identity.
 */
function mergeRefs() {
  var refs = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    refs[_i] = arguments[_i];
  }
  return function (value) {
    refs.forEach(function (ref) {
      setRef(ref, value);
    });
  };
}
function getRef(ref) {
  var _a;
  if (ref === null) {
    return null;
  }
  return (_a = ref.current) !== null && _a !== void 0 ? _a : ref;
}
/**
 * Creates a ref handler which assigns the ref returned by React for a mounted component to a field on the target object.
 * The target object is usually a component class.
 *
 * If provided, it will also update the given `refProp` with the value of the ref.
 */
function refHandler(refTargetParent, refTargetKey, refProp) {
  return function (ref) {
    refTargetParent[refTargetKey] = ref;
    setRef(refProp, ref);
  };
}
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(694);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/common/keys.js
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var BACKSPACE = 8;
var TAB = 9;
var ENTER = 13;
var SHIFT = 16;
var ESCAPE = 27;
var SPACE = 32;
var ARROW_LEFT = 37;
var ARROW_UP = 38;
var ARROW_RIGHT = 39;
var ARROW_DOWN = 40;
var DELETE = 46;
/** Returns whether the key code is `enter` or `space`, the two keys that can click a button. */
function isKeyboardClick(keyCode) {
  return keyCode === ENTER || keyCode === SPACE;
}
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/common/alignment.js
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Alignment along the horizontal axis. */
var Alignment = {
  CENTER: "center",
  LEFT: "left",
  RIGHT: "right"
};
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/common/elevation.js
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// tslint:disable:object-literal-sort-keys
var Elevation = {
  ZERO: 0,
  ONE: 1,
  TWO: 2,
  THREE: 3,
  FOUR: 4
};
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/common/intent.js
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// tslint:disable:object-literal-sort-keys
/**
 * The four basic intents.
 */
var Intent = {
  NONE: "none",
  PRIMARY: "primary",
  SUCCESS: "success",
  WARNING: "warning",
  DANGER: "danger"
};
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/common/position.js
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Position = {
  BOTTOM: "bottom",
  BOTTOM_LEFT: "bottom-left",
  BOTTOM_RIGHT: "bottom-right",
  LEFT: "left",
  LEFT_BOTTOM: "left-bottom",
  LEFT_TOP: "left-top",
  RIGHT: "right",
  RIGHT_BOTTOM: "right-bottom",
  RIGHT_TOP: "right-top",
  TOP: "top",
  TOP_LEFT: "top-left",
  TOP_RIGHT: "top-right"
};
function isPositionHorizontal(position) {
  /* istanbul ignore next */
  return position === Position.TOP || position === Position.TOP_LEFT || position === Position.TOP_RIGHT || position === Position.BOTTOM || position === Position.BOTTOM_LEFT || position === Position.BOTTOM_RIGHT;
}
function isPositionVertical(position) {
  /* istanbul ignore next */
  return position === Position.LEFT || position === Position.LEFT_TOP || position === Position.LEFT_BOTTOM || position === Position.RIGHT || position === Position.RIGHT_TOP || position === Position.RIGHT_BOTTOM;
}
function getPositionIgnoreAngles(position) {
  if (position === Position.TOP || position === Position.TOP_LEFT || position === Position.TOP_RIGHT) {
    return Position.TOP;
  } else if (position === Position.BOTTOM || position === Position.BOTTOM_LEFT || position === Position.BOTTOM_RIGHT) {
    return Position.BOTTOM;
  } else if (position === Position.LEFT || position === Position.LEFT_TOP || position === Position.LEFT_BOTTOM) {
    return Position.LEFT;
  } else {
    return Position.RIGHT;
  }
}
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/common/classes.js
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a, _b, _c, _d;




var NS = "bp4";
if (typeof process !== "undefined") {
  NS = (_d = (_b = (_a = ({"NODE_ENV":"production","PUBLIC_URL":"","WDS_SOCKET_HOST":undefined,"WDS_SOCKET_PATH":undefined,"WDS_SOCKET_PORT":undefined,"FAST_REFRESH":true})) === null || _a === void 0 ? void 0 : _a.BLUEPRINT_NAMESPACE) !== null && _b !== void 0 ? _b : (_c = ({"NODE_ENV":"production","PUBLIC_URL":"","WDS_SOCKET_HOST":undefined,"WDS_SOCKET_PATH":undefined,"WDS_SOCKET_PORT":undefined,"FAST_REFRESH":true})) === null || _c === void 0 ? void 0 : _c.REACT_APP_BLUEPRINT_NAMESPACE) !== null && _d !== void 0 ? _d : NS;
}
// modifiers
var ACTIVE = "".concat(NS, "-active");
var ALIGN_LEFT = "".concat(NS, "-align-left");
var ALIGN_RIGHT = "".concat(NS, "-align-right");
var COMPACT = "".concat(NS, "-compact");
var DARK = "".concat(NS, "-dark");
var DISABLED = "".concat(NS, "-disabled");
var FILL = "".concat(NS, "-fill");
var FIXED = "".concat(NS, "-fixed");
var FIXED_TOP = "".concat(NS, "-fixed-top");
var INLINE = "".concat(NS, "-inline");
var INTERACTIVE = "".concat(NS, "-interactive");
var LARGE = "".concat(NS, "-large");
var LOADING = "".concat(NS, "-loading");
var MINIMAL = "".concat(NS, "-minimal");
var OUTLINED = "".concat(NS, "-outlined");
var MULTILINE = "".concat(NS, "-multiline");
var READ_ONLY = "".concat(NS, "-read-only");
var ROUND = "".concat(NS, "-round");
var SELECTED = "".concat(NS, "-selected");
var SMALL = "".concat(NS, "-small");
var VERTICAL = "".concat(NS, "-vertical");
var POSITION_TOP = positionClass(Position.TOP);
var POSITION_BOTTOM = positionClass(Position.BOTTOM);
var POSITION_LEFT = positionClass(Position.LEFT);
var POSITION_RIGHT = positionClass(Position.RIGHT);
var ELEVATION_0 = elevationClass(Elevation.ZERO);
var ELEVATION_1 = elevationClass(Elevation.ONE);
var ELEVATION_2 = elevationClass(Elevation.TWO);
var ELEVATION_3 = elevationClass(Elevation.THREE);
var ELEVATION_4 = elevationClass(Elevation.FOUR);
var INTENT_PRIMARY = intentClass(Intent.PRIMARY);
var INTENT_SUCCESS = intentClass(Intent.SUCCESS);
var INTENT_WARNING = intentClass(Intent.WARNING);
var INTENT_DANGER = intentClass(Intent.DANGER);
var FOCUS_DISABLED = "".concat(NS, "-focus-disabled");
var FOCUS_STYLE_MANAGER_IGNORE = "".concat(NS, "-focus-style-manager-ignore");
// text utilities
var UI_TEXT = "".concat(NS, "-ui-text");
var RUNNING_TEXT = "".concat(NS, "-running-text");
var MONOSPACE_TEXT = "".concat(NS, "-monospace-text");
var TEXT_LARGE = "".concat(NS, "-text-large");
var TEXT_SMALL = "".concat(NS, "-text-small");
var TEXT_MUTED = "".concat(NS, "-text-muted");
var TEXT_DISABLED = "".concat(NS, "-text-disabled");
var TEXT_OVERFLOW_ELLIPSIS = "".concat(NS, "-text-overflow-ellipsis");
// textual elements
var BLOCKQUOTE = "".concat(NS, "-blockquote");
var CODE = "".concat(NS, "-code");
var CODE_BLOCK = "".concat(NS, "-code-block");
var HEADING = "".concat(NS, "-heading");
var LIST = "".concat(NS, "-list");
var LIST_UNSTYLED = "".concat(NS, "-list-unstyled");
var RTL = "".concat(NS, "-rtl");
// components
var ALERT = "".concat(NS, "-alert");
var ALERT_BODY = "".concat(ALERT, "-body");
var ALERT_CONTENTS = "".concat(ALERT, "-contents");
var ALERT_FOOTER = "".concat(ALERT, "-footer");
var BREADCRUMB = "".concat(NS, "-breadcrumb");
var BREADCRUMB_CURRENT = "".concat(BREADCRUMB, "-current");
var BREADCRUMBS = "".concat(BREADCRUMB, "s");
var BREADCRUMBS_COLLAPSED = "".concat(BREADCRUMB, "s-collapsed");
var BUTTON = "".concat(NS, "-button");
var BUTTON_GROUP = "".concat(BUTTON, "-group");
var BUTTON_SPINNER = "".concat(BUTTON, "-spinner");
var BUTTON_TEXT = "".concat(BUTTON, "-text");
var CALLOUT = "".concat(NS, "-callout");
var CALLOUT_ICON = "".concat(CALLOUT, "-icon");
var CARD = "".concat(NS, "-card");
var COLLAPSE = "".concat(NS, "-collapse");
var COLLAPSE_BODY = "".concat(COLLAPSE, "-body");
var COLLAPSIBLE_LIST = "".concat(NS, "-collapse-list");
var CONTEXT_MENU = "".concat(NS, "-context-menu");
var CONTEXT_MENU_POPOVER_TARGET = "".concat(CONTEXT_MENU, "-popover-target");
var CONTROL_GROUP = "".concat(NS, "-control-group");
var DIALOG = "".concat(NS, "-dialog");
var DIALOG_CONTAINER = "".concat(DIALOG, "-container");
var DIALOG_HEADER = "".concat(DIALOG, "-header");
var DIALOG_BODY = "".concat(DIALOG, "-body");
var DIALOG_BODY_SCROLL_CONTAINER = "".concat(DIALOG, "-body-scroll-container");
var DIALOG_CLOSE_BUTTON = "".concat(DIALOG, "-close-button");
var DIALOG_FOOTER = "".concat(DIALOG, "-footer");
var DIALOG_FOOTER_FIXED = "".concat(DIALOG, "-footer-fixed");
var DIALOG_FOOTER_MAIN_SECTION = "".concat(DIALOG, "-footer-main-section");
var DIALOG_FOOTER_ACTIONS = "".concat(DIALOG, "-footer-actions");
var DIALOG_STEP = "".concat(NS, "-dialog-step");
var DIALOG_STEP_CONTAINER = "".concat(DIALOG_STEP, "-container");
var DIALOG_STEP_TITLE = "".concat(DIALOG_STEP, "-title");
var DIALOG_STEP_ICON = "".concat(DIALOG_STEP, "-icon");
var DIALOG_STEP_VIEWED = "".concat(DIALOG_STEP, "-viewed");
var DIVIDER = "".concat(NS, "-divider");
var DRAWER = "".concat(NS, "-drawer");
var DRAWER_BODY = "".concat(DRAWER, "-body");
var DRAWER_FOOTER = "".concat(DRAWER, "-footer");
var DRAWER_HEADER = "".concat(DRAWER, "-header");
var EDITABLE_TEXT = "".concat(NS, "-editable-text");
var EDITABLE_TEXT_CONTENT = "".concat(EDITABLE_TEXT, "-content");
var EDITABLE_TEXT_EDITING = "".concat(EDITABLE_TEXT, "-editing");
var EDITABLE_TEXT_INPUT = "".concat(EDITABLE_TEXT, "-input");
var EDITABLE_TEXT_PLACEHOLDER = "".concat(EDITABLE_TEXT, "-placeholder");
var FLEX_EXPANDER = "".concat(NS, "-flex-expander");
var HTML_SELECT = "".concat(NS, "-html-select");
/** @deprecated prefer `<HTMLSelect>` component */
var SELECT = "".concat(NS, "-select");
var HTML_TABLE = "".concat(NS, "-html-table");
var HTML_TABLE_BORDERED = "".concat(HTML_TABLE, "-bordered");
/** @deprecated prefer `COMPACT` */
var HTML_TABLE_CONDENSED = "".concat(HTML_TABLE, "-condensed");
var HTML_TABLE_STRIPED = "".concat(HTML_TABLE, "-striped");
var INPUT = "".concat(NS, "-input");
var INPUT_GHOST = "".concat(INPUT, "-ghost");
var INPUT_GROUP = "".concat(INPUT, "-group");
var INPUT_LEFT_CONTAINER = "".concat(INPUT, "-left-container");
var INPUT_ACTION = "".concat(INPUT, "-action");
var RESIZABLE_INPUT_SPAN = "".concat(NS, "-resizable-input-span");
var CONTROL = "".concat(NS, "-control");
var CONTROL_INDICATOR = "".concat(CONTROL, "-indicator");
var CONTROL_INDICATOR_CHILD = "".concat(CONTROL_INDICATOR, "-child");
var CHECKBOX = "".concat(NS, "-checkbox");
var RADIO = "".concat(NS, "-radio");
var SWITCH = "".concat(NS, "-switch");
var SWITCH_INNER_TEXT = "".concat(SWITCH, "-inner-text");
var FILE_INPUT = "".concat(NS, "-file-input");
var FILE_INPUT_HAS_SELECTION = "".concat(NS, "-file-input-has-selection");
var FILE_UPLOAD_INPUT = "".concat(NS, "-file-upload-input");
var FILE_UPLOAD_INPUT_CUSTOM_TEXT = "".concat(NS, "-file-upload-input-custom-text");
var KEY = "".concat(NS, "-key");
var KEY_COMBO = "".concat(KEY, "-combo");
var MODIFIER_KEY = "".concat(NS, "-modifier-key");
var HOTKEY = "".concat(NS, "-hotkey");
var HOTKEY_LABEL = "".concat(HOTKEY, "-label");
var HOTKEY_COLUMN = "".concat(HOTKEY, "-column");
var HOTKEY_DIALOG = "".concat(HOTKEY, "-dialog");
var LABEL = "".concat(NS, "-label");
var FORM_GROUP = "".concat(NS, "-form-group");
var FORM_CONTENT = "".concat(NS, "-form-content");
var FORM_HELPER_TEXT = "".concat(NS, "-form-helper-text");
var FORM_GROUP_SUB_LABEL = "".concat(NS, "-form-group-sub-label");
var MENU = "".concat(NS, "-menu");
var MENU_ITEM = "".concat(MENU, "-item");
var MENU_ITEM_ICON = "".concat(MENU_ITEM, "-icon");
var MENU_ITEM_LABEL = "".concat(MENU_ITEM, "-label");
var MENU_SUBMENU = "".concat(NS, "-submenu");
var MENU_SUBMENU_ICON = "".concat(MENU_SUBMENU, "-icon");
var MENU_DIVIDER = "".concat(MENU, "-divider");
var MENU_HEADER = "".concat(MENU, "-header");
var MULTISTEP_DIALOG = "".concat(NS, "-multistep-dialog");
var MULTISTEP_DIALOG_PANELS = "".concat(MULTISTEP_DIALOG, "-panels");
var MULTISTEP_DIALOG_LEFT_PANEL = "".concat(MULTISTEP_DIALOG, "-left-panel");
var MULTISTEP_DIALOG_RIGHT_PANEL = "".concat(MULTISTEP_DIALOG, "-right-panel");
/** @deprecated use `Classes.DIALOG_FOOTER` instead */
var MULTISTEP_DIALOG_FOOTER = "".concat(MULTISTEP_DIALOG, "-footer");
var MULTISTEP_DIALOG_NAV_TOP = "".concat(MULTISTEP_DIALOG, "-nav-top");
var MULTISTEP_DIALOG_NAV_RIGHT = "".concat(MULTISTEP_DIALOG, "-nav-right");
var NAVBAR = "".concat(NS, "-navbar");
var NAVBAR_GROUP = "".concat(NAVBAR, "-group");
var NAVBAR_HEADING = "".concat(NAVBAR, "-heading");
var NAVBAR_DIVIDER = "".concat(NAVBAR, "-divider");
var NON_IDEAL_STATE = "".concat(NS, "-non-ideal-state");
var NON_IDEAL_STATE_VISUAL = "".concat(NON_IDEAL_STATE, "-visual");
var NON_IDEAL_STATE_TEXT = "".concat(NON_IDEAL_STATE, "-text");
var NUMERIC_INPUT = "".concat(NS, "-numeric-input");
var OVERFLOW_LIST = "".concat(NS, "-overflow-list");
var OVERFLOW_LIST_SPACER = "".concat(OVERFLOW_LIST, "-spacer");
var OVERLAY = "".concat(NS, "-overlay");
var OVERLAY_BACKDROP = "".concat(OVERLAY, "-backdrop");
var OVERLAY_CONTAINER = "".concat(OVERLAY, "-container");
var OVERLAY_CONTENT = "".concat(OVERLAY, "-content");
var OVERLAY_INLINE = "".concat(OVERLAY, "-inline");
var OVERLAY_OPEN = "".concat(OVERLAY, "-open");
var OVERLAY_SCROLL_CONTAINER = "".concat(OVERLAY, "-scroll-container");
var OVERLAY_START_FOCUS_TRAP = "".concat(OVERLAY, "-start-focus-trap");
var OVERLAY_END_FOCUS_TRAP = "".concat(OVERLAY, "-end-focus-trap");
var PANEL_STACK = "".concat(NS, "-panel-stack");
var PANEL_STACK_HEADER = "".concat(PANEL_STACK, "-header");
var PANEL_STACK_HEADER_BACK = "".concat(PANEL_STACK, "-header-back");
var PANEL_STACK_VIEW = "".concat(PANEL_STACK, "-view");
var PANEL_STACK2 = "".concat(NS, "-panel-stack2");
var PANEL_STACK2_HEADER = "".concat(PANEL_STACK, "-header");
var PANEL_STACK2_HEADER_BACK = "".concat(PANEL_STACK, "-header-back");
var PANEL_STACK2_VIEW = "".concat(PANEL_STACK, "-view");
var POPOVER = "".concat(NS, "-popover");
var POPOVER_ARROW = "".concat(POPOVER, "-arrow");
var POPOVER_BACKDROP = "".concat(POPOVER, "-backdrop");
var POPOVER_CAPTURING_DISMISS = "".concat(POPOVER, "-capturing-dismiss");
var POPOVER_CONTENT = "".concat(POPOVER, "-content");
var POPOVER_CONTENT_SIZING = "".concat(POPOVER_CONTENT, "-sizing");
var POPOVER_DISMISS = "".concat(POPOVER, "-dismiss");
var POPOVER_DISMISS_OVERRIDE = "".concat(POPOVER_DISMISS, "-override");
var POPOVER_OPEN = "".concat(POPOVER, "-open");
var POPOVER_OUT_OF_BOUNDARIES = "".concat(POPOVER, "-out-of-boundaries");
var POPOVER_TARGET = "".concat(POPOVER, "-target");
var POPOVER_WRAPPER = "".concat(POPOVER, "-wrapper");
var TRANSITION_CONTAINER = "".concat(NS, "-transition-container");
var PROGRESS_BAR = "".concat(NS, "-progress-bar");
var PROGRESS_METER = "".concat(NS, "-progress-meter");
var PROGRESS_NO_STRIPES = "".concat(NS, "-no-stripes");
var PROGRESS_NO_ANIMATION = "".concat(NS, "-no-animation");
var PORTAL = "".concat(NS, "-portal");
var SKELETON = "".concat(NS, "-skeleton");
var SLIDER = "".concat(NS, "-slider");
var SLIDER_AXIS = "".concat(SLIDER, "-axis");
var SLIDER_HANDLE = "".concat(SLIDER, "-handle");
var SLIDER_LABEL = "".concat(SLIDER, "-label");
var SLIDER_TRACK = "".concat(SLIDER, "-track");
var SLIDER_PROGRESS = "".concat(SLIDER, "-progress");
var START = "".concat(NS, "-start");
var END = "".concat(NS, "-end");
var SPINNER = "".concat(NS, "-spinner");
var SPINNER_ANIMATION = "".concat(SPINNER, "-animation");
var SPINNER_HEAD = "".concat(SPINNER, "-head");
var SPINNER_NO_SPIN = "".concat(NS, "-no-spin");
var SPINNER_TRACK = "".concat(SPINNER, "-track");
var classes_TAB = "".concat(NS, "-tab");
var TAB_ICON = "".concat(classes_TAB, "-icon");
var TAB_TAG = "".concat(classes_TAB, "-tag");
var TAB_INDICATOR = "".concat(classes_TAB, "-indicator");
var TAB_INDICATOR_WRAPPER = "".concat(TAB_INDICATOR, "-wrapper");
var TAB_LIST = "".concat(classes_TAB, "-list");
var TAB_PANEL = "".concat(classes_TAB, "-panel");
var TABS = "".concat(classes_TAB, "s");
var TAG = "".concat(NS, "-tag");
var TAG_REMOVE = "".concat(TAG, "-remove");
var TAG_INPUT = "".concat(NS, "-tag-input");
var TAG_INPUT_ICON = "".concat(TAG_INPUT, "-icon");
var TAG_INPUT_VALUES = "".concat(TAG_INPUT, "-values");
var TOAST = "".concat(NS, "-toast");
var TOAST_CONTAINER = "".concat(TOAST, "-container");
var TOAST_MESSAGE = "".concat(TOAST, "-message");
var TOOLTIP = "".concat(NS, "-tooltip");
var TOOLTIP_INDICATOR = "".concat(TOOLTIP, "-indicator");
var TREE = "".concat(NS, "-tree");
var TREE_NODE = "".concat(NS, "-tree-node");
var TREE_NODE_CARET = "".concat(TREE_NODE, "-caret");
var TREE_NODE_CARET_CLOSED = "".concat(TREE_NODE_CARET, "-closed");
var TREE_NODE_CARET_NONE = "".concat(TREE_NODE_CARET, "-none");
var TREE_NODE_CARET_OPEN = "".concat(TREE_NODE_CARET, "-open");
var TREE_NODE_CONTENT = "".concat(TREE_NODE, "-content");
var TREE_NODE_EXPANDED = "".concat(TREE_NODE, "-expanded");
var TREE_NODE_ICON = "".concat(TREE_NODE, "-icon");
var TREE_NODE_LABEL = "".concat(TREE_NODE, "-label");
var TREE_NODE_LIST = "".concat(TREE_NODE, "-list");
var TREE_NODE_SECONDARY_LABEL = "".concat(TREE_NODE, "-secondary-label");
var TREE_NODE_SELECTED = "".concat(TREE_NODE, "-selected");
var TREE_ROOT = "".concat(NS, "-tree-root");
var ICON = "".concat(NS, "-icon");
var ICON_STANDARD = "".concat(ICON, "-standard");
var ICON_LARGE = "".concat(ICON, "-large");
/**
 * Returns the namespace prefix for all Blueprint CSS classes.
 * Customize this namespace at build time with the `process.env.BLUEPRINT_NAMESPACE` environment variable.
 */
function getClassNamespace() {
  return NS;
}
/** Return CSS class for alignment. */
function alignmentClass(alignment) {
  switch (alignment) {
    case Alignment.LEFT:
      return ALIGN_LEFT;
    case Alignment.RIGHT:
      return ALIGN_RIGHT;
    default:
      return undefined;
  }
}
function elevationClass(elevation) {
  if (elevation === undefined) {
    return undefined;
  }
  return "".concat(NS, "-elevation-").concat(elevation);
}
function iconClass(iconName) {
  if (iconName == null) {
    return undefined;
  }
  return iconName.indexOf("".concat(NS, "-icon-")) === 0 ? iconName : "".concat(NS, "-icon-").concat(iconName);
}
function intentClass(intent) {
  if (intent == null || intent === Intent.NONE) {
    return undefined;
  }
  return "".concat(NS, "-intent-").concat(intent.toLowerCase());
}
function positionClass(position) {
  if (position === undefined) {
    return undefined;
  }
  return "".concat(NS, "-position-").concat(position);
}
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/common/utils/reactUtils.js
/*
 * Copyright 2020 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Returns true if `node` is null/undefined, false, empty string, or an array
 * composed of those. If `node` is an array, only one level of the array is
 * checked, for performance reasons.
 */
function isReactNodeEmpty(node, skipArray) {
  if (skipArray === void 0) {
    skipArray = false;
  }
  return node == null || node === "" || node === false || !skipArray && Array.isArray(node) && (
  // only recurse one level through arrays, for performance
  node.length === 0 || node.every(function (n) {
    return isReactNodeEmpty(n, true);
  }));
}
/**
 * Returns true if children are a mappable children array
 *
 * @internal
 */
function isReactChildrenElementOrElements(children) {
  return !isReactNodeEmpty(children, true) && children !== true;
}
/**
 * Converts a React node to an element: non-empty string or number or
 * `React.Fragment` (React 16.3+) is wrapped in given tag name; empty strings
 * and booleans are discarded.
 */
function ensureElement(child, tagName) {
  if (tagName === void 0) {
    tagName = "span";
  }
  if (child == null || typeof child === "boolean") {
    return undefined;
  } else if (typeof child === "string") {
    // cull whitespace strings
    return child.trim().length > 0 ? react.createElement(tagName, {}, child) : undefined;
  } else if (typeof child === "number" || typeof child.type === "symbol" || Array.isArray(child)) {
    // React.Fragment has a symbol type, ReactNodeArray extends from Array
    return react.createElement(tagName, {}, child);
  } else if (isReactElement(child)) {
    return child;
  } else {
    // child is inferred as {}
    return undefined;
  }
}
function isReactElement(child) {
  return typeof child === "object" && typeof child.type !== "undefined" && typeof child.props !== "undefined";
}
/**
 * @deprecated will be removed in v5.0
 */
function getDisplayName(ComponentClass) {
  return ComponentClass.displayName || ComponentClass.name || "Unknown";
}
/**
 * Returns true if the given JSX element matches the given component type.
 *
 * NOTE: This function only checks equality of `displayName` for performance and
 * to tolerate multiple minor versions of a component being included in one
 * application bundle.
 *
 * @param element JSX element in question
 * @param ComponentType desired component type of element
 */
// eslint-disable-next-line @typescript-eslint/ban-types
function isElementOfType(element, ComponentType) {
  return element != null && element.type != null && element.type.displayName != null && element.type.displayName === ComponentType.displayName;
}
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/common/errors.js
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ns = "[Blueprint]";
var CLAMP_MIN_MAX = ns + " clamp: max cannot be less than min";
var ALERT_WARN_CANCEL_PROPS = ns + " <Alert> cancelButtonText and onCancel should be set together.";
var ALERT_WARN_CANCEL_ESCAPE_KEY = ns + " <Alert> canEscapeKeyCancel enabled without onCancel or onClose handler.";
var ALERT_WARN_CANCEL_OUTSIDE_CLICK = ns + " <Alert> canOutsideClickCancel enabled without onCancel or onClose handler.";
var COLLAPSIBLE_LIST_INVALID_CHILD = ns + " <CollapsibleList> children must be <MenuItem>s";
var CONTEXTMENU_WARN_DECORATOR_NO_METHOD = ns + " @ContextMenuTarget-decorated class should implement renderContextMenu.";
var CONTEXTMENU_WARN_DECORATOR_NEEDS_REACT_ELEMENT = ns + " \"@ContextMenuTarget-decorated components must return a single JSX.Element or an empty render.";
var HOTKEYS_HOTKEY_CHILDREN = ns + " <Hotkeys> only accepts <Hotkey> children.";
var HOTKEYS_WARN_DECORATOR_NO_METHOD = ns + " @HotkeysTarget-decorated class should implement renderHotkeys.";
var HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT = ns + " \"@HotkeysTarget-decorated components must return a single JSX.Element or an empty render.";
var HOTKEYS_PROVIDER_NOT_FOUND = ns + " useHotkeys() was used outside of a <HotkeysProvider> context. These hotkeys will not be shown in the hotkeys help dialog.";
var HOTKEYS_TARGET2_CHILDREN_LOCAL_HOTKEYS = ns + " <HotkeysTarget2> was configured with local hotkeys, but you did not use the generated event handlers to bind their event handlers. Try using a render function as the child of this component.";
var INPUT_WARN_LEFT_ELEMENT_LEFT_ICON_MUTEX = ns + " <InputGroup> leftElement and leftIcon prop are mutually exclusive, with leftElement taking priority.";
var NUMERIC_INPUT_MIN_MAX = ns + " <NumericInput> requires min to be no greater than max if both are defined.";
var NUMERIC_INPUT_MINOR_STEP_SIZE_BOUND = ns + " <NumericInput> requires minorStepSize to be no greater than stepSize.";
var NUMERIC_INPUT_MAJOR_STEP_SIZE_BOUND = ns + " <NumericInput> requires stepSize to be no greater than majorStepSize.";
var NUMERIC_INPUT_MINOR_STEP_SIZE_NON_POSITIVE = ns + " <NumericInput> requires minorStepSize to be strictly greater than zero.";
var NUMERIC_INPUT_MAJOR_STEP_SIZE_NON_POSITIVE = ns + " <NumericInput> requires majorStepSize to be strictly greater than zero.";
var NUMERIC_INPUT_STEP_SIZE_NON_POSITIVE = ns + " <NumericInput> requires stepSize to be strictly greater than zero.";
var NUMERIC_INPUT_CONTROLLED_VALUE_INVALID = ns + " <NumericInput> controlled value prop does not adhere to stepSize, min, and/or max constraints.";
var PANEL_STACK_INITIAL_PANEL_STACK_MUTEX = ns + " <PanelStack> requires exactly one of initialPanel and stack prop";
var PANEL_STACK_REQUIRES_PANEL = ns + " <PanelStack> requires at least one panel in the stack";
var OVERFLOW_LIST_OBSERVE_PARENTS_CHANGED = ns + " <OverflowList> does not support changing observeParents after mounting.";
var POPOVER_REQUIRES_TARGET = ns + " <Popover> requires target prop or at least one child element.";
var POPOVER_HAS_BACKDROP_INTERACTION = ns + " <Popover hasBackdrop={true}> requires interactionKind={PopoverInteractionKind.CLICK}.";
var POPOVER_WARN_TOO_MANY_CHILDREN = ns + " <Popover> supports one or two children; additional children are ignored." + " First child is the target, second child is the content. You may instead supply these two as props.";
var POPOVER_WARN_DOUBLE_CONTENT = ns + " <Popover> with two children ignores content prop; use either prop or children.";
var POPOVER_WARN_DOUBLE_TARGET = ns + " <Popover> with children ignores target prop; use either prop or children.";
var POPOVER_WARN_EMPTY_CONTENT = ns + " Disabling <Popover> with empty/whitespace content...";
var POPOVER_WARN_HAS_BACKDROP_INLINE = ns + " <Popover usePortal={false}> ignores hasBackdrop";
var POPOVER_WARN_PLACEMENT_AND_POSITION_MUTEX = ns + " <Popover> supports either placement or position prop, not both.";
var POPOVER_WARN_UNCONTROLLED_ONINTERACTION = ns + " <Popover> onInteraction is ignored when uncontrolled.";
var PORTAL_CONTEXT_CLASS_NAME_STRING = ns + " <Portal> context blueprintPortalClassName must be string";
var PORTAL_LEGACY_CONTEXT_API = ns + " setting blueprintPortalClassName via legacy React context API is deprecated, use <PortalProvider> instead.";
var RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX = ns + " <RadioGroup> children and options prop are mutually exclusive, with options taking priority.";
var SLIDER_ZERO_STEP = ns + " <Slider> stepSize must be greater than zero.";
var SLIDER_ZERO_LABEL_STEP = ns + " <Slider> labelStepSize must be greater than zero.";
var SLIDER_MIN = ns + " <Slider> min prop must be a finite number.";
var SLIDER_MAX = ns + " <Slider> max prop must be a finite number.";
var RANGESLIDER_NULL_VALUE = ns + " <RangeSlider> value prop must be an array of two non-null numbers.";
var MULTISLIDER_INVALID_CHILD = ns + " <MultiSlider> children must be <SliderHandle>s or <SliderTrackStop>s";
var MULTISLIDER_WARN_LABEL_STEP_SIZE_LABEL_VALUES_MUTEX = ns + " <MultiSlider> labelStepSize and labelValues prop are mutually exclusive, with labelStepSize taking priority.";
var SPINNER_WARN_CLASSES_SIZE = ns + " <Spinner> Classes.SMALL/LARGE are ignored if size prop is set.";
var TOASTER_CREATE_NULL = ns + " Toaster.create() is not supported inside React lifecycle methods in React 16." + " See usage example on the docs site.";
var TOASTER_WARN_INLINE = ns + " Toaster.create() ignores inline prop as it always creates a new element.";
var DIALOG_WARN_NO_HEADER_ICON = ns + " <Dialog> iconName is ignored if title is omitted.";
var DIALOG_WARN_NO_HEADER_CLOSE_BUTTON = ns + " <Dialog> isCloseButtonShown prop is ignored if title is omitted.";
var DRAWER_ANGLE_POSITIONS_ARE_CASTED = ns + " <Drawer> all angle positions are casted into pure position (TOP, BOTTOM, LEFT or RIGHT)";
var TOASTER_MAX_TOASTS_INVALID = ns + " <Toaster> maxToasts is set to an invalid number, must be greater than 0";
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/common/utils/jsUtils.js
/*
 * Copyright 2020 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** Returns whether `process.env.NODE_ENV` exists and equals `env`. */
function isNodeEnv(env) {
  return typeof process !== "undefined" && ({"NODE_ENV":"production","PUBLIC_URL":"","WDS_SOCKET_HOST":undefined,"WDS_SOCKET_PATH":undefined,"WDS_SOCKET_PORT":undefined,"FAST_REFRESH":true}) && "production" === env;
}
/**
 * Returns the difference in length between two arrays. A `null` argument is
 * considered an empty list. The return value will be positive if `a` is longer
 * than `b`, negative if the opposite is true, and zero if their lengths are
 * equal.
 */
function arrayLengthCompare(a, b) {
  if (a === void 0) {
    a = [];
  }
  if (b === void 0) {
    b = [];
  }
  return a.length - b.length;
}
/**
 * Returns true if the two numbers are within the given tolerance of each other.
 * This is useful to correct for floating point precision issues, less useful
 * for integers.
 */
function approxEqual(a, b, tolerance) {
  if (tolerance === void 0) {
    tolerance = 0.00001;
  }
  return Math.abs(a - b) <= tolerance;
}
/**
 * Clamps the given number between min and max values. Returns value if within
 * range, or closest bound.
 */
function clamp(val, min, max) {
  if (val == null) {
    return val;
  }
  if (max < min) {
    throw new Error(CLAMP_MIN_MAX);
  }
  return Math.min(Math.max(val, min), max);
}
/** Returns the number of decimal places in the given number. */
function countDecimalPlaces(num) {
  if (!isFinite(num)) {
    return 0;
  }
  var e = 1;
  var p = 0;
  while (Math.round(num * e) / e !== num) {
    e *= 10;
    p++;
  }
  return p;
}
var uniqueCountForNamespace = new Map();
/** Generate a unique ID within a given namespace, using a simple counter-based implementation to avoid collisions. */
function uniqueId(namespace) {
  var _a;
  var curCount = (_a = uniqueCountForNamespace.get(namespace)) !== null && _a !== void 0 ? _a : 0;
  uniqueCountForNamespace.set(namespace, curCount + 1);
  return "".concat(namespace, "-").concat(curCount);
}
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/common/abstractPureComponent2.js
/*
 * Copyright 2019 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



/**
 * An abstract component that Blueprint components can extend
 * in order to add some common functionality like runtime props validation.
 */
// eslint-disable-next-line @typescript-eslint/ban-types
var AbstractPureComponent2 = /** @class */function (_super) {
  __extends(AbstractPureComponent2, _super);
  function AbstractPureComponent2(props, context) {
    var _this = _super.call(this, props, context) || this;
    // Not bothering to remove entries when their timeouts finish because clearing invalid ID is a no-op
    _this.timeoutIds = [];
    _this.requestIds = [];
    /**
     * Clear all known timeouts.
     */
    _this.clearTimeouts = function () {
      if (_this.timeoutIds.length > 0) {
        for (var _i = 0, _a = _this.timeoutIds; _i < _a.length; _i++) {
          var timeoutId = _a[_i];
          window.clearTimeout(timeoutId);
        }
        _this.timeoutIds = [];
      }
    };
    /**
     * Clear all known animation frame requests.
     */
    _this.cancelAnimationFrames = function () {
      if (_this.requestIds.length > 0) {
        for (var _i = 0, _a = _this.requestIds; _i < _a.length; _i++) {
          var requestId = _a[_i];
          window.cancelAnimationFrame(requestId);
        }
        _this.requestIds = [];
      }
    };
    if (!isNodeEnv("production")) {
      _this.validateProps(_this.props);
    }
    return _this;
  }
  AbstractPureComponent2.prototype.componentDidUpdate = function (_prevProps, _prevState, _snapshot) {
    if (!isNodeEnv("production")) {
      this.validateProps(this.props);
    }
  };
  AbstractPureComponent2.prototype.componentWillUnmount = function () {
    this.clearTimeouts();
    this.cancelAnimationFrames();
  };
  /**
   * Request an animation frame and remember its ID.
   * All pending requests will be canceled when component unmounts.
   *
   * @returns a "cancel" function that will cancel the request when invoked.
   */
  AbstractPureComponent2.prototype.requestAnimationFrame = function (callback) {
    var handle = window.requestAnimationFrame(callback);
    this.requestIds.push(handle);
    return function () {
      return window.cancelAnimationFrame(handle);
    };
  };
  /**
   * Set a timeout and remember its ID.
   * All pending timeouts will be cleared when component unmounts.
   *
   * @returns a "cancel" function that will clear timeout when invoked.
   */
  AbstractPureComponent2.prototype.setTimeout = function (callback, timeout) {
    var handle = window.setTimeout(callback, timeout);
    this.timeoutIds.push(handle);
    return function () {
      return window.clearTimeout(handle);
    };
  };
  /**
   * Ensures that the props specified for a component are valid.
   * Implementations should check that props are valid and usually throw an Error if they are not.
   * Implementations should not duplicate checks that the type system already guarantees.
   *
   * This method should be used instead of React's
   * [propTypes](https://facebook.github.io/react/docs/reusable-components.html#prop-validation) feature.
   * Like propTypes, these runtime checks run only in development mode.
   */
  AbstractPureComponent2.prototype.validateProps = function (_props) {
    // implement in subclass
  };
  return AbstractPureComponent2;
}(react.PureComponent);

;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/add.js
/* harmony default export */ var add = (["M10.99 6.99h-2v-2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1zm-3-7c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.68 6-6 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/add-clip.js
/* harmony default export */ var add_clip = (["M12 0a1 1 0 00-1 1v2H9a1 1 0 000 2h2v2a1 1 0 102 0V5h2a1 1 0 100-2h-2V1a1 1 0 00-1-1zM0 4a1 1 0 011-1h3.5a1 1 0 010 2H2v2a1 1 0 01-2 0V4zm1 12a1 1 0 01-1-1v-3a1 1 0 112 0v2h2.5a1 1 0 110 2H1zm11 0a1 1 0 001-1v-3a1 1 0 10-2 0v2H9a1 1 0 100 2h3zm-5.5-4a2.5 2.5 0 100-5 2.5 2.5 0 000 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/add-column-left.js
/* harmony default export */ var add_column_left = (["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-5 14H2V2h8v12zm4 0h-3V2h3v12zM4 9h1v1c0 .55.45 1 1 1s1-.45 1-1V9h1c.55 0 1-.45 1-1s-.45-1-1-1H7V6c0-.55-.45-1-1-1s-1 .45-1 1v1H4c-.55 0-1 .45-1 1s.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/add-column-right.js
/* harmony default export */ var add_column_right = (["M8 9h1v1c0 .55.45 1 1 1s1-.45 1-1V9h1c.55 0 1-.45 1-1s-.45-1-1-1h-1V6c0-.55-.45-1-1-1s-1 .45-1 1v1H8c-.55 0-1 .45-1 1s.45 1 1 1zm7-9H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM5 14H2V2h3v12zm9 0H6V2h8v12z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/add-location.js
/* harmony default export */ var add_location = (["M8 0a1 1 0 110 2 6 6 0 106 6 1 1 0 012 0 8 8 0 11-8-8zm0 5a3 3 0 110 6 3 3 0 010-6zm5-5a1 1 0 011 1v.999L15 2a1 1 0 010 2h-1v1a1 1 0 01-2 0V4h-1a1 1 0 010-2h1V1a1 1 0 011-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/add-row-bottom.js
/* harmony default export */ var add_row_bottom = (["M6 11h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1s-.45-1-1-1H9V8c0-.55-.45-1-1-1s-1 .45-1 1v1H6c-.55 0-1 .45-1 1s.45 1 1 1zm9-11H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2V6h12v8zm0-9H2V2h12v3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/add-row-top.js
/* harmony default export */ var add_row_top = (["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2v-3h12v3zm0-4H2V2h12v8zM6 7h1v1c0 .55.45 1 1 1s1-.45 1-1V7h1c.55 0 1-.45 1-1s-.45-1-1-1H9V4c0-.55-.45-1-1-1s-1 .45-1 1v1H6c-.55 0-1 .45-1 1s.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/add-to-artifact.js
/* harmony default export */ var add_to_artifact = (["M14 4.01h-1v-1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1 0-.56-.45-1-1-1zm-13 2h6c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm8 6H1c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1 0-.56-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1 0-.56-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/add-to-folder.js
/* harmony default export */ var add_to_folder = (["M.01 7V5H16v7c0 .55-.45 1-1 1H9.005v-2.99C8.974 8.332 7.644 7 5.996 7H.01zM15 2H7.416L5.706.29a.996.996 0 00-.71-.29H1C.45 0 0 .45 0 1v3h15.99V3c.01-.55-.44-1-.99-1zM5.997 9H2c-.55 0-1 .45-1 1s.45 1 1 1h1.589L.3 14.29a1.003 1.003 0 001.42 1.42l3.287-3.29v1.59c0 .55.45 1 1 1 .549 0 .999-.45.999-1v-4A1.02 1.02 0 005.996 9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/aimpoints-target.js
/* harmony default export */ var aimpoints_target = (["M2.1 9.101a3.99 3.99 0 00-1.828.974A8 8 0 0110.075.272 3.99 3.99 0 009.1 2.1a6 6 0 00-7 7zM14 8a6.03 6.03 0 00-.1-1.101 3.99 3.99 0 001.828-.974 8 8 0 01-9.803 9.803A3.99 3.99 0 006.9 13.9 6 6 0 0014 8z", "M8 3a1 1 0 00-1 1v2a1 1 0 002 0V4a1 1 0 00-1-1zM9 8a1 1 0 011-1h2a1 1 0 010 2h-2a1 1 0 01-1-1zM3 8a1 1 0 011-1h2a1 1 0 010 2H4a1 1 0 01-1-1zM7 10a1 1 0 012 0v2a1 1 0 01-2 0v-2zM5 13a2 2 0 11-4 0 2 2 0 014 0zM13 5a2 2 0 100-4 2 2 0 000 4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/airplane.js
/* harmony default export */ var airplane = (["M16 1.5A1.498 1.498 0 0013.44.44L9.91 3.97 2 1 1 3l5.93 3.95L3.88 10H1l-1 1 3 2 2 3 1-1v-2.88l3.05-3.05L13 15l2-1-2.97-7.91 3.53-3.53c.27-.27.44-.65.44-1.06z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/align-center.js
/* harmony default export */ var align_center = (["M4 4c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1H4zM1 3h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm13 10H2c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm1-6H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-5 5c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1h4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/align-justify.js
/* harmony default export */ var align_justify = (["M15 12.98H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-14-10h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1 0 .56.45 1 1 1zm14 4H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0-3H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0 6H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/align-left.js
/* harmony default export */ var align_left = (["M13 13H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zM1 3h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm0 3h8c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 1H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM1 12h4c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/align-right.js
/* harmony default export */ var align_right = (["M15 12.98H3c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm-14-10h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1 0 .56.45 1 1 1zm14 1H7c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zm0 6h-4c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1zm0-3H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/alignment-bottom.js
/* harmony default export */ var alignment_bottom = (["M10 12h3c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1h-3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm5 2H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM3 12h3c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/alignment-horizontal-center.js
/* harmony default export */ var alignment_horizontal_center = (["M15 7h-1V6c0-.55-.45-1-1-1h-3c-.55 0-1 .45-1 1v1H7V3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v4H1c-.55 0-1 .45-1 1s.45 1 1 1h1v4c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V9h2v1c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V9h1c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/alignment-left.js
/* harmony default export */ var alignment_left = (["M9 9H5c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1zM1 0C.45 0 0 .45 0 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm13 2H5c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/alignment-right.js
/* harmony default export */ var alignment_right = (["M11 9H7c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1zm4-9c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm-4 2H2c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/alignment-top.js
/* harmony default export */ var alignment_top = (["M15 0H1C.45 0 0 .45 0 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM6 4H3c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm7 0h-3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/alignment-vertical-center.js
/* harmony default export */ var alignment_vertical_center = (["M13 2H9V1c0-.55-.45-1-1-1S7 .45 7 1v1H3c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h4v2H6c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1H9V7h4c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/anchor.js
/* harmony default export */ var paths_anchor = (["M10 2a2 2 0 01-1 1.732V5h2v2H9v6.874a4.004 4.004 0 002.976-3.436l-.269.27a1 1 0 01-1.414-1.415l2-2a1 1 0 011.414 0l2 2a1 1 0 01-1.414 1.414l-.306-.306a6 6 0 01-11.974 0l-.306.306A1 1 0 01.293 9.293l2-2a1 1 0 011.414 0l2 2a1 1 0 01-1.414 1.414l-.27-.27A4.003 4.003 0 007 13.875V7H5V5h2V3.732A2 2 0 1110 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/annotation.js
/* harmony default export */ var annotation = (["M15.52 2.77c.3-.29.48-.7.48-1.15C16 .73 15.27 0 14.38 0c-.45 0-.85.18-1.15.48l-1.34 1.34 2.3 2.3 1.33-1.35zM7.4 10.9l6.21-6.21-2.3-2.3L5.1 8.6l2.3 2.3zM14 14H2V2h6.34l2-2H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V5.66l-2 2V14zM3 13l3.58-1.29-2.29-2.27L3 13z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/antenna.js
/* harmony default export */ var antenna = (["M2.673 10.758a1.396 1.396 0 01.093.234c.127.442.012.932-.362 1.212-.441.332-1.075.246-1.349-.233a8 8 0 1114.014-.225c-.259.488-.889.594-1.341.277-.382-.269-.513-.755-.4-1.2a1.259 1.259 0 01.085-.238 6 6 0 10-10.74.173zm2.464-1.862a1.783 1.783 0 01.076.404c.03.415-.096.831-.43 1.078-.444.328-1.08.237-1.314-.264a5.003 5.003 0 01-.24-.62l-.004-.011a5 5 0 119.574-.08l-.003.011c-.063.213-.14.422-.23.625-.226.504-.861.606-1.31.285-.338-.241-.47-.654-.448-1.07a1.737 1.737 0 01.07-.405 2.99 2.99 0 00-.216-2.233 3 3 0 00-5.525 2.28zM8 7a1 1 0 011 1v3.586l2.707 2.707a1 1 0 01-1.414 1.414L8 13.414l-2.293 2.293a1 1 0 01-1.414-1.414L7 11.586V8a1 1 0 011-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/app-header.js
/* harmony default export */ var app_header = (["M15 0a1 1 0 011 1v14a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1h14zM6 4a1 1 0 00-1.993-.117L4 4v8a1 1 0 001.993.117L6 12V9h4v3a1 1 0 001.993.117L12 12V4a1 1 0 00-1.993-.117L10 4v3H6V4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/application.js
/* harmony default export */ var application = (["M3.5 7h7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-7c-.28 0-.5.22-.5.5s.22.5.5.5zM15 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm-1 12H2V5h12v8zM3.5 9h4c.28 0 .5-.22.5-.5S7.78 8 7.5 8h-4c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-5c-.28 0-.5.22-.5.5s.22.5.5.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/applications.js
/* harmony default export */ var applications = (["M3.5 11h2c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-2c-.28 0-.5.22-.5.5s.22.5.5.5zm0-2h5c.28 0 .5-.22.5-.5S8.78 8 8.5 8h-5c-.28 0-.5.22-.5.5s.22.5.5.5zM11 4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 10H2V7h8v7zm5-14H5c-.55 0-1 .45-1 1v2h2V2h8v7h-1v2h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM3.5 13h3c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-3c-.28 0-.5.22-.5.5s.22.5.5.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/archive.js
/* harmony default export */ var archive = (["M13.382 0a1 1 0 01.894.553L16 4v11a1 1 0 01-1 1H1a1 1 0 01-1-1V4L1.724.553A1 1 0 012.618 0h10.764zM8 6c-.55 0-1 .45-1 1v2.59l-.29-.29-.081-.076A.97.97 0 006 9a1.003 1.003 0 00-.71 1.71l2 2 .096.084c.168.13.38.206.614.206.28 0 .53-.11.71-.29l2-2 .084-.096A1.003 1.003 0 009.29 9.29l-.29.3V7l-.007-.116A1.004 1.004 0 008 6zm5-4H3L2 4h12l-1-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/area-of-interest.js
/* harmony default export */ var area_of_interest = (["M4 3.664C4 1.644 5.793 0 8 0s3.993 1.643 4 3.664C12 5.692 8 11 8 11S4 5.692 4 3.664zM6 4a2 2 0 104.001-.001A2 2 0 006 4zm7.504 6.269l-2.68-1.609.021-.033c.34-.538.688-1.115 1-1.687l3.67 2.202a1 1 0 01.266 1.482l-4 5A1 1 0 0111 16H5a1 1 0 01-.78-.376l-4-5a1 1 0 01.266-1.482l3.67-2.202a30.46 30.46 0 00.999 1.687l.021.033-2.68 1.609 2.985 3.73h5.038l2.985-3.73z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/array.js
/* harmony default export */ var array = (["M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm4 7a1 1 0 110 2 1 1 0 010-2zM5 7a1 1 0 110 2 1 1 0 010-2zm6 0a1 1 0 110 2 1 1 0 010-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/array-boolean.js
/* harmony default export */ var array_boolean = (["M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm7 6a1 1 0 01.993.883L12 7v2a1 1 0 01-.883.993L11 10H5a1 1 0 01-.993-.883L4 9V7a1 1 0 01.883-.993L5 6h6zm0 1H8v2h3V7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/array-date.js
/* harmony default export */ var array_date = (["M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm6.5 4a.5.5 0 01.5.5V5a1 1 0 01.993.883L12 6v5a1 1 0 01-.883.993L11 12H5a1 1 0 01-.993-.883L4 11V6a1 1 0 01.883-.993L5 5v-.5a.5.5 0 011 0V5h4v-.5a.5.5 0 01.5-.5zm.5 3H5v4h6V7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/array-floating-point.js
/* harmony default export */ var array_floating_point = (["M15.993.883A1 1 0 0015 0h-3l-.117.007A1 1 0 0011 1l.007.117A1 1 0 0012 2h2v12h-2l-.117.007A1 1 0 0012 16h3l.117-.007A1 1 0 0016 15V1l-.007-.117zM5 1a1 1 0 00-1-1H1L.883.007A1 1 0 000 1v14l.007.117A1 1 0 001 16h3l.117-.007A1 1 0 005 15l-.007-.117A1 1 0 004 14H2V2h2l.117-.007A1 1 0 005 1z", "M4.347 5.86c-.177.03-.36.047-.547.047v.703h1.344v3.86h.977V5h-.727a.844.844 0 01-.203.422 1.17 1.17 0 01-.367.281c-.14.073-.3.125-.477.157z", "M11.462 5.27c-.236-.176-.542-.264-.918-.264s-.685.088-.925.263a1.79 1.79 0 00-.557.662c-.13.266-.22.56-.27.88-.046.321-.068.632-.068.933 0 .3.022.612.067.933.05.32.14.617.271.887.135.266.321.487.557.662.24.17.549.256.925.256s.682-.085.918-.256c.24-.175.426-.396.556-.662a2.86 2.86 0 00.271-.887c.05-.321.075-.632.075-.933 0-.3-.025-.612-.075-.933a2.775 2.775 0 00-.27-.88 1.702 1.702 0 00-.557-.662zm-.452 4.34a.7.7 0 01-.466.157.711.711 0 01-.474-.158 1.214 1.214 0 01-.293-.436 2.791 2.791 0 01-.15-.647 6.443 6.443 0 01-.046-.782c0-.276.015-.534.045-.775.03-.246.08-.461.15-.647.076-.185.174-.33.294-.436a.69.69 0 01.474-.166.68.68 0 01.466.166c.126.105.223.25.294.436.075.186.128.401.158.647.03.24.045.5.045.775 0 .276-.015.537-.045.782-.03.246-.083.462-.158.647-.07.18-.168.326-.294.436z", "M7.082 9.445H8.17V10.5H7.082V9.445z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/array-numeric.js
/* harmony default export */ var array_numeric = (["M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm6.904 5c.256 0 .483.037.68.112a1.343 1.343 0 01.812.788c.072.184.108.385.108.604 0 .23-.05.441-.152.636a1.314 1.314 0 01-.456.492v.016l.08.04c.055.031.111.072.168.124.085.077.163.172.232.284a1.673 1.673 0 01.24.872c0 .25-.043.477-.128.68a1.518 1.518 0 01-.896.852 1.937 1.937 0 01-.68.116c-.427 0-.792-.101-1.096-.304a1.362 1.362 0 01-.584-.864c-.01-.053.01-.088.064-.104l.696-.16.033-.002c.03.002.051.022.063.058.059.16.155.296.288.408.133.112.312.168.536.168.256 0 .453-.076.592-.228a.827.827 0 00.208-.58c0-.277-.08-.495-.24-.652-.16-.157-.376-.236-.648-.236h-.232l-.035-.005c-.03-.01-.045-.035-.045-.075v-.632l.005-.035c.01-.03.035-.045.075-.045h.216l.138-.009a.734.734 0 00.438-.207c.144-.144.216-.336.216-.576a.745.745 0 00-.192-.532c-.128-.136-.307-.204-.536-.204-.203 0-.363.05-.48.152a.815.815 0 00-.248.408c-.016.048-.048.067-.096.056l-.68-.16-.034-.012c-.028-.016-.038-.044-.03-.084a1.347 1.347 0 01.516-.828c.136-.104.296-.185.48-.244A1.98 1.98 0 0110.904 5zm-6.152.088l.035.005c.03.01.045.035.045.075v5.28l-.005.035c-.01.03-.035.045-.075.045h-.736l-.035-.005c-.03-.01-.045-.035-.045-.075V6.16H3.92l-.832.584-.032.016C3.02 6.773 3 6.751 3 6.696V5.88l.006-.04a.157.157 0 01.05-.072l.872-.632.04-.027a.236.236 0 01.104-.021h.68zM7.344 5c.256 0 .483.04.68.12.197.08.364.188.5.324s.24.296.312.48c.072.184.108.383.108.596 0 .245-.045.47-.136.676-.09.205-.216.404-.376.596l-1.584 1.92v.016h2.016l.035.005c.03.01.045.035.045.075v.64l-.005.035c-.01.03-.035.045-.075.045H5.808l-.035-.005c-.03-.01-.045-.035-.045-.075v-.6l.004-.04a.132.132 0 01.036-.064l1.92-2.392.1-.133a1.95 1.95 0 00.156-.267.985.985 0 00.096-.432.736.736 0 00-.188-.512c-.125-.139-.303-.208-.532-.208-.219 0-.39.061-.512.184a.826.826 0 00-.224.496c-.01.053-.04.075-.088.064L5.792 6.4l-.034-.012c-.028-.016-.038-.044-.03-.084a1.425 1.425 0 01.94-1.192A1.88 1.88 0 017.344 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/array-string.js
/* harmony default export */ var array_string = (["M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm1.61 5c.514 0 .962.212 1.343.637.382.425.573.997.573 1.716 0 .838-.258 1.588-.773 2.252-.514.663-1.327 1.2-2.437 1.609v-.465l.233-.095a3.09 3.09 0 001.274-1.017c.366-.505.55-1.03.55-1.577a.478.478 0 00-.057-.26c-.018-.037-.043-.056-.074-.056s-.08.025-.149.075c-.198.142-.446.214-.744.214-.36 0-.675-.145-.944-.433A1.453 1.453 0 014 6.572c0-.422.155-.79.465-1.102.31-.313.692-.47 1.144-.47zm4.474 0c.514 0 .963.212 1.344.637.381.425.572.997.572 1.716 0 .838-.257 1.588-.772 2.252-.515.663-1.327 1.2-2.437 1.609v-.465l.233-.095a3.09 3.09 0 001.274-1.017c.366-.505.549-1.03.549-1.577a.478.478 0 00-.056-.26c-.019-.037-.044-.056-.075-.056-.03 0-.08.025-.149.075-.198.142-.446.214-.744.214-.36 0-.674-.145-.944-.433a1.453 1.453 0 01-.405-1.028c0-.422.155-.79.466-1.102.31-.313.691-.47 1.144-.47z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/array-timestamp.js
/* harmony default export */ var array_timestamp = (["M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm4 3a5 5 0 110 10A5 5 0 018 3zm0 1a4 4 0 100 8 4 4 0 000-8zm2.354 1.646a.5.5 0 01.057.638l-.057.07-2 2a.5.5 0 01-.638.057l-.07-.057-1-1a.5.5 0 01.638-.765l.07.057.646.647 1.646-1.647a.5.5 0 01.708 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/arrow-bottom-left.js
/* harmony default export */ var arrow_bottom_left = (["M14 3a1.003 1.003 0 00-1.71-.71L4 10.59V6c0-.55-.45-1-1-1s-1 .45-1 1v7c0 .55.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1H5.41l8.29-8.29c.19-.18.3-.43.3-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/arrow-bottom-right.js
/* harmony default export */ var arrow_bottom_right = (["M13 5c-.55 0-1 .45-1 1v4.59l-8.29-8.3a1.003 1.003 0 00-1.42 1.42l8.3 8.29H6c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/arrow-down.js
/* harmony default export */ var arrow_down = (["M13 8c-.3 0-.5.1-.7.3L9 11.6V2c0-.5-.4-1-1-1s-1 .5-1 1v9.6L3.7 8.3C3.5 8.1 3.3 8 3 8c-.5 0-1 .5-1 1 0 .3.1.5.3.7l5 5c.2.2.4.3.7.3s.5-.1.7-.3l5-5c.2-.2.3-.4.3-.7 0-.6-.4-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/arrow-left.js
/* harmony default export */ var arrow_left = (["M13.99 6.99H4.41L7.7 3.7a1.003 1.003 0 00-1.42-1.42l-5 5a1.014 1.014 0 000 1.42l5 5a1.003 1.003 0 001.42-1.42L4.41 8.99H14c.55 0 1-.45 1-1s-.46-1-1.01-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/arrow-right.js
/* harmony default export */ var arrow_right = (["M14.7 7.29l-5-5a.965.965 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l3.29 3.29H1.99c-.55 0-1 .45-1 1s.45 1 1 1h9.59l-3.29 3.29a1.003 1.003 0 001.42 1.42l5-5c.18-.18.29-.43.29-.71s-.12-.52-.3-.7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/arrow-top-left.js
/* harmony default export */ var arrow_top_left = (["M13.71 12.29L5.41 4H10c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1s1-.45 1-1V5.41l8.29 8.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/arrow-top-right.js
/* harmony default export */ var arrow_top_right = (["M13 2H6c-.55 0-1 .45-1 1s.45 1 1 1h4.59L2.3 12.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L12 5.41V10c0 .55.45 1 1 1s1-.45 1-1V3c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/arrow-up.js
/* harmony default export */ var arrow_up = (["M13.7 6.3l-5-5C8.5 1.1 8.3 1 8 1s-.5.1-.7.3l-5 5c-.2.2-.3.4-.3.7 0 .6.5 1 1 1 .3 0 .5-.1.7-.3L7 4.4V14c0 .6.4 1 1 1s1-.4 1-1V4.4l3.3 3.3c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/arrows-horizontal.js
/* harmony default export */ var arrows_horizontal = (["M15.7 7.3l-4-4c-.2-.2-.4-.3-.7-.3-.6 0-1 .5-1 1 0 .3.1.5.3.7L12.6 7H3.4l2.3-2.3c.2-.2.3-.4.3-.7 0-.5-.4-1-1-1-.3 0-.5.1-.7.3l-4 4c-.2.2-.3.4-.3.7s.1.5.3.7l4 4c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7L3.4 9h9.2l-2.3 2.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3l4-4c.2-.2.3-.4.3-.7s-.1-.5-.3-.7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/arrows-vertical.js
/* harmony default export */ var arrows_vertical = (["M12 10c-.3 0-.5.1-.7.3L9 12.6V3.4l2.3 2.3c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7l-4-4C8.5.1 8.3 0 8 0s-.5.1-.7.3l-4 4c-.2.2-.3.4-.3.7 0 .6.5 1 1 1 .3 0 .5-.1.7-.3L7 3.4v9.2l-2.3-2.3c-.2-.2-.4-.3-.7-.3-.5 0-1 .4-1 1 0 .3.1.5.3.7l4 4c.2.2.4.3.7.3s.5-.1.7-.3l4-4c.2-.2.3-.4.3-.7 0-.6-.4-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/asterisk.js
/* harmony default export */ var asterisk = (["M14.54 11.18l.01-.02L9.8 8l4.75-3.17-.01-.02c.27-.17.46-.46.46-.81 0-.55-.45-1-1-1-.21 0-.39.08-.54.18l-.01-.02L9 6.13V1c0-.55-.45-1-1-1S7 .45 7 1v5.13L2.55 3.17l-.01.01A.969.969 0 002 3c-.55 0-1 .45-1 1 0 .35.19.64.46.82l-.01.01L6.2 8l-4.75 3.17.01.02c-.27.17-.46.46-.46.81 0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02L7 9.87V15c0 .55.45 1 1 1s1-.45 1-1V9.87l4.45 2.96.01-.02c.15.11.33.19.54.19.55 0 1-.45 1-1 0-.35-.19-.64-.46-.82z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/at.js
/* harmony default export */ var at = (["M5.816 8.371c0 1.515.603 2.274 1.814 2.274 1.273 0 1.971-.954 2.089-2.86l.12-2.331a5.298 5.298 0 00-1.337-.165c-.848 0-1.507.276-1.979.828-.472.554-.707 1.305-.707 2.254M16 7.133c0 .93-.149 1.78-.446 2.55-.297.77-.714 1.372-1.253 1.802a2.913 2.913 0 01-1.868.642c-.521 0-.975-.137-1.356-.41a1.989 1.989 0 01-.773-1.111h-.12c-.323.506-.723.887-1.198 1.14a3.35 3.35 0 01-1.605.38c-1.076 0-1.924-.34-2.541-1.023-.618-.682-.926-1.607-.926-2.77 0-1.341.41-2.428 1.229-3.264.818-.835 1.918-1.253 3.298-1.253.502 0 1.058.043 1.669.13.61.088 1.155.21 1.63.367l-.218 4.536v.234c0 1.04.344 1.562 1.031 1.562.521 0 .935-.332 1.241-.996.308-.664.463-1.508.463-2.537 0-1.112-.232-2.09-.695-2.931a4.762 4.762 0 00-1.97-1.947c-.851-.456-1.83-.682-2.934-.682-1.405 0-2.628.286-3.67.858a5.736 5.736 0 00-2.382 2.455c-.549 1.062-.822 2.296-.822 3.7 0 1.888.512 3.339 1.535 4.353 1.024 1.015 2.492 1.52 4.409 1.52 1.46 0 2.982-.29 4.567-.877v1.6c-1.386.56-2.896.839-4.527.839-2.446 0-4.35-.65-5.717-1.945C.685 12.757 0 10.947 0 8.625c0-1.698.37-3.209 1.11-4.532a7.556 7.556 0 013.076-3.038C5.497.35 6.982 0 8.64 0c1.433 0 2.71.294 3.827.878a6.294 6.294 0 012.607 2.504c.619 1.082.926 2.332.926 3.75"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/automatic-updates.js
/* harmony default export */ var automatic_updates = (["M8 14c-3.31 0-6-2.69-6-6 0-1.77.78-3.36 2-4.46V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1s.45 1 1 1h1.74A7.95 7.95 0 000 8c0 4.42 3.58 8 8 8 .55 0 1-.45 1-1s-.45-1-1-1zM8 2a5.9 5.9 0 012.95.81l1.47-1.47A7.893 7.893 0 008 0c-.55 0-1 .45-1 1s.45 1 1 1zm2.71 6.71l5-5a1.003 1.003 0 00-1.42-1.42L10 6.59l-1.29-1.3a1.003 1.003 0 00-1.42 1.42l2 2c.18.18.43.29.71.29s.53-.11.71-.29zM16 8c0-.55-.06-1.08-.16-1.6l-1.87 1.87A5.966 5.966 0 0112 12.45V11c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1h-1.74A7.95 7.95 0 0016 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/axle.js
/* harmony default export */ var axle = (["M1 13h1v.5a.5.5 0 001 0v-11a.5.5 0 00-1 0V3H1v10zM15 3h-1v-.5a.5.5 0 00-1 0v11a.5.5 0 001 0V13h1V3zM3 6l1.789.894A1 1 0 005.236 7h5.528a1 1 0 00.447-.106L13 6v4l-1.789-.894A1 1 0 0010.764 9H5.236a1 1 0 00-.447.106L3 10V6z", "M0 8a1 1 0 011-1h1v2H1a1 1 0 01-1-1zM16 8a1 1 0 01-1 1h-1V7h1a1 1 0 011 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/backlink.js
/* harmony default export */ var backlink = (["M14 10a1 1 0 110 2h-.585l2.292 2.293a1 1 0 01-1.32 1.497l-.094-.083L12 13.415V14a1 1 0 11-2 0l.003-3.075.012-.1.012-.059.033-.108.034-.081.052-.098.067-.096.08-.09a1.01 1.01 0 01.112-.097l.11-.071.143-.065.076-.024.091-.02.116-.014L14 10zM6.036 6.136l-3.45 3.45-.117.127a2 2 0 002.818 2.818l.127-.117 3.45-3.449a4 4 0 01-.885 3.704l-.15.16-1 1A4 4 0 011.02 8.33l.15-.16 1-1a3.998 3.998 0 013.865-1.035zm4.671-1.843a1 1 0 01.083 1.32l-.083.094-5 5a1 1 0 01-1.497-1.32l.083-.094 5-5a1 1 0 011.414 0zm3.121-3.121a4 4 0 01.151 5.497l-.15.16-1 1a3.998 3.998 0 01-3.864 1.036l3.45-3.45.116-.128a2 2 0 00-2.818-2.818l-.127.117-3.45 3.45A4 4 0 017.02 2.33l.15-.16 1-1a4 4 0 015.657 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/badge.js
/* harmony default export */ var badge = (["M13.36 4.59c-.15-1.13.5-2.01 1.1-2.87L13.43.53c-1.72.88-4.12.65-5.63-.53-1.51 1.18-3.91 1.41-5.63.52l-1.03 1.2c.61.86 1.25 1.74 1.1 2.87-.3 2.29-2.45 4.17-1.32 6.68.45 1.14 1.44 1.9 2.72 2.2 1.56.36 3.52.72 4.16 2.53.64-1.81 2.6-2.16 4.16-2.54 1.28-.3 2.27-1.06 2.72-2.2 1.12-2.5-1.03-4.38-1.32-6.67z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/ban-circle.js
/* harmony default export */ var ban_circle = (["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm3 9H5c-.55 0-1-.45-1-1s.45-1 1-1h6c.55 0 1 .45 1 1s-.45 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/bank-account.js
/* harmony default export */ var bank_account = (["M15.36 6.46l-.62-.14c-.31-1.12-.98-2.15-1.87-2.99l.4-1.77a.438.438 0 00-.49-.56c-.85.09-1.6.42-2.14.98-.84-.32-1.87-.51-2.85-.51-2.49 0-4.63 1.17-5.92 2.89-.18-.04-.36-.09-.53-.09-.76 0-1.34.61-1.34 1.4 0 .56.31 1.03.76 1.26-.05.33-.09.7-.09 1.07 0 1.68.71 3.17 1.83 4.34l-.27 1.59c-.09.56.35 1.07.89 1.07h.58c.45 0 .8-.33.89-.79l.04-.37c.94.42 2 .7 3.16.7 1.11 0 2.23-.23 3.16-.7l.05.37c.09.47.45.79.89.79h.58c.53 0 .98-.51.89-1.07l-.27-1.54c.62-.61 1.07-1.35 1.38-2.15l.8-.19c.4-.09.71-.47.71-.93V7.4c.09-.47-.22-.84-.62-.94zM12 8c-.6 0-1-.7-1-1.5S11.4 5 12 5s1 .7 1 1.5S12.6 8 12 8zM6.21 4.92c-.41.2-.91.04-1.12-.36-.21-.4-.04-.88.37-1.07 1.35-.65 2.73-.65 4.08 0 .41.2.58.68.37 1.07-.21.4-.71.56-1.12.36-.87-.43-1.71-.43-2.58 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/barcode.js
/* harmony default export */ var barcode = (["M0 14h2V2H0v12zm6 0h1V2H6v12zm2 0h1V2H8v12zm-5 0h2V2H3v12zM15 2v12h1V2h-1zm-5 12h1V2h-1v12zm2 0h2V2h-2v12z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/blank.js
var p = [];
/* harmony default export */ var blank = (p);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/blocked-person.js
/* harmony default export */ var blocked_person = (["M9.39 12.69c-1.2-.53-1.04-.85-1.08-1.29-.01-.07-.01-.13-.02-.2.41-.37.75-.87.97-1.44 0 0 .01-.03.01-.04.05-.13.09-.26.13-.39.27-.06.43-.36.5-.63.01-.03.03-.08.05-.12C8.18 7.8 6.94 6.04 6.94 4c0-.32.04-.62.09-.92-.17-.03-.35-.08-.51-.08-.65 0-1.37.2-1.88.59-.5.38-.87.92-1.05 1.51-.04.14-.07.27-.09.41-.09.48-.14 1.23-.14 1.74v.06c-.19.08-.36.27-.4.68-.03.31.1.59.16.7.06.28.23.59.51.64.04.14.08.27.13.39 0 .01.01.02.01.02v.01c.22.59.57 1.1.99 1.46 0 .06-.01.12-.01.17-.04.44.08.76-1.12 1.29-1.2.53-3.01 1.1-3.38 1.95C-.12 15.5.03 16 .03 16h12.96s.15-.5-.22-1.36c-.37-.85-2.18-1.42-3.38-1.95zM11.97 0C9.75 0 7.94 1.79 7.94 4s1.8 4 4.03 4S16 6.21 16 4s-1.8-4-4.03-4zM9.96 4c0-1.1.9-2 2.01-2 .37 0 .72.11 1.02.28l-2.75 2.73c-.17-.3-.28-.64-.28-1.01zm2.01 2c-.37 0-.72-.11-1.02-.28l2.75-2.73c.18.3.28.64.28 1.01.01 1.1-.9 2-2.01 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/bold.js
/* harmony default export */ var bold = (["M11.7 7c.2-.4.3-1 .3-1.5v-.4V5c0-.1 0-.2-.1-.3v-.1C11.4 3.1 10.1 2 8.5 2H4c-.5 0-1 .4-1 1v10c0 .5.4 1 1 1h5c2.2 0 4-1.8 4-4 0-1.2-.5-2.3-1.3-3zM6 5h2c.6 0 1 .4 1 1s-.4 1-1 1H6V5zm3 6H6V9h3c.6 0 1 .4 1 1s-.4 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/book.js
/* harmony default export */ var book = (["M2 1v14c0 .55.45 1 1 1h1V0H3c-.55 0-1 .45-1 1zm11-1h-1v7l-2-2-2 2V0H5v16h8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/bookmark.js
/* harmony default export */ var bookmark = (["M11.2.01h-.15C11.03.01 11.02 0 11 0H5c-.02 0-.03.01-.05.01H4.8c-.44 0-.8.37-.8.82v14.75c0 .45.25.56.57.24l2.87-2.94c.31-.32.82-.32 1.13 0l2.87 2.94c.31.32.57.21.57-.24V.83C12 .38 11.64.01 11.2.01z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/box.js
/* harmony default export */ var box = (["M6 10h4c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1zm9.93-4.37v-.02L13.94.63C13.78.26 13.42 0 13 0H3c-.42 0-.78.26-.93.63L.08 5.61l-.01.02C.03 5.74 0 5.87 0 6v9c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6c0-.13-.03-.26-.07-.37zM9 2h3.32l1.2 3H9V2zM3.68 2H7v3H2.48l1.2-3zM14 14H2V7h12v7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/briefcase.js
/* harmony default export */ var briefcase = (["M15 3.98h-3v-2c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v2H1c-.55 0-1 .45-1 1v4h3v-1h2v1h6v-1h2v1h3v-4c0-.55-.45-1-1-1zm-5 0H6v-1h4v1zm3 7h-2v-1H5v1H3v-1H0v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-4h-3v1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/bring-data.js
/* harmony default export */ var bring_data = (["M14 14a1 1 0 010 2H2a1 1 0 010-2h12zM7.995 3.005c.55 0 1 .45 1 .999v5.584l1.29-1.288a1.002 1.002 0 011.42 1.419l-3 2.996a1.015 1.015 0 01-1.42 0l-3-2.997A1.002 1.002 0 015.705 8.3l1.29 1.29V4.013c0-.55.45-1.009 1-1.009zM14 0a1 1 0 110 2 1 1 0 010-2zm-3 0a1 1 0 110 2 1 1 0 010-2zM8 0a1 1 0 110 2 1 1 0 010-2zM5 0a1 1 0 110 2 1 1 0 010-2zM2 0a1 1 0 110 2 1 1 0 010-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/bug.js
/* harmony default export */ var bug = (["M5 3a3 3 0 016 0 5.022 5.022 0 011.425 1.67L13 4.382V3a1 1 0 112 0v2a1 1 0 01-.553.894l-1.46.731c.008.124.013.249.013.375v1h2a1 1 0 110 2h-2a5 5 0 01-.21 1.439l1.581.633A1 1 0 0115 13v2a1 1 0 11-2 0v-1.323l-1.167-.467A4.99 4.99 0 018 15a4.99 4.99 0 01-3.833-1.79L3 13.677V15a1 1 0 11-2 0v-2a1 1 0 01.629-.928l1.581-.633A5 5 0 013 10H1a1 1 0 110-2h2V7c0-.126.005-.251.014-.375l-1.461-.73A1 1 0 011 5V3a1 1 0 012 0v1.382l.575.288A5.023 5.023 0 015 3zm0 6v1a3 3 0 106 0V7a3 3 0 00-6 0v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/buggy.js
/* harmony default export */ var buggy = (["M13.928.629A1 1 0 0012.89.006l-9 1a1 1 0 00-.747.48L.431 6.005A.5.5 0 000 6.5v3a.5.5 0 00.5.5h2.798c.341 0 .672.116.938.329l1.952 1.561A.5.5 0 006.5 12H10a.5.5 0 00.4-.2l.9-1.2a1.5 1.5 0 011.2-.6h3a.5.5 0 00.5-.5v-4a.5.5 0 00-.308-.462L13.928.628zM12.36 2.094l-.006-.016-3.166.352 1.121 3.083 2.052-3.419zm.467 1.166l-1.649 2.748 2.51-.594-.861-2.154zM9.603 6.496L8.166 2.543l-3.563.396L2.766 6H3.5a.5.5 0 01.367.16L6.218 8.7h1.914l1.452-2.177a.5.5 0 01.019-.027zM2.5 16a2.5 2.5 0 100-5 2.5 2.5 0 000 5zm11 0a2.5 2.5 0 100-5 2.5 2.5 0 000 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/build.js
/* harmony default export */ var build = (["M15.39 12.41L7.7 6l1.07-1.1c.34-.34-.12-.63.12-1.26.88-2.17 3.41-2.35 3.41-2.35s.36-.37.71-.72C9.74-.81 7.53.53 6.54 1.4L3.12 4.9l-.71.72c-.39.4-.39 1.05 0 1.45l-.7.72c-.39-.4-1.02-.4-1.41 0s-.39 1.05 0 1.45l1.41 1.45c.39.4 1.02.4 1.41 0s.39-1.05 0-1.45l.71-.72c.39.4 1.02.4 1.41 0l.8-.82 6.39 7.67c.82.82 2.14.82 2.96 0 .81-.82.81-2.15 0-2.96z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/calculator.js
/* harmony default export */ var calculator = (["M13 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM6 14H4v-2h2v2zm0-3H4V9h2v2zm0-3H4V6h2v2zm3 6H7v-2h2v2zm0-3H7V9h2v2zm0-3H7V6h2v2zm3 6h-2V9h2v5zm0-6h-2V6h2v2zm0-3H4V2h8v3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/calendar.js
/* harmony default export */ var calendar = (["M11 3c.6 0 1-.5 1-1V1c0-.6-.4-1-1-1s-1 .4-1 1v1c0 .5.4 1 1 1zm3-2h-1v1c0 1.1-.9 2-2 2s-2-.9-2-2V1H6v1c0 1.1-.9 2-2 2s-2-.9-2-2V1H1c-.6 0-1 .5-1 1v12c0 .6.4 1 1 1h13c.6 0 1-.4 1-1V2c0-.6-.5-1-1-1zM5 13H2v-3h3v3zm0-4H2V6h3v3zm4 4H6v-3h3v3zm0-4H6V6h3v3zm4 4h-3v-3h3v3zm0-4h-3V6h3v3zM4 3c.6 0 1-.5 1-1V1c0-.6-.4-1-1-1S3 .4 3 1v1c0 .5.4 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/camera.js
/* harmony default export */ var camera = (["M15 3h-2.59L10.7 1.29A.956.956 0 0010 1H6c-.28 0-.53.11-.71.29L3.59 3H1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h2.56c1.1 1.22 2.67 2 4.44 2s3.34-.78 4.44-2H15c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zM3 6H1V5h2v1zm5 6c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/caret-down.js
/* harmony default export */ var caret_down = (["M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/caret-left.js
/* harmony default export */ var caret_left = (["M9.5 4c-.13 0-.24.05-.33.13l-4 3.5c-.1.09-.17.22-.17.37s.07.28.17.37l4 3.5a.495.495 0 00.83-.37v-7c0-.28-.22-.5-.5-.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/caret-right.js
/* harmony default export */ var caret_right = (["M11 8c0-.15-.07-.28-.17-.37l-4-3.5A.495.495 0 006 4.5v7a.495.495 0 00.83.37l4-3.5c.1-.09.17-.22.17-.37z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/caret-up.js
/* harmony default export */ var caret_up = (["M11.87 9.17s.01 0 0 0l-3.5-4C8.28 5.07 8.15 5 8 5s-.28.07-.37.17l-3.5 4a.495.495 0 00.37.83h7a.495.495 0 00.37-.83z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/cargo-ship.js
/* harmony default export */ var cargo_ship = (["M10 1h3a1 1 0 011 1v2h-4V1zM2.25 4a.25.25 0 00-.25.25V9H.883a.5.5 0 00-.429.757l1.072 1.787c.207.344.477.638.791.87A9.76 9.76 0 011 12.5a.5.5 0 000 1c2.067 0 3.414-.543 4.161-.917.55.373 1.505.917 2.839.917 1.32 0 2.27-.533 2.822-.905l.004.002c.196.105.48.24.856.374.75.268 1.857.529 3.318.529a.5.5 0 000-1c-.326 0-.63-.014-.916-.039.47-.328.848-.79 1.07-1.347l.572-1.428A.5.5 0 0015.26 9H4V4.25A.25.25 0 003.75 4h-1.5zm2.714 9.56a.5.5 0 01.527.033c.455.325 1.277.907 2.509.907s2.054-.582 2.51-.907a.5.5 0 01.579-.001l.006.004.036.023c.034.022.09.055.168.097.154.082.394.197.72.313.649.232 1.642.471 2.981.471a.5.5 0 010 1c-1.46 0-2.568-.261-3.318-.53a6.316 6.316 0 01-.856-.373l-.004-.002c-.552.372-1.502.905-2.822.905-1.334 0-2.289-.544-2.839-.917-.747.374-2.094.917-4.161.917a.5.5 0 010-1c2.129 0 3.384-.63 3.964-.94zM14 5h-4v3h3a1 1 0 001-1V5zM5 2a1 1 0 011-1h3v3H5V2zm4 3H5v2a1 1 0 001 1h3V5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/cell-tower.js
/* harmony default export */ var cell_tower = (["M8.97 6.76c-.01-.05-.04-.08-.06-.13-.02-.05-.03-.1-.05-.15.08-.14.14-.3.14-.48 0-.55-.45-1-1-1s-1 .45-1 1c0 .18.06.34.14.48-.03.05-.03.1-.05.15-.02.05-.05.08-.06.13l-2 8c-.13.54.19 1.08.73 1.21a.995.995 0 001.21-.73L7.53 13h.94l.56 2.24a1 1 0 001.94-.48l-2-8zM3.72 1.7C4.1 1.3 4.09.67 3.7.28S2.67-.09 2.28.3c-3.05 3.12-3.05 8.28 0 11.4a.996.996 0 101.43-1.39c-2.28-2.35-2.28-6.27.01-8.61zM11.6 3.2c-.44-.33-1.07-.24-1.4.2-.33.44-.24 1.07.2 1.4.43.32.53 1.96-.04 2.43-.42.35-.48.98-.13 1.41.35.42.98.48 1.41.13 1.59-1.33 1.39-4.5-.04-5.57z", "M13.72.3c-.39-.4-1.02-.4-1.41-.02s-.41 1.02-.03 1.42c2.29 2.34 2.29 6.26 0 8.6-.39.39-.38 1.03.02 1.41s1.03.38 1.41-.02c3.05-3.11 3.05-8.27.01-11.39zM5.4 7.23c-.57-.47-.47-2.11-.04-2.43.44-.33.53-.96.2-1.4s-.96-.53-1.4-.2c-1.44 1.07-1.63 4.24-.04 5.57.42.35 1.05.3 1.41-.13.35-.42.29-1.06-.13-1.41z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/changes.js
/* harmony default export */ var changes = (["M8.29 7.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3a1.003 1.003 0 00-1.42-1.42L13 7.59V1c0-.55-.45-1-1-1s-1 .45-1 1v6.59l-1.29-1.3a1.003 1.003 0 00-1.42 1.42zM14.5 13h-13c-.83 0-1.5.67-1.5 1.5S.67 16 1.5 16h13c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5zM1 5c.28 0 .53-.11.71-.29L3 3.41V10c0 .55.45 1 1 1s1-.45 1-1V3.41L6.29 4.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3C4.53.11 4.28 0 4 0s-.53.11-.71.29l-3 3A1.003 1.003 0 001 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/chart.js
/* harmony default export */ var chart = (["M0 15c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V9.4L0 11v4zm6-5.5V15c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-5l-1 1-3-1.5zM13 7l-1 1v7c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V7.88c-.26.07-.58.12-1 .12-1.96 0-2-1-2-1zm2-6h-3c-.55 0-1 .45-1 1s.45 1 1 1h.59L8.8 6.78 5.45 5.11v.01C5.31 5.05 5.16 5 5 5s-.31.05-.44.11V5.1l-4 2v.01C.23 7.28 0 7.61 0 8c0 .55.45 1 1 1 .16 0 .31-.05.44-.11v.01L5 7.12 8.55 8.9v-.01c.14.06.29.11.45.11.28 0 .53-.11.71-.29L14 4.41V5c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/chat.js
/* harmony default export */ var chat = (["M6 10c-1.1 0-2-.9-2-2V3H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1v2a1.003 1.003 0 001.71.71L5.41 13H10c.55 0 1-.45 1-1v-1.17l-.83-.83H6zm9-10H6c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h4.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V9c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/chevron-backward.js
/* harmony default export */ var chevron_backward = (["M7.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L6 6.59V4c0-.55-.45-1-1-1s-1 .45-1 1v8c0 .55.45 1 1 1s1-.45 1-1V9.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L7.41 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/chevron-down.js
/* harmony default export */ var chevron_down = (["M12 5c-.28 0-.53.11-.71.29L8 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0012 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/chevron-forward.js
/* harmony default export */ var chevron_forward = (["M10 3c-.55 0-1 .45-1 1v2.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L7.59 8 4.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L9 9.41V12c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/chevron-left.js
/* harmony default export */ var chevron_left = (["M7.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C5.11 7.47 5 7.72 5 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L7.41 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/chevron-right.js
/* harmony default export */ var chevron_right = (["M10.71 7.29l-4-4a1.003 1.003 0 00-1.42 1.42L8.59 8 5.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/chevron-up.js
/* harmony default export */ var chevron_up = (["M12.71 9.29l-4-4C8.53 5.11 8.28 5 8 5s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L8 7.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/circle.js
/* harmony default export */ var circle = (["M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zm0 14c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/circle-arrow-down.js
/* harmony default export */ var circle_arrow_down = (["M11 7c-.28 0-.53.11-.71.29L9 8.59V5c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-1.29-1.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0011 7zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/circle-arrow-left.js
/* harmony default export */ var circle_arrow_left = (["M11 7H7.41L8.7 5.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C4.11 7.47 4 7.72 4 8c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L7.41 9H11c.55 0 1-.45 1-1s-.45-1-1-1zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/circle-arrow-right.js
/* harmony default export */ var circle_arrow_right = (["M8.71 4.29a1.003 1.003 0 00-1.42 1.42L8.59 7H5c-.55 0-1 .45-1 1s.45 1 1 1h3.59L7.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/circle-arrow-up.js
/* harmony default export */ var circle_arrow_up = (["M8.71 4.29C8.53 4.11 8.28 4 8 4s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L7 7.41V11c0 .55.45 1 1 1s1-.45 1-1V7.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/citation.js
/* harmony default export */ var citation = (["M15.02 5c0-1.66-1.34-3-3-3s-3 1.34-3 3a2.996 2.996 0 003.6 2.94C12.1 9.76 11.14 11 10.02 11c-.55 0-1 .45-1 1s.45 1 1 1c2.76 0 5-3.13 5-7 0-.2-.02-.39-.04-.58.01-.14.04-.28.04-.42zm-11-3c-1.66 0-3 1.34-3 3a2.996 2.996 0 003.6 2.94C4.1 9.76 3.14 11 2.02 11c-.55 0-1 .45-1 1s.45 1 1 1c2.76 0 5-3.13 5-7 0-.2-.02-.39-.04-.58.01-.14.04-.28.04-.42 0-1.66-1.35-3-3-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/clean.js
/* harmony default export */ var clean = (["M12 8l-1.2 2.796-2.8 1.2 2.8 1.197L12 16l1.2-2.807L16 12l-2.8-1.204zM5 0L3.5 3.5 0 4.995 3.5 6.5 5 10l1.5-3.5L10 5 6.5 3.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/clip.js
/* harmony default export */ var clip = (["M0 1a1 1 0 011-1h4a1 1 0 010 2H2v3a1 1 0 01-2 0V1zm1 15a1 1 0 01-1-1v-4a1 1 0 112 0v3h3a1 1 0 110 2H1zm14 0a1 1 0 001-1v-4a1 1 0 10-2 0v3h-3a1 1 0 100 2h4zm0-16a1 1 0 011 1v4a1 1 0 11-2 0V2h-3a1 1 0 110-2h4zM8 11a3 3 0 100-6 3 3 0 000 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/clipboard.js
/* harmony default export */ var clipboard = (["M11 2c0-.55-.45-1-1-1h.22C9.88.4 9.24 0 8.5 0S7.12.4 6.78 1H7c-.55 0-1 .45-1 1v1h5V2zm2 0h-1v2H5V2H4c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/cloud.js
/* harmony default export */ var cloud = (["M12 6c-.03 0-.07 0-.1.01A5 5 0 002 7c0 .11.01.22.02.33A3.51 3.51 0 000 10.5C0 12.43 1.57 14 3.5 14H12c2.21 0 4-1.79 4-4s-1.79-4-4-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/cloud-download.js
/* harmony default export */ var cloud_download = (["M11 11c-.28 0-.53.11-.71.29L9 12.59V8c0-.55-.45-1-1-1s-1 .45-1 1v4.59L5.71 11.3A.965.965 0 005 11a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0011 11zm1-7c-.03 0-.07 0-.1.01A5 5 0 002 5c0 .11.01.22.02.33A3.51 3.51 0 000 8.5c0 1.41.84 2.61 2.03 3.17C2.2 10.17 3.46 9 5 9c.06 0 .13.02.19.02C5.07 8.7 5 8.36 5 8c0-1.66 1.34-3 3-3s3 1.34 3 3c0 .36-.07.7-.19 1.02.06 0 .13-.02.19-.02 1.48 0 2.7 1.07 2.95 2.47A3.964 3.964 0 0016 8c0-2.21-1.79-4-4-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/cloud-upload.js
/* harmony default export */ var cloud_upload = (["M8.71 7.29C8.53 7.11 8.28 7 8 7s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L7 10.41V15c0 .55.45 1 1 1s1-.45 1-1v-4.59l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3zM12 4c-.03 0-.07 0-.1.01A5 5 0 002 5c0 .11.01.22.02.33a3.495 3.495 0 00.07 6.37c-.05-.23-.09-.46-.09-.7 0-.83.34-1.58.88-2.12l3-3a2.993 2.993 0 014.24 0l3 3c.54.54.88 1.29.88 2.12 0 .16-.02.32-.05.47C15.17 10.78 16 9.5 16 8c0-2.21-1.79-4-4-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/code.js
/* harmony default export */ var code = (["M15.71 7.29l-3-3a1.003 1.003 0 00-1.42 1.42L13.59 8l-2.29 2.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM5 5a1.003 1.003 0 00-1.71-.71l-3 3C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L2.41 8 4.7 5.71c.19-.18.3-.43.3-.71zm4-3c-.48 0-.87.35-.96.81l-2 10c-.01.06-.04.12-.04.19 0 .55.45 1 1 1 .48 0 .87-.35.96-.81l2-10c.01-.06.04-.12.04-.19 0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/code-block.js
/* harmony default export */ var code_block = (["M15 3h-2V2c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v1H7V2c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v1H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm-8.29 8.29a1.003 1.003 0 01-1.42 1.42l-3-3C2.11 9.53 2 9.28 2 9s.11-.53.29-.71l3-3a1.003 1.003 0 011.42 1.42L4.41 9l2.3 2.29zm7-1.58l-3 3a1.003 1.003 0 01-1.42-1.42L11.59 9l-2.3-2.29a1.003 1.003 0 011.42-1.42l3 3c.18.18.29.43.29.71s-.11.53-.29.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/cog.js
/* harmony default export */ var cog = (["M15.19 6.39h-1.85c-.11-.37-.27-.71-.45-1.04l1.36-1.36c.31-.31.31-.82 0-1.13l-1.13-1.13a.803.803 0 00-1.13 0l-1.36 1.36c-.33-.17-.67-.33-1.04-.44V.79c0-.44-.36-.8-.8-.8h-1.6c-.44 0-.8.36-.8.8v1.86c-.39.12-.75.28-1.1.47l-1.3-1.3c-.3-.3-.79-.3-1.09 0L1.82 2.91c-.3.3-.3.79 0 1.09l1.3 1.3c-.2.34-.36.7-.48 1.09H.79c-.44 0-.8.36-.8.8v1.6c0 .44.36.8.8.8h1.85c.11.37.27.71.45 1.04l-1.36 1.36c-.31.31-.31.82 0 1.13l1.13 1.13c.31.31.82.31 1.13 0l1.36-1.36c.33.18.67.33 1.04.44v1.86c0 .44.36.8.8.8h1.6c.44 0 .8-.36.8-.8v-1.86c.39-.12.75-.28 1.1-.47l1.3 1.3c.3.3.79.3 1.09 0l1.09-1.09c.3-.3.3-.79 0-1.09l-1.3-1.3c.19-.35.36-.71.48-1.1h1.85c.44 0 .8-.36.8-.8v-1.6a.816.816 0 00-.81-.79zm-7.2 4.6c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/collapse-all.js
/* harmony default export */ var collapse_all = (["M7.29 6.71c.18.18.43.29.71.29s.53-.11.71-.29l4-4a1.003 1.003 0 00-1.42-1.42L8 4.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4zm1.42 2.58C8.53 9.11 8.28 9 8 9s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L8 11.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/color-fill.js
/* harmony default export */ var color_fill = (["M3.093 7c.017-.05.036-.1.058-.15.106-.248.225-.397.263-.436L7 2.828 11.172 7H3.093zM6.5 13c1 0 2.5-1 3-1.5l3.086-3.086L14 7l-1.414-1.414-4.172-4.172L7 0 5.586 1.414 2 5c-.5.5-1 1.5-1 2.5s.5 2 1 2.5l2 2c.5.5 1.5 1 2.5 1zm7-4l1.125 1.667c.238.353.375.666.375 1 0 .666-.375 1.333-1.5 1.333s-1.5-.667-1.5-1.333c0-.334.137-.647.375-1L13.5 9zM0 15a1 1 0 011-1h14a1 1 0 110 2H1a1 1 0 01-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/column-layout.js
/* harmony default export */ var column_layout = (["M15 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM4 13H2V3h2v10zm3 0H5V3h2v10zm7 0H8V3h6v10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/comment.js
/* harmony default export */ var comment = (["M14 1H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h2v3a1.003 1.003 0 001.71.71L8.41 12H14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM3.5 8C2.67 8 2 7.33 2 6.5S2.67 5 3.5 5 5 5.67 5 6.5 4.33 8 3.5 8zm4 0C6.67 8 6 7.33 6 6.5S6.67 5 7.5 5 9 5.67 9 6.5 8.33 8 7.5 8zm4 0c-.83 0-1.5-.67-1.5-1.5S10.67 5 11.5 5s1.5.67 1.5 1.5S12.33 8 11.5 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/comparison.js
/* harmony default export */ var comparison = (["M7.99-.01c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1v-14c0-.55-.45-1-1-1zm-3 3h-4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm10 0h-4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm0 3h-4v-2h4v2zm0 3h-4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm0 3h-4v-2h4v2zm-10-3h-4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/compass.js
/* harmony default export */ var compass = (["M12 8c0 .14-.03.27-.08.39l-3 6.99c-.15.37-.51.62-.92.62s-.77-.25-.92-.61l-3-6.99a1.006 1.006 0 010-.79l3-6.99C7.23.25 7.59 0 8 0s.77.25.92.61l3 6.99c.05.13.08.26.08.4zM8 3.54L6.09 8h3.82L8 3.54z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/compressed.js
/* harmony default export */ var compressed = (["M15.93 5.63v-.02L13.94.63C13.78.26 13.42 0 13 0H3c-.42 0-.78.26-.93.63L.08 5.61l-.01.02C.03 5.74 0 5.87 0 6v9c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6c0-.13-.03-.26-.07-.37zM9 2h3.32l1.2 3H9V2zM3.68 2H7v3H2.48l1.2-3zM14 14H2V7h5v2.59l-1.29-1.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3a1.003 1.003 0 00-1.42-1.42L9 9.59V7h5v7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/confirm.js
/* harmony default export */ var paths_confirm = (["M8.7 4.29a.965.965 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l5-5a1.003 1.003 0 00-1.42-1.42l-4.29 4.3L8.7 4.29zm5.22 3.01c.03.23.07.45.07.69 0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6c.81 0 1.59.17 2.3.46l1.5-1.5A7.998 7.998 0 00-.01 7.99c0 4.42 3.58 8 8 8s8-3.58 8-8c0-.83-.13-1.64-.36-2.39l-1.71 1.7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/console.js
/* harmony default export */ var paths_console = (["M15 15H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1h14c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zM14 5H2v8h12V5zM4 6c.28 0 .53.11.71.29l2 2c.18.18.29.43.29.71s-.11.53-.29.71l-2 2a1.003 1.003 0 01-1.42-1.42L4.59 9l-1.3-1.29A1.003 1.003 0 014 6zm5 4h3c.55 0 1 .45 1 1s-.45 1-1 1H9c-.55 0-1-.45-1-1s.45-1 1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/contrast.js
/* harmony default export */ var contrast = (["M15.2 6.4h-1.44c-.13-.47-.32-.92-.56-1.34L14.26 4c.31-.31.31-.82 0-1.13l-1.13-1.13a.803.803 0 00-1.13 0L10.94 2.8c-.42-.24-.86-.42-1.34-.56V.8c0-.44-.36-.8-.8-.8H7.2c-.44 0-.8.36-.8.8v1.44c-.5.14-.96.34-1.4.59l-1-1c-.3-.3-.79-.3-1.09 0L1.83 2.91c-.3.3-.3.79 0 1.09l1 1c-.25.44-.45.9-.59 1.4H.8c-.44 0-.8.36-.8.8v1.6c0 .44.36.8.8.8h1.44c.13.47.32.92.56 1.34L1.74 12c-.31.31-.31.82 0 1.13l1.13 1.13c.31.31.82.31 1.13 0l1.06-1.06c.42.24.86.42 1.34.56v1.44c0 .44.36.8.8.8h1.6c.44 0 .8-.36.8-.8v-1.44c.5-.14.96-.33 1.4-.59l1 1c.3.3.79.3 1.09 0l1.09-1.09c.3-.3.3-.79 0-1.09l-1-1c.25-.43.45-.9.59-1.4h1.44c.44 0 .8-.36.8-.8V7.2a.818.818 0 00-.81-.8zM8 12c-2.21 0-4-1.79-4-4s1.79-4 4-4v8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/control.js
/* harmony default export */ var control = (["M13 8H8v5h5V8zm0-5H8v4h5V3zm2-3H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2V2h12v12zM7 3H3v10h4V3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/credit-card.js
/* harmony default export */ var credit_card = (["M14.99 2.95h-14c-.55 0-1 .45-1 1v1h16v-1c0-.55-.45-1-1-1zm-15 10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-6h-16v6zm5.5-2h5c.28 0 .5.22.5.5s-.22.5-.5.5h-5c-.28 0-.5-.22-.5-.5s.23-.5.5-.5zm-3 0h1c.28 0 .5.22.5.5s-.22.5-.5.5h-1c-.28 0-.5-.22-.5-.5s.23-.5.5-.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/cross.js
/* harmony default export */ var cross = (["M9.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L8 6.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L6.59 8 3.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L8 9.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L9.41 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/cross-circle.js
/* harmony default export */ var cross_circle = (["M8 16A8 8 0 108 0a8 8 0 000 16zm3.7-10.29L9.41 8l2.3 2.29A1.003 1.003 0 0111 12c-.28 0-.53-.11-.71-.3L8 9.41l-2.29 2.3A1.003 1.003 0 014 11c0-.28.11-.53.3-.71L6.59 8l-2.3-2.29a1.003 1.003 0 011.42-1.42L8 6.59l2.29-2.3A1.003 1.003 0 0112 5c0 .28-.11.53-.3.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/crown.js
/* harmony default export */ var crown = (["M2 6l3 2 3-4 3 4 3-2-1 6H3L2 6zm6-5a1 1 0 110 2 1 1 0 010-2zM1 3a1 1 0 110 2 1 1 0 010-2zm14 0a1 1 0 110 2 1 1 0 010-2zM3 13h10v2H3v-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/cube.js
/* harmony default export */ var cube = (["M14.194 3.54L8 7.41 1.806 3.54 7.504.283a1 1 0 01.992 0l5.698 3.255zm.75.71a1 1 0 01.056.33v6.84a1 1 0 01-.504.868L8.5 15.714V8.277l6.444-4.027zm-13.888 0L7.5 8.277v7.437l-5.996-3.426A1 1 0 011 11.42V4.58a1 1 0 01.056-.33z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/cube-add.js
/* harmony default export */ var cube_add = (["M14 2h1a1 1 0 010 2h-1v1a1 1 0 01-2 0V4h-1a1 1 0 010-2h1V1a1 1 0 012 0v1zM9.136.65a3.001 3.001 0 00.992 5.222c.018.058.038.115.059.172L8 7.41 1.806 3.54 7.504.283a1 1 0 01.992 0l.64.365zM15 7.235v4.184a1 1 0 01-.504.868L8.5 15.714V8.277l2.187-1.367A2.994 2.994 0 0013 8c.768 0 1.47-.289 2-.764zM1.056 4.25L7.5 8.277v7.437l-5.996-3.426A1 1 0 011 11.42V4.58a1 1 0 01.056-.33z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/cube-remove.js
/* harmony default export */ var cube_remove = (["M10.365 5.933L8 7.41 1.806 3.54 7.504.283a1 1 0 01.992 0l.64.365a3.001 3.001 0 001.228 5.283zM15 6v5.42a1 1 0 01-.504.868L8.5 15.714V8.277L12.143 6H15zM1.056 4.25L7.5 8.277v7.437l-5.996-3.426A1 1 0 011 11.42V4.58a1 1 0 01.056-.33zM11 2h4a1 1 0 010 2h-4a1 1 0 010-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/curved-range-chart.js
/* harmony default export */ var curved_range_chart = (["M15 12H3.12l1.81-1.39c1.73 1.01 5.53-.03 9.08-2.61l-1.22-1.5C10.3 8.3 7.86 9.37 6.65 9.29L14.3 3.4l-.6-.8-7.83 6.03c-.01-1.07 1.8-3.19 4.47-5.13L9.12 2C5.38 4.7 3.34 8.1 4.25 9.87L2 11.6V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/cut.js
/* harmony default export */ var cut = (["M13 2s.71-1.29 0-2L8.66 5.07l1.05 1.32L13 2zm.07 8c-.42 0-.82.09-1.18.26L3.31 0c-.69.71 0 2 0 2l3.68 5.02-2.77 3.24A2.996 2.996 0 000 13c0 1.66 1.34 3 3 3s3-1.34 3-3c0-.46-.11-.89-.29-1.27L8.1 8.54l2.33 3.19c-.18.39-.29.82-.29 1.27 0 1.66 1.31 3 2.93 3S16 14.66 16 13s-1.31-3-2.93-3zM3 14c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm10.07 0c-.54 0-.98-.45-.98-1s.44-1 .98-1 .98.45.98 1-.44 1-.98 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/cycle.js
/* harmony default export */ var cycle = (["M13 9a3 3 0 110 6 3 3 0 010-6zM3 9a3 3 0 110 6 3 3 0 010-6zm6.169-5.27l.087.09 1.51 1.746 1.589.549a1 1 0 01.65 1.16l-.032.112a1 1 0 01-1.159.65l-.112-.032-1.843-.636a1 1 0 01-.337-.198l-.092-.093-.959-1.109L7.041 7.5l1.691 1.819a1 1 0 01.26.556L9 10v3a1 1 0 01-1.993.117L7 13l-.001-2.608-2.056-2.211a1 1 0 01-.081-1.264l.082-.1 2.825-3.026a1 1 0 011.4-.061zM13 10.5a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm-10 0a1.5 1.5 0 100 3 1.5 1.5 0 000-3zM11 1a1.5 1.5 0 110 3 1.5 1.5 0 010-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/dashboard.js
/* harmony default export */ var dashboard = (["M5 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM4 7c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4-2c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm-2 6c0 1.1.9 2 2 2s2-.9 2-2c0-.53-2-5-2-5s-2 4.47-2 5zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm4-9c0-.55-.45-1-1-1s-1 .45-1 1 .45 1 1 1 1-.45 1-1zm0 2c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/data-connection.js
/* harmony default export */ var data_connection = (["M1 9.52c.889.641 2.308 1.133 4.003 1.354L5 11a5.994 5.994 0 002.664 4.988c-.217.008-.44.012-.664.012-3.215 0-5.846-.85-5.993-1.906L1 14V9.52zM11 6c2.762 0 5 2.238 5 5s-2.238 5-5 5-5-2.238-5-5 2.238-5 5-5zm1 1l-4 5h2.5l-.5 3 4-5h-2.5l.5-3zm1-3.48v1.822a6.002 6.002 0 00-7.9 4.556l-.248-.03c-2.168-.28-3.733-.966-3.845-1.774L1 8V3.52C2.22 4.4 4.44 5 7 5s4.78-.6 6-1.48zM7 0c3.31 0 6 .9 6 2s-2.69 2-6 2c-3.32 0-6-.9-6-2s2.68-2 6-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/data-lineage.js
/* harmony default export */ var data_lineage = (["M1.067 0C.477 0 0 .478 0 1.067V3.2c0 .59.478 1.067 1.067 1.067h2.24a5.342 5.342 0 002.9 3.734 5.337 5.337 0 00-2.9 3.733h-2.24C.477 11.733 0 12.21 0 12.8v2.133C0 15.523.478 16 1.067 16H6.4c.59 0 1.067-.478 1.067-1.067V12.8c0-.59-.478-1.067-1.067-1.067H4.401a4.27 4.27 0 013.92-3.194l.212-.006V9.6c0 .59.478 1.067 1.067 1.067h5.333c.59 0 1.067-.478 1.067-1.067V6.4c0-.59-.478-1.067-1.067-1.067H9.6c-.59 0-1.067.478-1.067 1.067v1.067a4.268 4.268 0 01-4.132-3.2H6.4c.59 0 1.067-.478 1.067-1.067V1.067C7.467.477 6.989 0 6.4 0H1.067z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/database.js
/* harmony default export */ var database = (["M8 4c3.31 0 6-.9 6-2s-2.69-2-6-2C4.68 0 2 .9 2 2s2.68 2 6 2zm-6-.48V8c0 1.1 2.69 2 6 2s6-.9 6-2V3.52C12.78 4.4 10.56 5 8 5s-4.78-.6-6-1.48zm0 6V14c0 1.1 2.69 2 6 2s6-.9 6-2V9.52C12.78 10.4 10.56 11 8 11s-4.78-.6-6-1.48z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/delete.js
/* harmony default export */ var paths_delete = (["M11.99 4.99a1.003 1.003 0 00-1.71-.71l-2.29 2.3L5.7 4.29a.965.965 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l2.29 2.29-2.29 2.29A1.003 1.003 0 005.7 11.7l2.29-2.29 2.29 2.29a1.003 1.003 0 001.42-1.42L9.41 7.99 11.7 5.7c.18-.18.29-.43.29-.71zm-4-5c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.68 6-6 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/delta.js
/* harmony default export */ var delta = (["M8 0L0 16h16L8 0zM7 5l5 10H2L7 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/derive-column.js
/* harmony default export */ var derive_column = (["M6.08 6.67h-.84c.24-.92.56-1.6.96-2.03.24-.27.48-.4.71-.4.05 0 .08.01.11.04s.04.06.04.1c0 .04-.03.11-.1.21-.06.1-.1.2-.1.29 0 .13.05.24.15.33.1.09.23.14.39.14.17 0 .31-.06.42-.17A.58.58 0 008 4.73c0-.22-.09-.39-.26-.53-.17-.13-.44-.2-.81-.2-.59 0-1.12.16-1.59.48-.48.32-.93.85-1.36 1.59-.15.26-.29.42-.42.49s-.35.11-.64.1l-.19.65h.81l-1.19 4.37c-.2.72-.33 1.16-.4 1.33-.1.24-.26.45-.46.62-.08.07-.18.1-.3.1-.03 0-.06-.01-.08-.03l-.03-.04c0-.02.03-.06.09-.11.06-.06.09-.14.09-.26 0-.13-.05-.23-.14-.32a.6.6 0 00-.4-.13c-.21 0-.38.05-.51.16s-.21.25-.21.4c0 .16.08.3.23.42.16.12.4.18.74.18.53 0 .99-.13 1.4-.39.41-.26.76-.65 1.07-1.19.3-.54.62-1.4.94-2.59l.68-2.53h.82l.2-.63zM15 0H8c-.55 0-1 .45-1 1v2h2V2h5v12H9v-1H7v2c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM8.3 9.94c.18.52.33.89.46 1.13.13.24.28.4.44.51.17.1.37.16.62.16.24 0 .49-.08.74-.25.33-.21.66-.58 1.01-1.09l-.21-.11c-.23.31-.41.5-.52.57a.44.44 0 01-.26.07c-.12 0-.24-.07-.36-.21-.2-.24-.46-.91-.8-2 .3-.49.55-.81.75-.96.15-.11.3-.16.47-.16.06 0 .17.02.34.06.16.04.31.06.43.06.17 0 .31-.06.43-.17.1-.11.16-.25.16-.43 0-.19-.06-.33-.17-.44-.12-.11-.28-.16-.49-.16-.19 0-.37.04-.54.13-.17.09-.39.27-.65.56-.2.21-.48.58-.87 1.11-.15-.66-.41-1.26-.78-1.81l-2.05.33-.04.21c.15-.03.28-.04.39-.04.2 0 .37.08.5.25.21.26.5 1.03.88 2.33-.29.37-.49.61-.6.72-.18.18-.33.3-.44.36-.09.04-.19.07-.3.07-.09 0-.23-.04-.42-.13a.866.866 0 00-.36-.09c-.2 0-.36.06-.49.18a.59.59 0 00-.19.46c0 .17.06.32.18.43.12.11.28.16.48.16.2 0 .38-.04.55-.11.17-.08.39-.24.65-.49.24-.27.6-.66 1.06-1.21z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/desktop.js
/* harmony default export */ var desktop = (["M15 0H1C.45 0 0 .45 0 1v10c0 .55.45 1 1 1h4.75l-.5 2H4c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1h-1.25l-.5-2H15c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 10H2V2h12v8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/diagnosis.js
/* harmony default export */ var diagnosis = (["M3.2 1a1 1 0 01.117 1.993L3.2 3H3v3a2 2 0 001.85 1.995L5 8a2 2 0 001.995-1.85L7 6V3h-.2a1 1 0 01-.993-.883L5.8 2a1 1 0 01.883-.993L6.8 1H8a1 1 0 01.993.883L9 2v4a4.002 4.002 0 01-3.007 3.876v.007L6 10a3 3 0 005.995.176L12 10V7.792a2.5 2.5 0 112 0V10a5 5 0 01-10 0c0-.042.003-.084.008-.125A4 4 0 011.005 6.2L1 6V2a1 1 0 01.883-.993L2 1h1.2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/diagram-tree.js
/* harmony default export */ var diagram_tree = (["M15 8v3h-2V9H9v2H7V9H3v2H1V8a1 1 0 011-1h5V5h2v2h5a1 1 0 011 1zM1 12h2a1 1 0 011 1v2a1 1 0 01-1 1H1a1 1 0 01-1-1v-2a1 1 0 011-1zm12 0h2a1 1 0 011 1v2a1 1 0 01-1 1h-2a1 1 0 01-1-1v-2a1 1 0 011-1zm-6 0h2a1 1 0 011 1v2a1 1 0 01-1 1H7a1 1 0 01-1-1v-2a1 1 0 011-1zM7 0h2a1 1 0 011 1v2a1 1 0 01-1 1H7a1 1 0 01-1-1V1a1 1 0 011-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/direction-left.js
/* harmony default export */ var direction_left = (["M16 1.99l-16 6 16 6-4-6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/direction-right.js
/* harmony default export */ var direction_right = (["M16 7.99l-16-6 4 6-4 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/disable.js
/* harmony default export */ var disable = (["M7.99-.01c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm-6 8c0-3.31 2.69-6 6-6 1.3 0 2.49.42 3.47 1.12l-8.35 8.35c-.7-.98-1.12-2.17-1.12-3.47zm6 6c-1.3 0-2.49-.42-3.47-1.12l8.35-8.35c.7.98 1.12 2.17 1.12 3.47 0 3.32-2.68 6-6 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/divide.js
/* harmony default export */ var divide = (["M9 5a1 1 0 11-2 0 1 1 0 012 0zM5 7c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1H5zm3 5a1 1 0 100-2 1 1 0 000 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/document.js
/* harmony default export */ var paths_document = (["M9 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5L9 0zm3 14H4V2h4v4h4v8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/document-open.js
/* harmony default export */ var document_open = (["M6 12c0 .55.45 1 1 1s1-.45 1-1V8c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1s.45 1 1 1h1.59L1.3 12.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L6 10.41V12zm4-12H4c-.55 0-1 .45-1 1v4h2V2h4v4h4v8H5.24l-1.8 1.8c.16.12.35.2.56.2h10c.55 0 1-.45 1-1V5l-5-5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/document-share.js
/* harmony default export */ var document_share = (["M10 14H2V2h4v4h1c0-.83.36-1.55.91-2.09l-.03-.03.9-.9C8.3 2.45 8 1.77 8 1L7 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V8.22c-.53.48-1.23.78-2 .78v5zm5-14h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.29a1.003 1.003 0 001.42 1.42L14 3.41V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/dollar.js
/* harmony default export */ var dollar = (["M12.83 9.51c-.1-.3-.25-.58-.45-.84s-.45-.49-.75-.7c-.3-.2-.65-.36-1.05-.48-.16-.04-.43-.11-.8-.2-.35-.09-.73-.18-1.12-.28-.39-.1-.74-.19-1.06-.27-.31-.08-.49-.12-.54-.13-.43-.12-.78-.29-1.05-.52-.27-.23-.4-.55-.4-.95 0-.29.07-.53.21-.72.14-.19.32-.34.54-.46.22-.11.46-.19.72-.24.26-.05.52-.08.77-.08.74 0 1.35.15 1.83.46.48.3.75.83.81 1.56h2.14c0-.6-.13-1.13-.38-1.58-.25-.45-.59-.84-1.02-1.15-.43-.31-.93-.54-1.49-.7-.24-.06-.49-.1-.75-.14V1c0-.55-.45-1-1-1s-1 .45-1 1v1.08c-.23.03-.46.07-.68.13-.54.13-1.02.34-1.44.61-.42.28-.76.63-1.02 1.05-.26.43-.39.93-.39 1.5 0 .3.04.59.13.88.09.29.23.56.44.82.21.26.48.49.83.7.35.21.79.38 1.31.51.85.21 1.56.38 2.14.52.58.13 1.08.28 1.52.42.25.09.48.23.69.44.21.21.32.53.32.97 0 .21-.05.42-.14.63-.09.21-.24.39-.45.55-.21.16-.47.29-.81.39-.33.1-.73.15-1.2.15-.43 0-.84-.05-1.21-.14-.37-.09-.7-.24-.99-.43-.29-.2-.51-.45-.67-.76-.16-.31-.24-.68-.24-1.12H3c.01.71.15 1.32.43 1.84.27.52.64.94 1.1 1.27.46.33.99.58 1.61.74.27.07.56.12.85.16V15c0 .55.45 1 1 1s1-.45 1-1v-1.05c.3-.03.61-.08.9-.15.58-.13 1.1-.34 1.56-.63.46-.29.83-.66 1.11-1.11.28-.45.42-1 .42-1.64 0-.31-.05-.61-.15-.91z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/dot.js
/* harmony default export */ var dot = (["M8 5a3 3 0 100 6 3 3 0 100-6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/double-caret-horizontal.js
/* harmony default export */ var double_caret_horizontal = (["M13.71 7.29l-3-3A1.003 1.003 0 009 5v6a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM6 4c-.28 0-.53.11-.71.29l-3 3C2.11 7.47 2 7.72 2 8c0 .28.11.53.29.71l3 3A1.003 1.003 0 007 11V5c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/double-caret-vertical.js
/* harmony default export */ var double_caret_vertical = (["M5 7h6a1.003 1.003 0 00.71-1.71l-3-3C8.53 2.11 8.28 2 8 2s-.53.11-.71.29l-3 3A1.003 1.003 0 005 7zm6 2H5a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0011 9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/double-chevron-down.js
/* harmony default export */ var double_chevron_down = (["M7.29 8.71c.18.18.43.29.71.29s.53-.11.71-.29l4-4a1.003 1.003 0 00-1.42-1.42L8 6.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4zM12 8c-.28 0-.53.11-.71.29L8 11.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0012 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/double-chevron-left.js
/* harmony default export */ var double_chevron_left = (["M4.41 8L7.7 4.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C2.11 7.47 2 7.72 2 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L4.41 8zm5 0l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C7.11 7.47 7 7.72 7 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L9.41 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/double-chevron-right.js
/* harmony default export */ var double_chevron_right = (["M9 8c0-.28-.11-.53-.29-.71l-4-4a1.003 1.003 0 00-1.42 1.42L6.59 8 3.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4C8.89 8.53 9 8.28 9 8zm4.71-.71l-4-4a1.003 1.003 0 00-1.42 1.42L11.59 8 8.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/double-chevron-up.js
/* harmony default export */ var double_chevron_up = (["M4 8c.28 0 .53-.11.71-.29L8 4.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4C8.53 2.11 8.28 2 8 2s-.53.11-.71.29l-4 4A1.003 1.003 0 004 8zm4.71-.71C8.53 7.11 8.28 7 8 7s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L8 9.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/doughnut-chart.js
/* harmony default export */ var doughnut_chart = (["M11.86 7h4.05C15.45 3.39 12.61.52 9 .07v4.07A4 4 0 0111.86 7zM12 8c0 2.21-1.79 4-4 4s-4-1.79-4-4 1.79-4 4-4V0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8h-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/download.js
/* harmony default export */ var download = (["M7.99-.01c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zM11.7 9.7l-3 3c-.18.18-.43.29-.71.29s-.53-.11-.71-.29l-3-3A1.003 1.003 0 015.7 8.28l1.29 1.29V3.99c0-.55.45-1 1-1s1 .45 1 1v5.59l1.29-1.29a1.003 1.003 0 011.71.71c0 .27-.11.52-.29.7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/drag-handle-horizontal.js
/* harmony default export */ var drag_handle_horizontal = (["M2 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm8-2c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 2c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm-4-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM6 5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/drag-handle-vertical.js
/* harmony default export */ var drag_handle_vertical = (["M6 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4-6c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zM6 13c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4 8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/draw.js
/* harmony default export */ var draw = (["M14.9 11c-.3 0-.5.1-.7.3l-3 3c-.2.2-.3.4-.3.7 0 .6.5 1 1 1 .3 0 .5-.1.7-.3l3-3c.2-.2.3-.4.3-.7 0-.5-.4-1-1-1zm-1-1v-.2l-1-5c-.1-.3-.3-.6-.6-.7l-11-4-.3.3 5.8 5.8c.2-.1.4-.2.6-.2.8 0 1.5.7 1.5 1.5S8.3 9 7.4 9s-1.5-.7-1.5-1.5c0-.2.1-.4.2-.6L.3 1.1l-.3.3 4 11c.1.3.4.6.7.6l5 1h.2c.3 0 .5-.1.7-.3l3-3c.2-.2.3-.4.3-.7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/drawer-left.js
/* harmony default export */ var drawer_left = (["M7 0a1 1 0 011 1v14a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1h6zM6 2H2v12h4V2zm2 5h4.59L11.3 5.71A.965.965 0 0111 5a1.003 1.003 0 011.71-.71l3 3c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-3 3a1.003 1.003 0 01-1.42-1.42L12.59 9H8V7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/drawer-left-filled.js
/* harmony default export */ var drawer_left_filled = (["M1 0h6a1 1 0 011 1v14a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1zm7 7h4.59L11.3 5.71A.965.965 0 0111 5a1.003 1.003 0 011.71-.71l3 3c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-3 3a1.003 1.003 0 01-1.42-1.42L12.59 9H8V7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/drawer-right.js
/* harmony default export */ var drawer_right = (["M15 0a1 1 0 011 1v14a1 1 0 01-1 1H9a1 1 0 01-1-1V1a1 1 0 011-1h6zm-1 2h-4v12h4V2zM8 7H3.41L4.7 5.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L3.41 9H8V7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/drawer-right-filled.js
/* harmony default export */ var drawer_right_filled = (["M9 0h6a1 1 0 011 1v14a1 1 0 01-1 1H9a1 1 0 01-1-1V1a1 1 0 011-1zM8 7H3.41L4.7 5.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L3.41 9H8V7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/drive-time.js
/* harmony default export */ var drive_time = (["M15.12 4.76h-1.05l-.76-2.12c-.19-.53-.76-1.08-1.27-1.24 0 0-1.32-.4-4.04-.4-2.72 0-4.04.4-4.04.4-.5.16-1.07.71-1.26 1.24l-.77 2.12H.88c-.48 0-.88.42-.88.94s.4.94.88.94h.38L1 7c-.03.69 0 1.44 0 2v5c0 .66.38 1 1 1s1-.34 1-1v-1h10v1c0 .66.38 1 1 1s1-.34 1-1V9c0-.56-.01-1.37 0-2l-.26-.37h.38c.48 0 .88-.42.88-.93 0-.52-.4-.94-.88-.94zM5 10H3V8h2v2zm8 0h-2V8h2v2zm0-4H3c-.18 0-.06-.82 0-1l.73-1.63C3.79 3.19 3.82 3 4 3h8c.18 0 .21.19.27.37L13 5c.06.18.18 1 0 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/duplicate.js
/* harmony default export */ var duplicate = (["M15 0H5c-.55 0-1 .45-1 1v2h2V2h8v7h-1v2h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-4 4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 10H2V6h8v8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/edit.js
/* harmony default export */ var edit = (["M3.25 10.26l2.47 2.47 6.69-6.69-2.46-2.48-6.7 6.7zM.99 14.99l3.86-1.39-2.46-2.44-1.4 3.83zm12.25-14c-.48 0-.92.2-1.24.51l-1.44 1.44 2.47 2.47 1.44-1.44c.32-.32.51-.75.51-1.24.01-.95-.77-1.74-1.74-1.74z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/eject.js
/* harmony default export */ var eject = (["M4 9h8a1.003 1.003 0 00.71-1.71l-4-4C8.53 3.11 8.28 3 8 3s-.53.11-.71.29l-4 4A1.003 1.003 0 004 9zm8 1H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/emoji.js
/* harmony default export */ var emoji = (["M8 0a8 8 0 110 16A8 8 0 018 0zm0 1a7 7 0 100 14A7 7 0 008 1zM4 8c.228 2.262 2 4 4 4 1.938 0 3.77-1.738 3.984-3.8L12 8h1c-.128 2.888-2.317 5-5 5a5 5 0 01-4.995-4.783L3 8h1zm2-3a1 1 0 110 2 1 1 0 010-2zm4 0a1 1 0 110 2 1 1 0 010-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/endorsed.js
/* harmony default export */ var endorsed = (["M15.86 7.5l-.81-1.42V4.5c0-.36-.19-.68-.49-.87l-1.37-.8-.81-1.41c-.19-.31-.51-.49-.86-.49H9.89L8.5.14a.948.948 0 00-1 0l-1.39.8H4.52a1 1 0 00-.86.49l-.8 1.37-1.44.83c-.3.19-.49.51-.49.87v1.65l-.8 1.37c-.08.15-.13.32-.13.49s.05.34.14.49l.8 1.37v1.65c0 .36.19.68.49.87l1.42.81.8 1.37c.19.31.51.49.86.49H6.1l1.39.8c.15.09.32.14.48.14s.34-.05.49-.14l1.39-.8h1.63a1 1 0 00.86-.49l.81-1.41 1.37-.8c.3-.19.49-.51.49-.87V9.93l.81-1.42a.89.89 0 00.04-1.01zm-4.12-.82l-4.01 4.01c-.18.18-.43.29-.71.29s-.53-.11-.71-.29l-2-2c-.18-.19-.3-.44-.3-.71a1.003 1.003 0 011.71-.71l1.3 1.3 3.3-3.3a1.003 1.003 0 011.71.71.95.95 0 01-.29.7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/envelope.js
/* harmony default export */ var envelope = (["M0 3.06v9.88L4.94 8 0 3.06zM14.94 2H1.06L8 8.94 14.94 2zm-6.41 8.53c-.14.14-.32.22-.53.22s-.39-.08-.53-.22L6 9.06 1.06 14h13.88L10 9.06l-1.47 1.47zM11.06 8L16 12.94V3.06L11.06 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/equals.js
/* harmony default export */ var equals = (["M3 5h10a1 1 0 010 2H3a1 1 0 110-2zm0 4h10a1 1 0 010 2H3a1 1 0 010-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/eraser.js
/* harmony default export */ var eraser = (["M8.06 13.91l7.63-7.44c.41-.4.41-1.05 0-1.45L10.86.3c-.41-.4-1.08-.4-1.49 0L.31 9.13c-.41.4-.41 1.05 0 1.45l5.58 5.44h8.12v-.01c.55 0 1-.45 1-1s-.45-1-1-1H7.96l.1-.1zm-2.17.06L1.67 9.85l4.22-4.11 4.22 4.11-4.22 4.12z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/error.js
/* harmony default export */ var error = (["M7.99-.01c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm1 13h-2v-2h2v2zm0-3h-2v-7h2v7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/euro.js
/* harmony default export */ var euro = (["M6.52 3.18c.51-.27 1.12-.4 1.83-.4.48 0 .91.06 1.27.18.37.12.68.29.96.51.18.14.3.33.44.51l1.53-1.53c-.12-.11-.23-.22-.36-.32a5.61 5.61 0 00-1.74-.83c-.66-.2-1.36-.3-2.1-.3-.99 0-1.88.18-2.66.53-.79.35-1.45.82-2 1.41-.55.58-.96 1.27-1.26 2.06H2c-.55 0-1 .45-1 1s.45 1 1 1h.04c-.01.17-.04.33-.04.5 0 .17.03.33.04.5H2c-.55 0-1 .45-1 1s.45 1 1 1h.43c0 .01 0 .02.01.02a6.2 6.2 0 001.25 2.07 5.77 5.77 0 002 1.4c.78.34 1.67.51 2.66.51.81 0 1.54-.12 2.21-.36.67-.24 1.25-.59 1.75-1.03l.03-.03-1.55-1.33c-.01.01-.02.03-.03.04-.29.3-.63.53-1.02.69-.4.17-.85.25-1.37.25-.71 0-1.32-.13-1.83-.4s-.93-.62-1.25-1.07c-.19-.24-.34-.49-.46-.76H9c.55 0 1-.45 1-1s-.45-1-1-1H4.35c-.01-.17-.03-.33-.03-.5 0-.17.02-.34.03-.5H10c.55 0 1-.45 1-1s-.45-1-1-1H4.83c.13-.27.27-.52.44-.76.32-.44.74-.8 1.25-1.06zM14 8.98v0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/exchange.js
/* harmony default export */ var exchange = (["M1.99 5.99c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.89-2-2-2zm4.15 1.86a.495.495 0 10.7-.7L5.7 5.99h5.79c.28 0 .5-.22.5-.5s-.22-.5-.5-.5H5.7l1.15-1.15a.495.495 0 10-.7-.7l-2 2c-.1.09-.16.21-.16.35s.06.26.15.35l2 2.01zm7.85-1.86c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.89-2-2-2zM9.85 8.14a.533.533 0 00-.36-.15.495.495 0 00-.35.85l1.15 1.15h-5.8c-.28 0-.5.22-.5.5s.22.5.5.5h5.79l-1.15 1.15a.495.495 0 10.7.7l2-2c.09-.09.15-.22.15-.35s-.06-.26-.15-.35l-1.98-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/exclude-row.js
/* harmony default export */ var exclude_row = (["M0 10a1.003 1.003 0 001.71.71L3 9.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L4.41 8 5.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L3 6.59l-1.29-1.3A1.003 1.003 0 00.29 6.71L1.59 8 .29 9.29C.11 9.47 0 9.72 0 10zm1-7h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 10H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-1-7H9c-1.1 0-2 .9-2 2s.9 2 2 2h5c1.1 0 2-.9 2-2s-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/expand-all.js
/* harmony default export */ var expand_all = (["M4 7c.28 0 .53-.11.71-.29L8 3.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4C8.53 1.11 8.28 1 8 1s-.53.11-.71.29l-4 4A1.003 1.003 0 004 7zm8 2c-.28 0-.53.11-.71.29L8 12.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0012 9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/export.js
/* harmony default export */ var paths_export = (["M4 6c.28 0 .53-.11.71-.29L7 3.41V11c0 .55.45 1 1 1s1-.45 1-1V3.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4C8.53.11 8.28 0 8 0s-.53.11-.71.29l-4 4A1.003 1.003 0 004 6zm11 5c-.55 0-1 .45-1 1v2H2v-2c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/eye-off.js
/* harmony default export */ var eye_off = (["M16 7.97v-.02-.01-.02-.02a.672.672 0 00-.17-.36c-.49-.63-1.07-1.2-1.65-1.72l-3.16 2.26a2.978 2.978 0 01-2.98 2.9c-.31 0-.6-.06-.88-.15L5.09 12.3c.44.19.9.36 1.37.47.97.23 1.94.24 2.92.05.88-.17 1.74-.54 2.53-.98 1.25-.7 2.39-1.67 3.38-2.75.18-.2.37-.41.53-.62.09-.1.15-.22.17-.36v-.02-.02-.01-.02-.03c.01-.02.01-.03.01-.04zm-.43-4.17c.25-.18.43-.46.43-.8 0-.55-.45-1-1-1-.22 0-.41.08-.57.2l-.01-.01-2.67 1.91c-.69-.38-1.41-.69-2.17-.87a6.8 6.8 0 00-2.91-.05c-.88.18-1.74.54-2.53.99-1.25.7-2.39 1.67-3.38 2.75-.18.2-.37.41-.53.62-.23.29-.23.63-.01.92.51.66 1.11 1.25 1.73 1.79.18.16.38.29.56.44l-2.09 1.5.01.01c-.25.18-.43.46-.43.8 0 .55.45 1 1 1 .22 0 .41-.08.57-.2l.01.01 14-10-.01-.01zm-10.41 5a3.03 3.03 0 01-.11-.8 2.99 2.99 0 012.99-2.98c.62 0 1.19.21 1.66.53L5.16 8.8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/eye-on.js
/* harmony default export */ var eye_on = (["M10.29 6.7c.18.18.43.29.71.29s.53-.11.71-.29l4-4c.17-.18.29-.43.29-.7a1.003 1.003 0 00-1.71-.71L11 4.58 9.71 3.29A.997.997 0 009 3c-.55 0-1 .44-1 1a1 1 0 00.3.7l1.99 2zM16 7.96v-.02-.01-.02-.02a.64.64 0 00-.17-.36c-.3-.4-.65-.76-1-1.12l-1.7 1.7c-.55.55-1.3.88-2.13.88-.06 0-.11-.01-.17-.02C10.42 10.15 9.32 11 8.01 11A3.005 3.005 0 016.4 5.46c-.24-.43-.39-.93-.39-1.46 0-.26.04-.5.1-.74-.7.2-1.37.5-2.01.86-1.26.7-2.4 1.68-3.4 2.77-.18.21-.36.41-.53.63-.22.29-.22.64 0 .93.51.67 1.12 1.27 1.73 1.81 1.33 1.17 2.85 2.15 4.53 2.55.97.23 1.95.24 2.92.05.89-.18 1.74-.54 2.54-.99 1.25-.71 2.4-1.69 3.39-2.78.18-.2.37-.41.54-.63.09-.1.15-.23.17-.37v-.02-.02-.01-.02-.03c.01-.01.01-.02.01-.03zM8.01 9c.48 0 .87-.35.96-.81a.55.55 0 01-.07-.09l-.02.01L7.8 7.03c-.45.1-.79.48-.79.96 0 .56.45 1.01 1 1.01z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/eye-open.js
/* harmony default export */ var eye_open = (["M8.002 7.003a1.003 1.003 0 000 2.005 1.003 1.003 0 000-2.005zm7.988.972v-.02-.01-.02-.02a.675.675 0 00-.17-.36c-.509-.673-1.118-1.264-1.737-1.806-1.328-1.173-2.846-2.155-4.523-2.546a6.702 6.702 0 00-2.925-.06c-.889.18-1.738.541-2.546.992C2.84 4.837 1.692 5.81.694 6.902c-.18.211-.36.411-.53.632a.742.742 0 000 .932c.51.672 1.119 1.264 1.738 1.805 1.328 1.173 2.846 2.156 4.523 2.547.968.23 1.947.24 2.925.04.889-.18 1.738-.542 2.546-.993 1.248-.712 2.397-1.684 3.395-2.777.18-.2.37-.411.54-.632.09-.1.149-.23.169-.36v-.02-.02-.01-.02-.03c0-.01-.01-.01-.01-.02zm-7.988 3.038a2.998 2.998 0 01-2.995-3.008 2.998 2.998 0 012.995-3.008 2.998 2.998 0 012.996 3.008 2.998 2.998 0 01-2.996 3.008z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/fast-backward.js
/* harmony default export */ var fast_backward = (["M14 3c-.24 0-.44.09-.62.23l-.01-.01L9 6.72V4c0-.55-.45-1-1-1-.24 0-.44.09-.62.23v-.01l-5 4 .01.01C2.16 7.41 2 7.68 2 8s.16.59.38.77v.01l5 4 .01-.01c.17.14.37.23.61.23.55 0 1-.45 1-1V9.28l4.38 3.5.01-.01c.17.14.37.23.61.23.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/fast-forward.js
/* harmony default export */ var fast_forward = (["M15 8c0-.32-.16-.59-.38-.77l.01-.01-5-4-.01.01A.987.987 0 009 3c-.55 0-1 .45-1 1v2.72l-4.38-3.5v.01A.987.987 0 003 3c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1 .24 0 .44-.09.62-.23l.01.01L8 9.28V12c0 .55.45 1 1 1 .24 0 .44-.09.62-.23l.01.01 5-4-.01-.01c.22-.18.38-.45.38-.77z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/feed.js
/* harmony default export */ var feed = (["M1.99 11.99c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.89-2-2-2zm1-4c-.55 0-1 .45-1 1s.45 1 1 1c1.66 0 3 1.34 3 3 0 .55.45 1 1 1s1-.45 1-1c0-2.76-2.24-5-5-5zm0-4c-.55 0-1 .45-1 1s.45 1 1 1c3.87 0 7 3.13 7 7 0 .55.45 1 1 1s1-.45 1-1a9 9 0 00-9-9zm0-4c-.55 0-1 .45-1 1s.45 1 1 1c6.08 0 11 4.92 11 11 0 .55.45 1 1 1s1-.45 1-1c0-7.18-5.82-13-13-13z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/feed-subscribed.js
/* harmony default export */ var feed_subscribed = (["M3 2c1.06 0 2.08.16 3.06.45.13-.71.52-1.32 1.05-1.76C5.82.25 4.44 0 3 0c-.55 0-1 .45-1 1s.45 1 1 1zM2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm8.32-6.33a.99.99 0 001.4 0l3.98-3.98c.19-.18.3-.42.3-.7 0-.55-.45-.99-1-.99-.28 0-.52.11-.7.29l-3.28 3.28-1.29-1.29a.99.99 0 00-.7-.29 1 1 0 00-1 .99c0 .27.11.52.29.7l2 1.99zm3.73.53l-.93.93-.02-.02c-.17.17-.35.33-.56.45C13.47 9.16 14 11.02 14 13c0 .55.45 1 1 1s1-.45 1-1c0-2.5-.73-4.82-1.95-6.8zM3 8c-.55 0-1 .45-1 1s.45 1 1 1c1.66 0 3 1.34 3 3 0 .55.45 1 1 1s1-.45 1-1c0-2.76-2.24-5-5-5zm5.91-.91l-.03.03-2-2 .03-.03c-.11-.11-.23-.2-.33-.33A8.9 8.9 0 003 4c-.55 0-1 .45-1 1s.45 1 1 1c3.87 0 7 3.13 7 7 0 .55.45 1 1 1s1-.45 1-1c0-1.87-.57-3.61-1.55-5.06-.61-.11-1.13-.42-1.54-.85z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/film.js
/* harmony default export */ var film = (["M15 1h-5v2H6V1H1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h5v-2h4v2h5c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM4 13H2v-2h2v2zm0-3H2V8h2v2zm0-3H2V5h2v2zm0-3H2V2h2v2zm6 6H6V5h4v5zm4 3h-2v-2h2v2zm0-3h-2V8h2v2zm0-3h-2V5h2v2zm0-3h-2V2h2v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/filter.js
/* harmony default export */ var filter = (["M13.99.99h-12a1.003 1.003 0 00-.71 1.71l4.71 4.71V14a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71V7.41L14.7 2.7a1.003 1.003 0 00-.71-1.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/filter-keep.js
/* harmony default export */ var filter_keep = (["M15 10c-.28 0-.53.11-.71.29L12 12.59l-1.29-1.29A.965.965 0 0010 11a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0015 10zm-3-8c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L4 6.41V12a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71V6.41l3.71-3.71c.18-.17.29-.42.29-.7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/filter-list.js
/* harmony default export */ var filter_list = (["M9 8c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1h-5c-.55 0-1 .45-1 1zm3-6c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L4 6.41V12a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71V6.41l3.71-3.71c.18-.17.29-.42.29-.7zm3 8h-5c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm0 3h-5c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/filter-open.js
/* harmony default export */ var filter_open = (["M15.707 10.293a1 1 0 010 1.414l-3 3c-.63.63-1.707.184-1.707-.707V8c0-.89 1.077-1.337 1.707-.707l3 3zM12 2c0 .28-.11.53-.29.7L8 6.41V10c0 .28-.11.53-.29.71l-2 2A1.003 1.003 0 014 12V6.41L.29 2.71A1.003 1.003 0 011 1h10c.55 0 1 .45 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/filter-remove.js
/* harmony default export */ var filter_remove = (["M12 2c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L4 6.41V12a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71V6.41l3.71-3.71c.18-.17.29-.42.29-.7zm2.41 10l1.29-1.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L13 10.59 11.71 9.3A.965.965 0 0011 9a1.003 1.003 0 00-.71 1.71l1.3 1.29-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l1.29-1.3 1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L14.41 12z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/flag.js
/* harmony default export */ var flag = (["M2.99 2.99c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1s1-.45 1-1v-11c0-.55-.45-1-1-1zm0-3c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm2 3.03v7.23c2.07-2.11 5.92 1.75 9 0V3.02c-3 2.07-6.94-2.03-9 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/flame.js
/* harmony default export */ var flame = (["M9.217 0c0 1.368.368 2.462 1.104 3.282C12.774 5.197 14 7.385 14 9.846c0 2.735-1.472 4.786-4.415 6.154 2.165-2.4 1.84-3.385-.368-6.4-2.342 1.2-1.967 2-1.592 3.6-.786 0-1.5 0-1.875-.4 0 .547.898 2 1.464 3.2-2.943-.82-6.092-5.744-4.988-6.154.736-.273 1.594-.137 2.575.41C3.575 5.333 5.047 1.915 9.217 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/flash.js
/* harmony default export */ var flash = (["M4 8c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1zm4-4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1S7 .45 7 1v2c0 .55.45 1 1 1zM3.79 5.21a1.003 1.003 0 001.42-1.42l-1.5-1.5a1.003 1.003 0 00-1.42 1.42l1.5 1.5zm.71 5.29c-.28 0-.53.11-.71.29l-1.5 1.5a1.003 1.003 0 001.42 1.42l1.5-1.5a1.003 1.003 0 00-.71-1.71zm7-5c.28 0 .53-.11.71-.29l1.5-1.5a1.003 1.003 0 00-1.42-1.42l-1.5 1.5a1.003 1.003 0 00.71 1.71zm.71 5.29a1.003 1.003 0 00-1.42 1.42l1.5 1.5a1.003 1.003 0 001.42-1.42l-1.5-1.5zM15 7h-2c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1s-.45-1-1-1zM8 5C6.34 5 5 6.34 5 8s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zm0 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm0 3c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/floating-point.js
/* harmony default export */ var floating_point = (["M1 5.326c.274 0 .541-.023.8-.069.259-.046.491-.122.697-.228a1.71 1.71 0 00.537-.412c.153-.167.252-.373.297-.617h1.063v8H2.966V6.354H1V5.326zM12.172 4.01c.55 0 .997.128 1.342.385.352.25.623.572.814.968.198.389.33.818.396 1.287.073.47.11.924.11 1.364 0 .44-.037.895-.11 1.364-.066.47-.198.902-.396 1.298-.19.389-.462.711-.814.968-.345.25-.792.374-1.342.374s-1.001-.125-1.353-.374a2.74 2.74 0 01-.814-.968 4.618 4.618 0 01-.396-1.298 9.795 9.795 0 01-.099-1.364c0-.44.033-.895.099-1.364.073-.47.205-.898.396-1.287.198-.396.47-.719.814-.968.352-.257.803-.385 1.353-.385zm0 6.963c.271 0 .499-.077.682-.231.183-.161.326-.374.429-.638.11-.271.187-.587.231-.946.044-.36.066-.74.066-1.144 0-.403-.022-.781-.066-1.133a3.724 3.724 0 00-.231-.946 1.51 1.51 0 00-.429-.638.995.995 0 00-.682-.242c-.279 0-.51.08-.693.242a1.656 1.656 0 00-.429.638 4.08 4.08 0 00-.22.946c-.044.352-.066.73-.066 1.133s.022.785.066 1.144c.044.36.117.675.22.946.11.264.253.477.429.638.183.154.414.231.693.231zM8.089 10.5H6.5v1.543h1.589V10.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/floppy-disk.js
/* harmony default export */ var floppy_disk = (["M15.71 2.29l-2-2A.997.997 0 0013 0h-1v6H4V0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V3c0-.28-.11-.53-.29-.71zM14 15H2V9c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v6zM11 1H9v4h2V1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/flow-branch.js
/* harmony default export */ var flow_branch = (["M10.643 6.595c.22.418.344.894.344 1.399 0 .439-.094.855-.263 1.231l3.265 3.462-.002-1.75a.973.973 0 01.314-.68.99.99 0 011.388.048c.186.2.316.46.3.715l-.009 4.03a.959.959 0 01-.3.68.972.972 0 01-.698.266l-4.053.002a.97.97 0 01-.679-.314 1.031 1.031 0 01.05-1.42.972.972 0 01.698-.266l1.7-.001-3.305-3.35a2.998 2.998 0 01-4.228-1.653H.999a1 1 0 010-2h4.166a2.998 2.998 0 014.06-1.735l3.449-3.268-1.745.002a.979.979 0 01-.631-1.692c.199-.186.459-.316.713-.3l4.025.009c.247.008.493.1.679.3.186.2.274.451.265.7l.002 4.046a.972.972 0 01-.313.68 1.03 1.03 0 01-1.42-.05.973.973 0 01-.266-.7V3.295l-3.34 3.301z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/flow-end.js
/* harmony default export */ var flow_end = (["M9.702 7.31c.176.176.293.41.293.684a.976.976 0 01-.283.695c-1.888 1.91-2.892 2.918-3.011 3.027-.179.164-.42.284-.693.284a.995.995 0 01-.997-.985c0-.274.112-.541.292-.72.12-.12.624-.551 1.514-1.293H.98c-.536 0-.975-.47-.975-1.008 0-.537.439-.996.975-.996h5.837c-.895-.752-1.4-1.187-1.514-1.304a1.03 1.03 0 01-.292-.705C5.01 4.45 5.464 4 6 4c.272 0 .52.108.695.294A535.7 535.7 0 009.702 7.31zM13 11.002c-1.657 0-3-1.347-3-3.008a3.004 3.004 0 013-3.007c1.657 0 3 1.346 3 3.007a3.004 3.004 0 01-3 3.008z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/flow-linear.js
/* harmony default export */ var flow_linear = (["M4.16 9.002H.977C.44 9.002 0 8.532 0 7.994c0-.537.44-.99.978-.99h3.18A3.01 3.01 0 016.995 5a3.01 3.01 0 012.839 2.004h2.98c-.898-.756-1.404-1.193-1.518-1.31a1.03 1.03 0 01-.293-.705c0-.538.454-.989.992-.989.274 0 .521.108.697.294.118.124 1.122 1.13 3.014 3.016a.96.96 0 01.293.684.975.975 0 01-.284.695l-3.018 3.027a.974.974 0 01-.694.284c-.553 0-1-.447-1-.985 0-.274.117-.545.293-.72l1.518-1.293H9.833A3.01 3.01 0 016.996 11 3.01 3.01 0 014.16 9.002z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/flow-review.js
/* harmony default export */ var flow_review = (["M5.175 7.004a3.003 3.003 0 012.83-2.001c1.305 0 2.416.835 2.83 2.001h1.985c-.896-.756-1.401-1.193-1.515-1.31a1.03 1.03 0 01-.292-.705c0-.538.453-.989.99-.989a.95.95 0 01.696.294c.117.124 1.12 1.13 3.008 3.016.176.176.293.41.293.684a.976.976 0 01-.283.695l-3.013 3.027a.995.995 0 01-1.691-.702c0-.273.116-.544.292-.72l1.515-1.292h-1.98a3.003 3.003 0 01-2.835 2.016A3.003 3.003 0 015.17 9.002H3.18l1.515 1.292c.176.176.292.447.292.72a.995.995 0 01-1.69.702L.282 8.69A.976.976 0 010 7.994c0-.273.117-.508.293-.684A535.858 535.858 0 003.3 4.294.95.95 0 013.997 4c.537 0 .99.45.99.989 0 .273-.12.528-.292.705-.114.117-.62.554-1.515 1.31h1.995z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/flow-review-branch.js
/* harmony default export */ var flow_review_branch = (["M10.392 10.647A3.002 3.002 0 016.16 8.995H3.37l1.338 1.318c.172.178.287.41.282.683-.01.536-.524.995-.99.995-.465 0-.63-.187-.747-.294L.281 8.682A.956.956 0 010 7.994a.971.971 0 01.294-.687l3.01-3.028a.973.973 0 01.697-.27c.536.01.998.485.989 1.021a.971.971 0 01-.295.687L3.37 6.997h2.79a3.002 3.002 0 014.106-1.716l2.416-2.277-1.732.004a.99.99 0 01-.679-.329.978.978 0 01.05-1.378c.199-.186.459-.315.714-.3l4.012.005c.248.009.493.1.68.3.185.2.273.45.264.699L15.99 6.05a.973.973 0 01-.314.679 1.03 1.03 0 01-1.421-.048.971.971 0 01-.265-.699V4.29L11.65 6.602c.219.416.343.89.343 1.394 0 .451-.1.88-.279 1.263L14 11.68l-.004-1.73a.982.982 0 01.323-.68.978.978 0 011.378.049c.187.2.316.46.3.714l-.004 4.011a.983.983 0 01-.3.691.972.972 0 01-.7.265l-4.046-.001a.987.987 0 01-.679-.326 1.017 1.017 0 01.048-1.41.972.972 0 01.699-.265h1.693l-2.315-2.35z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/flows.js
/* harmony default export */ var flows = (["M13.5 6a2.5 2.5 0 00-2.45 2h-1.3L5.74 4l-.75.75L8.25 8h-3.3a2.5 2.5 0 100 1h3.3l-3.26 3.25.75.75 4.01-4h1.3a2.5 2.5 0 102.45-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/folder-close.js
/* harmony default export */ var folder_close = (["M-.01 14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7h-16v7zm15-10H7.41L5.7 2.3a.965.965 0 00-.71-.3h-4c-.55 0-1 .45-1 1v3h16V5c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/folder-new.js
/* harmony default export */ var folder_new = (["M10.165 7a3.003 3.003 0 002.827 2 3.003 3.003 0 002.827-2H16v7c0 .55-.45 1-1 1H1.01c-.55 0-1-.45-1-1V7h10.155zM8.76 6H0V3c0-.55.45-1 1-1h1.998c.28 0 .53.11.71.29L5.417 4h2.578c0 .768.29 1.469.765 2zm6.23-3c.55 0 1 .45 1 1s-.45 1-1 1h-.999v1c0 .55-.45 1-1 1-.549 0-.998-.45-.998-1V5h-1c-.55 0-1-.45-1-1s.45-1 1-1h1V2c0-.55.45-1 .999-1 .55 0 1 .45 1 1v1h.999z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/folder-open.js
/* harmony default export */ var folder_open = (["M2.06 6.69c.14-.4.5-.69.94-.69h11V5c0-.55-.45-1-1-1H6.41l-1.7-1.71A.997.997 0 004 2H1c-.55 0-1 .45-1 1v9.84l2.05-6.15h.01zM16 8c0-.55-.45-1-1-1H4a.99.99 0 00-.94.69l-2 6c-.04.09-.06.2-.06.31 0 .55.45 1 1 1h11c.44 0 .81-.29.94-.69l2-6c.04-.09.06-.2.06-.31z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/folder-shared.js
/* harmony default export */ var folder_shared = (["M8.76 5.98c-.47-.53-.77-1.22-.77-1.99h-.58L5.7 2.29a.965.965 0 00-.71-.3h-4c-.55 0-1 .45-1 1v3h8.76l.01-.01zm6.23-2.99h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.3a.99.99 0 00-.29.7 1.003 1.003 0 001.71.71l3.29-3.29V8c0 .55.45 1 1 1s1-.45 1-1V4c0-.56-.45-1.01-1-1.01zm-1.98 7.23l-.9.9-.01-.01c-.54.55-1.28.89-2.11.89-1.66 0-3-1.34-3-3 0-.77.3-1.47.78-2H-.01v7c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3.18c-.31.11-.65.18-1 .18-.76-.01-1.45-.31-1.98-.78z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/folder-shared-open.js
/* harmony default export */ var folder_shared_open = (["M13.02 10.22l-.9.9-.01-.01c-.54.55-1.28.89-2.11.89-1.66 0-3-1.34-3-3 0-.77.3-1.47.78-2H4a.99.99 0 00-.94.69l-2 6c-.04.09-.06.2-.06.31 0 .55.45 1 1 1h11c.44 0 .81-.29.94-.69l1.11-3.32c-.01 0-.03.01-.05.01-.77 0-1.45-.3-1.98-.78zM2.06 6.69c.14-.4.5-.69.94-.69h5.76l.01-.01C8.3 5.46 8 4.77 8 4H6.41l-1.7-1.71A.997.997 0 004 2H1c-.55 0-1 .45-1 1v9.84l2.05-6.15h.01zM15 3h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.29a1.003 1.003 0 001.42 1.42L14 6.41V8c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/follower.js
/* harmony default export */ var follower = (["M9.37 12.69c-1.2-.53-1.04-.85-1.08-1.29-.01-.06-.01-.12-.01-.19.41-.37.75-.87.97-1.44 0 0 .01-.03.01-.04.05-.13.09-.26.12-.39.28-.06.44-.36.5-.63.06-.11.19-.39.16-.7-.04-.4-.2-.59-.38-.67v-.07c0-.52-.05-1.26-.14-1.74a2.72 2.72 0 00-.09-.43 3.02 3.02 0 00-1.04-1.51C7.87 3.2 7.15 3 6.5 3c-.64 0-1.36.2-1.87.59-.5.38-.87.92-1.05 1.51-.04.13-.07.27-.09.4-.09.49-.14 1.24-.14 1.75v.06c-.19.07-.36.26-.4.68-.03.31.1.59.16.7.06.28.23.59.51.64.04.14.08.27.13.39 0 .01.01.02.01.02v.01c.22.59.57 1.1.99 1.46 0 .06-.01.12-.01.17-.04.44.08.76-1.12 1.29-1.2.53-3.01 1.1-3.38 1.95C-.13 15.5.02 16 .02 16h12.96s.15-.5-.22-1.36c-.38-.85-2.19-1.42-3.39-1.95zm6.33-10.4l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H9.99c-.55 0-1 .45-1 1s.45 1 1 1h2.58l-.29.29a1.003 1.003 0 001.42 1.42l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/following.js
/* harmony default export */ var following = (["M9.37 12.69c-1.2-.53-1.04-.85-1.08-1.29-.01-.06-.01-.12-.01-.19.41-.37.75-.87.97-1.44 0 0 .01-.03.01-.04.05-.13.09-.26.12-.39.28-.06.44-.36.5-.63.06-.11.19-.39.16-.7-.04-.4-.2-.59-.38-.67v-.07c0-.52-.05-1.26-.14-1.74a2.72 2.72 0 00-.09-.43 3.02 3.02 0 00-1.04-1.51C7.87 3.2 7.15 3 6.5 3c-.64 0-1.36.2-1.87.59-.5.38-.87.92-1.05 1.51-.04.13-.07.27-.09.4-.09.49-.14 1.24-.14 1.75v.06c-.19.07-.36.26-.4.68-.03.31.1.59.16.7.06.28.23.59.51.64.04.14.08.27.13.39 0 .01.01.02.01.02v.01c.22.59.57 1.1.99 1.46 0 .06-.01.12-.01.17-.04.44.08.76-1.12 1.29-1.2.53-3.01 1.1-3.38 1.95C-.13 15.5.02 16 .02 16h12.96s.15-.5-.22-1.36c-.38-.85-2.19-1.42-3.39-1.95zM14.99 2h-2.58l.29-.29A1.003 1.003 0 0011.28.29l-2 2c-.17.18-.29.43-.29.71 0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L12.41 4h2.58c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/font.js
/* harmony default export */ var font = (["M13.93 14.67L8.94.67h-.01C8.79.28 8.43 0 8 0s-.79.28-.93.67h-.01l-5 14h.01c-.04.1-.07.21-.07.33 0 .55.45 1 1 1 .43 0 .79-.28.93-.67h.01L5.49 11h5.02l1.55 4.34h.01c.14.38.5.66.93.66.55 0 1-.45 1-1 0-.12-.03-.23-.07-.33zM6.2 9L8 3.97 9.8 9H6.2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/fork.js
/* harmony default export */ var fork = (["M13.7 9.29a1.003 1.003 0 00-1.42 1.42l.29.29H11.4l-5-5h6.17l-.29.29a1.003 1.003 0 001.42 1.42l2-2c.18-.18.29-.43.29-.71s-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l.29.29H.99c-.55 0-1 .45-1 1s.45 1 1 1h2.59l6.71 6.71c.18.18.43.29.71.29h1.59l-.29.29a1.003 1.003 0 001.42 1.42l2-2c.18-.18.29-.43.29-.71s-.11-.53-.29-.71l-2.02-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/form.js
/* harmony default export */ var paths_form = (["M2 11v2h2v-2H2zM1 9h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1zm9-6h5c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1zM6 1a1.003 1.003 0 01.71 1.71l-3 4C3.53 6.89 3.28 7 3 7s-.53-.11-.71-.29l-2-2a1.003 1.003 0 011.42-1.42L3 4.59l2.29-3.3C5.47 1.11 5.72 1 6 1zm4 10h5c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/fuel.js
/* harmony default export */ var fuel = (["M1.949 1H0v2h2c.31 0 .6.161.762.426l1.965 3.193-1.352 1.08A1 1 0 003 8.482V13.9c0 .607.448 1.1 1 1.1h11c.552 0 1-.492 1-1.1V2s0-1-1-1H9c-.5 0-1 .5-1 1v2L6.388 5.29 4.455 2.35A3 3 0 001.95 1zM14 3v1h-4V3h4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/full-circle.js
/* harmony default export */ var full_circle = (["M8 0a8 8 0 100 16A8 8 0 108 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/full-stacked-chart.js
/* harmony default export */ var full_stacked_chart = (["M13 12h1c.55 0 1-.45 1-1V8h-3v3c0 .55.45 1 1 1zM10 2c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v3h3V2zm0 4H7v3h3V6zm5-4c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v2h3V2zm0 3h-3v2h3V5zM5 5H2v3h3V5zm-2 7h1c.55 0 1-.45 1-1V9H2v2c0 .55.45 1 1 1zm12 1H2c-.55 0-1 .45-1 1s.45 1 1 1h13c.55 0 1-.45 1-1s-.45-1-1-1zM5 2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v2h3V2zm3 10h1c.55 0 1-.45 1-1v-1H7v1c0 .55.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/fullscreen.js
/* harmony default export */ var fullscreen = (["M3.41 2H5c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v4c0 .55.45 1 1 1s1-.45 1-1V3.41L5.29 6.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L3.41 2zM6 9c-.28 0-.53.11-.71.29L2 12.59V11c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.41l3.29-3.29c.19-.18.3-.43.3-.71 0-.55-.45-1-1-1zm9 1c-.55 0-1 .45-1 1v1.59L10.71 9.3A.965.965 0 0010 9a1.003 1.003 0 00-.71 1.71l3.3 3.29H11c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm0-10h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.29a1.003 1.003 0 001.42 1.42L14 3.41V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/function.js
/* harmony default export */ var paths_function = (["M8.12 4.74H6.98c.33-1.29.75-2.24 1.28-2.84.33-.37.64-.56.95-.56.06 0 .11.02.15.05.04.04.06.09.06.15 0 .05-.04.15-.13.29-.09.14-.13.28-.13.4 0 .18.07.33.2.46.14.13.31.19.52.19.22 0 .41-.08.56-.23.15-.16.23-.37.23-.63 0-.3-.11-.55-.34-.74C10.1 1.09 9.74 1 9.24 1c-.78 0-1.49.22-2.12.67-.64.45-1.24 1.2-1.81 2.23-.2.36-.38.59-.56.69-.18.1-.46.15-.85.15l-.26.9h1.08l-1.59 6.12c-.27 1.01-.44 1.63-.54 1.86-.14.34-.34.63-.62.87-.11.1-.24.15-.4.15a.15.15 0 01-.11-.04l-.04-.05c0-.03.04-.08.12-.16.08-.08.12-.2.12-.36 0-.18-.06-.33-.19-.44-.12-.12-.3-.18-.54-.18-.28 0-.51.08-.68.23-.16.14-.25.32-.25.53 0 .22.1.42.31.59.21.17.53.25.97.25.7 0 1.32-.18 1.87-.54.54-.36 1.02-.92 1.42-1.67.41-.75.82-1.96 1.25-3.63l.91-3.54h1.1l.29-.89zm5.43 1.52c.2-.15.41-.23.62-.23.08 0 .23.03.45.09s.41.09.57.09c.23 0 .42-.08.57-.23.16-.16.24-.36.24-.61 0-.26-.08-.47-.23-.62-.15-.15-.37-.23-.66-.23-.25 0-.5.06-.72.18-.23.12-.51.38-.86.78-.26.3-.64.81-1.15 1.55-.2-.91-.55-1.75-1.05-2.51l-2.72.46-.06.29c.2-.04.37-.06.51-.06.27 0 .49.11.67.34.28.36.67 1.45 1.17 3.26-.39.52-.66.85-.8 1.01-.24.26-.44.42-.59.5-.12.06-.25.09-.41.09-.11 0-.3-.06-.56-.18-.18-.08-.34-.12-.48-.12-.27 0-.48.08-.66.25-.17.17-.26.38-.26.64 0 .25.08.44.24.6.16.15.37.23.64.23.26 0 .5-.05.73-.16.23-.11.52-.34.86-.69.35-.35.82-.9 1.43-1.67.23.73.44 1.25.61 1.58s.37.57.59.71c.22.15.5.22.83.22.32 0 .65-.11.98-.34.44-.3.88-.81 1.34-1.53l-.26-.15c-.31.43-.54.7-.69.8-.1.07-.22.1-.35.1-.16 0-.32-.1-.48-.3-.27-.34-.62-1.27-1.06-2.8.4-.68.73-1.13 1-1.34z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/gantt-chart.js
/* harmony default export */ var gantt_chart = (["M10 10c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1h-4c-.55 0-1 .45-1 1zM6 7c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1zm9 5H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM4 5h3c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/geofence.js
/* harmony default export */ var geofence = (["M6 9c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1s-1-.45-1-1v-1.59l-3.29 3.3A1.003 1.003 0 010 15c0-.28.11-.53.3-.71L3.59 11H2c-.55 0-1-.45-1-1s.45-1 1-1zM9.088.004l.097.013.097.024.057.018.1.042.054.029.095.061.052.04 6 5 .05.046.076.08.053.07.06.095.051.11c.056.141.079.294.067.446l-.014.105-.037.143-.035.087-.043.083-4 7-.034.056-.059.08-.038.044-.096.092-.114.082-.116.062-.086.034-.109.03-.1.017-.069.006H8.83c.088-.25.144-.515.163-.79L9 13v-3a3 3 0 00-2.824-2.995L6 7H3c-.351 0-.689.06-1.002.171L2 5l.002-.07.013-.1.015-.073.025-.085.043-.104.056-.101.045-.066.079-.093.084-.078.083-.062 6-4 .07-.043.12-.056.111-.036.108-.022.083-.01h.031c.046-.002.083 0 .12.003z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/geolocation.js
/* harmony default export */ var geolocation = (["M-.01 6.66l7.34 2 2 7.33 6.66-16z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/geosearch.js
/* harmony default export */ var geosearch = (["M8.82 12.4h.66c.23 0 .36-.17.36-.4v-1.48l.19-.18c-.27.03-.55.06-.83.06-.28 0-.56-.03-.84-.07.02.04.05.08.07.13V12c0 .23.15.4.39.4zM6.4 15.1A5.51 5.51 0 01.9 9.6c0-.49.06-.98.18-1.43.03 0 .05-.01.08-.01h.08v.44c0 .19.17.34.36.34.03 0 .07-.01.1-.01l.71.7c.07.07.19.07.26 0s.07-.19 0-.26l-.7-.72c0-.02.03-.03.03-.05v-.11c0-.15.08-.2.23-.33h.42c.08 0 .15-.01.22-.04h.02c.02-.02.03-.02.04-.04.01-.01.01-.01.02-.01l.02-.01.9-.9c-.13-.26-.24-.52-.34-.8h-.5v-.43c0-.01.05.05.04-.08h.31c-.03-.13-.06-.26-.08-.39h-.57c.16-.12.34-.24.51-.36-.02-.23-.04-.46-.04-.7 0-.12.01-.23.02-.34A6.385 6.385 0 000 9.6C0 13.13 2.87 16 6.4 16c3.1 0 5.67-2.22 6.26-5.15l-.78-.88c-.21 2.85-2.58 5.13-5.48 5.13zm-1.7-2.93v-.28h.12c.23 0 .39-.19.39-.42v-.54s.01-.01 0-.01L3.77 9.45h-.62c-.23 0-.38.19-.38.42v1.6c0 .23.14.42.38.42h.26v1.61c0 .23.22.41.45.41s.45-.18.45-.41v-.97H4.3c.24 0 .4-.13.4-.36zm11.07-2.34l-2.94-2.94c.11-.17.21-.34.3-.52.01-.03.03-.06.04-.09.08-.18.16-.36.22-.55v-.01c.06-.19.1-.38.14-.58.01-.05.01-.09.02-.14.03-.2.05-.4.05-.61a4.4 4.4 0 00-4.4-4.4C6.77 0 4.8 1.97 4.8 4.4s1.97 4.4 4.4 4.4c.21 0 .41-.02.61-.05.04 0 .09-.01.14-.02.2-.03.39-.08.58-.14h.01c.19-.06.37-.14.55-.22.03-.01.06-.03.09-.04.18-.09.35-.19.52-.3l2.94 2.94a.8.8 0 00.57.23c.44 0 .8-.36.8-.8a.895.895 0 00-.24-.57zM9.2 7.6C7.43 7.6 6 6.17 6 4.4c0-1.77 1.43-3.2 3.2-3.2s3.2 1.43 3.2 3.2c0 1.77-1.43 3.2-3.2 3.2zm1.54 4.26v-.52c0-.09-.1-.17-.19-.17s-.19.07-.19.17v.52c0 .09.1.17.19.17s.19-.07.19-.17z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/git-branch.js
/* harmony default export */ var git_branch = (["M12 1c-1.66 0-3 1.34-3 3 0 1.25.76 2.32 1.85 2.77A2.02 2.02 0 019 8H7c-.73 0-1.41.2-2 .55V5.82C6.16 5.4 7 4.3 7 3c0-1.66-1.34-3-3-3S1 1.34 1 3c0 1.3.84 2.4 2 2.82v4.37c-1.16.4-2 1.51-2 2.81 0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.04-.53-1.95-1.32-2.49.35-.31.81-.51 1.32-.51h2c1.92 0 3.52-1.35 3.91-3.15A2.996 2.996 0 0012 1zM4 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 12c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm8-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/git-commit.js
/* harmony default export */ var git_commit = (["M15 7h-3.14c-.45-1.72-2-3-3.86-3S4.59 5.28 4.14 7H1c-.55 0-1 .45-1 1s.45 1 1 1h3.14c.45 1.72 2 3 3.86 3s3.41-1.28 3.86-3H15c.55 0 1-.45 1-1s-.45-1-1-1zm-7 3c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/git-merge.js
/* harmony default export */ var git_merge = (["M12 6c-1.3 0-2.4.84-2.82 2H9c-1.62 0-3-.96-3.63-2.34C6.33 5.16 7 4.16 7 3c0-1.66-1.34-3-3-3S1 1.34 1 3c0 1.3.84 2.4 2 2.81v4.37C1.84 10.6 1 11.7 1 13c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82V8.43A5.89 5.89 0 009 10h.18A2.996 2.996 0 0015 9c0-1.66-1.34-3-3-3zm-8 8c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM4 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm8 6c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/git-new-branch.js
/* harmony default export */ var git_new_branch = (["M14 2h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1zm-3.18 4.8C10.51 7.51 9.82 8 9 8H7c-.73 0-1.41.2-2 .55V5.82C6.16 5.4 7 4.3 7 3c0-1.66-1.34-3-3-3S1 1.34 1 3c0 1.3.84 2.4 2 2.82v4.37c-1.16.4-2 1.51-2 2.81 0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.04-.53-1.95-1.32-2.49.35-.31.81-.51 1.32-.51h2c1.9 0 3.49-1.33 3.89-3.11-.29.07-.58.11-.89.11-.41 0-.8-.08-1.18-.2zM4 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 12c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/git-pull.js
/* harmony default export */ var git_pull = (["M3 1C1.34 1 0 2.34 0 4c0 1.3.84 2.4 2 2.82v3.37C.84 10.6 0 11.7 0 13c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82V6.82C5.16 6.4 6 5.3 6 4c0-1.66-1.34-3-3-3zm0 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm0-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm11 5.18V6c0-1.66-1.34-3-3-3H9.41l1.29-1.29c.19-.18.3-.43.3-.71A1.003 1.003 0 009.29.29l-3 3C6.11 3.47 6 3.72 6 4c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L9.41 5H11c.55 0 1 .45 1 1v4.18A2.996 2.996 0 0013 16c1.66 0 3-1.34 3-3 0-1.3-.84-2.4-2-2.82zM13 14c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/git-push.js
/* harmony default export */ var git_push = (["M4 6h1V5H4v1zm9 3c0-.28-.11-.53-.29-.71l-3-3C9.53 5.11 9.28 5 9 5s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L8 8.41V15c0 .55.45 1 1 1s1-.45 1-1V8.41l1.29 1.29c.18.19.43.3.71.3.55 0 1-.45 1-1zM5 3H4v1h1V3zm10-3H1C.45 0 0 .45 0 1v13c0 .55.45 1 1 1h5v-2H2v-1h4v-1H3V2h11v9h-2v1h2v1h-2v2h3c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/git-repo.js
/* harmony default export */ var git_repo = (["M5 9H4v1h1V9zm10-9H1C.45 0 0 .45 0 1v13c0 .55.45 1 1 1h3v1l2-1 2 1v-1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM4 13H2v-1h2v1zm10 0H8v-1h6v1zm0-2H3V2h11v9zM5 3H4v1h1V3zm0 4H4v1h1V7zm0-2H4v1h1V5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/glass.js
/* harmony default export */ var glass = (["M2 0v4c0 2.97 2.16 5.43 5 5.91V14H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1H9V9.91c2.84-.48 5-2.94 5-5.91V0H2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/globe.js
/* harmony default export */ var globe = (["M4.45 7.83c-.26 0-.41.21-.41.46v1.75c0 .26.16.46.41.46h.29v1.77c0 .25.24.45.49.45s.49-.2.49-.45V11.2h-.01c.26 0 .44-.14.44-.4v-.3h.14c.26 0 .43-.2.43-.46v-.59s.01-.01 0-.01l-1.58-1.6h-.69zM8.51 3.9h.22c.06 0 .12-.01.12-.07 0-.06-.05-.07-.12-.07h-.22c-.06 0-.12.01-.12.07.01.06.06.07.12.07zm-2.33-.05c.07-.07.07-.19 0-.26l-.5-.5a.187.187 0 00-.26 0c-.07.07-.07.19 0 .26l.5.5c.07.07.19.07.26 0zm3.06.89c.07 0 .14-.06.14-.12v-.31c0-.07-.07-.12-.14-.12s-.14.06-.14.12v.31c0 .07.07.12.14.12zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-.55.1-1.07.23-1.57h.11v.47c0 .2.18.37.39.37.03 0 .08-.01.11-.02l.78.77c.08.08.2.08.28 0 .08-.08.08-.2 0-.28l-.75-.78c0-.02.04-.04.04-.06v-.12c0-.16.09-.22.25-.36h.46c.09 0 .17-.01.24-.05h.02c.02-.01.03-.02.05-.03.01-.01.01-.01.02-.01l.02-.02 1.59-1.58c.18-.18.18-.46 0-.64s-.47-.15-.65.03l-.3.34h-.57v-.48c0-.01.05.05.05-.09h.64c.12 0 .22-.09.22-.21s-.1-.21-.22-.21H4.1c.18-.15.34-.31.54-.44l.01-.01c.21-.14.45-.25.68-.37.15-.07.29-.15.44-.21.17-.07.35-.11.53-.17.18-.05.35-.12.53-.16a6.05 6.05 0 013.47.35c.05.02.1.05.16.08.25.11.48.24.71.39.25.16.49.34.71.55H10.6s0-.03-.01-.03c-.04 0-.09 0-.13.03l-.51.51a.17.17 0 000 .23c.06.06.17.06.23 0l.42-.44.01-.02h.25c0 .14-.07.09-.07.12v.07c0 .22-.15.37-.36.37h-.38c-.19 0-.38.21-.38.4v.17h-.1c-.12 0-.2.06-.2.18v.25h-.23c-.17 0-.3.11-.3.28 0 .17.13.26.3.26.07 0 .14.03.19-.11l.04.01.49-.46h.17l.39.37c.03.03.08.02.12-.01.03-.03.03-.12 0-.15l-.32-.35h.23l.09.12c.18.18.48.17.66-.01l.09-.1h.4c.02 0 .08.05.08.05v.24l-.05-.01h-.36c-.11 0-.21.1-.21.21 0 .11.09.21.21.21h.41v.15c-.14.21-.24.42-.45.42h-.94v-.01l-.44-.44a.47.47 0 00-.66 0l-.42.43v.01H8.6c-.26 0-.49.21-.49.46v.92c0 .26.23.45.49.45h.9c.34.14.57.35.72.69v1.68c0 .26.17.44.42.44h.72c.26 0 .4-.18.4-.44V9l.89-.86.03-.02.02-.01h.03c.07-.08.15-.19.15-.31v-.91c0-.18-.16-.32-.31-.46H13c.01.28.21.42.46.42h.42c.08.37.12.76.12 1.15 0 3.31-2.69 6-6 6zm4.54-4.27c-.1 0-.21.08-.21.18v.57c0 .1.11.18.21.18.1 0 .21-.08.21-.18v-.57c0-.1-.11-.18-.21-.18zM8.37 3.19c0-.25-.2-.42-.46-.42h-.54c-.25 0-.42.18-.42.43 0 .03-.1.04.05.08v.47c0 .15.06.27.21.27s.21-.12.21-.27v-.14h.5c.24 0 .45-.16.45-.42z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/globe-network.js
/* harmony default export */ var globe_network = (["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm5.17 5h-2.44c-.21-1.11-.51-2.03-.91-2.69 1.43.46 2.61 1.43 3.35 2.69zM10 8c0 .73-.05 1.39-.12 2H6.12C6.05 9.39 6 8.73 6 8s.05-1.39.12-2h3.76c.07.61.12 1.27.12 2zM8 2c.67 0 1.36 1.1 1.73 3H6.27C6.64 3.1 7.33 2 8 2zm-1.82.31c-.4.66-.71 1.58-.91 2.69H2.83a6.025 6.025 0 013.35-2.69zM2 8c0-.7.13-1.37.35-2h2.76C5.04 6.62 5 7.28 5 8s.04 1.38.11 2H2.35C2.13 9.37 2 8.7 2 8zm.83 3h2.44c.21 1.11.51 2.03.91 2.69A6.025 6.025 0 012.83 11zM8 14c-.67 0-1.36-1.1-1.73-3h3.46c-.37 1.9-1.06 3-1.73 3zm1.82-.31c.4-.66.7-1.58.91-2.69h2.44a6.025 6.025 0 01-3.35 2.69zM13.65 10h-2.76c.07-.62.11-1.28.11-2s-.04-1.38-.11-2h2.76c.22.63.35 1.3.35 2s-.13 1.37-.35 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/graph.js
/* harmony default export */ var graph = (["M14 3c-1.06 0-1.92.83-1.99 1.88l-1.93.97A2.95 2.95 0 008 5c-.56 0-1.08.16-1.52.43L3.97 3.34C3.98 3.23 4 3.12 4 3c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.24 0 .47-.05.68-.13l2.51 2.09C5.08 7.29 5 7.63 5 8c0 .96.46 1.81 1.16 2.35l-.56 1.69c-.91.19-1.6.99-1.6 1.96 0 1.1.9 2 2 2s2-.9 2-2c0-.51-.2-.97-.51-1.32l.56-1.69A2.99 2.99 0 0011 8c0-.12-.02-.24-.04-.36l1.94-.97c.32.21.69.33 1.1.33 1.1 0 2-.9 2-2s-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/graph-remove.js
/* harmony default export */ var graph_remove = (["M12.89 8.11l-.01.01-.38-.38-.38.38-.02-.02c-.54.55-1.27.9-2.1.9-1.66 0-3-1.34-3-3 0-.83.35-1.56.9-2.1l-.02-.02.38-.38-.38-.38.01-.01C7.35 2.57 7 1.83 7 1c0-.34.07-.65.17-.96A8.004 8.004 0 000 8c0 4.42 3.58 8 8 8 4.14 0 7.54-3.14 7.96-7.17-.31.1-.62.17-.96.17-.83 0-1.57-.35-2.11-.89zm1.02-4.61l1.79-1.79c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-1.79 1.8L10.71.3A.965.965 0 0010 0a1.003 1.003 0 00-.71 1.71l1.79 1.79-1.79 1.79a1.003 1.003 0 001.42 1.42l1.79-1.79 1.79 1.79a1.003 1.003 0 001.42-1.42l-1.8-1.79z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/greater-than.js
/* harmony default export */ var greater_than = (["M2.713 5.958a1 1 0 01.574-1.916l10 3c.95.285.95 1.63 0 1.916l-10 3a1 1 0 01-.574-1.916L9.52 8 2.713 5.958z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/greater-than-or-equal-to.js
/* harmony default export */ var greater_than_or_equal_to = (["M2.713 3.958a1 1 0 01.574-1.916l10 3c.95.285.95 1.63 0 1.916l-10 3a1 1 0 01-.574-1.916L9.52 6 2.713 3.958zM3 12h10a1 1 0 010 2H3a1 1 0 010-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/grid.js
/* harmony default export */ var grid = (["M15 9c.55 0 1-.45 1-1s-.45-1-1-1h-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1H9V1c0-.55-.45-1-1-1S7 .45 7 1v1H4V1c0-.55-.45-1-1-1S2 .45 2 1v1H1c-.55 0-1 .45-1 1s.45 1 1 1h1v3H1c-.55 0-1 .45-1 1s.45 1 1 1h1v3H1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h3v1c0 .55.45 1 1 1s1-.45 1-1v-1h3v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1s-.45-1-1-1h-1V9h1zm-8 3H4V9h3v3zm0-5H4V4h3v3zm5 5H9V9h3v3zm0-5H9V4h3v3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/grid-view.js
/* harmony default export */ var grid_view = (["M0 1v6h7V0H1C.45 0 0 .45 0 1zm0 14c0 .55.45 1 1 1h6V9H0v6zM15 0H9v7h7V1c0-.55-.45-1-1-1zM9 16h6c.55 0 1-.45 1-1V9H9v7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/group-objects.js
/* harmony default export */ var group_objects = (["M5 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6-3H5C2.24 3 0 5.24 0 8s2.24 5 5 5h6c2.76 0 5-2.24 5-5s-2.24-5-5-5zm0 9H5c-2.21 0-4-1.79-4-4s1.79-4 4-4h6c2.21 0 4 1.79 4 4s-1.79 4-4 4zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/grouped-bar-chart.js
/* harmony default export */ var grouped_bar_chart = (["M10 12c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1s-1 .45-1 1v8c0 .55.45 1 1 1zm3 0c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1zm2 1H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-9-1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1zm-3 0c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1v9c0 .55.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/hand.js
/* harmony default export */ var hand = (["M15 5c0-.55-.45-1-1-1-.41 0-.76.24-.91.59v.01s0 .01-.01.01L11.57 8h-.36l.78-4.84C12 3.11 12 3.05 12 3a1 1 0 00-1.99-.16v.01L9.18 8H9V1c0-.55-.45-1-1-1S7 .45 7 1v7h-.09l-.93-5.18A1 1 0 005 2c-.55 0-1 .45-1 1 0 .05 0 .11.01.16L5.26 11h-.04L2.83 7.44C2.65 7.18 2.35 7 2 7c-.55 0-1 .45-1 1 0 .17.04.33.12.47l3 5.69h.01v.01A5.002 5.002 0 0013 11v-.59l1.93-5.05c.05-.11.07-.23.07-.36z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/hand-down.js
/* harmony default export */ var hand_down = (["M14.72 7.87c-1.54-.67-2.99-2.68-3.7-3.95C10.11 1.95 9.93 0 6.14 0 4.05 0 2.71.61 1.92 2.12 1.27 3.36 1 5.21 1 7.83v.79c0 .65.6 1.18 1.35 1.18.34 0 .64-.11.88-.29.17.48.68.84 1.29.84.41 0 .78-.16 1.03-.42.23.37.67.63 1.19.63.57 0 1.05-.31 1.25-.74l.01.63v4.05c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V7.9c.58.41 1.55 1.21 2.47 1.29 1.57.14 1.82-1.07 1.25-1.32z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/hand-left.js
/* harmony default export */ var hand_left = (["M12.08 4.97c-1.26-.71-3.27-2.15-3.95-3.7C7.88.7 6.67.96 6.81 2.52c.09.93.89 1.9 1.3 2.48H1.5C.67 5 0 5.67 0 6.5S.67 8 1.5 8h4.05l.63.01c-.44.2-.75.69-.75 1.25 0 .52.26.96.63 1.19-.26.25-.42.61-.42 1.03 0 .61.35 1.12.84 1.29-.18.24-.29.54-.29.88 0 .75.54 1.35 1.19 1.35h.79c2.62 0 4.47-.28 5.71-.92 1.51-.79 2.12-2.14 2.12-4.22 0-3.79-1.95-3.97-3.92-4.89z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/hand-right.js
/* harmony default export */ var hand_right = (["M14.5 5H7.89c.41-.58 1.21-1.55 1.3-2.47C9.34.97 8.12.71 7.87 1.28c-.67 1.54-2.68 2.99-3.95 3.7C1.95 5.89 0 6.07 0 9.86c0 2.09.61 3.43 2.12 4.22 1.24.65 3.09.92 5.71.92h.79c.65 0 1.18-.6 1.18-1.35 0-.34-.11-.64-.29-.88.48-.17.84-.68.84-1.29 0-.41-.16-.78-.42-1.03.37-.23.63-.67.63-1.19 0-.57-.31-1.05-.74-1.25l.63-.01h4.05c.83 0 1.5-.67 1.5-1.5S15.33 5 14.5 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/hand-up.js
/* harmony default export */ var hand_up = (["M13.65 6.19c-.34 0-.64.11-.88.29-.17-.48-.68-.84-1.29-.84-.41 0-.78.16-1.03.42-.23-.37-.67-.63-1.19-.63-.57 0-1.05.31-1.25.74L8 5.55V1.5C8 .67 7.33 0 6.5 0S5 .67 5 1.5v6.61c-.58-.41-1.55-1.21-2.48-1.3C.96 6.67.7 7.88 1.28 8.13c1.54.67 2.99 2.68 3.7 3.95C5.89 14.05 6.07 16 9.86 16c2.09 0 3.43-.61 4.22-2.12.64-1.24.92-3.09.92-5.71v-.79c0-.65-.6-1.19-1.35-1.19z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/hat.js
/* harmony default export */ var hat = (["M15 10c.495 0 .933.379.993.882L16 11v.505c0 1.461-3.524 2.45-7.707 2.493L8 14c-4.31 0-8-1-8-2.495V11c0-.561.466-1 1-1 .895 0 3 1 7 1l.381-.003C12.135 10.937 14.134 10 15 10zm-4-8c1.13 0 2.02 2.153 2.671 6.46-1.063.266-2.644.652-4.887.727l-.403.01L8 9.2c-2.664 0-4.488-.444-5.673-.74C2.98 4.153 3.87 2 5 2c2 0 1.329 2 3 2s1-2 3-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/header.js
/* harmony default export */ var header = (["M13 1c-.55 0-1 .45-1 1v5H4V2c0-.55-.45-1-1-1s-1 .45-1 1v12c0 .55.45 1 1 1s1-.45 1-1V9h8v5c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/header-one.js
/* harmony default export */ var header_one = (["M14.06 8c-.04.23-.12.44-.25.61-.13.17-.29.3-.48.41-.18.11-.39.18-.62.23-.23.04-.46.07-.71.07v1.03h1.74V16H15V8h-.94zM7 0c-.56 0-1 .45-1 1v4H2V1c0-.55-.45-1-1-1-.56 0-1 .45-1 1v10c0 .55.45 1 1 1 .56 0 1-.45 1-1V7h4v4c0 .55.45 1 1 1 .56 0 1-.45 1-1V1c0-.54-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/header-three.js
/* harmony default export */ var header_three = (["M1 0C.44 0 0 .45 0 1v10c0 .54.45 1 1 1 .56 0 1-.45 1-1V7h4v4c0 .54.45 1 1 1 .56 0 1-.45 1-1V1c0-.54-.45-1-1-1-.56 0-1 .45-1 1v4H2V1c0-.54-.45-1-1-1zm13.71 11.72c.41.08.72.3.95.65.23.35.34.77.34 1.27 0 .37-.07.7-.2.97-.14.29-.32.54-.55.74-.23.2-.5.36-.8.47-.3.11-.62.16-.96.16-.41 0-.77-.06-1.08-.19-.31-.12-.56-.31-.77-.54-.21-.24-.36-.52-.47-.85-.11-.33-.16-.7-.17-1.1h1.14c-.01.47.09.86.32 1.17.23.31.57.47 1.02.47.39 0 .71-.12.97-.36s.39-.58.39-1.02c0-.3-.05-.53-.16-.71-.11-.17-.25-.31-.43-.4-.17-.09-.37-.15-.59-.17-.22-.02-.44-.03-.67-.02v-.93c.19.01.38 0 .57-.04.19-.03.36-.1.51-.19.14-.09.26-.22.35-.38.09-.16.14-.36.14-.59 0-.33-.1-.59-.31-.79-.2-.2-.47-.3-.79-.3-.21 0-.38.04-.53.13-.15.09-.27.21-.37.36-.1.15-.17.32-.22.51-.05.19-.07.38-.06.58h-1.15c.01-.38.08-.72.19-1.04.11-.32.27-.6.47-.83.19-.23.44-.42.72-.55.28-.13.6-.2.96-.2.28 0 .55.04.82.13.27.08.51.21.72.38.21.17.38.38.51.64s.19.56.19.9c0 .39-.08.73-.24 1.02-.16.29-.42.5-.76.63v.02z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/header-two.js
/* harmony default export */ var header_two = (["M13.17 13.93c-.17.15-.33.29-.46.44-.13.16-.22.32-.27.49h3.55V16H11c.01-.65.16-1.22.44-1.71s.67-.91 1.17-1.27c.24-.18.49-.36.75-.54.25-.18.49-.36.71-.57.21-.2.39-.42.53-.65.14-.24.21-.51.22-.82 0-.14-.02-.29-.05-.45-.03-.16-.09-.31-.18-.45a1.13 1.13 0 00-.37-.35c-.16-.09-.37-.14-.63-.14-.24 0-.43.05-.59.15-.16.1-.29.24-.38.42-.1.17-.17.38-.21.62-.05.24-.07.5-.08.77h-1.19c0-.43.05-.83.16-1.2s.27-.69.49-.96c.21-.25.48-.46.79-.62.31-.15.67-.23 1.07-.23.45 0 .82.08 1.11.23.3.16.55.36.73.6.19.24.32.5.39.79.08.28.12.54.12.79 0 .31-.04.6-.13.85s-.22.49-.37.7c-.15.21-.32.41-.52.59s-.4.35-.61.51l-.63.45c-.21.14-.39.28-.57.42zM0 1c0-.55.44-1 1-1 .55 0 1 .46 1 1v10c0 .55-.44 1-1 1-.55 0-1-.46-1-1V1zm6 0c0-.55.44-1 1-1 .55 0 1 .46 1 1v10c0 .55-.44 1-1 1-.55 0-1-.46-1-1V1zM2 5h4v2H2V5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/headset.js
/* harmony default export */ var headset = (["M14.85 6.34C14.18 2.72 11.37 0 8 0S1.82 2.72 1.15 6.34C.47 6.9 0 8.1 0 9.5 0 11.43.9 13 2 13c0 1.1.9 2 2 2h2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1H4c-.55 0-1-.45-1-1 .55 0 1-.45 1-1V7c0-.45-.3-.81-.71-.94C3.97 3.7 5.81 2 8 2s4.03 1.7 4.71 4.06c-.41.13-.71.49-.71.94v5c0 .55.45 1 1 1h1c1.1 0 2-1.57 2-3.5 0-1.4-.47-2.6-1.15-3.16z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/heart.js
/* harmony default export */ var heart = (["M16 5.095c0-2.255-1.88-4.083-4.2-4.083-1.682 0-3.13.964-3.8 2.352a4.206 4.206 0 00-3.8-2.352C1.88 1.012 0 2.84 0 5.095c0 .066.007.13.01.194H.004c.001.047.01.096.014.143l.013.142c.07.8.321 1.663.824 2.573C2.073 10.354 4.232 12.018 8 15c3.767-2.982 5.926-4.647 7.144-6.854.501-.905.752-1.766.823-2.562.007-.055.012-.11.016-.164.003-.043.012-.088.013-.13h-.006c.003-.066.01-.13.01-.195z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/heart-broken.js
/* harmony default export */ var heart_broken = (["M7.71 8.87L6.17 6.55l.02-.01A.906.906 0 016 6c0-.07.03-.13.04-.19h-.02l.78-3.92C6.09 1.34 5.19 1 4.2 1 1.88 1 0 2.83 0 5.09c0 .07.01.13.01.19H0c0 .05.01.1.01.14 0 .05.01.1.01.14.07.8.32 1.66.82 2.57 1.07 1.94 2.88 3.47 5.86 5.84l-.68-2.74h.02C6.03 11.16 6 11.08 6 11c0-.28.11-.53.29-.71l1.42-1.42zM16 5.09C16 2.83 14.12 1 11.8 1c-1.2 0-2.27.5-3.04 1.28l-.7 3.51 1.77 2.66-.01.01c.1.15.18.33.18.54 0 .28-.11.53-.29.71l-1.6 1.6.75 3.01c3.23-2.56 5.16-4.15 6.28-6.18.5-.91.75-1.77.82-2.56.01-.05.01-.11.02-.16 0-.04.01-.09.01-.13h-.01c.01-.07.02-.14.02-.2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/heat-grid.js
/* harmony default export */ var heat_grid = (["M0 10h5V7H0v3zm1-2h3v1H1V8zm14-5h-4v3h5V4c0-.55-.45-1-1-1zm0 2h-3V4h3v1zM0 4v2h5V3H1c-.55 0-1 .45-1 1zm0 9c0 .55.45 1 1 1h4v-3H0v2zm6-7h4V3H6v3zm0 8h4v-3H6v3zm1-2h2v1H7v-1zm4 2h4c.55 0 1-.45 1-1v-2h-5v3zm0-4h5V7h-5v3zm-5 0h4V7H6v3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/heatmap.js
/* harmony default export */ var heatmap = (["M2 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm11-7c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm3 4.5A2.5 2.5 0 0013.5 6c-.98 0-1.82.57-2.23 1.39-.6-.78-1.51-1.3-2.56-1.36.18-.49.29-.99.29-1.53C9 2.01 6.99 0 4.5 0S0 2.01 0 4.5 2.01 9 4.5 9c.19 0 .37-.03.56-.06-.03.19-.06.37-.06.56C5 11.43 6.57 13 8.5 13c1.63 0 2.98-1.11 3.37-2.62.44.38 1 .62 1.63.62A2.5 2.5 0 0016 8.5zM14.5 13c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/helicopter.js
/* harmony default export */ var helicopter = (["M.5 2a.5.5 0 01.5.5V4h7V3H2.5a.5.5 0 010-1h13a.5.5 0 010 1H10v1h1c2.26 0 4 1.79 4 4 0 1.87-1.247 3.44-3 3.878V13h.382l1.894-.947a.5.5 0 11.448.894L12.618 14H4.5a.5.5 0 010-1H7v-2.306C5.749 9.736 5 8.368 5 7L1 6v1.5a.5.5 0 01-1 0v-5A.5.5 0 01.5 2zM8 11.316V13h3v-1a6.73 6.73 0 01-3-.684zM11 5v3h3a3 3 0 00-3-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/help.js
/* harmony default export */ var help = (["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm1 13H7v-2h2v2zm1.93-6.52c-.14.32-.35.64-.62.97L9.25 8.83c-.12.15-.24.29-.28.42-.04.13-.09.3-.09.52V10H7.12V8.88s.05-.51.21-.71L8.4 6.73c.22-.26.35-.49.44-.68.09-.19.12-.38.12-.58 0-.3-.1-.55-.28-.75-.18-.19-.44-.28-.76-.28-.33 0-.59.1-.78.29-.19.19-.33.46-.4.81-.03.11-.1.15-.2.14l-1.7-.25c-.12-.01-.16-.08-.14-.19.12-.82.46-1.47 1.03-1.94.57-.48 1.32-.72 2.25-.72.47 0 .9.07 1.29.22s.72.34 1 .59c.28.25.49.55.65.89.15.35.22.72.22 1.12s-.07.75-.21 1.08z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/helper-management.js
/* harmony default export */ var helper_management = (["M13 5h-2v2h2V5zm0 6h-2v2h2v-2zm0-3h-2v2h2V8zm2-8H1C.4 0 0 .4 0 1v14c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V1c0-.6-.4-1-1-1zm-1 14H2V2h12v12zm-7-3H5v2h2v-2zm3 0H8v2h2v-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/high-priority.js
/* harmony default export */ var high_priority = (["M9 14v2H7v-2h2zm1-14L9 12H7L6 0h4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/high-voltage-pole.js
/* harmony default export */ var high_voltage_pole = (["M6 0a1 1 0 00-1 1v3H3V3h.5a.5.5 0 000-1h-2a.5.5 0 000 1H2v1a1 1 0 000 2v1h-.5a.5.5 0 000 1h2a.5.5 0 000-1H3V6h2v9a1 1 0 102 0V6h2v9a1 1 0 102 0V6h2v1h-.5a.5.5 0 000 1h2a.5.5 0 000-1H14V6a1 1 0 100-2V3h.5a.5.5 0 000-1h-2a.5.5 0 000 1h.5v1h-2V1a1 1 0 00-1-1H6zm1 2v2h2V2H7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/highlight.js
/* harmony default export */ var highlight = (["M9.12 11.07l2-2.02.71.71 4-4.04L10.17 0l-4 4.04.71.71-2 2.02 4.24 4.3zM2 12.97h4c.28 0 .53-.11.71-.3l1-1.01-3.42-3.45-3 3.03c-.18.18-.29.44-.29.72 0 .55.45 1.01 1 1.01zm13 1.01H1c-.55 0-1 .45-1 1.01S.45 16 1 16h14c.55 0 1-.45 1-1.01s-.45-1.01-1-1.01z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/history.js
/* harmony default export */ var paths_history = (["M8 3c-.55 0-1 .45-1 1v4c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L9 7.59V4c0-.55-.45-1-1-1zm0-3a7.95 7.95 0 00-6 2.74V1c0-.55-.45-1-1-1S0 .45 0 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.54C4.64 2.78 6.23 2 8 2c3.31 0 6 2.69 6 6 0 2.61-1.67 4.81-4 5.63v-.01c-.63.23-1.29.38-2 .38-3.31 0-6-2.69-6-6 0-.55-.45-1-1-1s-1 .45-1 1c0 4.42 3.58 8 8 8 .34 0 .67-.03 1-.07.02 0 .04-.01.06-.01C12.98 15.4 16 12.06 16 8c0-4.42-3.58-8-8-8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/home.js
/* harmony default export */ var home = (["M2 10v5c0 .55.45 1 1 1h3v-5h4v5h3c.55 0 1-.45 1-1v-5L8 4l-6 6zm13.71-2.71L14 5.59V2c0-.55-.45-1-1-1s-1 .45-1 1v1.59L8.71.29C8.53.11 8.28 0 8 0s-.53.11-.71.29l-7 7a1.003 1.003 0 001.42 1.42L8 2.41l6.29 6.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/horizontal-bar-chart.js
/* harmony default export */ var horizontal_bar_chart = (["M4 5h7c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zM1 1c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1zm14 6H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-6 5H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/horizontal-bar-chart-asc.js
/* harmony default export */ var horizontal_bar_chart_asc = (["M1 3h5c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm0 4h7c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 6H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM1 11h10c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/horizontal-bar-chart-desc.js
/* harmony default export */ var horizontal_bar_chart_desc = (["M15 1H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM8 9H1c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1zm-2 4H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm5-8H1c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/horizontal-distribution.js
/* harmony default export */ var horizontal_distribution = (["M2 0c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm13 0c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm-5 2H7c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/horizontal-inbetween.js
/* harmony default export */ var horizontal_inbetween = (["M0 16V0h1a1 1 0 011 1v14a1 1 0 01-1 1H0zM15 0h1v16h-1a1 1 0 01-1-1V1a1 1 0 011-1zM6.707 6.707a1 1 0 00-1.414-1.414l-2 2a1 1 0 000 1.414l2 2a1 1 0 001.414-1.414L5.414 8l1.293-1.293zm4-1.414a1 1 0 00-1.414 1.414L10.586 8 9.293 9.293a1 1 0 101.414 1.414l2-2a1 1 0 000-1.414l-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/hurricane.js
/* harmony default export */ var hurricane = (["M3.5 12c-.86 0-2.5-.5-3.5-1 1 3.5 4.506 4 7 4a7 7 0 007-7l-.006-.004a5.974 5.974 0 00-1.29-3.988c.896.066 2.37.53 3.296.992-1-3.5-4.506-4-7-4a6.998 6.998 0 00-6.14 3.635 5.972 5.972 0 00-.859 3.226L2 8l.006.005a5.98 5.98 0 001.771 3.99A7.469 7.469 0 013.5 12zM8 6a2 2 0 100 4 2 2 0 000-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/id-number.js
/* harmony default export */ var id_number = (["M2 5v7h12V5H2zm0-2h12c1.1 0 2 .9 2 2v7c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2z", "M7.9 10.48c-.14-.33-.84-.55-1.3-.75-.46-.2-.4-.33-.42-.5v-.07c.16-.14.29-.33.37-.56 0 0 0-.01.01-.02.02-.05.03-.1.05-.15.1-.01.16-.13.19-.23.03-.04.07-.15.06-.27-.02-.16-.08-.24-.15-.26v-.03c0-.2-.02-.48-.05-.67-.01-.05-.02-.1-.03-.16-.07-.23-.21-.44-.4-.58-.2-.15-.48-.23-.73-.23s-.53.08-.72.23c-.19.14-.33.35-.4.58-.02.05-.03.1-.03.16-.05.18-.06.47-.06.67v.03c-.07.03-.14.1-.15.26-.02.12.03.22.06.27.02.1.09.22.2.24.01.05.03.1.05.15v.01c.08.23.22.42.38.56v.07c-.02.17.03.29-.43.5-.46.2-1.16.42-1.3.75s-.09.52-.09.52H8c-.01 0 .05-.19-.1-.52zM10 6h2c.55 0 1 .45 1 1s-.45 1-1 1h-2c-.55 0-1-.45-1-1s.45-1 1-1zM10 9h2c.55 0 1 .45 1 1s-.45 1-1 1h-2c-.55 0-1-.45-1-1s.45-1 1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/image-rotate-left.js
/* harmony default export */ var image_rotate_left = (["M13 2h-1.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C8.11 2.47 8 2.72 8 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H13c.55 0 1 .45 1 1v3c0 .55.45 1 1 1s1-.45 1-1V5c0-1.66-1.34-3-3-3zm-5.5 9c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM10 7H1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 6.33L7 12l-1 1-2-3-2 2.67V9h7v4.33z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/image-rotate-right.js
/* harmony default export */ var image_rotate_right = (["M5.71 5.71l2-2C7.89 3.53 8 3.28 8 3c0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H3C1.34 2 0 3.34 0 5v3c0 .55.45 1 1 1s1-.45 1-1V5c0-.55.45-1 1-1h1.59l-.3.29a1.003 1.003 0 001.42 1.42zM12.5 11c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM15 7H6c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 6.33L12 12l-1 1-2-3-2 2.67V9h7v4.33z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/import.js
/* harmony default export */ var paths_import = (["M7.29 11.71c.18.18.43.29.71.29s.53-.11.71-.29l4-4a1.003 1.003 0 00-1.42-1.42L9 8.59V1c0-.55-.45-1-1-1S7 .45 7 1v7.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l4 4zM15 11c-.55 0-1 .45-1 1v2H2v-2c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/inbox.js
/* harmony default export */ var inbox = (["M13.91 2.6c-.16-.36-.51-.61-.92-.61h-10c-.41 0-.77.25-.92.61L-.01 7.45v5.54c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7.45L13.91 2.6zm-1.92 5.39c-.55 0-1 .45-1 1v1h-6v-1c0-.55-.45-1-1-1H1.94l1.71-4h8.68l1.71 4h-2.05z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/inbox-filtered.js
/* harmony default export */ var inbox_filtered = (["M6.432 2c.094.14.202.273.324.394L8.42 4H3.66L1.95 8H4c.55 0 1 .45 1 1v1h6.557c.693 0 1.363-.262 1.837-.736l.103-.102.85-1.14a2.564 2.564 0 00.623-1.682V5.058L16 7.46V13c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V7.46l2.08-4.85C2.23 2.25 2.59 2 3 2h3.432zm9.048-2c.31 0 .52.26.52.57 0 .16-.06.3-.17.41l-2.86 2.73v2.63c0 .16-.06.3-.17.41l-.82 1.1c-.1.1-.25.17-.41.17-.31 0-.57-.26-.57-.57V3.71L8.17.98A.566.566 0 018 .57c0-.31.26-.57.57-.57h6.91z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/inbox-geo.js
/* harmony default export */ var inbox_geo = (["M6.341 2A5.99 5.99 0 006 4H3.66L1.95 8H4c.55 0 1 .45 1 1v1h7a5.978 5.978 0 004-1.528V13c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V7.46l2.08-4.85C2.23 2.25 2.59 2 3 2h3.341zm3.679 2.145c0-.125.075-.23.205-.225h.345l.79.8c.005 0 0 .005 0 .005v.295c0 .13-.085.23-.215.23h-.07v.15c0 .13-.09.2-.215.2v.535c0 .125-.12.225-.245.225s-.245-.1-.245-.225V5.25h-.145c-.125 0-.205-.1-.205-.23v-.875zm2.235-2.195c-.03 0-.055-.005-.06-.035 0-.03.03-.035.06-.035h.11c.035 0 .06.005.06.035 0 .03-.03.035-.06.035h-.11zm-1.165-.025a.094.094 0 01-.13 0l-.25-.25a.094.094 0 010-.13.094.094 0 01.13 0l.25.25a.094.094 0 010 .13zm1.53.445c-.035 0-.07-.025-.07-.06v-.155c0-.03.035-.06.07-.06s.07.025.07.06v.155c0 .03-.035.06-.07.06zM12 0c2.21 0 4 1.79 4 4s-1.79 4-4 4-4-1.79-4-4 1.79-4 4-4zm0 7c1.655 0 3-1.345 3-3 0-.195-.02-.39-.06-.575h-.21c-.125 0-.225-.07-.23-.21h-.215c.075.07.155.14.155.23V3.9c0 .06-.04.115-.075.155h-.015l-.01.005-.015.01-.445.43v.815c0 .13-.07.22-.2.22h-.36c-.125 0-.21-.09-.21-.22v-.84a.627.627 0 00-.36-.345h-.45c-.13 0-.245-.095-.245-.225v-.46c0-.125.115-.23.245-.23l.13-.005.21-.215c.09-.09.24-.09.33 0l.22.225h.47c.105 0 .155-.105.225-.21v-.075h-.205a.106.106 0 01-.105-.105.11.11 0 01.105-.105h.18l.025.005v-.12s-.03-.025-.04-.025h-.2l-.045.05a.235.235 0 01-.33.005l-.045-.06h-.115l.16.175c.015.015.015.06 0 .075-.02.015-.045.02-.06.005l-.195-.185h-.085l-.245.23-.02-.005c-.025.07-.06.055-.095.055-.085 0-.15-.045-.15-.13s.065-.14.15-.14h.115v-.125c0-.06.04-.09.1-.09h.05V2.36c0-.095.095-.2.19-.2h.19c.105 0 .18-.075.18-.185V1.94c0-.015.035.01.035-.06h-.125l-.005.01-.21.22a.085.085 0 01-.115 0 .085.085 0 010-.115l.255-.255c.02-.015.045-.015.065-.015.005 0 .005.015.005.015h.64a2.327 2.327 0 00-.355-.275 2.452 2.452 0 00-.355-.195c-.03-.015-.055-.03-.08-.04a3.025 3.025 0 00-1.735-.175c-.09.02-.175.055-.265.08-.09.03-.18.05-.265.085-.075.03-.145.07-.22.105-.115.06-.235.115-.34.185l-.005.005c-.1.065-.18.145-.27.22h.455c.06 0 .11.045.11.105s-.05.105-.11.105h-.32c0 .07-.025.04-.025.045v.24h.285l.15-.17c.09-.09.235-.105.325-.015.09.09.09.23 0 .32l-.795.79-.01.01c-.005 0-.005 0-.01.005l-.025.015h-.01a.235.235 0 01-.12.025h-.23c-.08.07-.125.1-.125.18v.06c0 .01-.02.02-.02.03l.375.39c.04.04.04.1 0 .14-.04.04-.1.04-.14 0l-.39-.385a.213.213 0 01-.055.01c-.105 0-.195-.085-.195-.185v-.235h-.055A3.1 3.1 0 009 4c0 1.655 1.345 3 3 3zm2.27-2.135c.05 0 .105.04.105.09v.285c0 .05-.055.09-.105.09-.05 0-.105-.04-.105-.09v-.285c0-.05.055-.09.105-.09zm-2.085-3.27c0 .13-.105.21-.225.21h-.25v.07c0 .075-.03.135-.105.135s-.105-.06-.105-.135V1.64c-.075-.02-.025-.025-.025-.04 0-.125.085-.215.21-.215h.27c.13 0 .23.085.23.21z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/inbox-search.js
/* harmony default export */ var inbox_search = (["M5.639 2a5.391 5.391 0 00-.144 2H3.66L1.95 8H4c.55 0 1 .45 1 1v1h6V9c0-.088.012-.174.033-.255.12-.007.238-.019.39-.038.154-.008.252-.03.442-.077a5.34 5.34 0 00.24-.05h.05l.122-.04 1.266 1.271c.425.47 1.116.769 1.847.769.21 0 .414-.025.61-.071V13c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V7.46l2.08-4.85C2.23 2.25 2.59 2 3 2h2.639zM15.82 7.53c.1.12.17.27.18.44 0 .34-.27.61-.61.61a.57.57 0 01-.43-.18l-2.24-2.25c-.13.08-.26.16-.4.23-.02.01-.05.02-.07.03-.14.06-.27.12-.42.17h-.01c-.14.05-.29.08-.44.11-.04.01-.08.02-.11.02-.15.02-.3.04-.46.04-1.85 0-3.35-1.51-3.35-3.37S8.96.01 10.81 0c1.85 0 3.35 1.51 3.35 3.37 0 .16-.02.31-.04.47-.01.04-.01.07-.02.11-.02.15-.05.29-.1.44v.01c-.05.15-.11.28-.17.42-.01.02-.02.05-.03.07-.07.14-.14.27-.23.4l2.25 2.24zm-5.01-1.94c1.22 0 2.21-.99 2.21-2.22 0-1.23-.99-2.22-2.21-2.22S8.6 2.14 8.6 3.37c0 1.22.99 2.22 2.21 2.22z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/inbox-update.js
/* harmony default export */ var inbox_update = (["M8.1 2a5.023 5.023 0 000 2H3.66L1.95 8H4c.55 0 1 .45 1 1v1h6V9c0-.55.45-1 1-1h2.05c.708 0 1.352-.241 1.905-.645L16 7.46V13c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V7.46l2.08-4.85C2.23 2.25 2.59 2 3 2h5.1zM13 6a3 3 0 110-6 3 3 0 010 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/info-sign.js
/* harmony default export */ var info_sign = (["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zM7 3h2v2H7V3zm3 10H6v-1h1V7H6V6h3v6h1v1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/inheritance.js
/* harmony default export */ var inheritance = (["M5 8c0 1.66 1.34 3 3 3h4.59L11.3 9.71A.965.965 0 0111 9a1.003 1.003 0 011.71-.71l3 3c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-3 3a1.003 1.003 0 01-1.42-1.42l1.3-1.29H8c-2.76 0-5-2.24-5-5H1a1 1 0 01-1-1V1a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5zM2 2v4h4V2H2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/inherited-group.js
/* harmony default export */ var inherited_group = (["M1 7c.51 0 .935.388.993.884L2 8v3c0 .51.388.935.884.993L3 12h1.59l-.3-.29a1.003 1.003 0 011.324-1.504l.096.084 2 2c.18.18.29.43.29.71 0 .233-.076.446-.206.614l-.084.096-2 2A1.003 1.003 0 014 15c0-.24.08-.458.224-.629l.076-.081.29-.29H3a2.996 2.996 0 01-2.995-2.823L0 11V8c0-.55.45-1 1-1zm5.388-7c.629 0 1.338.21 1.838.6.48.38.85.91 1.019 1.52.04.13.07.27.09.4.09.48.14 1.22.14 1.73v.07c.18.08.34.27.37.67.03.32-.09.59-.16.71-.06.28-.21.58-.48.63-.03.13-.07.26-.12.39 0 .01-.01.04-.01.04-.22.58-.55 1.08-.949 1.45v.18c.04.45-.12.77 1.059 1.3 1.179.53 2.947 1.09 3.307 1.95.37.86.22 1.36.22 1.36H9c0-.539-.21-1.045-.583-1.417l-2-2A1.997 1.997 0 005 9c-.149 0-.296-.015-.442-.045.099-.19.082-.37.101-.575 0-.05.01-.11.01-.17-.41-.35-.75-.86-.969-1.45v-.01s-.01-.01-.01-.02c-.04-.12-.09-.26-.12-.39-.28-.05-.44-.36-.5-.64-.06-.12-.19-.39-.16-.71.04-.41.21-.6.39-.68v-.06c0-.51.05-1.26.14-1.74.02-.13.05-.27.09-.4.17-.6.54-1.13 1.02-1.51C5.048.21 5.757 0 6.387 0zm4.625 2.04c.49 0 1.05.16 1.439.46.38.29.67.7.8 1.17.03.1.05.21.07.31.07.37.11.94.11 1.33v.05c.139.06.269.21.289.51.02.25-.07.45-.13.54-.05.21-.16.44-.38.48a1.711 1.711 0 01-.1.33c-.17.44-.43.83-.749 1.11v.14c.03.35-.09.59.83 1 .929.41 2.317.84 2.597 1.5.29.66.17 1.04.17 1.04H13.66v.01c-.05-.24-.14-.5-.25-.76-.36-.86-1.119-1.33-2.687-2-.14-.06-.59-.25-.6-.25-.21-.09-.36-.15-.5-.22.02-.1.02-.2.03-.31 0-.04.01-.08.01-.13-.07-.06-.13-.12-.19-.19.22-.32.4-.67.54-1.05.02-.06.02-.06.03-.1.29-.23.48-.57.59-.96.16-.33.25-.73.21-1.16-.03-.4-.16-.76-.37-1.03-.02-.53-.07-1.13-.15-1.54-.01-.06-.02-.12-.03-.19.23-.06.48-.09.72-.09z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/inner-join.js
/* harmony default export */ var inner_join = (["M6.6 3.3C5.3 4.4 4.5 6.1 4.5 8s.8 3.6 2.1 4.7c-.5.2-1 .3-1.6.3-2.8 0-5-2.2-5-5s2.2-5 5-5c.6 0 1.1.1 1.6.3zm-1.96 8.68C3.92 10.83 3.5 9.46 3.5 8s.42-2.83 1.14-3.98C2.6 4.2 1 5.91 1 8s1.6 3.8 3.64 3.98zM8 4c-1.2.9-2 2.4-2 4s.8 3.1 2 4c1.2-.9 2-2.3 2-4s-.8-3.1-2-4zm3-1c2.8 0 5 2.2 5 5s-2.2 5-5 5c-.6 0-1.1-.1-1.6-.3 1.3-1.1 2.1-2.9 2.1-4.7s-.8-3.5-2.1-4.7c.5-.2 1-.3 1.6-.3zm.35 1.02c.73 1.15 1.14 2.52 1.14 3.98s-.42 2.83-1.14 3.98c2.04-.18 3.64-1.9 3.64-3.98s-1.6-3.8-3.64-3.98z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/insert.js
/* harmony default export */ var insert = (["M5 9h2v2c0 .6.4 1 1 1s1-.4 1-1V9h2c.6 0 1-.4 1-1s-.4-1-1-1H9V5c0-.6-.4-1-1-1s-1 .4-1 1v2H5c-.6 0-1 .4-1 1s.4 1 1 1zm10-9H1C.4 0 0 .4 0 1v14c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V1c0-.6-.4-1-1-1zm-1 14H2V2h12v12z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/intelligence.js
/* harmony default export */ var intelligence = (["M8 7c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.46-1-1-1zm4.988.976v-.042a.398.398 0 00-.107-.216 7.57 7.57 0 00-1.087-1.082c-.83-.703-1.78-1.292-2.824-1.527a4.315 4.315 0 00-1.818-.024 5.578 5.578 0 00-1.593.595c-.781.427-1.5 1.01-2.125 1.665-.112.12-.225.246-.33.379a.43.43 0 000 .558c.318.403.699.758 1.086 1.082.831.703 1.78 1.292 2.824 1.527a4.37 4.37 0 001.831.024c.556-.108 1.087-.325 1.593-.595a8.695 8.695 0 002.118-1.665c.113-.12.232-.246.338-.379A.42.42 0 0013 8.06V8c-.012-.012-.012-.018-.012-.024zM8 10c-1.107 0-2-.893-2-2s.893-2 2-2 2 .893 2 2-.893 2-2 2zM7 1a1 1 0 00-1-1H1a1 1 0 00-1 1v5a1 1 0 002 0V2h4a1 1 0 001-1zm2 0a1 1 0 011-1h5a1 1 0 011 1v5a1 1 0 11-2 0V2h-4a1 1 0 01-1-1zm0 14a1 1 0 001 1h5a1 1 0 001-1v-5a1 1 0 10-2 0v4h-4a1 1 0 00-1 1zm-2 0a1 1 0 01-1 1H1a1 1 0 01-1-1v-5a1 1 0 012 0v4h4a1 1 0 011 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/intersection.js
/* harmony default export */ var intersection = (["M10 3c-.92 0-1.76.26-2.5.69C6.76 3.26 5.92 3 5 3 2.24 3 0 5.24 0 8s2.24 5 5 5c.92 0 1.76-.26 2.5-.69.74.43 1.58.69 2.5.69 2.76 0 5-2.24 5-5s-2.24-5-5-5zm-4.1 7.85c-.29.09-.59.15-.9.15-1.66 0-3-1.34-3-3s1.34-3 3-3c.31 0 .61.06.9.15C5.33 5.96 5 6.94 5 8s.33 2.04.9 2.85zM10 11c-.31 0-.61-.06-.9-.15.57-.81.9-1.79.9-2.85s-.33-2.04-.9-2.85c.29-.09.59-.15.9-.15 1.66 0 3 1.34 3 3s-1.34 3-3 3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/ip-address.js
/* harmony default export */ var ip_address = (["M5 2.66C5 4.14 8 8 8 8s3-3.86 3-5.34C10.99 1.2 9.66 0 8 0S5 1.2 5 2.66zM7 3c0-.55.45-1 1-1s1 .45 1 1-.45 1-1 1-1-.45-1-1zM10.5 10H8v5h1v-4h1v1H9v1h2v-3h-.5zM2 9h12c.55 0 1 .45 1 1v5c0 .55-.45 1-1 1H2c-.55 0-1-.45-1-1v-5c0-.55.45-1 1-1zm4 1v5h1v-5H6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/issue.js
/* harmony default export */ var issue = (["M8 16A8 8 0 118 0a8 8 0 010 16zm0-2A6 6 0 108 2a6 6 0 000 12zm1-2H7v-2h2v2zm0-3H7V4h2v5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/issue-closed.js
/* harmony default export */ var issue_closed = (["M9.296.104a2.99 2.99 0 00-1.003.664 2.987 2.987 0 00-.75 1.25 6 6 0 106.28 4.527c.043-.039.085-.079.127-.12l1.456-1.456A8 8 0 119.296.105zm2.532 5.2a.997.997 0 01-.707-.294L9.707 3.596a1 1 0 011.414-1.414l.707.707 1.768-1.768a1 1 0 111.414 1.415L12.536 5.01a.997.997 0 01-.708.293zM9 12H7v-2h2v2zm0-3H7V4h2v5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/issue-new.js
/* harmony default export */ var issue_new = (["M10.568.421c-.01.04-.018.08-.026.121-.837.156-1.53.73-1.85 1.497a6 6 0 105.27 5.273 2.51 2.51 0 001.496-1.854c.04-.008.081-.016.121-.026A8 8 0 1110.568.421zM9 12H7v-2h2v2zm0-3H7V4h2v5zm1-6c0-.55.45-1 1-1h1V1c0-.55.45-1 1-1s1 .45 1 1v1h1c.55 0 1 .45 1 1s-.45 1-1 1h-1v1.005c0 .55-.45 1-1 1s-1-.45-1-1V4h-1c-.55 0-1-.45-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/italic.js
/* harmony default export */ var italic = (["M9.8 4H11c.5 0 1-.4 1-1s-.4-1-1-1H7c-.5 0-1 .4-1 1s.4 1 1 1h.8l-1.6 8H5c-.5 0-1 .4-1 1s.4 1 1 1h4c.5 0 1-.4 1-1s-.4-1-1-1h-.8l1.6-8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/join-table.js
/* harmony default export */ var join_table = (["M15 5h-3V2c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h3v3c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-5-1v2H6V4h4zm0 6H6V7h4v3zM2 4h3v2H2V4zm0 5V7h3v2H2zm4 4v-2h4v2H6zm8 0h-3v-2h3v2zm0-3h-3V8h3v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/key.js
/* harmony default export */ var key = (["M11 0C8.24 0 6 2.24 6 5c0 1.02.31 1.96.83 2.75L.29 14.29a1.003 1.003 0 001.42 1.42L3 14.41l1.29 1.29c.18.19.43.3.71.3s.53-.11.71-.29l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71L6.41 11l1.83-1.83c.8.52 1.74.83 2.76.83 2.76 0 5-2.24 5-5s-2.24-5-5-5zm0 8c-.23 0-.45-.03-.66-.08-.01 0-.02-.01-.03-.01-.21-.05-.41-.12-.6-.21a3.014 3.014 0 01-1.62-2c0-.01-.01-.02-.01-.03C8.03 5.45 8 5.23 8 5c0-1.66 1.34-3 3-3s3 1.34 3 3-1.34 3-3 3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/key-backspace.js
/* harmony default export */ var key_backspace = (["M15 2H6c-.28 0-.53.11-.71.29l-5 5C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l5 5c.18.18.43.29.71.29h9c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-2.29 7.29a1.003 1.003 0 01-1.42 1.42L10 9.41 8.71 10.7c-.18.19-.43.3-.71.3a1.003 1.003 0 01-.71-1.71L8.59 8l-1.3-1.29a1.003 1.003 0 011.42-1.42L10 6.59l1.29-1.29c.18-.19.43-.3.71-.3a1.003 1.003 0 01.71 1.71L11.41 8l1.3 1.29z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/key-command.js
/* harmony default export */ var key_command = (["M12 9h-1V7h1c1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3v1H7V4c0-1.66-1.34-3-3-3S1 2.34 1 4s1.34 3 3 3h1v2H4c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3v-1h2v1c0 1.66 1.34 3 3 3s3-1.34 3-3-1.34-3-3-3zm0-6c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM4 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm0-8c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm5 4H7V7h2v2zm3 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/key-control.js
/* harmony default export */ var key_control = (["M12.71 5.29l-4-4C8.53 1.11 8.28 1 8 1s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L8 3.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/key-delete.js
/* harmony default export */ var key_delete = (["M15.71 7.29l-5-5A.997.997 0 0010 2H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h9c.28 0 .53-.11.71-.29l5-5c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zm-7 2a1.003 1.003 0 01-1.42 1.42L6 9.41 4.71 10.7c-.18.19-.43.3-.71.3a1.003 1.003 0 01-.71-1.71L4.59 8l-1.3-1.29a1.003 1.003 0 011.42-1.42L6 6.59 7.29 5.3c.18-.19.43-.3.71-.3a1.003 1.003 0 01.71 1.71L7.41 8l1.3 1.29z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/key-enter.js
/* harmony default export */ var key_enter = (["M14 2c-.55 0-1 .45-1 1v3c0 1.66-1.34 3-3 3H4.41L5.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L4.41 11H10c2.76 0 5-2.24 5-5V3c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/key-escape.js
/* harmony default export */ var key_escape = (["M2 7c.55 0 1-.45 1-1V4.41L7.29 8.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L4.41 3H6c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm7-5.9v2A5 5 0 113.1 9h-2c.49 3.39 3.38 6 6.9 6 3.87 0 7-3.13 7-7 0-3.52-2.61-6.41-6-6.9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/key-option.js
/* harmony default export */ var key_option = (["M11 4h4c.55 0 1-.45 1-1s-.45-1-1-1h-4c-.55 0-1 .45-1 1s.45 1 1 1zm4 8h-3.43L5.86 2.49h-.02A.975.975 0 005 2H1c-.55 0-1 .45-1 1s.45 1 1 1h3.43l5.71 9.51.01-.01c.18.3.49.5.85.5h4c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/key-shift.js
/* harmony default export */ var key_shift = (["M13.71 7.29l-5-5C8.53 2.11 8.28 2 8 2s-.53.11-.71.29l-5 5A1.003 1.003 0 003 9h2v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V9h2a1.003 1.003 0 00.71-1.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/key-tab.js
/* harmony default export */ var key_tab = (["M15 10H4.41L5.7 8.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L2 9.59V8c0-.55-.45-1-1-1s-1 .45-1 1v6c0 .55.45 1 1 1s1-.45 1-1v-1.59l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L4.41 12H15c.55 0 1-.45 1-1s-.45-1-1-1zm0-9c-.55 0-1 .45-1 1v1.59L11.71 1.3A.965.965 0 0011 1a1.003 1.003 0 00-.71 1.71L11.59 4H1c-.55 0-1 .45-1 1s.45 1 1 1h10.59L10.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L14 6.41V8c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/known-vehicle.js
/* harmony default export */ var known_vehicle = (["M15 3a.997.997 0 00-.707.293L12 5.586l-1.293-1.293a1 1 0 10-1.414 1.414l2 2a.997.997 0 001.414 0l3-3A1 1 0 0015 3zm-.879 6.121l-.007-.007c-.313.309-.69.552-1.114.702V10h-.998H12h-1v-.184c-.424-.15-.8-.395-1.112-.704l-.01.01-2-2 .012-.012A2.978 2.978 0 017.184 6H3c-.176 0-.06-.824 0-1l.73-1.63C3.79 3.192 3.823 3 4 3H7.78C8.328 2.39 9.115 2 10 2c.768 0 1.461.293 1.987.77l.844-.844c-.238-.244-.524-.442-.794-.524C12.037 1.402 10.72 1 8 1c-2.72 0-4.037.402-4.037.402-.508.155-1.078.711-1.268 1.237l-.763 2.117H.88c-.484 0-.88.423-.88.939s.396.939.88.939h.375L1 7c-.034.685 0 1.436 0 2v5c0 .657.384 1 1 1s1-.343 1-1v-1h10v1c0 .657.384 1 1 1s1-.343 1-1V9l-.003-.754-.876.875zM5.001 10H3V8h2v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/lab-test.js
/* harmony default export */ var lab_test = (["M11 1a1 1 0 010 2v3l3 7v1.25a.75.75 0 01-.75.75H2.75a.75.75 0 01-.75-.75V13l3-7V3a1 1 0 110-2h6zM9 3H7v3l-1.714 4h5.428L9 6V3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/label.js
/* harmony default export */ var label = (["M11 2H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7l-5-5zm3 10H2V4h8v2H3v1h7v1h4v4zm-3-5V4l3 3h-3zm-8 3h10V9H3v1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/layer.js
/* harmony default export */ var paths_layer = (["M16 8c0-.37-.21-.68-.51-.85l.01-.01-7-4-.01.01C8.34 3.06 8.18 3 8 3s-.34.06-.49.15l-.01-.02-7 4 .01.01C.21 7.32 0 7.63 0 8s.21.68.51.85l-.01.01 7 4 .01-.01c.15.09.31.15.49.15s.34-.06.49-.15l.01.01 7-4-.01-.01c.3-.17.51-.48.51-.85z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/layer-outline.js
/* harmony default export */ var layer_outline = (["M7.504 3.132l-7 4a1 1 0 000 1.736l7 4a1 1 0 00.992 0l7-4a1 1 0 000-1.736l-7-4a1 1 0 00-.992 0zM8 5.152L12.983 8 8 10.847 3.016 8 8 5.152z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/layers.js
/* harmony default export */ var paths_layers = (["M.55 4.89l7 3c.14.07.29.11.45.11.16 0 .31-.04.45-.11l7-3a.998.998 0 00-.06-1.81L8.4.08a1.006 1.006 0 00-.79 0l-6.99 3a.992.992 0 00-.07 1.81zM15 11c-.16 0-.31.04-.45.11L8 14l-6.55-2.9c-.14-.06-.29-.1-.45-.1-.55 0-1 .45-1 1 0 .39.23.73.55.89l7 3c.14.07.29.11.45.11.16 0 .31-.04.45-.11l7-3c.32-.16.55-.5.55-.89 0-.55-.45-1-1-1zm0-4c-.16 0-.31.04-.45.11L8 10 1.45 7.11A.997.997 0 001 7c-.55 0-1 .45-1 1 0 .39.23.73.55.89l7 3c.14.07.29.11.45.11.16 0 .31-.04.45-.11l7-3c.32-.16.55-.5.55-.89 0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/layout.js
/* harmony default export */ var layout = (["M14 4c-1.1 0-2 .9-2 2 0 .47.17.9.44 1.24l-.68.91A1.996 1.996 0 009.07 9.5H7.93C7.71 8.64 6.93 8 6 8c-.47 0-.9.17-1.24.44l-.91-.68c.1-.23.15-.49.15-.76 0-.37-.11-.71-.28-1.01l2.27-2.27c.3.17.64.28 1.01.28 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .37.11.71.28 1.01L3.01 5.28C2.71 5.11 2.37 5 2 5 .9 5 0 5.9 0 7s.9 2 2 2c.47 0 .9-.17 1.24-.44l.91.68c-.1.23-.15.49-.15.76 0 .37.11.71.28 1.01l-1.27 1.27C2.71 12.11 2.37 12 2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.37-.11-.71-.28-1.01l1.27-1.27c.3.17.64.28 1.01.28.93 0 1.71-.64 1.93-1.5h1.14c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2 0-.47-.17-.9-.44-1.24l.68-.91c.23.1.49.15.76.15 1.1 0 2-.9 2-2s-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/layout-auto.js
/* harmony default export */ var layout_auto = (["M14 9.5c-.56 0-1.06.23-1.42.59L8.99 8l3.59-2.09A2.002 2.002 0 0016 4.5c0-1.1-.9-2-2-2s-2 .9-2 2c0 .19.03.37.08.54L8.5 7.13v-3.2c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S6 .9 6 2c0 .93.64 1.71 1.5 1.93v3.2L3.92 5.04c.05-.17.08-.35.08-.54 0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.56 0 1.06-.23 1.42-.59L7.01 8l-3.59 2.09A2.002 2.002 0 000 11.5c0 1.1.9 2 2 2s2-.9 2-2c0-.19-.03-.37-.08-.54L7.5 8.87v3.2c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93v-3.2l3.58 2.09c-.05.17-.08.35-.08.54 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/layout-balloon.js
/* harmony default export */ var layout_balloon = (["M14 11c-.2 0-.38.04-.56.09L12.42 9.4c.36-.36.58-.85.58-1.4 0-.55-.22-1.04-.58-1.4l1.01-1.69c.19.05.37.09.57.09 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .55.22 1.04.58 1.4l-1.01 1.69C11.38 6.04 11.2 6 11 6c-.93 0-1.71.64-1.93 1.5H6.93C6.71 6.64 5.93 6 5 6c-.2 0-.38.04-.56.09L3.42 4.4C3.78 4.04 4 3.55 4 3c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.2 0 .38-.04.56-.09L3.58 6.6C3.22 6.96 3 7.45 3 8c0 .55.22 1.04.58 1.4l-1.01 1.69C2.38 11.04 2.2 11 2 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.55-.22-1.04-.58-1.4l1.01-1.69c.19.05.37.09.57.09.93 0 1.71-.64 1.93-1.5h2.14c.22.86 1 1.5 1.93 1.5.2 0 .38-.04.56-.09l1.01 1.69c-.35.36-.57.85-.57 1.4 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/layout-circle.js
/* harmony default export */ var layout_circle = (["M14.16 6.02c-.12-.36-.26-.7-.43-1.03.17-.29.27-.63.27-.99 0-1.1-.9-2-2-2-.36 0-.7.1-.99.27-.33-.17-.67-.31-1.03-.43A1.987 1.987 0 008 0C6.95 0 6.1.81 6.02 1.84c-.36.12-.7.26-1.03.43C4.7 2.1 4.36 2 4 2c-1.1 0-2 .9-2 2 0 .36.1.7.27.99-.17.33-.31.67-.43 1.03C.81 6.1 0 6.95 0 8c0 1.05.81 1.9 1.84 1.98.12.36.26.7.43 1.03-.17.29-.27.63-.27.99 0 1.1.9 2 2 2 .36 0 .7-.1.99-.27.33.17.67.32 1.03.43C6.1 15.19 6.95 16 8 16c1.05 0 1.9-.81 1.98-1.84.36-.12.7-.26 1.03-.43.29.17.63.27.99.27 1.1 0 2-.9 2-2 0-.36-.1-.7-.27-.99.17-.33.31-.67.43-1.03C15.19 9.9 16 9.05 16 8c0-1.05-.81-1.9-1.84-1.98zm-.99 3.79c-.05.16-.11.31-.17.46-.3-.17-.64-.27-1-.27-1.1 0-2 .9-2 2 0 .36.1.7.27 1-.15.07-.3.12-.46.17C9.5 12.48 8.81 12 8 12s-1.5.48-1.81 1.17c-.16-.06-.32-.11-.46-.17.17-.3.27-.64.27-1 0-1.1-.9-2-2-2-.36 0-.7.1-1 .27-.07-.15-.12-.3-.17-.46C3.52 9.5 4 8.81 4 8s-.48-1.5-1.17-1.81c.06-.16.11-.32.17-.46.3.17.64.27 1 .27 1.1 0 2-.9 2-2 0-.36-.1-.7-.27-1 .15-.07.3-.12.46-.17C6.5 3.52 7.19 4 8 4s1.5-.48 1.81-1.17c.16.06.32.11.46.17-.17.3-.27.64-.27 1 0 1.1.9 2 2 2 .36 0 .7-.1 1-.27.07.15.12.3.17.46C12.48 6.5 12 7.19 12 8s.48 1.5 1.17 1.81z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/layout-grid.js
/* harmony default export */ var layout_grid = (["M2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM8 0C6.9 0 6 .9 6 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM8 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/layout-group-by.js
/* harmony default export */ var layout_group_by = (["M2 6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 5c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12-7c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM2 1C.9 1 0 1.9 0 3s.9 2 2 2 2-.9 2-2-.9-2-2-2zm7 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm5 3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/layout-hierarchy.js
/* harmony default export */ var layout_hierarchy = (["M14.5 12.07V9.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2-.93 0-1.71.64-1.93 1.5H9.93c-.18-.7-.73-1.25-1.43-1.43V3.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S6 .9 6 2c0 .93.64 1.71 1.5 1.93v2.14c-.7.18-1.25.73-1.43 1.43H3.93C3.71 6.64 2.93 6 2 6 .9 6 0 6.9 0 8c0 .93.64 1.71 1.5 1.93v2.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93V9.93c.7-.18 1.25-.73 1.43-1.43h2.14c.18.7.73 1.25 1.43 1.43v2.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93V9.93c.7-.18 1.25-.73 1.43-1.43h2.14c.18.7.73 1.25 1.43 1.43v2.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/layout-linear.js
/* harmony default export */ var layout_linear = (["M14 6c-.93 0-1.71.64-1.93 1.5H9.93C9.71 6.64 8.93 6 8 6s-1.71.64-1.93 1.5H3.93C3.71 6.64 2.93 6 2 6 .9 6 0 6.9 0 8s.9 2 2 2c.93 0 1.71-.64 1.93-1.5h2.13C6.29 9.36 7.07 10 8 10s1.71-.64 1.93-1.5h2.13c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2C16 6.9 15.1 6 14 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/layout-skew-grid.js
/* harmony default export */ var layout_skew_grid = (["M2 6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12-2c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 9c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6-3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM8 3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 9c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/layout-sorted-clusters.js
/* harmony default export */ var layout_sorted_clusters = (["M2 6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM8 9c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/learning.js
/* harmony default export */ var learning = (["M8.441 1.104a.985.985 0 00-.882 0L.365 5c-.487.253-.487.747 0 1L7.56 9.896a.985.985 0 00.882 0L15.635 6c.487-.253.487-.747 0-1L8.44 1.104z", "M14 5.5l.016 4.514c.002.548.447.99.994.99a.99.99 0 00.99-.99V5.5h-2zM3.371 9.047l4.387 2.432a.5.5 0 00.485 0l4.39-2.432a.25.25 0 01.371.218v2.955a.25.25 0 01-.134.222l-4.635 2.436a.5.5 0 01-.466 0l-4.635-2.436A.25.25 0 013 12.22V9.265a.25.25 0 01.371-.218z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/left-join.js
/* harmony default export */ var left_join = (["M6.6 3.3C6.1 3.1 5.6 3 5 3 2.2 3 0 5.2 0 8s2.2 5 5 5c.6 0 1.1-.1 1.6-.3C5.3 11.6 4.5 9.9 4.5 8s.8-3.6 2.1-4.7zM8 4c-1.2.9-2 2.4-2 4s.8 3.1 2 4c1.2-.9 2-2.3 2-4s-.8-3.1-2-4zm3-1c2.8 0 5 2.2 5 5s-2.2 5-5 5c-.6 0-1.1-.1-1.6-.3 1.3-1.1 2.1-2.9 2.1-4.7s-.8-3.5-2.1-4.7c.5-.2 1-.3 1.6-.3zm.35 1.02c.73 1.15 1.14 2.52 1.14 3.98s-.42 2.83-1.14 3.98c2.04-.18 3.64-1.9 3.64-3.98s-1.6-3.8-3.64-3.98z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/less-than.js
/* harmony default export */ var less_than = (["M13.287 5.958a1 1 0 00-.574-1.916l-10 3c-.95.285-.95 1.631 0 1.916l10 3a1 1 0 00.574-1.916L6.48 8l6.807-2.042z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/less-than-or-equal-to.js
/* harmony default export */ var less_than_or_equal_to = (["M13.287 3.958a1 1 0 00-.575-1.916l-10 3c-.95.285-.95 1.63 0 1.916l10 3a1 1 0 00.575-1.916L6.48 6l6.807-2.042zM13 12H3a1 1 0 000 2h10a1 1 0 000-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/lifesaver.js
/* harmony default export */ var lifesaver = (["M9.405 11.746C8.968 11.91 8.495 12 8 12c-.494 0-.968-.09-1.405-.254l-.702 1.873C6.548 13.865 7.258 14 8 14c.742 0 1.452-.135 2.107-.38l-.702-1.874zm2.341-2.341l1.873.702C13.865 9.452 14 8.742 14 8c0-.742-.135-1.452-.38-2.107l-1.874.702c.164.437.254.91.254 1.405 0 .494-.09.968-.254 1.405zM9.405 4.254l.702-1.873A5.987 5.987 0 008 2c-.742 0-1.452.135-2.107.38l.702 1.874C7.032 4.09 7.505 4 8 4c.494 0 .968.09 1.405.254zM4.254 6.595L2.38 5.893A5.987 5.987 0 002 8c0 .742.135 1.452.38 2.107l1.874-.702A3.991 3.991 0 014 8c0-.494.09-.968.254-1.405zM8 16A8 8 0 118 0a8 8 0 010 16zm0-6a2 2 0 100-4 2 2 0 000 4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/lightbulb.js
/* harmony default export */ var lightbulb = (["M9.01 14h-2c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1s-.44-1-1-1zm1-3h-4c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.44-1-1-1zm-2-11C5.26 0 3.03 1.95 3.03 4.35c0 2.37 1.63 2.64 1.94 5.22 0 .24.22.44.5.44h5.09c.28 0 .5-.19.5-.44C11.37 6.99 13 6.72 13 4.35 13 1.95 10.77 0 8.01 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/lightning.js
/* harmony default export */ var lightning = (["M7 9H5a1 1 0 01-1-1L4.89.876A1 1 0 015.884 0h4.27a.847.847 0 01.793 1.144L9.125 6h2.05a.825.825 0 01.754 1.16L8.16 15.64A.606.606 0 017 15.394V9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/link.js
/* harmony default export */ var paths_link = (["M4.99 11.99c.28 0 .53-.11.71-.29l6-6a1.003 1.003 0 00-1.42-1.42l-6 6a1.003 1.003 0 00.71 1.71zm3.85-2.02L6.4 12.41l-1 1-.01-.01c-.36.36-.85.6-1.4.6-1.1 0-2-.9-2-2 0-.55.24-1.04.6-1.4l-.01-.01 1-1 2.44-2.44c-.33-.1-.67-.16-1.03-.16-1.1 0-2.09.46-2.81 1.19l-.02-.02-1 1 .02.02c-.73.72-1.19 1.71-1.19 2.81 0 2.21 1.79 4 4 4 1.1 0 2.09-.46 2.81-1.19l.02.02 1-1-.02-.02c.73-.72 1.19-1.71 1.19-2.81 0-.35-.06-.69-.15-1.02zm7.15-5.98c0-2.21-1.79-4-4-4-1.1 0-2.09.46-2.81 1.19l-.02-.02-1 1 .02.02c-.72.72-1.19 1.71-1.19 2.81 0 .36.06.69.15 1.02l2.44-2.44 1-1 .01.01c.36-.36.85-.6 1.4-.6 1.1 0 2 .9 2 2 0 .55-.24 1.04-.6 1.4l.01.01-1 1-2.43 2.45c.33.09.67.15 1.02.15 1.1 0 2.09-.46 2.81-1.19l.02.02 1-1-.02-.02a3.92 3.92 0 001.19-2.81z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/list.js
/* harmony default export */ var list = (["M1 3h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 10H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/list-columns.js
/* harmony default export */ var list_columns = (["M6 1c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h5zm9-12c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1h5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/list-detail-view.js
/* harmony default export */ var list_detail_view = (["M6 9H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm9-12h-5c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM6 5H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/locate.js
/* harmony default export */ var locate = (["M15 7h-.09A6.98 6.98 0 009 1.1V1c0-.55-.45-1-1-1S7 .45 7 1v.09A6.98 6.98 0 001.1 7H1c-.55 0-1 .45-1 1s.45 1 1 1h.1A6.969 6.969 0 007 14.91V15c0 .55.45 1 1 1s1-.45 1-1v-.09A6.98 6.98 0 0014.9 9h.1c.55 0 1-.45 1-1s-.45-1-1-1zm-6.02 5.9c-.05-.5-.46-.9-.98-.9s-.93.4-.98.9A5.017 5.017 0 013.1 8.98c.5-.05.9-.46.9-.98s-.4-.93-.9-.98A5.017 5.017 0 017.02 3.1c.05.5.46.9.98.9s.93-.4.98-.9c1.97.39 3.52 1.95 3.92 3.92-.5.05-.9.46-.9.98s.4.93.9.98a5.017 5.017 0 01-3.92 3.92zM8 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/lock.js
/* harmony default export */ var lock = (["M13.96 7H12V3.95C12 1.77 10.21 0 8 0S4 1.77 4 3.95V7H1.96c-.55 0-.96.35-.96.9v6.91c0 .54.41 1.19.96 1.19h12c.55 0 1.04-.65 1.04-1.19V7.9c0-.55-.49-.9-1.04-.9zM6 7V3.95c0-1.09.9-1.97 2-1.97s2 .88 2 1.97V7H6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/log-in.js
/* harmony default export */ var log_in = (["M11 8c0-.28-.11-.53-.29-.71l-3-3a1.003 1.003 0 00-1.42 1.42L7.59 7H1c-.55 0-1 .45-1 1s.45 1 1 1h6.59L6.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71zm4-8H9c-.55 0-1 .45-1 1s.45 1 1 1h5v12H9c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/log-out.js
/* harmony default export */ var log_out = (["M7 14H2V2h5c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm8.71-6.71l-3-3a1.003 1.003 0 00-1.42 1.42L12.59 7H6c-.55 0-1 .45-1 1s.45 1 1 1h6.59l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/low-voltage-pole.js
/* harmony default export */ var low_voltage_pole = (["M8 0a1 1 0 00-1 1v1H3v-.5a.5.5 0 00-1 0V2a1 1 0 000 2v1h-.5a.5.5 0 000 1h2a.5.5 0 000-1H3V4h4v11a1 1 0 102 0V4h4v1h-.5a.5.5 0 000 1h2a.5.5 0 000-1H14V4a1 1 0 100-2v-.5a.5.5 0 00-1 0V2H9V1a1 1 0 00-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/manual.js
/* harmony default export */ var manual = (["M15.99 1.13c-.02-.41-.33-.77-.78-.87C12.26-.36 9.84.13 8 1.7 6.16.13 3.74-.36.78.26.33.35.03.72.01 1.13H0v12c0 .08 0 .17.02.26.12.51.65.82 1.19.71 2.63-.55 4.59-.04 6.01 1.57.02.03.06.04.08.06.02.02.03.04.05.06.04.03.09.04.13.07.05.03.09.05.14.07.11.04.23.07.35.07h.04c.12 0 .24-.03.35-.07.05-.02.09-.05.14-.07.04-.02.09-.04.13-.07.02-.02.03-.04.05-.06.03-.02.06-.03.08-.06 1.42-1.6 3.39-2.12 6.01-1.57.54.11 1.07-.21 1.19-.71.04-.09.04-.18.04-.26l-.01-12zM7 12.99c-1.4-.83-3.07-1.14-5-.93V1.96c2.11-.28 3.75.2 5 1.46v9.57zm7-.92c-1.93-.21-3.6.1-5 .93V3.42c1.25-1.26 2.89-1.74 5-1.46v10.11z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/manually-entered-data.js
/* harmony default export */ var manually_entered_data = (["M1 8h3.76l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zm14.49-4.01c.31-.32.51-.76.51-1.24C16 1.78 15.22 1 14.25 1c-.48 0-.92.2-1.24.51l-1.44 1.44 2.47 2.47 1.45-1.43zM1 4h7.76l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zm0 6c-.55 0-1 .45-1 1 0 .48.35.86.8.96L2.76 10H1zm9.95-6.43l-6.69 6.69 2.47 2.47 6.69-6.69-2.47-2.47zm4.25 2.47L13.24 8H15c.55 0 1-.45 1-1 0-.48-.35-.86-.8-.96zM2 15l3.86-1.39-2.46-2.44L2 15zm13-5h-3.76l-2 2H15c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/many-to-many.js
/* harmony default export */ var many_to_many = (["M3 3a1 1 0 100 2 1 1 0 000-2zm3 1c0 .047-.001.094-.003.14.255.081.538.209.832.41.406.28.8.676 1.171 1.225.37-.549.765-.945 1.171-1.224a3.14 3.14 0 01.832-.411 3 3 0 11.77 1.87 1.038 1.038 0 00-.47.19c-.291.2-.752.672-1.227 1.8.475 1.128.936 1.6 1.227 1.8.183.126.336.173.47.19a3 3 0 11-.77 1.87 3.141 3.141 0 01-.832-.41c-.406-.28-.8-.676-1.171-1.225-.37.549-.765.945-1.171 1.224-.294.202-.577.33-.832.411a3 3 0 11-.77-1.87c.134-.017.287-.064.47-.19.291-.2.752-.672 1.227-1.8-.475-1.128-.936-1.6-1.227-1.8a1.038 1.038 0 00-.47-.19A3 3 0 116 4zm6 0a1 1 0 112 0 1 1 0 01-2 0zm-9 7a1 1 0 100 2 1 1 0 000-2zm9 1a1 1 0 112 0 1 1 0 01-2 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/many-to-one.js
/* harmony default export */ var many_to_one = (["M3 2a1 1 0 100 2 1 1 0 000-2zm0-2c1.385 0 2.551.94 2.896 2.215.168.044.34.096.51.158 1.076.394 2.237 1.242 2.575 2.93.161.809.664 1.211 1.293 1.443a3 3 0 110 2.508c-.629.232-1.132.634-1.293 1.442-.338 1.69-1.499 2.537-2.575 2.93a5.436 5.436 0 01-.51.159A3.001 3.001 0 010 13a3 3 0 015.726-1.254c.629-.232 1.132-.634 1.293-1.442.216-1.076.765-1.81 1.413-2.304-.648-.493-1.197-1.228-1.413-2.304-.161-.808-.664-1.21-1.293-1.442A3 3 0 113 0zm1 13a1 1 0 10-2 0 1 1 0 002 0zm8-5a1 1 0 102 0 1 1 0 00-2 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/map.js
/* harmony default export */ var map = (["M15.55 3.17l-4.49-3A.975.975 0 009.99.15L5.53 2.82 1.56.17A1.003 1.003 0 000 1v11c0 .35.18.65.45.83l4.49 3a.975.975 0 001.07.02l4.46-2.67 3.97 2.65A1.003 1.003 0 0016 15V4c0-.35-.18-.65-.45-.83zM5 13.46l-3-2v-8.6l2.94 1.96c.02.02.04.03.06.04v8.6zm5-2.32s-.01 0-.01.01L6 13.53V4.86s.01 0 .01-.01L10 2.47v8.67zm4 1.99l-2.94-1.96c-.02-.01-.04-.02-.05-.03v-8.6l3 2v8.59z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/map-create.js
/* harmony default export */ var map_create = (["M14 6.82v6.32l-2.94-1.96c-.02-.01-.04-.02-.05-.03V6.22c-.08-.07-.15-.16-.22-.24-.28-.02-.54-.08-.79-.16v5.32s-.01 0-.01.01L6 13.53V4.86s.01 0 .01-.01l2.05-1.23C8.02 3.42 8 3.21 8 3c0-.98.47-1.84 1.2-2.39l-3.67 2.2L1.56.17A1.003 1.003 0 000 1v11c0 .35.18.65.45.83l4.49 3a.975.975 0 001.07.02l4.46-2.67 3.97 2.65A1.003 1.003 0 0016 15V5.82c-.25.09-.52.14-.8.16-.33.36-.73.67-1.2.84zm-9 6.64l-3-2v-8.6l2.94 1.96c.02.02.04.03.06.04v8.6zM11 4h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/map-marker.js
/* harmony default export */ var map_marker = (["M8.46 0C5.42 0 2.95 2.39 2.95 5.33 2.95 8.28 8.46 16 8.46 16s5.51-7.72 5.51-10.67C13.96 2.39 11.5 0 8.46 0zm0 8a2.5 2.5 0 010-5 2.5 2.5 0 010 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/maximize.js
/* harmony default export */ var maximize = (["M5.99 8.99c-.28 0-.53.11-.71.29l-3.29 3.29v-1.59c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.41L6.7 10.7a1.003 1.003 0 00-.71-1.71zm9-9h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.3a.99.99 0 00-.29.7 1.003 1.003 0 001.71.71l3.29-3.29V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.56-.45-1.01-1-1.01z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/media.js
/* harmony default export */ var media = (["M11.99 6.99c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm3-5h-14c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-10c0-.55-.45-1-1-1zm-1 9l-5-3-1 2-3-4-3 5v-7h12v7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/menu.js
/* harmony default export */ var menu = (["M1 4h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 8H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0-5H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/menu-closed.js
/* harmony default export */ var menu_closed = (["M14.99 6.99h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm-12-2c-.28 0-.53.11-.71.29l-2 2a1.014 1.014 0 000 1.42l2 2a1.003 1.003 0 001.71-.71v-4c0-.55-.45-1-1-1zm3-1h9c.55 0 1-.45 1-1s-.45-1-1-1h-9c-.55 0-1 .45-1 1s.45 1 1 1zm9 8h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/menu-open.js
/* harmony default export */ var menu_open = (["M9.99 11.99h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm0-5h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm0-5h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm5.71 5.3l-2-2a1.003 1.003 0 00-1.71.71v4a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71s-.11-.53-.29-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/merge-columns.js
/* harmony default export */ var merge_columns = (["M5.71 5.29a1.003 1.003 0 00-1.42 1.42l.3.29H2V2h3v1.51c.52.06.99.29 1.34.65l.66.66V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-3.82l-.66.66c-.35.35-.82.59-1.34.65V14H2V9h2.59l-.3.29a1.003 1.003 0 001.42 1.42l2-2C7.89 8.53 8 8.28 8 8c0-.28-.11-.53-.29-.71l-2-2zM15 0h-5c-.55 0-1 .45-1 1v3.82l.66-.66c.35-.35.82-.59 1.34-.65V2h3v5h-2.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C8.11 7.47 8 7.72 8 8c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H14v5h-3v-1.51c-.52-.06-.99-.29-1.34-.65L9 11.18V15c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/merge-links.js
/* harmony default export */ var merge_links = (["M8 7c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6 3c-.93 0-1.71.64-1.93 1.5H11V3c0-1.66-1.34-3-3-3S5 1.34 5 3v4.5H3.93C3.71 6.64 2.93 6 2 6 .9 6 0 6.9 0 8s.9 2 2 2c.93 0 1.71-.64 1.93-1.5H5V13c0 1.66 1.34 3 3 3s3-1.34 3-3V8.5h1.07c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2s-.9-2-2-2zm-4 7c0 1.1-.9 2-2 2s-2-.9-2-2V3c0-1.1.9-2 2-2s2 .9 2 2v10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/minimize.js
/* harmony default export */ var minimize = (["M15.99.99a1.003 1.003 0 00-1.71-.71l-3.29 3.29V1.99c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H12.4l3.3-3.29c.18-.18.29-.43.29-.71zm-10 8h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59L.29 14.28a1.003 1.003 0 001.42 1.42L5 12.41V14c0 .55.45 1 1 1s1-.45 1-1v-4a1.02 1.02 0 00-1.01-1.01z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/minus.js
/* harmony default export */ var minus = (["M13 7H3c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/mobile-phone.js
/* harmony default export */ var mobile_phone = (["M12 0H4c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM8 15c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm3-3H5V3h6v9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/mobile-video.js
/* harmony default export */ var mobile_video = (["M15 4c-.28 0-.53.11-.71.29L12 6.59V4c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V9.41l2.29 2.29c.18.19.43.3.71.3.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/modal.js
/* harmony default export */ var modal = (["M15 1a1 1 0 011 1v12a1 1 0 01-1 1H1a1 1 0 01-1-1V2a1 1 0 011-1h14zm-1 4H2v8h12V5zm-3-3H9v2h2V2zm3 0h-2v2h2V2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/modal-filled.js
/* harmony default export */ var modal_filled = (["M15 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm1 4H0V3h16v2zm-3-2h-2V1h2v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/moon.js
/* harmony default export */ var moon = (["M15 11.38A7.835 7.835 0 017.85 16C3.51 16 0 12.49 0 8.15 0 4.97 1.89 2.23 4.62 1c-.45.99-.7 2.08-.7 3.23a7.85 7.85 0 007.85 7.85c1.15 0 2.24-.25 3.23-.7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/more.js
/* harmony default export */ var more = (["M2 6.03a2 2 0 100 4 2 2 0 100-4zM14 6.03a2 2 0 100 4 2 2 0 100-4zM8 6.03a2 2 0 100 4 2 2 0 100-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/mountain.js
/* harmony default export */ var mountain = (["M16 13H3l6-9h1l2 2h1l3 7zm-2.5-3.5l-1-2.5h-1l-2-2-3 4.5L9 8l1 1 1-1 2.5 1.5zM5.94 7l-4.122 6H0l5-6h.94z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/move.js
/* harmony default export */ var move = (["M15.71 7.29l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H9V3.41l.29.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-2-2C8.53.11 8.28 0 8 0s-.53.11-.71.29l-2 2a1.003 1.003 0 001.42 1.42l.29-.3V7H3.41l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L3.41 9H7v3.59l-.29-.29A.965.965 0 006 12a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2a1.003 1.003 0 00-1.42-1.42l-.29.3V9h3.59l-.29.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/mugshot.js
/* harmony default export */ var mugshot = (["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14h-.15c-.03-.09-.04-.16-.08-.25-.34-.79-2.01-1.31-3.12-1.8-1.11-.49-.96-.79-1-1.2-.01-.06-.01-.12-.01-.18.38-.34.69-.8.89-1.33 0 0 .01-.03.01-.04.04-.12.08-.24.11-.36.25-.05.4-.33.46-.59.06-.1.18-.36.15-.65-.04-.37-.19-.55-.35-.62v-.06c0-.48-.04-1.16-.13-1.61-.02-.12-.05-.25-.08-.37-.16-.55-.51-1.05-.96-1.39C9.26 3.19 8.6 3 8 3c-.59 0-1.26.19-1.73.55-.45.35-.8.84-.96 1.39-.04.13-.06.25-.08.38-.09.45-.13 1.13-.13 1.61v.06c-.18.06-.33.24-.37.62-.03.29.09.54.15.65.06.26.21.54.47.59.03.12.07.25.11.36 0 .01.01.02.01.02v.01c.21.54.53 1.01.92 1.35 0 .05-.01.11-.01.16-.04.41.08.7-1.03 1.2-1.11.49-2.77 1.01-3.12 1.8-.04.09-.05.16-.08.25H2V2h12v12z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/multi-select.js
/* harmony default export */ var multi_select = (["M12 3.98H4c-.55 0-1 .45-1 1v1h8v5h1c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1zm3-3H7c-.55 0-1 .45-1 1v1h8v5h1c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1zm-6 6H1c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1zm-1 5H2v-3h6v3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/music.js
/* harmony default export */ var music = (["M15 0c-.07 0-.13.03-.19.04V.02l-10 2v.02C4.35 2.13 4 2.52 4 3v9.12c-.31-.07-.65-.12-1-.12-1.66 0-3 .9-3 2s1.34 2 3 2 3-.9 3-2V6.32l8-1.6v5.4c-.31-.07-.65-.12-1-.12-1.66 0-3 .9-3 2s1.34 2 3 2 3-.9 3-2V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/nest.js
/* harmony default export */ var nest = (["M2 2c.55 0 1 .45 1 1v3c0 1.66 1.34 3 3 3h5.59L10.3 7.71A.965.965 0 0110 7a1.003 1.003 0 011.71-.71l3 3c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-3 3a1.003 1.003 0 01-1.42-1.42l1.3-1.29H6c-2.76 0-5-2.24-5-5V3c0-.55.45-1 1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/new-drawing.js
/* harmony default export */ var new_drawing = (["M14.9 11c.6 0 1 .5 1 1 0 .257-.073.44-.22.614l-.08.086-3 3c-.2.2-.4.3-.7.3-.5 0-1-.4-1-1 0-.257.073-.44.22-.614l.08-.086 3-3c.2-.2.4-.3.7-.3zM1.3.1l6.734 2.45a3.005 3.005 0 002.095 3.322 3.005 3.005 0 003.401 2.081L13.9 9.8v.2c0 .257-.073.44-.22.614l-.08.086-3 3c-.171.171-.343.27-.577.294L9.9 14h-.2l-5-1-.1-.01c-.231-.05-.45-.26-.56-.49L4 12.4l-4-11 .3-.3 5.8 5.8c-.1.2-.2.4-.2.6 0 .8.6 1.5 1.5 1.5s1.5-.7 1.5-1.5S8.2 6 7.4 6c-.16 0-.32.064-.48.14l-.12.06L1 .4l.3-.3zM13 0c.55 0 1 .45 1 1v1h1c.55 0 1 .45 1 1s-.45 1-1 1h-1v1c0 .503-.376.922-.861.99l-.013.002A.999.999 0 0113 6l.097-.006-.027.004a1 1 0 01-.037.001L13 6c-.55 0-1-.45-1-1V4h-1a.993.993 0 01-.855-.482A1 1 0 0110 3c0-.55.45-1 1-1h1V1c0-.55.45-1 1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/new-grid-item.js
/* harmony default export */ var new_grid_item = (["M6 0H1C.45 0 0 .45 0 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm5 14c0-.55-.45-1-1-1s-1 .45-1 1v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1s-.45-1-1-1zM6 9H1c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1zm9 4c-.55 0-1 .45-1 1-.55 0-1 .45-1 1s.45 1 1 1h1c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm-4-4h-1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1s1-.45 1-1c.55 0 1-.45 1-1s-.45-1-1-1zm4-9h-5c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm0 9h-1c-.55 0-1 .45-1 1s.45 1 1 1c0 .55.45 1 1 1s1-.45 1-1v-1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/new-layer.js
/* harmony default export */ var new_layer = (["M13.982 6.272l1.518.868-.01.01c.3.17.51.48.51.85s-.21.68-.51.85l.01.01-7 4-.01-.01A.94.94 0 018 13a.94.94 0 01-.49-.15l-.01.01-7-4 .01-.01A.977.977 0 010 8c0-.37.21-.68.51-.86L.5 7.13l7-4 .01.02A.94.94 0 018 3c.086 0 .168.014.246.038a2 2 0 105.736 3.234zM14 3c.55 0 1 .45 1 1s-.45 1-1 1h-1v1c0 .55-.45 1-1 1s-1-.45-1-1V5h-1c-.55 0-1-.45-1-1s.45-1 1-1h1V2c0-.55.45-1 1-1s1 .45 1 1v1h1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/new-layers.js
/* harmony default export */ var new_layers = (["M13 3h2a1 1 0 010 2h-2v2a1 1 0 01-2 0V5H9a1 1 0 110-2h2V1a1 1 0 012 0v2zm-3-1.983V2H9a2 2 0 100 4h1v1c0 .279.057.544.16.785l-1.71.855c-.14.07-.29.11-.45.11-.16 0-.31-.04-.45-.11l-7-3.5a.992.992 0 01.07-1.81l6.99-3a1.006 1.006 0 01.79 0l1.6.687zm.91 7.66a2 2 0 003.085-1.54l.555-.277c.14-.07.29-.11.45-.11.55 0 1 .45 1 1 0 .39-.23.73-.55.89l-7 3.5c-.14.07-.29.11-.45.11-.16 0-.31-.04-.45-.11l-7-3.5C.23 8.48 0 8.14 0 7.75c0-.55.45-1 1-1 .16 0 .31.04.45.11L8 10.13l2.91-1.453zM15 10.25c.55 0 1 .45 1 1 0 .39-.23.73-.55.89l-7 3.5c-.14.07-.29.11-.45.11-.16 0-.31-.04-.45-.11l-7-3.5c-.32-.16-.55-.5-.55-.89 0-.55.45-1 1-1 .16 0 .31.04.45.1L8 13.63l6.55-3.27c.14-.07.29-.11.45-.11z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/new-link.js
/* harmony default export */ var new_link = (["M15 3h-1V2c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V5h1c.55 0 1-.45 1-1s-.45-1-1-1zm-3.5 6a2.5 2.5 0 00-2.45 2h-4.1a2.5 2.5 0 100 1h4.1a2.5 2.5 0 102.45-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/new-object.js
/* harmony default export */ var new_object = (["M8 4c0 .6.4 1 1 1h2v2c0 .6.4 1 1 1s1-.4 1-1V5h2c.6 0 1-.4 1-1s-.4-1-1-1h-2V1c0-.6-.4-1-1-1s-1 .4-1 1v2H9c-.6 0-1 .5-1 1zm6.5 2.5V7c0 1.4-1.1 2.5-2.5 2.5S9.5 8.4 9.5 7v-.5H9C7.6 6.5 6.5 5.4 6.5 4S7.6 1.5 9 1.5h.5V1c0-.3.1-.6.1-.8C9.1.1 8.6 0 8 0 3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8c0-.6-.1-1.3-.2-1.9-.4.3-.8.4-1.3.4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/new-person.js
/* harmony default export */ var new_person = (["M9.12 12.69c-1.17-.53-1.01-.85-1.05-1.29-.01-.06-.01-.12-.01-.19.4-.37.73-.87.94-1.44 0 0 .01-.03.01-.04.05-.14.09-.27.12-.4.27-.06.43-.36.49-.63.06-.11.19-.39.16-.7-.04-.41-.2-.6-.38-.68v-.07c0-.51-.05-1.25-.14-1.74-.02-.13-.05-.27-.09-.4-.17-.6-.53-1.14-1.01-1.52C7.66 3.2 6.96 3 6.33 3c-.62 0-1.33.2-1.82.59-.49.38-.85.92-1.02 1.52-.04.13-.07.26-.09.4-.09.49-.13 1.23-.13 1.74v.06c-.19.08-.35.27-.39.68-.03.31.1.59.16.7.06.28.22.59.5.64.03.14.07.27.11.4 0 .01.01.02.01.02v.01c.22.59.55 1.1.96 1.46 0 .06-.01.12-.01.17-.04.44.08.76-1.09 1.29-1.17.53-2.93 1.1-3.29 1.95-.35.87-.2 1.37-.2 1.37h12.6s.15-.5-.22-1.36c-.36-.85-2.12-1.42-3.29-1.95zM14.89 2h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/new-prescription.js
/* harmony default export */ var new_prescription = (["M9.82 11.66l2.48-2.87c.12-.2.13-.37.04-.53-.11-.19-.3-.26-.52-.26h-1.29c-.27 0-.49.13-.63.34L8.44 9.9 6.95 8a.482.482 0 00-.08-.1L5.82 6.55c.57-.24 1.04-.57 1.42-1.01.49-.57.74-1.27.74-2.08 0-.51-.1-.99-.32-1.42-.21-.43-.51-.8-.89-1.11A4.1 4.1 0 005.42.24C4.91.08 4.34 0 3.72 0H.61C.26 0 0 .23 0 .56v9.89c0 .33.26.55.61.55h.8c.36 0 .61-.23.61-.56V6.99H3.3l3.73 4.74-2.71 3.48c-.12.2-.13.37-.04.53.11.19.3.26.52.26h1.27c.27 0 .51-.12.64-.34l1.69-2.15 1.66 2.14c.12.21.34.35.62.35h1.43c.2 0 .39-.08.5-.25.12-.18.09-.38-.02-.55l-2.77-3.54zM4.18 5H1.99V2.02h2.19c.62 0 1.08.13 1.38.37.29.22.44.62.44 1.08 0 .45-.15.94-.44 1.17-.31.23-.76.36-1.38.36zM15 2h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1zM9.99 3.01c0 .02.01.04.01.06V2.95c0 .02-.01.04-.01.06z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/new-text-box.js
/* harmony default export */ var new_text_box = (["M5 6.5c0 .28.22.5.5.5H7v3.5c0 .28.22.5.5.5s.5-.22.5-.5V7h1.5c.28 0 .5-.22.5-.5S9.78 6 9.5 6h-4c-.28 0-.5.22-.5.5zM15 2h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1zm-2 5c-.55 0-1 .45-1 1v5H3V4h5c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/ninja.js
/* harmony default export */ var ninja = (["M16 5s-2.52 2.11-4.96 1.99C11.03 4.89 10.39.23 5 0c0 0 2.11 2.54 1.96 4.99C4.86 5.01.23 5.65 0 11c0 0 2.56-2.12 5.02-1.95.02 2.11.67 6.72 5.98 6.95 0 0-2.09-2.54-1.94-4.99 2.11-.02 6.71-.68 6.94-6.01zM8 9.5c-.83 0-1.5-.67-1.5-1.5S7.17 6.5 8 6.5s1.5.67 1.5 1.5S8.83 9.5 8 9.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/not-equal-to.js
/* harmony default export */ var not_equal_to = (["M7.58 5l.44-2.196a1 1 0 011.96.392L9.62 5H13a1 1 0 010 2H9.22l-.4 2H13a1 1 0 010 2H8.42l-.44 2.196a1 1 0 01-1.96-.392L6.38 11H3a1 1 0 010-2h3.78l.4-2H3a1 1 0 110-2h4.58z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/notifications.js
/* harmony default export */ var notifications = (["M8 16c1.1 0 2-.9 2-2H6c0 1.1.9 2 2 2zm6-5c-.55 0-1-.45-1-1V6c0-2.43-1.73-4.45-4.02-4.9 0-.04.02-.06.02-.1 0-.55-.45-1-1-1S7 .45 7 1c0 .04.02.06.02.1A4.992 4.992 0 003 6v4c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/notifications-snooze.js
/* harmony default export */ var notifications_snooze = (["M9 14c0 1.1-.9 2-2 2s-2-.9-2-2zM7 0c.404 0 .755.243.912.59L7.9.6c-.7.6-.9 1.36-.9 1.9 0 .8.267 1.433.8 1.9-.533.6-.795 1.222-.784 1.867l.004.358A2.8 2.8 0 009.82 9.4L12 9.399V10c0 .51.388.935.884.993L13 11c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1 1-.45 1-1V6c0-2.43 1.73-4.45 4.02-4.9L6 1c0-.55.45-1 1-1z", "M13 6.702a.632.632 0 00-.632-.632h-1.743l2.208-2.734A.75.75 0 0013 2.864v-.3A.565.565 0 0012.435 2H9.561a.561.561 0 100 1.123h1.814L9.221 5.795A1 1 0 009 6.423v.279c0 .349.283.631.632.631h2.736A.632.632 0 0013 6.702z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/notifications-updated.js
/* harmony default export */ var notifications_updated = (["M8 16c1.1 0 2-.9 2-2H6c0 1.1.9 2 2 2zm3.399-13.667l-.413.412A2.99 2.99 0 009 1.99a3 3 0 00-3 2.99c0 .8.32 1.558.876 2.114l2.002 1.992A2.99 2.99 0 0013 9.184V10c0 .55.45 1 1 1s1 .45 1 1-.45 1-1 1H2c-.55 0-1-.45-1-1s.45-1 1-1 1-.45 1-1V6c0-2.43 1.73-4.45 4.02-4.9 0-.04-.02-.06-.02-.1 0-.55.45-1 1-1s1 .45 1 1c0 .04-.02.06-.02.1a4.97 4.97 0 012.419 1.233zM10.29 7.67l-2-1.99a.99.99 0 01-.29-.7 1 1 0 011-.99c.27 0 .52.11.7.29l1.29 1.29 3.28-3.28c.18-.18.42-.29.7-.29.55 0 1 .44 1 .99 0 .28-.11.52-.3.7l-3.98 3.98a.99.99 0 01-1.4 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/numbered-list.js
/* harmony default export */ var numbered_list = (["M2.76 7h1.26V0h-.94c-.04.21-.12.39-.25.54-.13.15-.29.27-.48.36-.18.09-.39.16-.62.2-.23.04-.46.06-.71.06v.9h1.74V7zm-.59 7.17c.18-.12.37-.25.58-.37a10.763 10.763 0 001.24-.83c.2-.16.37-.33.52-.51.15-.19.28-.39.37-.61.09-.22.14-.47.14-.74 0-.22-.04-.45-.12-.7-.08-.26-.21-.49-.4-.69-.18-.21-.43-.39-.72-.52-.3-.14-.68-.21-1.12-.21-.41 0-.77.07-1.08.2-.32.14-.58.32-.8.56-.22.23-.38.51-.49.84-.11.32-.16.67-.16 1.05h1.19c.01-.24.03-.47.08-.67.05-.21.11-.39.21-.54.09-.15.22-.27.38-.36.16-.09.35-.13.59-.13.26 0 .47.04.63.12.16.08.29.18.38.3.09.12.15.25.18.39s.05.27.05.4c-.01.27-.08.5-.22.71-.14.21-.32.4-.53.57-.22.18-.45.34-.71.49-.26.15-.51.31-.74.47-.5.31-.89.68-1.17 1.11-.3.41-.44.91-.45 1.48h5v-1H1.43c.05-.15.14-.29.27-.43.14-.13.29-.26.47-.38zM15.01 1.99h-7c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-1c0-.55-.44-1-1-1zm0 9h-7c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-1c0-.55-.44-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/numerical.js
/* harmony default export */ var numerical = (["M2.79 4.61c-.13.17-.29.3-.48.41-.18.11-.39.18-.62.23-.23.04-.46.07-.71.07v1.03h1.74V12h1.26V4h-.94c-.04.23-.12.44-.25.61zm4.37 5.31c.18-.14.37-.28.58-.42l.63-.45c.21-.16.41-.33.61-.51s.37-.38.52-.59c.15-.21.28-.45.37-.7.09-.25.13-.54.13-.85 0-.25-.04-.52-.12-.8-.07-.29-.2-.55-.39-.79a2.18 2.18 0 00-.73-.6c-.29-.15-.66-.23-1.11-.23-.41 0-.77.08-1.08.23-.31.16-.58.37-.79.64-.22.27-.38.59-.49.96-.11.37-.16.77-.16 1.2h1.19c.01-.27.03-.53.08-.77.04-.24.11-.45.21-.62.09-.18.22-.32.38-.42.16-.1.35-.15.59-.15.26 0 .47.05.63.14.15.09.28.21.37.35.09.14.15.29.18.45.03.16.05.31.05.45-.01.31-.08.58-.22.82-.14.23-.32.45-.53.65-.22.21-.46.39-.71.57-.26.18-.51.36-.75.54-.5.36-.89.78-1.17 1.27-.28.49-.43 1.06-.44 1.71h5v-1.15H6.43c.05-.17.14-.33.27-.49.13-.15.29-.29.46-.44zm8.5-1.56c-.23-.35-.54-.57-.95-.65v-.02c.34-.13.6-.34.76-.63.16-.29.24-.63.24-1.02 0-.34-.06-.64-.19-.9s-.3-.47-.51-.64c-.21-.17-.45-.3-.72-.38-.27-.09-.54-.13-.82-.13-.36 0-.68.07-.96.2-.28.13-.53.32-.72.55-.2.23-.36.51-.47.83-.11.32-.18.66-.19 1.04h1.15c-.01-.2.01-.39.06-.58.05-.19.12-.36.22-.51.1-.15.22-.27.37-.36.15-.09.32-.13.53-.13.32 0 .59.1.79.3.21.2.31.46.31.79 0 .23-.05.43-.14.59-.09.16-.21.29-.35.38-.15.09-.32.16-.51.19-.19.04-.38.05-.57.04v.93c.23-.01.45 0 .67.02.22.02.42.08.59.17.18.09.32.23.43.4.11.18.16.41.16.71 0 .44-.13.78-.39 1.02s-.58.36-.97.36c-.45 0-.79-.16-1.02-.47-.23-.31-.33-.7-.32-1.17H11c.01.4.06.77.17 1.1.11.33.26.61.47.85.21.23.46.42.77.54.31.13.67.19 1.08.19.34 0 .66-.05.96-.16.3-.11.57-.27.8-.47.23-.2.41-.45.55-.74.13-.27.2-.6.2-.97 0-.5-.11-.92-.34-1.27z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/office.js
/* harmony default export */ var office = (["M15 5h-3V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h3v-4h4v4h7c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zM5 10H2V7h3v3zm0-5H2V2h3v3zm5 5H7V7h3v3zm0-5H7V2h3v3zm4 9h-2v-2h2v2zm0-4h-2V7h2v3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/offline.js
/* harmony default export */ var offline = (["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zM6 14l1-5H4l6-7-1 5h3l-6 7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/oil-field.js
/* harmony default export */ var oil_field = (["M15 14h-1.35l-3.34-7.51 2.46-.95 1.45 3.21c.09.2.36.3.6.23.1-.03.18-.08.24-.15.05-.08 1.23-1.56.87-4.2-.11-.79-.52-4.62-3.26-4.62-.93 0-1.68.62-1.67 1.37 0 .14.03.28.09.42l.87 1.92L.64 8.07v.01A.98.98 0 000 9c0 .55.45 1 1 1 .13 0 .25-.03.36-.07v.01l1.04-.4L3.67 14H2c-.55 0-1 .45-1 1s.45 1 1 1h13c.55 0 1-.45 1-1s-.45-1-1-1zM4.27 8.81L7.14 7.7 5.2 12.08l-.93-3.27zM6.54 14L9 8.46 11.46 14H6.54z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/one-column.js
/* harmony default export */ var one_column = (["M11.99-.01h-3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-14c0-.55-.45-1-1-1zm-6 5c-.28 0-.53.11-.71.29l-2 2a1.014 1.014 0 000 1.42l2 2a1.003 1.003 0 001.71-.71v-4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/one-to-many.js
/* harmony default export */ var one_to_many = (["M14 3a1 1 0 11-2 0 1 1 0 012 0zm-3.726 1.254a3 3 0 10-.17-2.039 5.467 5.467 0 00-.51.158c-1.076.394-2.237 1.242-2.575 2.93-.161.809-.664 1.211-1.293 1.443a3 3 0 100 2.508c.629.232 1.132.634 1.293 1.442.338 1.69 1.499 2.537 2.575 2.93.17.063.342.115.51.159a3.001 3.001 0 10.17-2.04c-.629-.231-1.132-.633-1.293-1.441C8.765 9.228 8.216 8.494 7.568 8c.648-.493 1.197-1.228 1.413-2.304.161-.808.664-1.21 1.293-1.442zM13 14a1 1 0 110-2 1 1 0 010 2zM4 8a1 1 0 10-2 0 1 1 0 002 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/one-to-one.js
/* harmony default export */ var one_to_one = (["M2 8a1 1 0 112 0 1 1 0 01-2 0zm3.83-1a3.001 3.001 0 100 2h4.34a3.001 3.001 0 100-2H5.83zM13 7a1 1 0 100 2 1 1 0 000-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/open-application.js
/* harmony default export */ var open_application = (["M5 0h10c.55 0 1 .45 1 1v10c0 .55-.45 1-1 1H8v-2h6V3H6v5H4V1c0-.55.45-1 1-1zm2.5 5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-5c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h2c.28 0 .5-.22.5-.5S9.78 6 9.5 6h-2c-.28 0-.5.22-.5.5s.22.5.5.5zM11 8.5c0 .28-.165.5-.375.5h-2.25C8.165 9 8 8.78 8 8.5s.165-.5.375-.5h2.25c.21 0 .375.22.375.5zM5 14c0 .55.45 1 1 1s1-.45 1-1v-4c0-.55-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1h1.59L.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L5 12.41V14z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/outdated.js
/* harmony default export */ var outdated = (["M8 0c4.42 0 8 3.58 8 8 0 4.06-3.02 7.4-6.94 7.92-.02 0-.04.01-.06.01-.33.04-.66.07-1 .07-4.42 0-8-3.58-8-8 0-.55.45-1 1-1s1 .45 1 1c0 3.31 2.69 6 6 6 .71 0 1.37-.15 2-.38v.01c2.33-.82 4-3.02 4-5.63 0-3.31-2.69-6-6-6-1.78 0-3.36.78-4.46 2H5c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1s1 .45 1 1v1.74A7.95 7.95 0 018 0zm1 12H7v-2h2v2zm0-3H7V4h2v5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/page-layout.js
/* harmony default export */ var page_layout = (["M15 .95H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-12c0-.55-.45-1-1-1zm-9 12H2v-6h4v6zm8 0H7v-6h7v6zm0-7H2v-3h12v3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/panel-stats.js
/* harmony default export */ var panel_stats = (["M10 4h3v1h-3zM10 6h3v1h-3zM10 8h3v1h-3zM10 10h3v1h-3z", "M15 1H1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zM8 12H2V3h6v9zm6 0H9V3h5v9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/panel-table.js
/* harmony default export */ var panel_table = (["M15 1H1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zM8 9H6V7h2v2zm0-3H6V4h2v2zm-6 6V3h3v9H2zm4 0v-2h2v2H6zm8 0H9v-2h5v2zm0-3H9V7h5v2zm0-3H9V4h5v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/paperclip.js
/* harmony default export */ var paperclip = (["M14.68 2.31A4.54 4.54 0 0011.46.99c-1.15 0-2.31.44-3.19 1.32L.95 9.63c-.63.63-.95 1.46-.95 2.28a3.21 3.21 0 003.23 3.22c.83 0 1.66-.31 2.3-.95l7.31-7.32c.76-.77.76-1.98.01-2.73s-1.99-.76-2.75 0l-6.07 6.08c-.24.25-.24.65.01.9s.65.25.91.01l6.07-6.08c.25-.25.67-.25.91-.01.25.25.25.67 0 .92l-7.31 7.32c-.75.75-2.04.74-2.76.01-.75-.75-.73-2.02.01-2.76L9.2 3.21c1.24-1.24 3.35-1.26 4.58-.03 1.24 1.24 1.24 3.36 0 4.6l-7.12 7.13c-.24.25-.24.64.01.88.24.24.63.24.88.01v.01l7.13-7.13A4.41 4.41 0 0016 5.51c0-1.16-.44-2.32-1.32-3.2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/paragraph.js
/* harmony default export */ var paragraph = (["M13 1H6C3.8 1 2 2.8 2 5s1.8 4 4 4v5c0 .6.4 1 1 1s1-.5 1-1V3h2v11c0 .6.4 1 1 1s1-.5 1-1V3h1c.5 0 1-.4 1-1s-.4-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/path.js
/* harmony default export */ var path = (["M14.5 0h-13C.67 0 0 .67 0 1.5S.67 3 1.5 3H7v3H3.5C2.67 6 2 6.67 2 7.5S2.67 9 3.5 9H7v3H5.5c-.83 0-1.5.67-1.5 1.5S4.67 15 5.5 15h5c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5H9V9h3.5c.83 0 1.5-.67 1.5-1.5S13.33 6 12.5 6H9V3h5.5c.83 0 1.5-.67 1.5-1.5S15.33 0 14.5 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/path-search.js
/* harmony default export */ var path_search = (["M15 14.62l-4-2.4V9.77c-.32.09-.66.15-1 .18v2.27l-4 2.4V8.71c-.38-.31-.72-.66-1-1.06v6.97l-4-2.4V8c.55 0 1-.45 1-1s-.45-1-1-1V1.38l3.15 1.89c.08-.34.18-.66.32-.97L.76.07v.01A.496.496 0 00.5 0C.22 0 0 .22 0 .5v12c0 .18.1.33.25.42v.01l5 3v-.01c.07.05.16.08.25.08s.18-.03.25-.08v.01l4.74-2.85 4.74 2.85v-.01c.09.05.18.08.27.08.28 0 .5-.22.5-.5v-3.78c-.3.17-.63.28-1 .28v2.62zM2 5c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1-1 .45-1 1zm6-1c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm7.75-.92l-1.19-.72c.18.43.29.9.36 1.38l.08.04v3.39l1 1V3.5c0-.18-.1-.33-.25-.42zM10 2c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm3.3 4.89c.44-.7.7-1.51.7-2.39C14 2.01 11.99 0 9.5 0S5 2.01 5 4.5 7.01 9 9.5 9c.88 0 1.69-.26 2.39-.7l2.41 2.41c.17.18.42.29.7.29a1.003 1.003 0 00.71-1.71l-2.41-2.4zM9.5 8C7.57 8 6 6.43 6 4.5S7.57 1 9.5 1 13 2.57 13 4.5 11.43 8 9.5 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/pause.js
/* harmony default export */ var pause = (["M6 3H4c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm6 0h-2c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/people.js
/* harmony default export */ var people = (["M13.69 13.98c-.05-.24-.14-.5-.25-.76-.36-.86-1.12-1.33-2.69-2-.14-.06-.59-.25-.6-.25-.21-.09-.36-.15-.5-.22.02-.1.02-.2.03-.31 0-.04.01-.08.01-.13-.07-.06-.13-.12-.19-.19.22-.32.4-.67.54-1.05.02-.06.02-.06.03-.1.29-.23.48-.57.59-.96.16-.33.25-.73.21-1.16-.03-.4-.16-.76-.37-1.03-.02-.53-.07-1.13-.15-1.54-.01-.06-.02-.12-.03-.19.23-.06.48-.09.72-.09.49 0 1.05.16 1.44.46.38.29.67.7.8 1.17.03.1.05.21.07.31.07.37.11.94.11 1.33v.05c.14.06.27.21.29.51.02.25-.07.45-.13.54-.05.21-.16.44-.38.48-.02.1-.05.2-.09.3 0 .01-.01.03-.01.03-.17.44-.43.83-.75 1.11v.14c.03.35-.09.59.83 1 .93.41 2.32.84 2.6 1.5.29.66.17 1.04.17 1.04h-2.3zm-1.17-.38c.37.86.22 1.36.22 1.36H.06s-.14-.5.22-1.36 2.13-1.43 3.31-1.96c1.17-.54 1.05-.86 1.09-1.3 0-.05.01-.11.01-.17-.41-.35-.75-.86-.97-1.45v-.01s-.01-.01-.01-.02c-.04-.12-.09-.26-.12-.39-.28-.05-.44-.36-.5-.64-.06-.12-.19-.39-.16-.71.04-.41.21-.6.39-.68v-.06c0-.51.05-1.26.14-1.74.02-.13.05-.27.09-.4.17-.6.54-1.13 1.02-1.51.5-.39 1.21-.6 1.84-.6s1.34.21 1.84.6c.48.38.85.91 1.02 1.52.04.13.07.27.09.4.09.48.14 1.22.14 1.73v.07c.18.08.34.27.37.67.03.32-.09.59-.16.71-.06.28-.21.58-.48.63-.03.13-.07.26-.12.39 0 .01-.01.04-.01.04-.22.58-.55 1.08-.95 1.45v.18c.04.45-.12.77 1.06 1.3 1.18.53 2.95 1.09 3.31 1.95z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/percentage.js
/* harmony default export */ var percentage = (["M6 6V4c0-1.1-.9-2-2-2H3c-1.1 0-2 .9-2 2v2c0 1.1.9 2 2 2h1c1.1 0 2-.9 2-2zM3.5 6c-.28 0-.5-.22-.5-.5v-1c0-.28.22-.5.5-.5s.5.22.5.5v1c0 .28-.22.5-.5.5zM13 8h-1c-1.1 0-2 .9-2 2v2c0 1.1.9 2 2 2h1c1.1 0 2-.9 2-2v-2c0-1.1-.9-2-2-2zm0 3.5c0 .28-.22.5-.5.5s-.5-.22-.5-.5v-1c0-.28.22-.5.5-.5s.5.22.5.5v1zM12 3a1.003 1.003 0 00-1.87-.5l-5.99 9.98c-.09.15-.14.33-.14.52a1.003 1.003 0 001.87.5l5.99-9.98c.09-.15.14-.33.14-.52z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/person.js
/* harmony default export */ var person = (["M15.68 14.32c-.46-1.05-2.68-1.75-4.16-2.4-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.08-.14.23-.48.2-.87-.05-.5-.25-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15A3.671 3.671 0 0010.32.72C9.68.25 8.79-.01 8-.01c-.79 0-1.68.25-2.31.73-.61.47-1.06 1.13-1.28 1.86-.05.17-.09.33-.11.5-.12.6-.17 1.51-.17 2.15v.08c-.24.09-.45.32-.5.83-.03.38.13.72.2.86.08.35.28.72.63.78.04.17.09.33.15.49 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.37 1.59-1.48.65-3.7 1.35-4.16 2.4-.46 1.05-.27 1.67-.27 1.67h15.92c-.01.01.18-.61-.28-1.66z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/phone.js
/* harmony default export */ var phone = (["M15.9 12.41c-.06-.06-3.37-2-3.48-2.05a.794.794 0 00-.32-.08c-.15 0-.34.11-.57.32-.23.22-.94 1.19-1.15 1.4-.21.22-.38.32-.52.32-.07 0-.15-.02-.25-.06-.1-.04-1.16-.58-3.36-2.52-2.2-1.93-2.49-3.2-2.5-3.55 0-.14.11-.31.32-.52.22-.21.45-.41.7-.6.25-.19.49-.4.7-.62.22-.23.32-.42.32-.57 0-.11-.03-.21-.08-.32C5.66 3.46 3.66.15 3.59.08 3.44-.07 2.85 0 2.55.16.16 1.46-.03 3.2 0 3.89c.04.71.49 4.46 4.16 7.95C8.72 16.17 11.89 16 12.1 16c.69 0 2.82-.38 3.72-2.55.13-.32.25-.87.08-1.04z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/pie-chart.js
/* harmony default export */ var pie_chart = (["M7 1.08c-3.37.5-5.97 3.4-5.97 6.92 0 3.87 3.13 7 6.98 7 3.52 0 6.42-2.61 6.91-6H7V1.08z", "M8 0v8h8c0-4.42-3.58-8-8-8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/pin.js
/* harmony default export */ var pin = (["M9.41.92c-.51.51-.41 1.5.15 2.56L4.34 7.54C2.8 6.48 1.45 6.05.92 6.58l3.54 3.54-3.54 4.95 4.95-3.54 3.54 3.54c.53-.53.1-1.88-.96-3.42l4.06-5.22c1.06.56 2.04.66 2.55.15L9.41.92z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/pivot.js
/* harmony default export */ var pivot = (["M4.57 7.02L.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4.27-4.27c-.58-.35-1.07-.84-1.41-1.42zM15 8c-.55 0-1 .45-1 1v.59l-2.57-2.57c-.34.58-.83 1.07-1.41 1.41L12.59 11H12c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-4-3c0-1.66-1.34-3-3-3S5 3.34 5 5s1.34 3 3 3 3-1.34 3-3zM8 6c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/pivot-table.js
/* harmony default export */ var pivot_table = (["M2 4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm0-4H1C.45 0 0 .45 0 1v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm11.71 4.29C13.53 4.11 13.28 4 13 4s-.53.11-.71.29l-2 2a1.003 1.003 0 001.42 1.42l.29-.3V9c0 1.66-1.34 3-3 3H7.41l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H9c2.76 0 5-2.24 5-5V7.41l.29.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-2-2zM15 0H5c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/play.js
/* harmony default export */ var play = (["M12 8c0-.35-.19-.64-.46-.82l.01-.02-6-4-.01.02A.969.969 0 005 3c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02 6-4-.01-.02c.27-.18.46-.47.46-.82z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/playbook.js
/* harmony default export */ var playbook = (["M4.293.293a1 1 0 011.414 1.414L4.414 3l1.293 1.293a1 1 0 01-1.414 1.414L3 4.414 1.707 5.707A1 1 0 01.293 4.293L1.586 3 .293 1.707A1 1 0 011.707.293L3 1.586 4.293.293z", "M14.29 4.71L13 3.41V6a3 3 0 01-3 3H4a1 1 0 00-1 1v5a1 1 0 11-2 0v-5a3 3 0 013-3h6a1 1 0 001-1V3.41L9.71 4.7c-.18.19-.43.3-.71.3a1.003 1.003 0 01-.71-1.71l3-3c.18-.18.43-.29.71-.29.28 0 .53.11.71.29l3 3a1.003 1.003 0 01-1.42 1.42z", "M16 13a3 3 0 11-6 0 3 3 0 016 0zm-2 0a1 1 0 11-2 0 1 1 0 012 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/plus.js
/* harmony default export */ var plus = (["M13 7H9V3c0-.55-.45-1-1-1s-1 .45-1 1v4H3c-.55 0-1 .45-1 1s.45 1 1 1h4v4c0 .55.45 1 1 1s1-.45 1-1V9h4c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/polygon-filter.js
/* harmony default export */ var polygon_filter = (["M14 5c-.24 0-.47.05-.68.13L9.97 2.34c.01-.11.03-.22.03-.34 0-1.1-.9-2-2-2S6 .9 6 2c0 .04.01.08.01.12L2.88 4.21C2.61 4.08 2.32 4 2 4 .9 4 0 4.9 0 6c0 .74.4 1.38 1 1.72v4.55c-.6.35-1 .99-1 1.73 0 1.1.9 2 2 2 .74 0 1.38-.4 1.72-1h4.55c.35.6.98 1 1.72 1 1.1 0 2-.9 2-2 0-.37-.11-.7-.28-1L14 9c1.11-.01 2-.9 2-2s-.9-2-2-2zm-4.01 7c-.73 0-1.37.41-1.71 1H3.73c-.18-.3-.43-.55-.73-.72V7.72c.6-.34 1-.98 1-1.72 0-.04-.01-.08-.01-.12l3.13-2.09c.27.13.56.21.88.21.24 0 .47-.05.68-.13l3.35 2.79c-.01.11-.03.22-.03.34 0 .37.11.7.28 1l-2.29 4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/power.js
/* harmony default export */ var power = (["M8 8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1S7 .45 7 1v6c0 .55.45 1 1 1zm3-5.32v2.34c1.21.91 2 2.35 2 3.98 0 2.76-2.24 5-5 5s-5-2.24-5-5c0-1.63.79-3.06 2-3.98V2.68C2.64 3.81 1 6.21 1 9c0 3.87 3.13 7 7 7s7-3.13 7-7c0-2.79-1.64-5.19-4-6.32z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/predictive-analysis.js
/* harmony default export */ var predictive_analysis = (["M16 6.41c0-1.01-.49-1.94-1.29-2.49-.43-1.92-2.07-3.28-4-3.28-.46 0-.92.08-1.35.24C8.83.31 8.11 0 7.34 0c-.9 0-1.74.44-2.28 1.16-.12-.01-.24-.02-.36-.02-1.31 0-2.42.89-2.77 2.17C.78 3.72 0 4.84 0 6.13c0 .38.07.76.21 1.12C.07 7.6 0 7.98 0 8.36c0 1.11.58 2.11 1.51 2.63.54.56 1.27.87 2.03.87.49 0 .95-.12 1.37-.36a2.85 2.85 0 002.18 1.04c.52 0 1.03-.14 1.47-.42.49.39 1.07.65 1.69.73 1.04 1.15 1.84 2.63 1.84 2.64 0 0 .28.49.26.49.77 0 1.41-.16 1.32-1.04 0 .02-.73-2.31-.73-2.31.41-.21.75-.55.97-.98.9-.52 1.47-1.53 1.47-2.61 0-.24-.03-.48-.08-.71.45-.52.7-1.21.7-1.92zm-1.23 1.02l-.15-.16-.61-.67c-.27-.29-.54-.94-.58-1.39l-.1-1.01c-.05-.59-.94-.58-.91.11 0 .02.1 1.01.1 1.01.03.29.12.62.24.93-.06-.01-.12-.02-.18-.02 0 0-2.06-.1-2.05-.11-.58-.02-.71.97-.04 1l2.05.11c.42.02 1.04.3 1.29.58l.49.54.02.05c.08.21.12.44.12.66 0 .74-.41 1.41-1.07 1.75l-.16.08-.07.18c-.15.38-.48.66-.88.74l-.54.11.7 2.2c-.38-.61-.95-1.43-1.62-2.14l-.12-.13-.17-.01c-.41-.03-.8-.17-1.14-.38l1.36-1.18c.35-.31.83-.44.99-.39 0 0 .63.17.62.18.63.16.83-.74.23-.97l-.62-.18c-.55-.16-1.33.18-1.79.58l-1.53 1.33-.31.26c-.35.29-.75.44-1.2.44-.64 0-1.23-.33-1.58-.86V9.15c0-.4.17-.79.27-.85 0 0 .52-.34.51-.35.71-.53.18-1.23-.49-.89 0-.01-.52.35-.52.35-.26.15-.45.44-.58.77-.11-.11-.22-.2-.34-.28 0 0-1.53-1.01-1.53-1.02-.65-.45-1.2.51-.49.89 0-.01 1.51 1.02 1.51 1.02.37.24.62.78.62 1.09v.67c-.34.19-.63.29-.99.29-.54 0-1.05-.23-1.41-.63l-.05-.06-.07-.04c-.65-.34-1.05-1-1.05-1.73 0-.3.07-.6.2-.87l.12-.25L1.15 7c-.13-.27-.2-.56-.2-.87 0-.9.61-1.68 1.48-1.89l.31-.08.05-.34a1.926 1.926 0 012.38-1.58l.32.08.18-.31c.35-.6.99-.97 1.67-.97.44 0 .86.15 1.2.42l-.36.36v-.01l-.25.26c-.33.27-.74.42-.89.4 0 0-.67-.1-.67-.11-.67-.13-.87.86-.14 1.02.01 0 .67.11.67.11.02 0 .05 0 .07.01-.11.37-.15.77-.1 1.12 0 0 .17.99.15.99.11.52 1.06.36.93-.18 0-.01-.15-.99-.15-.99-.05-.37.12-.94.36-1.19l.39-.4c.05-.05.1-.09.15-.14l.74-.76c.4-.18.83-.27 1.27-.27 1.55 0 2.86 1.12 3.11 2.67l.04.25.21.12c.61.35.98 1 .98 1.7 0 .36-.1.7-.28 1.01z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/prescription.js
/* harmony default export */ var prescription = (["M10.91 8.34c.14-.21.36-.34.63-.34h1.29c.22 0 .41.07.52.26.09.16.08.33-.04.53l-2.49 2.87 2.77 3.54c.12.17.14.37.02.55-.11.17-.3.25-.5.25h-1.44a.69.69 0 01-.61-.35L9.4 13.51l-1.69 2.15c-.13.21-.36.34-.63.34H5.8c-.22 0-.41-.07-.52-.26-.09-.16-.08-.33.04-.53l2.71-3.48L4.3 6.99H3.03v3.47c0 .33-.26.56-.62.56h-.8c-.35-.01-.61-.23-.61-.56V.56c0-.33.26-.56.62-.56h3.11c.62 0 1.19.08 1.7.24.51.16.96.39 1.34.69a3.194 3.194 0 011.21 2.53c0 .81-.25 1.5-.74 2.08-.37.44-.84.77-1.42 1.01L7.88 7.9c.04.04.07.08.08.1l1.49 1.9 1.46-1.56zM5.18 5c.62 0 1.08-.13 1.39-.37.29-.23.44-.71.44-1.16s-.15-.87-.44-1.1C6.26 2.12 5.8 2 5.18 2H2.99v3h2.19z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/presentation.js
/* harmony default export */ var presentation = (["M15 1H9c0-.55-.45-1-1-1S7 .45 7 1H1c-.55 0-1 .45-1 1s.45 1 1 1v8c0 .55.45 1 1 1h3.59L3.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L7 13.41V15c0 .55.45 1 1 1s1-.45 1-1v-1.59l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L10.41 12H14c.55 0 1-.45 1-1V3c.55 0 1-.45 1-1s-.45-1-1-1zm-2 9H3V3h10v7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/print.js
/* harmony default export */ var print = (["M12 2.02c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v1h8v-1zm3 2H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h1v-3h12v3h1c.55 0 1-.45 1-1v-6c0-.56-.45-1-1-1zm-1 3h-2v-1h2v1zm-3 6H5v-3H3v4c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-4h-2v3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/projects.js
/* harmony default export */ var projects = (["M14 3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v1h12V3zm-2-3H4c-.55 0-1 .45-1 1h10c0-.55-.45-1-1-1zm3 5H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-3 6c0 .55-.45 1-1 1H5c-.55 0-1-.45-1-1V9h1v2h6V9h1v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/properties.js
/* harmony default export */ var properties = (["M2 6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm4-3h9c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1zm-4 9c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm13-5H6c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm0 6H6c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/property.js
/* harmony default export */ var property = (["M3 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-.5-6.5a2.5 2.5 0 000 5 2.5 2.5 0 000-5zM7 3h8c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1zm8 10H7c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zM3 0C1.9 0 1 .9 1 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 6H7c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h8c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/publish-function.js
/* harmony default export */ var publish_function = (["M12.16 3.76c.15-.11.3-.16.47-.16.06 0 .17.02.34.06.16.04.31.06.43.06a.58.58 0 00.6-.6c0-.19-.06-.33-.17-.44-.11-.11-.28-.16-.49-.16-.19 0-.37.04-.54.13-.17.09-.39.27-.65.55-.2.21-.48.58-.87 1.11a5.22 5.22 0 00-.78-1.79l-2.05.32-.04.21c.15-.03.28-.04.39-.04.2 0 .37.08.5.25.21.26.5 1.03.88 2.33-.29.36-.49.6-.6.71-.18.19-.33.31-.45.36-.09.04-.19.07-.3.07-.09 0-.23-.04-.42-.13a.904.904 0 00-.36-.09c-.2 0-.36.06-.49.18a.59.59 0 00-.19.46c0 .18.06.32.18.43.12.11.28.16.48.16.2 0 .38-.04.55-.12.17-.08.39-.24.65-.49s.62-.65 1.07-1.19c.18.52.33.89.46 1.13.13.24.28.4.44.51.17.1.37.16.62.16.24 0 .49-.08.74-.25.33-.21.66-.58 1.01-1.09l-.21-.11c-.23.31-.41.5-.52.57a.44.44 0 01-.26.07c-.12 0-.24-.07-.36-.21-.2-.24-.46-.91-.8-2 .29-.49.54-.81.74-.96zM6.37 5.83l.68-2.53h.83l.2-.64h-.84c.24-.91.56-1.59.96-2.01.24-.27.48-.4.71-.4.05 0 .08.01.11.04s.04.06.04.1c0 .04-.03.11-.1.21-.06.1-.1.2-.1.29 0 .13.05.24.15.33.1.09.23.14.39.14.17 0 .31-.06.42-.17.12-.12.18-.27.18-.46 0-.21-.08-.39-.25-.52C9.57.07 9.3 0 8.93 0c-.59 0-1.12.16-1.59.48-.48.32-.93.85-1.36 1.59-.15.26-.29.42-.42.49s-.35.11-.64.1l-.19.65h.81L4.35 7.68c-.2.72-.33 1.16-.4 1.33-.1.24-.26.45-.46.62a.48.48 0 01-.31.1c-.03 0-.06-.01-.08-.03l-.03-.03c0-.02.03-.06.09-.11.06-.06.09-.15.09-.26 0-.13-.05-.23-.14-.32-.1-.09-.23-.13-.41-.13-.21 0-.38.05-.51.16A.52.52 0 002 9.4c0 .16.08.3.23.42.16.12.4.18.74.18.53 0 .99-.13 1.4-.39.41-.26.76-.65 1.07-1.19.3-.53.61-1.39.93-2.59zm2.34 3.46A.997.997 0 008 9c-.28 0-.53.11-.71.29l-2 2a1.003 1.003 0 001.42 1.42l.29-.3V15c0 .55.45 1 1 1s1-.45 1-1v-2.59l.29.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/pulse.js
/* harmony default export */ var pulse = (["M15 8h-1.46l-1.7-2.55-.02.01A.984.984 0 0011 5c-.43 0-.79.27-.93.65h-.01l-1.69 4.51-1.38-8.32h-.02A.989.989 0 006 1c-.41 0-.77.25-.92.61L2.34 8H1c-.55 0-1 .45-1 1s.45 1 1 1h2c.41 0 .77-.25.92-.61l1.65-3.86 1.44 8.63h.02c.08.47.47.84.97.84.43 0 .79-.27.93-.65h.01l2.31-6.17.92 1.38.02-.01c.17.26.46.45.81.45h2c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/rain.js
/* harmony default export */ var rain = (["M3.5 8a2.5 2.5 0 11.608-4.926 4.002 4.002 0 017.381-1.03A3 3 0 1112 8H3.501zM3 10a1 1 0 012 0v4a1 1 0 11-2 0v-4zm7-1a1 1 0 00-1 1v5a1 1 0 102 0v-5a1 1 0 00-1-1zm2 1a1 1 0 112 0v2a1 1 0 11-2 0v-2zM7 9a1 1 0 00-1 1v2a1 1 0 102 0v-2a1 1 0 00-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/random.js
/* harmony default export */ var random = (["M11.48 4h1.11l-.29.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H11c-.32 0-.59.16-.77.38l-.01-.01L8.28 4.8l1.28 1.6L11.48 4zm2.23 6.29a1.003 1.003 0 00-1.42 1.42l.3.29h-1.11l-7.7-9.62h-.01A.996.996 0 003 2H1c-.55 0-1 .45-1 1s.45 1 1 1h1.52l7.7 9.62.01-.01c.18.23.45.39.77.39h1.59l-.29.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2zM2.52 12H1c-.55 0-1 .45-1 1s.45 1 1 1h2c.32 0 .59-.16.77-.38l.01.01 1.94-2.42L4.44 9.6 2.52 12z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/record.js
/* harmony default export */ var record = (["M8 3a5 5 0 100 10A5 5 0 108 3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/rect-height.js
/* harmony default export */ var rect_height = (["M3 15V1h10v14H3zm0 1a1 1 0 01-1-1V1a1 1 0 011-1h10a1 1 0 011 1v14a1 1 0 01-1 1H3zM8.707 3.293a1 1 0 00-1.414 0l-2 2a1 1 0 001.414 1.414L8 5.414l1.293 1.293a1 1 0 001.414-1.414l-2-2zm-2 6a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l2-2a1 1 0 00-1.414-1.414L8 10.586 6.707 9.293z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/rect-width.js
/* harmony default export */ var rect_width = (["M1 3h14v10H1V3zM0 3a1 1 0 011-1h14a1 1 0 011 1v10a1 1 0 01-1 1H1a1 1 0 01-1-1V3zm10.707 2.293a1 1 0 00-1.414 1.414L10.586 8 9.293 9.293a1 1 0 001.414 1.414l2-2a1 1 0 000-1.414l-2-2zm-4 1.414a1 1 0 00-1.414-1.414l-2 2a1 1 0 000 1.414l2 2a1 1 0 001.414-1.414L5.414 8l1.293-1.293z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/rectangle.js
/* harmony default export */ var rectangle = (["M1 3h14c.55 0 1 .45 1 1v8c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1zm1 2v6h12V5H2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/redo.js
/* harmony default export */ var redo = (["M12 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm3.71-6.71l-3-3a1.003 1.003 0 00-1.42 1.42L12.59 4H5C2.24 4 0 6.24 0 9s2.24 5 5 5h4v-2H5c-1.66 0-3-1.34-3-3s1.34-3 3-3h7.59L11.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/refresh.js
/* harmony default export */ var refresh = (["M14.99 6.99c-.55 0-1 .45-1 1 0 3.31-2.69 6-6 6-1.77 0-3.36-.78-4.46-2h1.46c.55 0 1-.45 1-1s-.45-1-1-1h-4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1v-1.74a7.95 7.95 0 006 2.74c4.42 0 8-3.58 8-8 0-.55-.45-1-1-1zm0-7c-.55 0-1 .45-1 1v1.74a7.95 7.95 0 00-6-2.74c-4.42 0-8 3.58-8 8 0 .55.45 1 1 1s1-.45 1-1c0-3.31 2.69-6 6-6 1.77 0 3.36.78 4.46 2h-1.46c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/regex.js
/* harmony default export */ var regex = (["M0 14a2 2 0 114 0 2 2 0 01-4 0zM11 0a1 1 0 00-1 1v2.768L7.603 2.384a1 1 0 10-1 1.732L9 5.5 6.603 6.884a1 1 0 001 1.732L10 7.232V10a1 1 0 102 0V7.232l2.397 1.384a1 1 0 101-1.732L13 5.5l2.397-1.384a1 1 0 10-1-1.732L12 3.768V1a1 1 0 00-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/regression-chart.js
/* harmony default export */ var regression_chart = (["M13 6.5c0 .83.67 1.5 1.5 1.5S16 7.33 16 6.5 15.33 5 14.5 5 13 5.67 13 6.5zM8.5 5c.83 0 1.5-.67 1.5-1.5S9.33 2 8.5 2 7 2.67 7 3.5 7.67 5 8.5 5zM9 9.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5S11.33 8 10.5 8 9 8.67 9 9.5zM4.5 8C5.33 8 6 7.33 6 6.5S5.33 5 4.5 5 3 5.67 3 6.5 3.67 8 4.5 8zM15 12H3.26l12.03-8.59-.58-.81L2 11.67V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/remove.js
/* harmony default export */ var remove = (["M10.99 6.99h-6c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm-3-7c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.68 6-6 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/remove-column.js
/* harmony default export */ var remove_column = (["M14 0H4c-.55 0-1 .45-1 1v3h2V2h3v12H5v-2H3v3c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14h-3V2h3v12zm-8.71-3.29a1.003 1.003 0 001.42-1.42L4.41 8 5.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L3 6.59l-1.29-1.3A1.003 1.003 0 00.29 6.71L1.59 8 .29 9.29a1.003 1.003 0 001.42 1.42L3 9.41l1.29 1.3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/remove-column-left.js
/* harmony default export */ var remove_column_left = (["M4 9h4c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1zm11-9H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-5 14H2V2h8v12zm4 0h-3V2h3v12z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/remove-column-right.js
/* harmony default export */ var remove_column_right = (["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM5 14H2V2h3v12zm9 0H6V2h8v12zM8 9h4c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/remove-row-bottom.js
/* harmony default export */ var remove_row_bottom = (["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2V6h12v8zm0-9H2V2h12v3zm-8 6h4c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/remove-row-top.js
/* harmony default export */ var remove_row_top = (["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2v-3h12v3zm0-4H2V2h12v8zM6 7h4c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/repeat.js
/* harmony default export */ var repeat = (["M10 5c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1.74A7.95 7.95 0 008 0C3.58 0 0 3.58 0 8c0 4.06 3.02 7.4 6.94 7.92.02 0 .04.01.06.01.33.04.66.07 1 .07 4.42 0 8-3.58 8-8 0-.55-.45-1-1-1s-1 .45-1 1c0 3.31-2.69 6-6 6-.71 0-1.37-.15-2-.38v.01C3.67 12.81 2 10.61 2 8c0-3.31 2.69-6 6-6 1.77 0 3.36.78 4.46 2H11c-.55 0-1 .45-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/reset.js
/* harmony default export */ var paths_reset = (["M6 5c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1s1 .45 1 1v1.74A7.95 7.95 0 018 0c4.42 0 8 3.58 8 8 0 4.06-3.02 7.4-6.94 7.92-.02 0-.04.01-.06.01-.33.04-.66.07-1 .07-4.42 0-8-3.58-8-8 0-.55.45-1 1-1s1 .45 1 1c0 3.31 2.69 6 6 6 .71 0 1.37-.15 2-.38v.01c2.33-.82 4-3.02 4-5.63 0-3.31-2.69-6-6-6-1.77 0-3.36.78-4.46 2H5c.55 0 1 .45 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/resolve.js
/* harmony default export */ var resolve = (["M6.6 3.3C6.1 3.1 5.6 3 5 3 2.2 3 0 5.2 0 8s2.2 5 5 5c.6 0 1.1-.1 1.6-.3C5.3 11.6 4.5 9.9 4.5 8s.8-3.6 2.1-4.7zM8 4c-1.2.9-2 2.4-2 4s.8 3.1 2 4c1.2-.9 2-2.3 2-4s-.8-3.1-2-4zm3-1c-.6 0-1.1.1-1.6.3 1.3 1.2 2.1 2.9 2.1 4.7s-.8 3.6-2.1 4.7c.5.2 1 .3 1.6.3 2.8 0 5-2.2 5-5s-2.2-5-5-5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/rig.js
/* harmony default export */ var rig = (["M5.71 3c0 1.1.96 2 2.14 2C9.04 5 10 3.96 10 3c0-1.96-1.47-3-2.14-3H5c0 1.96 2.68 1.4.71 3zm2.5 3l.01.01s0-.01-.01-.01zm6.5 8.29L10 9.59V7c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1v2.58l-4.71 4.7c-.18.19-.29.44-.29.72a1.003 1.003 0 001.71.71L6 12.42V15c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.58l3.29 3.29a1.003 1.003 0 001.42-1.42z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/right-join.js
/* harmony default export */ var right_join = (["M6.6 3.3C5.3 4.4 4.5 6.1 4.5 8s.8 3.6 2.1 4.7c-.5.2-1 .3-1.6.3-2.8 0-5-2.2-5-5s2.2-5 5-5c.6 0 1.1.1 1.6.3zm-1.96 8.68C3.92 10.83 3.5 9.46 3.5 8s.42-2.83 1.14-3.98C2.6 4.2 1 5.91 1 8s1.6 3.8 3.64 3.98zM8 4c-1.2.9-2 2.4-2 4s.8 3.1 2 4c1.2-.9 2-2.3 2-4s-.8-3.1-2-4zm3-1c2.8 0 5 2.2 5 5s-2.2 5-5 5c-.6 0-1.1-.1-1.6-.3 1.3-1.1 2.1-2.9 2.1-4.7s-.8-3.5-2.1-4.7c.5-.2 1-.3 1.6-.3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/ring.js
/* harmony default export */ var ring = (["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 12c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/rocket.js
/* harmony default export */ var rocket = (["M6 12C4.397 7.46 4.415 4.465 8 0c3.585 4.485 3.602 7.48 2 12H6zm3-7a1 1 0 11-2 0 1 1 0 012 0zm-7 8.022l3-1-.054-.158C4.636 10.954 4.076 9.317 4 8L3 9l-1 4.022zm9-1l3 1L13 9l-1-1c-.076 1.317-.635 2.954-.946 3.864l-.054.158zM7 13h2c0 1.5-.5 2.5-1 3-.5-.5-1-1.5-1-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/rocket-slant.js
/* harmony default export */ var rocket_slant = (["M3.992 10c2-5 5-9 11-9 0 6-4 9-9 11l-2-2zm7.714-4.285a1 1 0 11-1.414-1.414 1 1 0 011.414 1.414zm-6.555-.218L2.992 6l-3 2L3.24 9.195c.542-1.301 1.166-2.556 1.911-3.698zM7.992 16l-1.236-3.232c1.3-.539 2.552-1.158 3.694-1.898L9.992 13l-2 3zm-4.931-4.94L5 13c-.992.991-2.186 1.154-3.001 1-.154-.815.07-1.948 1.06-2.94z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/rotate-document.js
/* harmony default export */ var rotate_document = (["M12 2h-1.59l.29-.29c.19-.18.3-.43.3-.71A1.003 1.003 0 009.29.29l-2 2C7.11 2.47 7 2.72 7 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H12c.55 0 1 .45 1 1v3c0 .55.45 1 1 1s1-.45 1-1V5c0-1.66-1.34-3-3-3zM5.71 5.29A.997.997 0 005 5H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V9c0-.28-.11-.53-.29-.71l-3-3zM7 14H2V7h2v2c0 .55.45 1 1 1h2v4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/rotate-page.js
/* harmony default export */ var rotate_page = (["M8 6H2c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zm-1 8H3V8h4v6zm5-12h-1.59l.29-.29c.19-.18.3-.43.3-.71A1.003 1.003 0 009.29.29l-2 2C7.11 2.47 7 2.72 7 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H12c.55 0 1 .45 1 1v3c0 .55.45 1 1 1s1-.45 1-1V5c0-1.66-1.34-3-3-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/route.js
/* harmony default export */ var route = (["M11.669 5.066l.099.189c.113.213.236.434.367.661.226.39.468.78.709 1.151l-.198-.004-.48-.004c-1.745.003-2.369.233-2.369.688 0 .053.226.19 1.038.436l.84.24C13.9 9.064 15 9.83 15 11.63c0 2.123-1.607 3.122-4.027 3.366-.651.065-1.266.075-2.043.05l-.958-.035H5.196l.268-.406c.336-.517.672-1.052.998-1.593h1.636l.572.023c.857.036 1.475.034 2.103-.03 1.526-.153 2.227-.59 2.227-1.375 0-.531-.402-.84-1.66-1.22l-.691-.198c-1.04-.293-1.764-.562-2.222-.946C8.8 8.366 9 7.612 9 6.997a5.03 5.03 0 00-.184-1.334c.645-.395 1.598-.562 2.853-.597zM4 3a4.007 4.007 0 014 3.997C8 9.21 4 15 4 15l-.416-.62C2.56 12.827 0 8.767 0 6.997A4.002 4.002 0 014 3zm0 2a2 2 0 10.001 4.001A2 2 0 004 5zm10-4c1.103 0 1.996.896 2 1.999C16 4.105 14 7 14 7l-.293-.44C13.15 5.707 12 3.838 12 2.999 12 1.896 12.897 1 14 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/satellite.js
/* harmony default export */ var satellite = (["M3 9c0-.6.4-1 1-1s1 .4 1 1c0 1.1.9 2 2 2 .6 0 1 .4 1 1s-.4 1-1 1c-2.2 0-4-1.8-4-4zM0 9c0-.6.4-1 1-1s1 .4 1 1c0 2.8 2.2 5 5 5 .6 0 1 .4 1 1s-.4 1-1 1c-3.9 0-7-3.1-7-7zm7 1c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1zm1.3-2.8c-.4-.4-.4-1 0-1.4l4.5-4.5c.4-.4 1-.4 1.4 0l.5.5c.4.4.4 1 0 1.4l-4.5 4.5c-.4.4-1 .4-1.4 0l-.5-.5zM5.2.3c.4-.4 1-.4 1.4 0l2.1 2.1c.4.4.4 1 0 1.4l-.9.9c-.4.4-1 .4-1.4 0L4.3 2.6c-.4-.4-.4-1 0-1.4l.9-.9zm7 7c.4-.4 1-.4 1.4 0l2.1 2.1c.4.4.4 1 0 1.4l-.9.9c-.4.4-1 .4-1.4 0l-2.1-2.1c-.4-.4-.4-1 0-1.4l.9-.9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/saved.js
/* harmony default export */ var saved = (["M6.71 9.29a1.003 1.003 0 00-1.42 1.42l2 2a.997.997 0 001.6-.27h.01l2-4h-.01c.06-.13.11-.28.11-.44 0-.55-.45-1-1-1-.39 0-.72.23-.89.56H9.1l-1.38 2.76-1.01-1.03zM9 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5L9 0zm3 14H4V2h4v4h4v8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/scatter-plot.js
/* harmony default export */ var scatter_plot = (["M15 12H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-.5-7c.83 0 1.5-.67 1.5-1.5S15.33 2 14.5 2 13 2.67 13 3.5 13.67 5 14.5 5zm-3 4c.83 0 1.5-.67 1.5-1.5S12.33 6 11.5 6 10 6.67 10 7.5 10.67 9 11.5 9zm-4-2C8.33 7 9 6.33 9 5.5S8.33 4 7.5 4 6 4.67 6 5.5 6.67 7 7.5 7zm-3 4c.83 0 1.5-.67 1.5-1.5S5.33 8 4.5 8 3 8.67 3 9.5 3.67 11 4.5 11z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/search.js
/* harmony default export */ var search = (["M15.55 13.43l-2.67-2.68a6.94 6.94 0 001.11-3.76c0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.42 3.76-1.11l2.68 2.67a1.498 1.498 0 102.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/search-around.js
/* harmony default export */ var search_around = (["M13.5 11c-.51 0-.98.15-1.38.42l-2.4-2.41c.17-.3.28-.64.28-1.01s-.11-.71-.28-1.01l2.41-2.41c.39.27.86.42 1.37.42a2.5 2.5 0 000-5A2.5 2.5 0 0011 2.5c0 .51.15.98.42 1.38l-2.41 2.4C8.71 6.11 8.37 6 8 6s-.71.11-1.01.28l-2.41-2.4c.27-.4.42-.87.42-1.38a2.5 2.5 0 00-5 0A2.5 2.5 0 002.5 5c.51 0 .98-.15 1.38-.42l2.41 2.41C6.11 7.29 6 7.63 6 8s.11.71.28 1.01l-2.41 2.41c-.39-.27-.86-.42-1.37-.42a2.5 2.5 0 000 5A2.5 2.5 0 005 13.5c0-.51-.15-.98-.42-1.38l2.41-2.41c.3.18.64.29 1.01.29s.71-.11 1.01-.28l2.41 2.41c-.27.39-.42.86-.42 1.37a2.5 2.5 0 005 0 2.5 2.5 0 00-2.5-2.5zm0-10c.83 0 1.5.67 1.5 1.5S14.33 4 13.5 4 12 3.33 12 2.5 12.67 1 13.5 1zm-11 3C1.67 4 1 3.33 1 2.5S1.67 1 2.5 1 4 1.67 4 2.5 3.33 4 2.5 4zm0 11c-.83 0-1.5-.67-1.5-1.5S1.67 12 2.5 12s1.5.67 1.5 1.5S3.33 15 2.5 15zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/search-template.js
/* harmony default export */ var search_template = (["M15.55 13.43l-2.67-2.67c.7-1.09 1.11-2.38 1.11-3.77 0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.41 3.77-1.11l2.67 2.67a1.498 1.498 0 102.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm2.5-6h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm0-2h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm0 4h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/search-text.js
/* harmony default export */ var search_text = (["M9 4H5c-.55 0-1 .45-1 1s.45 1 1 1h1v3c0 .55.45 1 1 1s1-.45 1-1V6h1c.55 0 1-.45 1-1s-.45-1-1-1zm6.56 9.44l-2.67-2.67C13.59 9.68 14 8.39 14 7c0-3.87-3.13-7-7-7S0 3.13 0 7s3.13 7 7 7c1.39 0 2.68-.41 3.77-1.11l2.67 2.67a1.498 1.498 0 102.12-2.12zM7 12c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/segmented-control.js
/* harmony default export */ var segmented_control = (["M15 4H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 6H8V6h6v4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/select.js
/* harmony default export */ var paths_select = (["M16 15c0-.28-.12-.52-.31-.69l.02-.02-3.12-3.12 3.41-.84-8.05-2.86c.03-.09.05-.17.05-.27V2c0-.55-.45-1-1-1H3c0-.55-.45-1-1-1S1 .45 1 1c-.55 0-1 .45-1 1s.45 1 1 1v4c0 .55.45 1 1 1h5.2c.1 0 .18-.02.27-.05L10.33 16l.85-3.41 3.12 3.12.02-.02c.16.19.4.31.68.31.04 0 .07-.02.1-.02s.06.02.1.02c.44 0 .8-.36.8-.8 0-.04-.02-.07-.02-.1s.02-.06.02-.1zM6 6H3V3h3v3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/selection.js
/* harmony default export */ var selection = (["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm0-9C6.34 5 5 6.34 5 8s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/send-message.js
/* harmony default export */ var send_message = (["M15.399 9.01L1.527 15.875c-.535.267-1.175.081-1.421-.427A.953.953 0 010 15V10l8-2-8-2V1c0-.528.407-1 1.004-1 .169 0 .416.04.567.116L15.403 7.07a1.084 1.084 0 01-.005 1.939z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/send-to.js
/* harmony default export */ var send_to = (["M15 7.5c-.8 0-1.5-.4-2-1l-1.2 1.2c-.4.5-1.1.7-1.8.7-1.4.1-2.5-1-2.5-2.4 0-.7.3-1.3.7-1.8L9.5 3c-.6-.5-1-1.2-1-2 0-.3.1-.7.2-1H8C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8v-.7c-.3.1-.6.2-1 .2zM15 0h-4c-.6 0-1 .5-1 1s.4 1 1 1h1.6L9.3 5.3c-.2.2-.3.4-.3.7 0 .5.4 1 1 1 .3 0 .5-.1.7-.3L14 3.4V5c0 .6.4 1 1 1 .5 0 1-.4 1-1V1c0-.5-.4-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/send-to-graph.js
/* harmony default export */ var send_to_graph = (["M6 9H2c-.55 0-1 .45-1 1s.45 1 1 1h1.59L.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L5 12.41V14c0 .55.45 1 1 1s1-.45 1-1v-4c0-.55-.45-1-1-1zm8 .5c-.56 0-1.06.23-1.42.59l-2.13-1.24L8.99 8l3.59-2.09A2.002 2.002 0 0016 4.5c0-1.1-.9-2-2-2s-2 .9-2 2c0 .19.03.37.08.54L8.5 7.13v-3.2c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S6 .9 6 2c0 .93.64 1.71 1.5 1.93v3.2l-.88-.52-2.7-1.57c.05-.17.08-.35.08-.54 0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.56 0 1.06-.23 1.42-.59l2.13 1.24 3.84 2.24 2.7 1.57c-.06.17-.09.35-.09.54 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/send-to-map.js
/* harmony default export */ var send_to_map = (["M6 9H2c-.55 0-1 .45-1 1s.45 1 1 1h1.59L.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L5 12.41V14c0 .55.45 1 1 1s1-.45 1-1v-4c0-.55-.45-1-1-1zm9.55-5.83l-4.49-3A.975.975 0 009.99.15L5.53 2.82 1.56.17A1.003 1.003 0 000 1v6h2V2.87l2.94 1.96.06.03V7h1V4.86s.01 0 .01-.01L10 2.47v8.67s-.01 0-.01.01l-.99.58v2.33l1.47-.88 3.97 2.65A1.003 1.003 0 0016 15V4c0-.35-.18-.65-.45-.83zM14 13.13l-2.94-1.96c-.02-.01-.04-.02-.05-.03v-8.6l3 2v8.59z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/series-add.js
/* harmony default export */ var series_add = (["M10.68 7.9c.44.54 1.07.92 1.79 1.05l-2.76 2.76c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L5 8.41l-3 3V13h13c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1s1 .45 1 1v4.59l2.29-2.3C4.47 6.11 4.72 6 5 6s.53.11.71.29L9 9.59l1.68-1.69zM15 3c.55 0 1 .45 1 1s-.45 1-1 1h-1v1c0 .55-.45 1-1 1s-1-.45-1-1V5h-1c-.55 0-1-.45-1-1s.45-1 1-1h1V2c0-.55.45-1 1-1s1 .45 1 1v1h1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/series-configuration.js
/* harmony default export */ var series_configuration = (["M9.94 9.64c.65.23 1.34.36 2.06.36.14 0 .29-.01.43-.01L9.7 12.71c-.18.18-.43.29-.71.29-.28 0-.53-.11-.71-.3L5 9.41l-3 3V14h12.99c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V5c0-.55.45-1 1-1s1 .45 1 1v4.59l2.29-2.3C4.47 7.11 4.72 7 5 7c.28 0 .53.11.71.29L9 10.59l.94-.95zm4.73-6.44h.92c.22 0 .4.18.4.4v.8c0 .22-.18.4-.4.4h-.93c-.06.2-.14.38-.24.55l.66.65c.15.15.15.4 0 .55l-.54.55c-.15.15-.4.15-.55 0l-.65-.65c-.17.1-.36.18-.55.24v.91c0 .22-.18.4-.4.4h-.8c-.22 0-.4-.18-.4-.4v-.93c-.18-.06-.36-.13-.52-.22l-.68.68c-.15.16-.41.16-.57 0l-.56-.56a.417.417 0 010-.57l.68-.68c-.08-.16-.16-.33-.22-.52h-.93c-.22 0-.4-.18-.4-.4v-.8c0-.22.18-.4.4-.4h.93c.06-.2.14-.38.24-.55l-.65-.64a.392.392 0 010-.55l.54-.55a.38.38 0 01.54 0l.65.65c.18-.1.36-.18.55-.24V.4c0-.22.18-.4.4-.4h.8c.22 0 .4.18.4.4v.93c.18.06.35.14.52.22l.68-.68c.15-.16.41-.16.57 0l.57.57c.15.16.15.41 0 .57l-.68.68c.09.16.16.33.22.51zm-4.18.8c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5c-.82 0-1.5.67-1.5 1.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/series-derived.js
/* harmony default export */ var series_derived = (["M10.66 7.92c.44.54 1.07.91 1.8 1.03L9.71 11.7c-.18.19-.43.3-.71.3s-.53-.11-.71-.3L5 8.41l-3 3V13h13c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1s1 .45 1 1v4.59l2.29-2.3C4.47 6.11 4.72 6 5 6s.53.11.71.29L9 9.59l1.66-1.67zM12.3 5.3l.3-.3H8c-.6 0-1-.4-1-1s.4-1 1-1h4.6l-.3-.3c-.2-.2-.3-.4-.3-.7 0-.6.5-1 1-1 .3 0 .5.1.7.3l2 2c.2.2.3.4.3.7s-.1.5-.3.7l-2 2c-.2.2-.4.3-.7.3-.6 0-1-.4-1-1 0-.3.1-.5.3-.7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/series-filtered.js
/* harmony default export */ var series_filtered = (["M9.29 9.3c.3.62.8 1.12 1.42 1.41l-1 1c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L5 8.41l-3 3V13h13c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1s1 .45 1 1v4.59l2.29-2.3C4.47 6.11 4.72 6 5 6s.53.11.71.29L9 9.59l.29-.29zM15.48 1c.31 0 .52.26.52.57 0 .16-.06.3-.17.41l-2.86 2.73v2.63c0 .16-.06.3-.17.41l-.82 1.1c-.1.1-.25.17-.41.17-.31 0-.57-.26-.57-.57V4.71L8.17 1.98A.566.566 0 018 1.57c0-.31.26-.57.57-.57h6.91z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/series-search.js
/* harmony default export */ var series_search = (["M9.6 8.94a4.937 4.937 0 001.82.01c.1-.01.22-.04.39-.08l.23-.07c.04-.01.08-.02.11-.04l.22.22-2.7 2.72c-.18.19-.43.3-.71.3s-.53-.11-.71-.3L4.98 8.41l-2.99 3V13h12.94c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V3.99c0-.55.45-1 1-1s1 .45 1 1v4.59l2.28-2.3c.17-.18.42-.29.7-.29s.53.11.7.29l3.28 3.3.64-.64zm6.22-.41c.1.12.17.27.18.44 0 .34-.27.61-.61.61a.57.57 0 01-.43-.18l-2.24-2.25c-.13.08-.26.16-.4.23-.02.01-.05.02-.07.03-.14.06-.27.12-.42.17h-.01c-.14.05-.29.08-.44.11-.04.01-.08.02-.11.02-.15.02-.3.04-.46.04-1.85 0-3.35-1.51-3.35-3.37S8.96 1.01 10.81 1c1.85 0 3.35 1.51 3.35 3.37 0 .16-.02.31-.04.47-.01.04-.01.07-.02.11-.02.15-.05.29-.1.44v.01c-.05.15-.11.28-.17.42-.01.02-.02.05-.03.07-.07.14-.14.27-.23.4l2.25 2.24zm-5.01-1.94c1.22 0 2.21-.99 2.21-2.22 0-1.23-.99-2.22-2.21-2.22S8.6 3.14 8.6 4.37c0 1.22.99 2.22 2.21 2.22z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/settings.js
/* harmony default export */ var settings = (["M3 1c0-.55-.45-1-1-1S1 .45 1 1v3h2V1zm0 4H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm12-4c0-.55-.45-1-1-1s-1 .45-1 1v2h2V1zM9 1c0-.55-.45-1-1-1S7 .45 7 1v6h2V1zM1 15c0 .55.45 1 1 1s1-.45 1-1v-5H1v5zM15 4h-2c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-2 11c0 .55.45 1 1 1s1-.45 1-1V9h-2v6zM9 8H7c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-2 7c0 .55.45 1 1 1s1-.45 1-1v-2H7v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/shapes.js
/* harmony default export */ var shapes = (["M5.92 8.139c.44-.282 1.006-.121 1.264.358l2.689 4.988c.083.155.127.33.127.51C10 14.55 9.587 15 9.077 15H3.924a.864.864 0 01-.438-.12c-.449-.263-.617-.873-.376-1.362l2.465-4.989c.08-.162.2-.297.346-.39zM12 4a3 3 0 110 6 3 3 0 010-6zM6 1a1 1 0 011 1v4a1 1 0 01-1 1H2a1 1 0 01-1-1V2a1 1 0 011-1h4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/share.js
/* harmony default export */ var share = (["M10.99 13.99h-9v-9h4.76l2-2H.99c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V7.24l-2 2v4.75zm4-14h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L7.29 7.28a1 1 0 00-.3.71 1.003 1.003 0 001.71.71l5.29-5.29V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.56-.45-1.01-1-1.01z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/shared-filter.js
/* harmony default export */ var shared_filter = (["M13.843 15.163c.232.53.138.837.138.837H6.017s-.088-.308.138-.837c.226-.53 1.338-.88 2.079-1.206.735-.332.66-.53.685-.8 0-.03.006-.068.006-.105a2.171 2.171 0 01-.61-.892v-.006s-.006-.006-.006-.012c-.025-.074-.056-.16-.075-.24-.176-.031-.276-.222-.314-.394a.8.8 0 01-.1-.437c.025-.253.131-.37.244-.419v-.037c0-.313.032-.775.088-1.07A1.835 1.835 0 018.85 8.37c.315-.24.76-.37 1.156-.37.396 0 .842.13 1.156.37.301.233.534.56.64.935.026.08.045.166.057.246.057.295.088.75.088 1.064v.043c.113.05.214.167.232.413a.75.75 0 01-.1.437c-.038.172-.132.357-.301.387a1.77 1.77 0 01-.076.24.136.136 0 01-.006.025 2.346 2.346 0 01-.597.892v.111c.025.277-.075.474.666.8.741.326 1.853.67 2.079 1.2z", "M14.852 15h1.131s.083-.27-.12-.732c-.16-.373-.82-.641-1.411-.88a15.328 15.328 0 01-.409-.17c-.565-.25-.57-.412-.577-.61-.001-.03-.002-.06-.005-.09v-.097c.22-.2.401-.469.522-.781 0 0 .005-.016.005-.022.028-.07.05-.14.066-.21.149-.026.231-.188.264-.339a.655.655 0 00.088-.382c-.016-.215-.104-.318-.203-.36v-.039c0-.274-.028-.673-.077-.931a1.598 1.598 0 00-.61-1.034 1.736 1.736 0 00-1.285-.3c.236.285.42.622.529.996.038.124.065.248.083.36.048.257.079.578.093.867a1.736 1.736 0 01.08 1.624 1.65 1.65 0 01-.217.453 1.42 1.42 0 01-.176.209c-.08.204-.178.4-.292.585l.202.083c.285.117.64.261.9.387.226.11.475.245.698.414.213.161.476.408.63.764.034.08.065.159.091.235zM12.14 14.12l.09.037zM11 1c.55 0 1 .45 1 1 0 .28-.11.53-.29.7L8 6.41v1.374a2.813 2.813 0 00-.833 1.589 6.925 6.925 0 00-.092.86 1.64 1.64 0 00-.25.739l-.001.004c-.02.217.006.413.046.573L5.71 12.71A1.003 1.003 0 014 12V6.41L.29 2.71A1.003 1.003 0 011 1h10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/shield.js
/* harmony default export */ var shield = (["M8 16c4.667-3.048 7-7.238 7-12.571-1.556 0-3.889-1.143-7-3.429-3.111 2.286-5.444 3.429-7 3.429C1 8.762 3.333 12.952 8 16zM8 2.121c2.005 1.388 3.715 2.304 5.186 2.735-.342 3.702-2.05 6.683-5.186 9.038V2.121z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/ship.js
/* harmony default export */ var ship = (["M5.44.804L5.2 2H3a1 1 0 00-1 1v3.714l-1.08.309a.988.988 0 00-.69 1.192c.366 1.432.897 3.324 1.309 4.26a.644.644 0 00.005.01c-.175.01-.356.015-.544.015a.5.5 0 000 1c2.067 0 3.414-.543 4.161-.917.55.373 1.505.917 2.839.917 1.32 0 2.27-.533 2.822-.905l.004.002c.196.105.48.24.856.374.75.268 1.857.529 3.318.529a.5.5 0 000-1c-.295 0-.572-.012-.834-.032a.995.995 0 00.308-.458l1.208-3.74a1 1 0 00-.677-1.269L14 6.714V3a1 1 0 00-1-1h-2.2L10.56.804A1 1 0 009.58 0H6.42a1 1 0 00-.98.804zM4 6.143l3-.857V4H4v2.143zm5-.857l3 .857V4H9v1.286zm-4.036 8.273a.5.5 0 01.527.034c.455.325 1.277.907 2.509.907s2.054-.582 2.51-.907a.5.5 0 01.579-.001l.006.004.036.023c.034.022.09.055.168.097.154.082.394.197.72.313.649.232 1.642.471 2.981.471a.5.5 0 010 1c-1.46 0-2.568-.261-3.318-.53a6.316 6.316 0 01-.856-.373l-.004-.002c-.552.372-1.502.905-2.822.905-1.334 0-2.289-.544-2.839-.917-.747.374-2.094.917-4.161.917a.5.5 0 010-1c2.129 0 3.384-.63 3.964-.94z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/shop.js
/* harmony default export */ var shop = (["M3 2h10c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1s.45 1 1 1zm9 11H4v-3H2v5c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-5h-2v3zm4-6l-1.01-3.17C14.9 3.36 14.49 3 14 3H2c-.49 0-.9.36-.98.83L.01 7H0c0 1.1.9 2 2 2s2-.9 2-2c0 1.1.9 2 2 2s2-.9 2-2c0 1.1.9 2 2 2s2-.9 2-2c0 1.1.9 2 2 2s2-.9 2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/shopping-cart.js
/* harmony default export */ var shopping_cart = (["M14 10H7.72l-.33-1H13c.39 0 .72-.23.89-.56h.01l2-4h-.01c.06-.13.11-.28.11-.44 0-.55-.45-1-1-1H5.39l-.44-1.32h-.01C4.8 1.29 4.44 1 4 1H1c-.55 0-1 .45-1 1s.45 1 1 1h2.28l2.33 7H4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2h6c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2zM6.05 5h7.33l-1 2H6.72l-.67-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/signal-search.js
/* harmony default export */ var signal_search = (["M5.474 7.971A5.31 5.31 0 006.66 8.9l.007.019.018.056c.015.038.038.06.045.098l1.5 5.999a.75.75 0 01-1.455.36l-.42-1.68h-.704l-.42 1.68a.746.746 0 01-.907.547.746.746 0 01-.547-.907l1.5-6c.007-.037.03-.06.044-.097.015-.037.015-.075.038-.112a.722.722 0 01-.105-.36c0-.207.084-.394.22-.53zM2.795 5.277a.763.763 0 00-.015-1.065.756.756 0 00-1.065.015c-2.286 2.34-2.286 6.21 0 8.549a.747.747 0 101.072-1.042c-1.709-1.763-1.709-4.702.008-6.457zM7.808 9.388a5.318 5.318 0 001.58.211 2.236 2.236 0 01-.656.98.756.756 0 01-1.057-.098.756.756 0 01.097-1.057l.036-.036zM11.544 9.105l.378.378a6.02 6.02 0 01-1.638 3.285c-.285.3-.757.3-1.057.015a.74.74 0 01-.015-1.057 4.52 4.52 0 001.185-2.24c.4-.083.785-.212 1.147-.381z", "M4.054 9.424c-.427-.352-.352-1.582-.03-1.822a.752.752 0 00.15-1.05.752.752 0 00-1.05-.15c-1.079.802-1.221 3.18-.03 4.177a.75.75 0 10.96-1.155zM9.318 0a4.318 4.318 0 014.317 4.318c0 .206-.02.402-.049.598-.01.05-.01.088-.02.138-.039.196-.078.382-.137.569v.01c-.059.186-.137.363-.216.54l-.039.087a5.285 5.285 0 01-.294.51l2.884 2.886a.878.878 0 01.236.559.787.787 0 01-.785.785.785.785 0 01-.56-.226L11.772 7.89a5.285 5.285 0 01-.51.295l-.089.039c-.176.079-.353.157-.54.216h-.01a3.701 3.701 0 01-.568.137c-.05.01-.099.02-.138.02-.196.03-.392.049-.598.049A4.318 4.318 0 015 4.327 4.332 4.332 0 019.318 0zm-.02 1.1A3.195 3.195 0 006.1 4.298a3.195 3.195 0 003.198 3.198 3.195 3.195 0 003.198-3.198A3.195 3.195 0 009.298 1.1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/sim-card.js
/* harmony default export */ var sim_card = (["M13.71 4.29l-4-4A.997.997 0 009 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5c0-.28-.11-.53-.29-.71zM7 6h2v2H7V6zM4 6h2v2H4V6zm2 8H4v-2h2v2zm3 0H7v-2h2v2zm3 0h-2v-2h2v2zm0-3H4V9h8v2zm0-3h-2V6h2v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/slash.js
/* harmony default export */ var slash = (["M10 2a.99.99 0 00-.96.73l-2.99 9.96A1.003 1.003 0 007 14c.46 0 .85-.31.96-.73l2.99-9.96A1.003 1.003 0 0010 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/small-cross.js
/* harmony default export */ var small_cross = (["M9.41 8l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L8 6.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42L6.59 8 4.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L8 9.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L9.41 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/small-info-sign.js
/* harmony default export */ var small_info_sign = (["M14 8A6 6 0 112 8a6 6 0 0112 0zM9 4v2H7V4h2zm0 3v4h1v1H6v-1h1V8H6V7h3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/small-minus.js
/* harmony default export */ var small_minus = (["M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/small-plus.js
/* harmony default export */ var small_plus = (["M11 7H9V5c0-.55-.45-1-1-1s-1 .45-1 1v2H5c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V9h2c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/small-square.js
/* harmony default export */ var small_square = (["M5 5v6h6V5H5zM4 3a1 1 0 00-1 1v8a1 1 0 001 1h8a1 1 0 001-1V4a1 1 0 00-1-1H4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/small-tick.js
/* harmony default export */ var small_tick = (["M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/snowflake.js
/* harmony default export */ var snowflake = (["M13.364 9l.879.879a1 1 0 11-1.415 1.414l-2.12-2.121A1.003 1.003 0 0110.568 9H9v1.604c.042.03.083.065.121.103l2.122 2.121a1 1 0 01-1.415 1.415L9 13.414V15a1 1 0 01-2 0v-1.636l-.879.879a1 1 0 11-1.414-1.415l2.121-2.12c.054-.054.111-.1.172-.139V9H5.38c-.038.06-.084.118-.137.172l-2.122 2.12A1 1 0 111.707 9.88L2.586 9H1a1 1 0 110-2h1.536l-.829-.828a1 1 0 011.414-1.415L5.243 6.88c.038.038.072.079.103.121H7V5.38a1.003 1.003 0 01-.172-.137L4.708 3.12A1 1 0 016.12 1.707L7 2.586V1a1 1 0 112 0v1.536l.828-.829a1 1 0 011.415 1.414L9.12 5.243A1.007 1.007 0 019 5.346V7h1.604c.03-.042.065-.083.103-.121l2.121-2.122a1 1 0 011.415 1.415L13.414 7H15a1 1 0 010 2h-1.636z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/social-media.js
/* harmony default export */ var social_media = (["M9.5 4c.4 0 .8-.1 1.1-.3C12 4.5 12.9 6 13 7.6c0 .5.5.9 1 .9.6 0 1-.4 1-1v-.2c-.2-2.4-1.5-4.4-3.5-5.5-.1-1-.9-1.8-2-1.8s-2 .9-2 2 .9 2 2 2zM4 8.5c0-.7-.4-1.3-.9-1.7.3-1.4 1.2-2.6 2.5-3.3.3-.1.6-.4.6-.9s-.4-1-1-1c-.2 0-.3 0-.5.1-1.9 1-3.2 2.8-3.6 5C.4 7.1 0 7.8 0 8.5c0 1.1.9 2 2 2s2-.9 2-2zm8.8 1.2c-1.1 0-2 .9-2 2v.3c-.8.6-1.8.9-2.8.9-1.2 0-2.3-.4-3.2-1.1-.2-.2-.4-.3-.7-.3-.6 0-1 .4-1 1 0 .3.1.6.3.8C4.6 14.4 6.2 15 8 15c1.5 0 3-.5 4.1-1.3.2.1.5.1.7.1 1.1 0 2-.9 2-2s-.9-2.1-2-2.1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/sort.js
/* harmony default export */ var sort = (["M5 12c-.28 0-.53.11-.71.29l-.29.3V9c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29A.965.965 0 001 12a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 005 12zm3-9h7c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm7 2H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1zm0 8H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/sort-alphabetical.js
/* harmony default export */ var sort_alphabetical = (["M6 12c-.28 0-.53.11-.71.29l-.29.3V9c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29A.965.965 0 002 12a1.003 1.003 0 00-.71 1.71l2 2c.19.18.44.29.71.29.28 0 .53-.11.71-.29l2-2c.18-.18.29-.43.29-.71a.99.99 0 00-1-1zm7.93-.95v-1.04H9.25v1.11h2.94L9 14.96V16h5.02v-1.11h-3.27l3.18-3.84zm-1.42-4.84l.62 1.78H15L11.94.01H10.1L7 7.99h1.81l.64-1.78h3.06zm-1.52-4.24h.02l1.03 2.93H9.92l1.07-2.93z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/sort-alphabetical-desc.js
/* harmony default export */ var sort_alphabetical_desc = (["M5.99 11.99c-.28 0-.53.11-.71.29l-.29.29V8.99c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29a1.003 1.003 0 00-1.42 1.42l2 2c.18.18.43.29.71.29.28 0 .53-.11.71-.29l2-2c.18-.18.29-.43.29-.71 0-.56-.45-1.01-1-1.01zM12.7 10h-1.38L9 15.99h1.36l.48-1.33h2.3l.46 1.33H15L12.7 10zm-1.51 3.67l.8-2.2h.02l.77 2.2h-1.59zm3.8-7.17h-4.57l4.45-5.12V0H8.34v1.48h4.1L7.99 6.59v1.39h7V6.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/sort-asc.js
/* harmony default export */ var sort_asc = (["M8 7h3c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm0-4h1c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm0 8h5c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm-3 1c-.28 0-.53.11-.71.29l-.29.3V9c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29A.965.965 0 001 12a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 005 12zm10 1H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/sort-desc.js
/* harmony default export */ var sort_desc = (["M5 12c-.28 0-.53.11-.71.29l-.29.3V9c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29A.965.965 0 001 12a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 005 12zm4 1H8c-.55 0-1 .45-1 1s.45 1 1 1h1c.55 0 1-.45 1-1s-.45-1-1-1zm4-8H8c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm-2 4H8c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1zm4-8H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/sort-numerical.js
/* harmony default export */ var sort_numerical = (["M6 11.99c-.28 0-.53.11-.71.29l-.29.3V8.99c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29c-.18-.18-.43-.3-.71-.3a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29.28 0 .53-.11.71-.29l2-2A1.003 1.003 0 006 11.99zm7.91-.08c-.06-.36-.17-.68-.33-.96-.16-.28-.37-.51-.64-.69-.27-.17-.61-.26-1.03-.26-.28 0-.54.06-.78.17-.23.11-.43.26-.6.45-.17.19-.3.41-.39.67a2.492 2.492 0 00-.04 1.52 1.623 1.623 0 00.89 1.03c.22.11.45.16.68.16.26 0 .5-.05.7-.15s.38-.26.53-.5l.02.02c-.01.16-.03.34-.07.54-.03.2-.09.4-.17.57-.08.18-.18.33-.31.45s-.29.19-.5.19a.63.63 0 01-.48-.21c-.13-.14-.21-.31-.25-.5H10.1c.03.25.1.48.19.68.1.2.22.37.38.5.16.14.33.24.54.31s.42.1.65.1c.39 0 .72-.09.99-.27.27-.18.49-.41.66-.7.17-.29.29-.61.37-.97.08-.36.12-.72.12-1.07 0-.36-.03-.72-.09-1.08zm-1.14.54c-.04.13-.09.24-.16.34a.78.78 0 01-.27.24c-.11.06-.24.09-.39.09a.75.75 0 01-.37-.09.777.777 0 01-.26-.25c-.07-.1-.12-.22-.15-.35-.03-.13-.05-.26-.05-.4 0-.13.02-.26.05-.39.04-.13.09-.24.16-.34.07-.1.16-.18.26-.24s.22-.09.35-.09c.14 0 .26.03.37.09.11.06.2.14.28.24a1.32 1.32 0 01.23.74c0 .15-.02.28-.05.41zm-1.56-4.47H13V0h-1.42c-.05.3-.16.56-.31.76-.16.21-.35.37-.58.5-.23.13-.49.21-.78.26-.3.05-.6.07-.91.06V2.8h2.21v5.18z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/sort-numerical-desc.js
/* harmony default export */ var sort_numerical_desc = (["M6 11.99c-.28 0-.53.11-.71.29l-.29.3V8.99c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29a.982.982 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 006 11.99zm7.86-9.45c-.09-.48-.26-.9-.5-1.28S12.8.58 12.4.35C12 .12 11.49 0 10.86 0c-.43 0-.82.07-1.17.22s-.65.35-.9.6-.44.55-.58.89c-.14.34-.2.71-.2 1.11 0 .31.05.61.15.91.1.3.26.57.48.8.23.24.52.43.85.58.33.14.68.21 1.03.21.4 0 .75-.07 1.05-.2.3-.13.57-.35.79-.66l.02.02c-.02.21-.05.45-.1.73-.05.27-.13.53-.25.76-.12.24-.27.44-.47.6-.19.16-.44.25-.75.25a.98.98 0 01-.72-.29c-.19-.18-.31-.4-.37-.66H8.15c.05.34.14.64.29.9.15.26.34.49.57.67.23.18.5.32.8.41.31.1.63.15.98.15.58 0 1.08-.12 1.48-.36.4-.24.73-.55.99-.93.26-.39.44-.82.56-1.29.12-.48.18-.96.18-1.44s-.05-.96-.14-1.44zm-1.71.72c-.05.17-.14.32-.24.46-.11.13-.24.24-.41.31-.16.08-.36.12-.58.12-.21 0-.39-.04-.55-.13-.16-.08-.29-.19-.39-.33-.12-.14-.19-.29-.24-.46-.05-.17-.08-.35-.08-.54 0-.18.03-.35.08-.52.06-.16.14-.31.25-.44.11-.13.24-.24.4-.32.16-.08.33-.12.52-.12.21 0 .4.04.56.12.16.08.3.19.41.32.11.14.2.29.26.46.06.17.09.35.09.52 0 .2-.03.38-.08.55zm-.46 7.31c-.12.15-.26.28-.44.37-.17.09-.37.16-.58.2-.22.04-.44.05-.67.05v.92h1.65v3.88h1.33V10h-1.06c-.03.23-.11.42-.23.57z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/split-columns.js
/* harmony default export */ var split_columns = (["M12 10a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H9V2h3v1.71c.31-.13.64-.21 1-.21s.69.08 1 .21V1c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v2.71c.31-.13.64-.21 1-.21s.69.08 1 .21V2h3v5H3.41l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L3.41 9H7v5H4v-1.71c-.31.13-.64.21-1 .21s-.69-.08-1-.21V15c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-2.71c-.31.13-.64.21-1 .21s-.69-.08-1-.21V14H9V9h3.59l-.29.29c-.19.18-.3.43-.3.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/square.js
/* harmony default export */ var square = (["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2V2h12v12z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/stacked-chart.js
/* harmony default export */ var stacked_chart = (["M10 2c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v3h3V2zm3 10h1c.55 0 1-.45 1-1V8h-3v3c0 .55.45 1 1 1zm2-7c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v2h3V5zm-5 1H7v3h3V6zM5 7c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v1h3V7zm3 5h1c.55 0 1-.45 1-1v-1H7v1c0 .55.45 1 1 1zm7 1H2c-.55 0-1 .45-1 1s.45 1 1 1h13c.55 0 1-.45 1-1s-.45-1-1-1zM3 12h1c.55 0 1-.45 1-1V9H2v2c0 .55.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/stadium-geometry.js
/* harmony default export */ var stadium_geometry = (["M12 6H4a2 2 0 100 4h8a2 2 0 100-4zM4 4a4 4 0 100 8h8a4 4 0 000-8H4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/star.js
/* harmony default export */ var star = (["M8 0l2.5 5.3 5.5.8-4 4.1.9 5.8L8 13.3 3.1 16l.9-5.8-4-4.1 5.5-.8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/star-empty.js
/* harmony default export */ var star_empty = (["M16 6.11l-5.53-.84L8 0 5.53 5.27 0 6.11l4 4.1L3.06 16 8 13.27 12.94 16 12 10.21l4-4.1zM4.91 13.2l.59-3.62L3 7.02l3.45-.53L8 3.2l1.55 3.29 3.45.53-2.5 2.56.59 3.62L8 11.49 4.91 13.2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/step-backward.js
/* harmony default export */ var step_backward = (["M12 3c-.24 0-.44.09-.62.23l-.01-.01L7 6.72V4c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V9.28l4.38 3.5.01-.01c.17.14.37.23.61.23.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/step-chart.js
/* harmony default export */ var step_chart = (["M15 12H2v-2h3c.55 0 1-.45 1-1V7h2v1c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V5h1c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1v3h-2V6c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v2H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/step-forward.js
/* harmony default export */ var step_forward = (["M12 3h-1c-.55 0-1 .45-1 1v2.72l-4.38-3.5v.01A.987.987 0 005 3c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1 .24 0 .44-.09.62-.23l.01.01L10 9.28V12c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/stop.js
/* harmony default export */ var stop = (["M12 3H4c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h8c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/stopwatch.js
/* harmony default export */ var stopwatch = (["M9 2v1.083A6.002 6.002 0 018 15 6 6 0 017 3.083V2H6a1 1 0 110-2h4a1 1 0 010 2H9zM8 5a4 4 0 104 4H8V5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/strikethrough.js
/* harmony default export */ var strikethrough = (["M14 7H8.65c-.38-.09-.73-.18-1.04-.26-.31-.08-.49-.13-.54-.14-.43-.11-.79-.29-1.05-.52-.27-.23-.4-.55-.4-.95 0-.29.07-.53.21-.72s.32-.34.54-.46c.22-.11.46-.19.72-.24.26-.05.52-.07.77-.07.74 0 1.36.15 1.84.46.32.2.55.5.68.9h2.22c-.06-.33-.17-.64-.32-.92-.25-.45-.59-.84-1.02-1.15-.43-.31-.93-.54-1.49-.7S8.59 2 7.95 2c-.55 0-1.1.07-1.63.2-.54.13-1.02.34-1.45.62-.42.28-.76.63-1.02 1.05-.26.42-.39.92-.39 1.5 0 .3.04.59.13.88.08.26.21.51.39.75H2c-.55 0-1 .45-1 1s.45 1 1 1h7.13c.25.07.49.14.71.22.25.09.48.23.7.44.21.21.32.53.32.97 0 .21-.05.43-.14.63-.09.21-.24.39-.45.55-.21.16-.48.29-.81.39-.33.1-.73.15-1.2.15-.44 0-.84-.05-1.21-.14-.37-.09-.7-.24-.99-.43-.29-.2-.51-.45-.67-.76-.01 0-.01-.01-.02-.02H3.14a3.68 3.68 0 001.39 2.03c.46.34 1 .58 1.62.74.61.15 1.27.23 1.97.23.61 0 1.2-.07 1.79-.2.58-.13 1.11-.34 1.56-.63.46-.29.83-.66 1.11-1.11.28-.45.42-1 .42-1.64 0-.3-.05-.6-.15-.9-.05-.19-.13-.36-.22-.52H14c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/style.js
/* harmony default export */ var style = (["M14 14H2V2h8.76l2-2H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6.24l-2 2V14zm1.4-14L9.7 5.7l2.1 2.1L16 3.6V0h-.6zM4 11.92c2.33.15 4.42.15 6.15-1.5.82-.83.82-2.25 0-3.08-.45-.38-.98-.6-1.5-.6-.53 0-1.05.22-1.43.6-.82.91-1.27 3.38-3.22 4.58z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/swap-horizontal.js
/* harmony default export */ var swap_horizontal = (["M0 7.02L.05 7H0v.02zm2-2.03h9.57l-1.29 1.29A1.003 1.003 0 0011.7 7.7l2.99-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2.99-3a1.07 1.07 0 00-.71-.28 1.003 1.003 0 00-.71 1.71L11.57 3H2c-.55 0-1 .45-1 1a1 1 0 001 .99zM15.96 9H16v-.02l-.04.02zM14 11.01H4.43l1.29-1.29A1.003 1.003 0 004.3 8.3l-2.99 3a.99.99 0 00-.29.7c0 .28.11.53.29.71l2.99 3a1.003 1.003 0 001.42-1.42L4.43 13H14c.55 0 1-.45 1-1s-.45-.99-1-.99z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/swap-vertical.js
/* harmony default export */ var swap_vertical = (["M9 0h-.02L9 .04V0zM7 16h.02L7 15.95V16zM4.7 1.31c-.18-.18-.43-.29-.7-.29s-.53.11-.71.29l-3 2.99a1.003 1.003 0 001.42 1.42L3 4.43V14c0 .55.45 1 1 1s1-.45 1-1V4.43l1.29 1.29c.18.18.43.29.7.29A1.003 1.003 0 007.7 4.3l-3-2.99zM15 9.99c-.28 0-.53.11-.71.29L13 11.57V2c0-.55-.45-1-1-1s-1 .45-1 1v9.57l-1.29-1.29a.99.99 0 00-.7-.29 1.003 1.003 0 00-.71 1.71l3 2.99c.18.18.43.29.71.29.28 0 .53-.11.71-.29l3-2.99c.18-.18.29-.43.29-.71-.01-.55-.46-1-1.01-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/switch.js
/* harmony default export */ var paths_switch = (["M9.293 2.293l1.414 1.414-4.999 5a3 3 0 11-1.415-1.415l5-5zM13 7a3 3 0 110 6 3 3 0 010-6zM3 9a1 1 0 100 2 1 1 0 000-2zm10 0a1 1 0 100 2 1 1 0 000-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/symbol-circle.js
/* harmony default export */ var symbol_circle = (["M8 3.01a5 5 0 100 10 5 5 0 100-10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/symbol-cross.js
/* harmony default export */ var symbol_cross = (["M12 6.01h-2v-2c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1v2H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2h2c.55 0 1-.45 1-1v-2c0-.56-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/symbol-diamond.js
/* harmony default export */ var symbol_diamond = (["M12 8.01c0-.19-.07-.36-.16-.51l.01-.01-3-5-.01.01c-.17-.29-.48-.49-.84-.49s-.67.2-.84.49l-.02-.01-3 5 .02.01c-.09.15-.16.32-.16.51s.07.36.16.51h-.02l3 5 .01-.01c.18.29.49.5.85.5s.67-.2.84-.49l.01.01 3-5-.01-.01c.09-.16.16-.32.16-.51z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/symbol-rectangle.js
/* harmony default export */ var symbol_rectangle = (["M13 4H3c-.5 0-1 .5-1 1v6c0 .5.5 1 1 1h10c.5 0 1-.5 1-1V5c0-.5-.5-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/symbol-square.js
/* harmony default export */ var symbol_square = (["M12 3.01H4c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-8c0-.56-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/symbol-triangle-down.js
/* harmony default export */ var symbol_triangle_down = (["M13 4.01c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 .16.05.31.11.44H3.1l4 8h.01c.16.33.49.56.89.56s.72-.23.89-.56h.01l4-8h-.01c.06-.14.11-.28.11-.44z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/symbol-triangle-up.js
/* harmony default export */ var symbol_triangle_up = (["M12.89 11.56l-3.99-8h-.01c-.17-.32-.5-.55-.89-.55s-.72.23-.89.55H7.1l-4 8h.01c-.06.14-.11.29-.11.45 0 .55.45 1 1 1h8c.55 0 1-.45 1-1 0-.16-.05-.31-.11-.45z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/syringe.js
/* harmony default export */ var syringe = (["M11.146.146a.5.5 0 000 .708l.647.646L10.5 2.793 8.854 1.146a.5.5 0 10-.708.708l.647.646-1.146 1.146-5.5 5.5a.5.5 0 000 .708l.646.646-1.647 1.646a.5.5 0 000 .708l.647.646-1.647 1.646a.5.5 0 00.708.708L2.5 14.207l.646.647a.5.5 0 00.708 0L5.5 13.207l.646.647a.5.5 0 00.708 0l5.5-5.5L13.5 7.207l.646.647a.5.5 0 00.708-.708L13.207 5.5 14.5 4.207l.646.647a.5.5 0 00.708-.708l-4-4a.5.5 0 00-.708 0zM11.293 8l-.793.793-1.646-1.647a.5.5 0 10-.708.708L9.793 9.5 8.5 10.793 6.854 9.146a.5.5 0 10-.708.708L7.793 11.5 6.5 12.793 3.207 9.5 8 4.707 11.293 8zM8.707 4L12 7.293l.793-.793L9.5 3.207 8.707 4zm-6.5 8.5L3.5 13.793 4.793 12.5 3.5 11.207 2.207 12.5zm11.586-9L12.5 2.207 11.207 3.5 12.5 4.793 13.793 3.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/tag.js
/* harmony default export */ var tag = (["M1 3a2 2 0 012-2h4.584a2 2 0 011.414.586l5.413 5.412a2 2 0 010 2.829L9.827 14.41a2 2 0 01-2.829 0L1.586 8.998A2 2 0 011 7.584V3zm3.487-.007a1.494 1.494 0 100 2.988 1.494 1.494 0 000-2.988z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/take-action.js
/* harmony default export */ var take_action = (["M9 11a1.003 1.003 0 001.71.71l4-4a1.003 1.003 0 00-1.42-1.42l-4 4c-.18.18-.29.43-.29.71zM4 6c.28 0 .53-.11.71-.29l4-4A1.003 1.003 0 007.29.29l-4 4A1.003 1.003 0 004 6zm4 4l5-5-.79-.79.5-.5a1.003 1.003 0 00-1.42-1.42l-.5.5L10 2 5 7l.79.79-5.5 5.5a1.003 1.003 0 001.42 1.42l5.5-5.5L8 10zm7 4H7c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/tank.js
/* harmony default export */ var tank = (["M3.7 3.4a1 1 0 01.8-.4h5.086a1 1 0 01.707.293L11 4h3a1 1 0 110 2h-3v1h2.5a2.5 2.5 0 010 5h-11a2.5 2.5 0 010-5H3V4.667a1 1 0 01.2-.6l.5-.667zM2.5 9h11a.5.5 0 010 1h-11a.5.5 0 110-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/target.js
/* harmony default export */ var target = (["M7 4a1 1 0 012 0v2a1 1 0 01-2 0V4zM10 7a1 1 0 000 2h2a1 1 0 000-2h-2zM3 8a1 1 0 011-1h2a1 1 0 010 2H4a1 1 0 01-1-1zM8 9a1 1 0 00-1 1v2a1 1 0 002 0v-2a1 1 0 00-1-1z", "M8 16A8 8 0 108 0a8 8 0 000 16zm0-2A6 6 0 108 2a6 6 0 000 12z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/taxi.js
/* harmony default export */ var taxi = (["M15.12 6.63h-.38L15 7c-.01.3-.01.64 0 .98V8c0 .07-.03.13-.04.19h.02L14 13.1v.9c0 .55-.45 1-1 1s-1-.45-1-1v-1H4v1c0 .55-.45 1-1 1s-1-.45-1-1v-.9l-.98-4.9h.02C1.03 8.13 1 8.07 1 8H.99c0-.33 0-.67.01-1l.26-.37H.88C.4 6.63 0 6.21 0 5.69s.4-.94.88-.94h1.05l.77-2.11c.19-.53.76-1.08 1.26-1.24 0 0 .68-.2 2.05-.32C6.01 1.05 6 1.03 6 1c0-.55.45-1 1-1h2c.55 0 1 .45 1 1 0 .03-.01.05-.02.08 1.37.12 2.05.32 2.05.32.51.15 1.08.71 1.27 1.24l.76 2.12h1.05c.49 0 .89.42.89.93 0 .52-.4.94-.88.94zM11 10h2V8h-2v2zm-8 0h2V8H3v2zm10-5l-.73-1.63C12.21 3.19 12.18 3 12 3H4c-.18 0-.21.19-.27.37L3 5c-.06.18-.18 1 0 1h10c.18 0 .06-.82 0-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/temperature.js
/* harmony default export */ var temperature = (["M8.5 0A1.5 1.5 0 007 1.5v7.837a3.5 3.5 0 103 0V1.5A1.5 1.5 0 008.5 0zM2 5.5a.5.5 0 01.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zM2.5 1a.5.5 0 000 1h3a.5.5 0 000-1h-3zM4 3.5a.5.5 0 01.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5zM4.5 7a.5.5 0 000 1h1a.5.5 0 000-1h-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/text-highlight.js
/* harmony default export */ var text_highlight = (["M9 10H2V6h7V4H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h8v-2zm4 3h-1V3h1c.55 0 1-.45 1-1s-.45-1-1-1h-1c-.37 0-.7.11-1 .28-.3-.17-.63-.28-1-.28H9c-.55 0-1 .45-1 1s.45 1 1 1h1v10H9c-.55 0-1 .45-1 1s.45 1 1 1h1c.37 0 .7-.11 1-.28.3.17.63.28 1 .28h1c.55 0 1-.45 1-1s-.45-1-1-1zm2-9h-2v2h1v4h-1v2h2c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/th.js
/* harmony default export */ var th = (["M15 1H1c-.6 0-1 .5-1 1v12c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1zM6 13H2v-2h4v2zm0-3H2V8h4v2zm0-3H2V5h4v2zm8 6H7v-2h7v2zm0-3H7V8h7v2zm0-3H7V5h7v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/th-derived.js
/* harmony default export */ var th_derived = (["M5.6 10l-.3.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3l2-2c.2-.2.3-.4.3-.7s-.1-.5-.3-.7l-2-2C6.5 6.1 6.3 6 6 6c-.5 0-1 .4-1 1 0 .3.1.5.3.7l.3.3H1c-.6 0-1 .4-1 1s.4 1 1 1h4.6zM15 1H2c-.5 0-1 .5-1 1v5h2V5h11v2H8.8l.6.6c.1.1.2.3.3.4H14v2H9.7c-.1.1-.2.3-.3.4l-.6.6H14v2H3v-2H1v3c0 .5.5 1 1 1h13c.6 0 1-.5 1-1V2c0-.5-.4-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/th-disconnect.js
/* harmony default export */ var th_disconnect = (["M12 1h3c.6 0 1 .5 1 1v12c0 .6-.4 1-1 1h-4.97l.286-2H14v-2h-3.398l.143-1H14V8h-2.97l.143-1H14V5h-2.541l.51-3.576C11.99 1.282 12 1.14 12 1zM5.97 1l-.572 4H2v2h3.112L4.97 8H2v2h2.684l-.143 1H2v2h2.255l-.225 1.576c-.02.142-.03.284-.03.424H1c-.6 0-1-.4-1-1V2c0-.5.4-1 1-1h4.97zM8.01.859a1 1 0 111.98.282l-2 14a1 1 0 11-1.98-.282l2-14z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/th-filtered.js
/* harmony default export */ var th_filtered = (["M10 10h3l1.78-2.226a1 1 0 00.22-.625V4.3l1-.9V14c0 .6-.4 1-1 1H1c-.6 0-1-.4-1-1V2c0-.5.4-1 1-1h4.333L9 4.3V5H7v2h2v1H7v2h3zm-4 3v-2H2v2h4zm0-3V8H2v2h4zm0-3V5H2v2h4zm8 6v-2H7v2h7z", "M15.48 0c.31 0 .52.26.52.57 0 .16-.06.3-.17.41l-2.86 2.73v2.63c0 .16-.06.3-.17.41l-.82 1.1c-.1.1-.25.17-.41.17-.31 0-.57-.26-.57-.57V3.71L8.17.98A.566.566 0 018 .57c0-.31.26-.57.57-.57h6.91z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/th-list.js
/* harmony default export */ var th_list = (["M15 1H1c-.6 0-1 .5-1 1v12c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1zm-1 12H2v-2h12v2zm0-3H2V8h12v2zm0-3H2V5h12v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/third-party.js
/* harmony default export */ var third_party = (["M4.448 9h.573c.025-.044.051-.088.079-.13A9.43 9.43 0 015.183 8h-.995A10.424 10.424 0 014 6c0-.717.068-1.391.188-2h3.624c.065.33.114.678.146 1.042A3.42 3.42 0 018.46 5c.168 0 .336.013.502.037A11.089 11.089 0 008.829 4h1.755c.148.338.26.696.33 1.068l.176-.028a2.74 2.74 0 01.5 0c.113 0 .225.006.336.018A6.001 6.001 0 000 6a6 6 0 005.672 5.991 4 4 0 01-.202-.441 1.842 1.842 0 01-.24-.26 1.82 1.82 0 01-.26-.55 2 2 0 01-.185-.92l-.012-.025A6.036 6.036 0 014.448 9zM3.171 8H1.416A4.983 4.983 0 011 6c0-.711.148-1.388.416-2h1.755C3.06 4.626 3 5.299 3 6c0 .701.06 1.374.17 2zM2 9H3.4c.18.618.412 1.167.685 1.62A5.015 5.015 0 012 9zm2.448-6h3.104a6.036 6.036 0 00-.325-.795C6.737 1.225 6.246 1 6 1c-.246 0-.737.225-1.227 1.205-.119.238-.228.504-.325.795zm4.15 0H10a5.016 5.016 0 00-2.086-1.62c.273.453.506 1.002.685 1.62zM4.087 1.38A6.834 6.834 0 003.401 3H2a5.015 5.015 0 012.086-1.62zM13.476 16s.118-.385-.172-1.046c-.228-.533-1.172-.915-2.015-1.257a22.113 22.113 0 01-.584-.243c-.808-.356-.816-.588-.825-.872-.002-.041-.003-.084-.007-.128v-.139c.314-.284.573-.669.745-1.115 0 0 .008-.023.008-.03.04-.1.071-.2.095-.3.212-.04.33-.27.377-.485.054-.093.149-.3.125-.547-.024-.307-.15-.453-.29-.515v-.054c0-.392-.04-.961-.11-1.33a2.16 2.16 0 00-.071-.308 2.283 2.283 0 00-.8-1.17C9.558 6.162 9.001 6 8.506 6c-.495 0-1.052.162-1.445.462A2.294 2.294 0 006.19 7.93c-.07.369-.11.946-.11 1.338v.046c-.14.062-.274.208-.306.523a1 1 0 00.126.547c.047.215.173.453.393.492.02.083.05.172.078.253l.016.047c0 .008.008.015.008.015v.008c.172.454.44.846.761 1.115a.804.804 0 01-.004.072c-.002.02-.004.04-.004.06l-.007.105c-.016.287-.028.523-.848.894-.176.078-.37.156-.568.237-.847.345-1.802.735-2.031 1.27C3.41 15.616 3.52 16 3.52 16h9.955zm2.503-1.25h-1.413a4.05 4.05 0 00-.116-.294c-.192-.445-.52-.753-.787-.955-.278-.21-.59-.38-.873-.517a21.373 21.373 0 00-1.122-.483l-.02-.008-.235-.097c.144-.23.266-.476.366-.731.089-.087.162-.177.22-.26.132-.192.217-.391.271-.568.117-.251.24-.64.199-1.105a2.025 2.025 0 00-.299-.925 8.626 8.626 0 00-.116-1.083 3.426 3.426 0 00-.104-.45 3.476 3.476 0 00-.661-1.246A2.18 2.18 0 0111.63 6c.432 0 .92.141 1.264.404.33.256.584.612.7 1.023.028.087.049.182.062.27.062.322.097.82.097 1.163v.048c.123.053.233.181.254.45a.82.82 0 01-.11.478c-.041.189-.144.391-.33.425a1.92 1.92 0 01-.082.262c0 .007-.007.027-.007.027-.151.39-.378.727-.653.976v.121c.004.038.005.075.006.111v.002c.008.247.015.451.722.762.158.07.332.14.51.213.739.299 1.565.634 1.764 1.1.254.579.151.915.151.915z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/thumbs-down.js
/* harmony default export */ var thumbs_down = (["M2 2H0v7h2c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm13.99 4.38c.08-.58-.44-1.02-1.15-1.05-.25-.01-.52-.03-.81-.05.02 0 .05-.01.07-.01.7-.1 1.34-.49 1.41-1.07.06-.58-.46-.97-1.17-1.04-.25-.02-.52-.04-.79-.06.47-.15.84-.42.87-.93.04-.58-.79-1.03-1.5-1.09-.27-.02-.51-.04-.73-.05h-.09c-.23-.02-.43-.02-.62-.03C8.35.95 5.66 1.47 4 2.51v6c2.14 1.29 4.76 3.59 4.21 5.51-.18.59.31 1.05.98.98.81-.09 1.37-.91 1.4-1.78.04-1-.15-2.01-.5-2.91-.04-.25.01-.5.37-.53.49-.03 1.11-.06 1.59-.08.26 0 .51-.01.75-.02h.01c.41-.02.8-.05 1.13-.09.7-.09 1.35-.47 1.43-1.05.08-.58-.44-.97-1.15-1.05-.05-.01-.11-.01-.16-.02.17-.01.33-.03.49-.05.72-.08 1.37-.46 1.44-1.04z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/thumbs-up.js
/* harmony default export */ var thumbs_up = (["M15.99 9.62c-.08-.58-.73-.96-1.43-1.05-.15-.02-.32-.04-.49-.05.06-.01.11-.01.16-.02.71-.08 1.23-.47 1.15-1.05-.08-.58-.73-.96-1.43-1.05-.34-.04-.72-.07-1.13-.09h-.01c-.24-.01-.49-.02-.75-.02-.48-.02-1.11-.04-1.59-.08-.36-.03-.41-.28-.37-.53.35-.9.54-1.91.5-2.91-.04-.85-.6-1.68-1.41-1.77-.67-.07-1.16.39-.99.98C8.76 3.91 6.13 6.2 4 7.49v6c1.66 1.03 4.35 1.56 7.48 1.5.19 0 .39-.01.62-.02h.09c.22-.01.46-.03.73-.05.71-.06 1.54-.51 1.5-1.09-.03-.51-.4-.79-.87-.93.27-.02.54-.04.79-.06.71-.06 1.24-.45 1.17-1.04-.06-.58-.7-.97-1.41-1.07-.02 0-.05-.01-.07-.01.29-.02.57-.03.81-.05.71-.03 1.23-.47 1.15-1.05zM2 7H0v7h2c.55 0 1-.45 1-1V8c0-.56-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/tick.js
/* harmony default export */ var tick = (["M14 3c-.28 0-.53.11-.71.29L6 10.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l8-8A1.003 1.003 0 0014 3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/tick-circle.js
/* harmony default export */ var tick_circle = (["M8 16c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm4-11c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/time.js
/* harmony default export */ var time = (["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm1-6.41V4c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L9 7.59z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/timeline-area-chart.js
/* harmony default export */ var timeline_area_chart = (["M15 2.59L9.91 7.68 6.6 5.2l-.01.01C6.42 5.09 6.23 5 6 5c-.24 0-.44.09-.62.23v-.01L3 7.12V11h12V2.59zM15 12H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/timeline-bar-chart.js
/* harmony default export */ var timeline_bar_chart = (["M8 12h1c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1zm5 0h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1zm2 1H2c-.55 0-1 .45-1 1s.45 1 1 1h13c.55 0 1-.45 1-1s-.45-1-1-1zM3 12h1c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/timeline-events.js
/* harmony default export */ var timeline_events = (["M8 11H7v1h1v-1zm-4 0H3v1h1v-1zm7-8c.6 0 1-.5 1-1V1c0-.5-.4-1-1-1s-1 .5-1 1v1c0 .5.5 1 1 1zM4 3c.5 0 1-.5 1-1V1c0-.5-.5-1-1-1S3 .5 3 1v1c0 .5.5 1 1 1zm10-2h-1v1c0 1.1-.9 2-2 2s-2-.9-2-2V1H6v1c0 1.1-.9 2-2 2s-2-.9-2-2V1H1c-.5 0-1 .5-1 1v12c0 .5.5 1 1 1h13c.6 0 1-.5 1-1V2c0-.5-.4-1-1-1zM5 13H2v-3h3v3zm0-4H2V6h3v3zm4 4H6v-3h3v3zm0-4H6V6h3v3zm4 4h-3v-3h3v3zm0-4h-3V6h3v3zm-1-2h-1v1h1V7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/timeline-line-chart.js
/* harmony default export */ var timeline_line_chart = (["M15 12H2V9.41l3-3L8.29 9.7c.18.19.43.3.71.3s.53-.11.71-.29l6-6a1.003 1.003 0 00-1.42-1.42L9 7.59l-3.29-3.3C5.53 4.11 5.28 4 5 4s-.53.11-.71.29L2 6.59V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/tint.js
/* harmony default export */ var tint = (["M7.88 1s-4.9 6.28-4.9 8.9c.01 2.82 2.34 5.1 4.99 5.1 2.65-.01 5.03-2.3 5.03-5.13C12.99 7.17 7.88 1 7.88 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/torch.js
/* harmony default export */ var torch = (["M5 15c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H5v1zm7-15H4c-.55 0-1 .45-1 1v1h10V1c0-.55-.45-1-1-1zM5 7v6h6V7l2-4H3l2 4zm2 0c0-.55.45-1 1-1s1 .45 1 1v2c0 .55-.45 1-1 1s-1-.45-1-1V7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/tractor.js
/* harmony default export */ var tractor = (["M3.5 9a3.5 3.5 0 110 7 3.5 3.5 0 010-7zm9.5 1a3 3 0 110 6 3 3 0 010-6zm-9.5 1a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm9.5 1a1 1 0 100 2 1 1 0 000-2zM5 0c1.46 0 2.527.668 3 2l.815 3.255a78.9 78.9 0 012.186.195L11 2h2l.001 3.688c.698.095 1.37.198 2.013.312.623.11.986.479.986 1v3.354a4.001 4.001 0 00-6.873 1.645H7.999l-.026-.002A4.5 4.5 0 00.659 9.01l-.654.001v-.829C.003 7.386.002 6.423 0 6.022 0 5.5.376 4.99 1 4.99V1a1 1 0 011-1h3zm1 2H3v2.99c1.29.024 2.554.069 3.781.135L6 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/train.js
/* harmony default export */ var train = (["M13 14h-1l1 2H3l1-2H3c-1.1 0-2-.9-2-2V2C1 .9 4.13 0 8 0s7 .9 7 2v10c0 1.1-.9 2-2 2zm-2-2h2v-2h-2v2zM9 7h4V3H9v4zm-6 5h2v-2H3v2zm0-5h4V3H3v4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/translate.js
/* harmony default export */ var translate = (["M15.89 14.56l-3.99-8h-.01c-.17-.33-.5-.56-.89-.56s-.72.23-.89.56h-.01L9 8.76 7.17 7.38l.23-.18C8.37 6.47 9 5.31 9 4V3h1c.55 0 1-.45 1-1s-.45-1-1-1H7c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H1c-.55 0-1 .45-1 1s.45 1 1 1h6v1c0 .66-.32 1.25-.82 1.61l-.68.51-.68-.5C4.32 5.25 4 4.66 4 4H2c0 1.31.63 2.47 1.6 3.2l.23.17L1.4 9.2l.01.01C1.17 9.4 1 9.67 1 10c0 .55.45 1 1 1 .23 0 .42-.09.59-.21l.01.01 2.9-2.17 2.6 1.95-1.99 3.98h.01c-.07.13-.12.28-.12.44 0 .55.45 1 1 1 .39 0 .72-.23.89-.56h.01L8.62 14h4.76l.72 1.45h.01c.17.32.5.55.89.55.55 0 1-.45 1-1 0-.16-.05-.31-.11-.44zM9.62 12L11 9.24 12.38 12H9.62z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/trash.js
/* harmony default export */ var trash = (["M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/tree.js
/* harmony default export */ var tree = (["M9 11.857V16H7v-4.143L1 13l3.885-4.44L3 9l3.07-4.297L5 5l3-5 3 5-1.07-.297L13 9l-1.885-.44L15 13l-6-1.143z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/trending-down.js
/* harmony default export */ var trending_down = (["M15 7c-.55 0-1 .45-1 1v.59l-4.29-4.3A.997.997 0 009 4c-.16 0-.31.05-.44.11V4.1L5 5.88 1.45 4.11v.01C1.31 4.05 1.16 4 1 4c-.55 0-1 .45-1 1 0 .39.23.72.56.89v.01l4 2v-.01c.13.06.28.11.44.11s.31-.05.44-.11v.01L8.8 6.22 12.59 10H12c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/trending-up.js
/* harmony default export */ var trending_up = (["M15 4h-3c-.55 0-1 .45-1 1s.45 1 1 1h.59L8.8 9.78 5.45 8.11v.01C5.31 8.05 5.16 8 5 8s-.31.05-.44.11V8.1l-4 2v.01c-.33.17-.56.5-.56.89 0 .55.45 1 1 1 .16 0 .31-.05.44-.11v.01L5 10.12l3.55 1.78v-.01c.14.06.29.11.45.11.28 0 .53-.11.71-.29L14 7.41V8c0 .55.45 1 1 1s1-.45 1-1V5c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/truck.js
/* harmony default export */ var truck = (["M12.5 0a.5.5 0 01.5.5V9a1 1 0 011 1v2h.5a.5.5 0 01.5.5v1a.5.5 0 01-.5.5H13v1a1 1 0 01-2 0v-1H5v1a1 1 0 01-2 0v-1H1.5a.5.5 0 01-.5-.5v-1a.5.5 0 01.5-.5H2v-2a1 1 0 011-1V.5a.5.5 0 011 0V3a2 2 0 012-2h4a2 2 0 012 2V.5a.5.5 0 01.5-.5zM9 8H7a1 1 0 00-1 1v2a1 1 0 001 1h2a1 1 0 001-1V9a1 1 0 00-1-1zm3.5 3h-1a.5.5 0 100 1h1a.5.5 0 100-1zm-8 0h-1a.5.5 0 100 1h1a.5.5 0 100-1zM9 9a.5.5 0 01.5.5v1l-.008.09A.5.5 0 019 11H7l-.09-.008a.5.5 0 01-.41-.492v-1l.008-.09A.5.5 0 017 9zm2-5H5v2h6V4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/two-columns.js
/* harmony default export */ var two_columns = (["M3.99-.01h-3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-14c0-.55-.45-1-1-1zm11.71 7.3l-2-2a1.003 1.003 0 00-1.71.71v4a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71s-.11-.53-.29-.71zM9.99-.01h-3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-14c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/unarchive.js
/* harmony default export */ var unarchive = (["M13.382 0a1 1 0 01.894.553L16 4v11a1 1 0 01-1 1H1a1 1 0 01-1-1V4L1.724.553A1 1 0 012.618 0h10.764zM8 6c-.28 0-.53.11-.71.29l-2 2-.084.096A1.003 1.003 0 006.71 9.71l.29-.3V12l.007.116c.058.496.482.884.993.884.55 0 1-.45 1-1V9.41l.29.29.081.076A.97.97 0 0010 10a1.003 1.003 0 00.71-1.71l-2-2-.096-.084A1.002 1.002 0 008 6zm5-4H3L2 4h12l-1-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/underline.js
/* harmony default export */ var underline = (["M8 14c2.8 0 5-2.2 5-5V3c0-.6-.4-1-1-1s-1 .4-1 1v6c0 1.7-1.3 3-3 3s-3-1.3-3-3V3c0-.6-.4-1-1-1s-1 .4-1 1v6c0 2.8 2.2 5 5 5zM13.5 15h-11c-.3 0-.5.2-.5.5s.2.5.5.5h11c.3 0 .5-.2.5-.5s-.2-.5-.5-.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/undo.js
/* harmony default export */ var undo = (["M4 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm7-7H3.41L4.7 2.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C.11 4.47 0 4.72 0 5c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L3.41 6H11c1.66 0 3 1.34 3 3s-1.34 3-3 3H7v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/ungroup-objects.js
/* harmony default export */ var ungroup_objects = (["M3.5 5C1.57 5 0 6.57 0 8.5S1.57 12 3.5 12 7 10.43 7 8.5 5.43 5 3.5 5zm9 0C10.57 5 9 6.57 9 8.5s1.57 3.5 3.5 3.5S16 10.43 16 8.5 14.43 5 12.5 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/unknown-vehicle.js
/* harmony default export */ var unknown_vehicle = (["M10.507 9.75v-3.5c0-.089.023-.171.051-.25h-7.55c-.176 0-.061-.824 0-1l.729-1.63c.06-.177.095-.37.27-.37h4.5V1.01c-.166-.003-.32-.01-.5-.01-2.72 0-4.036.402-4.036.402-.508.155-1.079.711-1.268 1.237L1.94 4.756H.887c-.483 0-.88.423-.88.939s.397.939.88.939h.376L1.008 7c-.034.685 0 1.436 0 2v5c0 .657.384 1 1 1s1-.343 1-1v-1h10v1c0 .657.383 1 1 1s1-.343 1-1v-3.5h-3.75a.75.75 0 01-.75-.75zm-5.5.25h-2V8h2v2zm11-4.305zM15.34.826a2.807 2.807 0 00-.932-.598c-.386-.16-.868-.241-1.445-.241-.447 0-.851.076-1.213.228-.362.153-.67.364-.926.636s-.456.592-.598.963a3.535 3.535 0 00-.218 1.144V3h1.789c.003-.208.023-.405.069-.588.049-.193.124-.362.225-.506.102-.144.232-.259.39-.345.159-.087.348-.13.567-.13.325 0 .58.09.762.272.183.18.275.46.275.839.008.222-.031.407-.116.555a1.654 1.654 0 01-.335.408 7.4 7.4 0 01-.452.37c-.162.123-.316.27-.463.438a2.556 2.556 0 00-.384.611c-.11.239-.177.535-.2.889V6h1.645v-.1c.032-.248.111-.453.237-.618.126-.164.27-.31.433-.438.163-.128.335-.255.518-.383a2.413 2.413 0 00.878-1.117c.102-.255.152-.58.152-.975A2.241 2.241 0 0015.34.826zM12.007 7v2h2V7h-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/unlock.js
/* harmony default export */ var unlock = (["M11.99-.01c-2.21 0-4 1.79-4 4v3h-7c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-7c0-.55-.45-1-1-1h-3v-3c0-1.1.9-2 2-2s2 .9 2 2v1c0 .55.45 1 1 1s1-.45 1-1v-1c0-2.21-1.79-4-4-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/unpin.js
/* harmony default export */ var unpin = (["M9.39 1c-.5.5-.4 1.48.15 2.53L4.38 7.54C2.85 6.5 1.52 6.07 1 6.59l3.5 3.5c-.02.02-1.4 2.8-1.4 2.8l2.8-1.4 3.5 3.5c.53-.53.1-1.86-.95-3.38l4.02-5.16c1.04.55 2.01.65 2.51.14L9.39 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/unresolve.js
/* harmony default export */ var unresolve = (["M11 3c-.55 0-1.07.09-1.57.26a6.46 6.46 0 010 9.48c.5.17 1.02.26 1.57.26 2.76 0 5-2.24 5-5s-2.24-5-5-5zM9.78 9.38l.09-.27c.08-.36.13-.73.13-1.11s-.05-.75-.13-1.11l-.09-.27a5.32 5.32 0 00-.29-.79l-.12-.21c-.14-.27-.31-.52-.51-.76a.7.7 0 00-.08-.1c-.24-.27-.49-.52-.78-.74-.43-.32-.92-.58-1.45-.75l.01-.01c-.1-.03-.2-.05-.3-.08-.12-.03-.23-.07-.36-.09A5.28 5.28 0 005 3C2.24 3 0 5.24 0 8s2.24 5 5 5c.31 0 .61-.04.9-.09.12-.02.24-.06.36-.09.1-.03.21-.04.3-.08l-.01-.01c.88-.29 1.64-.8 2.22-1.49.03-.03.06-.07.09-.1.19-.24.36-.49.51-.76.04-.07.08-.14.11-.21.13-.25.23-.52.3-.79z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/updated.js
/* harmony default export */ var updated = (["M8 0a7.95 7.95 0 00-6 2.74V1c0-.55-.45-1-1-1S0 .45 0 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.54C4.64 2.78 6.22 2 8 2c3.31 0 6 2.69 6 6 0 2.61-1.67 4.81-4 5.63-.63.22-1.29.37-2 .37-3.31 0-6-2.69-6-6 0-.55-.45-1-1-1s-1 .45-1 1c0 4.42 3.58 8 8 8 .34 0 .67-.03 1-.07.02 0 .04-.01.06-.01C12.98 15.4 16 12.06 16 8c0-4.42-3.58-8-8-8zm3 5c-.28 0-.53.11-.71.29L7 8.58 5.71 7.29a1.003 1.003 0 00-1.42 1.42l2 2c.18.18.43.29.71.29.28 0 .53-.11.71-.29l4-4A1.003 1.003 0 0011 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/upload.js
/* harmony default export */ var upload = (["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm3 8c-.28 0-.53-.11-.71-.29L9 6.41V12c0 .55-.45 1-1 1s-1-.45-1-1V6.41l-1.29 1.3a1.003 1.003 0 01-1.42-1.42l3-3C7.47 3.11 7.72 3 8 3s.53.11.71.29l3 3A1.003 1.003 0 0111 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/user.js
/* harmony default export */ var user = (["M7.99-.01A7.998 7.998 0 00.03 8.77c.01.09.03.18.04.28.02.15.04.31.07.47.02.11.05.22.08.34.03.13.06.26.1.38.04.12.08.25.12.37.04.11.08.21.12.32a6.583 6.583 0 00.3.65c.07.14.14.27.22.4.04.07.08.13.12.2l.27.42.1.13a7.973 7.973 0 003.83 2.82c.03.01.05.02.07.03.37.12.75.22 1.14.29l.2.03c.39.06.79.1 1.2.1s.81-.04 1.2-.1l.2-.03c.39-.07.77-.16 1.14-.29.03-.01.05-.02.07-.03a8.037 8.037 0 003.83-2.82c.03-.04.06-.08.09-.13.1-.14.19-.28.28-.42.04-.07.08-.13.12-.2.08-.13.15-.27.22-.41.04-.08.08-.17.12-.26.06-.13.11-.26.17-.39.04-.1.08-.21.12-.32.04-.12.08-.24.12-.37.04-.13.07-.25.1-.38.03-.11.06-.22.08-.34.03-.16.05-.31.07-.47.01-.09.03-.18.04-.28.02-.26.04-.51.04-.78-.03-4.41-3.61-7.99-8.03-7.99zm0 14.4c-1.98 0-3.75-.9-4.92-2.31.67-.36 1.49-.66 2.14-.95 1.16-.52 1.04-.84 1.08-1.27.01-.06.01-.11.01-.17-.41-.36-.74-.86-.96-1.44v-.01c0-.01-.01-.02-.01-.02-.05-.13-.09-.26-.12-.39-.28-.05-.44-.35-.5-.63-.06-.11-.18-.38-.15-.69.04-.41.2-.59.38-.67v-.06c0-.51.05-1.24.14-1.72.02-.13.05-.26.09-.39.17-.59.53-1.12 1.01-1.49.49-.38 1.19-.59 1.82-.59.62 0 1.32.2 1.82.59.48.37.84.9 1.01 1.49.04.13.07.26.09.4.09.48.14 1.21.14 1.72v.07c.18.08.33.26.37.66.03.31-.1.58-.16.69-.06.27-.21.57-.48.62-.03.13-.07.26-.12.38 0 .01-.01.04-.01.04-.21.57-.54 1.06-.94 1.42 0 .06.01.13.01.19.04.43-.12.75 1.05 1.27.65.29 1.47.6 2.14.95a6.415 6.415 0 01-4.93 2.31z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/variable.js
/* harmony default export */ var variable = (["M3.94 3.15c.47-.66 1.05-1.24 1.76-1.73l.13-.4c-1.11.45-2.05 1.01-2.84 1.7-1.02.88-1.8 1.9-2.32 3.05C.22 6.76 0 7.75 0 8.75c0 1.75.66 3.5 1.99 5.25l.13-.42c-.39-.94-.59-1.82-.59-2.63 0-1.28.22-2.64.67-4.1.45-1.45 1.03-2.69 1.74-3.7zm7.51 6.41l-.27-.15c-.3.41-.52.66-.66.77-.09.06-.21.1-.33.1-.15 0-.3-.1-.45-.28-.25-.33-.59-1.22-1.01-2.69.38-.65.69-1.08.95-1.28.19-.15.39-.22.59-.22.08 0 .22.03.43.08.2.06.39.08.54.08.22 0 .4-.07.54-.22.15-.15.22-.34.22-.57 0-.25-.07-.45-.22-.59-.15-.15-.35-.22-.63-.22-.24 0-.47.06-.69.17-.21.11-.49.36-.82.74-.25.28-.61.78-1.1 1.48a6.72 6.72 0 00-.97-2.38l-2.59.44-.05.27c.19-.04.36-.06.49-.06.26 0 .47.11.64.33.26.34.63 1.38 1.11 3.12-.37.49-.63.81-.77.96-.23.24-.41.4-.56.47-.11.06-.24.09-.39.09-.11 0-.29-.06-.53-.18-.17-.07-.32-.11-.45-.11-.25 0-.46.08-.62.24-.16.16-.24.37-.24.61 0 .23.08.42.23.57.15.15.35.22.61.22.25 0 .48-.05.7-.15.22-.1.49-.32.82-.65.33-.33.78-.86 1.36-1.59.22.69.42 1.19.58 1.51.16.31.35.54.56.68.21.14.47.21.79.21.31 0 .62-.11.93-.33.4-.29.82-.77 1.26-1.47zm2.56-8.54l-.12.42c.39.95.59 1.82.59 2.64 0 1.09-.17 2.26-.5 3.51-.26.96-.6 1.87-1.02 2.71-.42.85-.82 1.51-1.21 1.98-.39.48-.87.92-1.44 1.32l-.14.4c1.11-.45 2.05-1.02 2.84-1.7 1.03-.89 1.81-1.91 2.33-3.05.44-.99.66-1.99.66-3 0-1.73-.66-3.48-1.99-5.23z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/vertical-bar-chart-asc.js
/* harmony default export */ var vertical_bar_chart_asc = (["M6 7c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1s1-.45 1-1V8c0-.55-.45-1-1-1zM2 9c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1zm8-5c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1s1-.45 1-1V5c0-.55-.45-1-1-1zm4-4c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/vertical-bar-chart-desc.js
/* harmony default export */ var vertical_bar_chart_desc = (["M6 4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1s1-.45 1-1V5c0-.55-.45-1-1-1zM2 0c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm8 7c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1s1-.45 1-1V8c0-.55-.45-1-1-1zm4 2c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/vertical-distribution.js
/* harmony default export */ var vertical_distribution = (["M1 2h14c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1s.45 1 1 1zm14 11H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM3 5c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1H3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/vertical-inbetween.js
/* harmony default export */ var vertical_inbetween = (["M16 0H0v1a1 1 0 001 1h14a1 1 0 001-1V0zM0 15v1h16v-1a1 1 0 00-1-1H1a1 1 0 00-1 1zM8.707 3.293a1 1 0 00-1.414 0l-2 2a1 1 0 001.414 1.414L8 5.414l1.293 1.293a1 1 0 001.414-1.414l-2-2zm-2 6a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l2-2a1 1 0 00-1.414-1.414L8 10.586 6.707 9.293z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/video.js
/* harmony default export */ var video = (["M15 2H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM5 11V5l6 3-6 3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/virus.js
/* harmony default export */ var virus = (["M11.918 11.107l.737.737.052-.051A1 1 0 0114.2 13.12l-.078.087-1.414 1.414a1 1 0 01-1.492-1.327l.029-.033-.863-.863c-.426.231-.89.402-1.38.502L9 14l.117.007A1 1 0 019 16H7l-.117-.007A1 1 0 017 14v-1.1a4.967 4.967 0 01-1.447-.539l-.846.846.078.087a1 1 0 01-1.492 1.327l-1.414-1.414-.078-.087a1 1 0 011.492-1.327l.744-.744A4.986 4.986 0 013.23 9.5H2a1 1 0 01-1.993.117L0 9.5v-2a1 1 0 011.993-.117L2 7.5h1.025a4.973 4.973 0 01.905-2.405l-.512-.513-.125.125A1 1 0 011.8 3.38l.078-.087 1.414-1.414a1 1 0 011.529 1.277l.573.575a4.969 4.969 0 011.604-.63V2l-.116-.007a1 1 0 010-1.986L7 0h2a1 1 0 01.117 1.993L9 2l.001 1.1c.639.13 1.233.381 1.757.73l.535-.537-.078-.087a1 1 0 011.492-1.327l1.414 1.414.078.087a1 1 0 01-1.492 1.327l-.535.536a4.97 4.97 0 01.803 2.257H14l.007-.117A1 1 0 0116 7.5v2l-.007.117A1 1 0 0114 9.5h-1.229a4.987 4.987 0 01-.853 1.607zM10 9a1 1 0 100 2 1 1 0 000-2zM6.5 5a1.5 1.5 0 100 3 1.5 1.5 0 000-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/volume-down.js
/* harmony default export */ var volume_down = (["M9 2c-.28 0-.53.11-.71.29L5.59 5H3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h2.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm3.57 1.44l-1.59 1.22C11.62 5.61 12 6.76 12 8s-.38 2.39-1.02 3.34l1.59 1.22C13.47 11.27 14 9.7 14 8c0-1.7-.53-3.27-1.43-4.56z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/volume-off.js
/* harmony default export */ var volume_off = (["M11 2c-.28 0-.53.11-.71.29L7.59 5H5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h2.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/volume-up.js
/* harmony default export */ var volume_up = (["M7 1.86c-.28 0-.53.11-.71.29l-2.7 2.71H1c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h2.59l2.71 2.71a1.003 1.003 0 001.71-.71v-10c-.01-.55-.46-1-1.01-1zm6.74-.99l-1.58 1.22A9.985 9.985 0 0114 7.86c0 2.16-.69 4.15-1.85 5.78l1.58 1.22c1.42-1.97 2.26-4.38 2.26-7 .01-2.61-.84-5.02-2.25-6.99zM8.98 4.52C9.62 5.48 10 6.63 10 7.86s-.38 2.39-1.02 3.34l1.59 1.22c.9-1.29 1.43-2.86 1.43-4.56 0-1.7-.53-3.27-1.43-4.56L8.98 4.52z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/walk.js
/* harmony default export */ var walk = (["M13 8h-2c-.16 0-.31-.05-.44-.11v.01l-1.02-.51-.37 1.86 1.38.92-.01.02c.27.17.46.46.46.81v4c0 .55-.45 1-1 1s-1-.45-1-1v-3.46l-1.27-.85-1.8 4.67h-.01A.98.98 0 015 16c-.55 0-1-.45-1-1 0-.13.03-.25.07-.36h-.01L7.39 6H5.62l-.73 1.45h-.01C4.72 7.77 4.39 8 4 8c-.55 0-1-.45-1-1 0-.16.05-.31.11-.44H3.1l1-2h.01c.17-.33.5-.56.89-.56h3.16l.29-.75C8.17 2.9 8 2.47 8 2c0-1.1.9-2 2-2s2 .9 2 2c0 1-.73 1.82-1.69 1.97l-.5 1.32 1.43.71H13c.55 0 1 .45 1 1s-.45 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/warning-sign.js
/* harmony default export */ var warning_sign = (["M15.84 13.5l.01-.01-7-12-.01.01c-.17-.3-.48-.5-.85-.5s-.67.2-.85.5l-.01-.01-7 12 .01.01c-.09.15-.15.31-.15.5 0 .55.45 1 1 1h14c.55 0 1-.45 1-1 0-.19-.06-.35-.15-.5zm-6.85-.51h-2v-2h2v2zm0-3h-2v-5h2v5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/waterfall-chart.js
/* harmony default export */ var waterfall_chart = (["M8 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm-4 4h1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1zm7-6c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1s-1 .45-1 1v1c0 .55.45 1 1 1zm4-3h-1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 10H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/waves.js
/* harmony default export */ var waves = (["M3 1a1 1 0 01.894.553c.102.202.393.607.779.957.419.381.72.49.827.49.108 0 .408-.109.827-.49.386-.35.677-.755.779-.957a1 1 0 011.788 0c.102.202.393.607.779.957.419.381.72.49.827.49.108 0 .408-.109.827-.49.386-.35.677-.755.779-.957a1 1 0 011.788 0c.173.344.38.75.637 1.072.277.347.437.375.469.375a1 1 0 110 2c-.968 0-1.642-.64-2.03-1.125a4.755 4.755 0 01-.076-.097 6.093 6.093 0 01-.221.212C12.175 4.442 11.393 5 10.5 5c-.892 0-1.675-.558-2.173-1.01A6.243 6.243 0 018 3.67c-.105.11-.214.217-.327.32C7.175 4.442 6.393 5 5.5 5c-.892 0-1.675-.558-2.173-1.01a6.119 6.119 0 01-.221-.212l-.075.097C2.64 4.36 1.968 5 1 5a1 1 0 010-2c.032 0 .191-.028.47-.375.256-.321.463-.728.636-1.072A1 1 0 013 1zm0 5a1 1 0 01.894.553c.102.202.393.607.779.957.419.381.72.49.827.49.108 0 .408-.109.827-.49.386-.35.677-.755.779-.957a1 1 0 011.788 0c.102.202.393.607.779.957.419.381.72.49.827.49.108 0 .408-.109.827-.49.386-.35.677-.755.779-.957a1 1 0 011.788 0c.173.344.38.75.637 1.072.277.347.437.375.469.375a1 1 0 110 2c-.968 0-1.642-.639-2.03-1.125a4.726 4.726 0 01-.076-.097 6.093 6.093 0 01-.221.212c-.498.452-1.28 1.01-2.173 1.01-.892 0-1.675-.558-2.173-1.01A6.243 6.243 0 018 8.67c-.105.11-.214.217-.327.32C7.175 9.442 6.393 10 5.5 10c-.892 0-1.675-.558-2.173-1.01a6.119 6.119 0 01-.221-.212l-.075.097C2.64 9.36 1.968 10 1 10a1 1 0 010-2c.032 0 .191-.028.47-.375.256-.321.463-.728.636-1.072A1 1 0 013 6zm.894 5.553a1 1 0 00-1.788 0c-.173.344-.38.75-.637 1.072-.278.347-.437.375-.469.375a1 1 0 100 2c.968 0 1.642-.639 2.03-1.125a4.9 4.9 0 00.076-.097c.072.073.146.143.221.212.498.452 1.28 1.01 2.173 1.01.892 0 1.675-.558 2.173-1.01.113-.103.222-.21.327-.32.105.11.214.217.327.32.498.452 1.28 1.01 2.173 1.01.892 0 1.675-.558 2.173-1.01.075-.069.149-.14.221-.212a4.9 4.9 0 00.075.097C13.36 14.36 14.032 15 15 15a1 1 0 100-2c-.032 0-.191-.028-.47-.375-.256-.321-.463-.728-.636-1.072a1 1 0 00-1.788 0c-.102.202-.393.607-.779.957-.419.381-.72.49-.827.49-.108 0-.408-.109-.827-.49-.386-.35-.677-.755-.779-.957a1 1 0 00-1.788 0c-.102.202-.393.607-.779.957-.419.381-.72.49-.827.49-.108 0-.408-.109-.827-.49-.386-.35-.677-.755-.779-.957z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/widget.js
/* harmony default export */ var widget = (["M13 11h2V5h-2v6zM3 5H1v6h2V5zm11-1c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM5 3h6V1H5v2zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm3 15h6v-2H5v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/widget-button.js
/* harmony default export */ var widget_button = (["M1 3h14c.55 0 1 .45 1 1v8c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1zm1 2v6h12V5H2zm3 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm3 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm3 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/widget-footer.js
/* harmony default export */ var widget_footer = (["M14 0H2c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H3v-3h10v3zm0-4H3V2h10v8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/widget-header.js
/* harmony default export */ var widget_header = (["M14 0H2c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H3V6h10v8zm0-9H3V2h10v3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/wind.js
/* harmony default export */ var wind = (["M10 4a2 2 0 112 2H4a1 1 0 000 2h8a4 4 0 10-4-4 1 1 0 002 0zM1 9a1 1 0 100 2h7.5a1.5 1.5 0 010 3c-.749 0-1.386-.538-1.52-1.199a1 1 0 10-1.96.398C5.35 14.82 6.83 16 8.5 16a3.5 3.5 0 100-7H1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/wrench.js
/* harmony default export */ var wrench = (["M15.83 3.7l-3.06 3.05-2.84-.7-.7-2.83L12.29.17a5.004 5.004 0 00-4.83 1.29 4.967 4.967 0 00-1.12 5.36L.58 12.58c-.36.36-.58.86-.58 1.41 0 1.1.9 2 2 2 .55 0 1.05-.22 1.41-.59l5.77-5.77c1.79.69 3.91.33 5.35-1.12 1.32-1.3 1.74-3.15 1.3-4.81z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/zoom-in.js
/* harmony default export */ var zoom_in = (["M7.99 5.99v-2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1h-2zm7.56 7.44l-2.67-2.68a6.94 6.94 0 001.11-3.76c0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.42 3.76-1.11l2.68 2.67a1.498 1.498 0 102.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/zoom-out.js
/* harmony default export */ var zoom_out = (["M3.99 5.99c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1h-6zm11.56 7.44l-2.67-2.68a6.94 6.94 0 001.11-3.76c0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.42 3.76-1.11l2.68 2.67a1.498 1.498 0 102.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/zoom-to-fit.js
/* harmony default export */ var zoom_to_fit = (["M11 10a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42L12.59 8 11.3 9.29c-.19.18-.3.43-.3.71zM1 5c.55 0 1-.45 1-1V2h2c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v3c0 .55.45 1 1 1zm4 1a1.003 1.003 0 00-1.71-.71l-2 2C1.11 7.47 1 7.72 1 8c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L3.41 8 4.7 6.71c.19-.18.3-.43.3-.71zm1-1c.28 0 .53-.11.71-.29L8 3.41 9.29 4.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-2-2C8.53 1.11 8.28 1 8 1s-.53.11-.71.29l-2 2A1.003 1.003 0 006 5zm9 6c-.55 0-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1zm0-11h-3c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zM4 14H2v-2c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1zm6-3c-.28 0-.53.11-.71.29L8 12.59 6.71 11.3A.965.965 0 006 11a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 0010 11z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/16px/paths/index.js
























































































































































































































































































































































































































































































































































































;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/add.js
/* harmony default export */ var paths_add = (["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm5-9h-4V5c0-.55-.45-1-1-1s-1 .45-1 1v4H5c-.55 0-1 .45-1 1s.45 1 1 1h4v4c0 .55.45 1 1 1s1-.45 1-1v-4h4c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/add-clip.js
/* harmony default export */ var paths_add_clip = (["M15 0a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0V6h-3a1 1 0 110-2h3V1a1 1 0 011-1zM1 4a1 1 0 00-1 1v4a1 1 0 002 0V6h3a1 1 0 000-2H1zM0 19a1 1 0 001 1h4a1 1 0 100-2H2v-3a1 1 0 10-2 0v4zm15 1h-4a1 1 0 110-2h3v-3a1 1 0 112 0v4a1 1 0 01-1 1zm-7-5a3 3 0 100-6 3 3 0 000 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/add-column-left.js
/* harmony default export */ var paths_add_column_left = (["M4 11h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1H8V7c0-.55-.45-1-1-1s-1 .45-1 1v2H4c-.55 0-1 .45-1 1s.45 1 1 1zM19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-7 18H2V2h10v16zm6 0h-5V2h5v16z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/add-column-right.js
/* harmony default export */ var paths_add_column_right = (["M10 11h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1h-2V7c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1zm9-11H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM7 18H2V2h5v16zm11 0H8V2h10v16z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/add-location.js
/* harmony default export */ var paths_add_location = (["M10 0a1 1 0 010 2 8 8 0 108 8 1 1 0 012 0c0 5.523-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0zm0 6a4 4 0 110 8 4 4 0 010-8zm6-6c.6 0 1 .4 1 1v2h2c.6 0 1 .4 1 1s-.4 1-1 1h-2v2c0 .6-.4 1-1 1s-1-.4-1-1V5h-2c-.6 0-1-.4-1-1 0-.5.4-1 1-1h2V1c0-.6.4-1 1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/add-row-bottom.js
/* harmony default export */ var paths_add_row_bottom = (["M19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2V8h16v10zm0-11H2V2h16v5zM7 14h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1h-2v-2c0-.55-.45-1-1-1s-1 .45-1 1v2H7c-.55 0-1 .45-1 1s.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/add-row-top.js
/* harmony default export */ var paths_add_row_top = (["M7 8h2v2c0 .55.45 1 1 1s1-.45 1-1V8h2c.55 0 1-.45 1-1s-.45-1-1-1h-2V4c0-.55-.45-1-1-1s-1 .45-1 1v2H7c-.55 0-1 .45-1 1s.45 1 1 1zm12-8H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2v-5h16v5zm0-6H2V2h16v10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/add-to-artifact.js
/* harmony default export */ var paths_add_to_artifact = (["M13 12H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zM1 6h9c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm12 2H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm6-4h-2V2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V6h2c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/add-to-folder.js
/* harmony default export */ var paths_add_to_folder = (["M.01 10V6H20v10c0 .55-.45 1-1 1H9.995v-3.99C9.965 11.332 8.635 10 6.987 10H.01zM19 3c.55 0 1 .45.99 1v1H0V2c0-.55.45-1 1-1h5.997c.28 0 .53.11.71.29L9.414 3H19zM6.987 12c.55 0 .999.45 1.009 1.01v5c0 .55-.45 1-1 1s-.999-.45-.999-1v-2.59l-4.288 4.29a1.003 1.003 0 01-1.42-1.42L4.579 14H1.989c-.55 0-1-.45-1-1s.45-1 1-1h4.998z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/aimpoints-target.js
/* harmony default export */ var paths_aimpoints_target = (["M2.296 12.163a4.492 4.492 0 00-1.792.98A9.99 9.99 0 010 10C0 4.477 4.477 0 10 0a9.99 9.99 0 013.143.504 4.492 4.492 0 00-.98 1.792 8 8 0 00-9.867 9.867zM18 10c0-.75-.103-1.475-.296-2.163a4.491 4.491 0 001.792-.98C19.823 7.847 20 8.903 20 10c0 5.523-4.477 10-10 10a9.992 9.992 0 01-3.142-.504 4.491 4.491 0 00.98-1.792A8 8 0 0018 10zM19 3.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zM6 16.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z", "M10 4a1 1 0 00-1 1v3a1 1 0 002 0V5a1 1 0 00-1-1zM11 10a1 1 0 011-1h3a1 1 0 010 2h-3a1 1 0 01-1-1zM4 10a1 1 0 011-1h3a1 1 0 010 2H5a1 1 0 01-1-1zM9 12a1 1 0 012 0v3a1 1 0 01-2 0v-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/airplane.js
/* harmony default export */ var paths_airplane = (["M20 2c0-1.1-.9-2-2-2-.55 0-1.05.22-1.41.59l-4.84 4.84L2 1 1 3l7.53 5.64L4.17 13H1l-1 1 4 2 2 4 1-1v-3.17l4.36-4.36L17 19l2-1-4.43-9.74 4.84-4.84c.37-.37.59-.87.59-1.42z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/align-center.js
/* harmony default export */ var paths_align_center = (["M5 5c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1H5zM1 3h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm12 12c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1h6zm4 2H3c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm2-8H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/align-justify.js
/* harmony default export */ var paths_align_justify = (["M1 3h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm18 14H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0-12H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/align-left.js
/* harmony default export */ var paths_align_left = (["M1 7h10c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm0-4h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 14H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm4-8H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM1 15h6c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/align-right.js
/* harmony default export */ var paths_align_right = (["M19 17H5c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM1 3h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm18 10h-6c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H9c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/alignment-bottom.js
/* harmony default export */ var paths_alignment_bottom = (["M12 16h4c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1h-4c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1zm7 2H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM4 16h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/alignment-horizontal-center.js
/* harmony default export */ var paths_alignment_horizontal_center = (["M19 9h-2V7c0-.55-.45-1-1-1h-4c-.55 0-1 .45-1 1v2H9V3c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v6H1c-.55 0-1 .45-1 1s.45 1 1 1h2v6c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-6h2v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/alignment-left.js
/* harmony default export */ var paths_alignment_left = (["M1 0C.45 0 0 .45 0 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm11 11H5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm7-8H5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/alignment-right.js
/* harmony default export */ var paths_alignment_right = (["M19 0c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm-4 11H8c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm0-8H1c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/alignment-top.js
/* harmony default export */ var paths_alignment_top = (["M8 4H4c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm11-4H1C.45 0 0 .45 0 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm-3 4h-4c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/alignment-vertical-center.js
/* harmony default export */ var paths_alignment_vertical_center = (["M17 3h-6V1c0-.55-.45-1-1-1S9 .45 9 1v2H3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h6v2H7c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1h-2V9h6c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/anchor.js
/* harmony default export */ var _20px_paths_anchor = (["M11 5.83a3.001 3.001 0 10-2 0V7H6v2h3v8.917a6.003 6.003 0 01-4.985-5.488l.278.278a1 1 0 001.414-1.414l-2-2a1 1 0 00-1.414 0l-2 2a1 1 0 101.414 1.414l.303-.303a8 8 0 0015.98 0l.303.303a1 1 0 001.414-1.414l-2-2a1 1 0 00-1.414 0l-2 2a1 1 0 001.414 1.414l.278-.278A6.003 6.003 0 0111 17.917V9h3V7h-3V5.83zM11 3a1 1 0 11-2 0 1 1 0 012 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/annotation.js
/* harmony default export */ var paths_annotation = (["M9.41 13.41l7.65-7.65-2.83-2.83-7.65 7.65 2.83 2.83zm10-10c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.83 1.64-1.66zM18 18H2V2h8.93l2-2H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7.07l-2 2V18zM4 16l4.41-1.59-2.81-2.79L4 16z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/antenna.js
/* harmony default export */ var paths_antenna = (["M2.01 10.758a8.025 8.025 0 001.01 3.204l.02.035c.034.058.061.117.084.178.163.44.054.951-.33 1.239-.435.328-1.059.242-1.342-.224a9.797 9.797 0 01-.221-.383 10 10 0 1117.48.106c-.269.474-.89.58-1.335.267-.392-.275-.518-.783-.37-1.228a1.19 1.19 0 01.078-.18l.019-.036A8.026 8.026 0 102.01 10.758zm4.272.772a1.464 1.464 0 01.091.32c.07.425-.052.87-.402 1.128-.44.325-1.068.235-1.316-.252a6 6 0 1110.734-.09c-.24.492-.867.593-1.312.275-.354-.253-.483-.695-.42-1.122a1.462 1.462 0 01.085-.321 4.021 4.021 0 00-5.87-4.878 4.02 4.02 0 00-1.59 4.94zm4.712 2.583A.999.999 0 0011 14v-4a1 1 0 10-2 0v4c0 .038.002.076.006.113l-3.753 4.223a1 1 0 001.494 1.328L10 16.005l3.252 3.66a1 1 0 101.495-1.33l-3.753-4.222z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/app-header.js
/* harmony default export */ var paths_app_header = (["M19 0a1 1 0 011 1v18a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1h18zM8 6a1 1 0 00-1.993-.117L6 6v8a1 1 0 001.993.117L8 14v-3h4v3a1 1 0 001.993.117L14 14V6a1 1 0 00-1.993-.117L12 6v3H8V6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/application.js
/* harmony default export */ var paths_application = (["M3.5 9h9c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-9c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-5c-.28 0-.5.22-.5.5s.22.5.5.5zM19 1H1c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm-1 16H2V6h16v11zM3.5 13h7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-7c-.28 0-.5.22-.5.5s.22.5.5.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/applications.js
/* harmony default export */ var paths_applications = (["M15 5H1c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-1 13H2V8h12v10zM3.5 10h7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-7c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h3c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-3c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-5c-.28 0-.5.22-.5.5s.22.5.5.5zM19 0H5c-.55 0-1 .45-1 1v3h2V3h12v10h-1v2h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/archive.js
/* harmony default export */ var paths_archive = (["M16.434 0a1 1 0 01.857.486L20 5v14a1 1 0 01-1 1H1a1 1 0 01-1-1V5L2.709.486A1 1 0 013.566 0h12.868zM10 8c-.55 0-1 .45-1 1v4.58l-1.29-1.29-.081-.073A.996.996 0 007 11.99a1.003 1.003 0 00-.71 1.71l3 3 .096.084c.168.13.38.206.614.206.28 0 .53-.11.71-.29l3-3 .084-.096a1.003 1.003 0 00-1.504-1.324L11 13.58V9l-.007-.116A1.004 1.004 0 0010 8zm6-6H4L2 5.002h16L16 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/area-of-interest.js
/* harmony default export */ var paths_area_of_interest = (["M5 4.664C5 2.09 7.241 0 10 0s4.99 2.091 5 4.664C15 7.245 10 14 10 14S5 7.245 5 4.664zM8 5a2 2 0 104.001-.001A2 2 0 008 5zM.504 12.132l4.302-2.458c.322.576.662 1.145.995 1.681l.025.04-3.294 1.881L6.468 18h7.064l3.936-4.724-3.293-1.882.024-.039c.333-.536.673-1.105.995-1.681l4.302 2.458a1 1 0 01.272 1.508l-5 6A1 1 0 0114 20H6a1 1 0 01-.768-.36l-5-6a1 1 0 01.272-1.508z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/array.js
/* harmony default export */ var paths_array = (["M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm5 9a1 1 0 110 2 1 1 0 010-2zM6 9a1 1 0 110 2 1 1 0 010-2zm8 0a1 1 0 110 2 1 1 0 010-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/array-boolean.js
/* harmony default export */ var paths_array_boolean = (["M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm10 7a1 1 0 01.993.883L16 8v4a1 1 0 01-.883.993L15 13H5a1 1 0 01-.993-.883L4 12V8a1 1 0 01.883-.993L5 7h10zm0 1h-5v4h5V8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/array-date.js
/* harmony default export */ var paths_array_date = (["M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm2.5 5a.5.5 0 01.5.5V6h4v-.5a.5.5 0 01.5-.5h1a.5.5 0 01.5.5V6h1a1 1 0 01.993.883L16 7v7a1 1 0 01-.883.993L15 15H5a1 1 0 01-.993-.883L4 14V7a1 1 0 01.883-.993L5 6h1v-.5a.5.5 0 01.5-.5h1zM15 9H5v5h10V9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/array-floating-point.js
/* harmony default export */ var paths_array_floating_point = (["M19.992 1.104A1.25 1.25 0 0018.75 0H15c-.47 0-1 .359-1 1s.5 1 1.023 1h3L18 18h-3c-.5 0-1 .359-1 1 0 .69.5 1 1 1h3.75l.146-.008A1.25 1.25 0 0020 18.75V1.25l-.008-.146zM6 1c0-.69-.5-1-1-1H1.25l-.146.008A1.25 1.25 0 000 1.25v17.5l.008.146A1.25 1.25 0 001.25 20H5c.5 0 1-.359 1-1s-.5-1-1-1H2V2h3c.5 0 1-.359 1-1z", "M5.434 7.325c-.222.039-.45.058-.684.058v.88h1.68v4.825h1.221V6.25h-.908c-.04.208-.124.384-.254.528-.124.143-.277.26-.46.351a2.067 2.067 0 01-.595.196z", "M14.327 6.586c-.294-.219-.677-.329-1.147-.329s-.856.11-1.157.33a2.24 2.24 0 00-.695.827 3.822 3.822 0 00-.339 1.1c-.056.401-.085.79-.085 1.166 0 .376.029.765.085 1.166.063.401.176.77.339 1.11.169.332.4.607.695.827.301.213.687.32 1.157.32s.853-.107 1.147-.32c.301-.22.533-.495.696-.828.17-.338.282-.708.338-1.11a7.55 7.55 0 00.094-1.165 7.55 7.55 0 00-.094-1.166 3.47 3.47 0 00-.338-1.1 2.127 2.127 0 00-.696-.828zm-.564 5.426a.876.876 0 01-.583.197.89.89 0 01-.592-.197 1.516 1.516 0 01-.367-.546 3.485 3.485 0 01-.188-.808 8.056 8.056 0 01-.057-.978c0-.345.02-.668.057-.969.037-.307.1-.576.188-.808.094-.232.216-.414.367-.546a.864.864 0 01.592-.206.85.85 0 01.583.206c.157.132.279.314.367.546.094.232.16.501.197.808.038.301.056.624.056.969s-.018.67-.056.978a3.179 3.179 0 01-.197.808c-.088.226-.21.408-.367.546z", "M8.853 11.807h1.358v1.319H8.853v-1.32z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/array-numeric.js
/* harmony default export */ var paths_array_numeric = (["M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm8.995 6.09c.32 0 .603.047.85.14a1.679 1.679 0 011.015.985c.09.23.135.482.135.755 0 .287-.063.552-.19.795a1.642 1.642 0 01-.57.615v.02l.101.05c.068.039.138.09.209.155.107.097.203.215.29.355a2.09 2.09 0 01.3 1.09c0 .313-.053.597-.16.85a1.898 1.898 0 01-1.12 1.065 2.42 2.42 0 01-.85.145c-.533 0-.99-.127-1.37-.38a1.702 1.702 0 01-.73-1.08c-.013-.067.013-.11.08-.13l.87-.2.041-.003c.038.004.064.028.079.073.073.2.193.37.36.51.167.14.39.21.67.21.32 0 .567-.095.74-.285.173-.19.26-.432.26-.725 0-.347-.1-.618-.3-.815-.2-.197-.47-.295-.81-.295h-.29l-.044-.006c-.037-.013-.056-.044-.056-.094V9.1l.006-.044c.013-.037.044-.056.094-.056h.27l.145-.008a.925.925 0 00.575-.262c.18-.18.27-.42.27-.72 0-.273-.08-.495-.24-.665-.16-.17-.383-.255-.67-.255-.253 0-.453.063-.6.19-.147.127-.25.297-.31.51-.02.06-.06.083-.12.07l-.85-.2-.042-.015c-.035-.02-.048-.055-.038-.105a1.684 1.684 0 01.645-1.035c.17-.13.37-.232.6-.305.23-.073.482-.11.755-.11zm-7.99.11l.044.006c.037.013.056.044.056.094v6.6l-.006.044c-.013.037-.044.056-.094.056h-.92l-.044-.006c-.037-.013-.056-.044-.056-.094V7.54h-.02l-1.04.73-.04.02c-.047.016-.07-.01-.07-.08V7.19l.008-.051a.196.196 0 01.062-.089l1.09-.79.051-.033a.295.295 0 01.129-.027h.85zm3.34-.11c.32 0 .603.05.85.15.247.1.455.235.625.405.17.17.3.37.39.6.09.23.135.478.135.745 0 .307-.057.588-.17.845a3.16 3.16 0 01-.47.745l-1.98 2.4V12h2.52l.044.006c.037.013.056.044.056.094v.8l-.006.044c-.013.037-.044.056-.094.056h-3.82l-.044-.006c-.037-.013-.056-.044-.056-.094v-.75l.006-.05a.165.165 0 01.044-.08l2.4-2.99.124-.167c.077-.11.143-.222.196-.333.08-.167.12-.347.12-.54a.92.92 0 00-.235-.64c-.157-.173-.378-.26-.665-.26-.273 0-.487.077-.64.23-.153.153-.247.36-.28.62-.013.067-.05.093-.11.08l-.88-.18-.043-.015c-.035-.02-.047-.055-.037-.105a1.78 1.78 0 01.56-1.115c.167-.157.372-.282.615-.375a2.35 2.35 0 01.845-.14z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/array-string.js
/* harmony default export */ var paths_array_string = (["M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm2.012 6c.643 0 1.203.266 1.68.797.477.53.715 1.246.715 2.145a4.472 4.472 0 01-.965 2.814c-.644.83-1.66 1.5-3.047 2.011v-.581l.26-.104a3.87 3.87 0 001.624-1.285c.457-.632.686-1.29.686-1.971 0-.148-.023-.256-.07-.326-.023-.047-.054-.07-.093-.07-.038 0-.1.031-.186.093-.248.179-.558.268-.93.268-.45 0-.843-.18-1.18-.541A1.817 1.817 0 015 7.965c0-.527.194-.986.581-1.378A1.934 1.934 0 017.011 6zm5.593 0c.643 0 1.203.266 1.68.797.477.53.715 1.246.715 2.145a4.472 4.472 0 01-.965 2.814c-.644.83-1.659 1.5-3.047 2.011v-.581l.26-.104a3.87 3.87 0 001.624-1.285c.457-.632.686-1.29.686-1.971 0-.148-.023-.256-.07-.326-.023-.047-.054-.07-.093-.07-.038 0-.1.031-.186.093-.248.179-.558.268-.93.268-.45 0-.843-.18-1.18-.541a1.817 1.817 0 01-.506-1.285c0-.527.194-.986.581-1.378A1.934 1.934 0 0112.604 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/array-timestamp.js
/* harmony default export */ var paths_array_timestamp = (["M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm5 4a6 6 0 110 12 6 6 0 010-12zm0 1a5 5 0 100 10 5 5 0 000-10zm2.854 2.146a.5.5 0 01.057.638l-.057.07-2.5 2.5a.5.5 0 01-.638.057l-.07-.057-1.5-1.5a.5.5 0 01.638-.765l.07.057L10 9.293l2.146-2.147a.5.5 0 01.708 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/arrow-bottom-left.js
/* harmony default export */ var paths_arrow_bottom_left = (["M18 3a1.003 1.003 0 00-1.71-.71L4 14.59V7c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1H5.41l12.3-12.29c.18-.18.29-.43.29-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/arrow-bottom-right.js
/* harmony default export */ var paths_arrow_bottom_right = (["M17 6c-.55 0-1 .45-1 1v7.59L3.71 2.29a1.003 1.003 0 00-1.42 1.42L14.59 16H7c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/arrow-down.js
/* harmony default export */ var paths_arrow_down = (["M16 11c-.3 0-.5.1-.7.3L11 15.6V2c0-.5-.4-1-1-1s-1 .5-1 1v13.6l-4.3-4.3c-.2-.2-.4-.3-.7-.3-.5 0-1 .4-1 1 0 .3.1.5.3.7l6 6c.2.2.4.3.7.3s.5-.1.7-.3l6-6c.2-.2.3-.4.3-.7 0-.6-.5-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/arrow-left.js
/* harmony default export */ var paths_arrow_left = (["M18 9H4.41L8.7 4.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 001.42-1.42L4.41 11H18c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/arrow-right.js
/* harmony default export */ var paths_arrow_right = (["M18.71 9.29l-6-6a1.003 1.003 0 00-1.42 1.42L15.59 9H2c-.55 0-1 .45-1 1s.45 1 1 1h13.59l-4.29 4.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/arrow-top-left.js
/* harmony default export */ var paths_arrow_top_left = (["M17.71 16.29L5.41 4H13c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1s1-.45 1-1V5.41L16.29 17.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/arrow-top-right.js
/* harmony default export */ var paths_arrow_top_right = (["M17 2H7c-.55 0-1 .45-1 1s.45 1 1 1h7.59L2.29 16.29a1.003 1.003 0 001.42 1.42L16 5.41V13c0 .55.45 1 1 1s1-.45 1-1V3c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/arrow-up.js
/* harmony default export */ var paths_arrow_up = (["M16.7 7.3l-6-6c-.2-.2-.4-.3-.7-.3s-.5.1-.7.3l-6 6c-.2.2-.3.4-.3.7 0 .6.5 1 1 1 .3 0 .5-.1.7-.3L9 4.4V18c0 .5.4 1 1 1s1-.5 1-1V4.4l4.3 4.3c.2.2.4.3.7.3.5 0 1-.4 1-1 0-.3-.1-.5-.3-.7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/arrows-horizontal.js
/* harmony default export */ var paths_arrows_horizontal = (["M19.7 9.3l-5-5c-.2-.2-.4-.3-.7-.3-.6 0-1 .4-1 1 0 .3.1.5.3.7L16.6 9H3.4l3.3-3.3c.2-.2.3-.4.3-.7 0-.6-.4-1-1-1-.3 0-.5.1-.7.3l-5 5c-.2.2-.3.4-.3.7s.1.5.3.7l5 5c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7L3.4 11h13.2l-3.3 3.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3l5-5c.2-.2.3-.4.3-.7s-.1-.5-.3-.7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/arrows-vertical.js
/* harmony default export */ var paths_arrows_vertical = (["M15 13c-.3 0-.5.1-.7.3L11 16.6V3.4l3.3 3.3c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7l-5-5c-.2-.2-.4-.3-.7-.3s-.5.1-.7.3l-5 5c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3L9 3.4v13.2l-3.3-3.3c-.2-.2-.4-.3-.7-.3-.6 0-1 .4-1 1 0 .3.1.5.3.7l5 5c.2.2.4.3.7.3s.5-.1.7-.3l5-5c.2-.2.3-.4.3-.7 0-.5-.4-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/asterisk.js
/* harmony default export */ var paths_asterisk = (["M18.52 14.17l.01-.02L11.89 10l6.64-4.15-.01-.02A.97.97 0 0019 5c0-.55-.45-1-1-1-.2 0-.37.07-.52.17l-.01-.02L11 8.2V1c0-.55-.45-1-1-1S9 .45 9 1v7.2L2.53 4.15l-.01.02A.922.922 0 002 4c-.55 0-1 .45-1 1 0 .36.2.66.48.83l-.01.02L8.11 10l-6.64 4.15.01.02A.97.97 0 001 15c0 .55.45 1 1 1 .2 0 .37-.07.52-.17l.01.02L9 11.8V19c0 .55.45 1 1 1s1-.45 1-1v-7.2l6.47 4.04.01-.02c.15.11.32.18.52.18.55 0 1-.45 1-1 0-.36-.2-.66-.48-.83z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/at.js
/* harmony default export */ var paths_at = (["M12.298 6.818a6.507 6.507 0 00-1.672-.207c-1.057 0-1.881.345-2.472 1.036-.589.691-.884 1.63-.884 2.817 0 1.894.755 2.842 2.266 2.842 1.593 0 2.464-1.192 2.614-3.574l.148-2.914zm6.544-2.592C19.614 5.58 20 7.142 20 8.916c0 1.163-.186 2.224-.556 3.189-.374.963-.894 1.713-1.569 2.25a3.64 3.64 0 01-2.333.803c-.651 0-1.218-.17-1.696-.512a2.486 2.486 0 01-.967-1.39h-.148c-.405.635-.904 1.11-1.498 1.427-.596.318-1.264.475-2.007.475-1.345 0-2.405-.425-3.175-1.279-.774-.854-1.159-2.008-1.159-3.463 0-1.676.512-3.036 1.537-4.08 1.021-1.043 2.396-1.567 4.122-1.567.628 0 1.322.055 2.086.164.764.11 1.443.262 2.037.458l-.272 5.67v.294c0 1.3.43 1.951 1.289 1.951.652 0 1.169-.414 1.553-1.245.384-.829.577-1.886.577-3.171 0-1.39-.291-2.611-.868-3.664a5.948 5.948 0 00-2.463-2.433c-1.065-.569-2.287-.853-3.667-.853-1.757 0-3.287.357-4.588 1.072a7.19 7.19 0 00-2.978 3.069C2.571 7.408 2.23 8.953 2.23 10.708c0 2.358.639 4.172 1.92 5.438 1.279 1.27 3.115 1.902 5.509 1.902 1.826 0 3.729-.365 5.71-1.096v2.001c-1.734.698-3.62 1.047-5.66 1.047-3.056 0-5.437-.811-7.144-2.432C.855 15.945 0 13.683 0 10.781 0 8.659.462 6.77 1.388 5.116c.923-1.653 2.206-2.919 3.845-3.798C6.871.44 8.727 0 10.799 0c1.791 0 3.388.367 4.786 1.098a7.865 7.865 0 013.257 3.128z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/automatic-updates.js
/* harmony default export */ var paths_automatic_updates = (["M10 18c-4.42 0-8-3.58-8-8 0-2.52 1.18-4.76 3-6.22V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1h2.06C1.61 3.82 0 6.71 0 10c0 5.52 4.48 10 10 10 .55 0 1-.45 1-1s-.45-1-1-1zm0-16c1.64 0 3.15.49 4.42 1.34l1.43-1.43A9.869 9.869 0 0010 0c-.55 0-1 .45-1 1s.45 1 1 1zm10 8c0-1.13-.2-2.21-.54-3.22L17.84 8.4A7.962 7.962 0 0115 16.22V15c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1h-2.06c2.45-1.82 4.06-4.71 4.06-8zm0-7a1.003 1.003 0 00-1.71-.71L12 8.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l7-7c.18-.18.29-.43.29-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/axle.js
/* harmony default export */ var paths_axle = (["M2 15h2v.5a.5.5 0 001 0v-11a.5.5 0 00-1 0V5H2v10zM18 5h-2v-.5a.5.5 0 00-1 0v11a.5.5 0 001 0V15h2V5zM5 8l1.789.894A1 1 0 007.236 9h5.528a1 1 0 00.447-.106L15 8v4l-1.789-.894a.999.999 0 00-.447-.106H7.236a1 1 0 00-.447.106L5 12V8zM0 9h2v2H0V9z", "M0 8h1v4H0V8zM19 8h1v4h-1V8z", "M20 11h-2V9h2v2zM8 9a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 01-1 1H9a1 1 0 01-1-1V9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/backlink.js
/* harmony default export */ var paths_backlink = (["M18.387 19.79l-.094-.083L14 15.415V18a1 1 0 01-2 0l.003-5.075.017-.126.03-.111.044-.111.052-.098.067-.096.08-.09a1.01 1.01 0 01.112-.097l.11-.071.114-.054.105-.035.15-.03L13 12h5a1 1 0 110 2h-2.585l4.292 4.293a1 1 0 01-1.32 1.497zM7.036 9.136l-4.45 4.45-.117.127a2 2 0 002.818 2.818l.127-.117 4.45-4.449a4 4 0 01-.885 3.704l-.15.16-2 2A4 4 0 011.02 12.33l.15-.16 2-2a3.998 3.998 0 013.865-1.035zm6.671-3.843a1 1 0 01.083 1.32l-.083.094-7 7a1 1 0 01-1.497-1.32l.083-.094 7-7a1 1 0 011.414 0zm4.121-4.121a4 4 0 01.151 5.497l-.15.16-2 2a3.998 3.998 0 01-3.864 1.036l4.45-4.45.116-.128a2 2 0 00-2.818-2.818l-.127.117-4.45 4.45a4 4 0 01.885-3.705l.15-.16 2-2a4 4 0 015.657 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/badge.js
/* harmony default export */ var paths_badge = (["M16.94 5.73c-.19-1.41.62-2.52 1.38-3.59L17.03.65C14.89 1.76 11.88 1.48 10 0 8.12 1.48 5.11 1.76 2.97.65L1.68 2.14c.76 1.07 1.57 2.18 1.38 3.59C2.68 8.59 0 10.94 1.4 14.08c.56 1.43 1.81 2.37 3.4 2.75 1.95.46 4.4.91 5.2 3.17.8-2.26 3.25-2.71 5.2-3.17 1.6-.38 2.84-1.32 3.4-2.75 1.4-3.14-1.28-5.49-1.66-8.35z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/ban-circle.js
/* harmony default export */ var paths_ban_circle = (["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm5 11H5c-.55 0-1-.45-1-1s.45-1 1-1h10c.55 0 1 .45 1 1s-.45 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/bank-account.js
/* harmony default export */ var paths_bank_account = (["M19.2 8.02l-.78-.18C18.03 6.4 17.2 5.08 16.08 4l.5-2.28c.11-.42-.22-.78-.61-.72-1.06.12-2 .54-2.67 1.26-1.06-.42-2.34-.66-3.56-.66-3.12 0-5.79 1.5-7.4 3.72-.23-.05-.45-.11-.67-.11C.72 5.21 0 5.98 0 7c0 .72.39 1.32.95 1.62-.06.42-.12.9-.12 1.38 0 2.16.89 4.08 2.28 5.58l-.33 2.04c-.11.72.45 1.38 1.12 1.38h.72c.56 0 1-.42 1.11-1.02l.06-.48c1.17.54 2.5.9 3.95.9 1.39 0 2.78-.3 3.95-.9l.06.48c.11.6.56 1.02 1.11 1.02h.72c.67 0 1.22-.66 1.11-1.38l-.33-1.98c.78-.78 1.34-1.74 1.73-2.76l1-.24c.5-.12.89-.6.89-1.2V9.22c.11-.6-.28-1.08-.78-1.2zM15 10c-.6 0-1-.7-1-1.5S14.4 7 15 7s1 .7 1 1.5-.4 1.5-1 1.5zM7.55 5.83a.99.99 0 01-1.38-.28.99.99 0 01.28-1.38c2.34-1.56 4.77-1.56 7.11 0 .46.31.58.93.28 1.39-.31.46-.93.58-1.39.28-1.67-1.12-3.23-1.12-4.9-.01z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/barcode.js
/* harmony default export */ var paths_barcode = (["M6 16.98h2v-14H6v14zm3 0h1v-14H9v14zm-6 0h2v-14H3v14zm-3 0h2v-14H0v14zm16 0h2v-14h-2v14zm-4 0h1v-14h-1v14zm7-14v14h1v-14h-1zm-5 14h1v-14h-1v14z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/blank.js
var blank_p = [];
/* harmony default export */ var paths_blank = (blank_p);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/blocked-person.js
/* harmony default export */ var paths_blocked_person = (["M11.55 15.92c-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.06-.11.14-.35.17-.62C10.33 9.42 8.92 7.38 8.92 5c0-.3.05-.58.09-.87-.33-.08-.67-.13-.99-.13-.79 0-1.68.25-2.31.73-.61.47-1.07 1.13-1.29 1.86-.05.16-.09.33-.11.5-.12.6-.17 1.51-.17 2.14v.08c-.24.09-.45.32-.49.83-.04.39.12.73.2.87.08.35.28.72.63.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.38 1.59C3 16.56.77 17.26.32 18.31-.15 19.38.04 20 .04 20h15.95s.18-.62-.27-1.67c-.46-1.06-2.69-1.75-4.17-2.41zM14.97 0c-2.78 0-5.03 2.24-5.03 5s2.25 5 5.03 5S20 7.76 20 5s-2.25-5-5.03-5zm-3.03 5c0-1.66 1.35-3 3.02-3 .47 0 .9.11 1.29.3l-4.01 3.99c-.18-.4-.3-.83-.3-1.29zm3.03 3c-.47 0-.9-.11-1.29-.3l4.01-3.99c.19.39.3.82.3 1.29 0 1.66-1.36 3-3.02 3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/bold.js
/* harmony default export */ var paths_bold = (["M14.3 9c.4-.8.7-1.6.7-2.5C15 4 13 2 10.5 2H5c-.6 0-1 .4-1 1v13c0 .6.4 1 1 1h6.5c2.5 0 4.5-2 4.5-4.5 0-1.4-.7-2.7-1.7-3.5zM7 5h3.5c.8 0 1.5.7 1.5 1.5S11.3 8 10.5 8H7V5zm4.5 9H7v-3h4.5c.8 0 1.5.7 1.5 1.5s-.7 1.5-1.5 1.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/book.js
/* harmony default export */ var paths_book = (["M3 1v18c0 .55.45 1 1 1h2V0H4c-.55 0-1 .45-1 1zm14-1h-2v8l-2-2-2 2V0H7v20h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/bookmark.js
/* harmony default export */ var paths_bookmark = (["M6 0c-.55 0-1 .45-1 1v18c0 .55.32.68.71.29L9.3 15.7a.996.996 0 011.41 0l3.59 3.59c.38.39.7.26.7-.29v-8-4.5V1c0-.55-.45-1-1-1H6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/box.js
/* harmony default export */ var paths_box = (["M19.89 6.56l-2.99-6h-.01C16.72.23 16.39 0 16 0H4c-.39 0-.72.23-.89.56H3.1l-3 6h.01C.05 6.69 0 6.84 0 7v12c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7c0-.16-.05-.31-.11-.44zM11 2h4.38l2 4H11V2zM4.62 2H9v4H2.62l2-4zM18 18H2V8h16v10zM8 12h4c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/briefcase.js
/* harmony default export */ var paths_briefcase = (["M19 5h-4V2c0-.55-.45-1-1-1H6c-.55 0-1 .45-1 1v3H1c-.55 0-1 .45-1 1v5h4v-1h2v1h8v-1h2v1h4V6c0-.55-.45-1-1-1zm-6 0H7V3h6v2zm3 8h-2v-1H6v1H4v-1H0v6c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-6h-4v1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/bring-data.js
/* harmony default export */ var paths_bring_data = (["M18 18a1 1 0 010 2H2a1 1 0 010-2h16zM9.995 3.005c.55 0 1 .45 1 .999v9.584l1.29-1.288a1.002 1.002 0 011.42 1.419l-3 2.996a1.015 1.015 0 01-1.42 0l-3-2.997a1.002 1.002 0 011.42-1.419l1.29 1.29V4.013c0-.55.45-1.009 1-1.009zM16 0a1 1 0 110 2 1 1 0 010-2zm-3 0a1 1 0 110 2 1 1 0 010-2zm-3 0a1 1 0 110 2 1 1 0 010-2zM7 0a1 1 0 110 2 1 1 0 010-2zM4 0a1 1 0 110 2 1 1 0 010-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/bug.js
/* harmony default export */ var paths_bug = (["M6.006 4.272C6.124 2.136 7.866 0 10 0c2.133 0 3.877 2.136 3.994 4.272.49.438.909.956 1.234 1.532L17 5.017V3a1 1 0 112 0v2.667a1 1 0 01-.594.913l-2.5 1.111c.062.344.094.698.094 1.059V10h3a1 1 0 110 2h-3v.5c0 .604-.09 1.187-.255 1.737l2.661 1.182a1 1 0 01.594.914V19a1 1 0 11-2 0v-2.017l-2.147-.954A5.992 5.992 0 0110 18.5a5.992 5.992 0 01-4.853-2.471L3 16.983V19a1 1 0 11-2 0v-2.667a1 1 0 01.594-.913l2.661-1.183A6 6 0 014 12.5V12H1a1 1 0 110-2h3V8.75c0-.361.032-.715.093-1.059l-2.5-1.11A1 1 0 011 5.666V3a1 1 0 012 0v2.017l1.772.787a6.026 6.026 0 011.234-1.532zM6 11v1.5a4 4 0 008 0V8.75a4 4 0 00-8 0V11z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/buggy.js
/* harmony default export */ var paths_buggy = (["M15.836 1.014a1 1 0 011.058.539l2.482 4.962.02-.004a.5.5 0 01.604.49v4.5a.5.5 0 01-.5.5h-3.93a1.5 1.5 0 00-1.248.667l-1.406 2.11A.5.5 0 0112.5 15H8a.5.5 0 01-.354-.146l-2.414-2.415A1.5 1.5 0 004.172 12H.5a.5.5 0 01-.5-.5v-3A.5.5 0 01.5 8h.823L3.072 3.63a1 1 0 01.764-.615l12-2zm.289 3.472l1.231 2.462-2.758.591 1.527-3.053zM14.5 3.264l-1.56 3.12-.252-.638-.825-2.043 2.637-.44zm-9.78 1.63l5.122-.854.988 2.445.899 2.27L10.232 11H7.707L4.854 8.147A.5.5 0 004.5 8H3.477l1.242-3.106zM3 19a3 3 0 100-6 3 3 0 000 6zm14 0a3 3 0 100-6 3 3 0 000 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/build.js
/* harmony default export */ var paths_build = (["M19.43 16.67L9.31 7.81l1.47-1.56c.41-.44-.15-.8.15-1.6 1.08-2.76 4.19-2.99 4.19-2.99s.45-.47.87-.92C11.98-1 9.26.7 8.04 1.8L3.83 6.25l-.86.92c-.48.51-.48 1.33 0 1.84l-.87.92c-.48-.51-1.26-.51-1.74 0s-.48 1.33 0 1.84l1.74 1.84c.48.51 1.26.51 1.74 0s.48-1.33 0-1.84l.87-.92c.48.51 1.26.51 1.74 0l1.41-1.49 8.81 10.07c.76.76 2 .76 2.76 0 .76-.76.76-2 0-2.76z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/calculator.js
/* harmony default export */ var paths_calculator = (["M16 0H4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM7 18H5v-2h2v2zm0-4H5v-2h2v2zm0-4H5V8h2v2zm4 8H9v-2h2v2zm0-4H9v-2h2v2zm0-4H9V8h2v2zm4 8h-2v-6h2v6zm0-8h-2V8h2v2zm0-4H5V2h10v4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/calendar.js
/* harmony default export */ var paths_calendar = (["M15 5c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zM5 5c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zm13-2h-1v1c0 1.1-.9 2-2 2s-2-.9-2-2V3H7v1c0 1.1-.9 2-2 2s-2-.9-2-2V3H2c-.5 0-1 .5-1 1v14c0 .5.5 1 1 1h16c.5 0 1-.5 1-1V4c0-.5-.5-1-1-1zM7 17H3v-4h4v4zm0-5H3V8h4v4zm5 5H8v-4h4v4zm0-5H8V8h4v4zm5 5h-4v-4h4v4zm0-5h-4V8h4v4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/camera.js
/* harmony default export */ var paths_camera = (["M10 8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zm9-4h-3.59L13.7 2.29A.956.956 0 0013 2H7c-.28 0-.53.11-.71.29L4.59 4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h4.11c1.26 1.24 2.99 2 4.89 2s3.63-.76 4.89-2H19c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zM4 8H2V6h2v2zm6 8c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/caret-down.js
/* harmony default export */ var paths_caret_down = (["M16 7c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1 0 .24.1.46.24.63l-.01.01 5 6 .01-.01c.19.22.45.37.76.37s.57-.15.76-.37l.01.01 5-6-.01-.01c.14-.17.24-.39.24-.63z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/caret-left.js
/* harmony default export */ var paths_caret_left = (["M13 4c-.24 0-.46.1-.63.24l-.01-.01-6 5 .01.01c-.22.19-.37.45-.37.76s.15.57.37.76l-.01.01 6 5 .01-.01c.17.14.39.24.63.24.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/caret-right.js
/* harmony default export */ var paths_caret_right = (["M14 10c0-.31-.15-.57-.37-.76l.01-.01-6-5-.01.01C7.46 4.1 7.24 4 7 4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1 .24 0 .46-.1.63-.24l.01.01 6-5-.01-.01c.22-.19.37-.45.37-.76z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/caret-up.js
/* harmony default export */ var paths_caret_up = (["M15.76 12.37l.01-.01-5-6-.01.01C10.57 6.15 10.31 6 10 6s-.57.15-.76.37l-.01-.01-5 6 .01.01c-.14.17-.24.39-.24.63 0 .55.45 1 1 1h10c.55 0 1-.45 1-1 0-.24-.1-.46-.24-.63z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/cargo-ship.js
/* harmony default export */ var paths_cargo_ship = (["M12.5 1.25h4a1 1 0 011 1V5h-5V1.25zM2.75 5a.25.25 0 00-.25.25v6H.883a.5.5 0 00-.429.757l1.672 2.787c.17.284.384.533.63.741-.458.057-.959.09-1.506.09a.625.625 0 100 1.25c2.583 0 4.268-.68 5.202-1.146.687.466 1.88 1.146 3.548 1.146 1.65 0 2.837-.666 3.528-1.132l.005.003c.244.131.6.3 1.07.468.938.335 2.321.661 4.147.661a.625.625 0 100-1.25c-.319 0-.622-.01-.91-.03.398-.318.717-.738.914-1.23l.972-2.43a.5.5 0 00-.464-.685H5v-6A.25.25 0 004.75 5h-2zm3.455 11.95a.625.625 0 01.658.041c.569.407 1.597 1.134 3.137 1.134s2.568-.727 3.137-1.134a.625.625 0 01.724-.001l.007.005.045.029c.044.027.114.069.21.12.194.104.493.247.9.392.812.29 2.053.589 3.727.589a.625.625 0 110 1.25c-1.826 0-3.21-.326-4.148-.661a7.894 7.894 0 01-1.069-.468l-.005-.003c-.691.466-1.878 1.132-3.528 1.132-1.667 0-2.861-.68-3.548-1.146-.934.467-2.619 1.146-5.202 1.146a.625.625 0 110-1.25c2.66 0 4.23-.787 4.955-1.176zM17.5 6.25h-5V10h4a1 1 0 001-1V6.25zm-11.25-4a1 1 0 011-1h4V5h-5V2.25zm5 4h-5V9a1 1 0 001 1h4V6.25z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/cell-tower.js
/* harmony default export */ var paths_cell_tower = (["M11.5 8.32c.31-.35.51-.81.51-1.32 0-1.1-.9-2-2-2s-2 .9-2 2c0 .51.2.97.51 1.32L5.06 18.69c-.17.52.11 1.09.63 1.26s1.09-.11 1.26-.63L8.39 15h3.23l1.44 4.32c.17.52.74.81 1.26.63s.81-.74.63-1.26L11.5 8.32zM10.95 13H9.06l.95-2.84.94 2.84zM5.31 10.73a.996.996 0 101.37-1.45c-1.4-1.33-1.28-3.35-.01-4.54.4-.38.43-1.01.05-1.41-.36-.41-1-.43-1.4-.06-2.09 1.95-2.28 5.3-.01 7.46z", "M4.6 12.2C3 11.1 2 9 2 7c0-2.1.9-3.9 2.6-5.2.5-.3.5-1 .2-1.4-.3-.5-1-.5-1.4-.2C1.2 1.9-.1 4.2 0 7c.1 2.7 1.4 5.3 3.4 6.8.2.1.4.2.6.2.3 0 .6-.1.8-.4.4-.5.3-1.1-.2-1.4zM13.27 10.69c.38.4 1.01.42 1.41.04 2.27-2.16 2.08-5.51-.01-7.46a.996.996 0 10-1.36 1.46c1.28 1.19 1.39 3.21-.01 4.54-.39.39-.41 1.02-.03 1.42z", "M16.6.2c-.4-.3-1.1-.3-1.4.2-.3.4-.3 1.1.2 1.4C17.1 3.1 18 4.9 18 7c0 2-1 4.1-2.6 5.2-.5.3-.6.9-.2 1.4.2.3.5.4.8.4.2 0 .4-.1.6-.2C18.7 12.3 20 9.7 20 7c.09-2.8-1.2-5.1-3.4-6.8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/changes.js
/* harmony default export */ var paths_changes = (["M18 16H2c-1.1 0-2 .9-2 2s.9 2 2 2h16c1.1 0 2-.9 2-2s-.9-2-2-2zM3 5c.28 0 .53-.11.71-.29L5 3.41V13c0 .55.45 1 1 1s1-.45 1-1V3.41L8.29 4.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3C6.53.11 6.28 0 6 0s-.53.11-.71.29l-3 3A1.003 1.003 0 003 5zm7.29 5.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3a1.003 1.003 0 00-1.42-1.42L15 10.59V1c0-.55-.45-1-1-1s-1 .45-1 1v9.59L11.71 9.3A.965.965 0 0011 9a1.003 1.003 0 00-.71 1.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/chart.js
/* harmony default export */ var paths_chart = (["M7 11v8c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-8l-2 2-4-2zm-7 8c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-8l-6 3v5zM17 7l-3 3v9c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V8.74c-.26.15-.58.26-1 .26-1.92 0-2-2-2-2zm2-6h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59L10.8 8.78 7.45 7.11v.01C7.31 7.05 7.16 7 7 7s-.31.05-.44.11V7.1l-6 3v.01c-.33.17-.56.5-.56.89 0 .55.45 1 1 1 .16 0 .31-.05.44-.11v.01L7 9.12l3.55 1.78v-.01c.14.06.29.11.45.11.28 0 .53-.11.71-.29L18 4.41V6c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/chat.js
/* harmony default export */ var paths_chat = (["M19 0H7c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h5.59l3.71 3.71c.17.18.42.29.7.29.55 0 1-.45 1-1v-3h1c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM7 13c-1.1 0-2-.9-2-2V4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h1v3a1.003 1.003 0 001.71.71L7.41 16H13c.55 0 1-.45 1-1v-.17L12.17 13H7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/chevron-backward.js
/* harmony default export */ var paths_chevron_backward = (["M8.41 10l5.29-5.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L7 8.59V4c0-.55-.45-1-1-1s-1 .45-1 1v12c0 .55.45 1 1 1s1-.45 1-1v-4.59l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L8.41 10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/chevron-down.js
/* harmony default export */ var paths_chevron_down = (["M16 6c-.28 0-.53.11-.71.29L10 11.59l-5.29-5.3a1.003 1.003 0 00-1.42 1.42l6 6c.18.18.43.29.71.29s.53-.11.71-.29l6-6A1.003 1.003 0 0016 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/chevron-forward.js
/* harmony default export */ var paths_chevron_forward = (["M13 3c-.55 0-1 .45-1 1v4.59l-5.29-5.3a1.003 1.003 0 00-1.42 1.42l5.3 5.29-5.29 5.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l5.29-5.3V16c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/chevron-left.js
/* harmony default export */ var paths_chevron_left = (["M8.41 10l5.29-5.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 001.42-1.42L8.41 10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/chevron-right.js
/* harmony default export */ var paths_chevron_right = (["M13.71 9.29l-6-6a1.003 1.003 0 00-1.42 1.42l5.3 5.29-5.29 5.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/chevron-up.js
/* harmony default export */ var paths_chevron_up = (["M16.71 12.29l-6-6C10.53 6.11 10.28 6 10 6s-.53.11-.71.29l-6 6a1.003 1.003 0 001.42 1.42L10 8.41l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/circle.js
/* harmony default export */ var paths_circle = (["M10 0C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10S15.5 0 10 0zm0 18c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/circle-arrow-down.js
/* harmony default export */ var paths_circle_arrow_down = (["M14 10c-.28 0-.53.11-.71.29L11 12.59V5c0-.55-.45-1-1-1s-1 .45-1 1v7.59L6.71 10.3A.965.965 0 006 10a1.003 1.003 0 00-.71 1.71l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0014 10zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/circle-arrow-left.js
/* harmony default export */ var paths_circle_arrow_left = (["M15 9H7.41L9.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L7.41 11H15c.55 0 1-.45 1-1s-.45-1-1-1zm-5-9C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/circle-arrow-right.js
/* harmony default export */ var paths_circle_arrow_right = (["M15.71 9.29l-4-4a1.003 1.003 0 00-1.42 1.42L12.59 9H5c-.55 0-1 .45-1 1s.45 1 1 1h7.59l-2.29 2.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/circle-arrow-up.js
/* harmony default export */ var paths_circle_arrow_up = (["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.71-13.71C10.53 4.11 10.28 4 10 4s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L9 7.41V15c0 .55.45 1 1 1s1-.45 1-1V7.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/citation.js
/* harmony default export */ var paths_citation = (["M4 1C1.79 1 0 2.79 0 5s1.79 4 4 4c.1 0 .2-.01.3-.02C3.82 11.32 2.53 13 1 13c-.55 0-1 .45-1 1s.45 1 1 1c3.87 0 7-4.48 7-10 0-2.21-1.79-4-4-4zM16 1c-2.21 0-4 1.79-4 4s1.79 4 4 4c.1 0 .2-.01.3-.02C15.82 11.32 14.53 13 13 13c-.55 0-1 .45-1 1s.45 1 1 1c3.87 0 7-4.48 7-10 0-2.21-1.79-4-4-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/clean.js
/* harmony default export */ var paths_clean = (["M7 0L5 5 0 6.998 5 9l2 5 2-5 5-1.995L9 5zM15 10l-1.5 3.496-3.5 1.499 3.5 1.498L15 20l1.5-3.507L20 15l-3.5-1.504z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/clip.js
/* harmony default export */ var paths_clip = (["M0 1a1 1 0 011-1h5a1 1 0 010 2H2v4a1 1 0 01-2 0V1zm1 19a1 1 0 01-1-1v-5a1 1 0 112 0v4h4a1 1 0 110 2H1zm18 0a1 1 0 001-1v-5a1 1 0 10-2 0v4h-4a1 1 0 100 2h5zm0-20a1 1 0 011 1v5a1 1 0 11-2 0V2h-4a1 1 0 110-2h5zm-9 14a4 4 0 100-8 4 4 0 000 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/clipboard.js
/* harmony default export */ var paths_clipboard = (["M13 2c0-.55-.45-1-1-1h-.78a1.98 1.98 0 00-3.44 0H7c-.55 0-1 .45-1 1v2h7V2z", "M16 2h-2v3H5V2H3c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/cloud.js
/* harmony default export */ var paths_cloud = (["M15 7c-.12 0-.24.03-.36.04C13.83 4.69 11.62 3 9 3 5.69 3 3 5.69 3 9c0 .05.01.09.01.14A3.98 3.98 0 000 13c0 2.21 1.79 4 4 4h11c2.76 0 5-2.24 5-5s-2.24-5-5-5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/cloud-download.js
/* harmony default export */ var paths_cloud_download = (["M15 4c-.12 0-.24.03-.36.04C13.83 1.69 11.62 0 9 0 5.69 0 3 2.69 3 6c0 .05.01.09.01.14A3.98 3.98 0 000 10c0 2.21 1.79 4 4 4h.78c.55-.61 1.34-1 2.22-1v-2c0-1.66 1.34-3 3-3s3 1.34 3 3v2c.88 0 1.66.38 2.2.98C17.87 13.87 20 11.69 20 9c0-2.76-2.24-5-5-5zm-2 11c-.28 0-.53.11-.71.29L11 16.59V11c0-.55-.45-1-1-1s-1 .45-1 1v5.59L7.71 15.3A.965.965 0 007 15a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0013 15z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/cloud-upload.js
/* harmony default export */ var paths_cloud_upload = (["M10.71 10.29c-.18-.18-.43-.29-.71-.29s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L9 13.41V19c0 .55.45 1 1 1s1-.45 1-1v-5.59l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3zM15 4c-.12 0-.24.03-.36.04C13.83 1.69 11.62 0 9 0 5.69 0 3 2.69 3 6c0 .05.01.09.01.14A3.98 3.98 0 000 10c0 2.21 1.79 4 4 4 0-.83.34-1.58.88-2.12l3-3a2.993 2.993 0 014.24 0l3 3-.01.01c.52.52.85 1.23.87 2.02C18.28 13.44 20 11.42 20 9c0-2.76-2.24-5-5-5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/code.js
/* harmony default export */ var paths_code = (["M6 6a1.003 1.003 0 00-1.71-.71l-4 4C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L2.41 10 5.7 6.71c.19-.18.3-.43.3-.71zm6-4c-.46 0-.83.31-.95.73l-4 14c-.02.09-.05.17-.05.27 0 .55.45 1 1 1 .46 0 .83-.31.95-.73l4-14c.02-.09.05-.17.05-.27 0-.55-.45-1-1-1zm7.71 7.29l-4-4a1.003 1.003 0 00-1.42 1.42l3.3 3.29-3.29 3.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/code-block.js
/* harmony default export */ var paths_code_block = (["M19 5h-2V3c0-.55-.45-1-1-1h-4c-.55 0-1 .45-1 1v2H9V3c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v2H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zM8.71 15.29a1.003 1.003 0 01-1.42 1.42l-4-4C3.11 12.53 3 12.28 3 12s.11-.53.29-.71l4-4a1.003 1.003 0 011.42 1.42L5.41 12l3.3 3.29zm8-2.58l-4 4a1.003 1.003 0 01-1.42-1.42l3.3-3.29-3.29-3.29A.965.965 0 0111 8a1.003 1.003 0 011.71-.71l4 4c.18.18.29.43.29.71s-.11.53-.29.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/cog.js
/* harmony default export */ var paths_cog = (["M19 8h-2.31c-.14-.46-.33-.89-.56-1.3l1.7-1.7a.996.996 0 000-1.41l-1.41-1.41a.996.996 0 00-1.41 0l-1.7 1.7c-.41-.22-.84-.41-1.3-.55V1c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v2.33c-.48.14-.94.34-1.37.58L5 2.28a.972.972 0 00-1.36 0L2.28 3.64c-.37.38-.37.99 0 1.36L3.9 6.62c-.24.44-.44.89-.59 1.38H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2.31c.14.46.33.89.56 1.3L2.17 15a.996.996 0 000 1.41l1.41 1.41c.39.39 1.02.39 1.41 0l1.7-1.7c.41.22.84.41 1.3.55V19c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.33c.48-.14.94-.35 1.37-.59L15 17.72c.37.37.98.37 1.36 0l1.36-1.36c.37-.37.37-.98 0-1.36l-1.62-1.62c.24-.43.45-.89.6-1.38H19c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-9 6c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/collapse-all.js
/* harmony default export */ var paths_collapse_all = (["M9.29 8.71c.18.18.43.29.71.29s.53-.11.71-.29l6-6a1.003 1.003 0 00-1.42-1.42L10 6.59l-5.29-5.3a1.003 1.003 0 00-1.42 1.42l6 6zm1.42 2.58c-.18-.18-.43-.29-.71-.29s-.53.11-.71.29l-6 6a1.003 1.003 0 001.42 1.42l5.29-5.3 5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-6-6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/color-fill.js
/* harmony default export */ var paths_color_fill = (["M2.188 9h11.984L8 2.828 3.414 7.414C2.811 8.017 2.405 8.48 2.188 9zM8 0L6.586 1.414 2 6c-1 1-2 2.11-2 4 0 2 1 3 2 4l1 1c1 1 2 2 4 2 2.009 0 2.918-.913 3.868-1.867L11 15l4.586-4.586L17 9l-1.414-1.414-6.172-6.172L8 0zm10.5 13.5L17 11l-1.5 2.5c-.318.53-.5 1-.5 1.5 0 1 .5 2 2 2s2-1 2-2c0-.5-.182-.97-.5-1.5zM1 18a1 1 0 100 2h18a1 1 0 100-2H1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/column-layout.js
/* harmony default export */ var paths_column_layout = (["M19 1H1c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM5 17H2V3h3v14zm4 0H6V3h3v14zm9 0h-8V3h8v14z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/comment.js
/* harmony default export */ var paths_comment = (["M19 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3v4a1.003 1.003 0 001.71.71l4.7-4.71H19c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM4 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm6 0c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm6 0c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/comparison.js
/* harmony default export */ var paths_comparison = (["M6 8H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm13-6h-5c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 3h-5V3h5v2zM6 14H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zM6 2H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm4-2c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm9 14h-5c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm0 3h-5v-2h5v2zm0-9h-5c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm0 3h-5V9h5v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/compass.js
/* harmony default export */ var paths_compass = (["M15 10c0 .14-.03.28-.09.4l-3.99 8.98-.01.02a.991.991 0 01-1.82 0l-.01-.02-3.99-8.98c-.06-.12-.09-.26-.09-.4s.03-.28.09-.4L9.08.62 9.09.6a.991.991 0 011.82 0l.01.02 3.99 8.98c.06.12.09.26.09.4zm-5-6.54L7.09 10h5.81L10 3.46z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/compressed.js
/* harmony default export */ var paths_compressed = (["M19.89 6.56l-2.99-6h-.01C16.72.23 16.39 0 16 0H4c-.39 0-.72.23-.89.56H3.1l-3 6h.01C.05 6.69 0 6.84 0 7v12c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7c0-.16-.05-.31-.11-.44zM11 2h4.38l2 4H11V2zM4.62 2H9v4H2.62l2-4zM18 18H2V8h7v4.59L6.71 10.3A.965.965 0 006 10a1.003 1.003 0 00-.71 1.71l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4a1.003 1.003 0 00-1.42-1.42L11 12.59V8h7v10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/confirm.js
/* harmony default export */ var _20px_paths_confirm = (["M9.71 5.29a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l7-7a1.003 1.003 0 00-1.42-1.42L12 7.59l-2.29-2.3zm7.93 2.32c.23.75.36 1.56.36 2.39 0 4.42-3.58 8-8 8s-8-3.58-8-8a7.998 7.998 0 0111.8-7.04l1.46-1.46C13.73.56 11.93 0 10 0 4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10c0-1.4-.29-2.73-.81-3.95l-1.55 1.56z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/console.js
/* harmony default export */ var _20px_paths_console = (["M19 19H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1h18c.55 0 1 .45 1 1v16c0 .55-.45 1-1 1zM18 6H2v11h16V6zM4 8c.28 0 .53.11.71.29l2 2c.18.18.29.43.29.71s-.11.53-.29.71l-2 2a1.003 1.003 0 01-1.42-1.42L4.59 11l-1.3-1.29A1.003 1.003 0 014 8zm5 4h3c.55 0 1 .45 1 1s-.45 1-1 1H9c-.55 0-1-.45-1-1s.45-1 1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/contrast.js
/* harmony default export */ var paths_contrast = (["M19 8h-1.26c-.19-.73-.48-1.42-.85-2.06l.94-.94a.996.996 0 000-1.41l-1.41-1.41a.996.996 0 00-1.41 0l-.94.94c-.65-.38-1.34-.67-2.07-.86V1c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v1.26c-.76.2-1.47.5-2.13.89L5 2.28a.972.972 0 00-1.36 0L2.28 3.64c-.37.38-.37.98 0 1.36l.87.87c-.39.66-.69 1.37-.89 2.13H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h1.26c.19.73.48 1.42.85 2.06l-.94.94a.996.996 0 000 1.41l1.41 1.41c.39.39 1.02.39 1.41 0l.94-.94c.64.38 1.33.66 2.06.85V19c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-1.26c.76-.2 1.47-.5 2.13-.89l.88.87c.37.37.98.37 1.36 0l1.36-1.36c.37-.38.37-.98 0-1.36l-.87-.87c.4-.65.7-1.37.89-2.13H19c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-9 7c-2.76 0-5-2.24-5-5s2.24-5 5-5v10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/control.js
/* harmony default export */ var paths_control = (["M17 10h-7v7h7v-7zm0-7h-7v6h7V3zM9 3H3v14h6V3zm10-3H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2V2h16v16z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/credit-card.js
/* harmony default export */ var paths_credit_card = (["M19 3H1c-.55 0-1 .45-1 1v2h20V4c0-.55-.45-1-1-1zM0 16c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V8H0v8zm6.5-2h7c.28 0 .5.22.5.5s-.22.5-.5.5h-7c-.28 0-.5-.22-.5-.5s.22-.5.5-.5zm-4 0h2c.28 0 .5.22.5.5s-.22.5-.5.5h-2c-.28 0-.5-.22-.5-.5s.22-.5.5-.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/cross.js
/* harmony default export */ var paths_cross = (["M11.41 10l4.29-4.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L10 8.59l-4.29-4.3a1.003 1.003 0 00-1.42 1.42L8.59 10 4.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4.29-4.3 4.29 4.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L11.41 10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/cross-circle.js
/* harmony default export */ var paths_cross_circle = (["M10 20c5.523 0 10-4.477 10-10S15.523 0 10 0 0 4.477 0 10s4.477 10 10 10zm4.7-13.29L11.41 10l3.3 3.29A1.003 1.003 0 0114 15c-.28 0-.53-.11-.71-.3L10 11.41l-3.29 3.3A1.003 1.003 0 015 14c0-.28.11-.53.3-.71L8.59 10l-3.3-3.29a1.003 1.003 0 011.42-1.42L10 8.59l3.29-3.3A1.003 1.003 0 0115 6c0 .28-.11.53-.3.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/crown.js
/* harmony default export */ var paths_crown = (["M2 8l4 2 4-5 4 5 4-2-1 7H3L2 8zm8-6a1 1 0 110 2 1 1 0 010-2zM1 5a1 1 0 110 2 1 1 0 010-2zm18 0a1 1 0 110 2 1 1 0 010-2zM3 16h14v2H3v-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/cube.js
/* harmony default export */ var paths_cube = (["M1.953 4.481l7.41-4.02c.394-.215.88-.215 1.275 0l7.409 4.02L10 9.22 1.953 4.48zm-.817.68L9.5 10.085v9.281a1.316 1.316 0 01-.138-.064l-7.714-4.186A1.211 1.211 0 011 14.057v-8.35c0-.193.048-.38.136-.547zm17.728 0c.088.166.136.353.136.546v8.35c0 .438-.247.842-.648 1.06l-7.714 4.186c-.045.024-.091.046-.138.064v-9.281l8.364-4.926z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/cube-add.js
/* harmony default export */ var paths_cube_add = (["M17 3h2a1 1 0 010 2h-2v2a1 1 0 01-2 0V5h-2a1 1 0 010-2h2V1a1 1 0 012 0v2zm-3.969 4.435L10 9.22 1.953 4.48l7.41-4.02c.394-.215.88-.215 1.275 0l1.33.721A3.001 3.001 0 0013 7c0 .148.01.293.031.435zm.319.972A3 3 0 0019 7v7.057c0 .438-.247.842-.648 1.06l-7.714 4.186c-.045.024-.091.046-.138.064v-9.281l2.85-1.679zM1.136 5.16L9.5 10.086v9.281a1.316 1.316 0 01-.138-.064l-7.714-4.186A1.211 1.211 0 011 14.057v-8.35c0-.193.048-.38.136-.547z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/cube-remove.js
/* harmony default export */ var paths_cube_remove = (["M11.968 1.182A3.001 3.001 0 0013 7h.77L10 9.22 1.953 4.48l7.41-4.02c.394-.215.88-.215 1.275 0l1.33.721zM19 7v7.057c0 .438-.247.842-.648 1.06l-7.714 4.186c-.045.024-.091.046-.138.064v-9.281L15.74 7H19zM1.136 5.16L9.5 10.086v9.281a1.316 1.316 0 01-.138-.064l-7.714-4.186A1.211 1.211 0 011 14.057v-8.35c0-.193.048-.38.136-.547zM13 3h6a1 1 0 010 2h-6a1 1 0 010-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/curved-range-chart.js
/* harmony default export */ var paths_curved_range_chart = (["M19 16H3.02l2.14-1.74c2.25 1.7 7.33.46 11.83-2.99l-1.29-1.5c-3.56 2.74-7.31 4.03-8.93 3.19l10.55-8.57-.63-.78-10.59 8.6c-.64-1.64 1.46-4.91 5.09-7.7L9.9 3.01c-4.6 3.54-6.91 8.12-5.41 10.51L2 15.54V3c0-.55-.45-1-1-1s-1 .45-1 1v14a.998.998 0 001 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/cut.js
/* harmony default export */ var paths_cut = (["M16 2s.72-1.28 0-2l-5.29 6.25 1.28 1.54L16 2zm.08 10c-.55 0-1.07.12-1.54.32L4.31 0c-.7.72 0 2 0 2l4.45 6.56-3.19 3.77C5.09 12.12 4.56 12 4 12c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4c0-.65-.17-1.26-.45-1.8l2.54-3.67 2.49 3.67c-.27.54-.44 1.15-.44 1.8 0 2.21 1.76 4 3.92 4 2.17 0 3.92-1.79 3.92-4 .02-2.21-1.74-4-3.9-4zM4 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm12.08 0c-1.08 0-1.96-.9-1.96-2s.88-2 1.96-2 1.96.9 1.96 2-.88 2-1.96 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/cycle.js
/* harmony default export */ var paths_cycle = (["M16 10a4 4 0 110 8 4 4 0 010-8zM4 10a4 4 0 110 8 4 4 0 010-8zm7.299-5.543l.087.089 1.93 2.232 2.048.708a1 1 0 01.65 1.16l-.031.112a1 1 0 01-1.16.65l-.112-.031-2.302-.796a1 1 0 01-.337-.197l-.092-.094-1.387-1.603-1.891 1.982 2.046 2.274a1 1 0 01.25.547l.007.122v4.24a1 1 0 01-1.993.117l-.007-.117-.001-3.857-2.408-2.676a1 1 0 01-.063-1.26l.082-.099 3.29-3.45a1 1 0 011.394-.053zM16 12a2 2 0 100 4 2 2 0 000-4zM4 12a2 2 0 100 4 2 2 0 000-4zm9.5-10a1.5 1.5 0 110 3 1.5 1.5 0 010-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/dashboard.js
/* harmony default export */ var paths_dashboard = (["M6 5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM4 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6-4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-5C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm6-9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm-8 5c0 1.1.9 2 2 2s2-.9 2-2c0-.33-2-8-2-8s-2 7.67-2 8zm6-9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/data-connection.js
/* harmony default export */ var paths_data_connection = (["M2 11.9c.935.674 2.339 1.217 4.023 1.536A6.996 6.996 0 009.393 20c-3.988-.019-7.231-1.083-7.387-2.4L2 17.5v-5.6zM13 8c3.315 0 6 2.685 6 6s-2.685 6-6 6-6-2.685-6-6 2.685-6 6-6zm1 1l-4 6h2.5l-.5 4 4-6h-2.5l.5-4zm3-4.6v3.855a7.003 7.003 0 00-10.779 3.992c-2.408-.391-4.097-1.202-4.214-2.142L2 10V4.4c1.525 1.1 4.3 1.85 7.5 1.85S15.475 5.5 17 4.4zM9.5 0C13.637 0 17 1.125 17 2.5S13.637 5 9.5 5C5.35 5 2 3.875 2 2.5S5.35 0 9.5 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/data-lineage.js
/* harmony default export */ var paths_data_lineage = (["M1.053 0C.47 0 0 .471 0 1.053V4.21c0 .58.471 1.052 1.053 1.052h3.275a6.332 6.332 0 003.728 4.738 6.33 6.33 0 00-3.728 4.737l-3.275-.001C.47 14.737 0 15.208 0 15.789v3.158C0 19.53.471 20 1.053 20h7.435c.581 0 1.053-.471 1.053-1.053V15.79c0-.58-.472-1.052-1.053-1.052H5.406a5.293 5.293 0 015.195-4.21v2.105c0 .58.471 1.052 1.052 1.052h7.294c.582 0 1.053-.471 1.053-1.052V7.368c0-.58-.471-1.052-1.053-1.052h-7.294c-.581 0-1.052.471-1.052 1.052v2.106a5.293 5.293 0 01-5.194-4.21h3.081c.581 0 1.053-.472 1.053-1.053V1.053C9.54.47 9.069 0 8.488 0H1.053z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/database.js
/* harmony default export */ var paths_database = (["M2.01 5.1v5.4c0 1.38 3.58 2.5 8 2.5s8-1.12 8-2.5V5.1c-1.49 1.13-4.51 1.9-8 1.9-3.48 0-6.5-.77-8-1.9zm8 .9c4.42 0 8-1.12 8-2.5s-3.58-2.5-8-2.5-8 1.12-8 2.5S5.6 6 10.01 6zm-8 6.1v5.4c0 1.38 3.58 2.5 8 2.5s8-1.12 8-2.5v-5.4c-1.49 1.13-4.51 1.9-8 1.9-3.48 0-6.5-.77-8-1.9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/delete.js
/* harmony default export */ var _20px_paths_delete = (["M15 6a1.003 1.003 0 00-1.71-.71L10 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L8.59 10 5.3 13.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3.29-3.3 3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L11.41 10l3.29-3.29c.19-.18.3-.43.3-.71zm-5-6C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/delta.js
/* harmony default export */ var paths_delta = (["M10 0L0 20h20L10 0zM9 6l6 12H3L9 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/derive-column.js
/* harmony default export */ var paths_derive_column = (["M7.1 8.2h-.99c.28-1.11.66-1.92 1.12-2.43.28-.32.56-.48.83-.48.05 0 .1.02.13.05.03.03.05.07.05.12 0 .04-.04.13-.11.25a.64.64 0 00-.12.35c0 .15.06.28.18.39.12.11.27.16.45.16.2 0 .36-.07.49-.2s.2-.31.2-.54c0-.26-.1-.47-.3-.63-.19-.16-.51-.24-.95-.24-.68 0-1.3.19-1.85.58-.56.38-1.09 1.02-1.59 1.91-.17.3-.34.5-.49.59-.15.08-.4.13-.74.12l-.23.77h.95l-1.39 5.24c-.23.86-.39 1.39-.47 1.59-.12.29-.3.54-.54.75-.1.08-.21.12-.35.12-.04 0-.07-.01-.1-.03l-.03-.04c0-.02.03-.07.1-.13.07-.07.1-.17.1-.31 0-.15-.05-.28-.16-.38-.11-.1-.27-.15-.47-.15-.25 0-.44.07-.59.2-.15.12-.23.28-.23.46 0 .19.09.36.27.5.19.14.47.21.86.21.61 0 1.16-.15 1.63-.46.48-.31.89-.78 1.25-1.43.35-.64.72-1.68 1.09-3.11l.8-3.03h.96l.24-.77zM19 0h-9c-.55 0-1 .45-1 1v3h2V2h7v16h-7v-2H9v3c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-8.79 13.49c.15.28.32.49.52.61.19.12.44.19.73.19.28 0 .57-.1.86-.3.38-.25.77-.69 1.17-1.31l-.25-.14c-.27.37-.48.6-.61.69-.09.06-.19.09-.31.09-.14 0-.28-.09-.42-.26-.23-.29-.54-1.09-.93-2.4.35-.59.64-.97.87-1.15.17-.13.35-.2.55-.2.07 0 .2.03.39.08s.36.08.5.08c.2 0 .37-.07.5-.2.15-.14.22-.31.22-.52 0-.22-.07-.4-.2-.53s-.33-.2-.58-.2c-.22 0-.43.05-.63.15-.2.1-.45.32-.75.67-.23.25-.56.7-1.01 1.33a6.52 6.52 0 00-.91-2.15l-2.39.39-.05.25c.18-.03.33-.05.45-.05.24 0 .43.1.59.3.25.31.59 1.24 1.02 2.8-.34.44-.58.73-.7.87-.21.22-.38.36-.52.43-.1.05-.22.08-.35.08-.1 0-.26-.05-.49-.16a1.01 1.01 0 00-.42-.11c-.23 0-.42.07-.57.22-.15.14-.23.33-.23.55 0 .21.07.38.21.51.14.13.33.2.56.2.23 0 .44-.05.64-.14.2-.09.45-.29.75-.59s.72-.78 1.25-1.43c.21.61.39 1.06.54 1.35z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/desktop.js
/* harmony default export */ var paths_desktop = (["M19 0H1C.45 0 0 .45 0 1v13c0 .55.45 1 1 1h5.67l-.5 3H5c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1h-1.17l-.5-3H19c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 13H2V2h16v11z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/diagnosis.js
/* harmony default export */ var paths_diagnosis = (["M4 2a1 1 0 01.117 1.993L4 4v5a2 2 0 001.85 1.995L6 11a2 2 0 001.995-1.85L8 9V4a1 1 0 01-.117-1.993L8 2h1a1 1 0 01.993.883L10 3v6a4.002 4.002 0 01-3 3.874V13a3 3 0 003 3 4 4 0 003.995-3.8L14 12V8.792a2.5 2.5 0 112 0V12a6 6 0 01-6 6 5 5 0 01-4.995-4.783L5 13v-.126A4.002 4.002 0 012.005 9.2L2 9V3a1 1 0 01.883-.993L3 2h1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/diagram-tree.js
/* harmony default export */ var paths_diagram_tree = (["M19 10v5h-2v-4h-6v4H9v-4H3v4H1v-5a1 1 0 011-1h7V5h2v4h7a1 1 0 011 1zM1 16h2a1 1 0 011 1v2a1 1 0 01-1 1H1a1 1 0 01-1-1v-2a1 1 0 011-1zm16 0h2a1 1 0 011 1v2a1 1 0 01-1 1h-2a1 1 0 01-1-1v-2a1 1 0 011-1zm-8 0h2a1 1 0 011 1v2a1 1 0 01-1 1H9a1 1 0 01-1-1v-2a1 1 0 011-1zM9 0h2a1 1 0 011 1v2a1 1 0 01-1 1H9a1 1 0 01-1-1V1a1 1 0 011-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/direction-left.js
/* harmony default export */ var paths_direction_left = (["M20 3.02l-20 7 20 7-5-7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/direction-right.js
/* harmony default export */ var paths_direction_right = (["M20 10.02l-20-7 5 7-5 7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/disable.js
/* harmony default export */ var paths_disable = (["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM2 10c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L3.69 14.9A7.902 7.902 0 012 10zm8 8c-1.85 0-3.55-.63-4.9-1.69L16.31 5.1A7.902 7.902 0 0118 10c0 4.42-3.58 8-8 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/divide.js
/* harmony default export */ var paths_divide = (["M11.25 6.25a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM6 9c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1H6zm4 6a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/document.js
/* harmony default export */ var _20px_paths_document = (["M11.98 0h-8c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V6l-6-6zm4 18h-11V2h6v5h5v11z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/document-open.js
/* harmony default export */ var paths_document_open = (["M8 15c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1h2.59L1.3 16.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L8 12.41V15zm5-15H5c-.55 0-1 .45-1 1v6h2V2h6v5h5v11H6v-.76L4.04 19.2c.1.45.48.8.96.8h13c.55 0 1-.45 1-1V6l-6-6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/document-share.js
/* harmony default export */ var paths_document_share = (["M14.09 10.09c-.31.31-.67.57-1.09.72V18H2V2h6v5h1.18c.15-.42.39-.8.7-1.11v-.01l2.45-2.45c-.42-.29-.78-.65-1.01-1.11L9 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V9.24l-.88.88-.03-.03zM19 0h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L11.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 3.41V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/dollar.js
/* harmony default export */ var paths_dollar = (["M15.57 11.19c-.27-.51-.63-.93-1.07-1.26-.44-.33-.95-.6-1.51-.79-.56-.2-1.14-.36-1.72-.5-.6-.14-1.19-.26-1.75-.38-.57-.13-1.07-.27-1.51-.44-.44-.17-.8-.38-1.07-.63s-.41-.59-.41-1c0-.33.09-.6.28-.81.19-.21.42-.36.69-.47.27-.11.57-.18.88-.22.31-.04.58-.06.8-.06.71 0 1.35.14 1.9.41.55.27.91.81 1.06 1.62h3.36c-.09-.84-.32-1.56-.69-2.16-.37-.6-.83-1.08-1.38-1.45-.56-.37-1.18-.64-1.86-.81-.19-.05-.38-.07-.57-.1V1c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v1.1c-.22.03-.43.05-.66.1-.73.13-1.39.37-1.98.71-.6.34-1.09.8-1.47 1.35-.39.56-.58 1.25-.58 2.08 0 .76.13 1.41.4 1.93.26.52.62.95 1.06 1.28.44.33.94.6 1.5.79.55.2 1.13.36 1.74.5.58.14 1.16.26 1.72.38s1.07.26 1.51.43c.44.17.8.39 1.09.66.28.27.43.63.45 1.06.02.43-.08.78-.3 1.04-.22.26-.49.47-.83.6-.34.14-.7.23-1.09.28-.39.05-.73.07-1.03.07-.87 0-1.61-.2-2.23-.59-.62-.39-.98-1.08-1.07-2.06H3c.02.9.19 1.68.52 2.34.33.66.78 1.21 1.35 1.65.57.44 1.25.77 2.03.98.35.1.71.16 1.08.21V19c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1.13c.25-.04.5-.07.76-.13.77-.18 1.47-.46 2.1-.85.63-.39 1.14-.9 1.54-1.53.4-.63.59-1.39.59-2.29.01-.75-.13-1.37-.4-1.88z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/dot.js
/* harmony default export */ var paths_dot = (["M10 6a4 4 0 100 8 4 4 0 100-8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/double-caret-horizontal.js
/* harmony default export */ var paths_double_caret_horizontal = (["M8 4c-.24 0-.46.1-.63.24l-.01-.01-6 5 .01.01c-.22.19-.37.45-.37.76s.15.57.37.76l-.01.01 6 5 .01-.01c.17.14.39.24.63.24.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm11 6c0-.31-.15-.57-.37-.76l.01-.01-6-5-.01.01C12.46 4.1 12.24 4 12 4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1 .24 0 .46-.1.63-.24l.01.01 6-5-.01-.01c.22-.19.37-.45.37-.76z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/double-caret-vertical.js
/* harmony default export */ var paths_double_caret_vertical = (["M5 9h10c.55 0 1-.45 1-1 0-.24-.1-.46-.24-.63l.01-.01-5-6-.01.01C10.57 1.15 10.31 1 10 1s-.57.15-.76.37l-.01-.01-5 6 .01.01C4.1 7.54 4 7.76 4 8c0 .55.45 1 1 1zm10 2H5c-.55 0-1 .45-1 1 0 .24.1.46.24.63l-.01.01 5 6 .01-.01c.19.22.45.37.76.37s.57-.15.76-.37l.01.01 5-6-.01-.01c.14-.17.24-.39.24-.63 0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/double-chevron-down.js
/* harmony default export */ var paths_double_chevron_down = (["M9.29 10.71c.18.18.43.29.71.29s.53-.11.71-.29l6-6a1.003 1.003 0 00-1.42-1.42L10 8.59l-5.29-5.3a1.003 1.003 0 00-1.42 1.42l6 6zM16 9c-.28 0-.53.11-.71.29L10 14.59l-5.29-5.3a1.003 1.003 0 00-1.42 1.42l6 6c.18.18.43.29.71.29s.53-.11.71-.29l6-6A1.003 1.003 0 0016 9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/double-chevron-left.js
/* harmony default export */ var paths_double_chevron_left = (["M5.41 10l5.29-5.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 001.42-1.42L5.41 10zm6 0l5.29-5.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 001.42-1.42L11.41 10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/double-chevron-right.js
/* harmony default export */ var paths_double_chevron_right = (["M11 10c0-.28-.11-.53-.29-.71l-6-6a1.003 1.003 0 00-1.42 1.42L8.59 10 3.3 15.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l6-6c.18-.18.29-.43.29-.71zm5.71-.71l-6-6a1.003 1.003 0 00-1.42 1.42l5.3 5.29-5.29 5.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/double-chevron-up.js
/* harmony default export */ var paths_double_chevron_up = (["M4 11c.28 0 .53-.11.71-.29L10 5.41l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-6-6A.997.997 0 0010 3c-.28 0-.53.11-.71.29l-6 6A1.003 1.003 0 004 11zm6.71-1.71A.997.997 0 0010 9c-.28 0-.53.11-.71.29l-6 6a1.003 1.003 0 001.42 1.42l5.29-5.3 5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-6-6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/doughnut-chart.js
/* harmony default export */ var paths_doughnut_chart = (["M16 10c0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6V0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10h-4zm-.09-1h4.04C19.48 4.28 15.72.52 11 .05V4.1A5.98 5.98 0 0115.91 9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/download.js
/* harmony default export */ var paths_download = (["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm4.71 11.71l-4 4c-.18.18-.43.29-.71.29s-.53-.11-.71-.29l-4-4a1.003 1.003 0 011.42-1.42L9 12.59V5c0-.55.45-1 1-1s1 .45 1 1v7.59l2.29-2.29c.18-.19.43-.3.71-.3a1.003 1.003 0 01.71 1.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/drag-handle-horizontal.js
/* harmony default export */ var paths_drag_handle_horizontal = (["M7.5 11c-.83 0-1.5.67-1.5 1.5S6.67 14 7.5 14 9 13.33 9 12.5 8.33 11 7.5 11zm-5-5C1.67 6 1 6.67 1 7.5S1.67 9 2.5 9 4 8.33 4 7.5 3.33 6 2.5 6zm0 5c-.83 0-1.5.67-1.5 1.5S1.67 14 2.5 14 4 13.33 4 12.5 3.33 11 2.5 11zm15-2c.83 0 1.5-.67 1.5-1.5S18.33 6 17.5 6 16 6.67 16 7.5 16.67 9 17.5 9zm-5 2c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-10-5C6.67 6 6 6.67 6 7.5S6.67 9 7.5 9 9 8.33 9 7.5 8.33 6 7.5 6zm5 0c-.83 0-1.5.67-1.5 1.5S11.67 9 12.5 9 14 8.33 14 7.5 13.33 6 12.5 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/drag-handle-vertical.js
/* harmony default export */ var paths_drag_handle_vertical = (["M7.5 6C6.67 6 6 6.67 6 7.5S6.67 9 7.5 9 9 8.33 9 7.5 8.33 6 7.5 6zm0 5c-.83 0-1.5.67-1.5 1.5S6.67 14 7.5 14 9 13.33 9 12.5 8.33 11 7.5 11zm0 5c-.83 0-1.5.67-1.5 1.5S6.67 19 7.5 19 9 18.33 9 17.5 8.33 16 7.5 16zm5-12c.83 0 1.5-.67 1.5-1.5S13.33 1 12.5 1 11 1.67 11 2.5 11.67 4 12.5 4zm-5-3C6.67 1 6 1.67 6 2.5S6.67 4 7.5 4 9 3.33 9 2.5 8.33 1 7.5 1zm5 10c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-10c-.83 0-1.5.67-1.5 1.5S11.67 9 12.5 9 14 8.33 14 7.5 13.33 6 12.5 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/draw.js
/* harmony default export */ var paths_draw = (["M17.7 12.7c0-.1 0-.2-.1-.3l-2-7c-.1-.3-.3-.6-.6-.7L1.8 0l-.6.5L7.7 7c.3-.2.6-.3 1-.3 1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2c0-.4.1-.7.3-1L.5 1.2l-.5.6L4.7 15c.1.3.4.5.7.6l7 2c.1 0 .2.1.3.1.3 0 .5-.1.7-.3l4-4c.2-.2.3-.5.3-.7zm1 1c-.3 0-.5.1-.7.3l-4 4c-.2.2-.3.4-.3.7 0 .5.4 1 1 1 .3 0 .5-.1.7-.3l4-4c.2-.2.3-.4.3-.7 0-.6-.5-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/drawer-left.js
/* harmony default export */ var paths_drawer_left = (["M9 0a1 1 0 011 1v18a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1h8zM8 2H2v16h6V2zm2 7h6.59L14.3 6.71A.965.965 0 0114 6a1.003 1.003 0 011.71-.71l4 4c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-4 4a1.003 1.003 0 01-1.42-1.42l2.3-2.29H10V9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/drawer-left-filled.js
/* harmony default export */ var paths_drawer_left_filled = (["M1 0h8a1 1 0 011 1v18a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1zm9 9h6.59L14.3 6.71A.965.965 0 0114 6a1.003 1.003 0 011.71-.71l4 4c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-4 4a1.003 1.003 0 01-1.42-1.42l2.3-2.29H10V9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/drawer-right.js
/* harmony default export */ var paths_drawer_right = (["M19 0a1 1 0 011 1v18a1 1 0 01-1 1h-8a1 1 0 01-1-1V1a1 1 0 011-1h8zm-1 2h-6v16h6V2zm-8 7H3.41L5.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L3.41 11H10V9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/drawer-right-filled.js
/* harmony default export */ var paths_drawer_right_filled = (["M11 0h8a1 1 0 011 1v18a1 1 0 01-1 1h-8a1 1 0 01-1-1V1a1 1 0 011-1zm-1 9H3.41L5.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L3.41 11H10V9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/drive-time.js
/* harmony default export */ var paths_drive_time = (["M20.01 7.7c0-.63-.5-1.14-1.1-1.14h-1.32l-.95-2.57c-.24-.64-.95-1.31-1.59-1.5 0 0-1.65-.49-5.05-.49s-5.04.49-5.04.49c-.63.19-1.35.86-1.59 1.5l-.95 2.57H1.1C.5 6.56 0 7.07 0 7.7c0 .63.5 1.14 1.1 1.14h.47l-.34.91c-.24.64-.43 1.72-.43 2.4v5.39c0 .8.63 1.45 1.4 1.45.77 0 1.4-.65 1.4-1.45v-.83h12.8v.83c0 .8.63 1.45 1.4 1.45s1.4-.65 1.4-1.45v-5.39c0-.68-.19-1.77-.43-2.4l-.34-.91h.47c.61 0 1.11-.51 1.11-1.14zm-16.47.34l1.12-3.16c.08-.22.32-.39.54-.39h9.6c.22 0 .46.17.54.39l1.12 3.16c.08.21-.04.39-.26.39H3.8c-.22-.01-.34-.18-.26-.39zm.96 4.94c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.68 1.5 1.5c0 .83-.67 1.5-1.5 1.5zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/duplicate.js
/* harmony default export */ var paths_duplicate = (["M15 4H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 14H2V6h12v12zm5-18H5c-.55 0-1 .45-1 1v2h2V2h12v12h-1v2h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/edit.js
/* harmony default export */ var paths_edit = (["M4.59 12.59l2.83 2.83 7.65-7.65-2.83-2.83-7.65 7.65zM2 18l4.41-1.59-2.81-2.79L2 18zM16 2c-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.83 1.65-1.65A2.006 2.006 0 0016 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/eject.js
/* harmony default export */ var paths_eject = (["M4 12h12c.55 0 1-.45 1-1 0-.25-.1-.47-.25-.64l.01-.01-6-7-.01.01C10.57 3.14 10.3 3 10 3s-.57.14-.75.36l-.01-.01-6 7 .01.01c-.15.17-.25.39-.25.64 0 .55.45 1 1 1zm12 1H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/emoji.js
/* harmony default export */ var paths_emoji = (["M10 0c5.523 0 10 4.477 10 10s-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0zm0 2a8 8 0 100 16 8 8 0 000-16zm-4 8l.015.215C6.219 12.42 7.925 14 10 14a4 4 0 003.995-3.8L14 10h2l-.013.238C15.754 13.552 13.163 16 10 16a6 6 0 01-5.996-5.775L4 10h2zm1.5-4a1.5 1.5 0 110 3 1.5 1.5 0 010-3zm5 0a1.5 1.5 0 110 3 1.5 1.5 0 010-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/endorsed.js
/* harmony default export */ var paths_endorsed = (["M19.83 9.38L18.81 7.6V5.62c0-.45-.23-.85-.61-1.08l-1.71-1-1.02-1.76a1.25 1.25 0 00-1.08-.61h-2.03l-1.74-1c-.38-.23-.87-.23-1.25 0l-1.74 1H5.65c-.44 0-.85.23-1.08.61L3.58 3.5l-1.8 1.04c-.38.24-.62.64-.62 1.08v2.06L.17 9.4c-.11.19-.17.4-.17.61s.06.42.17.61l.99 1.72v2.06c0 .45.23.85.61 1.08l1.78 1.02.99 1.72c.23.38.63.61 1.08.61h1.99l1.74 1c.19.11.41.17.62.17.21 0 .42-.06.61-.17l1.74-1h2.03c.44 0 .85-.23 1.08-.61l1.02-1.76 1.71-1c.38-.23.61-.64.61-1.08v-1.97l1.02-1.78c.27-.38.27-.85.04-1.25zm-5.08-.71l-5.01 5.01c-.18.18-.43.29-.71.29-.28 0-.53-.11-.71-.29l-3.01-3.01a1.003 1.003 0 011.42-1.42l2.3 2.3 4.31-4.3a1.003 1.003 0 011.71.71c0 .28-.12.53-.3.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/envelope.js
/* harmony default export */ var paths_envelope = (["M0 4.01v11.91l6.27-6.27L0 4.01zm18.91-1.03H1.09L10 10.97l8.91-7.99zm-5.18 6.66L20 15.92V4.01l-6.27 5.63zm-3.23 2.9c-.13.12-.31.19-.5.19s-.37-.07-.5-.19l-2.11-1.89-6.33 6.33h17.88l-6.33-6.33-2.11 1.89z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/equals.js
/* harmony default export */ var paths_equals = (["M4 7h12a1 1 0 010 2H4a1 1 0 110-2zm0 4h12a1 1 0 010 2H4a1 1 0 010-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/eraser.js
/* harmony default export */ var paths_eraser = (["M18.71 8.43c.39-.4.39-1.05 0-1.45l-5.53-5.72a.967.967 0 00-1.4 0L1.29 12.1c-.39.4-.39 1.05 0 1.45l4.25 4.39 2.13 2.05h9.27c.02 0 .03.01.05.01.55 0 1-.45 1-1s-.45-1-1-1H9.46l.05-.05h.01l.81-.84 8.38-8.68zM7.52 17.94l-4.95-5.12 4.46-4.61 4.95 5.12-4.46 4.61z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/error.js
/* harmony default export */ var paths_error = (["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm1 16H9v-2h2v2zm0-3H9V4h2v9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/euro.js
/* harmony default export */ var paths_euro = (["M8.89 4.47c.56-.31 1.23-.47 2.03-.47.44 0 .85.07 1.25.22.4.14.76.35 1.07.6.17.14.33.3.47.47l2.32-2.32c-.16-.15-.3-.32-.47-.46-.62-.49-1.33-.87-2.12-1.13-.8-.25-1.64-.38-2.52-.38-1.24 0-2.35.22-3.33.66-.99.44-1.82 1.05-2.49 1.82-.68.78-1.2 1.68-1.56 2.72-.09.26-.13.54-.2.8H2c-.55 0-1 .45-1 1s.45 1 1 1h1.04c-.01.2-.04.38-.04.58 0 .15.03.28.03.42H2c-.55 0-1 .45-1 1s.45 1 1 1h1.31c.07.3.13.6.23.89.36 1.02.88 1.92 1.56 2.67.68.76 1.51 1.35 2.49 1.79.98.43 2.09.65 3.33.65.99 0 1.9-.15 2.73-.46.83-.3 1.55-.74 2.17-1.32.03-.03.05-.06.08-.09l-2.41-2.15c-.01.01-.02.02-.02.03-.61.67-1.46 1-2.54 1-.8 0-1.47-.16-2.03-.47-.56-.31-1.01-.72-1.35-1.24-.28-.38-.47-.83-.63-1.3H12c.55 0 1-.45 1-1s-.45-1-1-1H6.56c0-.14-.02-.28-.02-.42 0-.2.02-.39.03-.58H13c.55 0 1-.45 1-1s-.45-1-1-1H6.94c.15-.46.34-.9.59-1.28.35-.52.8-.94 1.36-1.25zM18 11.38v0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/exchange.js
/* harmony default export */ var paths_exchange = (["M2.5 8a2.5 2.5 0 000 5 2.5 2.5 0 000-5zm10.35 3.15a.495.495 0 10-.7.7L13.3 13H5.5c-.28 0-.5.22-.5.5s.22.5.5.5h7.79l-1.15 1.15c-.08.09-.14.21-.14.35a.495.495 0 00.85.35l2-2c.09-.09.15-.21.15-.35s-.06-.26-.15-.35l-2-2zM17.5 8a2.5 2.5 0 000 5 2.5 2.5 0 000-5zM7.15 9.85a.495.495 0 10.7-.7L6.71 8h7.79c.28 0 .5-.22.5-.5s-.22-.5-.5-.5H6.71l1.15-1.15c.08-.09.14-.21.14-.35a.495.495 0 00-.85-.35l-2 2c-.09.09-.15.21-.15.35s.06.26.15.35l2 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/exclude-row.js
/* harmony default export */ var paths_exclude_row = (["M1 3h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zM0 13a1.003 1.003 0 001.71.71L4 11.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L5.41 10 7.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L4 8.59l-2.29-2.3A1.003 1.003 0 00.29 7.71L2.59 10 .3 12.29c-.19.18-.3.43-.3.71zm18-5h-7c-1.1 0-2 .9-2 2s.9 2 2 2h7c1.1 0 2-.9 2-2s-.9-2-2-2zm1 9H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/expand-all.js
/* harmony default export */ var paths_expand_all = (["M4 9c.28 0 .53-.11.71-.29L10 3.41l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-6-6C10.53 1.11 10.28 1 10 1s-.53.11-.71.29l-6 6A1.003 1.003 0 004 9zm12 2c-.28 0-.53.11-.71.29L10 16.59 4.71 11.3A.965.965 0 004 11a1.003 1.003 0 00-.71 1.71l6 6c.18.18.43.29.71.29s.53-.11.71-.29l6-6A1.003 1.003 0 0016 11z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/export.js
/* harmony default export */ var _20px_paths_export = (["M5 7c.28 0 .53-.11.71-.29L9 3.41V15c0 .55.45 1 1 1s1-.45 1-1V3.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-5-5C10.53.11 10.28 0 10 0s-.53.11-.71.29l-5 5A1.003 1.003 0 005 7zm14 7c-.55 0-1 .45-1 1v3H2v-3c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/eye-off.js
/* harmony default export */ var paths_eye_off = (["M20 9.96v-.03-.01-.02-.02a.794.794 0 00-.21-.43c-.55-.69-1.19-1.3-1.85-1.87l-3.93 2.62a3.966 3.966 0 01-3.96 3.77c-.47 0-.91-.1-1.33-.24l-2.24 1.49c.52.21 1.05.39 1.6.51 1.21.27 2.43.28 3.64.05 1.11-.21 2.17-.64 3.17-1.18 1.56-.84 2.99-2 4.23-3.3.23-.24.46-.49.67-.75a.87.87 0 00.21-.43v-.02-.02-.01-.03V10v-.04zm-.46-5.14c.27-.18.46-.47.46-.82 0-.55-.45-1-1-1-.21 0-.39.08-.54.18l-.01-.02L15 5.46c-.95-.53-1.95-.96-3.01-1.2a9.158 9.158 0 00-3.65-.04c-1.11.21-2.17.64-3.17 1.18-1.56.84-2.99 2-4.23 3.3-.23.24-.46.48-.67.75-.27.34-.27.76 0 1.1.64.79 1.39 1.5 2.16 2.15.26.21.52.41.79.61L.44 15.16l.01.02A1 1 0 000 16c0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02 18-12-.01-.02zm-8.67 3.4c-.25-.12-.53-.2-.83-.2-1.1 0-1.99.89-1.99 1.99 0 .03.02.06.02.09l-1.78 1.19c-.14-.4-.22-.83-.22-1.28 0-2.19 1.78-3.97 3.98-3.97 1.01 0 1.91.38 2.61 1l-1.79 1.18z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/eye-on.js
/* harmony default export */ var paths_eye_on = (["M13.3 8.71c.18.18.43.29.71.29s.53-.11.71-.29l4.99-5a1.003 1.003 0 00-1.42-1.42L14 6.58l-2.29-2.29a.956.956 0 00-.7-.29 1.003 1.003 0 00-.71 1.71l3 3zM20 9.96v-.03-.01-.02-.02a.823.823 0 00-.21-.44c-.44-.55-.94-1.05-1.46-1.52l-2.2 2.2c-.55.54-1.3.88-2.12.88-.05 0-.09-.01-.14-.01a3.978 3.978 0 01-3.86 3.02 4.007 4.007 0 01-1.66-7.65A2.97 2.97 0 018.02 5c0-.28.05-.54.12-.8-1.05.22-2.07.64-3.02 1.15-1.57.85-3 2.02-4.24 3.33-.23.25-.46.5-.67.76-.28.35-.28.77 0 1.12.64.8 1.4 1.52 2.17 2.17 1.66 1.41 3.56 2.58 5.66 3.06 1.21.27 2.43.29 3.65.05 1.11-.21 2.18-.65 3.18-1.19 1.57-.85 3-2.02 4.24-3.33.23-.24.46-.49.67-.76.11-.12.18-.27.21-.44v-.02-.02-.01-.03V10c.01-.01.01-.03.01-.04zm-9.99 2.05c1.03 0 1.87-.79 1.98-1.8l-.09-.09-.01.01-2.1-2.11c-1 .11-1.77.95-1.77 1.98-.01 1.11.89 2.01 1.99 2.01z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/eye-open.js
/* harmony default export */ var paths_eye_open = (["M10.01 7.984A2.008 2.008 0 008.012 9.99c0 1.103.9 2.006 1.998 2.006a2.008 2.008 0 001.998-2.006c0-1.103-.9-2.006-1.998-2.006zM20 9.96v-.03-.01-.02-.02a.827.827 0 00-.21-.442c-.64-.802-1.398-1.514-2.168-2.166-1.658-1.404-3.566-2.587-5.664-3.058a8.982 8.982 0 00-3.656-.05c-1.11.2-2.178.641-3.177 1.183-1.569.852-2.997 2.016-4.246 3.33-.23.25-.46.49-.67.761-.279.351-.279.773 0 1.124.64.802 1.4 1.514 2.169 2.166 1.658 1.404 3.566 2.577 5.664 3.058 1.209.271 2.438.281 3.656.05 1.11-.21 2.178-.651 3.177-1.193 1.569-.852 2.997-2.016 4.246-3.33.23-.24.46-.49.67-.751.11-.12.179-.271.209-.442v-.02-.02-.01-.03V10v-.04zM10.01 14A4.003 4.003 0 016.014 9.99a4.003 4.003 0 013.996-4.011 4.003 4.003 0 013.996 4.011 4.003 4.003 0 01-3.996 4.011z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/fast-backward.js
/* harmony default export */ var paths_fast_backward = (["M18 3c-.23 0-.42.09-.59.21l-.01-.01L11 8V4c0-.55-.45-1-1-1-.23 0-.42.09-.59.21L9.4 3.2l-8 6 .01.01C1.17 9.4 1 9.67 1 10s.17.6.41.79l-.01.01 8 6 .01-.01c.17.12.36.21.59.21.55 0 1-.45 1-1v-4l6.4 4.8.01-.01c.17.12.36.21.59.21.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/fast-forward.js
/* harmony default export */ var paths_fast_forward = (["M19 10c0-.33-.17-.6-.41-.79l.01-.01-8-6-.01.01C10.42 3.09 10.23 3 10 3c-.55 0-1 .45-1 1v4L2.6 3.2l-.01.01C2.42 3.09 2.23 3 2 3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1 .23 0 .42-.09.59-.21l.01.01L9 12v4c0 .55.45 1 1 1 .23 0 .42-.09.59-.21l.01.01 8-6-.01-.01c.24-.19.41-.46.41-.79z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/feed.js
/* harmony default export */ var paths_feed = (["M2.5 15a2.5 2.5 0 000 5 2.5 2.5 0 000-5zm.5-5c-.55 0-1 .45-1 1s.45 1 1 1c2.76 0 5 2.24 5 5 0 .55.45 1 1 1s1-.45 1-1c0-3.87-3.13-7-7-7zM3 0c-.55 0-1 .45-1 1s.45 1 1 1c8.28 0 15 6.72 15 15 0 .55.45 1 1 1s1-.45 1-1C20 7.61 12.39 0 3 0zm0 5c-.55 0-1 .45-1 1s.45 1 1 1c5.52 0 10 4.48 10 10 0 .55.45 1 1 1s1-.45 1-1C15 10.37 9.63 5 3 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/feed-subscribed.js
/* harmony default export */ var paths_feed_subscribed = (["M2.5 15a2.5 2.5 0 000 5 2.5 2.5 0 000-5zM3 2c1.76 0 3.44.31 5.01.87.03-.71.31-1.35.75-1.85C6.96.37 5.03 0 3 0c-.55 0-1 .45-1 1s.45 1 1 1zm10.32 4.67a.99.99 0 001.4 0l4.98-4.98c.19-.17.3-.42.3-.7 0-.55-.45-1-1-1a.99.99 0 00-.7.29l-4.27 4.27-2.28-2.28a.99.99 0 00-.7-.29c-.55 0-.99.45-.99 1 0 .28.11.52.29.7l2.97 2.99zM3 10c-.55 0-1 .45-1 1s.45 1 1 1c2.76 0 5 2.24 5 5 0 .55.45 1 1 1s1-.45 1-1c0-3.87-3.13-7-7-7zm13.94-2.69l-.82.82-.02-.02c-.2.2-.42.37-.67.51A14.8 14.8 0 0118 17c0 .55.45 1 1 1s1-.45 1-1c0-3.61-1.14-6.94-3.06-9.69zM3 5c-.55 0-1 .45-1 1s.45 1 1 1c5.52 0 10 4.48 10 10 0 .55.45 1 1 1s1-.45 1-1C15 10.37 9.63 5 3 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/film.js
/* harmony default export */ var paths_film = (["M19 2h-5v3H6V2H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h5v-3h8v3h5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM4 17H2v-2h2v2zm0-3H2v-2h2v2zm0-3H2V9h2v2zm0-3H2V6h2v2zm0-3H2V3h2v2zm10 8H6V7h8v6zm4 4h-2v-2h2v2zm0-3h-2v-2h2v2zm0-3h-2V9h2v2zm0-3h-2V6h2v2zm0-3h-2V3h2v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/filter.js
/* harmony default export */ var paths_filter = (["M18 1H2a1.003 1.003 0 00-.71 1.71L7 8.41V18a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71V8.41l5.71-5.71c.18-.17.29-.42.29-.7 0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/filter-keep.js
/* harmony default export */ var paths_filter_keep = (["M15 2c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L5 7.41V16a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71V7.41l4.71-4.71c.18-.17.29-.42.29-.7zm4 11c-.28 0-.53.11-.71.29L15 16.59l-1.29-1.29A.965.965 0 0013 15a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0019 13z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/filter-list.js
/* harmony default export */ var paths_filter_list = (["M15 2c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L5 7.41V16a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71V7.41l4.71-4.71c.18-.17.29-.42.29-.7zm-4 8c0 .55.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1h-7c-.55 0-1 .45-1 1zm8 7h-7c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1zm0-4h-7c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/filter-open.js
/* harmony default export */ var paths_filter_open = (["M15 2c0 .28-.11.53-.29.7L10 7.41V13c0 .28-.11.53-.29.71l-3 3A1.003 1.003 0 015 16V7.41L.29 2.71A1.003 1.003 0 011 1h13c.55 0 1 .45 1 1zm4.707 11.293a1 1 0 010 1.414l-4 4c-.63.63-1.707.184-1.707-.707v-8c0-.89 1.077-1.337 1.707-.707l4 4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/filter-remove.js
/* harmony default export */ var paths_filter_remove = (["M15 2c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L5 7.41V16a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71V7.41l4.71-4.71c.18-.17.29-.42.29-.7zm2.91 13.5l1.79-1.79c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-1.79 1.79-1.79-1.79a1.003 1.003 0 00-1.42 1.42l1.79 1.79-1.79 1.79a1.003 1.003 0 001.42 1.42l1.79-1.79 1.79 1.79a1.003 1.003 0 001.42-1.42l-1.8-1.79z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/flag.js
/* harmony default export */ var paths_flag = (["M3 3c-.55 0-1 .45-1 1v15c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1zm0-3c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm2 4.08v8.28c3.01-2.41 8.67 2.64 13 0V4.08C13.61 7.14 8.01 1 5 4.08z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/flame.js
/* harmony default export */ var paths_flame = (["M11.622 0c0 1.71.49 3.077 1.472 4.103C16.364 6.496 18 9.23 18 12.308c0 3.418-1.962 5.983-5.887 7.692 2.887-3 2.453-4.23-.49-8C8.5 13.5 9 14.5 9.5 16.5c-1.048 0-2 0-2.5-.5 0 .684 1.197 2.5 1.952 4-3.924-1.026-8.123-7.18-6.651-7.692.981-.342 2.126-.171 3.434.513C4.1 6.667 6.062 2.393 11.622 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/flash.js
/* harmony default export */ var paths_flash = (["M4.96 6.37a1.003 1.003 0 001.42-1.42l-2-2a1.07 1.07 0 00-.71-.28 1.003 1.003 0 00-.71 1.71l2 1.99zm9.37.3c.28 0 .53-.11.71-.29l2-2a1.003 1.003 0 00-1.42-1.42l-2 2a1.003 1.003 0 00.71 1.71zM10 5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1S9 .45 9 1v3c0 .55.45 1 1 1zm-5 5c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1zm14-1h-3c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1zm-9-3c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm5.04 1.63a1.003 1.003 0 00-1.42 1.42l2 2a1.003 1.003 0 001.42-1.42l-2-2zM10 15c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1s1-.45 1-1v-3c0-.55-.45-1-1-1zm-4.33-1.67c-.28 0-.53.11-.71.29l-2 2a1.003 1.003 0 001.42 1.42l2-2a1.003 1.003 0 00-.71-1.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/floating-point.js
/* harmony default export */ var paths_floating_point = (["M1 6.648c.343 0 .676-.028 1-.085.324-.057.614-.152.871-.284.267-.133.49-.303.672-.512.19-.208.314-.464.371-.767h1.329v9.947H3.457v-7.02H1V6.648zm13.965-1.635c.688 0 1.247.16 1.677.478.44.31.78.711 1.018 1.204.247.483.413 1.016.495 1.6.092.583.137 1.149.137 1.696 0 .547-.045 1.112-.137 1.696a5.182 5.182 0 01-.495 1.614 3.234 3.234 0 01-1.018 1.203c-.43.31-.99.465-1.677.465-.688 0-1.251-.155-1.691-.465-.431-.319-.77-.72-1.018-1.203a5.714 5.714 0 01-.495-1.614 12.116 12.116 0 01-.123-1.696c0-.547.04-1.113.123-1.696a5.534 5.534 0 01.495-1.6 3.26 3.26 0 011.018-1.204c.44-.319 1.004-.478 1.691-.478zm0 8.657c.34 0 .623-.096.853-.287.229-.2.407-.465.536-.794a4.61 4.61 0 00.288-1.176c.056-.447.083-.92.083-1.422 0-.502-.027-.971-.083-1.409a4.61 4.61 0 00-.288-1.176c-.129-.337-.307-.602-.536-.793-.23-.2-.514-.301-.853-.301-.348 0-.637.1-.866.3-.22.192-.399.457-.537.794-.128.337-.22.73-.274 1.176-.056.438-.083.907-.083 1.409 0 .501.027.975.082 1.422.055.447.147.84.275 1.176.138.329.317.593.537.794.229.191.518.287.866.287zm-5.104-.588H7.875V15h1.986v-1.918z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/floppy-disk.js
/* harmony default export */ var paths_floppy_disk = (["M14 1h-3v5h3V1zm5.71 2.29l-3-3A.997.997 0 0016 0h-1v7H5V0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V4c0-.28-.11-.53-.29-.71zM17 19H3v-8c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/flow-branch.js
/* harmony default export */ var paths_flow_branch = (["M14.425 7.953a3.98 3.98 0 01.562 2.045 3.98 3.98 0 01-.583 2.08L18 15.671V12.98c0-.248.097-.496.29-.689.379-.379 1.047-.38 1.426 0a.94.94 0 01.283.696l-.001 5.049a.957.957 0 01-.276.69.955.955 0 01-.69.273h-5.059a.971.971 0 01-.689-.289 1.026 1.026 0 010-1.417.972.972 0 01.69-.29h2.702l-3.634-3.573a3.998 3.998 0 01-5.924-2.431H1a1 1 0 010-2h6.12a3.998 3.998 0 015.96-2.409L16.665 3l-2.694-.001a.972.972 0 01-.689-.29 1.035 1.035 0 010-1.425.94.94 0 01.696-.283l5.05.001c.248 0 .497.083.69.276a.954.954 0 01.272.69l.001 5.052a.971.971 0 01-.29.689 1.028 1.028 0 01-1.419 0 .972.972 0 01-.29-.69V4.323l-3.567 3.63z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/flow-end.js
/* harmony default export */ var paths_flow_end = (["M12 9.919a3.998 3.998 0 014-3.92c2.21 0 4 1.79 4 3.997a3.998 3.998 0 01-4 3.996 3.998 3.998 0 01-4-3.916.967.967 0 01-.28.612L7.685 14.71a.958.958 0 01-.686.285c-.536 0-.994-.461-.994-.997 0-.273.107-.528.283-.704l2.379-2.302H.98c-.537 0-.976-.46-.976-.996s.44-.992.976-.992h7.676L6.287 6.687a.957.957 0 01-.283-.686c0-.536.458-.996.994-.996.274 0 .51.1.686.285l4.027 4.024c.159.158.27.365.29.605z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/flow-linear.js
/* harmony default export */ var paths_flow_linear = (["M5.125 10.997H.976C.439 10.997 0 10.537 0 10c0-.536.44-.993.976-.993h4.148a4.002 4.002 0 017.752 0h3.776L14.293 6.69a.962.962 0 01-.285-.687c0-.537.46-1.001.996-1.001a.96.96 0 01.698.3l4.005 4.015c.176.176.293.41.293.683a.972.972 0 01-.283.693L15.702 14.7a.997.997 0 01-.698.297c-.537 0-.996-.453-.996-.99 0-.273.107-.517.283-.692l2.371-2.318h-3.787a4.002 4.002 0 01-7.75 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/flow-review.js
/* harmony default export */ var paths_flow_review = (["M6.13 9.004A4.005 4.005 0 0110.012 6c1.87 0 3.44 1.278 3.881 3.005h2.768l-2.354-2.317a.97.97 0 01-.283-.691c0-.536.462-.995 1-.995.273 0 .517.107.693.283l4 4.041a.97.97 0 01.284.692.956.956 0 01-.293.682l-3.991 3.997a.944.944 0 01-.694.292c-.537 0-1-.46-1-.997a.97.97 0 01.284-.692l2.345-2.29h-2.765a4.005 4.005 0 01-3.875 2.981 4.005 4.005 0 01-3.874-2.981H3.349l2.376 2.308a.97.97 0 01.283.691 1 1 0 01-.994.983.989.989 0 01-.713-.291L.293 10.699A.956.956 0 010 10.017a.97.97 0 01.283-.692l4.03-4.037a.996.996 0 01.701-.283c.537 0 .994.464.994 1a.97.97 0 01-.283.691L3.34 9.004h2.79z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/flow-review-branch.js
/* harmony default export */ var paths_flow_review_branch = (["M13.04 13.424c-.6.36-1.302.568-2.052.568a4 4 0 01-3.868-2.999H3.342l2.372 2.31c.176.176.283.42.283.694 0 .537-.452.998-.988.998a.935.935 0 01-.691-.289L.292 10.683A.96.96 0 010 9.999c0-.274.107-.518.283-.694l4.035-4.04a.973.973 0 01.691-.288c.536 0 .988.47.988 1.007a.975.975 0 01-.283.694L3.332 8.984h3.786a4 4 0 013.87-3.006c.771 0 1.492.22 2.102.599l3.565-3.57-2.538-.003a.974.974 0 01-.69-.29c-.38-.38-.38-1.052-.002-1.431A.94.94 0 0114.122 1l4.896.005a.96.96 0 01.69.277c.193.193.27.442.27.69l.005 4.9a.971.971 0 01-.289.69 1.023 1.023 0 01-1.416 0 .975.975 0 01-.29-.691l-.003-2.54-3.554 3.62c.351.596.553 1.291.553 2.034 0 .763-.213 1.477-.583 2.084l3.595 3.595.003-2.54c0-.249.097-.497.29-.69.38-.38 1.05-.381 1.429-.002a.94.94 0 01.282.697l-.005 4.9a.927.927 0 01-.277.675.974.974 0 01-.69.291L13.974 19a.97.97 0 01-.69-.29 1.03 1.03 0 01.002-1.42.974.974 0 01.69-.29l2.696-.003-3.632-3.573z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/flows.js
/* harmony default export */ var paths_flows = (["M17.5 7.93a2.5 2.5 0 00-2.45 2h-2.3l-4.01-4-.75.75 3.26 3.25h-6.3a2.5 2.5 0 100 1h6.3l-3.26 3.25.75.75 4.01-4h2.3a2.5 2.5 0 102.45-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/folder-close.js
/* harmony default export */ var paths_folder_close = (["M0 17c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7H0v10zM19 4H9.41l-1.7-1.71A.997.997 0 007 2H1c-.55 0-1 .45-1 1v3h20V5c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/folder-new.js
/* harmony default export */ var paths_folder_new = (["M12.994 7c0 1.655 1.344 3 2.998 3a3.002 3.002 0 002.999-3H20v10c0 .55-.45 1-1 1H1.01c-.55 0-1-.45-1-1V7h12.984zM10.76 6H0V3c0-.55.45-1 1-1h3.998c.28 0 .53.11.71.29L7.415 4h2.579c0 .768.29 1.469.765 2zm8.23-3c.55 0 1 .45 1 1s-.45 1-1 1h-1.998v2c0 .55-.45 1-1 1s-1-.45-1-1V5h-1.998c-.55 0-1-.45-1-1s.45-1 1-1h1.999V1c0-.55.45-1 .999-1 .55 0 1 .45 1 1v2h1.999z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/folder-open.js
/* harmony default export */ var paths_folder_open = (["M20 9c0-.55-.45-1-1-1H5c-.43 0-.79.27-.93.65h-.01l-3 8h.01c-.04.11-.07.23-.07.35 0 .55.45 1 1 1h14c.43 0 .79-.27.93-.65h.01l3-8h-.01c.04-.11.07-.23.07-.35zM3.07 7.63C3.22 7.26 3.58 7 4 7h14V5c0-.55-.45-1-1-1H8.41l-1.7-1.71A.997.997 0 006 2H1c-.55 0-1 .45-1 1v12.31l3.07-7.68z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/folder-shared.js
/* harmony default export */ var paths_folder_shared = (["M11 4H9.41l-1.7-1.71A.997.997 0 007 2H1c-.55 0-1 .45-1 1v3h11.78C11.3 5.47 11 4.77 11 4zm8-1h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L12.3 9.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 6.41V9c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1zm-2.46 7.7l-1.42 1.42a2.996 2.996 0 11-4.24-4.24l.88-.88H0v10c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-5.18c-.31.11-.65.18-1 .18-1.02 0-1.92-.52-2.46-1.3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/folder-shared-open.js
/* harmony default export */ var paths_folder_shared_open = (["M3.07 7.63C3.22 7.26 3.58 7 4 7h7.76l.54-.54A2.97 2.97 0 0111 4H8.41l-1.7-1.71A.997.997 0 006 2H1c-.55 0-1 .45-1 1v12.31l3.07-7.68zm13.47 3.07l-1.42 1.42A2.996 2.996 0 0110 10c0-.77.3-1.47.78-2H5c-.43 0-.79.27-.93.65h-.01l-3 8h.01c-.04.11-.07.23-.07.35 0 .55.45 1 1 1h14c.43 0 .79-.27.93-.65h.01l2.01-5.36c-1-.01-1.88-.52-2.41-1.29zM19 3h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L12.3 9.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 6.41V9c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/follower.js
/* harmony default export */ var paths_follower = (["M11.54 15.92c-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.08-.14.23-.48.2-.87-.05-.5-.25-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15-.02-.17-.06-.33-.11-.5a3.69 3.69 0 00-1.29-1.86C9.69 4.25 8.8 4 8.01 4c-.8 0-1.69.25-2.32.73-.61.47-1.06 1.13-1.28 1.86-.05.17-.09.33-.11.5-.12.6-.18 1.51-.18 2.14v.08c-.23.09-.44.32-.49.83-.04.39.12.73.2.87.08.35.28.72.63.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.38 1.59-1.48.65-3.71 1.35-4.16 2.4C-.16 19.38.02 20 .02 20h15.95s.18-.62-.27-1.67c-.46-1.06-2.68-1.75-4.16-2.41zm8.15-12.63l-3-3a.956.956 0 00-.7-.29 1.003 1.003 0 00-.71 1.71L16.58 3H13c-.55 0-1 .45-1 1s.45 1 1 1h3.58l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.3-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/following.js
/* harmony default export */ var paths_following = (["M11.55 15.92c-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.08-.14.23-.48.2-.87-.05-.5-.25-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15-.02-.17-.06-.33-.11-.5a3.69 3.69 0 00-1.29-1.86C9.7 4.25 8.81 4 8.02 4c-.79 0-1.68.25-2.31.73-.61.47-1.07 1.13-1.29 1.86-.05.16-.09.33-.11.5-.12.6-.18 1.51-.18 2.14v.08c-.23.09-.44.32-.48.83-.04.39.12.73.2.87.08.35.28.72.63.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.38 1.59C3 16.56.77 17.26.32 18.31-.15 19.38.04 20 .04 20h15.95s.18-.62-.27-1.67c-.46-1.06-2.69-1.75-4.17-2.41zM19 3h-3.58l1.29-1.29A1.003 1.003 0 0015.29.29l-3 3c-.17.18-.28.43-.28.71 0 .28.11.53.29.71l3 3c.18.18.43.29.7.29a1.003 1.003 0 00.71-1.71L15.42 5H19c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/font.js
/* harmony default export */ var paths_font = (["M17.93 18.64l-7-18C10.78.27 10.42 0 10 0s-.78.27-.93.64l-7 18c-.04.11-.07.23-.07.36 0 .55.45 1 1 1 .42 0 .78-.27.93-.64L6.41 13h7.19l2.47 6.36c.15.37.51.64.93.64.55 0 1-.45 1-1 0-.13-.03-.25-.07-.36zM7.18 11L10 3.76 12.82 11H7.18z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/fork.js
/* harmony default export */ var paths_fork = (["M16.71 11.29a1.003 1.003 0 00-1.42 1.42l1.3 1.29h-2.17l-8-8h10.17L15.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3a1.003 1.003 0 00-1.42 1.42L16.59 4H1c-.55 0-1 .45-1 1s.45 1 1 1h2.59l9.71 9.71c.17.18.42.29.7.29h2.59l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/form.js
/* harmony default export */ var _20px_paths_form = (["M2 13v4h4v-4H2zm-1-2h6c.55 0 1 .45 1 1v6c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1v-6c0-.55.45-1 1-1zm11-7h7c.55 0 1 .45 1 1s-.45 1-1 1h-7c-.55 0-1-.45-1-1s.45-1 1-1zM8 1a1.003 1.003 0 01.71 1.71l-5 6C3.53 8.89 3.28 9 3 9s-.53-.11-.71-.29l-2-2a1.003 1.003 0 011.42-1.42L3 6.59l4.29-5.3C7.47 1.11 7.72 1 8 1zm4 13h7c.55 0 1 .45 1 1s-.45 1-1 1h-7c-.55 0-1-.45-1-1s.45-1 1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/fuel.js
/* harmony default export */ var paths_fuel = (["M2.196 2H0v2h2c.317 0 .619.139.825.38l3.493 4.075-1.873 1.248a1 1 0 00-.445.832V18c0 .5.5 1 1 1h14c.5 0 1-.5 1-1V7.1c0-.034-.001-.067-.004-.1H20V3s0-1-1-1h-8c-.5 0-1 .5-1 1v3L8.12 7.254 4.463 3.035A3 3 0 002.196 2zM18 4v2h-6V4h6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/full-circle.js
/* harmony default export */ var paths_full_circle = (["M9.96 0a10 10 0 100 20 10 10 0 100-20z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/full-stacked-chart.js
/* harmony default export */ var paths_full_stacked_chart = (["M15 16h2c.55 0 1-.45 1-1v-5h-4v5c0 .55.45 1 1 1zM12 2c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v4h4V2zm6 4h-4v3h4V6zm0-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v3h4V2zm-6 5H8v5h4V7zm-9 9h2c.55 0 1-.45 1-1v-3H2v3c0 .55.45 1 1 1zm6 0h2c.55 0 1-.45 1-1v-2H8v2c0 .55.45 1 1 1zm10 1H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM6 2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v3h4V2zm0 4H2v5h4V6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/fullscreen.js
/* harmony default export */ var paths_fullscreen = (["M3.41 2H6c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v5c0 .55.45 1 1 1s1-.45 1-1V3.41L7.29 8.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L3.41 2zM8 11c-.28 0-.53.11-.71.29L2 16.59V14c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1H3.41l5.29-5.29c.19-.18.3-.43.3-.71 0-.55-.45-1-1-1zM19 0h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L11.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 3.41V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm0 13c-.55 0-1 .45-1 1v2.59l-5.29-5.29A.965.965 0 0012 11a1.003 1.003 0 00-.71 1.71l5.3 5.29H14c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/function.js
/* harmony default export */ var _20px_paths_function = (["M10.14 5.82H8.73c.4-1.66.94-2.87 1.6-3.64.4-.48.8-.72 1.18-.72.08 0 .14.02.19.07.05.05.07.1.07.18 0 .07-.05.19-.16.37s-.16.36-.16.52c0 .23.08.43.25.59a.9.9 0 00.64.25c.28 0 .51-.1.7-.3.19-.2.28-.47.28-.81 0-.39-.14-.7-.42-.94-.28-.24-.74-.36-1.36-.36-.97 0-1.86.29-2.65.87-.79.56-1.54 1.52-2.26 2.85-.24.46-.48.75-.7.88-.22.13-.57.19-1.06.19l-.32 1.15H5.9l-1.99 7.85c-.33 1.29-.56 2.09-.67 2.39-.17.44-.43.81-.77 1.12a.74.74 0 01-.5.19c-.05 0-.1-.02-.14-.05l-.04-.07c0-.03.05-.1.15-.2.1-.1.15-.26.15-.47 0-.23-.08-.42-.23-.57-.16-.15-.38-.23-.67-.23-.35 0-.63.1-.85.29-.21.2-.32.43-.32.7 0 .29.13.54.39.75.25.22.65.33 1.2.33.88 0 1.66-.23 2.33-.69.68-.46 1.27-1.17 1.78-2.14.51-.96 1.03-2.52 1.56-4.66l1.14-4.54H9.8l.34-1.15zm6.8 1.95c.25-.2.51-.29.78-.29.1 0 .29.04.56.11.27.08.51.11.72.11.29 0 .52-.1.72-.3.18-.19.28-.45.28-.77 0-.33-.1-.6-.29-.8-.19-.2-.47-.29-.82-.29-.32 0-.62.08-.9.23-.28.15-.64.49-1.08 1-.33.38-.81 1.05-1.44 2a9.712 9.712 0 00-1.31-3.22l-3.4.59-.07.37c.25-.05.47-.08.64-.08.34 0 .62.15.84.44.35.46.84 1.85 1.46 4.19-.49.66-.82 1.09-1 1.3-.3.33-.55.54-.74.64-.15.08-.32.12-.51.12-.14 0-.38-.08-.7-.24-.22-.1-.42-.16-.59-.16-.33 0-.6.11-.82.32-.21.22-.32.49-.32.83 0 .31.1.57.3.77.2.2.47.29.8.29.32 0 .63-.07.92-.21.29-.14.64-.43 1.08-.88.43-.45 1.03-1.16 1.79-2.14.29.93.55 1.61.76 2.03.21.42.46.73.74.91.28.19.62.28 1.04.28.4 0 .81-.15 1.23-.44.55-.38 1.1-1.04 1.68-1.97l-.35-.21c-.39.55-.68.89-.87 1.03-.12.09-.27.13-.44.13-.2 0-.4-.13-.59-.38-.33-.43-.77-1.63-1.33-3.6.47-.86.89-1.44 1.23-1.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/gantt-chart.js
/* harmony default export */ var paths_gantt_chart = (["M4 7h5c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm3 2v1c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1zm12 3h-6c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm0 4H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/geofence.js
/* harmony default export */ var paths_geofence = (["M8 11l.075.003.126.017.111.03.111.044.098.052.096.067.09.08c.036.035.068.073.097.112l.071.11.054.114.035.105.03.148L9 12V18a1 1 0 01-1.993.117L7 18v-3.586l-5.293 5.293a1 1 0 01-1.497-1.32l.083-.094L5.584 13h-3.58a1 1 0 01-.117-1.993L2.004 11H8zm3.018-11a1.003 1.003 0 01.39.087l.12.063.031.02.1.078 8.027 7.026.062.064.068.086.044.068.064.128.04.117.024.113.011.108v.1l-.007.073-.019.103-.037.121-.039.09-.05.087-4.996 7.994c-.06.097-.137.183-.226.254l-.093.067-.095.053-.087.037-.125.037a1.018 1.018 0 01-.218.026H11v-5a3 3 0 00-2.824-2.995L8 9H3V6a1 1 0 01.321-.734l.098-.08 7-5a1.01 1.01 0 01.45-.178L11.018 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/geolocation.js
/* harmony default export */ var paths_geolocation = (["M0 8.33l9.17 2.5 2.5 9.17L20 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/geosearch.js
/* harmony default export */ var paths_geosearch = (["M8 18.88c-3.79 0-6.88-3.09-6.88-6.88 0-.61.08-1.22.23-1.79.03.01.06-.01.1-.01h.09v.55c0 .23.21.42.44.42.04 0 .09-.01.12-.02l.9.88c.09.09.23.09.32 0s.09-.23 0-.32l-.86-.9c0-.02.05-.04.05-.07v-.13c0-.18.1-.25.29-.41h.53c.1 0 .19-.01.27-.05.01-.01.02 0 .03-.01.02-.01.03-.02.05-.04.01-.01.02-.01.02-.02l.02-.02 1.13-1.13c-.16-.32-.3-.65-.42-.99h-.64v-.53c0-.01.06.06.06-.1h.38c-.04-.16-.08-.32-.1-.48h-.71c.2-.16.42-.31.64-.45C4.02 6.09 4 5.8 4 5.5c0-.14.01-.28.02-.43C1.62 6.46 0 9.04 0 12c0 4.41 3.59 8 8 8 3.87 0 7.09-2.77 7.82-6.44l-.97-1.1c-.26 3.57-3.23 6.42-6.85 6.42zm-2.12-3.67v-.35h.15c.29 0 .49-.23.49-.53v-.68c0-.01.01-.01 0-.02L4.71 11.8h-.77c-.29 0-.47.24-.47.53v2c0 .29.18.53.47.53h.33v2.02c0 .28.28.51.56.51s.56-.23.56-.51v-1.22h-.01c.29 0 .5-.16.5-.45zm13.83-2.92l-3.68-3.68c.14-.21.27-.42.38-.65.02-.04.04-.07.05-.11.11-.22.2-.45.28-.69v-.01c.07-.24.13-.48.17-.73l.03-.17c.04-.24.06-.49.06-.75C17 2.46 14.54 0 11.5 0S6 2.46 6 5.5 8.46 11 11.5 11c.26 0 .51-.02.76-.06l.17-.03c.25-.04.49-.1.73-.17h.01c.24-.08.47-.17.69-.28.04-.02.07-.04.11-.05.23-.11.44-.24.65-.38l3.68 3.68c.17.18.42.29.7.29a1.003 1.003 0 00.71-1.71zM11.5 9.5c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm1.93 5.33v-.65c0-.11-.13-.21-.24-.21-.11 0-.24.09-.24.21v.65c0 .11.13.21.24.21.11 0 .24-.1.24-.21zm-2.41.67h.83c.29 0 .46-.21.46-.5v-1.86l.23-.22c-.34.05-.69.08-1.04.08-.36 0-.7-.03-1.05-.08.03.05.06.1.08.16V15c.01.29.2.5.49.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/git-branch.js
/* harmony default export */ var paths_git_branch = (["M15 2c-1.66 0-3 1.34-3 3 0 1.3.84 2.4 2 2.82V9c0 1.1-.9 2-2 2H8c-.73 0-1.41.21-2 .55V5.82C7.16 5.4 8 4.3 8 3c0-1.66-1.34-3-3-3S2 1.34 2 3c0 1.3.84 2.4 2 2.82v8.37C2.84 14.6 2 15.7 2 17c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.25-.77-2.3-1.85-2.75C6.45 13.52 7.16 13 8 13h4c2.21 0 4-1.79 4-4V7.82C17.16 7.4 18 6.3 18 5c0-1.66-1.34-3-3-3zM5 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 16c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM15 6c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/git-commit.js
/* harmony default export */ var paths_git_commit = (["M19 9h-4.1a5 5 0 00-9.8 0H1c-.55 0-1 .45-1 1s.45 1 1 1h4.1a5 5 0 009.8 0H19c.55 0 1-.45 1-1s-.45-1-1-1zm-9 4c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/git-merge.js
/* harmony default export */ var paths_git_merge = (["M15 8c-1.3 0-2.4.84-2.82 2H11c-2.49 0-4.54-1.83-4.92-4.21A2.995 2.995 0 005 0C3.34 0 2 1.34 2 3c0 1.3.84 2.4 2 2.81v8.37C2.84 14.6 2 15.7 2 17c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82V9.86C7.27 11.17 9.03 12 11 12h1.18A2.996 2.996 0 0018 11c0-1.66-1.34-3-3-3zM5 18c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM5 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm10 8c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/git-new-branch.js
/* harmony default export */ var paths_git_new_branch = (["M17 3h-1V2c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V5h1c.55 0 1-.45 1-1s-.45-1-1-1zm-3 4.86V9c0 1.1-.9 2-2 2H8c-.73 0-1.41.21-2 .55V5.82C7.16 5.4 8 4.3 8 3c0-1.66-1.34-3-3-3S2 1.34 2 3c0 1.3.84 2.4 2 2.82v8.37C2.84 14.6 2 15.7 2 17c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.25-.77-2.3-1.85-2.75C6.45 13.52 7.16 13 8 13h4c2.21 0 4-1.79 4-4V7.86c-.32.08-.65.14-1 .14s-.68-.06-1-.14zM5 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 16c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/git-pull.js
/* harmony default export */ var paths_git_pull = (["M17 14.18V7c0-2.21-1.79-4-4-4h-2.59l1.29-1.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C7.11 3.47 7 3.72 7 4c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L10.41 5H13c1.1 0 2 .9 2 2v7.18A2.996 2.996 0 0016 20c1.66 0 3-1.34 3-3 0-1.3-.84-2.4-2-2.82zM16 18c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM4 1C2.34 1 1 2.34 1 4c0 1.3.84 2.4 2 2.82v7.37C1.84 14.6 1 15.7 1 17c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82V6.82C6.16 6.4 7 5.3 7 4c0-1.66-1.34-3-3-3zm0 17c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM4 5c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/git-push.js
/* harmony default export */ var paths_git_push = (["M15 11c0-.28-.11-.53-.29-.71l-3-3C11.53 7.11 11.28 7 11 7s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42l1.29-1.3V19c0 .55.45 1 1 1s1-.45 1-1v-8.59l1.29 1.29c.18.19.43.3.71.3.55 0 1-.45 1-1zm4-11H1C.45 0 0 .45 0 1v16c0 .55.45 1 1 1h7v-2H2v-2h6v-1H4V2h14v11h-4v1h4v2h-4v2h5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM5 8h2V6H5v2zm2-5H5v2h2V3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/git-repo.js
/* harmony default export */ var paths_git_repo = (["M7 3H5v2h2V3zm0 6H5v2h2V9zm0-3H5v2h2V6zm12-6H1C.45 0 0 .45 0 1v16c0 .55.45 1 1 1h4v2l2-1 2 1v-2h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 16H9v-1H5v1H2v-2h16v2zm0-3H4V2h14v11z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/glass.js
/* harmony default export */ var paths_glass = (["M17 6V0H3v6c0 3.53 2.61 6.43 6 6.92V18H6c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1h-3v-5.08c3.39-.49 6-3.39 6-6.92z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/globe.js
/* harmony default export */ var paths_globe = (["M7.53 4.37c.1-.1.1-.26 0-.35l-.68-.68c-.1-.1-.25-.1-.35 0-.1.1-.1.26 0 .35l.68.68c.1.1.25.1.35 0zm3.17.06h.3c.09 0 .16-.01.16-.1 0-.09-.07-.1-.16-.1h-.3c-.09 0-.16.01-.16.1s.07.1.16.1zm.98 1.15c.09 0 .19-.08.19-.17v-.42c0-.09-.1-.17-.19-.17s-.19.08-.19.17v.42c0 .09.1.17.19.17zm-6.5 4.19c-.35 0-.56.28-.56.63v2.37c0 .35.21.62.56.62h.39v2.4c0 .34.33.61.67.61s.67-.27.67-.61v-1.44h-.02c.35 0 .6-.19.6-.54v-.41h.18c.35 0 .58-.28.58-.62v-.81c0-.01.01-.01 0-.02L6.1 9.77h-.92zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8 0-.74.11-1.46.3-2.14h.03v.65c0 .28.25.5.53.5.05 0 .1-.01.15-.02l1.05 1.05c.1.11.28.11.38 0 .1-.1.11-.27 0-.38L3.42 8.59c0-.03.05-.05.05-.08v-.16c0-.22.12-.3.34-.49h.63c.12 0 .23-.01.32-.07.01-.01.02 0 .03-.01.02-.02.04-.03.06-.04.01-.01.02-.01.03-.02l.02-.02 2.15-2.15c.24-.24.24-.63 0-.86-.23-.24-.62-.19-.86.04l-.41.46H5v-.64c0-.01.07.07.07-.12h.87c.17 0 .3-.12.3-.29 0-.17-.13-.29-.3-.29H4.88C6.27 2.7 8.05 2 10 2s3.73.7 5.12 1.86h-1.58l-.01-.04c-.06 0-.12 0-.17.04l-.71.7c-.09.09-.09.23 0 .31.09.09.23.09.32 0l.56-.6.01-.03h.34c0 .19-.1.13-.1.16v.1c0 .29-.2.5-.49.5h-.51c-.25 0-.52.28-.52.54v.23h-.12c-.16 0-.27.08-.27.24v.33h-.32c-.23 0-.41.15-.41.38 0 .22.18.35.41.35.1 0 .19.04.26-.16l.06.01.66-.59h.23l.53.5c.04.04.11.03.16-.01.04-.04.04-.16 0-.2L13 6.15h.32l.12.16c.25.25.65.23.89-.02l.12-.14H15c.02 0 .11.07.11.07v.33s-.06-.01-.07-.01h-.49c-.16 0-.28.13-.28.29 0 .16.13.29.28.29h.49c.01 0 .07-.01.07-.01v.2c-.19.28-.33.57-.62.57h-1.28s0-.01-.01-.01l-.58-.58a.622.622 0 00-.89 0l-.58.58s0 .01-.01.01h-.34c-.35 0-.67.28-.67.63v1.25c0 .35.32.61.67.61h1.22c.46.19.78.48.97.94v2.28c0 .35.23.6.58.6h.98c.35 0 .54-.25.54-.6v-2.2l1.21-1.17.04-.02.02-.01h.04c.1-.11.2-.26.2-.42V8.49c0-.25-.22-.44-.42-.63h.58c.02.38.29.57.63.57h.43c.13.51.18 1.03.18 1.57 0 4.42-3.58 8-8 8zm6.16-5.65c-.14 0-.29.11-.29.25v.77c0 .14.15.25.29.25.14 0 .29-.11.29-.25v-.77c0-.14-.15-.25-.29-.25zM10.5 3.48c0-.34-.28-.57-.62-.57h-.74c-.34 0-.57.25-.57.59 0 .05-.13.06.06.1v.64c0 .2.09.36.29.36.2 0 .29-.16.29-.36v-.19h.68c.33 0 .61-.23.61-.57z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/globe-network.js
/* harmony default export */ var paths_globe_network = (["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm7.39 7h-3.63c-.31-1.99-.92-3.66-1.72-4.73 2.45.65 4.41 2.42 5.35 4.73zM13 10c0 .69-.04 1.36-.11 2H7.11a18.419 18.419 0 010-4h5.77c.08.64.12 1.31.12 2zm-3-8c1.07 0 2.25 2.05 2.75 5h-5.5c.5-2.95 1.68-5 2.75-5zm-2.04.27C7.16 3.34 6.55 5.01 6.24 7H2.61c.94-2.31 2.9-4.08 5.35-4.73zM2 10c0-.69.11-1.36.28-2h3.83a18.419 18.419 0 000 4H2.28c-.17-.64-.28-1.31-.28-2zm.61 3h3.63c.31 1.99.92 3.66 1.72 4.73A7.996 7.996 0 012.61 13zM10 18c-1.07 0-2.25-2.05-2.75-5h5.5c-.5 2.95-1.68 5-2.75 5zm2.04-.27c.79-1.07 1.4-2.74 1.72-4.73h3.63a7.996 7.996 0 01-5.35 4.73zM13.89 12a18.419 18.419 0 000-4h3.83c.17.64.28 1.31.28 2s-.11 1.36-.28 2h-3.83z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/graph.js
/* harmony default export */ var paths_graph = (["M17.5 4A2.5 2.5 0 0015 6.5c0 .06.01.12.02.18l-1.9.84C12.38 6.6 11.27 6 10 6c-.83 0-1.59.25-2.23.68L4.91 4.14c.05-.21.09-.42.09-.64a2.5 2.5 0 00-5 0A2.5 2.5 0 002.5 6c.42 0 .81-.11 1.16-.3l2.79 2.48C6.17 8.73 6 9.34 6 10c0 1.41.73 2.64 1.83 3.35l-.56 1.67A2.498 2.498 0 005 17.5a2.5 2.5 0 005 0c0-.74-.32-1.39-.83-1.85l.56-1.68c.09.01.18.03.27.03 2.21 0 4-1.79 4-4 0-.22-.03-.44-.07-.65l2.02-.9c.43.34.96.55 1.55.55a2.5 2.5 0 000-5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/graph-remove.js
/* harmony default export */ var paths_graph_remove = (["M17.41 4l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L16 2.59 13.71.3A.965.965 0 0013 0a1.003 1.003 0 00-.71 1.71L14.59 4 12.3 6.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L16 5.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L17.41 4zM19 10c-.83 0-1.55-.36-2.09-.91l-.03.03-.88-.88-.88.88a2.996 2.996 0 11-4.24-4.24l.88-.88-.88-.88.03-.03C10.36 2.55 10 1.83 10 1c0-.35.07-.68.18-.99-.06 0-.12-.01-.18-.01C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10c0-.06-.01-.12-.01-.18-.31.11-.64.18-.99.18z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/greater-than.js
/* harmony default export */ var paths_greater_than = (["M12.838 10l-9.154 3.051a1 1 0 00.632 1.898l12-4c.912-.304.912-1.594 0-1.898l-12-4a1 1 0 00-.632 1.898L12.838 10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/greater-than-or-equal-to.js
/* harmony default export */ var paths_greater_than_or_equal_to = (["M3.684 11.051a1 1 0 00.632 1.898l12-4c.912-.304.912-1.594 0-1.898l-12-4a1 1 0 00-.632 1.898L12.838 8l-9.154 3.051zM4 15h12a1 1 0 110 2H4a1 1 0 010-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/grid.js
/* harmony default export */ var paths_grid = (["M19 11c.55 0 1-.45 1-1s-.45-1-1-1h-2V5h2c.55 0 1-.45 1-1s-.45-1-1-1h-2V1c0-.55-.45-1-1-1s-1 .45-1 1v2h-4V1c0-.55-.45-1-1-1S9 .45 9 1v2H5V1c0-.55-.45-1-1-1S3 .45 3 1v2H1c-.55 0-1 .45-1 1s.45 1 1 1h2v4H1c-.55 0-1 .45-1 1s.45 1 1 1h2v4H1c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h4v2c0 .55.45 1 1 1s1-.45 1-1v-2h4v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1h-2v-4h2zM9 15H5v-4h4v4zm0-6H5V5h4v4zm6 6h-4v-4h4v4zm0-6h-4V5h4v4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/grid-view.js
/* harmony default export */ var paths_grid_view = (["M0 19c0 .55.45 1 1 1h8v-9H0v8zM0 1v8h9V0H1C.45 0 0 .45 0 1zm19-1h-8v9h9V1c0-.55-.45-1-1-1zm-8 20h8c.55 0 1-.45 1-1v-8h-9v9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/group-objects.js
/* harmony default export */ var paths_group_objects = (["M6 7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zm8-3H6c-3.31 0-6 2.69-6 6s2.69 6 6 6h8c3.31 0 6-2.69 6-6s-2.69-6-6-6zm0 11H6c-2.76 0-5-2.24-5-5s2.24-5 5-5h8c2.76 0 5 2.24 5 5s-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/grouped-bar-chart.js
/* harmony default export */ var paths_grouped_bar_chart = (["M12 16h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1zm7 1H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm-3-1h1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1zm-9 0h1c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1zm-4 0h1c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/hand.js
/* harmony default export */ var paths_hand = (["M17 5c-.42 0-.79.27-.93.64L14.38 10h-.77l1.34-6.67c.03-.1.05-.21.05-.33a.998.998 0 00-1.98-.19h-.01L11.57 10H11V1c0-.55-.45-1-1-1S9 .45 9 1v9h-.2L6.97 2.76a.997.997 0 00-1.73-.41l-.03.03c-.01.02-.02.03-.03.04-.01.02-.01.03-.02.04v.01c-.01.01-.02.02-.02.03v.01c-.02.01-.02.02-.03.03 0 0 0 .01-.01.01 0 .01 0 .02-.01.03 0 0 0 .01-.01.01 0 .01-.01.02-.01.03 0 0 0 .01-.01.01 0 .01-.01.02-.01.03 0 .01 0 .01-.01.02 0 .01-.01.02-.01.03 0 .01 0 .01-.01.02 0 .01-.01.02-.01.03v.02c0 .01 0 .02-.01.03V3c0 .05 0 .09.01.14l1.45 10.25L6 12.7v.01L3.84 9.45h-.01A.98.98 0 003 9c-.55 0-1 .45-1 1 0 .2.06.39.17.55L6 18.44C7.06 19.4 8.46 20 10 20c3.31 0 6-2.69 6-6v-1.84l.01-.03v-.06l1.94-5.75A1.003 1.003 0 0017 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/hand-down.js
/* harmony default export */ var paths_hand_down = (["M17.68 9.84C15.91 9 14.27 6.49 13.45 4.9 12.41 2.43 12.21 0 7.87 0 5.49 0 3.95.76 3.05 2.65 2.31 4.2 2 5.48 2 9.79v.99c0 .82.69 1.48 1.54 1.48.38 0 .73-.14 1-.36.19.6.78 1.05 1.47 1.05.47 0 .89-.2 1.17-.52.26.47.77.79 1.36.79.65 0 1.2-.39 1.43-.93l.03.77v5.44c0 .48.23.91.59 1.18.21.19.5.32.85.32h.06c.83 0 1.5-.67 1.5-1.5v-8.24l.01-.67c.85.98 1.92 1.76 3.24 1.89 1.79.19 2.09-1.33 1.43-1.64z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/hand-left.js
/* harmony default export */ var paths_hand_left = (["M15.1 6.54c-1.58-.81-4.09-2.46-4.94-4.23-.31-.65-1.82-.35-1.64 1.43.13 1.33.91 2.4 1.89 3.24L9.74 7H1.5C.67 7 0 7.67 0 8.5v.06c0 .36.13.64.32.85.27.36.7.59 1.18.59h5.44l.78.01c-.54.23-.93.78-.93 1.43 0 .59.32 1.1.79 1.36-.32.28-.52.7-.52 1.17 0 .69.44 1.28 1.05 1.47-.22.27-.36.62-.36 1 0 .85.66 1.54 1.48 1.54h.99c4.31 0 5.59-.31 7.14-1.05 1.89-.9 2.65-2.44 2.65-4.82-.01-4.32-2.44-4.52-4.91-5.57z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/hand-right.js
/* harmony default export */ var paths_hand_right = (["M20 8.5c0-.83-.67-1.5-1.5-1.5h-8.24l-.67-.01c.98-.85 1.76-1.92 1.89-3.24.18-1.79-1.33-2.08-1.65-1.43-.84 1.76-3.35 3.41-4.93 4.23C2.43 7.59 0 7.79 0 12.13c0 2.38.76 3.92 2.65 4.82C4.2 17.69 5.48 18 9.79 18h.99c.82 0 1.48-.69 1.48-1.54 0-.38-.14-.73-.36-1 .6-.19 1.05-.78 1.05-1.47 0-.47-.2-.89-.52-1.17.47-.26.79-.77.79-1.36 0-.65-.39-1.2-.93-1.43l.77-.03h5.44c.48 0 .91-.23 1.18-.59.19-.21.32-.49.32-.85v-.03-.03z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/hand-up.js
/* harmony default export */ var paths_hand_up = (["M16.46 7.74c-.38 0-.73.14-1 .36-.19-.6-.78-1.05-1.47-1.05-.47 0-.89.2-1.17.52-.26-.47-.77-.79-1.36-.79-.65 0-1.2.39-1.43.93L10 6.94V1.5c0-.48-.23-.91-.59-1.18C9.2.13 8.92 0 8.56 0H8.5C7.67 0 7 .67 7 1.5v8.24l-.01.67c-.84-.98-1.92-1.76-3.24-1.89-1.79-.18-2.08 1.33-1.43 1.65 1.77.84 3.41 3.35 4.23 4.94 1.05 2.47 1.25 4.9 5.58 4.9 2.38 0 3.92-.76 4.82-2.65.74-1.56 1.05-2.84 1.05-7.15v-.99c0-.81-.69-1.48-1.54-1.48z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/hat.js
/* harmony default export */ var paths_hat = (["M18.5 13c1.118 0 1.466.534 1.498 1.366L20 14.5v.5c0 1.945-5.69 3-10 3S0 16.945 0 15v-.5c0-.908.323-1.5 1.5-1.5.895 0 3.5 1.2 8.5 1.2l.411-.003C15.143 14.134 17.631 13 18.5 13zm-5-10c1.725 0 2.954 2.729 3.688 8.186-1.455.263-3.805.72-6.392.801l-.434.01L10 12c-2.896 0-5.585-.524-7.189-.814C3.546 5.73 4.775 3 6.5 3 8.6 3 8.329 5.5 10 5.5S11.5 3 13.5 3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/header.js
/* harmony default export */ var paths_header = (["M16 1c-.55 0-1 .45-1 1v7H5V2c0-.55-.45-1-1-1s-1 .45-1 1v16c0 .55.45 1 1 1s1-.45 1-1v-7h10v7c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/header-one.js
/* harmony default export */ var paths_header_one = (["M10 0c.55 0 1 .45 1 1v14c0 .55-.45 1-1 1s-1-.45-1-1V9H2v6c0 .55-.45 1-1 1s-1-.45-1-1V1c0-.55.45-1 1-1s1 .45 1 1v6h7V1c0-.55.45-1 1-1zm7.4 10.77c.17-.2.29-.46.34-.77H19v10h-1.5v-7.11H15v-1.24c.32 0 .63-.03.93-.08.31-.06.58-.16.83-.29.26-.12.47-.3.64-.51z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/header-three.js
/* harmony default export */ var paths_header_three = (["M10.989 1c0-.55-.45-1-.999-1-.55 0-.999.45-.999 1v6H1.998V1c0-.55-.45-1-.999-1C.449 0 0 .45 0 1v14c0 .55.45 1 .999 1 .55 0 .999-.45.999-1V9h6.993v6c0 .55.45 1 .999 1 .55 0 .999-.45.999-1V1zm7.461 13.645c.49.11.87.38 1.14.82.27.44.41.97.41 1.61a3 3 0 01-.24 1.23c-.16.36-.38.67-.66.92-.27.25-.59.44-.96.58-.37.14-.75.21-1.16.21-.5 0-.93-.08-1.3-.24a2.55 2.55 0 01-.93-.68c-.25-.29-.44-.65-.57-1.06-.13-.42-.2-.88-.21-1.38h1.39c-.02.58.11 1.07.38 1.46.28.39.68.58 1.23.58.47 0 .86-.15 1.17-.45.31-.3.47-.72.47-1.27 0-.37-.07-.67-.2-.89-.13-.22-.3-.39-.51-.5-.21-.11-.45-.18-.71-.21-.26-.03-.53-.04-.81-.03v-1.17c.22.01.45 0 .68-.05.23-.05.43-.13.61-.24.18-.11.32-.27.43-.47.11-.2.16-.45.16-.74 0-.41-.12-.74-.37-.99s-.57-.37-.96-.37c-.24 0-.45.06-.63.17-.18.11-.33.26-.45.45s-.2.4-.26.63c-.05.23-.08.47-.07.72h-1.39c.01-.47.09-.9.23-1.3s.33-.75.57-1.04c.24-.3.53-.53.87-.69.34-.17.73-.25 1.16-.25.33 0 .66.05.98.16.32.11.61.27.87.48.26.21.47.47.62.8.15.32.23.7.23 1.12 0 .48-.09.91-.29 1.27-.2.36-.5.63-.92.79v.02z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/header-two.js
/* harmony default export */ var paths_header_two = (["M16.6 17.41c-.22.17-.4.36-.56.55-.16.19-.27.4-.33.61h4.28V20H14c.01-.81.18-1.52.53-2.13.35-.6.81-1.13 1.41-1.58.28-.23.58-.46.89-.68.31-.22.59-.46.85-.71.26-.26.48-.53.63-.83.16-.3.25-.64.26-1.02 0-.18-.02-.37-.06-.57-.04-.2-.11-.39-.22-.56s-.26-.31-.45-.43-.44-.18-.75-.18c-.28 0-.52.06-.71.19s-.34.3-.45.52c-.11.22-.2.48-.25.78-.05.3-.08.62-.09.97h-1.43c0-.54.07-1.04.2-1.5.13-.47.32-.87.58-1.2.26-.34.58-.6.95-.78.37-.19.81-.29 1.3-.29.54 0 .99.09 1.35.29.36.19.65.44.87.74.22.29.38.62.47.97.09.35.14.68.14 1 0 .4-.05.75-.16 1.07-.11.32-.26.61-.44.88-.19.27-.4.52-.63.74-.24.22-.48.43-.73.63s-.5.38-.75.56c-.26.17-.5.35-.71.53zM10 0c.55 0 1 .45 1 1v14c0 .55-.45 1-1 1s-1-.45-1-1V9H2v6c0 .55-.45 1-1 1s-1-.45-1-1V1c0-.55.45-1 1-1s1 .45 1 1v6h7V1c0-.55.45-1 1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/headset.js
/* harmony default export */ var paths_headset = (["M18.97 9H19A9 9 0 001 9h.03C.41 9.73 0 10.8 0 12c0 1.74.84 3.2 2 3.76V16c0 1.66 1.34 3 3 3h3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1H5c-.55 0-1-.45-1-1 .55 0 1-.45 1-1V9c0-.55-.45-1-1-1h-.92C3.57 4.61 6.47 2 10 2s6.43 2.61 6.92 6H16c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h1c1.66 0 3-1.79 3-4 0-1.2-.41-2.27-1.03-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/heart.js
/* harmony default export */ var paths_heart = (["M20 6.25C20 3.35 17.65 1 14.75 1c-1.02 0-1.95.31-2.75.82v-.04c-.09.06-.17.12-.26.19-.04.03-.09.06-.14.1-.68.51-1.24 1.18-1.6 1.96-.4-.86-1.04-1.57-1.8-2.1-.04-.02-.07-.05-.1-.08a7 7 0 00-.6-.33c-.13-.04-.23-.1-.35-.15-.05-.02-.1-.05-.15-.07v.02C6.45 1.13 5.87 1 5.25 1A5.25 5.25 0 000 6.25c0 .09.01.17.01.25H0c0 .06.01.12.02.18s.01.12.02.18C.13 7.89.44 9 1.07 10.17 2.23 12.33 4.1 14.11 7 16.53v.01c.9.75 1.89 1.55 3 2.46.71-.58 1.38-1.12 2-1.63 3.48-2.86 5.64-4.78 6.93-7.18.63-1.17.94-2.27 1.03-3.3.01-.07.01-.14.02-.21 0-.06.01-.11.02-.17h-.01c0-.09.01-.17.01-.26z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/heart-broken.js
/* harmony default export */ var paths_heart_broken = (["M8.11 7.45C8.05 7.31 8 7.16 8 7c0-.07.03-.13.04-.19h-.02l.86-4.32A5.159 5.159 0 005.25 1 5.25 5.25 0 000 6.25c0 .09.01.17.01.25H0c0 .06.01.12.02.18s.01.12.02.18C.13 7.89.44 9 1.07 10.17c1.38 2.58 3.76 4.6 7.71 7.83l-.76-3.8h.02c-.01-.07-.04-.13-.04-.2 0-.21.08-.39.18-.54l-.02-.01 1.68-2.52-1.73-3.48zM20 6.25C20 3.35 17.65 1 14.75 1c-1.54 0-2.92.67-3.88 1.73l-.83 4.13 1.85 3.69h-.01c.07.14.12.29.12.45 0 .21-.08.39-.18.54l.02.01-1.77 2.66.81 4.07c4.16-3.39 6.63-5.45 8.05-8.1.63-1.17.94-2.27 1.03-3.3.01-.07.01-.14.02-.21 0-.06.01-.11.02-.17h-.01c0-.08.01-.16.01-.25z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/heat-grid.js
/* harmony default export */ var paths_heat_grid = (["M14 12h6V8h-6v4zM0 12h6V8H0v4zm1-3h4v2H1V9zm-1 7c0 .55.45 1 1 1h5v-4H0v3zM19 3h-5v4h6V4c0-.55-.45-1-1-1zm0 3h-4V4h4v2zM0 4v3h6V3H1c-.55 0-1 .45-1 1zm7 3h6V3H7v4zm7 10h5c.55 0 1-.45 1-1v-3h-6v4zm-7 0h6v-4H7v4zm1-3h4v2H8v-2zm-1-2h6V8H7v4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/heatmap.js
/* harmony default export */ var paths_heatmap = (["M6 0a6 6 0 100 12A6 6 0 106 0z", "M10.5 8a4.5 4.5 0 100 9 4.5 4.5 0 100-9z", "M16.5 7a3.5 3.5 0 100 7 3.5 3.5 0 100-7zM18 16a2 2 0 100 4 2 2 0 100-4zM2.5 14a2.5 2.5 0 100 5 2.5 2.5 0 100-5zM16.5 0a2.5 2.5 0 100 5 2.5 2.5 0 100-5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/helicopter.js
/* harmony default export */ var paths_helicopter = (["M10 3v2H1V3.5a.5.5 0 00-1 0v5a.5.5 0 001 0V7l5 2c0 1.54.824 3.575 3 4.835V16H5.5a.5.5 0 100 1H16.5a.5.5 0 00.224-.053l2-1a.5.5 0 10-.448-.894L16.382 16H15v-1.1A5.002 5.002 0 0014 5h-1V3h6.5a.5.5 0 000-1h-16a.5.5 0 000 1H10zm4 13v-1c-1.608 0-2.928-.258-4-.683V16h4zm0-6V6a4 4 0 014 4h-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/help.js
/* harmony default export */ var paths_help = (["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM7.41 4.62c.65-.54 1.51-.82 2.56-.82.54 0 1.03.08 1.48.25.44.17.83.39 1.14.68.32.29.56.63.74 1.02.17.39.26.82.26 1.27s-.08.87-.24 1.23c-.16.37-.4.73-.71 1.11l-1.21 1.58c-.14.17-.28.33-.32.48-.05.15-.11.35-.11.6v.97H9v-2s.06-.58.24-.81l1.21-1.64c.25-.3.41-.56.51-.77s.14-.44.14-.67c0-.35-.11-.63-.32-.85s-.5-.33-.88-.33c-.37 0-.67.11-.89.33-.22.23-.37.54-.46.94-.03.12-.11.17-.23.16l-1.95-.29c-.12-.01-.16-.08-.14-.22.13-.93.52-1.67 1.18-2.22zM9 14h2.02L11 16H9v-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/helper-management.js
/* harmony default export */ var paths_helper_management = (["M17 10h-3v3h3v-3zm0 4h-3v3h3v-3zm0-8h-3v3h3V6zm2-6H1C.4 0 0 .4 0 1v18c0 .5.4 1 1 1h18c.5 0 1-.5 1-1V1c0-.6-.5-1-1-1zm-1 18H2V2h16v16zm-9-4H6v3h3v-3zm4 0h-3v3h3v-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/high-priority.js
/* harmony default export */ var paths_high_priority = (["M12 16v4H8v-4h4zm1-16l-1 14H8L7 0h6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/high-voltage-pole.js
/* harmony default export */ var paths_high_voltage_pole = (["M7 0a1 1 0 00-1 1v3H4V2a1 1 0 000-2H1a1 1 0 100 2h1v2H1a1 1 0 000 2h1v2H1a1 1 0 100 2h3a1 1 0 000-2V6h2v13a1 1 0 001.928.374L10 14.54l2.073 4.836A1 1 0 0014 19V6h2v2a1 1 0 100 2h3a1 1 0 100-2h-1V6h1a1 1 0 100-2h-1V2h1a1 1 0 100-2h-3a1 1 0 100 2v2h-2V1a1 1 0 00-1-1H7zm1 2v2h4V2H8zm4 12.128L11.088 12 12 9.872v4.256zM8.516 6L10 9.462 11.483 6H8.516zm.396 6L8 9.872v4.256L8.912 12z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/highlight.js
/* harmony default export */ var paths_highlight = (["M11.22 14.09l3.03-3.03.71.71L20 6.73l-5.71-5.71-5.04 5.04.71.71-3.02 3.04 4.28 4.28zm6.8 3.91h-16c-.55 0-1 .45-1 1s.45 1 1 1h16c.55 0 1-.45 1-1s-.45-1-1-1zm-15-1h4.04c.28 0 .53-.11.71-.3l2.02-2.02-3.44-3.45-4.04 4.04c-.18.18-.3.44-.3.71.01.57.46 1.02 1.01 1.02z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/history.js
/* harmony default export */ var _20px_paths_history = (["M10 0C6.71 0 3.82 1.6 2 4.05V2c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.76C5.23 3.17 7.47 2 10 2c4.42 0 8 3.58 8 8s-3.58 8-8 8-8-3.58-8-8c0-.55-.45-1-1-1s-1 .45-1 1c0 5.52 4.48 10 10 10s10-4.48 10-10S15.52 0 10 0zm0 3c-.55 0-1 .45-1 1v6c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L11 9.59V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/home.js
/* harmony default export */ var paths_home = (["M2 12v7c0 .55.45 1 1 1h5v-7h4v7h5c.55 0 1-.45 1-1v-7l-8-8-8 8zm17.71-2.71L17 6.59V3c0-.55-.45-1-1-1s-1 .45-1 1v1.59L10.71.3C10.53.11 10.28 0 10 0s-.53.11-.71.29l-9 9a1.003 1.003 0 001.42 1.42L10 2.41l8.29 8.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/horizontal-bar-chart.js
/* harmony default export */ var paths_horizontal_bar_chart = (["M1 1c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1zm3 5h11c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1zm8 8H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm7-6H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h15c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/horizontal-bar-chart-asc.js
/* harmony default export */ var paths_horizontal_bar_chart_asc = (["M1 9h11c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm0-5h9c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm18 12H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zM1 14h14c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/horizontal-bar-chart-desc.js
/* harmony default export */ var paths_horizontal_bar_chart_desc = (["M10 16H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm2-5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h11c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm3-5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zm4-5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/horizontal-distribution.js
/* harmony default export */ var paths_horizontal_distribution = (["M12 2H8c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM1 0C.45 0 0 .45 0 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm18 0c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/horizontal-inbetween.js
/* harmony default export */ var paths_horizontal_inbetween = (["M11.293 13.707a.999.999 0 001.412 0l2.963-2.962a1 1 0 000-1.49l-2.963-2.962a.999.999 0 10-1.412 1.412L13.587 10l-2.294 2.295a.999.999 0 000 1.412zM7.295 13.707a.999.999 0 001.412-1.412L6.413 10l2.294-2.295a.999.999 0 10-1.412-1.412L4.332 9.255A.996.996 0 004 10a.996.996 0 00.332.745l2.963 2.962zM0 20V0h1a1 1 0 011 1v18a1 1 0 01-1 1H0zM20 20V0h-1a1 1 0 00-1 1v18a1 1 0 001 1h1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/hurricane.js
/* harmony default export */ var paths_hurricane = (["M0 14c1.648.775 3 1 4 1-1-1-2-3.112-2-5a5.098 5.098 0 000-.045C2 5.17 6.201 1 11.172 1c3.206 0 6.9.667 8.828 5-1.648-.775-3-1-4-1 1 1 2 3.112 2 5v.045C18 14.83 13.799 19 8.828 19c-3.206 0-6.9-.667-8.828-5zm10-7a3 3 0 100 6 3 3 0 000-6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/id-number.js
/* harmony default export */ var paths_id_number = (["M2 5v10h16V5H2zm0-2h16c1.1 0 2 .9 2 2v10c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2z", "M8.88 12.38c-.17-.39-1.01-.66-1.56-.9-.56-.24-.48-.39-.5-.6v-.09c.19-.17.35-.4.45-.67 0 0 0-.02.01-.02l.06-.18c.13-.03.2-.17.23-.29.03-.05.09-.18.08-.33-.04-.18-.11-.27-.2-.3v-.03c0-.24-.02-.58-.06-.81-.01-.06-.02-.12-.04-.19-.08-.27-.25-.52-.48-.7C6.63 7.09 6.3 7 6 7s-.63.09-.87.27c-.23.17-.4.42-.48.7-.02.06-.03.13-.04.19-.04.22-.06.57-.06.81V9c-.09.03-.17.12-.19.31-.01.14.05.27.08.32.03.14.1.27.23.3.02.06.03.12.06.18v.01c.11.27.27.51.47.68v.08c-.02.2.04.35-.51.6-.56.24-1.39.51-1.56.9-.19.39-.12.62-.12.62h5.98c-.01 0 .06-.23-.11-.62zM12 7h4c.55 0 1 .45 1 1s-.45 1-1 1h-4c-.55 0-1-.45-1-1s.45-1 1-1zM12 11h4c.55 0 1 .45 1 1s-.45 1-1 1h-4c-.55 0-1-.45-1-1s.45-1 1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/image-rotate-left.js
/* harmony default export */ var paths_image_rotate_left = (["M10.5 13c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM14 7H1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 10l-5-3-1 2-2-4-3 4.5V9h11v8zm3-15h-1.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H16c1.1 0 2 .9 2 2v3c0 .55.45 1 1 1s1-.45 1-1V6c0-2.21-1.79-4-4-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/image-rotate-right.js
/* harmony default export */ var paths_image_rotate_right = (["M5.29 4.29a1.003 1.003 0 001.42 1.42l2-2C8.89 3.53 9 3.28 9 3c0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H4C1.79 2 0 3.79 0 6v3c0 .55.45 1 1 1s1-.45 1-1V6c0-1.1.9-2 2-2h1.59l-.3.29zM15.5 13c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM19 7H6c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 10l-5-3-1 2-2-4-3 4.5V9h11v8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/import.js
/* harmony default export */ var _20px_paths_import = (["M9.29 15.71c.18.18.43.29.71.29s.53-.11.71-.29l5-5a1.003 1.003 0 00-1.42-1.42L11 12.59V1c0-.55-.45-1-1-1S9 .45 9 1v11.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l5 5zM19 14c-.55 0-1 .45-1 1v3H2v-3c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/inbox.js
/* harmony default export */ var paths_inbox = (["M16.92 3.56l-.01-.02c-.16-.35-.5-.6-.91-.6H4c-.41 0-.76.25-.91.6l-.01.02L0 10.49v6.46c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-6.46l-3.08-6.93zM15 10.95c-.55 0-1 .45-1 1v1H6v-1c0-.55-.45-1-1-1H1.98l2.67-6h10.7l2.67 6H15z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/inbox-filtered.js
/* harmony default export */ var paths_inbox_filtered = (["M10.262 3l1.958 1.958v.05H4.65l-2.67 5.997H5c.55 0 1 .45 1 .999v1h8v-1c0-.55.45-1 1-1h3.02l-.635-1.426.625-.63c.354-.353.598-.8.707-1.289L20 10.545v6.456c0 .55-.45.999-1 .999H1c-.55 0-1-.45-1-1v-6.455L3.08 3.62l.01-.02c.15-.35.5-.6.91-.6h6.262zm9.088-3a.642.642 0 01.46 1.1l-3.03 3.03v2.95c0 .18-.07.34-.19.46l-1.28 1.29c-.11.1-.27.17-.45.17-.35 0-.64-.29-.64-.64V4.13L11.19 1.1a.642.642 0 01.45-1.1h7.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/inbox-geo.js
/* harmony default export */ var paths_inbox_geo = (["M7.427 3a7.467 7.467 0 00-.411 2.009H4.65l-2.67 5.996H5c.55 0 1 .45 1 .999v1h8V13c.165.01.332 0 .5 0a7.48 7.48 0 005.5-2.4V17c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1v-6.455L3.08 3.62l.01-.02c.15-.35.5-.6.91-.6h3.427zm5.715-.596a.133.133 0 01-.193 0l-.374-.374a.133.133 0 010-.193.133.133 0 01.193 0l.373.374a.133.133 0 010 .193zm1.743.033c-.05 0-.088-.006-.088-.055 0-.05.038-.056.088-.056h.165c.05 0 .088.006.088.055 0 .05-.038.056-.088.056h-.165zm.539.632c-.05 0-.104-.044-.104-.094v-.23c0-.05.054-.094.104-.094.05 0 .104.044.104.094v.23c0 .05-.055.094-.104.094zm-3.575 2.304h.506l1.182 1.2c.006.005 0 .005 0 .01v.446c0 .187-.126.341-.319.341h-.098v.226c0 .192-.138.296-.33.296h.01v.792c0 .188-.181.336-.368.336s-.369-.149-.369-.335v-1.32h-.214c-.193 0-.308-.149-.308-.341V5.72c0-.192.115-.346.308-.346zM14.5 0C17.536 0 20 2.464 20 5.5S17.536 11 14.5 11A5.502 5.502 0 019 5.5C9 2.464 11.464 0 14.5 0zm0 9.9c2.431 0 4.4-1.969 4.4-4.4 0-.297-.027-.583-.099-.864h-.236c-.188 0-.336-.104-.347-.313h-.319c.11.104.231.209.231.346v.705c0 .088-.055.17-.11.23h-.022l-.011.006-.022.011-.666.643v1.21c0 .193-.104.33-.296.33h-.54c-.192 0-.319-.137-.319-.33V6.221a.915.915 0 00-.533-.518h-.671c-.192 0-.368-.143-.368-.335V4.68c0-.192.176-.346.368-.346l.193-.005.319-.32a.342.342 0 01.489 0l.319.32c.005 0 .005.005.005.005h.704c.16 0 .237-.16.341-.313v-.11l-.038.005h-.27a.159.159 0 01-.153-.16c0-.087.066-.159.154-.159h.269l.039.006V3.42s-.05-.038-.061-.038h-.302l-.067.076a.342.342 0 01-.489.011l-.066-.088h-.176l.248.259c.021.022.021.088 0 .11-.028.022-.067.028-.088.006l-.292-.276h-.127l-.363.325-.033-.006c-.038.11-.087.089-.143.089-.126 0-.225-.072-.225-.193 0-.127.099-.209.225-.209h.176v-.182c0-.088.061-.131.149-.131h.066v-.127c0-.143.149-.297.286-.297h.28c.16 0 .27-.115.27-.275V2.42c0-.016.055.017.055-.088h-.187l-.005.017-.308.33a.123.123 0 01-.177 0c-.049-.044-.049-.121 0-.171l.391-.385c.027-.022.06-.022.094-.022l.005.022h.869A4.376 4.376 0 0014.5 1.1a4.402 4.402 0 00-2.816 1.018h.583c.094 0 .165.066.165.159s-.072.16-.165.16h-.478c0 .104-.039.06-.039.066v.351h.429l.226-.252c.132-.127.346-.155.473-.022a.332.332 0 010 .473l-1.183 1.182-.011.011c-.005.005-.011.005-.016.011a.115.115 0 00-.034.022c-.005.006-.01 0-.016.006a.309.309 0 01-.176.038h-.347c-.12.104-.187.148-.187.27v.088c0 .016-.027.027-.027.043l.561.589c.06.06.055.154 0 .209a.143.143 0 01-.209 0l-.578-.578a.425.425 0 01-.082.011c-.154 0-.292-.12-.292-.274v-.358h-.016c-.104.374-.165.77-.165 1.177 0 2.431 1.969 4.4 4.4 4.4zm3.388-3.107c.077 0 .16.06.16.137v.424c0 .077-.083.137-.16.137s-.16-.06-.16-.137V6.93c0-.077.083-.137.16-.137zm-3.113-4.879c0 .187-.154.314-.335.314h-.374v.104c0 .11-.05.198-.16.198s-.16-.088-.16-.198V1.98c-.104-.022-.033-.028-.033-.055 0-.187.127-.325.314-.325h.407c.187 0 .341.127.341.314z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/inbox-search.js
/* harmony default export */ var paths_inbox_search = (["M7.136 3a6.327 6.327 0 00-.098 2.009H4.65l-2.67 5.996H5c.55 0 1 .45 1 .999v1h8v-1c0-.55.45-1 1-1h1.076l1.14 1.14a2.767 2.767 0 001.974.806c.282 0 .554-.042.81-.12V17c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1v-6.455L3.08 3.62l.01-.02c.15-.35.5-.6.91-.6h3.136zm3.244 1.33c0 1.62 1.31 2.93 2.93 2.93s2.93-1.31 2.93-2.93-1.31-2.93-2.93-2.93-2.93 1.31-2.93 2.93zm6.47 2.43l2.89 2.85c.13.15.22.35.23.56 0 .43-.35.78-.78.78-.23 0-.42-.08-.56-.22l-2.87-2.87c-.17.1-.33.2-.51.29-.03.01-.06.03-.09.04-.18.07-.35.15-.55.21-.19.06-.37.11-.57.14-.05.01-.1.02-.14.02-.2.03-.39.05-.6.05A4.3 4.3 0 019 4.31C9 1.93 10.93.01 13.3 0c2.37 0 4.3 1.93 4.3 4.3 0 .21-.02.4-.05.6-.01.05-.01.09-.02.14-.04.2-.08.38-.14.58-.05.19-.13.36-.21.54-.01.03-.03.06-.04.09-.08.18-.18.34-.29.51z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/inbox-update.js
/* harmony default export */ var paths_inbox_update = (["M10.083 3a6.04 6.04 0 00.001 2.009H4.65l-2.67 5.996H5c.55 0 1 .45 1 .999v1h8v-1c0-.55.45-1 1-1h3.02l-.53-1.19a5.97 5.97 0 001.824-.811L20 10.545v6.456c0 .55-.45.999-1 .999H1c-.55 0-1-.45-1-1v-6.455L3.08 3.62l.01-.02c.15-.35.5-.6.91-.6h6.083zM16 8a4 4 0 110-8 4 4 0 010 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/info-sign.js
/* harmony default export */ var paths_info_sign = (["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM9 4h2v2H9V4zm4 12H7v-1h2V8H8V7h3v8h2v1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/inheritance.js
/* harmony default export */ var paths_inheritance = (["M6 10c0 2.21 1.79 4 4 4h6.59l-2.29-2.29A.965.965 0 0114 11a1.003 1.003 0 011.71-.71l4 4c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-4 4a1.003 1.003 0 01-1.42-1.42l2.3-2.29H10c-3.31 0-6-2.69-6-6H1a1 1 0 01-1-1V1a1 1 0 011-1h8a1 1 0 011 1v8a1 1 0 01-1 1H6zM2 2v6h6V2H2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/inherited-group.js
/* harmony default export */ var paths_inherited_group = (["M1 9c.55 0 1 .45 1 1v4c0 1.1.9 2 2 2h2.59l-.3-.29a1.003 1.003 0 011.42-1.42l2 2c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-2 2A1.003 1.003 0 016 19c0-.28.11-.53.3-.71l.29-.29H4c-2.21 0-4-1.79-4-4v-4c0-.55.45-1 1-1zm6.996-9c.79 0 1.68.25 2.309.73a3.63 3.63 0 011.4 2.36c.11.6.17 1.52.17 2.15v.09c.22.09.42.32.47.82.03.39-.12.73-.2.87-.07.34-.27.71-.61.78-.04.16-.09.33-.15.48-.01.01-.02.05-.02.05-.27.71-.68 1.33-1.19 1.78 0 .08 0 .16.01.23.05.55-.15.95 1.33 1.6 1.469.66 3.698 1.35 4.178 2.39.45 1.05.27 1.67.27 1.67h-5.227a1.982 1.982 0 00-.319-.417l-2-2A2.003 2.003 0 005 15H4c-.548 0-1-.452-1-1v-1.462c.511-.213 1.023-.413 1.468-.608 1.479-.65 1.329-1.05 1.379-1.59l.01-.21c-.52-.45-.95-1.08-1.22-1.8l-.01-.01-.01-.03c-.07-.15-.12-.32-.16-.49-.34-.06-.54-.43-.62-.78-.08-.14-.24-.48-.2-.87.05-.51.26-.74.49-.83v-.08c0-.64.05-1.55.17-2.15a3.648 3.648 0 011.4-2.36C6.317.25 7.207 0 7.996 0zm5.997 3c.59 0 1.26.19 1.73.55.46.35.8.85.97 1.4.04.13.07.25.08.38.08.45.13 1.14.13 1.61v.07c.16.07.31.24.35.62.02.29-.09.55-.15.65-.05.26-.2.53-.46.59-.03.12-.07.25-.11.36-.01.01-.01.04-.01.04-.2.53-.51 1-.89 1.34 0 .06 0 .12.01.17.04.41-.11.71 1 1.19 1.099.5 2.768 1.01 3.128 1.79.34.79.2 1.25.2 1.25h-3.039V15c-.06-.33-.17-.69-.33-1.06-.45-.97-1.37-1.52-3.238-2.3-.17-.07-.76-.31-.77-.32-.1-.04-.2-.08-.28-.12.05-.14.04-.29.06-.45l.01-.16c-.25-.21-.47-.48-.65-.79.22-.34.41-.71.56-1.12l.028-.078-.002.013-.006.035.06-.15c.36-.26.6-.67.72-1.13.18-.37.29-.82.25-1.3-.05-.5-.21-.92-.47-1.22-.02-.53-.06-1.11-.12-1.59.38-.17.83-.26 1.24-.26z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/inner-join.js
/* harmony default export */ var paths_inner_join = (["M8.7 4.7C7.4 6 6.5 7.9 6.5 10s.8 4 2.2 5.3c-.8.5-1.7.7-2.7.7-3.3 0-6-2.7-6-6s2.7-6 6-6c1 0 1.9.2 2.7.7zm-3.34 9.25c-.55-1.2-.86-2.54-.86-3.95s.31-2.75.86-3.95a4.001 4.001 0 000 7.9zM14 4c3.3 0 6 2.7 6 6s-2.7 6-6 6c-1 0-1.9-.2-2.7-.7 1.3-1.3 2.2-3.2 2.2-5.3s-.8-3.9-2.2-5.3C12.1 4.2 13 4 14 4zm.6 2.05c.55 1.2.86 2.54.86 3.95s-.31 2.75-.86 3.95c1.9-.31 3.36-1.96 3.36-3.95S16.5 6.36 14.6 6.05zM10 5.5C8.8 6.7 8 8.2 8 10s.8 3.3 2 4.4c1.2-1.1 2-2.7 2-4.5s-.8-3.3-2-4.4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/insert.js
/* harmony default export */ var paths_insert = (["M19 0H1C.4 0 0 .4 0 1v18c0 .5.4 1 1 1h18c.5 0 1-.5 1-1V1c0-.6-.5-1-1-1zm-1 18H2V2h16v16zM5 11h4v4c0 .6.4 1 1 1s1-.4 1-1v-4h4c.6 0 1-.4 1-1s-.4-1-1-1h-4V5c0-.6-.4-1-1-1s-1 .4-1 1v4H5c-.6 0-1 .4-1 1s.4 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/intelligence.js
/* harmony default export */ var paths_intelligence = (["M10 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.46-1-1-1zm4.992.975v-.044a.42.42 0 00-.106-.225 7.726 7.726 0 00-1.087-1.125c-.831-.731-1.78-1.343-2.824-1.587a4.153 4.153 0 00-1.819-.025c-.562.112-1.093.337-1.593.619-.78.443-1.5 1.05-2.124 1.73a6.88 6.88 0 00-.331.395.461.461 0 000 .58c.318.42.7.788 1.087 1.126.83.731 1.78 1.343 2.824 1.587.606.144 1.218.15 1.83.025.557-.112 1.088-.337 1.594-.619.78-.443 1.5-1.05 2.118-1.73.113-.126.231-.257.337-.395a.442.442 0 00.107-.225V10c-.013-.012-.013-.019-.013-.025zM10 12c-1.107 0-2-.893-2-2s.893-2 2-2 2 .893 2 2-.893 2-2 2zM7 1a1 1 0 00-1-1H1a1 1 0 00-1 1v5a1 1 0 002 0V2h4a1 1 0 001-1zm6 0a1 1 0 011-1h5a1 1 0 011 1v5a1 1 0 11-2 0V2h-4a1 1 0 01-1-1zm0 18a1 1 0 001 1h5a1 1 0 001-1v-5a1 1 0 10-2 0v4h-4a1 1 0 00-1 1zm-6 0a1 1 0 01-1 1H1a1 1 0 01-1-1v-5a1 1 0 112 0v4h4a1 1 0 011 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/intersection.js
/* harmony default export */ var paths_intersection = (["M13 4c-1.31 0-2.51.43-3.5 1.14A5.977 5.977 0 006 4c-3.31 0-6 2.69-6 6s2.69 6 6 6c1.31 0 2.51-.43 3.5-1.14.99.71 2.19 1.14 3.5 1.14 3.31 0 6-2.69 6-6s-2.69-6-6-6zm-4.93 9.41c-.61.37-1.31.59-2.07.59-2.21 0-4-1.79-4-4s1.79-4 4-4c.76 0 1.46.22 2.07.59C7.4 7.56 7 8.73 7 10s.4 2.44 1.07 3.41zM13 14c-.76 0-1.46-.22-2.07-.59C11.6 12.44 12 11.27 12 10s-.4-2.44-1.07-3.41C11.54 6.22 12.24 6 13 6c2.21 0 4 1.79 4 4s-1.79 4-4 4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/ip-address.js
/* harmony default export */ var paths_ip_address = (["M6 3.66C6 5.69 10 11 10 11s4-5.31 4-7.34C13.99 1.64 12.21 0 10 0S6 1.64 6 3.66zM8 4c0-1.1.9-2 2-2s2 .9 2 2-.9 2-2 2-2-.9-2-2zM14 13.5V13h-4v1h3v2h-2v1h3v-3.5zM3 12h14c.55 0 1 .45 1 1v6c0 .55-.45 1-1 1H3c-.55 0-1-.45-1-1v-6c0-.55.45-1 1-1zm4 1v6h1v-6H7zm3 1v5h1v-5h-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/issue.js
/* harmony default export */ var paths_issue = (["M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 100-16 8 8 0 000 16zm1-2H9v-2h2v2zm0-3H9V4h2v9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/issue-closed.js
/* harmony default export */ var paths_issue_closed = (["M15.364 5.9a.997.997 0 01-.707-.293l-2.121-2.122a1 1 0 111.414-1.414l1.414 1.414L18.192.657a1 1 0 011.414 1.414l-3.535 3.536a.997.997 0 01-.707.292zM11.78.157a3.002 3.002 0 00-1.437 1.85 8 8 0 107.1 5.055l.042-.042 1.472-1.472A9.959 9.959 0 0120 10c0 5.523-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0c.608 0 1.202.054 1.78.158zM11 16H9v-2h2v2zm0-3H9V4h2v9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/issue-new.js
/* harmony default export */ var paths_issue_new = (["M13.167.512a2.98 2.98 0 00-.131.524c-.74.115-1.39.5-1.848 1.052a8 8 0 106.724 6.724 2.997 2.997 0 001.052-1.848 2.98 2.98 0 00.524-.13A9.99 9.99 0 0120 10c0 5.523-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0a9.99 9.99 0 013.167.512zM11 16H9v-2h2v2zm0-3H9V4h2v9zm6-10h1.5a1 1 0 010 2H17v1.5a1 1 0 01-2 0V5h-1.5a1 1 0 010-2H15V1.5a1 1 0 012 0V3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/italic.js
/* harmony default export */ var paths_italic = (["M11.7 4H14c.6 0 1-.4 1-1s-.4-1-1-1H7c-.6 0-1 .4-1 1s.4 1 1 1h2.2L7.3 15H5c-.6 0-1 .4-1 1s.4 1 1 1h7c.6 0 1-.4 1-1s-.4-1-1-1H9.8l1.9-11z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/join-table.js
/* harmony default export */ var paths_join_table = (["M19 6h-4V2c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h4v4c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zM6 12H2V9h4v3zm0-4H2V5h4v3zm7 9H7v-3h6v3zm0-4H7V9h6v4zm0-5H7V5h6v3zm5 9h-4v-3h4v3zm0-4h-4v-3h4v3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/key.js
/* harmony default export */ var paths_key = (["M14 0c-3.31 0-6 2.69-6 6 0 1.11.32 2.14.85 3.03L.44 17.44a1.498 1.498 0 102.12 2.12l.79-.79.94.94c.18.18.43.29.71.29s.53-.11.71-.29l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-.94-.94 3.2-3.2A5.9 5.9 0 0014 12c3.31 0 6-2.69 6-6s-2.69-6-6-6zm0 9c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/key-backspace.js
/* harmony default export */ var paths_key_backspace = (["M19 3H7c-.28 0-.53.11-.71.29l-6 6C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l6 6c.18.18.43.29.71.29h12c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm-2.29 9.29a1.003 1.003 0 01-1.42 1.42L13 11.41l-2.29 2.29c-.18.19-.43.3-.71.3a1.003 1.003 0 01-.71-1.71l2.3-2.29-2.3-2.29a1.003 1.003 0 011.42-1.42L13 8.59l2.29-2.29c.18-.19.43-.3.71-.3a1.003 1.003 0 01.71 1.71L14.41 10l2.3 2.29z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/key-command.js
/* harmony default export */ var paths_key_command = (["M15.5 12H14V8h1.5C17.43 8 19 6.43 19 4.5S17.43 1 15.5 1 12 2.57 12 4.5V6H8V4.5C8 2.57 6.43 1 4.5 1S1 2.57 1 4.5 2.57 8 4.5 8H6v4H4.5C2.57 12 1 13.57 1 15.5S2.57 19 4.5 19 8 17.43 8 15.5V14h4v1.5c0 1.93 1.57 3.5 3.5 3.5s3.5-1.57 3.5-3.5-1.57-3.5-3.5-3.5zm0-9c.83 0 1.5.67 1.5 1.5S16.33 6 15.5 6 14 5.33 14 4.5 14.67 3 15.5 3zm-11 14c-.83 0-1.5-.67-1.5-1.5S3.67 14 4.5 14s1.5.67 1.5 1.5S5.33 17 4.5 17zm0-11C3.67 6 3 5.33 3 4.5S3.67 3 4.5 3 6 3.67 6 4.5 5.33 6 4.5 6zm7.5 6H8V8h4v4zm3.5 5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/key-control.js
/* harmony default export */ var paths_key_control = (["M16.71 7.29l-6-6C10.53 1.11 10.28 1 10 1s-.53.11-.71.29l-6 6a1.003 1.003 0 001.42 1.42L10 3.41l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/key-delete.js
/* harmony default export */ var paths_key_delete = (["M19.71 9.29l-6-6A.997.997 0 0013 3H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h12c.28 0 .53-.11.71-.29l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zm-9 3a1.003 1.003 0 01-1.42 1.42L7 11.41 4.71 13.7c-.18.19-.43.3-.71.3a1.003 1.003 0 01-.71-1.71L5.59 10l-2.3-2.29a1.003 1.003 0 011.42-1.42L7 8.59 9.29 6.3c.18-.19.43-.3.71-.3a1.003 1.003 0 01.71 1.71L8.41 10l2.3 2.29z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/key-enter.js
/* harmony default export */ var paths_key_enter = (["M18 2c-.55 0-1 .45-1 1v5c0 2.21-1.79 4-4 4H4.41L6.7 9.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L4.41 14H13c3.31 0 6-2.69 6-6V3c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/key-escape.js
/* harmony default export */ var paths_key_escape = (["M2 8c.55 0 1-.45 1-1V4.41l6.29 6.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L4.41 3H7c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1zm9-6.94V3.1c3.39.49 6 3.38 6 6.9 0 3.87-3.13 7-7 7-3.52 0-6.41-2.61-6.9-6H1.06c.5 4.5 4.31 8 8.94 8a9 9 0 009-9c0-4.63-3.5-8.44-8-8.94z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/key-option.js
/* harmony default export */ var paths_key_option = (["M13 4h6c.55 0 1-.45 1-1s-.45-1-1-1h-6c-.55 0-1 .45-1 1s.45 1 1 1zm6 12h-4.42L6.87 2.5l-.02.01A.977.977 0 006 2H1c-.55 0-1 .45-1 1s.45 1 1 1h4.42l7.71 13.5.01-.01c.18.3.49.51.86.51h5c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/key-shift.js
/* harmony default export */ var paths_key_shift = (["M17.74 10.35l-6.99-8.01-.01.01C10.56 2.14 10.3 2 10 2s-.56.14-.74.35l-.01-.01-7 8 .01.01A.95.95 0 002 11c0 .55.45 1 1 1h3v5c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-5h3c.55 0 1-.45 1-1 0-.25-.1-.48-.26-.65z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/key-tab.js
/* harmony default export */ var paths_key_tab = (["M19 13H4.41l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L2 12.59V10c0-.55-.45-1-1-1s-1 .45-1 1v8c0 .55.45 1 1 1s1-.45 1-1v-2.59l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L4.41 15H19c.55 0 1-.45 1-1s-.45-1-1-1zm0-12c-.55 0-1 .45-1 1v2.59L14.71 1.3A.965.965 0 0014 1a1.003 1.003 0 00-.71 1.71L15.59 5H1c-.55 0-1 .45-1 1s.45 1 1 1h14.59L13.3 9.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 7.41V10c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/known-vehicle.js
/* harmony default export */ var paths_known_vehicle = (["M19 4a.997.997 0 00-.707.293L14 8.586l-2.293-2.293a1 1 0 00-1.414 1.414l3 3a.997.997 0 001.414 0l5-5A1 1 0 0019 4zm-2.048 7.291c.011.072.048.134.048.209a1.5 1.5 0 01-1.5 1.5c-.225 0-.433-.057-.624-.145-.279.085-.57.145-.876.145a2.99 2.99 0 01-2.121-.879l-3-3 .007-.007A3.027 3.027 0 018.184 8H4V7l1-3h10l.19.568 1.307-1.308c-.336-.356-.758-.658-1.165-.772 0 0-1.74-.488-5.332-.488s-5.332.488-5.332.488c-.67.188-1.424.864-1.674 1.502L2.99 4H3L2 7H1a1 1 0 000 2h.333l-.28.84L1 10v7.5a1.5 1.5 0 103 0V17h12v.5a1.5 1.5 0 003 0V10l-.19-.568-1.858 1.86zM4.5 13a1.5 1.5 0 110-3 1.5 1.5 0 010 3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/lab-test.js
/* harmony default export */ var paths_lab_test = (["M13 2a1 1 0 010 2v4l4 8v1a1 1 0 01-1 1H4a1 1 0 01-1-1v-1l4-8V4a1 1 0 110-2h6zm-2 2H9v4l-2 4h6l-2-4V4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/label.js
/* harmony default export */ var paths_label = (["M3 12h14v-1H3v1zm11-9H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V9l-6-6zm4 12H2V5h11v3H3v1h10v1h5v5zm-4-6V5l4 4h-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/layer.js
/* harmony default export */ var _20px_paths_layer = (["M19.5 9.1l-9-5c-.2-.1-.3-.1-.5-.1s-.3 0-.5.1l-9 5c-.3.2-.5.5-.5.9s.2.7.5.9l9 5c.2.1.3.1.5.1s.3 0 .5-.1l9-5c.3-.2.5-.5.5-.9s-.2-.7-.5-.9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/layer-outline.js
/* harmony default export */ var paths_layer_outline = (["M9.514 4.126l-9 5a1 1 0 000 1.748l9 5a1 1 0 00.972 0l9-5a1 1 0 000-1.748l-9-5a1 1 0 00-.972 0zM10 6.144l6.94 3.855L10 13.855 3.059 9.999 10 6.144z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/layers.js
/* harmony default export */ var _20px_paths_layers = (["M.5 6.9l9 5c.2.1.3.1.5.1s.3 0 .5-.1l9-5c.3-.2.5-.5.5-.9s-.2-.7-.5-.9l-9-5c-.2-.1-.3-.1-.5-.1s-.3 0-.5.1l-9 5c-.3.2-.5.5-.5.9s.2.7.5.9z", "M19 9c-.2 0-.3 0-.5.1L10 13.9 1.5 9.1C1.3 9 1.2 9 1 9c-.6 0-1 .4-1 1 0 .4.2.7.5.9l9 5c.2.1.3.1.5.1s.3 0 .5-.1l9-5c.3-.2.5-.5.5-.9 0-.6-.4-1-1-1z", "M19 13c-.2 0-.3 0-.5.1L10 17.9l-8.5-4.7c-.2-.2-.3-.2-.5-.2-.6 0-1 .4-1 1 0 .4.2.7.5.9l9 5c.2.1.3.1.5.1s.3 0 .5-.1l9-5c.3-.2.5-.5.5-.9 0-.6-.4-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/layout.js
/* harmony default export */ var paths_layout = (["M18 6c-1.1 0-2 .9-2 2 0 .37.11.71.28 1.01l-2.27 2.27c-.3-.17-.64-.28-1.01-.28-.93 0-1.71.64-1.93 1.5H8.93c-.22-.86-1-1.5-1.93-1.5-.37 0-.71.11-1.01.28L3.72 9.01C3.89 8.71 4 8.37 4 8c0-.34-.09-.66-.24-.94l3.66-3.38c.31.2.68.32 1.08.32 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .34.09.66.24.94L3.08 6.32C2.77 6.12 2.4 6 2 6 .9 6 0 6.9 0 8s.9 2 2 2c.37 0 .71-.11 1.01-.28l2.27 2.27c-.17.3-.28.64-.28 1.01s.11.71.28 1.01l-2.27 2.27C2.71 16.11 2.37 16 2 16c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.37-.11-.71-.28-1.01l2.27-2.27c.3.17.64.28 1.01.28.93 0 1.71-.64 1.93-1.5h2.14c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2 0-.37-.11-.71-.28-1.01l2.27-2.27c.3.17.64.28 1.01.28 1.1 0 2-.9 2-2s-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/layout-auto.js
/* harmony default export */ var paths_layout_auto = (["M18 13c-.53 0-1.01.21-1.37.55L11.9 10.6c.06-.19.1-.39.1-.6s-.04-.41-.1-.6l4.72-2.95c.37.34.85.55 1.38.55 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .21.04.41.1.6l-4.73 2.96c-.24-.23-.54-.4-.87-.48V3.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S8 .9 8 2c0 .93.64 1.71 1.5 1.93v4.14c-.33.09-.63.26-.87.48L3.9 5.6c.06-.19.1-.39.1-.6 0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.53 0 1.01-.21 1.37-.55L8.1 9.4c-.06.19-.1.39-.1.6s.04.41.1.6l-4.72 2.95C3.01 13.21 2.53 13 2 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.21-.04-.41-.1-.6l4.73-2.96c.24.23.54.4.87.48v4.14C8.64 16.29 8 17.07 8 18c0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93v-4.14c.33-.09.63-.26.87-.48l4.73 2.96c-.06.18-.1.38-.1.59 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/layout-balloon.js
/* harmony default export */ var paths_layout_balloon = (["M18 16c-.14 0-.28.02-.42.05l-1.73-3.45c.69-.45 1.14-1.22 1.14-2.1s-.46-1.65-1.14-2.1l1.73-3.45c.14.03.28.05.42.05 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .6.27 1.13.69 1.5l-1.77 3.54c-.14-.02-.28-.04-.42-.04a2.5 2.5 0 00-2.45 2h-4.1A2.5 2.5 0 005.5 8c-.14 0-.28.02-.42.04L3.31 4.5C3.73 4.13 4 3.6 4 3c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.14 0 .28-.02.42-.05L4.14 8.4C3.46 8.85 3 9.62 3 10.5s.46 1.65 1.14 2.1l-1.73 3.45A1.84 1.84 0 002 16c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.6-.27-1.13-.69-1.5l1.77-3.54c.14.02.28.04.42.04a2.5 2.5 0 002.45-2h4.1a2.5 2.5 0 002.45 2c.14 0 .28-.02.42-.04l1.77 3.54c-.42.37-.69.9-.69 1.5 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/layout-circle.js
/* harmony default export */ var paths_layout_circle = (["M18.3 8c-.2-.9-.6-1.7-1.1-2.5.2-.3.3-.7.3-1 0-1.1-.9-2-2-2-.4 0-.7.1-1 .3-.8-.5-1.6-.8-2.5-1.1-.1-1-1-1.7-2-1.7S8.2.8 8 1.7c-.9.3-1.7.6-2.5 1.1-.3-.2-.7-.3-1-.3-1.1 0-2 .9-2 2 0 .4.1.7.3 1-.5.8-.8 1.6-1.1 2.5C.8 8.2 0 9 0 10s.8 1.8 1.7 2c.2.9.6 1.7 1.1 2.5-.2.3-.3.7-.3 1 0 1.1.9 2 2 2 .4 0 .7-.1 1-.3.8.5 1.6.8 2.5 1.1.1 1 1 1.7 2 1.7s1.8-.8 2-1.7c.9-.2 1.7-.6 2.5-1.1.3.2.7.3 1 .3 1.1 0 2-.9 2-2 0-.4-.1-.7-.3-1 .5-.8.8-1.6 1.1-2.5 1-.1 1.7-1 1.7-2s-.8-1.8-1.7-2zm-1.8 5.8c-.3-.2-.6-.3-1-.3-1.1 0-2 .9-2 2 0 .4.1.7.3 1-.6.3-1.2.6-1.9.8-.3-.7-1-1.3-1.9-1.3-.8 0-1.6.5-1.9 1.3-.7-.2-1.3-.4-1.9-.8.2-.3.3-.6.3-1 0-1.1-.9-2-2-2-.4 0-.7.1-1 .3-.3-.6-.6-1.2-.8-1.9.8-.3 1.3-1.1 1.3-1.9s-.5-1.6-1.2-1.8c.2-.7.4-1.3.8-1.9.3.2.6.3 1 .3 1.1 0 2-.9 2-2 0-.4-.1-.7-.3-1 .6-.3 1.2-.6 1.9-.8.2.7 1 1.2 1.8 1.2s1.6-.5 1.9-1.3c.7.2 1.3.4 1.9.8-.2.3-.3.6-.3 1 0 1.1.9 2 2 2 .4 0 .7-.1 1-.3.3.6.6 1.2.8 1.9-.8.3-1.3 1.1-1.3 1.9s.5 1.6 1.2 1.8c-.1.7-.4 1.4-.7 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/layout-grid.js
/* harmony default export */ var paths_layout_grid = (["M2 0a2 2 0 100 4 2 2 0 100-4zM10 0a2 2 0 100 4 2 2 0 100-4zM18 0a2 2 0 100 4 2 2 0 100-4zM18 8a2 2 0 100 4 2 2 0 100-4zM18 16a2 2 0 100 4 2 2 0 100-4zM10 16a2 2 0 100 4 2 2 0 100-4zM2 16a2 2 0 100 4 2 2 0 100-4zM2 8a2 2 0 100 4 2 2 0 100-4zM10 8a2 2 0 100 4 2 2 0 100-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/layout-group-by.js
/* harmony default export */ var paths_layout_group_by = (["M2 2a2 2 0 100 4 2 2 0 100-4zM18 0a2 2 0 100 4 2 2 0 100-4zM18 8a2 2 0 100 4 2 2 0 100-4zM18 16a2 2 0 100 4 2 2 0 100-4zM2 14a2 2 0 100 4 2 2 0 100-4zM2 8a2 2 0 100 4 2 2 0 100-4zM13 12a2 2 0 100 4 2 2 0 100-4zM13 4a2 2 0 100 4 2 2 0 100-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/layout-hierarchy.js
/* harmony default export */ var paths_layout_hierarchy = (["M18.5 16.07v-4.14c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2-.93 0-1.71.64-1.93 1.5h-4.14c-.18-.7-.73-1.25-1.43-1.43V3.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S8 .9 8 2c0 .93.64 1.71 1.5 1.93v4.14c-.7.18-1.25.73-1.43 1.43H3.93C3.71 8.64 2.93 8 2 8c-1.1 0-2 .9-2 2 0 .93.64 1.71 1.5 1.93v4.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93v-4.14c.7-.18 1.25-.73 1.43-1.43h4.14c.18.7.73 1.25 1.43 1.43v4.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93v-4.14c.7-.18 1.25-.73 1.43-1.43h4.14c.18.7.73 1.25 1.43 1.43v4.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/layout-linear.js
/* harmony default export */ var paths_layout_linear = (["M16.5 7a2.5 2.5 0 00-2.45 2h-2.1a2.5 2.5 0 00-4.9 0h-2.1a2.5 2.5 0 100 1h2.1a2.5 2.5 0 004.9 0h2.1a2.5 2.5 0 102.45-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/layout-skew-grid.js
/* harmony default export */ var paths_layout_skew_grid = (["M2 0a2 2 0 100 4 2 2 0 100-4zM18 0a2 2 0 100 4 2 2 0 100-4zM18 8a2 2 0 100 4 2 2 0 100-4zM18 16a2 2 0 100 4 2 2 0 100-4zM2 16a2 2 0 100 4 2 2 0 100-4zM2 8a2 2 0 100 4 2 2 0 100-4zM10 12a2 2 0 100 4 2 2 0 100-4zM10 4a2 2 0 100 4 2 2 0 100-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/layout-sorted-clusters.js
/* harmony default export */ var paths_layout_sorted_clusters = (["M2 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm16 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-8 4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/learning.js
/* harmony default export */ var paths_learning = (["M10.551 1.127a1.256 1.256 0 00-1.102 0L.456 5.89c-.608.309-.608.913 0 1.222l8.993 4.762c.334.17.767.17 1.102 0l8.992-4.762c.61-.309.61-.913 0-1.222l-8.992-4.762z", "M18 6.5l.016 4.514c.002.548.447.99.994.99a.99.99 0 00.99-.99V6.5h-2zM3.366 10.033l6.401 3.358a.5.5 0 00.465 0l6.406-3.358a.25.25 0 01.366.221v5.109a.25.25 0 01-.139.224l-6.64 3.302a.5.5 0 01-.446 0l-6.64-3.302A.25.25 0 013 15.363v-5.108a.25.25 0 01.366-.222z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/left-join.js
/* harmony default export */ var paths_left_join = (["M8.7 4.7C7.4 6 6.5 7.9 6.5 10s.8 4 2.2 5.3c-.8.5-1.7.7-2.7.7-3.3 0-6-2.7-6-6s2.7-6 6-6c1 0 1.9.2 2.7.7zM14 4c3.3 0 6 2.7 6 6s-2.7 6-6 6c-1 0-1.9-.2-2.7-.7 1.3-1.3 2.2-3.2 2.2-5.3s-.8-3.9-2.2-5.3C12.1 4.2 13 4 14 4zm.6 2.05c.55 1.2.86 2.54.86 3.95s-.31 2.75-.86 3.95c1.9-.31 3.36-1.96 3.36-3.95S16.5 6.36 14.6 6.05zM10 5.5C8.8 6.7 8 8.2 8 10s.8 3.3 2 4.4c1.2-1.1 2-2.7 2-4.5s-.8-3.3-2-4.4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/less-than.js
/* harmony default export */ var paths_less_than = (["M7.162 10l9.154 3.052a1 1 0 01-.632 1.897l-12-4c-.912-.304-.912-1.594 0-1.897l12-4a1 1 0 01.632 1.897L7.162 10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/less-than-or-equal-to.js
/* harmony default export */ var paths_less_than_or_equal_to = (["M16.316 11.051L7.162 8l9.154-3.051a1 1 0 10-.632-1.898l-12 4c-.912.304-.912 1.594 0 1.898l12 4a1 1 0 10.632-1.898zM16 15H4a1 1 0 100 2h12a1 1 0 100-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/lifesaver.js
/* harmony default export */ var paths_lifesaver = (["M8.143 14.644L7.028 17.43c.919.368 1.922.57 2.972.57s2.053-.202 2.972-.57l-1.115-2.786A4.986 4.986 0 0110 15a4.986 4.986 0 01-1.857-.356zm-2.787-2.787A4.986 4.986 0 015 10c0-.656.126-1.283.356-1.857L2.57 7.028A7.978 7.978 0 002 10c0 1.05.202 2.053.57 2.972l2.786-1.115zm2.787-6.5A4.986 4.986 0 0110 5c.656 0 1.283.126 1.857.356l1.115-2.786A7.978 7.978 0 0010 2c-1.05 0-2.053.202-2.972.57l1.115 2.786zm6.5 2.786c.23.574.357 1.2.357 1.857 0 .656-.126 1.283-.356 1.857l2.786 1.115c.368-.919.57-1.922.57-2.972s-.202-2.053-.57-2.972l-2.786 1.115zM10 13a3 3 0 100-6 3 3 0 000 6zm0 7C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/lightbulb.js
/* harmony default export */ var paths_lightbulb = (["M6.33 13.39c0 .34.27.61.6.61h6.13c.33 0 .6-.27.6-.61C14.03 9.78 16 9.4 16 6.09 16 2.72 13.31 0 10 0S4 2.72 4 6.09c0 3.31 1.97 3.69 2.33 7.3zM13 15H7c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm-1 3H8c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/lightning.js
/* harmony default export */ var paths_lightning = (["M9 11H6a1 1 0 01-1-1L5.91.9a1 1 0 01.995-.9h6.256a.839.839 0 01.779 1.15L11.2 8h2.978a.822.822 0 01.748 1.162l-4.764 10.481A.608.608 0 019 19.392V11z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/link.js
/* harmony default export */ var _20px_paths_link = (["M10.85 11.98l-4.44 4.44-1 1c-.36.36-.86.58-1.41.58-1.1 0-2-.9-2-2 0-.55.22-1.05.59-1.41l5.44-5.44C7.69 9.06 7.36 9 7 9c-1.11 0-2.09.46-2.82 1.18l-.01-.01-3 3 .01.01C.46 13.91 0 14.89 0 16c0 2.21 1.79 4 4 4 1.11 0 2.09-.46 2.82-1.18l.01.01 3-3-.01-.01C10.54 15.09 11 14.11 11 13c0-.36-.06-.69-.15-1.02zM20 4c0-2.21-1.79-4-4-4-1.11 0-2.09.46-2.82 1.18l-.01-.01-3 3 .01.01C9.46 4.91 9 5.89 9 7c0 .36.06.69.15 1.02l4.44-4.44 1-1c.36-.36.86-.58 1.41-.58 1.1 0 2 .9 2 2 0 .55-.22 1.05-.59 1.41l-5.44 5.44c.34.09.67.15 1.03.15 1.11 0 2.09-.46 2.82-1.18l.01.01 3-3-.01-.01C19.54 6.09 20 5.11 20 4zM5 14a1.003 1.003 0 001.71.71l8-8a1.003 1.003 0 00-1.42-1.42l-2 2-2 2-2 2-2 2c-.18.18-.29.43-.29.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/list.js
/* harmony default export */ var paths_list = (["M1.03 1C.46 1 0 1.46 0 2.03v.95C0 3.54.46 4 1.03 4h17.95C19.54 4 20 3.54 20 2.97v-.94C20 1.46 19.54 1 18.97 1H1.03zM0 17.97C0 18.54.46 19 1.03 19h17.95c.56 0 1.03-.46 1.03-1.03v-.95c0-.56-.46-1.03-1.03-1.03H1.03C.46 16 0 16.46 0 17.03v.94zM0 12.97C0 13.54.46 14 1.03 14h17.95c.56 0 1.03-.46 1.03-1.03v-.95c0-.56-.46-1.03-1.03-1.03H1.03C.46 11 0 11.46 0 12.03v.94zM0 7.97C0 8.54.46 9 1.03 9h17.95C19.54 9 20 8.54 20 7.97v-.94C20 6.46 19.54 6 18.97 6H1.03C.46 6 0 6.46 0 7.03v.94z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/list-columns.js
/* harmony default export */ var paths_list_columns = (["M0 2.973v-.936C0 1.468.46 1.01 1.029 1H7.97C8.541 1 9 1.468 9 2.027v.946C9 3.542 8.53 4 7.971 4H1.03C.459 4 0 3.542 0 2.973zm0 5v-.936C0 6.468.46 6.01 1.029 6H7.97C8.541 6 9 6.468 9 7.027v.946C9 8.542 8.53 9 7.971 9H1.03C.459 9 0 8.542 0 7.973zm0 5v-.936C0 11.468.46 11.01 1.029 11H7.97C8.541 11 9 11.468 9 12.027v.946C9 13.542 8.53 14 7.971 14H1.03C.459 14 0 13.542 0 12.973zm0 5v-.936C0 16.468.46 16.01 1.029 16H7.97C8.541 16 9 16.468 9 17.027v.946C9 18.542 8.53 19 7.971 19H1.03C.459 19 0 18.542 0 17.973zm11-15v-.936c0-.569.46-1.027 1.029-1.037h6.942C19.541 1 20 1.468 20 2.027v.946C20 3.542 19.53 4 18.971 4H12.03C11.459 4 11 3.542 11 2.973zm0 5v-.936c0-.569.46-1.027 1.029-1.037h6.942C19.541 6 20 6.468 20 7.027v.946C20 8.542 19.53 9 18.971 9H12.03C11.459 9 11 8.542 11 7.973zm0 5v-.936c0-.569.46-1.027 1.029-1.037h6.942c.57 0 1.029.468 1.029 1.027v.946c0 .569-.47 1.027-1.029 1.027H12.03c-.57 0-1.029-.458-1.029-1.027zm0 5v-.936c0-.569.46-1.027 1.029-1.037h6.942c.57 0 1.029.468 1.029 1.027v.946c0 .569-.47 1.027-1.029 1.027H12.03c-.57 0-1.029-.458-1.029-1.027z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/list-detail-view.js
/* harmony default export */ var paths_list_detail_view = (["M8 6H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zm0 5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm0 5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zM8 1H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm11 0h-7c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/locate.js
/* harmony default export */ var paths_locate = (["M10 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm9 1h-1.07c-.45-3.61-3.32-6.45-6.93-6.91V1c0-.55-.45-1-1-1S9 .45 9 1v1.09C5.39 2.55 2.52 5.39 2.07 9H1c-.55 0-1 .45-1 1s.45 1 1 1h1.07c.45 3.61 3.32 6.45 6.93 6.91V19c0 .55.45 1 1 1s1-.45 1-1v-1.09c3.61-.46 6.48-3.29 6.93-6.91H19c.55 0 1-.45 1-1s-.45-1-1-1zm-4 2h.9a5.98 5.98 0 01-4.9 4.91V15c0-.55-.45-1-1-1s-1 .45-1 1v.91A5.98 5.98 0 014.1 11H5c.55 0 1-.45 1-1s-.45-1-1-1h-.9A5.98 5.98 0 019 4.09V5c0 .55.45 1 1 1s1-.45 1-1v-.91A5.98 5.98 0 0115.9 9H15c-.55 0-1 .45-1 1s.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/lock.js
/* harmony default export */ var paths_lock = (["M15.93 9H14V4.99c0-2.21-1.79-4-4-4s-4 1.79-4 4V9H3.93c-.55 0-.93.44-.93.99v8c0 .55.38 1.01.93 1.01h12c.55 0 1.07-.46 1.07-1.01v-8c0-.55-.52-.99-1.07-.99zM8 9V4.99c0-1.1.9-2 2-2s2 .9 2 2V9H8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/log-in.js
/* harmony default export */ var paths_log_in = (["M19 0h-8c-.55 0-1 .45-1 1s.45 1 1 1h7v16h-7c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-4 10c0-.28-.11-.53-.29-.71l-5-5a1.003 1.003 0 00-1.42 1.42L11.59 9H1c-.55 0-1 .45-1 1s.45 1 1 1h10.59L8.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l5-5c.18-.18.29-.43.29-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/log-out.js
/* harmony default export */ var paths_log_out = (["M19.71 9.29l-5-5a1.003 1.003 0 00-1.42 1.42L16.59 9H6c-.55 0-1 .45-1 1s.45 1 1 1h10.59l-3.29 3.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l5-5c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM9 18H2V2h7c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/low-voltage-pole.js
/* harmony default export */ var paths_low_voltage_pole = (["M10 0a1 1 0 00-1 1v2H5V2a1 1 0 00-2 0v1H2a1 1 0 000 2h1v2H2a1 1 0 000 2h4a1 1 0 000-2H5V5h4v14a1 1 0 102 0V5h4v2h-1a1 1 0 100 2h4a1 1 0 100-2h-1V5h1a1 1 0 100-2h-1V2a1 1 0 10-2 0v1h-4V1a1 1 0 00-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/manual.js
/* harmony default export */ var paths_manual = (["M20 1.1a.976.976 0 00-.83-.88C15.15-.43 12.07.34 10 2.5 7.93.34 4.85-.43.84.22.37.3.03.67 0 1.1v15.01c0 .07 0 .14.01.21.09.52.61.88 1.15.79 3.85-.62 6.4.16 8 2.46.02.02.03.04.05.07.02.02.04.04.06.07l.01.01a1.07 1.07 0 00.28.19c.01 0 .01.01.02.01.03.01.07.03.1.04.01 0 .02.01.04.01.03.01.07.02.1.02.01 0 .02 0 .04.01H10c.04 0 .09 0 .13-.01.01 0 .03 0 .04-.01.03-.01.06-.01.1-.02.01 0 .03-.01.04-.01.03-.01.07-.02.1-.04.01 0 .02-.01.03-.01.07-.03.13-.07.19-.11.01 0 .01-.01.02-.01.02-.02.04-.03.06-.05.01-.01.02-.02.03-.02l.05-.05c.01-.01.02-.02.02-.03.01-.02.02-.03.04-.05 1.61-2.3 4.15-3.09 8-2.46.54.09 1.06-.26 1.15-.79-.01-.05 0-.09 0-.13V1.1zM9 16.63c-1.78-1.31-4.12-1.83-7-1.55V2c3.26-.37 5.51.39 7 2.35v12.28zm9-1.56c-2.88-.28-5.22.24-7 1.55V4.34c1.49-1.96 3.74-2.71 7-2.35v13.08z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/manually-entered-data.js
/* harmony default export */ var paths_manually_entered_data = (["M1 12h4.34l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zm16.77-3.94l1.65-1.65c.36-.36.58-.86.58-1.41 0-1.1-.9-2-2-2-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.82zM1 4h12.34l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zM0 15c0 .55.45 1 1 1h.34l2-2H1c-.55 0-1 .45-1 1zm1-7h8.34l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zm18 2h-.34l-2 2H19c.55 0 1-.45 1-1s-.45-1-1-1zm0 4h-4.34l-2 2H19c.55 0 1-.45 1-1s-.45-1-1-1zM4 19l4.41-1.59-2.81-2.79L4 19zM14.23 5.94l-7.65 7.65 2.83 2.83 7.65-7.65-2.83-2.83z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/many-to-many.js
/* harmony default export */ var paths_many_to_many = (["M17 6a1 1 0 100-2 1 1 0 000 2zm0 2a3 3 0 01-2.73-1.754c-.2.068-.408.154-.617.264-.884.465-1.92 1.418-2.605 3.49.685 2.072 1.721 3.025 2.605 3.49.21.11.416.196.617.264a3 3 0 11-.165 2.034 6.262 6.262 0 01-1.383-.528c-.983-.518-1.948-1.364-2.722-2.705-.774 1.34-1.739 2.187-2.722 2.705-.48.252-.95.419-1.383.528A3.001 3.001 0 010 15a3 3 0 015.73-1.246c.2-.068.408-.154.617-.264.884-.465 1.92-1.418 2.605-3.49-.685-2.072-1.721-3.025-2.605-3.49a4.21 4.21 0 00-.617-.264 3 3 0 11.165-2.034c.433.11.904.276 1.383.528.983.518 1.948 1.364 2.722 2.705.774-1.34 1.739-2.187 2.722-2.705.48-.252.95-.419 1.383-.528A3.001 3.001 0 0120 5a3 3 0 01-3 3zM4 5a1 1 0 10-2 0 1 1 0 002 0zm12 10a1 1 0 102 0 1 1 0 00-2 0zM3 14a1 1 0 110 2 1 1 0 010-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/many-to-one.js
/* harmony default export */ var paths_many_to_one = (["M3 2a1 1 0 100 2 1 1 0 000-2zm0 4c1.296 0 2.4-.821 2.82-1.972.487.039 1.086.13 1.667.347.947.352 1.773 1 2.032 2.318.323 1.644 1.234 2.675 2.264 3.307-1.03.632-1.941 1.663-2.264 3.307-.259 1.318-1.085 1.966-2.032 2.318a6.244 6.244 0 01-1.668.347 3.001 3.001 0 10.019 2.004c.633-.042 1.491-.158 2.347-.476 1.402-.523 2.867-1.625 3.296-3.807.259-1.318 1.085-1.966 2.032-2.318.24-.09.484-.158.722-.21a3 3 0 100-2.33 5.329 5.329 0 01-.722-.21c-.947-.352-1.773-1-2.032-2.318-.428-2.182-1.894-3.284-3.296-3.807-.856-.318-1.714-.434-2.347-.476A3.001 3.001 0 000 3a3 3 0 003 3zm13 4a1 1 0 102 0 1 1 0 00-2 0zM2 17a1 1 0 112 0 1 1 0 01-2 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/map.js
/* harmony default export */ var paths_map = (["M19.54 4.18l.01-.02-6-4-.01.02C13.39.08 13.21 0 13 0s-.39.08-.54.18l-.01-.02L7 3.8 1.55.17l-.01.01A.969.969 0 001 0C.45 0 0 .45 0 1v14c0 .35.19.64.46.82l-.01.02 6 4 .01-.02c.15.1.33.18.54.18s.39-.08.54-.18l.01.02L13 16.2l5.45 3.63.01-.02c.15.11.33.19.54.19.55 0 1-.45 1-1V5c0-.35-.19-.64-.46-.82zM6 17.13l-4-2.67V2.87l4 2.67v11.59zm6-2.67l-4 2.67V5.54l4-2.67v11.59zm6 2.67l-4-2.67V2.87l4 2.67v11.59z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/map-create.js
/* harmony default export */ var paths_map_create = (["M18 9.22v7.91l-4-2.67V9.22c-.61-.55-1-1.33-1-2.22-.35 0-.69-.07-1-.18v7.65l-4 2.67V5.54l2.02-1.35c0-.06-.02-.13-.02-.19 0-1.66 1.34-3 3-3 0-.34.07-.66.17-.97C13.12.02 13.06 0 13 0c-.21 0-.39.08-.54.18l-.01-.02L7 3.8 1.55.17l-.01.01A.969.969 0 001 0C.45 0 0 .45 0 1v14c0 .35.19.64.46.82l-.01.02 6 4 .01-.02c.15.1.33.18.54.18s.39-.08.54-.18l.01.02L13 16.2l5.45 3.63.01-.02c.15.11.33.19.54.19.55 0 1-.45 1-1V6.82c-.31.11-.65.18-1 .18 0 .89-.39 1.67-1 2.22zM6 17.13l-4-2.67V2.87l4 2.67v11.59zM12 4c0 .55.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V5h2c.55 0 1-.45 1-1s-.45-1-1-1h-2V1c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/map-marker.js
/* harmony default export */ var paths_map_marker = (["M9.98 0c-3.87 0-7 2.98-7 6.67 0 3.68 7 13.33 7 13.33s7-9.65 7-13.33c0-3.68-3.14-6.67-7-6.67zm0 10c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/maximize.js
/* harmony default export */ var paths_maximize = (["M19 0h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L11.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 3.41V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zM8 11c-.28 0-.53.11-.71.29L2 16.59V14c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1H3.41l5.29-5.29c.19-.18.3-.43.3-.71 0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/media.js
/* harmony default export */ var paths_media = (["M15 9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4-7H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 13l-6-5-2 2-4-5-4 8V4h16v11z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/menu.js
/* harmony default export */ var paths_menu = (["M1 6h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm18 3H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0 5H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/menu-closed.js
/* harmony default export */ var paths_menu_closed = (["M8 6h11c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zM4 6c-.28 0-.53.11-.71.29l-3 3C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l3 3A1.003 1.003 0 005 13V7c0-.55-.45-1-1-1zm15 8H8c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm0-5H8c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/menu-open.js
/* harmony default export */ var paths_menu_open = (["M12 9H1c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm0 5H1c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm0-10H1c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm7.71 5.29l-3-3A1.003 1.003 0 0015 7v6a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/merge-columns.js
/* harmony default export */ var paths_merge_columns = (["M6.71 6.29a1.003 1.003 0 00-1.42 1.42L6.59 9H2V2h5v2.18c.42.15.8.39 1.11.7l.01-.01.88.89V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-4.76l-.88.88-.01-.01c-.31.31-.69.56-1.11.71V18H2v-7h4.59L5.3 12.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3zM19 0h-7c-.55 0-1 .45-1 1v4.76l.88-.88.01.01c.31-.31.69-.55 1.11-.7V2h5v7h-4.59l1.29-1.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L13.41 11H18v7h-5v-2.18c-.42-.15-.8-.39-1.11-.7l-.01.01-.88-.89V19c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/merge-links.js
/* harmony default export */ var paths_merge_links = (["M10 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm8-5c-.93 0-1.71.64-1.93 1.5H14V4c0-2.21-1.79-4-4-4S6 1.79 6 4v5.5H3.93C3.71 8.64 2.93 8 2 8c-1.1 0-2 .9-2 2s.9 2 2 2c.93 0 1.71-.64 1.93-1.5H6V16c0 2.21 1.79 4 4 4s4-1.79 4-4v-5.5h2.07c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2s-.9-2-2-2zm-5 8c0 1.66-1.34 3-3 3s-3-1.34-3-3V4c0-1.66 1.34-3 3-3s3 1.34 3 3v12zM10 3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/minimize.js
/* harmony default export */ var paths_minimize = (["M8 11H3c-.55 0-1 .45-1 1s.45 1 1 1h2.59L.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L7 14.41V17c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1zM20 1a1.003 1.003 0 00-1.71-.71L13 5.59V3c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1h-2.59l5.29-5.29c.19-.18.3-.43.3-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/minus.js
/* harmony default export */ var paths_minus = (["M16 9H4c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/mobile-phone.js
/* harmony default export */ var paths_mobile_phone = (["M15 0H5c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-5 19c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm4-3H6V3h8v13z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/mobile-video.js
/* harmony default export */ var paths_mobile_video = (["M19 5c-.28 0-.53.11-.71.29L15 8.59V5c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h13c.55 0 1-.45 1-1v-3.59l3.29 3.29c.18.19.43.3.71.3.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/modal.js
/* harmony default export */ var paths_modal = (["M19 1a1 1 0 011 1v16a1 1 0 01-1 1H1a1 1 0 01-1-1V2a1 1 0 011-1h18zm-1 4H2v12h16V5zm-3-3h-2v2h2V2zm3 0h-2v2h2V2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/modal-filled.js
/* harmony default export */ var paths_modal_filled = (["M20 5v13a1 1 0 01-1 1H1a1 1 0 01-1-1V5h20zm-3-4h2a1 1 0 011 1v1h-3V1zm-2 2H0V2a1 1 0 011-1h14v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/moon.js
/* harmony default export */ var paths_moon = (["M19 14.15A9.94 9.94 0 019.94 20C4.45 20 0 15.55 0 10.06 0 6.03 2.4 2.56 5.85 1a9.811 9.811 0 00-.88 4.09c0 5.49 4.45 9.94 9.94 9.94 1.46 0 2.84-.31 4.09-.88z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/more.js
/* harmony default export */ var paths_more = (["M3.5 8a2.5 2.5 0 100 5 2.5 2.5 0 100-5zM17.5 8a2.5 2.5 0 100 5 2.5 2.5 0 100-5zM10.5 8a2.5 2.5 0 100 5 2.5 2.5 0 100-5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/mountain.js
/* harmony default export */ var paths_mountain = (["M20 16H4l7-11h1l2 2h1l5 9zm-4-5l-1.5-3h-1l-1-1-1-1L8 11.5l3-1.5 1 1 1-1 3 1zM8.055 8L2.79 16H0l7-8h1.055z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/move.js
/* harmony default export */ var paths_move = (["M19.71 9.29l-3-3a1.003 1.003 0 00-1.42 1.42L16.59 9H11V3.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3C10.53.11 10.28 0 10 0s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L9 3.41V9H3.41L4.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L3.41 11H9v5.59L7.71 15.3A.965.965 0 007 15a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3a1.003 1.003 0 00-1.42-1.42L11 16.59V11h5.59l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/mugshot.js
/* harmony default export */ var paths_mugshot = (["M19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18h-.07c-.05-.2-.12-.42-.22-.67-.46-1.05-2.68-1.75-4.16-2.4-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.08-.14.23-.48.2-.87-.05-.5-.25-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15-.02-.17-.06-.33-.11-.5a3.67 3.67 0 00-1.29-1.86C11.7 3.25 10.81 3 10.02 3s-1.68.25-2.31.73c-.61.47-1.07 1.13-1.29 1.86-.05.16-.09.33-.11.5-.12.6-.17 1.51-.17 2.14v.08c-.24.09-.44.32-.49.83-.04.39.12.73.2.87.08.35.28.72.63.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.38 1.59-1.48.65-3.7 1.35-4.16 2.4-.12.27-.18.49-.23.69H2V2h16v16z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/multi-select.js
/* harmony default export */ var paths_multi_select = (["M19 3H7c-.55 0-1 .45-1 1v1h12v6h1c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm-6 6H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zm-1 6H2v-4h10v4zm4-9H4c-.55 0-1 .45-1 1v1h12v6h1c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/music.js
/* harmony default export */ var paths_music = (["M19 0c-.08 0-.16.03-.24.05V.03l-12 3v.02C6.33 3.16 6 3.53 6 4v11.35c-.59-.22-1.27-.35-2-.35-2.21 0-4 1.12-4 2.5S1.79 20 4 20c1.94 0 3.55-.86 3.92-2H8V7.78l10-2.5v7.07c-.59-.22-1.27-.35-2-.35-2.21 0-4 1.12-4 2.5s1.79 2.5 4 2.5c1.94 0 3.55-.86 3.92-2H20V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/nest.js
/* harmony default export */ var paths_nest = (["M2 2c.55 0 1 .45 1 1v5c0 2.21 1.79 4 4 4h8.59L13.3 9.71A.965.965 0 0113 9a1.003 1.003 0 011.71-.71l4 4c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-4 4a1.003 1.003 0 01-1.42-1.42l2.3-2.29H7c-3.31 0-6-2.69-6-6V3c0-.55.45-1 1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/new-drawing.js
/* harmony default export */ var paths_new_drawing = (["M18.7 13.7c.5 0 1 .4 1 1 0 .257-.073.44-.22.614l-.08.086-4 4c-.2.2-.4.3-.7.3-.6 0-1-.5-1-1 0-.257.073-.44.22-.614L14 18l4-4c.2-.2.4-.3.7-.3zM1.8 0l8.378 2.982A3.003 3.003 0 0013 7a3.003 3.003 0 003.877 2.87l.723 2.53.049.06a.41.41 0 01.051.24c0 .167-.07.403-.208.593l-.092.107-4 4c-.2.2-.4.3-.7.3-.075 0-.15-.056-.225-.084L12.4 17.6l-7-2-.112-.042c-.223-.094-.431-.244-.542-.45L4.7 15 0 1.8l.5-.6L7 7.7c-.2.3-.3.6-.3 1 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2a1.68 1.68 0 00-.871.22L7.7 7 1.2.5l.6-.5zM16 0c.55 0 1 .45 1 1v2h2c.55 0 1 .45 1 1s-.45 1-1 1h-2v2c0 .432-.278.803-.664.941l-.01.004A.989.989 0 0116 8c-.55 0-1-.45-1-1V5h-2c-.55 0-1-.45-1-1l.007-.116C12.065 3.388 12.489 3 13 3h2V1c0-.55.45-1 1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/new-grid-item.js
/* harmony default export */ var paths_new_grid_item = (["M8 0H1C.45 0 0 .45 0 1v7c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm0 11H1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-7c0-.55-.45-1-1-1zm6 7h-1v-1c0-.55-.45-1-1-1s-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1s-.45-1-1-1zm5-7h-2c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1zm0-11h-7c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-5 11h-2c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1s-.45-1-1-1zm5 5c-.55 0-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/new-layer.js
/* harmony default export */ var paths_new_layer = (["M11.513 2.663A2 2 0 0013 6h1v1a2 2 0 104 0v-.733l1.5.833c.3.2.5.5.5.9s-.2.7-.5.9l-9 5c-.2.1-.3.1-.5.1s-.3 0-.5-.1l-9-5C.2 8.7 0 8.4 0 8s.2-.7.5-.9l9-5c.2-.1.3-.1.5-.1s.3 0 .5.1l1.013.563zM17 3h2a1 1 0 010 2h-2v2a1 1 0 01-2 0V5h-2a1 1 0 010-2h2V1a1 1 0 012 0v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/new-layers.js
/* harmony default export */ var paths_new_layers = (["M17 3h2a1 1 0 010 2h-2v2a1 1 0 01-2 0V5h-2a1 1 0 010-2h2V1a1 1 0 012 0v2zm-1.252 5.984L10.5 11.9c-.2.1-.3.1-.5.1s-.3 0-.5-.1l-9-5C.2 6.7 0 6.4 0 6s.2-.7.5-.9l9-5c.2-.1.3-.1.5-.1s.3 0 .5.1L13.92 2H13a2 2 0 100 4h1v1a2 2 0 001.748 1.984zm2.07-1.15C17.935 7.58 18 7.298 18 7V6h1c.353 0 .684-.091.972-.251.018.078.028.162.028.251 0 .4-.2.7-.5.9l-1.682.934zM19 9c.6 0 1 .4 1 1 0 .4-.2.7-.5.9l-9 5c-.2.1-.3.1-.5.1s-.3 0-.5-.1l-9-5c-.3-.2-.5-.5-.5-.9 0-.6.4-1 1-1 .2 0 .3 0 .5.1l8.5 4.8 8.5-4.8c.2-.1.3-.1.5-.1zm0 4c.6 0 1 .4 1 1 0 .4-.2.7-.5.9l-9 5c-.2.1-.3.1-.5.1s-.3 0-.5-.1l-9-5c-.3-.2-.5-.5-.5-.9 0-.6.4-1 1-1 .2 0 .3 0 .5.2l8.5 4.7 8.5-4.8c.2-.1.3-.1.5-.1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/new-link.js
/* harmony default export */ var paths_new_link = (["M14.5 12a2.5 2.5 0 00-2.45 2h-7.1a2.5 2.5 0 100 1h7.1a2.5 2.5 0 102.45-3zM19 5h-2V3c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V7h2c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/new-object.js
/* harmony default export */ var paths_new_object = (["M12 4c0 .6.4 1 1 1h2v2c0 .6.4 1 1 1 .5 0 1-.4 1-1V5h2c.5 0 1-.4 1-1s-.5-1-1-1h-2V1c0-.6-.5-1-1-1-.6 0-1 .4-1 1v2h-2c-.6 0-1 .5-1 1zm7 3c0 1.7-1.3 3-3 3s-3-1.3-3-3c-1.7 0-3-1.3-3-3s1.3-3 3-3c0-.2 0-.4.1-.5-1-.3-2-.5-3.1-.5C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10c0-1.1-.2-2.1-.5-3H19z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/new-person.js
/* harmony default export */ var paths_new_person = (["M11.41 15.92c-1.46-.65-1.26-1.05-1.31-1.59-.01-.07-.01-.15-.01-.23.5-.45.91-1.07 1.18-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.33-.07.53-.44.6-.78.08-.14.23-.48.2-.87-.05-.5-.24-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15-.02-.17-.06-.33-.11-.5-.22-.73-.67-1.4-1.27-1.86C9.58 4.25 8.7 4 7.92 4c-.78 0-1.66.25-2.28.73-.61.47-1.06 1.13-1.27 1.86-.05.16-.08.33-.11.5-.12.6-.18 1.51-.18 2.14v.08c-.23.09-.43.32-.48.83-.04.39.12.73.2.87.08.35.28.72.62.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.69 1.35 1.21 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.36 1.59-1.46.65-3.66 1.35-4.11 2.4C-.14 19.38.04 20 .04 20h15.75s.18-.62-.27-1.67c-.45-1.06-2.65-1.75-4.11-2.41zM18.87 3h-2V1c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V5h2c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/new-prescription.js
/* harmony default export */ var paths_new_prescription = (["M11.95 10.23c.16-.18.22-.22.46-.22h1.48c.25 0 .47.08.59.33.1.2.09.41-.05.66l-2.71 3.58L14.88 19c.13.21.16.46.03.69-.12.21-.34.31-.57.31H12.7c-.31 0-.56-.17-.7-.44l-1.9-2.67-1.93 2.68c-.15.27-.42.43-.73.43H5.98c-.25 0-.47-.08-.59-.33-.1-.2-.09-.41.05-.66l3.09-4.35L4.26 9H3v4.32c0 .41-.3.69-.7.69H.7c-.41 0-.7-.28-.7-.69V.69C0 .28.3 0 .7 0h4.42c.71 0 1.36.1 1.94.3.59.2 1.11.49 1.54.87.44.38.78.84 1.02 1.39.25.54.37 1.13.37 1.77 0 1.01-.28 1.88-.84 2.6-.43.54-1.35 1.29-2 1.59l3.09 3.94 1.71-2.23zM4.71 6.04c.71 0 1.45-.16 1.81-.46.33-.28.5-.69.5-1.25s-.17-.97-.5-1.25c-.35-.3-1.1-.46-1.81-.46h-1.7v3.42h1.7zM19 3c.55 0 1 .45 1 1s-.45 1-1 1h-2v2c0 .55-.45 1-1 1s-1-.45-1-1V5h-2c-.55 0-1-.45-1-1s.45-1 1-1h2V1c0-.55.45-1 1-1s1 .45 1 1v2h2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/new-text-box.js
/* harmony default export */ var paths_new_text_box = (["M19 3h-2V1c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V5h2c.55 0 1-.45 1-1s-.45-1-1-1zM5 7.5v1c0 .28.22.5.5.5s.5-.22.5-.5V8h2v7h-.5c-.28 0-.5.22-.5.5s.22.5.5.5h2c.28 0 .5-.22.5-.5s-.22-.5-.5-.5H9V8h2v.5c0 .28.22.5.5.5s.5-.22.5-.5v-1c0-.28-.22-.5-.5-.5h-6c-.28 0-.5.22-.5.5zM16 9c-.55 0-1 .45-1 1v8H2V5h8c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1v15c0 .55.45 1 1 1h15c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/ninja.js
/* harmony default export */ var paths_ninja = (["M20 6s-2.98 2.43-6.12 2.19C13.52 5.31 12.05 0 6 0c0 0 2.41 2.99 2.16 6.12C5.27 6.49 0 7.97 0 14c0 0 2.98-2.43 6.11-2.19C6.47 14.69 7.94 20 14 20c0 0-2.42-2.99-2.16-6.13C14.73 13.51 20 12.02 20 6zm-10 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/not-equal-to.js
/* harmony default export */ var paths_not_equal_to = (["M9.487 7l.532-3.196a1 1 0 011.962.392L11.513 7H16a1 1 0 010 2h-4.82l-.333 2H16a1 1 0 010 2h-5.487l-.532 3.196a1 1 0 01-1.962-.392L8.487 13H4a1 1 0 010-2h4.82l.333-2H4a1 1 0 110-2h5.487z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/notifications.js
/* harmony default export */ var paths_notifications = (["M10 20c1.1 0 2-.9 2-2H8c0 1.1.9 2 2 2zm7-5c-.55 0-1-.45-1-1V8c0-2.61-1.67-4.81-4-5.63V2c0-1.1-.9-2-2-2S8 .9 8 2v.37C5.67 3.19 4 5.39 4 8v6c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/notifications-snooze.js
/* harmony default export */ var paths_notifications_snooze = (["M10 18c0 1.1-.9 2-2 2s-2-.9-2-2zM8 0c.476 0 .914.168 1.258.448C8.508.878 8.09 1.562 8 2.5c-.133 1.4.4 2.367 1.6 2.9C8.533 6.6 8 7.467 8 8v1.2a2.8 2.8 0 002.8 2.8H14v2c0 .51.388.935.884.993L15 15c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1 1-.45 1-1V8c0-2.61 1.67-4.81 4-5.63V2c0-1.1.9-2 2-2z", "M16 9.25v-.395a.75.75 0 00-.75-.75h-2.813L15.834 3.9A.75.75 0 0016 3.43v-.68a.75.75 0 00-.75-.75h-4.5a.75.75 0 00-.75.75v.184c0 .414.336.75.75.75h2.813L10.22 7.831a1 1 0 00-.221.627v.792c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/notifications-updated.js
/* harmony default export */ var paths_notifications_updated = (["M10 20c1.1 0 2-.9 2-2H8c0 1.1.9 2 2 2zm2-17.834A2.994 2.994 0 008 4.99c0 .808.319 1.557.876 2.114l2.97 2.99a2.99 2.99 0 004.154.072V14c0 .55.45 1 1 1s1 .45 1 1-.45 1-1 1H3c-.55 0-1-.45-1-1s.45-1 1-1 1-.45 1-1V8c0-2.61 1.67-4.81 4-5.63V2c0-1.1.9-2 2-2s2 .9 2 2v.166zm1.26 6.514l-2.97-2.99a.973.973 0 01-.29-.7c0-.55.44-1 .99-1 .27 0 .52.11.7.29l2.28 2.28 4.27-4.27a.99.99 0 01.7-.29c.55 0 1 .45 1 1 0 .28-.11.53-.3.7l-4.98 4.98a.99.99 0 01-1.4 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/numbered-list.js
/* harmony default export */ var paths_numbered_list = (["M1.74 9.01h1.27V1h-.95c-.04.24-.12.45-.26.62-.13.17-.29.3-.47.41-.19.11-.4.18-.63.23-.23.04-.46.07-.71.07v1.03h1.75v5.65zm.43 7.93c.18-.14.37-.28.58-.43.21-.14.42-.29.63-.45.21-.16.41-.33.61-.5.2-.18.37-.38.52-.59.15-.21.28-.45.37-.7.09-.25.14-.54.14-.85 0-.25-.04-.52-.12-.8-.08-.28-.21-.54-.39-.78-.19-.24-.43-.44-.73-.59-.3-.17-.68-.25-1.12-.25-.41 0-.77.08-1.08.23-.32.16-.58.37-.8.64-.22.27-.38.59-.49.96-.11.37-.16.77-.16 1.21h1.19c.01-.28.03-.53.08-.77s.12-.45.21-.62c.09-.18.22-.31.38-.42.16-.1.35-.15.59-.15.26 0 .47.05.63.14.16.09.29.21.38.35.09.14.15.29.18.45.03.16.05.31.05.45-.01.31-.08.58-.22.81-.14.24-.32.45-.53.66-.22.2-.45.39-.71.57-.26.18-.51.36-.74.54-.5.36-.89.78-1.17 1.27-.3.47-.45 1.04-.46 1.69H5v-1.14H1.43c.05-.17.14-.33.27-.49.13-.15.29-.3.47-.44zM18 4.02H8c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-1c0-.56-.45-1-1-1zm0 9H8c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-1c0-.56-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/numerical.js
/* harmony default export */ var paths_numerical = (["M2.39 5.75c-.17.21-.38.39-.63.52s-.52.23-.83.29c-.3.05-.61.08-.93.08v1.24h2.49V15h1.49V4.98H2.73c-.05.31-.17.57-.34.77zm17.2 4.71c-.27-.44-.65-.71-1.14-.82v-.02c.42-.16.72-.43.92-.79.2-.36.29-.79.29-1.27 0-.42-.08-.8-.23-1.12-.15-.33-.36-.59-.62-.8-.26-.21-.55-.37-.87-.48-.32-.11-.65-.16-.98-.16-.43 0-.82.08-1.16.25-.34.16-.63.39-.87.69-.24.29-.43.64-.57 1.04-.14.4-.22.83-.23 1.3h1.39c-.01-.25.02-.49.07-.72.06-.23.14-.44.26-.63s.27-.34.45-.45c.18-.11.39-.17.63-.17.39 0 .71.12.96.37s.37.58.37.99c0 .29-.05.54-.16.74-.11.2-.25.36-.43.47-.18.11-.38.19-.61.24-.23.05-.46.06-.68.05v1.17c.28-.01.55 0 .81.03s.5.1.71.21c.21.11.38.28.51.5.13.22.2.52.2.89 0 .55-.16.97-.47 1.27-.31.3-.7.45-1.17.45-.55 0-.95-.19-1.23-.58-.27-.39-.4-.88-.38-1.46h-1.39c.01.5.08.96.21 1.38.13.41.32.77.57 1.06.25.29.56.52.93.68.37.16.8.24 1.3.24.41 0 .79-.07 1.16-.21.37-.14.69-.33.96-.58.28-.25.5-.56.66-.92a3 3 0 00.24-1.23c0-.64-.14-1.17-.41-1.61zM8.58 12.41c.21-.18.45-.36.7-.53.25-.18.5-.36.75-.56.25-.2.49-.41.73-.63.23-.22.44-.47.63-.74.18-.27.33-.56.44-.88.11-.32.16-.67.16-1.07 0-.32-.05-.65-.14-1-.09-.35-.25-.68-.47-.97-.22-.3-.51-.55-.87-.74-.36-.2-.81-.29-1.35-.29-.49 0-.93.1-1.3.29-.37.18-.69.44-.95.78-.26.33-.45.73-.58 1.2-.13.46-.2.96-.2 1.5h1.43c.01-.35.04-.67.09-.97.05-.3.14-.56.25-.78.11-.22.26-.39.45-.52s.43-.19.71-.19c.31 0 .56.06.75.18.19.12.34.26.45.43.11.17.18.36.22.56.04.2.06.39.06.57-.01.38-.1.72-.26 1.02-.15.3-.37.57-.63.83-.26.25-.54.49-.85.71-.31.22-.61.45-.89.68-.6.45-1.06.98-1.41 1.58-.35.61-.52 1.32-.53 2.13h6.01v-1.43H7.69c.06-.21.17-.42.33-.61s.34-.38.56-.55z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/office.js
/* harmony default export */ var paths_office = (["M19 6h-5V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h4v-6h4v6h10c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zM6 12H2V8h4v4zm0-6H2V2h4v4zm6 6H8V8h4v4zm0-6H8V2h4v4zm6 11h-4v-3h4v3zm0-5h-4V8h4v4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/offline.js
/* harmony default export */ var paths_offline = (["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM7 18l2-7H5l8-9-2 7h4l-8 9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/oil-field.js
/* harmony default export */ var paths_oil_field = (["M19 17.99h-1.36l-4.35-9.57 2.91-.86 1.66 4.1c.11.27.43.4.72.31.12-.04.22-.11.28-.2.06-.11 1.47-2.08 1.05-5.6C19.79 5.12 19.3 0 16.01 0 14.89.01 13.99.83 14 1.84c0 .19.04.38.1.56l1.34 3.31L.72 10.03v.02c-.41.12-.72.49-.72.94 0 .55.45 1 1 1 .1 0 .19-.03.28-.06v.02l2-.59 1.47 6.63H3c-.55 0-1 .45-1 1s.45 1 1 1h16c.55 0 1-.45 1-1s-.45-1-1-1zM5.2 10.8l3.95-1.16-2.83 6.22L5.2 10.8zm2.35 7.19l3.95-8.68 3.95 8.68h-7.9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/one-column.js
/* harmony default export */ var paths_one_column = (["M14.94 0h-4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-8 6c-.28 0-.53.11-.71.29l-3 3c-.18.18-.29.43-.29.71s.11.53.29.71l3 3A1.003 1.003 0 007.94 13V7c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/one-to-many.js
/* harmony default export */ var paths_one_to_many = (["M18 3a1 1 0 11-2 0 1 1 0 012 0zm-3.82 1.028a6.243 6.243 0 00-1.667.347c-.947.352-1.773 1-2.032 2.318C10.158 8.337 9.247 9.368 8.217 10c1.03.632 1.941 1.663 2.264 3.307.259 1.318 1.085 1.966 2.032 2.318.581.217 1.18.308 1.668.347a3.001 3.001 0 11-.019 2.004c-.633-.042-1.491-.158-2.347-.476-1.402-.523-2.868-1.625-3.296-3.807-.259-1.318-1.085-1.966-2.032-2.318a5.314 5.314 0 00-.722-.21 3 3 0 110-2.33c.238-.052.481-.12.722-.21.947-.352 1.773-1 2.032-2.318.428-2.182 1.894-3.284 3.296-3.807.856-.318 1.714-.434 2.347-.476A3.001 3.001 0 0120 3a3 3 0 01-5.82 1.028zM4 10a1 1 0 100 .002v-.002zM17 18a1 1 0 100-2 1 1 0 000 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/one-to-one.js
/* harmony default export */ var paths_one_to_one = (["M2 10a1 1 0 112 0 1 1 0 01-2 0zm3.83-1a3.001 3.001 0 100 2h8.34a3.001 3.001 0 100-2H5.83zM17 9a1 1 0 100 2 1 1 0 000-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/open-application.js
/* harmony default export */ var paths_open_application = (["M4 1h14c.55 0 1 .45 1 1v13c0 .55-.45 1-1 1h-8v-2h7V4H5v6H3V2c0-.55.45-1 1-1zm2.5 5h7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-7c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h3c.28 0 .5-.22.5-.5S9.78 7 9.5 7h-3c-.28 0-.5.22-.5.5s.22.5.5.5zm5 2h-5c-.28 0-.5-.22-.5-.5s.22-.5.5-.5h5c.28 0 .5.22.5.5s-.22.5-.5.5zM7 17c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1s.45 1 1 1h2.59L.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L7 14.41V17z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/outdated.js
/* harmony default export */ var paths_outdated = (["M10 0c5.52 0 10 4.48 10 10s-4.48 10-10 10S0 15.52 0 10c0-.55.45-1 1-1s1 .45 1 1c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8C7.47 2 5.22 3.17 3.76 5H5c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1s1 .45 1 1v2.05C3.82 1.6 6.71 0 10 0zm1 16H9v-2h2v2zm0-3H9V4h2v9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/page-layout.js
/* harmony default export */ var paths_page_layout = (["M19 1H1c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM7 17H2V8h5v9zm11 0H8V8h10v9zm0-10H2V3h16v4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/panel-stats.js
/* harmony default export */ var paths_panel_stats = (["M1 1h18a1 1 0 011 1v15a1 1 0 01-1 1H1a1 1 0 01-1-1V2a1 1 0 011-1zm1 2v13h16V3H2zm9 0h1v13h-1V3zm2 7h3.952v1H13v-1zm0 2h3.952v1H13v-1zm0 2h3.952v1H13v-1zm0-6h3.952v1H13V8zm0-2h3.952v1H13V6zm0-2h3.952v1H13V4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/panel-table.js
/* harmony default export */ var paths_panel_table = (["M19 1H1c-.6 0-1 .4-1 1v15c0 .6.4 1 1 1h18c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm-9 11H7V9h3v3zm0-4H7V5h3v3zm-8 8V3h4v13H2zm5 0v-3h3v3H7zm11 0h-7v-3h7v3zm0-4h-7V9h7v3zm0-4h-7V5h7v3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/paperclip.js
/* harmony default export */ var paths_paperclip = (["M18.35 2.67A5.664 5.664 0 0014.33 1c-1.44 0-2.89.56-3.99 1.67l-9.16 9.27C.4 12.73 0 13.78 0 14.83s.39 2.1 1.18 2.9c.78.79 1.82 1.18 2.85 1.18 1.04 0 2.07-.39 2.87-1.2l9.14-9.27c.96-.96.96-2.5.02-3.45-.94-.95-2.49-.96-3.44 0l-7.59 7.69c-.31.32-.3.83.01 1.14.31.31.81.31 1.13.02l7.59-7.69c.31-.31.84-.31 1.13-.02.31.31.31.85 0 1.16l-9.14 9.27c-.93.95-2.54.93-3.45.02-.94-.95-.92-2.55.02-3.49l9.16-9.25c1.55-1.56 4.18-1.59 5.72-.03 1.56 1.57 1.55 4.26 0 5.82l-8.89 9.02c-.3.31-.3.81.01 1.11.3.3.79.31 1.1.01v.01l8.91-9.02A5.645 5.645 0 0020 6.73c0-1.48-.55-2.94-1.65-4.06z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/paragraph.js
/* harmony default export */ var paths_paragraph = (["M16.5 1H7C4.2 1 2 3.2 2 6s2.2 5 5 5v6.5c0 .8.7 1.5 1.5 1.5s1.5-.7 1.5-1.5V4h2v13.5c0 .8.7 1.5 1.5 1.5s1.5-.7 1.5-1.5V4h1.5c.8 0 1.5-.7 1.5-1.5S17.3 1 16.5 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/path.js
/* harmony default export */ var paths_path = (["M18 0H2C.9 0 0 .9 0 2s.9 2 2 2h7v4H4c-1.1 0-2 .9-2 2s.9 2 2 2h5v4H6c-1.1 0-2 .9-2 2s.9 2 2 2h8c1.1 0 2-.9 2-2s-.9-2-2-2h-3v-4h5c1.1 0 2-.9 2-2s-.9-2-2-2h-5V4h7c1.1 0 2-.9 2-2s-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/path-search.js
/* harmony default export */ var paths_path_search = (["M4 7c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm15 11.69l-5-2.5v-3.63c-.32.11-.66.22-1 .29v3.32l-6 2.57v-7.25c-.36-.27-.69-.57-1-.9v8.1l-5-2.5V10c.55 0 1-.45 1-1s-.45-1-1-1V1.31l3.43 1.71c.11-.31.24-.62.39-.92L.72.05A.545.545 0 00.5 0C.22 0 0 .22 0 .5v16c0 .2.12.36.28.44l6 3c.07.04.14.06.22.06.07 0 .14-.01.2-.04l6.79-2.91 5.79 2.9c.07.03.14.05.22.05.28 0 .5-.22.5-.5v-4.21c-.31.13-.64.21-1 .21v3.19zM10 5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm3-1c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6.72-.94l-1.43-.72c.2.43.36.89.48 1.36l.23.11V5.5c-.55 0-1 .45-1 1s.45 1 1 1v1.96l1 1V3.5c0-.2-.12-.36-.28-.44zm-3.69 5.56c.14-.21.27-.42.38-.65.02-.04.04-.07.05-.11.11-.22.2-.45.28-.69v-.01c.07-.24.13-.48.17-.73l.03-.17c.04-.25.06-.5.06-.76C17 2.46 14.54 0 11.5 0S6 2.46 6 5.5 8.46 11 11.5 11c.26 0 .51-.02.76-.06l.17-.03c.25-.04.49-.1.73-.17h.01c.24-.08.47-.17.69-.28.04-.02.07-.03.11-.05.23-.11.44-.24.65-.38l.18.18 3.5 3.5c.17.18.42.29.7.29a1.003 1.003 0 00.71-1.71l-3.68-3.67zm-4.53.88c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/pause.js
/* harmony default export */ var paths_pause = (["M7 3H4c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm9 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/people.js
/* harmony default export */ var paths_people = (["M16.94 17a4.92 4.92 0 00-.33-1.06c-.45-.97-1.37-1.52-3.24-2.3-.17-.07-.76-.31-.77-.32-.1-.04-.2-.08-.28-.12.05-.14.04-.29.06-.45 0-.05.01-.11.01-.16-.25-.21-.47-.48-.65-.79.22-.34.41-.71.56-1.12l.04-.11c-.01.02-.01.02-.02.08l.06-.15c.36-.26.6-.67.72-1.13.18-.37.29-.82.25-1.3-.05-.5-.21-.92-.47-1.22-.02-.53-.06-1.11-.12-1.59.38-.17.83-.26 1.24-.26.59 0 1.26.19 1.73.55.46.35.8.85.97 1.4.04.13.07.25.08.38.08.45.13 1.14.13 1.61v.07c.16.07.31.24.35.62.02.29-.09.55-.15.65-.05.26-.2.53-.46.59-.03.12-.07.25-.11.36-.01.01-.01.04-.01.04-.2.53-.51 1-.89 1.34 0 .06 0 .12.01.17.04.41-.11.71 1 1.19 1.1.5 2.77 1.01 3.13 1.79.34.79.2 1.25.2 1.25h-3.04zm-5.42-3.06c1.47.66 3.7 1.35 4.18 2.39.45 1.05.27 1.67.27 1.67H.04s-.19-.62.27-1.67c.46-1.05 2.68-1.75 4.16-2.4 1.48-.65 1.33-1.05 1.38-1.59 0-.07.01-.14.01-.21-.52-.45-.95-1.08-1.22-1.8l-.01-.01c0-.01-.01-.02-.01-.03-.07-.15-.12-.32-.16-.49-.34-.06-.54-.43-.62-.78-.08-.14-.24-.48-.2-.87.05-.51.26-.74.49-.83v-.08c0-.64.05-1.55.17-2.15a3.648 3.648 0 011.4-2.36C6.32 2.25 7.21 2 8 2s1.68.25 2.31.73a3.63 3.63 0 011.4 2.36c.11.6.17 1.52.17 2.15v.09c.22.09.42.32.47.82.03.39-.12.73-.2.87-.07.34-.27.71-.61.78-.04.16-.09.33-.15.48-.01.01-.02.05-.02.05-.27.71-.68 1.33-1.19 1.78 0 .08 0 .16.01.23.05.55-.15.95 1.33 1.6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/percentage.js
/* harmony default export */ var paths_percentage = (["M15 10c-1.66 0-3 1.34-3 3v2c0 1.66 1.34 3 3 3s3-1.34 3-3v-2c0-1.66-1.34-3-3-3zm1 5c0 .55-.45 1-1 1s-1-.45-1-1v-2c0-.55.45-1 1-1s1 .45 1 1v2zM8 7V5c0-1.66-1.34-3-3-3S2 3.34 2 5v2c0 1.66 1.34 3 3 3s3-1.34 3-3zM4 7V5c0-.55.45-1 1-1s1 .45 1 1v2c0 .55-.45 1-1 1s-1-.45-1-1zm11-4a1.003 1.003 0 00-1.88-.48L5.14 16.49a1.003 1.003 0 101.74.99l7.99-13.97c.08-.15.13-.32.13-.51z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/person.js
/* harmony default export */ var paths_person = (["M19.61 17.91c-.57-1.32-3.35-2.19-5.19-3.01-1.85-.82-1.59-1.31-1.66-1.99-.01-.09-.01-.19-.02-.29.63-.56 1.15-1.33 1.49-2.22 0 0 .02-.05.02-.06.07-.19.13-.39.19-.6.42-.09.67-.55.76-.98.1-.17.29-.6.25-1.08-.06-.62-.31-.91-.59-1.03v-.11c0-.79-.07-1.93-.22-2.68A4.55 4.55 0 0012.9.92C12.11.32 11 0 10.01 0s-2.1.32-2.89.92a4.55 4.55 0 00-1.74 2.94c-.14.75-.22 1.89-.22 2.68v.1c-.29.11-.55.4-.61 1.04-.04.48.15.91.25 1.08.1.44.35.91.79.98.05.21.12.41.19.6 0 .01.01.03.01.04l.01.02c.34.91.87 1.69 1.52 2.25 0 .09-.01.18-.02.26-.07.68.13 1.17-1.72 1.99S.96 16.59.39 17.91C-.18 19.23.05 20 .05 20h19.9s.23-.77-.34-2.09z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/phone.js
/* harmony default export */ var paths_phone = (["M19.91 15.51c-.08-.08-4.21-2.5-4.35-2.57a.876.876 0 00-.4-.1c-.19 0-.42.13-.71.4-.28.27-1.17 1.49-1.43 1.76s-.48.4-.65.4c-.08 0-.19-.02-.32-.07s-1.45-.73-4.2-3.15-3.11-4-3.13-4.44c0-.17.13-.39.4-.65.28-.25.57-.51.89-.74.32-.24.61-.5.88-.78s.4-.52.4-.71c0-.13-.03-.27-.1-.4C7.12 4.32 4.62.19 4.53.1c-.19-.18-.92-.1-1.29.1C.25 1.82 0 4 .05 4.86c.05.89.61 5.58 5.2 9.93 5.7 5.41 9.66 5.2 9.92 5.2.87 0 3.52-.48 4.65-3.19.16-.38.31-1.07.09-1.29z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/pie-chart.js
/* harmony default export */ var paths_pie_chart = (["M9 .98c-4.5.5-8 4.31-8 8.94 0 4.97 4.03 9.04 9 9.04 4.63 0 8.44-3.96 8.94-7.96H9V.98z", "M10-.08V10h10C20 4 15.52-.08 10-.08z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/pin.js
/* harmony default export */ var paths_pin = (["M11.77 1.16c-.81.81-.74 2.28.02 3.76L6.1 8.71c-2.17-1.46-4.12-2-4.94-1.18l4.95 4.95-4.95 6.36 6.36-4.95 4.95 4.95c.82-.82.27-2.77-1.19-4.94l3.8-5.69c1.47.76 2.94.84 3.76.02l-7.07-7.07z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/pivot.js
/* harmony default export */ var paths_pivot = (["M5.83 9.75L.29 15.29a1.003 1.003 0 001.42 1.42l5.54-5.54c-.57-.37-1.05-.85-1.42-1.42zM19 11c-.55 0-1 .45-1 1v1.59l-3.83-3.83c-.37.56-.85 1.04-1.41 1.41L16.59 15H15c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm-5-4c0-2.21-1.79-4-4-4S6 4.79 6 7s1.79 4 4 4 4-1.79 4-4zm-4 2c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/pivot-table.js
/* harmony default export */ var paths_pivot_table = (["M3 5H1c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm0-5H1C.45 0 0 .45 0 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm13.71 5.29C16.53 5.11 16.28 5 16 5s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L15 8.41V11c0 2.21-1.79 4-4 4H8.41l1.29-1.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L8.41 17H11c3.31 0 6-2.69 6-6V8.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3zM19 0H6c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/play.js
/* harmony default export */ var paths_play = (["M16 10c0-.36-.2-.67-.49-.84l.01-.01-10-6-.01.01A.991.991 0 005 3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1 .19 0 .36-.07.51-.16l.01.01 10-6-.01-.01c.29-.17.49-.48.49-.84z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/playbook.js
/* harmony default export */ var paths_playbook = (["M1.707.293A1 1 0 00.293 1.707L2.086 3.5.293 5.293a1 1 0 001.414 1.414L3.5 4.914l1.793 1.793a1 1 0 001.414-1.414L4.914 3.5l1.793-1.793A1 1 0 005.293.293L3.5 2.086 1.707.293z", "M16 20a4 4 0 100-8 4 4 0 000 8zm0-2a2 2 0 100-4 2 2 0 000 4z", "M18.29 5.7L16 3.41V8a3 3 0 01-3 3H4a1 1 0 00-1 1v7a1 1 0 11-2 0v-7a3 3 0 013-3h9a1 1 0 001-1V3.41l-2.29 2.3a1.003 1.003 0 01-1.42-1.42l4-4c.18-.18.43-.29.71-.29.28 0 .53.11.71.29l4 4A1.003 1.003 0 0119 6c-.28 0-.53-.11-.71-.3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/plus.js
/* harmony default export */ var paths_plus = (["M16 9h-5V4c0-.55-.45-1-1-1s-1 .45-1 1v5H4c-.55 0-1 .45-1 1s.45 1 1 1h5v5c0 .55.45 1 1 1s1-.45 1-1v-5h5c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/polygon-filter.js
/* harmony default export */ var paths_polygon_filter = (["M18 7c-.27 0-.52.05-.75.15l-6.28-4.88c.01-.09.03-.18.03-.27 0-1.1-.9-2-2-2S7 .9 7 2c0 .06.01.12.02.19l-4.19 3C2.57 5.07 2.29 5 2 5 .9 5 0 5.9 0 7c0 .74.4 1.38 1 1.72v7.55c-.6.35-1 .99-1 1.73 0 1.1.9 2 2 2 .74 0 1.38-.4 1.72-1h7.55c.35.6.98 1 1.72 1 1.1 0 2-.9 2-2 0-.37-.11-.72-.29-1.02L18.03 11A2 2 0 0018 7zm-5.03 9c-.72.01-1.35.41-1.69 1H3.72c-.17-.3-.42-.55-.72-.72V8.72c.6-.34 1-.98 1-1.72 0-.06-.01-.12-.02-.19l4.19-3c.26.12.54.19.83.19.27 0 .52-.05.75-.15l6.28 4.88c-.01.09-.03.18-.03.27 0 .37.11.72.29 1.02L12.97 16z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/power.js
/* harmony default export */ var paths_power = (["M10 10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1S9 .45 9 1v8c0 .55.45 1 1 1zm3-7.45v2.16c2.36 1.12 4 3.5 4 6.29 0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.79 1.64-5.17 4-6.29V2.55C3.51 3.79 1 7.09 1 11a9 9 0 0018 0c0-3.91-2.51-7.21-6-8.45z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/predictive-analysis.js
/* harmony default export */ var paths_predictive_analysis = (["M20 8.01c0-1.26-.61-2.43-1.61-3.12C17.86 2.5 15.8.79 13.4.79c-.58 0-1.14.1-1.69.29A3.533 3.533 0 009.17 0C8.05 0 7 .55 6.32 1.45c-.15-.02-.3-.03-.45-.03-1.63 0-3.03 1.12-3.46 2.71C.97 4.65 0 6.05 0 7.66c0 .48.09.95.26 1.4-.17.44-.26.91-.26 1.39 0 1.38.72 2.64 1.89 3.29.67.7 1.59 1.09 2.54 1.09.61 0 1.19-.15 1.71-.45.68.82 1.68 1.3 2.73 1.3.66 0 1.28-.18 1.83-.52.61.49 1.34.81 2.11.91 1.3 1.43 2.3 3.28 2.31 3.3 0 0 .35.61.33.61.96-.01 1.77-.2 1.64-1.3.01.02-.92-2.89-.92-2.89.52-.26.94-.69 1.21-1.23 1.12-.66 1.84-1.91 1.84-3.26 0-.3-.03-.6-.1-.89.57-.64.88-1.51.88-2.4zm-1.54 1.28l-.18-.2-.77-.84c-.33-.37-.67-1.17-.73-1.73 0 0-.13-1.25-.13-1.26-.06-.74-1.17-.73-1.13.14 0 .02.13 1.26.13 1.26.04.36.15.77.3 1.17-.08-.01-.15-.02-.22-.02 0 0-2.57-.12-2.57-.13-.73-.03-.89 1.22-.05 1.25l2.57.13c.53.03 1.29.37 1.61.72l.61.67.02.06c.1.27.14.55.14.83 0 .93-.51 1.77-1.34 2.18l-.2.1-.09.23c-.19.48-.6.82-1.1.93l-.67.14.87 2.75c-.48-.76-1.19-1.79-2.02-2.67l-.15-.16-.21-.02c-.51-.04-.99-.21-1.42-.48l1.7-1.48c.44-.39 1.04-.55 1.24-.49 0 0 .78.22.78.23.78.2 1.03-.92.29-1.21l-.78-.23c-.69-.2-1.67.22-2.24.72l-1.91 1.66-.39.32c-.44.36-.93.55-1.5.55-.8 0-1.54-.41-1.97-1.07v-1.88c0-.5.21-.98.34-1.07 0 0 .65-.43.64-.43.87-.69.21-1.57-.64-1.14 0-.01-.65.43-.65.43-.31.2-.54.56-.7.97-.13-.13-.28-.25-.43-.35 0 0-1.91-1.26-1.91-1.28-.81-.56-1.5.63-.61 1.11 0-.02 1.89 1.28 1.89 1.28.46.31.77.97.77 1.36v.84c-.43.24-.78.36-1.24.36-.67 0-1.31-.29-1.77-.79l-.07-.08-.09-.05a2.425 2.425 0 01-1.31-2.16c0-.38.09-.74.25-1.08l.15-.31-.14-.33c-.17-.34-.25-.7-.25-1.08 0-1.13.76-2.1 1.85-2.37l.39-.09.07-.43a2.41 2.41 0 012.39-2.05c.19 0 .39.02.58.07l.4.1.22-.38A2.41 2.41 0 019.17 1.3c.55 0 1.08.19 1.5.53l-.44.45-.01-.01-.31.31c-.41.35-.92.53-1.11.5 0 0-.84-.13-.84-.14-.83-.15-1.09 1.08-.18 1.29.01 0 .84.14.84.14.03 0 .06 0 .09.01-.14.46-.18.96-.12 1.4 0 0 .21 1.24.19 1.23.13.65 1.32.44 1.16-.22 0-.01-.19-1.23-.19-1.23-.07-.48.15-1.19.45-1.5l.48-.5c.07-.06.13-.12.19-.18l.93-.95c.5-.23 1.04-.34 1.59-.34 1.93 0 3.57 1.4 3.89 3.34l.05.31.26.15a2.445 2.445 0 01.87 3.4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/prescription.js
/* harmony default export */ var paths_prescription = (["M13.95 10.23c.16-.18.22-.22.46-.22h1.48c.25 0 .47.08.59.33.1.2.09.41-.05.66l-2.71 3.58L16.88 19c.13.21.16.46.03.69-.12.21-.34.31-.57.31H14.7c-.31 0-.56-.17-.7-.44l-1.9-2.67-1.93 2.68c-.15.27-.42.43-.73.43H7.98c-.25 0-.47-.08-.59-.33-.1-.2-.09-.41.05-.66l3.09-4.35L6.26 9H5v4.32c0 .41-.3.69-.7.69H2.7c-.41 0-.7-.28-.7-.69V.69c0-.41.3-.69.7-.69h4.42c.71 0 1.36.1 1.94.3.59.2 1.11.49 1.54.87.44.38.78.84 1.02 1.39.24.54.36 1.14.36 1.78 0 1.01-.28 1.88-.84 2.6-.43.54-1.35 1.29-2 1.59l3.09 3.94 1.72-2.24zM6.71 6.04c.71 0 1.45-.16 1.81-.46.33-.28.5-.69.5-1.25s-.17-.97-.5-1.25c-.35-.3-1.1-.46-1.81-.46h-1.7v3.42h1.7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/presentation.js
/* harmony default export */ var paths_presentation = (["M19 1h-8c0-.55-.45-1-1-1S9 .45 9 1H1c-.55 0-1 .45-1 1s.45 1 1 1h1v11c0 .55.45 1 1 1h4.59L4.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L9 16.41V19c0 .55.45 1 1 1s1-.45 1-1v-2.59l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L12.41 15H17c.55 0 1-.45 1-1V3h1c.55 0 1-.45 1-1s-.45-1-1-1zm-3 12H4V3h12v10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/print.js
/* harmony default export */ var paths_print = (["M14 16H6v-4H4v5c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-5h-2v4zm2-13c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v1h12V3zm3 2H1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h2v-3h14v3h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-1 4h-2V7h2v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/projects.js
/* harmony default export */ var paths_projects = (["M18 4c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v2h16V4zm-2-3c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v1h12V1zm3 6H1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-5 7c0 .55-.45 1-1 1H7c-.55 0-1-.45-1-1v-2h1v2h6v-2h1v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/properties.js
/* harmony default export */ var paths_properties = (["M2 15c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-7c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm5-4h12c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1zM2 1C.9 1 0 1.9 0 3s.9 2 2 2 2-.9 2-2-.9-2-2-2zm17 8H7c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm0 7H7c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/property.js
/* harmony default export */ var paths_property = (["M3 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm5-1h11c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zM3 15c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm16 1H8c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm-1-8H9c-1.1 0-2 .9-2 2s.9 2 2 2h9c1.1 0 2-.9 2-2s-.9-2-2-2zM3 7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/publish-function.js
/* harmony default export */ var paths_publish_function = (["M7.01 10.11c.35-.64.72-1.68 1.09-3.11l.8-3.03h.96l.24-.77h-.99c.28-1.11.66-1.92 1.12-2.43.28-.32.56-.48.83-.48.05 0 .1.02.13.05.03.03.05.07.05.12 0 .04-.04.13-.11.25-.08.12-.11.24-.11.35 0 .15.06.28.18.39.12.11.27.16.45.16.2 0 .36-.07.49-.2s.2-.31.2-.54c0-.26-.1-.47-.3-.63-.2-.16-.52-.24-.96-.24-.68 0-1.3.19-1.86.58-.55.38-1.08 1.02-1.58 1.91-.17.3-.34.5-.49.59-.15.08-.4.13-.74.12l-.23.77h.95L5.74 9.21c-.23.86-.39 1.39-.47 1.59-.12.29-.3.54-.54.75-.1.08-.21.12-.35.12-.04 0-.07-.01-.1-.03l-.03-.04c0-.02.03-.07.1-.13.07-.07.1-.17.1-.31 0-.15-.05-.28-.16-.38-.11-.1-.27-.15-.47-.15-.25 0-.44.07-.59.2-.15.12-.23.28-.23.46 0 .19.09.36.27.5.19.14.47.21.86.21.61 0 1.16-.15 1.63-.46.48-.31.89-.79 1.25-1.43zm3.7 1.18c-.18-.18-.43-.29-.71-.29s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L9 14.41V19c0 .55.45 1 1 1s1-.45 1-1v-4.59l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3zm4.15-6.78c.17-.13.36-.2.55-.2.07 0 .2.03.39.08s.36.08.5.08c.2 0 .37-.07.5-.2.13-.14.2-.31.2-.52 0-.22-.07-.4-.2-.53s-.33-.2-.58-.2c-.22 0-.43.05-.63.15-.2.1-.45.32-.75.67-.23.25-.56.7-1.01 1.33a6.52 6.52 0 00-.91-2.15l-2.38.39-.05.25c.18-.03.33-.05.45-.05.24 0 .43.1.59.3.25.31.59 1.24 1.02 2.79-.34.44-.58.73-.7.87-.21.22-.38.36-.52.43-.1.05-.22.08-.35.08-.1 0-.26-.05-.49-.16a1.01 1.01 0 00-.42-.11c-.23 0-.42.07-.57.22-.17.14-.24.32-.24.55 0 .21.07.38.21.51.14.13.33.2.56.2.23 0 .44-.05.64-.14.2-.09.45-.29.75-.59s.72-.78 1.25-1.43c.2.62.38 1.07.53 1.35.15.28.32.49.52.61.19.12.44.19.73.19.28 0 .57-.1.86-.3.38-.25.77-.69 1.17-1.31l-.25-.14c-.27.37-.48.6-.61.69-.09.06-.19.09-.31.09-.14 0-.28-.09-.42-.26-.23-.29-.54-1.09-.93-2.4.37-.58.66-.96.9-1.14z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/pulse.js
/* harmony default export */ var paths_pulse = (["M19 10h-2.38L14.9 6.55h-.01c-.17-.32-.5-.55-.89-.55-.43 0-.79.28-.93.66h-.01l-2.75 7.57L7.98 1.82h-.02A.978.978 0 007 1c-.44 0-.8.29-.94.69h-.01L3.28 10H1c-.55 0-1 .45-1 1s.45 1 1 1h3c.44 0 .8-.29.94-.69h.01l1.78-5.34 2.29 12.21h.02c.08.46.47.82.96.82.43 0 .79-.28.93-.66h.01l3.21-8.82.96 1.92h.01c.16.33.49.56.88.56h3c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/rain.js
/* harmony default export */ var paths_rain = (["M4 10a3 3 0 111.065-5.806A5.001 5.001 0 0114.63 3.11 3.5 3.5 0 1115.5 10H4zm0 2a1 1 0 011 1v5a1 1 0 11-2 0v-5a1 1 0 011-1zm9 1a1 1 0 10-2 0v6a1 1 0 102 0v-6zm3-1a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-7 1a1 1 0 10-2 0v3a1 1 0 102 0v-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/random.js
/* harmony default export */ var paths_random = (["M14.47 5h2.12L15.3 6.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3a1.003 1.003 0 00-1.42 1.42L16.59 3H14c-.31 0-.57.15-.76.37l-.01-.01-2.93 3.52 1.3 1.56L14.47 5zm2.24 7.29a1.003 1.003 0 00-1.42 1.42l1.3 1.29h-2.12L4.77 3.36l-.01.01A.998.998 0 004 3H1c-.55 0-1 .45-1 1s.45 1 1 1h2.53l9.7 11.64.01-.01c.19.22.45.37.76.37h2.59l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3zM3.53 15H1c-.55 0-1 .45-1 1s.45 1 1 1h3c.31 0 .57-.15.76-.37l.01.01 2.93-3.52-1.3-1.56L3.53 15z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/record.js
/* harmony default export */ var paths_record = (["M10 3a7 7 0 100 14 7 7 0 100-14z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/rect-height.js
/* harmony default export */ var paths_rect_height = (["M4 18V2h12v16H4zM2 1a1 1 0 011-1h14a1 1 0 011 1v18a1 1 0 01-1 1H3a1 1 0 01-1-1V1zm4.293 11.705a.999.999 0 111.412-1.412L10 13.587l2.295-2.294a.999.999 0 011.412 1.412l-2.962 2.963a1 1 0 01-1.49 0l-2.962-2.963zm0-3.998a.999.999 0 010-1.412l2.962-2.963A1.008 1.008 0 0110 4a.996.996 0 01.745.332l2.962 2.963a.999.999 0 01-1.412 1.412L10 6.413 7.705 8.707a.999.999 0 01-1.412 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/rect-width.js
/* harmony default export */ var paths_rect_width = (["M18 16H2V4h16v12zM1 18a1 1 0 01-1-1V3a1 1 0 011-1h18a1 1 0 011 1v14a1 1 0 01-1 1H1zM7.295 6.293a.999.999 0 111.412 1.412L6.413 10l2.294 2.295a.999.999 0 11-1.412 1.412l-2.963-2.962A.992.992 0 014 10a.996.996 0 01.332-.745l2.963-2.962zm3.998 0a.999.999 0 011.412 0l2.963 2.962.04.038A.996.996 0 0116 10a.996.996 0 01-.332.745l-2.963 2.962a.999.999 0 01-1.412-1.412L13.587 10l-2.294-2.295a.999.999 0 010-1.412z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/rectangle.js
/* harmony default export */ var paths_rectangle = (["M1 4h18c.55 0 1 .45 1 1v10c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V5c0-.55.45-1 1-1zm1 2v8h16V6H2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/redo.js
/* harmony default export */ var paths_redo = (["M19.71 5.29l-4-4a1.003 1.003 0 00-1.42 1.42L16.59 5H6c-3.31 0-6 2.69-6 6s2.69 6 6 6h5v-2H6c-2.21 0-4-1.79-4-4s1.79-4 4-4h10.59L14.3 9.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM15 14c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/refresh.js
/* harmony default export */ var paths_refresh = (["M19 1c-.55 0-1 .45-1 1v2.06C16.18 1.61 13.29 0 10 0 4.48 0 0 4.48 0 10c0 .55.45 1 1 1s1-.45 1-1c0-4.42 3.58-8 8-8 2.52 0 4.76 1.18 6.22 3H15c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm0 8c-.55 0-1 .45-1 1 0 4.42-3.58 8-8 8-2.52 0-4.76-1.18-6.22-3H5c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1v-2.06C3.82 18.39 6.71 20 10 20c5.52 0 10-4.48 10-10 0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/regex.js
/* harmony default export */ var paths_regex = (["M0 17.5a2.5 2.5 0 115 0 2.5 2.5 0 01-5 0zM14 0a1 1 0 00-1 1v3.768L9.737 2.884a1 1 0 10-1 1.732L12 6.5 8.737 8.384a1 1 0 001 1.732L13 8.232V12a1 1 0 102 0V8.232l3.263 1.884a1 1 0 001-1.732L16 6.5l3.263-1.884a1 1 0 10-1-1.732L15 4.768V1a1 1 0 00-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/regression-chart.js
/* harmony default export */ var paths_regression_chart = (["M19 16H3.1L19.31 3.39l-.61-.79L2 15.59V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm-9-9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-5 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm10-2c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2-2 .9-2 2zm-5 4c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2-2 .9-2 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/remove.js
/* harmony default export */ var paths_remove = (["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm5-9H5c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/remove-column.js
/* harmony default export */ var paths_remove_column = (["M19 0H5c-.55 0-1 .45-1 1v4h2V2h5v16H6v-3H4v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18h-5V2h5v16zM6.29 13.71a1.003 1.003 0 001.42-1.42L5.41 10 7.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L4 8.59l-2.29-2.3A1.003 1.003 0 00.29 7.71L2.59 10 .3 12.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L4 11.41l2.29 2.3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/remove-column-left.js
/* harmony default export */ var paths_remove_column_left = (["M4 11h6c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1zM19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-7 18H2V2h10v16zm6 0h-5V2h5v16z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/remove-column-right.js
/* harmony default export */ var paths_remove_column_right = (["M19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM7 18H2V2h5v16zm11 0H8V2h10v16zm-8-7h6c.55 0 1-.45 1-1s-.45-1-1-1h-6c-.55 0-1 .45-1 1s.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/remove-row-bottom.js
/* harmony default export */ var paths_remove_row_bottom = (["M7 14h6c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1zM19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2V8h16v10zm0-11H2V2h16v5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/remove-row-top.js
/* harmony default export */ var paths_remove_row_top = (["M7 8h6c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1zm12-8H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2v-5h16v5zm0-6H2V2h16v10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/repeat.js
/* harmony default export */ var paths_repeat = (["M14 6c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1v2.05C16.18 1.6 13.29 0 10 0 4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10c0-.55-.45-1-1-1s-1 .45-1 1c0 4.42-3.58 8-8 8s-8-3.58-8-8 3.58-8 8-8c2.53 0 4.77 1.17 6.24 3H15c-.55 0-1 .45-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/reset.js
/* harmony default export */ var _20px_paths_reset = (["M6 6c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1s1 .45 1 1v2.05C3.82 1.6 6.71 0 10 0c5.52 0 10 4.48 10 10s-4.48 10-10 10S0 15.52 0 10c0-.55.45-1 1-1s1 .45 1 1c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8C7.47 2 5.23 3.17 3.76 5H5c.55 0 1 .45 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/resolve.js
/* harmony default export */ var paths_resolve = (["M8.7 4.7C7.9 4.2 7 4 6 4c-3.3 0-6 2.7-6 6s2.7 6 6 6c1 0 1.9-.2 2.7-.7C7.3 14 6.5 12.1 6.5 10s.9-4 2.2-5.3zM14 4c-1 0-1.9.2-2.7.7 1.4 1.4 2.2 3.2 2.2 5.3s-.9 4-2.2 5.3c.8.5 1.7.7 2.7.7 3.3 0 6-2.7 6-6s-2.7-6-6-6zm-4 1.5C8.8 6.7 8 8.2 8 10s.8 3.3 2 4.4c1.2-1.1 2-2.7 2-4.5s-.8-3.3-2-4.4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/rig.js
/* harmony default export */ var paths_rig = (["M7 4.2C7 5.75 8.34 7 10 7s3-1.46 3-2.8C13 1.45 10.94 0 10 0H6c0 2.74 3.76 1.96 1 4.2zm11.71 14.09L13 12.59V9.01c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v3.58l-5.71 5.7a1.003 1.003 0 001.42 1.42L7 15.42V19c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-3.58l4.29 4.29a1.003 1.003 0 001.42-1.42zM10.21 8c.01 0 .01.01 0 0 .01.01.01 0 0 0z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/right-join.js
/* harmony default export */ var paths_right_join = (["M8.7 4.7C7.4 6 6.5 7.9 6.5 10s.8 4 2.2 5.3c-.8.5-1.7.7-2.7.7-3.3 0-6-2.7-6-6s2.7-6 6-6c1 0 1.9.2 2.7.7zm-3.34 9.25c-.55-1.2-.86-2.54-.86-3.95s.31-2.75.86-3.95a4.001 4.001 0 000 7.9zM14 4c3.3 0 6 2.7 6 6s-2.7 6-6 6c-1 0-1.9-.2-2.7-.7 1.3-1.3 2.2-3.2 2.2-5.3s-.8-3.9-2.2-5.3C12.1 4.2 13 4 14 4zm-4 1.5C8.8 6.7 8 8.2 8 10s.8 3.3 2 4.4c1.2-1.1 2-2.7 2-4.5s-.8-3.3-2-4.4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/ring.js
/* harmony default export */ var paths_ring = (["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/rocket.js
/* harmony default export */ var paths_rocket = (["M7 7.5c0-3 1.857-6.25 3-7.5 1.143 1.25 3 4.5 3 7.5s-.714 6.25-1 7.5H8c-.286-1.25-1-4.5-1-7.5zm6.84 2.5c-.139 1.62-.47 3.405-.84 5.01l4 .99-1-4-2.16-2zm-4.832 6C9 16.139 9 16.284 9 16.429 9 17.143 9 17.5 10 20c1-2.5 1-2.857 1-3.571 0-.145 0-.29-.008-.429H9.008zM7 15.011c-.37-1.605-.701-3.39-.84-5.011L4 12l-1 4 4-.989zM10 5a1 1 0 100 2 1 1 0 000-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/rocket-slant.js
/* harmony default export */ var paths_rocket_slant = (["M10 5c2.121-2.121 6.308-2.924 8-3-.076 1.692-.879 5.879-3 8-1.192 1.192-2.543 1.823-3.748 2.384-.442.207-.865.404-1.252.616-.203.111-.597.302-.986.49-.444.215-.88.426-1.014.51l-2-2c.158-.252 1-2 1-2s1.37-3.37 3-5zm5 1a1 1 0 11-2 0 1 1 0 012 0zM3 17s0-2 2-4l2 2c-2 2-4 2-4 2zm11-2l-4 4-1.298-4.233c1.033-.56 1.881-.962 2.643-1.322 1.275-.604 2.307-1.092 3.554-2.015L14 15zM1 10l4-4 3.557-.899c-.923 1.247-1.412 2.28-2.015 3.554-.36.762-.762 1.61-1.322 2.643L1 10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/rotate-document.js
/* harmony default export */ var paths_rotate_document = (["M8.71 6.29A.997.997 0 008 6H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-8c0-.28-.11-.53-.29-.71l-4-4zM11 18H4V8h3v3c0 .55.45 1 1 1h3v6zm3-16h-1.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C9.11 2.47 9 2.72 9 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H14c1.1 0 2 .9 2 2v3c0 .55.45 1 1 1s1-.45 1-1V6c0-2.21-1.79-4-4-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/rotate-page.js
/* harmony default export */ var paths_rotate_page = (["M14 2h-1.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C9.11 2.47 9 2.72 9 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H14c1.1 0 2 .9 2 2v3c0 .55.45 1 1 1s1-.45 1-1V6c0-2.21-1.79-4-4-4zm-2 5H3c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 11H4V9h7v9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/route.js
/* harmony default export */ var paths_route = (["M14.028 6.016c.146.275.31.57.485.872.304.524.628 1.047.952 1.545l.118.178-.208-.006-.577-.005c-2.093.004-2.841.303-2.841.895 0 .069.271.248 1.245.567l1.008.313c2.671.831 3.99 1.827 3.99 4.167 0 2.76-1.928 4.059-4.832 4.376-.782.085-1.52.098-2.452.066l-1.15-.046H6.221l.535-.811a67.46 67.46 0 001.122-1.787h2.04l.686.03c1.028.046 1.77.043 2.523-.039 1.832-.2 2.673-.767 2.673-1.789 0-.69-.483-1.09-1.992-1.585l-.83-.257c-1.192-.364-2.037-.7-2.59-1.165.399-1 .612-1.844.612-2.538a6.018 6.018 0 00-.382-2.098c.745-.573 1.884-.822 3.41-.883zM5 4.2c2.648 0 4.791 2.151 4.8 4.797C9.8 11.652 5 18.6 5 18.6l-.5-.744C3.273 15.993.2 11.121.2 8.997A4.802 4.802 0 015 4.2zm0 2.4a2.4 2.4 0 10.002 4.802A2.4 2.4 0 005 6.6zM17 .333a2.671 2.671 0 012.667 2.665C19.667 4.473 17 8.333 17 8.333l-.391-.587c-.741-1.137-2.276-3.629-2.276-4.748A2.668 2.668 0 0117 .333z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/satellite.js
/* harmony default export */ var paths_satellite = (["M9 18c.6 0 1 .4 1 1s-.4 1-1 1c-5 0-9-4-9-9 0-.6.4-1 1-1s1 .4 1 1c0 3.9 3.1 7 7 7zm0-4c.6 0 1 .4 1 1s-.4 1-1 1c-2.8 0-5-2.2-5-5 0-.6.4-1 1-1s1 .4 1 1c0 1.7 1.3 3 3 3zm5.7-3.7c.4-.4 1-.4 1.4 0l3.6 3.6c.4.4.4 1 0 1.4l-1.4 1.4c-.4.4-1 .4-1.4 0l-3.6-3.6c-.4-.4-.4-1 0-1.4l1.4-1.4zM4.7.3c.4-.4 1-.4 1.4 0l3.6 3.6c.4.4.4 1 0 1.4L8.3 6.7c-.4.4-1 .4-1.4 0L3.3 3.1c-.4-.4-.4-1 0-1.4L4.7.3zm11.1 1c.4-.4 1-.4 1.4 0l1.6 1.6c.4.4.4 1 0 1.4l-6.5 6.5c-.4.4-1 .4-1.4 0L9.3 9.2c-.4-.4-.4-1 0-1.4l6.5-6.5zM9 12c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/saved.js
/* harmony default export */ var paths_saved = (["M12 0H4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V6l-6-6zm4 18H5V2h6v5h5v11zm-8.29-6.71a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29.32 0 .59-.16.77-.38l.01.01 4-5-.01-.01c.14-.18.23-.38.23-.62 0-.55-.45-1-1-1-.32 0-.59.16-.77.38l-.01-.01-3.3 4.13-2.21-2.21z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/scatter-plot.js
/* harmony default export */ var paths_scatter_plot = (["M9 9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm5 2c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4-5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm1 10H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM5 15c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/search.js
/* harmony default export */ var paths_search = (["M19.56 17.44l-4.94-4.94A8.004 8.004 0 0016 8c0-4.42-3.58-8-8-8S0 3.58 0 8s3.58 8 8 8c1.67 0 3.21-.51 4.5-1.38l4.94 4.94a1.498 1.498 0 102.12-2.12zM8 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/search-around.js
/* harmony default export */ var paths_search_around = (["M9.9 6.9a3 3 0 100 6 3 3 0 100-6zM3 14c-1.7 0-3 1.3-3 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3zm0 5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM3 0C1.3 0 0 1.3 0 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3zm0 5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM17 14c-1.7 0-3 1.3-3 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3zm0 5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM17 0c-1.7 0-3 1.3-3 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3zm0 5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM10 10L5 5", "M5.379 4.671l5.02 5.02-.707.708-5.02-5.02zM10 10l5-5", "M14.621 4.671l.707.708-5.02 5.02-.707-.707z", "M10 10l5 5M10.379 9.671l5.02 5.02-.707.708-5.02-5.02z", "M10 10l-5 5M9.621 9.671l.707.708-5.02 5.02-.707-.707z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/search-template.js
/* harmony default export */ var paths_search_template = (["M13 8H5c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zm0 3H5c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zm0-6H5c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zm6.56 12.44l-3.23-3.23A8.939 8.939 0 0018 9a9 9 0 10-9 9c1.94 0 3.74-.62 5.21-1.67l3.23 3.23a1.498 1.498 0 102.12-2.12zM9 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/search-text.js
/* harmony default export */ var paths_search_text = (["M19.56 17.44l-3.23-3.23A8.939 8.939 0 0018 9a9 9 0 10-9 9c1.94 0 3.74-.62 5.21-1.67l3.23 3.23a1.498 1.498 0 102.12-2.12zM9 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm3.5-11h-7c-.28 0-.5.22-.5.5v2c0 .28.22.5.5.5s.5-.22.5-.5V7h2v6h-.5c-.28 0-.5.22-.5.5s.22.5.5.5h3c.28 0 .5-.22.5-.5s-.22-.5-.5-.5H10V7h2v.5c0 .28.22.5.5.5s.5-.22.5-.5v-2c0-.28-.22-.5-.5-.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/segmented-control.js
/* harmony default export */ var paths_segmented_control = (["M19 5H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-1 8h-8V7h8v6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/select.js
/* harmony default export */ var _20px_paths_select = (["M19.71 18.29l-4.25-4.25L20 12.91 9.93 9.33c.04-.1.07-.21.07-.33V3c0-.55-.45-1-1-1H4V1c0-.55-.45-1-1-1S2 .45 2 1v1H1c-.55 0-1 .45-1 1s.45 1 1 1h1v5c0 .55.45 1 1 1h6c.12 0 .23-.03.34-.07L12.91 20l1.14-4.54 4.25 4.25c.17.18.42.29.7.29a1.003 1.003 0 00.71-1.71zM8 8H4V4h4v4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/selection.js
/* harmony default export */ var paths_selection = (["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z", "M10 6a4 4 0 100 8 4 4 0 100-8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/send-message.js
/* harmony default export */ var paths_send_message = (["M1.754.135L19.393 9.06c.57.288.775.943.458 1.462-.107.176-.266.32-.458.418l-17.64 8.925c-.57.288-1.288.1-1.604-.418C.05 19.287 0 19.183 0 19v-7l11-2L0 8V1.075C0 .481.529 0 1.18 0c.201 0 .399.047.574.135z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/send-to.js
/* harmony default export */ var paths_send_to = (["M19 0h-5c-.6 0-1 .4-1 1s.4 1 1 1h2.6l-4.3 4.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3L18 3.4V6c0 .5.5 1 1 1s1-.5 1-1V1c0-.6-.5-1-1-1zm0 9c-1 0-1.9-.5-2.5-1.3l-1.4 1.4c-.5.6-1.3.9-2.1.9-1.7 0-3-1.3-3-3 0-.8.3-1.6.9-2.1l1.4-1.4C11.5 2.9 11 2 11 1c0-.3.1-.6.2-.9-.4-.1-.8-.1-1.2-.1C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10c0-.4 0-.8-.1-1.2-.3.1-.6.2-.9.2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/send-to-graph.js
/* harmony default export */ var paths_send_to_graph = (["M8 11H3c-.55 0-1 .45-1 1s.45 1 1 1h2.59L.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L7 14.41V17c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1zm10 2c-.53 0-1.01.21-1.37.55L11.9 10.6c.06-.19.1-.39.1-.6 0-.21-.04-.41-.1-.6l4.72-2.95c.37.34.85.55 1.38.55 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .21.04.41.1.6l-4.73 2.96c-.24-.23-.54-.4-.87-.48V3.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S8 .9 8 2c0 .93.64 1.71 1.5 1.93v4.14c-.33.09-.63.26-.87.48L7.6 7.91 5.42 6.55 3.9 5.6c.06-.19.1-.39.1-.6 0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.53 0 1.01-.21 1.37-.55L9 9.96V10h.06L12 11.84l.4.25 1.51.94 2.19 1.37c-.06.19-.1.39-.1.6 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2zm-7-2.96l-.06-.04H11v.04z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/send-to-map.js
/* harmony default export */ var paths_send_to_map = (["M8 11H3c-.55 0-1 .45-1 1s.45 1 1 1h2.59L.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L7 14.41V17c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1zm11.54-6.82l.01-.02-6-4-.01.02C13.39.08 13.21 0 13 0s-.39.08-.54.18l-.01-.02L7 3.8 1.55.17l-.01.01A.969.969 0 001 0C.45 0 0 .45 0 1v9c0-.55.45-1 1-1h1V2.87l4 2.67V9h2V5.54l4-2.67v11.6l-1 .67v2.4l2-1.33 5.45 3.63.01-.02c.15.1.33.18.54.18.55 0 1-.45 1-1V5c0-.35-.19-.64-.46-.82zM18 17.13l-4-2.67V2.87l4 2.67v11.59z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/series-add.js
/* harmony default export */ var paths_series_add = (["M13.29 9.29c.3.62.8 1.12 1.42 1.42l-3 3c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L7 10.41l-5 5V17h17c.55 0 1 .45 1 1s-.45 1-1 1H1a.998.998 0 01-1-1V4c0-.55.45-1 1-1s1 .45 1 1v8.59l4.29-4.3C6.47 8.11 6.72 8 7 8s.53.11.71.29l3.29 3.3 2.29-2.3zM12 5c0-.5.4-1 1-1h2V2c0-.6.4-1 1-1 .5 0 1 .4 1 1v2h2c.5 0 1 .4 1 1s-.5 1-1 1h-2v2c0 .6-.5 1-1 1-.6 0-1-.4-1-1V6h-2c-.6 0-1-.4-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/series-configuration.js
/* harmony default export */ var paths_series_configuration = (["M11.91 10.67c.52.45 1.13.8 1.8 1.03l-2.01 2.01c-.18.18-.43.29-.71.29-.28 0-.53-.11-.71-.3L7 10.41l-5 5V17h16.99c.55 0 1 .45 1 1s-.45 1-1 1H1a.998.998 0 01-1-1V4c0-.55.45-1 1-1s1 .45 1 1v8.59l4.29-4.3C6.47 8.11 6.72 8 7 8c.28 0 .53.11.71.29l3.29 3.3.91-.92zM18.5 4.6h1.04c.25 0 .45.2.46.44v.9c0 .25-.2.45-.45.45h-1.04c-.07.22-.16.42-.27.62l.73.73c.17.17.17.44 0 .61l-.61.61c-.17.17-.44.17-.61 0l-.73-.73c-.2.11-.4.2-.62.26v1.05c0 .25-.2.45-.45.45h-.9c-.25 0-.45-.2-.45-.45V8.51c-.21-.06-.4-.15-.58-.25l-.76.77c-.17.17-.46.17-.64 0l-.64-.64a.465.465 0 010-.64l.76-.77c-.1-.19-.19-.38-.25-.59h-1.04c-.25 0-.45-.2-.45-.45v-.9c0-.25.2-.45.45-.45h1.04c.07-.22.16-.42.27-.61l-.73-.73a.429.429 0 010-.61l.61-.61c.17-.17.44-.17.61 0l.73.73c.2-.11.4-.2.62-.26V1.45a.44.44 0 01.44-.45h.9c.25 0 .45.2.45.45V2.5c.21.06.4.15.58.25l.76-.77c.17-.17.46-.17.64 0l.64.64c.17.17.17.46 0 .64l-.76.77c.1.17.19.36.25.57zm-4.69.9c0 .93.75 1.69 1.69 1.69.93 0 1.69-.75 1.69-1.69s-.75-1.69-1.69-1.69-1.69.76-1.69 1.69z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/series-derived.js
/* harmony default export */ var paths_series_derived = (["M18.82 6.58c-.03.05-.07.09-.11.13 0 0 0-.01-.01-.01l-2 2c-.2.2-.4.3-.7.3-.6 0-1-.4-1-1 0-.3.1-.5.3-.7L16.6 6H11c-.6 0-1-.4-1-1s.4-1 1-1h5.6l-1.3-1.3c-.2-.2-.3-.4-.3-.7 0-.6.4-1 1-1 .3 0 .5.1.7.3l3 3c.2.2.3.4.3.7s-.1.5-.3.7l-.88.88zm-5.53 2.71c.3.62.8 1.12 1.42 1.42l-3 3c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L7 10.41l-5 5V17h17c.55 0 1 .45 1 1s-.45 1-1 1H1a.998.998 0 01-1-1V4c0-.55.45-1 1-1s1 .45 1 1v8.59l4.29-4.3C6.47 8.11 6.72 8 7 8s.53.11.71.29l3.29 3.3 2.29-2.3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/series-filtered.js
/* harmony default export */ var paths_series_filtered = (["M12.14 10.45c.21.67.65 1.23 1.22 1.61l-1.65 1.65c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L7 10.41l-5 5V17h17c.55 0 1 .45 1 1s-.45 1-1 1H1a.998.998 0 01-1-1V4c0-.55.45-1 1-1s1 .45 1 1v8.59l4.29-4.3C6.47 8.11 6.72 8 7 8s.53.11.71.29l3.29 3.3 1.14-1.14zM19.35 1a.642.642 0 01.46 1.1l-3.03 3.03v2.95c0 .18-.07.34-.19.46l-1.28 1.29c-.11.1-.27.17-.45.17-.35 0-.64-.29-.64-.64V5.13L11.19 2.1a.642.642 0 01.45-1.1h7.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/series-search.js
/* harmony default export */ var paths_series_search = (["M11.28 11.31l-.28.28-3.29-3.3C7.53 8.11 7.28 8 7 8s-.53.11-.71.29L2 12.59V4c0-.55-.45-1-1-1s-1 .45-1 1v14a.998.998 0 001 1h18c.55 0 1-.45 1-1s-.45-1-1-1H2v-1.59l5-5 3.29 3.29c.18.19.43.3.71.3s.53-.11.71-.29l2.09-2.09c-.17.02-.34.02-.51.02-.7 0-1.38-.12-2.01-.33zm-.93-6c0-1.62 1.31-2.93 2.93-2.93s2.93 1.31 2.93 2.93-1.31 2.93-2.93 2.93-2.93-1.31-2.93-2.93zm6.47 2.43c.11-.17.21-.33.29-.51.01-.03.03-.06.04-.09.08-.18.16-.35.21-.54.06-.2.1-.38.14-.58.01-.05.01-.09.02-.14.03-.2.05-.39.05-.6 0-2.37-1.93-4.3-4.3-4.3-2.37.01-4.3 1.93-4.3 4.31s1.93 4.3 4.3 4.3c.21 0 .4-.02.6-.05.04 0 .09-.01.14-.02.2-.03.38-.08.57-.14.2-.06.37-.14.55-.21.03-.01.06-.03.09-.04.18-.09.34-.19.51-.29l2.87 2.87c.14.14.33.22.56.22.43 0 .78-.35.78-.78a.938.938 0 00-.23-.56l-2.89-2.85z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/settings.js
/* harmony default export */ var paths_settings = (["M4 1c0-.55-.45-1-1-1S2 .45 2 1v5h2V1zM2 19c0 .55.45 1 1 1s1-.45 1-1v-6H2v6zm9-18c0-.55-.45-1-1-1S9 .45 9 1v8h2V1zm7 0c0-.55-.45-1-1-1s-1 .45-1 1v3h2V1zM9 19c0 .55.45 1 1 1s1-.45 1-1v-3H9v3zm9-14h-2c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-2 14c0 .55.45 1 1 1s1-.45 1-1v-8h-2v8zM4 7H2c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm7 3H9c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/shapes.js
/* harmony default export */ var paths_shapes = (["M7.88 11.12a.958.958 0 011.277.33l3.719 6.207c.081.136.124.29.124.447 0 .495-.419.896-.936.896H4.936a.969.969 0 01-.436-.103.878.878 0 01-.392-1.21l3.409-6.208a.915.915 0 01.362-.36zM15 5a4 4 0 110 8 4 4 0 010-8zM8 1a1 1 0 011 1v6a1 1 0 01-1 1H2a1 1 0 01-1-1V2a1 1 0 011-1h6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/share.js
/* harmony default export */ var paths_share = (["M15 18H2V5h8.76l2-2H1c-.55 0-1 .45-1 1v15c0 .55.45 1 1 1h15c.55 0 1-.45 1-1V7.24l-2 2V18zm4-18h-7c-.55 0-1 .45-1 1s.45 1 1 1h4.59l-7.3 7.29a1.003 1.003 0 001.42 1.42L18 3.41V8c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/shared-filter.js
/* harmony default export */ var paths_shared_filter = (["M13.917 17.209c1.01.454 2.543.928 2.873 1.643.31.722.186 1.148.186 1.148H6.026s-.13-.426.186-1.148 1.842-1.203 2.86-1.65c1.017-.447.914-.722.948-1.093 0-.048.007-.097.007-.145a3.067 3.067 0 01-.839-1.237l-.007-.007c0-.007-.006-.014-.006-.02a1.757 1.757 0 01-.11-.337c-.234-.042-.372-.296-.426-.537a1.045 1.045 0 01-.138-.598c.034-.35.179-.509.337-.57v-.056c0-.44.034-1.065.117-1.478a2.508 2.508 0 01.962-1.623c.426-.33 1.038-.501 1.58-.501.544 0 1.155.172 1.588.502a2.496 2.496 0 01.963 1.622c.075.413.117 1.045.117 1.478v.062c.15.062.288.22.323.564.02.268-.083.502-.138.598-.048.234-.185.488-.42.537a2.635 2.635 0 01-.116.364 3.094 3.094 0 01-.818 1.224c0 .055 0 .11.007.158.034.378-.103.653.914 1.1z", "M14.976 16.57c-.24-.099-.455-.186-.65-.273l-.007-.004a3.801 3.801 0 01-.194-.091c.224-.288.41-.609.554-.946l.001-.002.013-.033c.018-.043.036-.087.052-.13l.011-.027.016-.04c.105-.092.19-.19.256-.284.129-.184.213-.38.265-.563.105-.226.225-.592.192-1.026l-.001-.011-.002-.011a1.854 1.854 0 00-.325-.91 9.924 9.924 0 00-.12-1.246 3.09 3.09 0 00-.106-.475l-.001-.006a3.543 3.543 0 00-.763-1.353c.27-.092.56-.139.83-.139.495 0 1.05.156 1.444.456a2.269 2.269 0 01.875 1.475c.069.375.106.95.106 1.344v.056c.138.056.263.2.294.513.019.244-.075.456-.125.543-.044.213-.169.444-.381.488-.025.1-.056.206-.094.3a2.815 2.815 0 01-.756 1.144c0 .05 0 .1.006.144.004.043.006.086.007.127.01.283.018.518.824.872.192.087.404.173.623.263.83.34 1.752.717 1.99 1.231.28.657.168 1.044.168 1.044h-2.081a3.864 3.864 0 00-.188-.542l-.005-.013-.006-.012c-.183-.397-.491-.681-.76-.88a5.614 5.614 0 00-.896-.522 17.36 17.36 0 00-.916-.4l-.15-.061zM14 1c.55 0 1 .45 1 1 0 .28-.11.53-.29.7L10 7.41v.897a3.182 3.182 0 00-.69.4 3.508 3.508 0 00-1.343 2.259c-.07.37-.107.836-.122 1.237a1.836 1.836 0 00-.339.926c-.046.458.09.84.195 1.06.053.178.138.376.27.56.055.08.125.162.21.242v.143l.053.052L6.71 16.71A1.003 1.003 0 015 16V7.41L.29 2.71A1.003 1.003 0 011 1h13z", "M9.059 14.361c-.23-.044-.366-.296-.42-.535a1.045 1.045 0 01-.138-.598c.034-.35.179-.509.337-.57v-.056c0-.44.034-1.065.117-1.478A2.508 2.508 0 0110 9.441V13c0 .28-.11.53-.29.71l-.651.651z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/shield.js
/* harmony default export */ var paths_shield = (["M10 20c6-3.81 9-9.048 9-15.714-2 0-5-1.429-9-4.286-4 2.857-7 4.286-9 4.286C1 10.952 4 16.19 10 20zm0-17.348c2.577 1.734 4.776 2.88 6.667 3.419-.44 4.627-2.636 8.353-6.667 11.297V2.652z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/ship.js
/* harmony default export */ var paths_ship = (["M6.84.804L6.5 2.5h-3a1 1 0 00-1 1v4.893l-1.58.451a.99.99 0 00-.691 1.192c.46 1.82 1.163 4.356 1.701 5.571-.218.012-.445.018-.68.018a.625.625 0 100 1.25c2.583 0 4.268-.68 5.202-1.146.687.466 1.88 1.146 3.548 1.146 1.65 0 2.837-.666 3.528-1.132l.005.003c.244.131.6.3 1.07.468.938.335 2.321.661 4.147.661a.625.625 0 100-1.25c-.323 0-.63-.011-.922-.031a.996.996 0 00.184-.334l1.67-5.168a1 1 0 00-.677-1.27l-1.505-.43V3.5a1 1 0 00-1-1h-3L13.16.804A1 1 0 0012.18 0H7.82a1 1 0 00-.98.804zM5 7.679l3.75-1.072V5H5v2.679zm6.25-1.072L15 7.68V5h-3.75v1.607zM6.205 16.95a.625.625 0 01.658.042c.569.407 1.597 1.134 3.137 1.134s2.568-.727 3.137-1.134a.625.625 0 01.724-.001l.007.005.045.029c.044.027.114.069.21.12.194.104.493.247.9.392.811.29 2.053.589 3.727.589a.625.625 0 110 1.25c-1.826 0-3.21-.326-4.148-.661a7.894 7.894 0 01-1.069-.468l-.005-.003c-.691.466-1.878 1.132-3.528 1.132-1.667 0-2.861-.68-3.548-1.146-.934.467-2.619 1.146-5.202 1.146a.625.625 0 110-1.25c2.66 0 4.23-.787 4.955-1.176z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/shop.js
/* harmony default export */ var paths_shop = (["M17.94 3.63c-.01-.02-.01-.03-.02-.04l-.03-.09h-.01c-.18-.3-.49-.5-.86-.5h-14c-.42 0-.77.25-.92.61L0 8.5h.02a2.5 2.5 0 005 0 2.5 2.5 0 005 0 2.5 2.5 0 005 0 2.5 2.5 0 005 0l-2.08-4.87zM3.02 2h14c.55 0 1-.45 1-1s-.45-1-1-1h-14c-.55 0-1 .45-1 1s.44 1 1 1zm13 14h-12v-4h-2v7c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-7h-2v4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/shopping-cart.js
/* harmony default export */ var paths_shopping_cart = (["M18 14H8.72l-.67-2H17c.44 0 .8-.29.94-.69h.01l2-6h-.01c.03-.1.06-.2.06-.31 0-.55-.45-1-1-1H5.39l-.44-1.32h-.01C4.8 2.29 4.44 2 4 2H1c-.55 0-1 .45-1 1s.45 1 1 1h2.28l3.33 10H5c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2h9c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2zM6.05 6h11.56l-1.33 4H7.39L6.05 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/signal-search.js
/* harmony default export */ var paths_signal_search = (["M7.15 10.33c.888.8 1.999 1.36 3.228 1.574l2.326 6.98a.846.846 0 01-.535 1.07.844.844 0 01-1.072-.535l-1.225-3.671H7.125L5.9 19.419a.85.85 0 01-1.072.536.85.85 0 01-.536-1.071l2.857-8.555zm1.353 1.305l-.808 2.413h1.607l-.8-2.413zM5 5.5c0 .76.13 1.49.37 2.17-.496 1.056-.313 2.356.704 3.29.385.353.404.94.038 1.311a.982.982 0 01-1.356.038c-2.183-2.01-2-5.125.01-6.94a.95.95 0 01.24-.156A6.421 6.421 0 005 5.5z", "M3.874 13.185c-1.346-.918-2.187-2.67-2.187-4.34 0-1.752.757-3.254 2.187-4.339.42-.25.42-.834.168-1.168-.252-.418-.84-.418-1.177-.167C1.014 4.59-.08 6.509.005 8.846c.084 2.253 1.177 4.423 2.86 5.675.168.083.336.166.504.166.253 0 .505-.083.673-.333.337-.418.253-.918-.168-1.169zM12.246 12.309a.98.98 0 01-1.354-.037.917.917 0 01-.206-.324 6.54 6.54 0 001.959-.049 5.125 5.125 0 01-.399.41zM14.631 11.476l1.228 1.229a6.6 6.6 0 01-1.723 1.816c-.169.083-.337.166-.505.166-.253 0-.505-.083-.673-.333-.337-.418-.253-.918.168-1.169.62-.422 1.133-1.022 1.505-1.709z", "M11.5 0C14.54 0 17 2.46 17 5.5c0 .26-.02.51-.06.75l-.03.17c-.04.25-.1.49-.17.73v.01c-.08.24-.17.47-.28.69-.01.04-.03.07-.05.11-.11.23-.24.44-.38.65l3.68 3.68A1.003 1.003 0 0119 14c-.28 0-.53-.11-.7-.29l-3.68-3.68c-.21.14-.42.27-.65.38-.04.01-.07.03-.11.05-.22.11-.45.2-.69.28h-.01c-.24.07-.48.13-.73.17l-.17.03c-.25.04-.5.06-.76.06C8.46 11 6 8.54 6 5.5S8.46 0 11.5 0zm0 1.5c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/sim-card.js
/* harmony default export */ var paths_sim_card = (["M16.71 5.29l-5-5A.997.997 0 0011 0H4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6c0-.28-.11-.53-.29-.71zM9 7h2v3H9V7zM6 7h2v3H6V7zm2 11H6v-3h2v3zm3 0H9v-3h2v3zm3 0h-2v-3h2v3zm0-4H6v-3h8v3zm0-4h-2V7h2v3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/slash.js
/* harmony default export */ var paths_slash = (["M12 2c-.46 0-.85.32-.97.74L7.04 16.7c-.02.1-.04.2-.04.3 0 .55.45 1 1 1 .46 0 .85-.32.97-.74L12.96 3.3c.02-.1.04-.2.04-.3 0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/small-cross.js
/* harmony default export */ var paths_small_cross = (["M11.41 10l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L10 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L8.59 10 5.3 13.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3.29-3.3 3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L11.41 10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/small-info-sign.js
/* harmony default export */ var paths_small_info_sign = (["M17 10a7 7 0 11-14 0 7 7 0 0114 0zm-6-5v2H9V5h2zm0 3v6h1v1H8v-1h1V9H8V8h3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/small-minus.js
/* harmony default export */ var paths_small_minus = (["M14 9H6c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/small-plus.js
/* harmony default export */ var paths_small_plus = (["M14 9h-3V6c0-.55-.45-1-1-1s-1 .45-1 1v3H6c-.55 0-1 .45-1 1s.45 1 1 1h3v3c0 .55.45 1 1 1s1-.45 1-1v-3h3c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/small-square.js
/* harmony default export */ var paths_small_square = (["M5 5v10h10V5H5zM4 3a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V4a1 1 0 00-1-1H4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/small-tick.js
/* harmony default export */ var paths_small_tick = (["M15 5c-.28 0-.53.11-.71.29L8 11.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l7-7A1.003 1.003 0 0015 5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/snowflake.js
/* harmony default export */ var paths_snowflake = (["M11 11.776v2.81l2.31 2.242a.987.987 0 010 1.415c-.399.39-1.044.39-1.442 0L11 17.414V19a.99.99 0 01-.996 1A.996.996 0 019 19v-1.636l-.912.879c-.398.39-1.043.39-1.441 0a.987.987 0 010-1.415L9 14.536v-2.79l-2.548 1.435-.837 3.063c-.146.534-.705.85-1.248.707a.998.998 0 01-.721-1.224l.309-1.132-1.4.793a1.03 1.03 0 01-1.393-.366.99.99 0 01.373-1.366l1.445-.818-1.224-.322a.998.998 0 01-.72-1.225c.145-.533.704-.85 1.248-.707l3.193.84 2.462-1.395-2.532-1.434-3.123.82a1.022 1.022 0 01-1.249-.706.998.998 0 01.721-1.225L2.91 7.18l-1.4-.793a.99.99 0 01-.373-1.366 1.03 1.03 0 011.392-.366l1.445.818-.328-1.2a.998.998 0 01.72-1.225 1.022 1.022 0 011.25.707l.855 3.132L9 8.311V5.414L6.647 3.121a.987.987 0 010-1.414 1.033 1.033 0 011.441 0L9 2.586V1c0-.552.44-1 1.004-1A.99.99 0 0111 1l-.007 1.536.875-.829a1.033 1.033 0 011.441 0 .987.987 0 010 1.414L11 5.364v2.918l2.53-1.42.855-3.131c.146-.534.705-.85 1.249-.707a.998.998 0 01.72 1.224l-.327 1.2 1.4-.792a1.03 1.03 0 011.392.366.99.99 0 01-.373 1.366l-1.355.768 1.153.303a.998.998 0 01.721 1.225c-.146.533-.705.85-1.249.707l-3.123-.821-2.576 1.459 2.506 1.42 3.193-.84a1.022 1.022 0 011.249.707.998.998 0 01-.72 1.225l-1.224.322 1.4.793a.99.99 0 01.373 1.366 1.03 1.03 0 01-1.393.366l-1.356-.768.31 1.132a.998.998 0 01-.721 1.224 1.022 1.022 0 01-1.249-.707l-.837-3.063L11 11.776z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/social-media.js
/* harmony default export */ var paths_social_media = (["M11.5 5c.8 0 1.6-.4 2-1 2 1.2 3.3 3.3 3.5 5.7 0 .5.5.9 1 .9.6 0 1-.5 1-1v-.1c-.2-3.3-2.2-6.2-5.1-7.6C13.7.8 12.7 0 11.5 0 10.1 0 9 1.1 9 2.5S10.1 5 11.5 5zm5 7c-1.4 0-2.5 1.1-2.5 2.5 0 .4.1.7.2 1.1-1.1.9-2.6 1.4-4.2 1.4-1.9 0-3.6-.8-4.9-2-.2-.2-.5-.4-.8-.4-.5 0-1 .5-1 1 0 .3.1.5.3.7C5.3 18 7.5 19 10 19c2.2 0 4.2-.8 5.8-2.1.2.1.5.1.7.1 1.4 0 2.5-1.1 2.5-2.5S17.9 12 16.5 12zM5 10.5c0-1.1-.7-2.1-1.7-2.4.5-1.9 1.9-3.5 3.6-4.4.3-.2.6-.5.6-.9 0-.5-.4-1-1-1-.2 0-.4.1-.6.2-2.4 1.2-4.2 3.6-4.7 6.4C.5 8.9 0 9.6 0 10.5 0 11.9 1.1 13 2.5 13S5 11.9 5 10.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/sort.js
/* harmony default export */ var paths_sort = (["M19 16h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm0-5h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zM7 15c-.28 0-.53.11-.71.29L5 16.59V11c0-.55-.45-1-1-1s-1 .45-1 1v5.59L1.71 15.3A.965.965 0 001 15a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 007 15zM19 1h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm0 5h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/sort-alphabetical.js
/* harmony default export */ var paths_sort_alphabetical = (["M8 15c-.28 0-.53.11-.71.29L6 16.59v-5.58c0-.55-.45-1-1-1s-1 .45-1 1v5.58L2.71 15.3c-.18-.18-.43-.3-.71-.3a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 008 15zm8.89-.79v-1.22H11.3v1.3h3.51L11 18.78V20h5.99v-1.3h-3.91l3.81-4.49zM14.97 0h-1.95L9.01 11.01h1.89l.98-2.92h4.17l.98 2.92h1.96L14.97 0zm-2.59 6.63l1.58-4.74H14l1.57 4.74h-3.19z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/sort-alphabetical-desc.js
/* harmony default export */ var paths_sort_alphabetical_desc = (["M8.01 15c-.28 0-.53.11-.71.29L6 16.59v-5.58c0-.55-.45-1-1-1s-1 .45-1 1v5.58L2.71 15.3c-.18-.18-.43-.3-.71-.3a1.003 1.003 0 00-.71 1.71l3 3a1.014 1.014 0 001.42 0l3-3c.18-.18.29-.43.29-.71.01-.55-.44-1-.99-1zm4.44-5.65l6.4-7.88V0H10.5v1.67h5.91L10 9.44v1.57h9V9.35h-6.55zm1.27 3.64L11 20h1.59l.56-1.56h2.68l.55 1.56h1.64l-2.68-7.01h-1.62zm-.16 4.3l.93-2.57h.02l.9 2.57h-1.85z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/sort-asc.js
/* harmony default export */ var paths_sort_asc = (["M10 8h5c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1h-5c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm0 5h7c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1h-7c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm0-10h3c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1h-3c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm9 12h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zM7 14c-.28 0-.53.11-.71.29L5 15.59V10c0-.55-.45-1-1-1s-1 .45-1 1v5.59L1.71 14.3A.965.965 0 001 14a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 007 14z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/sort-desc.js
/* harmony default export */ var paths_sort_desc = (["M13 15h-3c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm-6-1c-.28 0-.53.11-.71.29L5 15.59V10c0-.55-.45-1-1-1s-1 .45-1 1v5.59L1.71 14.3A.965.965 0 001 14a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 007 14zM19 0h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-4 10h-5c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm2-5h-7c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/sort-numerical.js
/* harmony default export */ var paths_sort_numerical = (["M9 14.99c-.28 0-.53.11-.71.29L7 16.58v-5.59c0-.55-.45-1-1-1s-1 .45-1 1v5.59l-1.29-1.29a.965.965 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29.28 0 .53-.11.71-.29l3-3c.18-.18.29-.43.29-.71a.99.99 0 00-1-1zm8.88.23c-.08-.42-.22-.79-.42-1.12-.2-.33-.47-.6-.8-.8-.33-.2-.76-.3-1.28-.3a2.333 2.333 0 00-1.72.71c-.21.22-.37.48-.49.78-.11.3-.17.62-.17.97 0 .27.04.54.13.8.08.26.22.5.4.7.19.21.43.38.71.5a2.142 2.142 0 001.72.02c.25-.12.47-.31.66-.58l.02.02c-.01.19-.04.4-.08.63-.04.24-.11.46-.21.67-.1.21-.23.38-.39.53a.92.92 0 01-.62.22c-.24 0-.44-.08-.6-.25-.16-.17-.27-.36-.31-.59h-1.31c.04.29.12.56.24.79.12.23.28.43.48.59.19.16.42.28.67.36.25.08.52.12.82.12.49 0 .9-.1 1.23-.31.34-.21.61-.48.82-.82.21-.34.37-.71.47-1.13.1-.42.15-.83.15-1.25 0-.43-.04-.85-.12-1.26zm-1.42.63c-.05.15-.11.28-.2.4-.09.12-.2.21-.34.27s-.3.1-.49.1c-.17 0-.33-.04-.46-.11s-.24-.17-.33-.29c-.08-.12-.15-.25-.19-.4-.04-.15-.06-.31-.06-.47 0-.15.02-.3.07-.45.05-.15.11-.28.2-.39.09-.12.2-.21.33-.28.13-.07.27-.11.44-.11.17 0 .33.04.47.11.14.07.25.17.34.28a1.387 1.387 0 01.28.86c.01.17-.02.33-.06.48zM15.32 11H17V0h-1.25c-.05.34-.17.62-.34.85-.17.23-.39.42-.63.57-.25.15-.52.25-.83.31-.3.06-.62.09-.94.09v1.41h2.31V11z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/sort-numerical-desc.js
/* harmony default export */ var paths_sort_numerical_desc = (["M9 15c-.28 0-.53.11-.71.29L7 16.59v-5.58c0-.55-.45-1-1-1s-1 .45-1 1v5.58L3.71 15.3c-.18-.18-.43-.3-.71-.3a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29.28 0 .53-.11.71-.29l3-3A1.003 1.003 0 009 15zm6.7-1.33a1.5 1.5 0 01-.44.43c-.17.11-.37.19-.58.23-.22.04-.44.06-.67.05v1.07h1.66V20H17v-6.99h-1.06c-.04.26-.12.48-.24.66zm3.15-10.3c-.11-.68-.29-1.26-.55-1.76-.26-.5-.62-.89-1.08-1.18C16.75.14 16.17 0 15.46 0c-.54 0-1.03.09-1.46.27-.43.18-.79.44-1.09.76-.3.33-.52.71-.67 1.15-.16.44-.24.92-.24 1.43 0 .54.08 1.04.23 1.47.15.44.37.81.65 1.12.28.31.61.55 1 .72.39.17.82.26 1.3.26.46 0 .88-.11 1.26-.33.38-.22.68-.53.9-.94l.03.03c-.03.35-.07.74-.12 1.16-.05.42-.15.81-.29 1.18-.14.37-.35.68-.61.92-.26.25-.62.37-1.06.37-.43 0-.77-.13-1.03-.4-.25-.27-.4-.62-.44-1.05h-1.64c.02.43.11.83.29 1.18.17.35.39.66.67.91a3.027 3.027 0 002.07.8c.71 0 1.3-.17 1.79-.5.48-.33.87-.76 1.17-1.29.3-.53.51-1.12.64-1.76.13-.64.19-1.28.19-1.92.01-.77-.05-1.49-.15-2.17zM17.1 4.44c-.08.27-.19.5-.34.71-.15.21-.34.37-.57.49-.23.12-.5.18-.8.18-.3 0-.56-.06-.78-.19-.22-.13-.4-.29-.55-.49-.14-.2-.25-.44-.32-.7-.07-.27-.11-.55-.11-.84 0-.28.04-.55.11-.82.07-.26.18-.49.32-.7.14-.2.33-.36.55-.48.22-.12.48-.17.78-.17.31 0 .57.06.8.18.23.12.42.28.57.48.15.2.26.43.34.69.08.26.11.53.11.82 0 .29-.04.57-.11.84z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/split-columns.js
/* harmony default export */ var paths_split_columns = (["M15 13a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3a1.003 1.003 0 00-1.42 1.42L16.59 9H11V2h5v2c.77 0 1.47.3 2 .78V1c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v3.78C2.53 4.3 3.23 4 4 4V2h5v7H3.41L4.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L3.41 11H9v7H4v-2c-.77 0-1.47-.3-2-.78V19c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3.78c-.53.48-1.23.78-2 .78v2h-5v-7h5.59l-1.29 1.29c-.19.18-.3.43-.3.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/square.js
/* harmony default export */ var paths_square = (["M19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2V2h16v16z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/stacked-chart.js
/* harmony default export */ var paths_stacked_chart = (["M12 2c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v4h4V2zm3 14h2c.55 0 1-.45 1-1v-5h-4v5c0 .55.45 1 1 1zm3-10c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v3h4V6zm-6 1H8v5h4V7zm-9 9h2c.55 0 1-.45 1-1v-3H2v3c0 .55.45 1 1 1zm16 1H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM6 9c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v2h4V9zm3 7h2c.55 0 1-.45 1-1v-2H8v2c0 .55.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/stadium-geometry.js
/* harmony default export */ var paths_stadium_geometry = (["M15 7H5a3 3 0 000 6h10a3 3 0 100-6zM5 5a5 5 0 000 10h10a5 5 0 000-10H5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/star.js
/* harmony default export */ var paths_star = (["M10 0l3.1 6.6 6.9 1-5 5.1 1.2 7.3-6.2-3.4L3.8 20 5 12.7 0 7.6l6.9-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/star-empty.js
/* harmony default export */ var paths_star_empty = (["M20 7.6l-6.9-1.1L10 0 6.9 6.6 0 7.6l5 5.1L3.8 20l6.2-3.4 6.2 3.4-1.2-7.2 5-5.2zM10 15l-4.5 2.4.9-5.2-3.6-3.6 5-.8L10 3.1l2.2 4.7 5 .8-3.6 3.7.9 5.2L10 15z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/step-backward.js
/* harmony default export */ var paths_step_backward = (["M15 3c-.23 0-.42.09-.59.21l-.01-.01L8 8V4c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-4l6.4 4.8.01-.01c.17.12.36.21.59.21.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/step-chart.js
/* harmony default export */ var paths_step_chart = (["M19 16H2v-3h4c.55 0 1-.45 1-1V8h3v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V6h2c.55 0 1-.45 1-1s-.45-1-1-1h-3c-.55 0-1 .45-1 1v4h-3V7c0-.55-.45-1-1-1H6c-.55 0-1 .45-1 1v4H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/step-forward.js
/* harmony default export */ var paths_step_forward = (["M15 3h-2c-.55 0-1 .45-1 1v4L5.6 3.2l-.01.01C5.42 3.09 5.23 3 5 3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1 .23 0 .42-.09.59-.21l.01.01L12 12v4c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/stop.js
/* harmony default export */ var paths_stop = (["M16 3H4c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/stopwatch.js
/* harmony default export */ var paths_stopwatch = (["M10 6a6 6 0 106 6h-6V6zm-.998-1.938A1.015 1.015 0 019 4V2H7a1 1 0 110-2h6a1 1 0 010 2h-2v2c0 .02 0 .041-.002.062A8.001 8.001 0 0110 20a8 8 0 01-.998-15.938z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/strikethrough.js
/* harmony default export */ var paths_strikethrough = (["M18 9h-4.46a4.7 4.7 0 00-.4-.14c-.19-.05-.51-.14-.96-.25-.45-.11-.9-.23-1.37-.35-.47-.12-.89-.23-1.27-.33s-.6-.16-.65-.17c-.53-.15-.95-.37-1.27-.66-.32-.28-.49-.68-.49-1.19 0-.36.09-.66.26-.9s.39-.43.65-.57c.26-.14.55-.24.87-.3s.63-.09.93-.09c.89 0 1.63.19 2.21.57.45.3.75.76.89 1.38h2.63c-.06-.52-.2-.98-.42-1.4-.3-.57-.71-1.05-1.23-1.43a5.33 5.33 0 00-1.79-.87c-.7-.2-1.42-.3-2.19-.3-.66 0-1.31.08-1.96.25s-1.22.43-1.73.77-.92.79-1.23 1.32c-.31.52-.46 1.15-.46 1.87 0 .37.05.74.15 1.1.1.36.28.7.53 1.02.18.24.41.47.69.67H2c-.55 0-1 .45-1 1s.45 1 1 1h10.14c.02.01.05.02.07.02.3.11.58.29.84.55.25.26.38.67.38 1.21 0 .27-.06.53-.17.79-.11.26-.29.49-.54.69-.25.2-.57.36-.97.49s-.88.19-1.44.19c-.52 0-1.01-.06-1.45-.17-.45-.11-.84-.29-1.19-.54s-.61-.56-.8-.95c-.05-.08-.09-.18-.12-.28H4.11c.09.43.22.82.4 1.18.33.65.77 1.18 1.32 1.59.55.41 1.2.72 1.94.92.74.2 1.53.3 2.37.3.73 0 1.44-.08 2.14-.25.7-.17 1.33-.43 1.88-.79.55-.36.99-.83 1.33-1.39.34-.56.51-1.25.51-2.05 0-.37-.06-.75-.18-1.12a3.12 3.12 0 00-.15-.39H18c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/style.js
/* harmony default export */ var paths_style = (["M18 18H2V2h12.3l2-2H1C.4 0 0 .4 0 1v18c0 .6.4 1 1 1h18c.6 0 1-.4 1-1V7.7l-2 2V18zm1.2-18l-7.6 7.6 2.8 2.8L20 4.8V0h-.8zM4 15.9c3.1.2 5.9.2 8.2-2 1.1-1.1 1.1-3 0-4.1-.6-.5-1.3-.8-2-.8s-1.4.3-1.9.8C7.2 11 6.6 14.3 4 15.9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/swap-horizontal.js
/* harmony default export */ var paths_swap_horizontal = (["M16.02 10c-.01 0-.01 0 0 0H16h.02zM2 6h13.58l-2.29 2.29a1 1 0 00-.3.71 1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-4-4a1.003 1.003 0 00-1.42 1.42L15.58 4H2c-.55 0-1 .45-1 1s.45 1 1 1zm2 4h-.02H4zm14 4H4.42l2.29-2.29a1 1 0 00.3-.71 1.003 1.003 0 00-1.71-.71l-4 4c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L4.42 16H18c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/swap-vertical.js
/* harmony default export */ var paths_swap_vertical = (["M9.71 5.3l-4-4A.997.997 0 005 1.01c-.28 0-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L4 4.42V18c0 .55.45 1 1 1s1-.45 1-1V4.42l2.29 2.29a1 1 0 00.71.3 1.003 1.003 0 00.71-1.71zM10 3.98c0 .01 0 .01 0 0V4v-.02zm0 12.04c0-.01 0-.01 0 0V16v.02zm9-3.03c-.28 0-.53.11-.71.29L16 15.58V2c0-.55-.45-1-1-1s-1 .45-1 1v13.58l-2.29-2.29a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29.28 0 .53-.11.71-.29l4-4c.18-.18.29-.43.29-.71 0-.56-.45-1.01-1-1.01z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/switch.js
/* harmony default export */ var _20px_paths_switch = (["M12.293 2.293l1.414 1.414-7.127 7.129a3.5 3.5 0 11-1.415-1.415l7.128-7.128zM16.5 9a3.5 3.5 0 110 7 3.5 3.5 0 010-7zm-13 2a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm13 0a1.5 1.5 0 100 3 1.5 1.5 0 000-3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/symbol-circle.js
/* harmony default export */ var paths_symbol_circle = (["M10 4.01a6 6 0 100 12 6 6 0 100-12z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/symbol-cross.js
/* harmony default export */ var paths_symbol_cross = (["M15 8.01h-3v-3c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v3H5c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h3v3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-3h3c.55 0 1-.45 1-1v-2c0-.56-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/symbol-diamond.js
/* harmony default export */ var paths_symbol_diamond = (["M15 10.01c0-.21-.08-.39-.18-.54l.02-.01-4-6-.02.01c-.18-.28-.47-.46-.82-.46s-.64.18-.82.45l-.01-.01-4 6 .02.01c-.11.16-.19.34-.19.55s.08.39.18.54l-.02.01 4 6 .02-.01c.18.27.47.46.82.46s.64-.19.82-.46l.02.01 4-6-.02-.01c.1-.16.18-.34.18-.54z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/symbol-rectangle.js
/* harmony default export */ var paths_symbol_rectangle = (["M16 5H4c-.5 0-1 .5-1 1v8c0 .5.5 1 1 1h12c.5 0 1-.5 1-1V6c0-.5-.5-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/symbol-square.js
/* harmony default export */ var paths_symbol_square = (["M15 4.01H5c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10c0-.56-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/symbol-triangle-down.js
/* harmony default export */ var paths_symbol_triangle_down = (["M16 5c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1 0 .16.05.31.11.44H4.1l5 10h.01c.17.33.5.56.89.56s.72-.23.89-.56h.01l5-10h-.01c.06-.13.11-.28.11-.44z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/symbol-triangle-up.js
/* harmony default export */ var paths_symbol_triangle_up = (["M15.89 14.56l-4.99-10h-.01c-.17-.33-.5-.56-.89-.56s-.72.23-.89.56H9.1l-5 10h.01c-.06.13-.11.28-.11.44 0 .55.45 1 1 1h10c.55 0 1-.45 1-1 0-.16-.05-.31-.11-.44z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/syringe.js
/* harmony default export */ var paths_syringe = (["M15.146.854a.5.5 0 01.708-.708l4 4a.5.5 0 01-.708.708l-.646-.647L17.207 5.5l1.647 1.646a.5.5 0 01-.708.708l-.646-.647-1.146 1.146-7.5 7.5a.5.5 0 01-.708 0l-.646-.646-2.646 2.647a.5.5 0 01-.708 0l-.646-.647-2.646 2.647a.5.5 0 01-.708-.708L2.793 16.5l-.647-.646a.5.5 0 010-.708L4.793 12.5l-.647-.646a.5.5 0 010-.708l7.5-7.5L12.794 2.5l-.647-.646a.5.5 0 01.708-.708L14.5 2.793 15.793 1.5l-.647-.646zM12.707 4l.793-.793L16.793 6.5 16 7.293 12.707 4zm2.586 4l-.793.793-1.646-1.647a.5.5 0 00-.708.708L13.793 9.5 12.5 10.793l-1.646-1.647a.5.5 0 00-.708.708l1.647 1.646-1.293 1.293-1.646-1.647a.5.5 0 00-.708.708L9.793 13.5 8.5 14.793 5.207 11.5 12 4.707 15.293 8zM3.207 15.5L5.5 13.207 6.793 14.5 4.5 16.793 3.207 15.5zM16.5 2.207L17.793 3.5 16.5 4.793 15.207 3.5 16.5 2.207z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/tag.js
/* harmony default export */ var paths_tag = (["M2 4a2 2 0 012-2h4.588a2 2 0 011.414.586l7.41 7.41a2 2 0 010 2.828l-4.588 4.588a2 2 0 01-2.829 0l-7.41-7.41A2 2 0 012 8.588V4zm3.489-.006a1.495 1.495 0 100 2.99 1.495 1.495 0 000-2.99z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/take-action.js
/* harmony default export */ var paths_take_action = (["M5 7c.28 0 .53-.11.71-.29l5-5A1.003 1.003 0 009.29.29l-5 5A1.003 1.003 0 005 7zm6 6a1.003 1.003 0 001.71.71l5-5a1.003 1.003 0 00-1.42-1.42l-5 5c-.18.18-.29.43-.29.71zm8 5h-1c0-.55-.45-1-1-1h-7c-.55 0-1 .45-1 1H8c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm-9-6l6-6-1.29-1.29a1.003 1.003 0 00-1.42-1.42L12 2 6 8l1.29 1.29-7 7a1.003 1.003 0 001.42 1.42l7-7L10 12z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/tank.js
/* harmony default export */ var paths_tank = (["M3.956 4.47A1 1 0 014.804 4h6.392a1 1 0 01.848.47L13 6h5a1 1 0 010 2h-5v1h4a3 3 0 110 6H3a3 3 0 010-6V6.287a1 1 0 01.152-.53l.804-1.287zM3 11h14a1 1 0 110 2H3a1 1 0 110-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/target.js
/* harmony default export */ var paths_target = (["M9 5a1 1 0 012 0v3a1 1 0 01-2 0V5zM12 9a1 1 0 000 2h3a1 1 0 000-2h-3zM4 10a1 1 0 011-1h3a1 1 0 010 2H5a1 1 0 01-1-1zM10 11a1 1 0 00-1 1v3a1 1 0 002 0v-3a1 1 0 00-1-1z", "M10 20c5.523 0 10-4.477 10-10S15.523 0 10 0 0 4.477 0 10s4.477 10 10 10zm0-2a8 8 0 100-16 8 8 0 000 16z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/taxi.js
/* harmony default export */ var paths_taxi = (["M19 9h-.33l.33 1v.5c0 .15-.03.3-.07.44h.01L17 17.23v.27c0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5V17H6v.5c0 .83-.67 1.5-1.5 1.5S3 18.33 3 17.5v-.27l-1.93-6.28h.01c-.05-.15-.08-.3-.08-.45V10s.02-.06.05-.16c.06-.17.16-.47.28-.84H1c-.55 0-1-.45-1-1s.45-1 1-1h1l1-3h-.01v-.01c.25-.64 1-1.31 1.67-1.5 0 0 .78-.21 2.33-.36V1c0-.55.45-1 1-1h4c.55 0 1 .45 1 1v1.13c1.55.14 2.33.36 2.33.36.67.19 1.42.86 1.67 1.5V4H17l1 3h1c.55 0 1 .45 1 1s-.45 1-1 1zM3 11.5c0 .83.67 1.5 1.5 1.5S6 12.33 6 11.5 5.33 10 4.5 10 3 10.67 3 11.5zM16 7l-1-3H5L4 7v1h12V7zm-.5 3c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/temperature.js
/* harmony default export */ var paths_temperature = (["M11 0a2 2 0 00-2 2v10.535a4 4 0 104 0V2a2 2 0 00-2-2zM3 2.5a.5.5 0 01.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zM3.5 8a.5.5 0 000 1h4a.5.5 0 000-1h-4zM5 5.5a.5.5 0 01.5-.5h2a.5.5 0 010 1h-2a.5.5 0 01-.5-.5zm.5 5.5a.5.5 0 000 1h2a.5.5 0 000-1h-2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/text-highlight.js
/* harmony default export */ var paths_text_highlight = (["M16 17c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1s1-.45 1-1-.45-1-1-1c-.77 0-1.47.3-2 .78-.53-.48-1.23-.78-2-.78-.55 0-1 .45-1 1s.45 1 1 1 1 .45 1 1v12c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1c.77 0 1.47-.3 2-.78.53.48 1.23.78 2 .78.55 0 1-.45 1-1s-.45-1-1-1zm-4-4H2V7h10V5H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h11v-2zm7-8h-3v2h2v6h-2v2h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/th.js
/* harmony default export */ var paths_th = (["M19 1H1c-.6 0-1 .5-1 1v16c0 .5.4 1 1 1h18c.5 0 1-.5 1-1V2c0-.5-.5-1-1-1zM7 17H2v-3h5v3zm0-4H2v-3h5v3zm0-4H2V6h5v3zm11 8H8v-3h10v3zm0-4H8v-3h10v3zm0-4H8V6h10v3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/th-derived.js
/* harmony default export */ var paths_th_derived = (["M5.3 13.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3l3-3c.2-.2.3-.4.3-.7s-.1-.5-.3-.7l-3-3C6.5 7.1 6.3 7 6 7c-.6 0-1 .4-1 1 0 .3.1.5.3.7L6.6 10H1c-.6 0-1 .4-1 1s.4 1 1 1h5.6l-1.3 1.3zM19 1H3c-.5 0-1 .5-1 1v6h1c0-1.7 1.3-3 3-3 .8 0 1.6.3 2.1.9l.1.1H9v.8l1 1V6h8v3h-6.8c.3.3.5.6.6 1H18v3h-6.8l-.1.1-.9.9H18v3h-8v-2.8l-1 1V17H4v-.8c-.6-.5-1-1.3-1-2.2H2v4c0 .5.5 1 1 1h16c.6 0 1-.5 1-1V2c0-.5-.5-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/th-disconnect.js
/* harmony default export */ var paths_th_disconnect = (["M14.25 1H19c.5 0 1 .5 1 1v16c0 .5-.5 1-1 1h-7.221l.278-2H18v-3h-5.527l.14-1H18v-3h-4.971l.139-1H18V6h-4.416l.637-4.587c.02-.139.03-.277.03-.413zM8.221 1l-.694 5H2v3h5.11l-.139 1H2v3h4.555l-.14 1H2v3h3.999l-.22 1.587c-.02.139-.03.277-.03.413H1c-.6 0-1-.5-1-1V2c0-.5.4-1 1-1h7.221zM10.26.862a1 1 0 011.98.276l-2.5 18a1 1 0 01-1.98-.276l2.5-18z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/th-filtered.js
/* harmony default export */ var paths_th_filtered = (["M17.333 10l1.435-1.722a1 1 0 00.232-.64V4.85l1-.9V18c0 .5-.5 1-1 1H1c-.6 0-1-.5-1-1V2c0-.5.4-1 1-1h6.722L12 4.85V6H8v3h4v1H8v3h10v-3h-.667zM7 17v-3H2v3h5zm0-4v-3H2v3h5zm0-4V6H2v3h5zm11 8v-3H8v3h10z", "M19.35 0a.642.642 0 01.46 1.1l-3.03 3.03v2.95c0 .18-.07.34-.19.46l-1.28 1.29c-.11.1-.27.17-.45.17-.35 0-.64-.29-.64-.64V4.13L11.19 1.1a.642.642 0 01.45-1.1h7.71z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/th-list.js
/* harmony default export */ var paths_th_list = (["M19 1H1c-.6 0-1 .5-1 1v16c0 .5.4 1 1 1h18c.5 0 1-.5 1-1V2c0-.5-.5-1-1-1zm-1 16H2v-3h16v3zm0-4H2v-3h16v3zm0-4H2V6h16v3z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/third-party.js
/* harmony default export */ var paths_third_party = (["M8 0C3.58 0 0 3.58 0 8a8 8 0 005.856 7.71c.064-.057.129-.109.19-.156.278-.209.595-.383.896-.53.358-.174.81-.358 1.193-.515.206-.084.393-.16.534-.223a3.93 3.93 0 00.203-.095 4.1 4.1 0 01-.305-.45C8.382 13.911 8.19 14 8 14c-.67 0-1.36-1.1-1.73-3h1.252c.047-.296.153-.571.323-.797l.01-.203H6.12C6.05 9.39 6 8.73 6 8s.05-1.39.12-2h3.76l.037.344c.315-.145.65-.242.979-.295L10.89 6h2.76c.027.077.052.155.076.233l.118-.04A3.62 3.62 0 0114.998 6c.247 0 .51.028.772.086A8 8 0 008 0zm5.17 5h-2.44c-.21-1.11-.51-2.03-.91-2.69 1.43.46 2.61 1.43 3.35 2.69zM8 2c.67 0 1.36 1.1 1.73 3H6.27C6.64 3.1 7.33 2 8 2zm-1.82.31c-.4.66-.71 1.58-.91 2.69H2.83a6.025 6.025 0 013.35-2.69zM2 8c0-.7.13-1.37.35-2h2.76C5.04 6.62 5 7.28 5 8s.04 1.38.11 2H2.35C2.13 9.37 2 8.7 2 8zm.83 3h2.44c.21 1.11.51 2.03.91 2.69A6.025 6.025 0 012.83 11z", "M13.917 15.209c.21.094.444.19.685.288.912.374 1.927.789 2.188 1.355.31.722.186 1.148.186 1.148H6.026s-.13-.426.186-1.148c.256-.584 1.305-1.011 2.234-1.39.22-.088.432-.175.626-.26.909-.4.923-.662.94-.978.002-.037.004-.076.008-.115l.003-.072c.002-.025.004-.049.004-.073a3.067 3.067 0 01-.839-1.237l-.007-.007a.024.024 0 00-.003-.01 1.757 1.757 0 01-.113-.347c-.234-.042-.372-.296-.427-.537a1.045 1.045 0 01-.137-.598c.034-.35.179-.509.337-.57v-.056c0-.44.034-1.065.117-1.478a2.508 2.508 0 01.962-1.623c.426-.33 1.038-.501 1.58-.501.544 0 1.155.172 1.588.502a2.496 2.496 0 01.963 1.622c.075.413.117 1.045.117 1.478v.062c.15.062.288.22.323.564.02.268-.083.502-.138.598-.048.234-.185.488-.42.537a2.635 2.635 0 01-.116.364 3.094 3.094 0 01-.818 1.224c0 .055 0 .11.007.158.004.048.006.095.007.14.011.311.02.57.907.96z", "M14.976 14.57c-.24-.098-.455-.186-.65-.274l-.007-.003a3.801 3.801 0 01-.194-.091c.224-.288.41-.609.554-.946l.001-.002.013-.033c.018-.043.036-.087.052-.13l.011-.027.016-.04c.105-.092.19-.19.256-.284.129-.184.213-.38.265-.563.105-.226.225-.592.192-1.026l-.001-.011-.002-.011a1.855 1.855 0 00-.325-.91 9.924 9.924 0 00-.12-1.246 3.088 3.088 0 00-.106-.474l-.001-.007a3.543 3.543 0 00-.763-1.353c.27-.092.56-.139.83-.139.495 0 1.05.156 1.444.456a2.269 2.269 0 01.875 1.475c.069.375.106.95.106 1.344v.056c.138.056.263.2.294.513.019.244-.075.456-.125.543-.044.213-.169.444-.381.488-.025.1-.056.206-.094.3a2.815 2.815 0 01-.756 1.144c0 .05 0 .1.006.144.004.043.006.086.007.127.01.283.018.518.824.873.192.086.404.172.623.262.83.34 1.752.717 1.99 1.231.28.657.168 1.044.168 1.044h-2.081a3.864 3.864 0 00-.188-.542l-.005-.013-.006-.012c-.183-.397-.491-.681-.76-.88a5.614 5.614 0 00-.896-.522 17.36 17.36 0 00-.916-.4l-.15-.061z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/thumbs-down.js
/* harmony default export */ var paths_thumbs_down = (["M18.55 6.56c-.31-.01-.65-.03-1.02-.06.03 0 .06-.01.09-.01.88-.12 1.68-.63 1.76-1.37.08-.75-.58-1.25-1.46-1.33-.32-.03-.65-.05-.99-.08.59-.19 1.05-.54 1.09-1.2.05-.75-.99-1.32-1.87-1.41-.34-.03-.64-.05-.91-.07h-.11c-.28-.02-.54-.02-.77-.02-3.92-.08-7.29.6-9.36 1.93v7.72c2.67 1.66 5.95 4.61 5.26 7.08-.21.76.39 1.35 1.23 1.26 1.01-.11 1.71-1.18 1.75-2.28.05-1.29-.19-2.59-.62-3.74-.05-.32.01-.65.47-.68.61-.04 1.39-.08 1.99-.1.32 0 .64-.01.94-.03h.01c.52-.03 1-.07 1.42-.12.88-.11 1.69-.6 1.79-1.35.1-.75-.55-1.25-1.44-1.35-.07-.01-.13-.02-.2-.02.21-.02.42-.04.61-.06.88-.11 1.69-.6 1.79-1.35.09-.75-.56-1.31-1.45-1.36zM3 3H0v8h3c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/thumbs-up.js
/* harmony default export */ var paths_thumbs_up = (["M3 9H0v8h3c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zm16.99 3.09c-.1-.75-.91-1.24-1.79-1.35-.19-.02-.4-.05-.61-.06.07-.01.14-.01.2-.02.88-.1 1.53-.61 1.44-1.35-.1-.74-.91-1.24-1.79-1.35-.42-.05-.9-.09-1.42-.12h-.01l-.94-.03c-.6-.02-1.39-.05-1.99-.1-.45-.03-.51-.36-.47-.68.43-1.15.67-2.45.62-3.74-.04-1.11-.74-2.17-1.75-2.28-.84-.09-1.45.5-1.23 1.26.7 2.47-2.58 5.43-5.25 7.08v7.72c2.08 1.33 5.44 2.01 9.35 1.93.24 0 .49-.01.77-.02h.11c.27-.02.57-.04.91-.07.88-.08 1.92-.66 1.87-1.41-.04-.65-.5-1.01-1.09-1.2.34-.03.67-.05.99-.08.89-.08 1.55-.58 1.46-1.33-.08-.75-.88-1.25-1.76-1.37-.03 0-.06-.01-.09-.01.37-.02.71-.04 1.02-.06.91-.05 1.55-.61 1.45-1.36z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/tick.js
/* harmony default export */ var paths_tick = (["M17 4c-.28 0-.53.11-.71.29L7 13.59 3.71 10.3A.965.965 0 003 10a1.003 1.003 0 00-.71 1.71l4 4c.18.18.43.29.71.29s.53-.11.71-.29l10-10A1.003 1.003 0 0017 4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/tick-circle.js
/* harmony default export */ var paths_tick_circle = (["M10 20C4.48 20 0 15.52 0 10S4.48 0 10 0s10 4.48 10 10-4.48 10-10 10zm5-14c-.28 0-.53.11-.71.29L8 12.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29.28 0 .53-.11.71-.29l7-7A1.003 1.003 0 0015 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/time.js
/* harmony default export */ var paths_time = (["M11 9.59V4c0-.55-.45-1-1-1s-1 .45-1 1v6c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L11 9.59zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/timeline-area-chart.js
/* harmony default export */ var paths_timeline_area_chart = (["M19 16H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0-13.41l-7.07 7.07-4.3-3.44-.01.01A.987.987 0 007 6c-.24 0-.46.1-.63.24l-.01-.01L3 9.03V15h16V2.59z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/timeline-bar-chart.js
/* harmony default export */ var paths_timeline_bar_chart = (["M19 17H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM9 16h2c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1zm6 0h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1zM3 16h2c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/timeline-events.js
/* harmony default export */ var paths_timeline_events = (["M5 5c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zm10 0c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zm-9 9H4v2h2v-2zM17 3v1c0 1.1-.9 2-2 2s-2-.9-2-2V3H7v1c0 1.1-.9 2-2 2s-2-.9-2-2V3H2c-.5 0-1 .5-1 1v14c0 .5.5 1 1 1h16c.5 0 1-.5 1-1V4c0-.5-.5-1-1-1h-1zM7 17H3v-4h4v4zm0-5H3V8h4v4zm5 5H8v-4h4v4zm0-5H8V8h4v4zm5 5h-4v-4h4v4zm0-5h-4V8h4v4zm-6 2H9v2h2v-2zm5-5h-2v2h2V9z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/timeline-line-chart.js
/* harmony default export */ var paths_timeline_line_chart = (["M19 16H2v-1.59l5-5 3.29 3.29c.18.19.43.3.71.3s.53-.11.71-.29l7-7a1.003 1.003 0 00-1.42-1.42L11 10.59l-3.29-3.3C7.53 7.11 7.28 7 7 7s-.53.11-.71.29L2 11.59V3c0-.55-.45-1-1-1s-1 .45-1 1v14a.998.998 0 001 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/tint.js
/* harmony default export */ var paths_tint = (["M9.86 2S3.98 9.18 3.98 12.17C3.99 15.4 6.78 18 9.96 18c3.18-.01 6.04-2.63 6.03-5.86C15.99 9.05 9.86 2 9.86 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/torch.js
/* harmony default export */ var paths_torch = (["M6.97 19c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2h-6v2zm-3-15l3 4v8h6V8l3-4h-12zm5 5c0-.55.45-1 1-1s1 .45 1 1v2c0 .55-.45 1-1 1s-1-.45-1-1V9zm6-9h-10c-.55 0-1 .45-1 1v2h12V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/tractor.js
/* harmony default export */ var paths_tractor = (["M4.5 11a4.5 4.5 0 110 9 4.5 4.5 0 010-9zm11.499 1a4 4 0 110 8 4 4 0 010-8zm-11.5 1.571a1.928 1.928 0 100 3.857 1.928 1.928 0 000-3.857zM16 14.667a1.333 1.333 0 100 2.666 1.333 1.333 0 000-2.666zM5.999 0C7.46 0 8.527.668 9 2l.851 4.256c1.433.096 2.82.217 4.147.362V2h2L16 6.862c.962.13 1.886.275 2.767.435.779.141 1.232.614 1.232 1.284L20 13a4.995 4.995 0 00-4-1.997A5.001 5.001 0 0011.099 15h-1.12a5.499 5.499 0 00-5.478-4.994 5.482 5.482 0 00-3.377 1.157H.004v-1.18L0 7.327c-.002-.597.37-1.18.999-1.302V1a1 1 0 011-1h4zm1 2H3v4h.75c1.386.027 2.749.073 4.079.139L6.999 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/train.js
/* harmony default export */ var paths_train = (["M16 18h-2l2 2H4l.12-.12L6 18H4c-1.1 0-2-.9-2-2V2c0-1.1 3.58-2 8-2s8 .9 8 2v14c0 1.1-.9 2-2 2zM5.5 15c.83 0 1.5-.67 1.5-1.5S6.33 12 5.5 12 4 12.67 4 13.5 4.67 15 5.5 15zM9 3H4v6h5V3zm7 0h-5v6h5V3zm-1.5 9c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/translate.js
/* harmony default export */ var paths_translate = (["M19.89 18.56l-4.99-10h-.01c-.17-.33-.5-.56-.89-.56s-.72.23-.89.56h-.01l-1.73 3.46-2.8-2.3 1.99-1.64C11.44 7.34 12 6.23 12 5V4h1c.55 0 1-.45 1-1s-.45-1-1-1H8V1c0-.55-.45-1-1-1S6 .45 6 1v1H1c-.55 0-1 .45-1 1s.45 1 1 1h9v1c0 .62-.28 1.18-.73 1.54L7 8.42 4.73 6.54C4.28 6.18 4 5.62 4 5H2c0 1.23.56 2.34 1.44 3.07l1.99 1.64-3.06 2.52.01.01c-.23.18-.38.45-.38.76 0 .55.45 1 1 1 .24 0 .45-.1.63-.24l.01.01L7 11l3.36 2.77.01-.01c.02.02.05.03.08.05.01 0 .01.01.02.02l-2.36 4.73h.01c-.07.13-.12.28-.12.44 0 .55.45 1 1 1 .39 0 .72-.23.89-.56h.01L11.12 17h5.76l1.22 2.45h.01c.17.32.5.55.89.55.55 0 1-.45 1-1 0-.16-.05-.31-.11-.44zM12.12 15L14 11.24 15.88 15h-3.76z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/trash.js
/* harmony default export */ var paths_trash = (["M17 1h-5c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1H3c-.55 0-1 .45-1 1v1h16V2c0-.55-.45-1-1-1zm.5 3h-15c-.28 0-.5.22-.5.5s.22.5.5.5H3v14c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V5h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zM7 16c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8zm4 0c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8zm4 0c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/tree.js
/* harmony default export */ var paths_tree = (["M11 15.542V20H9v-4.458L2 17l4.5-5.625L4 12l3.655-5.483L6 7l4-7 4 7-1.655-.483L16 12l-2.5-.625L18 17l-7-1.458z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/trending-down.js
/* harmony default export */ var paths_trending_down = (["M19 10c-.55 0-1 .45-1 1v1.37l-6.25-7.03-.01.01A.971.971 0 0011 5c-.23 0-.42.09-.59.21l-.01-.01-3.43 2.58-5.42-3.61-.01.01A.969.969 0 001 4c-.55 0-1 .45-1 1 0 .35.19.64.46.82l-.01.01 6 4 .01-.02c.15.11.33.19.54.19.23 0 .42-.09.59-.21l.01.01 3.26-2.45L16.77 14H15c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/trending-up.js
/* harmony default export */ var paths_trending_up = (["M19 4h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.77l-5.91 6.65L7.6 10.2l-.01.01C7.42 10.09 7.23 10 7 10c-.21 0-.39.08-.54.18l-.01-.02-6 4 .01.02c-.27.18-.46.47-.46.82 0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02 5.41-3.61 3.43 2.58.01-.01c.18.11.37.2.6.2.3 0 .56-.14.74-.34l.01.01L18 7.63V9c0 .55.45 1 1 1s1-.45 1-1V5c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/truck.js
/* harmony default export */ var paths_truck = (["M16 0a1 1 0 011 1v11a1 1 0 011 1v3h.5a.5.5 0 01.5.5v1a.5.5 0 01-.5.5H17v1a1 1 0 01-1 1h-1a1 1 0 01-1-1v-1H6v1a1 1 0 01-1 1H4a1 1 0 01-1-1v-1H1.5a.5.5 0 01-.5-.5v-1a.5.5 0 01.5-.5H2v-3a1 1 0 011-1V1a1 1 0 112 0v3a2 2 0 012-2h6a2 2 0 012 2V1a1 1 0 011-1zm-4 10H8a1 1 0 00-1 1v4a1 1 0 001 1h4a1 1 0 001-1v-4a1 1 0 00-1-1zm-7 4H4a1 1 0 000 2h1a1 1 0 000-2zm11 0h-1a1 1 0 000 2h1a1 1 0 000-2zm-4.5 0a.5.5 0 110 1h-3l-.09-.008A.5.5 0 018.5 14zm0-1.5a.5.5 0 110 1h-3l-.09-.008a.5.5 0 01.09-.992zm0-1.5a.5.5 0 110 1h-3l-.09-.008A.5.5 0 018.5 11zM14 5H6v3h8V5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/two-columns.js
/* harmony default export */ var paths_two_columns = (["M5 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm14.71 9.29l-3-3A1.003 1.003 0 0015 7v6a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM12 0H8c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/unarchive.js
/* harmony default export */ var paths_unarchive = (["M16.434 0a1 1 0 01.857.486L20 5v14a1 1 0 01-1 1H1a1 1 0 01-1-1V5L2.709.486A1 1 0 013.566 0h12.868zM10 8c-.28 0-.53.11-.71.29l-3 3-.084.096A1.003 1.003 0 007.71 12.71L9 11.41v4.58l.007.116c.058.496.482.884.993.884.55 0 1-.45 1-1v-4.58l1.29 1.29.081.073c.171.139.389.227.629.227a1.003 1.003 0 00.71-1.71l-3-3-.096-.084A1.002 1.002 0 0010 8zm6-6H4L2 5.002h16L16 2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/underline.js
/* harmony default export */ var paths_underline = (["M10 17c3.3 0 6-2.7 6-6V3.5c0-.8-.7-1.5-1.5-1.5S13 2.7 13 3.5V11c0 1.7-1.3 3-3 3s-3-1.3-3-3V3.5C7 2.7 6.3 2 5.5 2S4 2.7 4 3.5V11c0 3.3 2.7 6 6 6zM16.5 19h-13c-.3 0-.5.2-.5.5s.2.5.5.5h13c.3 0 .5-.2.5-.5s-.2-.5-.5-.5z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/undo.js
/* harmony default export */ var paths_undo = (["M5 14c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm9-9H3.41L5.7 2.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C.11 5.47 0 5.72 0 6c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L3.41 7H14c2.21 0 4 1.79 4 4s-1.79 4-4 4H9v2h5c3.31 0 6-2.69 6-6s-2.69-6-6-6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/ungroup-objects.js
/* harmony default export */ var paths_ungroup_objects = (["M4.5 6C2.01 6 0 8.01 0 10.5S2.01 15 4.5 15 9 12.99 9 10.5 6.99 6 4.5 6zm11 0C13.01 6 11 8.01 11 10.5s2.01 4.5 4.5 4.5 4.5-2.01 4.5-4.5S17.99 6 15.5 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/unknown-vehicle.js
/* harmony default export */ var paths_unknown_vehicle = (["M13 11.988v-4H4v-1l1-3h6V2.003a35.867 35.867 0 00-1-.015c-3.593 0-5.332.488-5.332.488-.67.188-1.424.864-1.674 1.503l-.004.009H3l-1 3H1a1 1 0 100 2h.333l-.28.84-.053.16v7.5a1.5 1.5 0 103 0v-.5h12v.5a1.5 1.5 0 103 0v-4.5h-5a1 1 0 01-1-1zm-8.5 1a1.5 1.5 0 110-3 1.5 1.5 0 010 3zM19.83 2.782a2.392 2.392 0 00-.592-.853c-.276-.264-.64-.485-1.09-.663C17.695 1.09 17.132 1 16.457 1c-.523 0-.996.084-1.418.253a3.157 3.157 0 00-1.084.703c-.299.3-.532.656-.698 1.065-.166.41-.254.861-.264 1.353h2.096c0-.246.028-.476.085-.69.057-.214.145-.4.264-.56.119-.16.27-.287.456-.383.185-.095.406-.143.663-.143.38 0 .677.1.89.3.215.2.321.51.321.93.01.245-.035.45-.135.614-.1.164-.23.314-.392.45a8.598 8.598 0 01-.527.41 3.53 3.53 0 00-.542.485c-.171.187-.32.412-.45.676-.127.265-.206.592-.234.984v.614h1.924v-.519c.038-.273.13-.5.278-.683.147-.182.316-.343.506-.484a13.5 13.5 0 01.606-.424c.214-.14.408-.312.584-.512s.323-.442.442-.724.178-.642.178-1.079c0-.264-.059-.548-.178-.854zm-4.54 6.099v2.103h2.237V8.881H15.29z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/unlock.js
/* harmony default export */ var paths_unlock = (["M14 1c-2.21 0-4 1.79-4 4v4H2c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-8c0-.55-.45-1-1-1h-2V5c0-1.1.9-2 2-2s2 .9 2 2v2c0 .55.45 1 1 1s1-.45 1-1V5c0-2.21-1.79-4-4-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/unpin.js
/* harmony default export */ var paths_unpin = (["M11.77 1.16c-.81.81-.74 2.28.02 3.76L6.1 8.71c-2.17-1.46-4.12-2-4.94-1.18l4.95 4.95-2.12 3.54 3.54-2.12 4.95 4.95c.82-.82.27-2.77-1.19-4.94l3.8-5.69c1.47.76 2.94.84 3.76.02l-7.08-7.08z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/unresolve.js
/* harmony default export */ var paths_unresolve = (["M11.47 12.46c.16-.36.29-.74.38-1.14 0-.02.01-.04.01-.06.09-.4.14-.82.14-1.26 0-.44-.05-.86-.14-1.27 0-.02-.01-.04-.01-.06-.09-.4-.22-.78-.38-1.14-.01-.02-.02-.03-.02-.05a5.94 5.94 0 00-.61-1.03c0-.01-.01-.01-.01-.02a6.308 6.308 0 00-2.1-1.77c-.19-.1-.39-.18-.59-.26-.03-.01-.06-.02-.1-.03-.17-.07-.34-.12-.52-.17-.05-.01-.1-.03-.15-.04a4.34 4.34 0 00-.52-.09c-.05-.01-.11-.02-.17-.03C6.46 4.02 6.23 4 6 4c-3.31 0-6 2.69-6 6s2.69 6 6 6c.23 0 .46-.02.68-.04l.17-.03c.17-.02.34-.06.51-.09.05-.01.1-.03.15-.04.18-.05.36-.1.53-.17l.09-.03a5.973 5.973 0 002.68-2.04c0-.01.01-.01.01-.02.24-.32.44-.66.61-1.03.02-.01.03-.03.04-.05zM14 4c-.99 0-1.91.24-2.73.66a7.51 7.51 0 010 10.68c.82.42 1.74.66 2.73.66 3.31 0 6-2.69 6-6s-2.69-6-6-6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/updated.js
/* harmony default export */ var paths_updated = (["M10 0C6.71 0 3.82 1.6 2 4.05V2c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.76C5.22 3.17 7.47 2 10 2c4.42 0 8 3.58 8 8s-3.58 8-8 8-8-3.58-8-8c0-.55-.45-1-1-1s-1 .45-1 1c0 5.52 4.48 10 10 10s10-4.48 10-10S15.52 0 10 0zm4 7c-.28 0-.53.11-.71.29L9 11.58 6.71 9.29a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29.28 0 .53-.11.71-.29l5-5A1.003 1.003 0 0014 7z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/upload.js
/* harmony default export */ var paths_upload = (["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm4 10c-.28 0-.53-.11-.71-.29L11 7.41V15c0 .55-.45 1-1 1s-1-.45-1-1V7.41l-2.29 2.3a1.003 1.003 0 01-1.42-1.42l4-4c.18-.18.43-.29.71-.29s.53.11.71.29l4 4A1.003 1.003 0 0114 10z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/user.js
/* harmony default export */ var paths_user = (["M10 0C4.48 0 0 4.48 0 10c0 .33.02.65.05.97.01.12.03.23.05.35.03.2.05.4.09.59.03.14.06.28.1.42l.12.48c.05.16.1.31.15.46.05.13.09.27.15.4.06.16.13.32.21.48.05.11.1.22.16.33.09.17.17.34.27.5.05.09.1.17.15.25.11.18.22.35.34.52.04.06.08.11.12.17 1.19 1.62 2.85 2.86 4.78 3.53l.09.03c.46.15.93.27 1.42.36.08.01.17.03.25.04.49.07.99.12 1.5.12s1.01-.05 1.5-.12c.08-.01.17-.02.25-.04.49-.09.96-.21 1.42-.36l.09-.03c1.93-.67 3.59-1.91 4.78-3.53.04-.05.08-.1.12-.16.12-.17.23-.35.34-.53.05-.08.1-.16.15-.25.1-.17.19-.34.27-.51.05-.11.1-.21.15-.32.07-.16.14-.32.21-.49.05-.13.1-.26.14-.39.05-.15.11-.31.15-.46.05-.16.08-.32.12-.48.03-.14.07-.28.1-.42.04-.19.06-.39.09-.59.02-.12.04-.23.05-.35.05-.32.07-.64.07-.97 0-5.52-4.48-10-10-10zm0 18a7.94 7.94 0 01-6.15-2.89c.84-.44 1.86-.82 2.67-1.19 1.45-.65 1.3-1.05 1.35-1.59.01-.07.01-.14.01-.21-.51-.45-.93-1.08-1.2-1.8l-.01-.01c0-.01-.01-.02-.01-.03a4.42 4.42 0 01-.15-.48c-.33-.07-.53-.44-.61-.79-.08-.14-.23-.48-.2-.87.05-.51.26-.74.49-.83v-.08c0-.63.06-1.55.17-2.15.02-.17.06-.33.11-.5.21-.73.66-1.4 1.26-1.86.62-.47 1.5-.72 2.28-.72.78 0 1.65.25 2.27.73.6.46 1.05 1.12 1.26 1.86.05.16.08.33.11.5.11.6.17 1.51.17 2.15v.09c.22.1.42.33.46.82.04.39-.12.73-.2.87-.07.34-.27.71-.6.78-.04.16-.09.33-.15.48 0 .01-.02.05-.02.05-.26.71-.67 1.33-1.17 1.78 0 .08.01.16.01.23.05.54-.15.94 1.31 1.59.81.36 1.84.74 2.68 1.19A7.958 7.958 0 0110 18z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/variable.js
/* harmony default export */ var paths_variable = (["M4.93 3.79a9.1 9.1 0 012.2-2.27L7.29 1c-1.38.59-2.57 1.33-3.55 2.22C2.46 4.39 1.49 5.72.83 7.23.28 8.51 0 9.81 0 11.12c0 2.28.83 4.57 2.49 6.86l.16-.55c-.49-1.23-.73-2.38-.73-3.44 0-1.67.28-3.46.84-5.36.55-1.9 1.28-3.51 2.17-4.84zm9.38 8.39l-.33-.2c-.37.54-.65.87-.82 1a.74.74 0 01-.42.12c-.19 0-.38-.12-.57-.37-.31-.42-.73-1.59-1.26-3.5.47-.85.86-1.41 1.19-1.67.23-.19.48-.29.74-.29.1 0 .28.04.53.11.26.07.48.11.68.11.27 0 .5-.1.68-.29.18-.19.27-.44.27-.75 0-.33-.09-.58-.27-.77-.18-.19-.44-.29-.78-.29-.3 0-.59.07-.86.22s-.61.47-1.02.97c-.31.37-.77 1.02-1.37 1.94a9.683 9.683 0 00-1.24-3.14l-3.24.59-.06.36c.24-.05.44-.07.61-.07.32 0 .59.14.8.43.33.45.8 1.8 1.39 4.07-.47.64-.78 1.06-.96 1.26-.28.32-.52.53-.7.62-.14.08-.3.11-.48.11-.14 0-.36-.08-.67-.23-.21-.1-.4-.15-.57-.15-.31 0-.57.11-.78.32s-.31.48-.31.8c0 .31.09.55.28.75.19.19.44.29.76.29.31 0 .6-.07.87-.2s.61-.42 1.02-.86c.41-.44.98-1.13 1.7-2.08.28.9.52 1.56.72 1.97.2.41.44.71.7.89.26.18.59.27.99.27.38 0 .77-.14 1.17-.43.54-.36 1.07-1 1.61-1.91zM17.51 1l-.15.54c.49 1.24.73 2.39.73 3.45 0 1.43-.21 2.96-.63 4.6-.33 1.26-.75 2.45-1.27 3.55-.52 1.11-1.02 1.97-1.51 2.6-.49.62-1.09 1.2-1.8 1.72l-.17.53c1.38-.59 2.57-1.34 3.55-2.23 1.29-1.17 2.26-2.5 2.91-4 .55-1.28.83-2.59.83-3.91 0-2.27-.83-4.56-2.49-6.85z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/vertical-bar-chart-asc.js
/* harmony default export */ var paths_vertical_bar_chart_asc = (["M8 7H7c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zM3 9H2c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1zm10-5h-1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm5-4h-1c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/vertical-bar-chart-desc.js
/* harmony default export */ var paths_vertical_bar_chart_desc = (["M3 0H2c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm5 4H7c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm5 3h-1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm5 2h-1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/vertical-distribution.js
/* harmony default export */ var paths_vertical_distribution = (["M1 2h18c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1s.45 1 1 1zm2 5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1H3zm16 11H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/vertical-inbetween.js
/* harmony default export */ var paths_vertical_inbetween = (["M0 0h20v1a1 1 0 01-1 1H1a1 1 0 01-1-1V0zm6.293 11.293a.999.999 0 000 1.412l2.962 2.963.038.04A.996.996 0 0010 16a.996.996 0 00.745-.332l2.962-2.963a.999.999 0 00-1.412-1.412L10 13.587l-2.295-2.294a.999.999 0 00-1.412 0zm0-3.998a.999.999 0 101.412 1.412L10 6.413l2.295 2.294a.999.999 0 101.412-1.412l-2.962-2.963A.996.996 0 0010 4a.996.996 0 00-.745.332L6.293 7.295zM20 19v1H0v-1a1 1 0 011-1h18a1 1 0 011 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/video.js
/* harmony default export */ var paths_video = (["M19 2H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM7 14V6l6 4-6 4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/virus.js
/* harmony default export */ var paths_virus = (["M15.249 13.835l1.251 1.251.354-.354.087-.077a1 1 0 011.327 1.491l-2.122 2.122-.087.077a1 1 0 01-1.327-1.491l.354-.354-1.251-1.251A6.466 6.466 0 0111 16.424L10.999 18h.501a1 1 0 01.117 1.993L11.5 20h-3a1 1 0 01-.117-1.993L8.5 18h.499v-1.577a6.46 6.46 0 01-2.538-.97L5.414 16.5l.354.354a1 1 0 01-1.327 1.491l-.087-.077-2.122-2.122a1 1 0 011.327-1.491l.087.077.354.354.97-.97a6.472 6.472 0 01-1.384-3.057l-.025.002L2 11.06v.44a1 1 0 01-1.993.117L0 11.5v-3a1 1 0 011.993-.117L2 8.5v.56h1.567A6.471 6.471 0 014.97 5.883l-.971-.969-.353.354-.087.077a1 1 0 01-1.327-1.491l2.122-2.122.087-.077a1 1 0 011.327 1.491l-.354.353 1.047 1.048A6.46 6.46 0 019 3.577L9 2h-.5A1 1 0 018.383.007L8.5 0h3a1 1 0 01.117 1.993L11.5 2H11v1.577a6.466 6.466 0 012.838 1.176l.04-.046L15.086 3.5l-.353-.353a1 1 0 011.327-1.491l.087.077 2.122 2.122a1 1 0 01-1.327 1.491l-.087-.077-.354-.354-1.207 1.207-.046.041a6.467 6.467 0 011.16 2.733H18V8.5a1 1 0 011.993-.117L20 8.5v3a1 1 0 01-1.993.117L18 11.5v-.605h-1.561a6.466 6.466 0 01-1.19 2.94zM12.5 11a1.5 1.5 0 100 3 1.5 1.5 0 000-3zM8 6a2 2 0 100 4 2 2 0 000-4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/volume-down.js
/* harmony default export */ var paths_volume_down = (["M15.92 3.93l-1.6 1.18A7.948 7.948 0 0116 10c0 1.84-.63 3.54-1.68 4.89l1.6 1.18A9.878 9.878 0 0018 10c0-2.29-.78-4.39-2.08-6.07zM11 3c-.28 0-.53.11-.71.29L7.59 6H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h4.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/volume-off.js
/* harmony default export */ var paths_volume_off = (["M14 3c-.28 0-.53.11-.71.29L10.59 6H6c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h4.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/volume-up.js
/* harmony default export */ var paths_volume_up = (["M9 3.43c-.28 0-.53.11-.71.29l-2.7 2.71H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h4.59l2.71 2.71a1.003 1.003 0 001.71-.71v-12c-.01-.55-.46-1-1.01-1zm8.31-1.56l-1.62 1.2C17.14 5.16 18 7.69 18 10.43s-.86 5.27-2.31 7.37l1.62 1.2C19 16.57 20 13.62 20 10.43c0-3.18-1-6.13-2.69-8.56zm-3.39 2.49l-1.6 1.18A7.948 7.948 0 0114 10.43c0 1.84-.63 3.54-1.68 4.89l1.6 1.18A9.94 9.94 0 0016 10.43c0-2.28-.78-4.38-2.08-6.07z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/walk.js
/* harmony default export */ var paths_walk = (["M16 10h-2c-.23 0-.42-.09-.59-.21l-.01.01-1.69-1.27-.63 3.14 2.62 2.62c.19.18.3.43.3.71v4c0 .55-.45 1-1 1s-1-.45-1-1v-3.59L9.39 12.8l-2.45 6.55h-.01c-.14.38-.5.65-.93.65-.55 0-1-.45-1-1 0-.12.03-.24.07-.35h-.01L9.43 7h-2.9l-1.7 2.55-.01-.01c-.18.27-.47.46-.82.46-.55 0-1-.45-1-1 0-.21.08-.39.18-.54l-.01-.01 2-3 .02.01C5.36 5.19 5.65 5 6 5h4.18l.36-.96c-.33-.43-.54-.96-.54-1.54a2.5 2.5 0 015 0A2.5 2.5 0 0112.5 5c-.06 0-.12-.01-.18-.02l-.44 1.18L14.33 8H16c.55 0 1 .45 1 1s-.45 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/warning-sign.js
/* harmony default export */ var paths_warning_sign = (["M19.86 17.52l.01-.01-9-16-.01.01C10.69 1.21 10.37 1 10 1s-.69.21-.86.52l-.01-.01-9 16 .01.01c-.08.14-.14.3-.14.48 0 .55.45 1 1 1h18c.55 0 1-.45 1-1 0-.18-.06-.34-.14-.48zM11 17H9v-2h2v2zm0-3H9V6h2v8z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/waterfall-chart.js
/* harmony default export */ var paths_waterfall_chart = (["M13 7h2c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm-9 8h1c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm4-6h2c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm11-5h-1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm0 12H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14a.998.998 0 001 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/waves.js
/* harmony default export */ var paths_waves = (["M4.948 2.682a1 1 0 00-1.897.001l-.005.016-.027.074a6.05 6.05 0 01-.6 1.172C1.958 4.635 1.468 5 .999 5a1 1 0 000 2c1.457 0 2.442-1.027 3-1.825C4.558 5.973 5.543 7 7 7s2.442-1.027 3-1.825C10.558 5.973 11.543 7 13 7s2.442-1.027 3-1.825C16.558 5.973 17.544 7 19 7a1 1 0 100-2c-.47 0-.958-.365-1.418-1.055a6.048 6.048 0 01-.628-1.246l-.006-.016a1 1 0 00-1.896 0l-.006.016a5.868 5.868 0 01-.147.364c-.11.246-.272.568-.481.882C13.958 4.635 13.469 5 13 5c-.47 0-.958-.365-1.418-1.055a6.048 6.048 0 01-.628-1.246l-.006-.016a1 1 0 00-1.897 0l-.005.016-.027.074a6.05 6.05 0 01-.6 1.172C7.958 4.635 7.468 5 6.999 5c-.47 0-.958-.365-1.418-1.055A6.05 6.05 0 014.954 2.7l-.006-.016v-.001zm0 6a1 1 0 00-1.897.001l-.005.016-.027.074a6.05 6.05 0 01-.6 1.172c-.46.69-.95 1.055-1.419 1.055a1 1 0 100 2c1.457 0 2.442-1.027 3-1.825C4.558 11.973 5.543 13 7 13s2.442-1.027 3-1.825c.558.798 1.543 1.825 3 1.825s2.442-1.027 3-1.825c.558.798 1.544 1.825 3 1.825a1 1 0 100-2c-.47 0-.958-.365-1.418-1.055a6.048 6.048 0 01-.628-1.246l-.006-.016a1 1 0 00-1.896 0l-.006.016a5.868 5.868 0 01-.147.364c-.11.246-.272.568-.481.882-.46.69-.949 1.055-1.418 1.055-.47 0-.958-.365-1.418-1.055a6.048 6.048 0 01-.628-1.246l-.006-.016a1 1 0 00-1.897 0l-.005.016-.027.074a6.05 6.05 0 01-.6 1.172c-.46.69-.95 1.055-1.419 1.055-.47 0-.958-.365-1.418-1.055A6.05 6.05 0 014.954 8.7l-.006-.016zm-1.896-6zm1.896 12l.006.017.027.074a6.053 6.053 0 00.6 1.172c.46.69.95 1.055 1.419 1.055.47 0 .958-.365 1.418-1.055a6.053 6.053 0 00.628-1.246l.005-.016a1 1 0 011.897 0l.006.016.027.074a6.051 6.051 0 00.6 1.172c.46.69.95 1.055 1.419 1.055.47 0 .958-.365 1.418-1.055a6.051 6.051 0 00.628-1.246l.006-.016a1 1 0 011.896 0l.006.016.027.074a6.051 6.051 0 00.6 1.172c.46.69.95 1.055 1.419 1.055a1 1 0 110 2c-1.456 0-2.442-1.027-3-1.825-.558.798-1.543 1.825-3 1.825s-2.442-1.027-3-1.825C9.442 17.973 8.457 19 7 19s-2.442-1.027-3-1.825C3.442 17.973 2.457 19 1 19a1 1 0 110-2c.47 0 .958-.365 1.418-1.055a6.053 6.053 0 00.628-1.246l.005-.016a1 1 0 011.897-.001z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/widget.js
/* harmony default export */ var paths_widget = (["M18 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM2 16c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm15-1h2V5h-2v10zM3 5H1v10h2V5zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm3 3h10V1H5v2zm13 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM5 19h10v-2H5v2z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/widget-button.js
/* harmony default export */ var paths_widget_button = (["M1 4h18c.55 0 1 .45 1 1v10c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V5c0-.55.45-1 1-1zm1 2v8h16V6H2zm4 5c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm4 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm4 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/widget-footer.js
/* harmony default export */ var paths_widget_footer = (["M17 0H3c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H4v-4h12v4zm0-5H4V2h12v11z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/widget-header.js
/* harmony default export */ var paths_widget_header = (["M17 0H3c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H4V7h12v11zm0-12H4V2h12v4z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/wind.js
/* harmony default export */ var paths_wind = (["M12 6a3 3 0 113 3H4a1 1 0 000 2h11a5 5 0 10-5-5 1 1 0 102 0zM1 12a1 1 0 100 2h10a2 2 0 110 4c-.934 0-1.803-.614-2.057-1.333a1 1 0 10-1.886.666C7.627 18.944 9.321 20 11 20a4 4 0 000-8H1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/wrench.js
/* harmony default export */ var paths_wrench = (["M19.8 4.44L16.13 8.1l-3.55-.71-.71-3.53L15.54.21c-2.01-.53-4.23-.03-5.8 1.53-1.86 1.85-2.23 4.6-1.14 6.83L.59 16.59C.22 16.95 0 17.45 0 18a2 2 0 002 2c.55 0 1.05-.22 1.41-.59l8.03-8.04c2.23 1.05 4.97.67 6.82-1.16 1.57-1.56 2.07-3.77 1.54-5.77z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/zoom-in.js
/* harmony default export */ var paths_zoom_in = (["M19.56 17.44l-4.94-4.94A8.004 8.004 0 0016 8c0-4.42-3.58-8-8-8S0 3.58 0 8s3.58 8 8 8c1.67 0 3.21-.51 4.5-1.38l4.94 4.94a1.498 1.498 0 102.12-2.12zM8 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm3-7H9V5c0-.55-.45-1-1-1s-1 .45-1 1v2H5c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V9h2c.55 0 1-.45 1-1s-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/zoom-out.js
/* harmony default export */ var paths_zoom_out = (["M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm8.56 10.44l-4.94-4.94A8.004 8.004 0 0016 8c0-4.42-3.58-8-8-8S0 3.58 0 8s3.58 8 8 8c1.67 0 3.21-.51 4.5-1.38l4.94 4.94a1.498 1.498 0 102.12-2.12zM8 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/zoom-to-fit.js
/* harmony default export */ var paths_zoom_to_fit = (["M1 7c.55 0 1-.45 1-1V2h4c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v5c0 .55.45 1 1 1zm5 1a1.003 1.003 0 00-1.71-.71l-2 2c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L4.41 10 5.7 8.71c.19-.18.3-.43.3-.71zm2-2c.28 0 .53-.11.71-.29L10 4.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-2-2C10.53 2.11 10.28 2 10 2s-.53.11-.71.29l-2 2A1.003 1.003 0 008 6zM6 18H2v-4c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm8-6a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l1.3 1.29-1.29 1.29c-.19.18-.3.43-.3.71zm5-12h-5c-.55 0-1 .45-1 1s.45 1 1 1h4v4c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm-7 14c-.28 0-.53.11-.71.29L10 15.59 8.71 14.3A.965.965 0 008 14a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 0012 14zm7-1c-.55 0-1 .45-1 1v4h-4c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1z"]);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/generated-icons/20px/paths/index.js
























































































































































































































































































































































































































































































































































































;// CONCATENATED MODULE: ./node_modules/lower-case/dist.es2015/index.js
/**
 * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt
 */
var SUPPORTED_LOCALE = {
  tr: {
    regexp: /\u0130|\u0049|\u0049\u0307/g,
    map: {
      İ: "i",
      I: "\u0131",
      İ: "i"
    }
  },
  az: {
    regexp: /\u0130/g,
    map: {
      İ: "i",
      I: "\u0131",
      İ: "i"
    }
  },
  lt: {
    regexp: /\u0049|\u004A|\u012E|\u00CC|\u00CD|\u0128/g,
    map: {
      I: "i\u0307",
      J: "j\u0307",
      Į: "\u012F\u0307",
      Ì: "i\u0307\u0300",
      Í: "i\u0307\u0301",
      Ĩ: "i\u0307\u0303"
    }
  }
};
/**
 * Localized lower case.
 */
function localeLowerCase(str, locale) {
  var lang = SUPPORTED_LOCALE[locale.toLowerCase()];
  if (lang) return lowerCase(str.replace(lang.regexp, function (m) {
    return lang.map[m];
  }));
  return lowerCase(str);
}
/**
 * Lower case as a function.
 */
function lowerCase(str) {
  return str.toLowerCase();
}
;// CONCATENATED MODULE: ./node_modules/no-case/dist.es2015/index.js

// Support camel case ("camelCase" -> "camel Case" and "CAMELCase" -> "CAMEL Case").
var DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];
// Remove all non-word characters.
var DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;
/**
 * Normalize the string into something other libraries can manipulate easier.
 */
function noCase(input, options) {
  if (options === void 0) {
    options = {};
  }
  var _a = options.splitRegexp,
    splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a,
    _b = options.stripRegexp,
    stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b,
    _c = options.transform,
    transform = _c === void 0 ? lowerCase : _c,
    _d = options.delimiter,
    delimiter = _d === void 0 ? " " : _d;
  var result = replace(replace(input, splitRegexp, "$1\0$2"), stripRegexp, "\0");
  var start = 0;
  var end = result.length;
  // Trim the delimiter from around the output string.
  while (result.charAt(start) === "\0") start++;
  while (result.charAt(end - 1) === "\0") end--;
  // Transform each token independently.
  return result.slice(start, end).split("\0").map(transform).join(delimiter);
}
/**
 * Replace `re` in the input string with the replacement value.
 */
function replace(input, re, value) {
  if (re instanceof RegExp) return input.replace(re, value);
  return re.reduce(function (input, re) {
    return input.replace(re, value);
  }, input);
}
;// CONCATENATED MODULE: ./node_modules/pascal-case/dist.es2015/index.js


function pascalCaseTransform(input, index) {
  var firstChar = input.charAt(0);
  var lowerChars = input.substr(1).toLowerCase();
  if (index > 0 && firstChar >= "0" && firstChar <= "9") {
    return "_" + firstChar + lowerChars;
  }
  return "" + firstChar.toUpperCase() + lowerChars;
}
function pascalCaseTransformMerge(input) {
  return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();
}
function pascalCase(input, options) {
  if (options === void 0) {
    options = {};
  }
  return noCase(input, _assign({
    delimiter: "",
    transform: pascalCaseTransform
  }, options));
}
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/icons/lib/esm/iconSvgPaths.js
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */




/**
 * Type safe string literal conversion of snake-case icon names to PascalCase icon names.
 * This is useful for indexing into the SVG paths record to extract a single icon's SVG path definition.
 */
function iconNameToPathsRecordKey(name) {
  return pascalCase(name);
}
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/icon/icon.js
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */






var IconSize;
(function (IconSize) {
  IconSize[IconSize["STANDARD"] = 16] = "STANDARD";
  IconSize[IconSize["LARGE"] = 20] = "LARGE";
})(IconSize || (IconSize = {}));
/**
 * Icon component.
 *
 * @see https://blueprintjs.com/docs/#core/components/icon
 */
var Icon = /** @class */function (_super) {
  __extends(Icon, _super);
  function Icon() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Icon.prototype.render = function () {
    var icon = this.props.icon;
    if (icon == null || typeof icon === "boolean") {
      return null;
    } else if (typeof icon !== "string") {
      return icon;
    }
    var _a = this.props,
      className = _a.className,
      color = _a.color,
      htmlTitle = _a.htmlTitle,
      // eslint-disable-next-line deprecation/deprecation
      iconSize = _a.iconSize,
      intent = _a.intent,
      _b = _a.size,
      size = _b === void 0 ? iconSize !== null && iconSize !== void 0 ? iconSize : IconSize.STANDARD : _b,
      svgProps = _a.svgProps,
      title = _a.title,
      _c = _a.tagName,
      tagName = _c === void 0 ? "span" : _c,
      htmlprops = __rest(_a, ["className", "color", "htmlTitle", "iconSize", "intent", "size", "svgProps", "title", "tagName"]);
    // choose which pixel grid is most appropriate for given icon size
    var pixelGridSize = size >= IconSize.LARGE ? IconSize.LARGE : IconSize.STANDARD;
    // render path elements, or nothing if icon name is unknown.
    var paths = this.renderSvgPaths(pixelGridSize, icon);
    var classes = classnames_default()(ICON, iconClass(icon), intentClass(intent), className);
    var viewBox = "0 0 ".concat(pixelGridSize, " ").concat(pixelGridSize);
    var titleId = uniqueId("iconTitle");
    return react.createElement(tagName, _assign(_assign({
      "aria-hidden": title ? undefined : true
    }, htmlprops), {
      className: classes,
      title: htmlTitle
    }), react.createElement("svg", _assign({
      fill: color,
      "data-icon": icon,
      width: size,
      height: size,
      viewBox: viewBox,
      "aria-labelledby": title ? titleId : undefined,
      role: "img"
    }, svgProps), title && react.createElement("title", {
      id: titleId
    }, title), paths));
  };
  /** Render `<path>` elements for the given icon name. Returns `null` if name is unknown. */
  Icon.prototype.renderSvgPaths = function (pathsSize, iconName) {
    var svgPathsRecord = pathsSize === IconSize.STANDARD ? paths_namespaceObject : _20px_paths_namespaceObject;
    var paths = svgPathsRecord[iconNameToPathsRecordKey(iconName)];
    if (paths == null) {
      return null;
    }
    return paths.map(function (path, i) {
      return react.createElement("path", {
        key: i,
        d: path,
        fillRule: "evenodd"
      });
    });
  };
  Icon.displayName = "".concat(DISPLAYNAME_PREFIX, ".Icon");
  return Icon;
}(AbstractPureComponent2);

;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/spinner/spinner.js
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */







var SpinnerSize;
(function (SpinnerSize) {
  SpinnerSize[SpinnerSize["SMALL"] = 20] = "SMALL";
  SpinnerSize[SpinnerSize["STANDARD"] = 50] = "STANDARD";
  SpinnerSize[SpinnerSize["LARGE"] = 100] = "LARGE";
})(SpinnerSize || (SpinnerSize = {}));
// see http://stackoverflow.com/a/18473154/3124288 for calculating arc path
var R = 45;
var spinner_SPINNER_TRACK = "M 50,50 m 0,-".concat(R, " a ").concat(R, ",").concat(R, " 0 1 1 0,").concat(R * 2, " a ").concat(R, ",").concat(R, " 0 1 1 0,-").concat(R * 2);
// unitless total length of SVG path, to which stroke-dash* properties are relative.
// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pathLength
// this value is the result of `<path d={SPINNER_TRACK} />.getTotalLength()` and works in all browsers:
var PATH_LENGTH = 280;
var MIN_SIZE = 10;
var STROKE_WIDTH = 4;
var MIN_STROKE_WIDTH = 16;
/**
 * Spinner component.
 *
 * @see https://blueprintjs.com/docs/#core/components/spinner
 */
var Spinner = /** @class */function (_super) {
  __extends(Spinner, _super);
  function Spinner() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Spinner.prototype.componentDidUpdate = function (prevProps) {
    if (prevProps.value !== this.props.value) {
      // IE/Edge: re-render after changing value to force SVG update
      this.forceUpdate();
    }
  };
  Spinner.prototype.render = function () {
    var _a;
    var _b = this.props,
      className = _b.className,
      intent = _b.intent,
      value = _b.value,
      _c = _b.tagName,
      tagName = _c === void 0 ? "div" : _c,
      htmlProps = __rest(_b, ["className", "intent", "value", "tagName"]);
    var size = this.getSize();
    var classes = classnames_default()(SPINNER, intentClass(intent), (_a = {}, _a[SPINNER_NO_SPIN] = value != null, _a), className);
    // keep spinner track width consistent at all sizes (down to about 10px).
    var strokeWidth = Math.min(MIN_STROKE_WIDTH, STROKE_WIDTH * SpinnerSize.LARGE / size);
    var strokeOffset = PATH_LENGTH - PATH_LENGTH * (value == null ? 0.25 : clamp(value, 0, 1));
    // multiple DOM elements around SVG are necessary to properly isolate animation:
    // - SVG elements in IE do not support anim/trans so they must be set on a parent HTML element.
    // - SPINNER_ANIMATION isolates svg from parent display and is always centered inside root element.
    return react.createElement(tagName, _assign({
      "aria-valuemax": 100,
      "aria-valuemin": 0,
      "aria-valuenow": value === undefined ? undefined : value * 100,
      className: classes,
      role: "progressbar"
    }, htmlProps), react.createElement(tagName, {
      className: SPINNER_ANIMATION
    }, react.createElement("svg", {
      width: size,
      height: size,
      strokeWidth: strokeWidth.toFixed(2),
      viewBox: this.getViewBox(strokeWidth)
    }, react.createElement("path", {
      className: SPINNER_TRACK,
      d: spinner_SPINNER_TRACK
    }), react.createElement("path", {
      className: SPINNER_HEAD,
      d: spinner_SPINNER_TRACK,
      pathLength: PATH_LENGTH,
      strokeDasharray: "".concat(PATH_LENGTH, " ").concat(PATH_LENGTH),
      strokeDashoffset: strokeOffset
    }))));
  };
  Spinner.prototype.validateProps = function (_a) {
    var _b = _a.className,
      className = _b === void 0 ? "" : _b,
      size = _a.size;
    if (size != null && (className.indexOf(SMALL) >= 0 || className.indexOf(LARGE) >= 0)) {
      console.warn(SPINNER_WARN_CLASSES_SIZE);
    }
  };
  /**
   * Resolve size to a pixel value.
   * Size can be set by className, props, default, or minimum constant.
   */
  Spinner.prototype.getSize = function () {
    var _a = this.props,
      _b = _a.className,
      className = _b === void 0 ? "" : _b,
      size = _a.size;
    if (size == null) {
      // allow Classes constants to determine default size.
      if (className.indexOf(SMALL) >= 0) {
        return SpinnerSize.SMALL;
      } else if (className.indexOf(LARGE) >= 0) {
        return SpinnerSize.LARGE;
      }
      return SpinnerSize.STANDARD;
    }
    return Math.max(MIN_SIZE, size);
  };
  /** Compute viewbox such that stroked track sits exactly at edge of image frame. */
  Spinner.prototype.getViewBox = function (strokeWidth) {
    var radius = R + strokeWidth / 2;
    var viewBoxX = (50 - radius).toFixed(2);
    var viewBoxWidth = (radius * 2).toFixed(2);
    return "".concat(viewBoxX, " ").concat(viewBoxX, " ").concat(viewBoxWidth, " ").concat(viewBoxWidth);
  };
  Spinner.displayName = "".concat(DISPLAYNAME_PREFIX, ".Spinner");
  return Spinner;
}(AbstractPureComponent2);

;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/button/abstractButton.js
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */






var AbstractButton = /** @class */function (_super) {
  __extends(AbstractButton, _super);
  function AbstractButton() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.state = {
      isActive: false
    };
    // we're casting as `any` to get around a somewhat opaque safeInvoke error
    // that "Type argument candidate 'KeyboardEvent<T>' is not a valid type
    // argument because it is not a supertype of candidate
    // 'KeyboardEvent<HTMLElement>'."
    _this.handleKeyDown = function (e) {
      var _a, _b;
      // HACKHACK: https://github.com/palantir/blueprint/issues/4165
      /* eslint-disable deprecation/deprecation */
      if (isKeyboardClick(e.which)) {
        e.preventDefault();
        if (e.which !== _this.currentKeyDown) {
          _this.setState({
            isActive: true
          });
        }
      }
      _this.currentKeyDown = e.which;
      (_b = (_a = _this.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);
    };
    _this.handleKeyUp = function (e) {
      var _a, _b, _c;
      // HACKHACK: https://github.com/palantir/blueprint/issues/4165
      /* eslint-disable deprecation/deprecation */
      if (isKeyboardClick(e.which)) {
        _this.setState({
          isActive: false
        });
        (_a = _this.buttonRef) === null || _a === void 0 ? void 0 : _a.click();
      }
      _this.currentKeyDown = undefined;
      (_c = (_b = _this.props).onKeyUp) === null || _c === void 0 ? void 0 : _c.call(_b, e);
    };
    _this.handleBlur = function (e) {
      var _a, _b;
      if (_this.state.isActive) {
        _this.setState({
          isActive: false
        });
      }
      (_b = (_a = _this.props).onBlur) === null || _b === void 0 ? void 0 : _b.call(_a, e);
    };
    return _this;
  }
  AbstractButton.prototype.getCommonButtonProps = function () {
    var _a;
    var _b = this.props,
      _c = _b.active,
      active = _c === void 0 ? false : _c,
      alignText = _b.alignText,
      fill = _b.fill,
      large = _b.large,
      _d = _b.loading,
      loading = _d === void 0 ? false : _d,
      outlined = _b.outlined,
      minimal = _b.minimal,
      small = _b.small,
      tabIndex = _b.tabIndex;
    var disabled = this.props.disabled || loading;
    var className = classnames_default()(BUTTON, (_a = {}, _a[ACTIVE] = !disabled && (active || this.state.isActive), _a[DISABLED] = disabled, _a[FILL] = fill, _a[LARGE] = large, _a[LOADING] = loading, _a[MINIMAL] = minimal, _a[OUTLINED] = outlined, _a[SMALL] = small, _a), alignmentClass(alignText), intentClass(this.props.intent), this.props.className);
    return {
      className: className,
      disabled: disabled,
      onBlur: this.handleBlur,
      onClick: disabled ? undefined : this.props.onClick,
      onFocus: disabled ? undefined : this.props.onFocus,
      onKeyDown: this.handleKeyDown,
      onKeyUp: this.handleKeyUp,
      tabIndex: disabled ? -1 : tabIndex
    };
  };
  AbstractButton.prototype.renderChildren = function () {
    var _a = this.props,
      children = _a.children,
      icon = _a.icon,
      loading = _a.loading,
      rightIcon = _a.rightIcon,
      text = _a.text;
    var maybeHasText = !isReactNodeEmpty(text) || !isReactNodeEmpty(children);
    return [loading && react.createElement(Spinner, {
      key: "loading",
      className: BUTTON_SPINNER,
      size: IconSize.LARGE
    }), react.createElement(Icon, {
      key: "leftIcon",
      icon: icon
    }), maybeHasText && react.createElement("span", {
      key: "text",
      className: BUTTON_TEXT
    }, text, children), react.createElement(Icon, {
      key: "rightIcon",
      icon: rightIcon
    })];
  };
  return AbstractButton;
}(AbstractPureComponent2);

;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/button/buttons.js
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// HACKHACK: these components should go in separate files
/* eslint-disable max-classes-per-file */




/**
 * Button component.
 *
 * @see https://blueprintjs.com/docs/#core/components/button
 */
var Button = /** @class */function (_super) {
  __extends(Button, _super);
  function Button() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    // need to keep this ref so that we can access it in AbstractButton#handleKeyUp
    _this.buttonRef = null;
    _this.handleRef = refHandler(_this, "buttonRef", _this.props.elementRef);
    return _this;
  }
  Button.prototype.render = function () {
    return react.createElement("button", _assign({
      type: "button",
      ref: this.handleRef
    }, removeNonHTMLProps(this.props), this.getCommonButtonProps()), this.renderChildren());
  };
  Button.prototype.componentDidUpdate = function (prevProps) {
    if (prevProps.elementRef !== this.props.elementRef) {
      setRef(prevProps.elementRef, null);
      this.handleRef = refHandler(this, "buttonRef", this.props.elementRef);
      setRef(this.props.elementRef, this.buttonRef);
    }
  };
  Button.displayName = "".concat(DISPLAYNAME_PREFIX, ".Button");
  return Button;
}(AbstractButton);

/**
 * AnchorButton component.
 *
 * @see https://blueprintjs.com/docs/#core/components/button
 */
var AnchorButton = /** @class */function (_super) {
  __extends(AnchorButton, _super);
  function AnchorButton() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    // need to keep this ref so that we can access it in AbstractButton#handleKeyUp
    _this.buttonRef = null;
    _this.handleRef = refHandler(_this, "buttonRef", _this.props.elementRef);
    return _this;
  }
  AnchorButton.prototype.render = function () {
    var _a = this.props,
      href = _a.href,
      _b = _a.tabIndex,
      tabIndex = _b === void 0 ? 0 : _b;
    var commonProps = this.getCommonButtonProps();
    return react.createElement("a", _assign({
      role: "button",
      ref: this.handleRef
    }, removeNonHTMLProps(this.props), commonProps, {
      href: commonProps.disabled ? undefined : href,
      tabIndex: commonProps.disabled ? -1 : tabIndex
    }), this.renderChildren());
  };
  AnchorButton.prototype.componentDidUpdate = function (prevProps) {
    if (prevProps.elementRef !== this.props.elementRef) {
      setRef(prevProps.elementRef, null);
      this.handleRef = refHandler(this, "buttonRef", this.props.elementRef);
      setRef(this.props.elementRef, this.buttonRef);
    }
  };
  AnchorButton.displayName = "".concat(DISPLAYNAME_PREFIX, ".AnchorButton");
  return AnchorButton;
}(AbstractButton);

;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/collapse/collapse.js
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */





/**
 * `Collapse` can be in one of six states, enumerated here.
 * When changing the `isOpen` prop, the following happens to the states:
 * isOpen={true}  : CLOSED -> OPEN_START -> OPENING -> OPEN
 * isOpen={false} : OPEN -> CLOSING_START -> CLOSING -> CLOSED
 */
var AnimationStates;
(function (AnimationStates) {
  /**
   * The body is re-rendered, height is set to the measured body height and
   * the body Y is set to 0.
   */
  AnimationStates[AnimationStates["OPEN_START"] = 0] = "OPEN_START";
  /**
   * Animation begins, height is set to auto. This is all animated, and on
   * complete, the state changes to OPEN.
   */
  AnimationStates[AnimationStates["OPENING"] = 1] = "OPENING";
  /**
   * The collapse height is set to auto, and the body Y is set to 0 (so the
   * element can be seen as normal).
   */
  AnimationStates[AnimationStates["OPEN"] = 2] = "OPEN";
  /**
   * Height has been changed from auto to the measured height of the body to
   * prepare for the closing animation in CLOSING.
   */
  AnimationStates[AnimationStates["CLOSING_START"] = 3] = "CLOSING_START";
  /**
   * Height is set to 0 and the body Y is at -height. Both of these properties
   * are transformed, and then after the animation is complete, the state
   * changes to CLOSED.
   */
  AnimationStates[AnimationStates["CLOSING"] = 4] = "CLOSING";
  /**
   * The contents of the collapse is not rendered, the collapse height is 0,
   * and the body Y is at -height (so that the bottom of the body is at Y=0).
   */
  AnimationStates[AnimationStates["CLOSED"] = 5] = "CLOSED";
})(AnimationStates || (AnimationStates = {}));
/**
 * Collapse component.
 *
 * @see https://blueprintjs.com/docs/#core/components/collapse
 */
var Collapse = /** @class */function (_super) {
  __extends(Collapse, _super);
  function Collapse() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.state = {
      animationState: _this.props.isOpen ? AnimationStates.OPEN : AnimationStates.CLOSED,
      height: undefined,
      heightWhenOpen: undefined
    };
    // The element containing the contents of the collapse.
    _this.contents = null;
    _this.contentsRefHandler = function (el) {
      _this.contents = el;
      if (_this.contents != null) {
        var height = _this.contents.clientHeight;
        _this.setState({
          animationState: _this.props.isOpen ? AnimationStates.OPEN : AnimationStates.CLOSED,
          height: height === 0 ? undefined : "".concat(height, "px"),
          heightWhenOpen: height === 0 ? undefined : height
        });
      }
    };
    return _this;
  }
  Collapse.getDerivedStateFromProps = function (props, state) {
    var isOpen = props.isOpen;
    var animationState = state.animationState;
    if (isOpen) {
      switch (animationState) {
        case AnimationStates.OPEN:
          // no-op
          break;
        case AnimationStates.OPENING:
          // allow Collapse#onDelayedStateChange() to handle the transition here
          break;
        default:
          return {
            animationState: AnimationStates.OPEN_START
          };
      }
    } else {
      switch (animationState) {
        case AnimationStates.CLOSED:
          // no-op
          break;
        case AnimationStates.CLOSING:
          // allow Collapse#onDelayedStateChange() to handle the transition here
          break;
        default:
          // need to set an explicit height so that transition can work
          return {
            animationState: AnimationStates.CLOSING_START,
            height: "".concat(state.heightWhenOpen, "px")
          };
      }
    }
    return null;
  };
  Collapse.prototype.render = function () {
    var isContentVisible = this.state.animationState !== AnimationStates.CLOSED;
    var shouldRenderChildren = isContentVisible || this.props.keepChildrenMounted;
    var displayWithTransform = isContentVisible && this.state.animationState !== AnimationStates.CLOSING;
    var isAutoHeight = this.state.height === "auto";
    var containerStyle = {
      height: isContentVisible ? this.state.height : undefined,
      overflowY: isAutoHeight ? "visible" : undefined,
      // transitions don't work with height: auto
      transition: isAutoHeight ? "none" : undefined
    };
    var contentsStyle = {
      // only use heightWhenOpen while closing
      transform: displayWithTransform ? "translateY(0)" : "translateY(-".concat(this.state.heightWhenOpen, "px)"),
      // transitions don't work with height: auto
      transition: isAutoHeight ? "none" : undefined
    };
    return react.createElement(this.props.component, {
      className: classnames_default()(COLLAPSE, this.props.className),
      style: containerStyle
    }, react.createElement("div", {
      className: COLLAPSE_BODY,
      ref: this.contentsRefHandler,
      style: contentsStyle,
      "aria-hidden": !isContentVisible
    }, shouldRenderChildren ? this.props.children : null));
  };
  Collapse.prototype.componentDidMount = function () {
    this.forceUpdate();
    // HACKHACK: this should probably be done in getSnapshotBeforeUpdate
    /* eslint-disable react/no-did-mount-set-state */
    if (this.props.isOpen) {
      this.setState({
        animationState: AnimationStates.OPEN,
        height: "auto"
      });
    } else {
      this.setState({
        animationState: AnimationStates.CLOSED,
        height: "0px"
      });
    }
    /* eslint-disable react/no-did-mount-set-state */
  };

  Collapse.prototype.componentDidUpdate = function () {
    var _this = this;
    if (this.contents == null) {
      return;
    }
    var transitionDuration = this.props.transitionDuration;
    var animationState = this.state.animationState;
    if (animationState === AnimationStates.OPEN_START) {
      var clientHeight = this.contents.clientHeight;
      this.setState({
        animationState: AnimationStates.OPENING,
        height: "".concat(clientHeight, "px"),
        heightWhenOpen: clientHeight
      });
      this.setTimeout(function () {
        return _this.onDelayedStateChange();
      }, transitionDuration);
    } else if (animationState === AnimationStates.CLOSING_START) {
      var clientHeight_1 = this.contents.clientHeight;
      this.setTimeout(function () {
        return _this.setState({
          animationState: AnimationStates.CLOSING,
          height: "0px",
          heightWhenOpen: clientHeight_1
        });
      });
      this.setTimeout(function () {
        return _this.onDelayedStateChange();
      }, transitionDuration);
    }
  };
  Collapse.prototype.onDelayedStateChange = function () {
    switch (this.state.animationState) {
      case AnimationStates.OPENING:
        this.setState({
          animationState: AnimationStates.OPEN,
          height: "auto"
        });
        break;
      case AnimationStates.CLOSING:
        this.setState({
          animationState: AnimationStates.CLOSED
        });
        break;
      default:
        break;
    }
  };
  Collapse.displayName = "".concat(DISPLAYNAME_PREFIX, ".Collapse");
  Collapse.defaultProps = {
    component: "div",
    isOpen: false,
    keepChildrenMounted: false,
    transitionDuration: 200
  };
  return Collapse;
}(AbstractPureComponent2);

;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/html/html.js
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */




function htmlElement(tagName, tagClassName) {
  /* eslint-disable-next-line react/display-name */
  return function (props) {
    var className = props.className,
      elementRef = props.elementRef,
      children = props.children,
      htmlProps = __rest(props, ["className", "elementRef", "children"]);
    return react.createElement(tagName, _assign(_assign({}, htmlProps), {
      className: classnames_default()(tagClassName, className),
      ref: elementRef
    }), children);
  };
}
// the following components are linted by blueprint-html-components because
// they should rarely be used without the Blueprint classes/styles:
var H1 = htmlElement("h1", HEADING);
var H2 = htmlElement("h2", HEADING);
var H3 = htmlElement("h3", HEADING);
var H4 = htmlElement("h4", HEADING);
var H5 = htmlElement("h5", HEADING);
var H6 = htmlElement("h6", HEADING);
var Blockquote = htmlElement("blockquote", BLOCKQUOTE);
var Code = htmlElement("code", CODE);
var Pre = htmlElement("pre", CODE_BLOCK);
var Label = htmlElement("label", LABEL);
// these two are not linted by blueprint-html-components because there are valid
// uses of these elements without Blueprint styles:
var OL = htmlElement("ol", LIST);
var UL = htmlElement("ul", LIST);
// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(164);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
function extends_extends() {
  extends_extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return extends_extends.apply(this, arguments);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
;// CONCATENATED MODULE: ./node_modules/dom-helpers/esm/hasClass.js
/**
 * Checks if a given element has a CSS class.
 * 
 * @param element the element
 * @param className the CSS class name
 */
function hasClass(element, className) {
  if (element.classList) return !!className && element.classList.contains(className);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}
;// CONCATENATED MODULE: ./node_modules/dom-helpers/esm/addClass.js

/**
 * Adds a CSS class to a given element.
 * 
 * @param element the element
 * @param className the CSS class name
 */

function addClass_addClass(element, className) {
  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + " " + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + " " + className);
}
;// CONCATENATED MODULE: ./node_modules/dom-helpers/esm/removeClass.js
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}
/**
 * Removes a CSS class from a given element.
 * 
 * @param element the element
 * @param className the CSS class name
 */

function removeClass_removeClass(element, className) {
  if (element.classList) {
    element.classList.remove(className);
  } else if (typeof element.className === 'string') {
    element.className = replaceClassName(element.className, className);
  } else {
    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
  }
}
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/config.js
/* harmony default export */ var config = ({
  disabled: false
});
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/TransitionGroupContext.js

/* harmony default export */ var TransitionGroupContext = (react.createContext(null));
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/utils/reflow.js
var forceReflow = function forceReflow(node) {
  return node.scrollTop;
};
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/Transition.js









var UNMOUNTED = 'unmounted';
var EXITED = 'exited';
var ENTERING = 'entering';
var ENTERED = 'entered';
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

var Transition = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(Transition, _React$Component);
  function Transition(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;
    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }
    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }
  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;
    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }
    return null;
  } // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }
  ;

  var _proto = Transition.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;
    if (prevProps !== this.props) {
      var status = this.state.status;
      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }
    this.updateStatus(false, nextStatus);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };
  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;
    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter; // TODO: remove fallback for next major

      appear = timeout.appear !== undefined ? timeout.appear : enter;
    }
    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };
  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }
    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();
      if (nextStatus === ENTERING) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var node = this.props.nodeRef ? this.props.nodeRef.current : react_dom.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749
          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.
          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.

          if (node) forceReflow(node);
        }
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };
  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;
    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;
    var _ref2 = this.props.nodeRef ? [appearing] : [react_dom.findDOMNode(this), appearing],
      maybeNode = _ref2[0],
      maybeAppearing = _ref2[1];
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter || config.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }
    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(maybeNode, maybeAppearing);
      _this2.onTransitionEnd(enterTimeout, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };
  _proto.performExit = function performExit() {
    var _this3 = this;
    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? undefined : react_dom.findDOMNode(this); // no exit animation skip right to EXITED

    if (!exit || config.disabled) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(maybeNode);
      });
      return;
    }
    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(maybeNode);
      _this3.onTransitionEnd(timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };
  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };
  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };
  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;
    var active = true;
    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };
    this.nextCallback.cancel = function () {
      active = false;
    };
    return this.nextCallback;
  };
  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
    this.setNextCallback(handler);
    var node = this.props.nodeRef ? this.props.nodeRef.current : react_dom.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;
    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],
        maybeNode = _ref3[0],
        maybeNextCallback = _ref3[1];
      this.props.addEndListener(maybeNode, maybeNextCallback);
    }
    if (timeout != null) {
      setTimeout(this.nextCallback, timeout);
    }
  };
  _proto.render = function render() {
    var status = this.state.status;
    if (status === UNMOUNTED) {
      return null;
    }
    var _this$props = this.props,
      children = _this$props.children,
      _in = _this$props.in,
      _mountOnEnter = _this$props.mountOnEnter,
      _unmountOnExit = _this$props.unmountOnExit,
      _appear = _this$props.appear,
      _enter = _this$props.enter,
      _exit = _this$props.exit,
      _timeout = _this$props.timeout,
      _addEndListener = _this$props.addEndListener,
      _onEnter = _this$props.onEnter,
      _onEntering = _this$props.onEntering,
      _onEntered = _this$props.onEntered,
      _onExit = _this$props.onExit,
      _onExiting = _this$props.onExiting,
      _onExited = _this$props.onExited,
      _nodeRef = _this$props.nodeRef,
      childProps = objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return /*#__PURE__*/(
      // allows for nested Transitions
      react.createElement(TransitionGroupContext.Provider, {
        value: null
      }, typeof children === 'function' ? children(status, childProps) : react.cloneElement(react.Children.only(children), childProps))
    );
  };
  return Transition;
}(react.Component);
Transition.contextType = TransitionGroupContext;
Transition.propTypes =  false ? 0 : {}; // Name the function so it is clearer in the documentation

function noop() {}
Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
/* harmony default export */ var esm_Transition = (Transition);
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/CSSTransition.js










var _addClass = function addClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return addClass_addClass(node, c);
  });
};
var removeClass = function removeClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return removeClass_removeClass(node, c);
  });
};
/**
 * A transition component inspired by the excellent
 * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should
 * use it if you're using CSS transitions or animations. It's built upon the
 * [`Transition`](https://reactcommunity.org/react-transition-group/transition)
 * component, so it inherits all of its props.
 *
 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
 * and `exit` states of the transition. The first class is applied and then a
 * second `*-active` class in order to activate the CSS transition. After the
 * transition, matching `*-done` class names are applied to persist the
 * transition state.
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <CSSTransition in={inProp} timeout={200} classNames="my-node">
 *         <div>
 *           {"I'll receive my-node-* classes"}
 *         </div>
 *       </CSSTransition>
 *       <button type="button" onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the `in` prop is set to `true`, the child component will first receive
 * the class `example-enter`, then the `example-enter-active` will be added in
 * the next tick. `CSSTransition` [forces a
 * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
 * between before adding the `example-enter-active`. This is an important trick
 * because it allows us to transition between `example-enter` and
 * `example-enter-active` even though they were added immediately one after
 * another. Most notably, this is what makes it possible for us to animate
 * _appearance_.
 *
 * ```css
 * .my-node-enter {
 *   opacity: 0;
 * }
 * .my-node-enter-active {
 *   opacity: 1;
 *   transition: opacity 200ms;
 * }
 * .my-node-exit {
 *   opacity: 1;
 * }
 * .my-node-exit-active {
 *   opacity: 0;
 *   transition: opacity 200ms;
 * }
 * ```
 *
 * `*-active` classes represent which styles you want to animate **to**, so it's
 * important to add `transition` declaration only to them, otherwise transitions
 * might not behave as intended! This might not be obvious when the transitions
 * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in
 * the example above (minus `transition`), but it becomes apparent in more
 * complex transitions.
 *
 * **Note**: If you're using the
 * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)
 * prop, make sure to define styles for `.appear-*` classes as well.
 */

var CSSTransition = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(CSSTransition, _React$Component);
  function CSSTransition() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };
    _this.onEnter = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),
        node = _this$resolveArgument[0],
        appearing = _this$resolveArgument[1];
      _this.removeClasses(node, 'exit');
      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');
      if (_this.props.onEnter) {
        _this.props.onEnter(maybeNode, maybeAppearing);
      }
    };
    _this.onEntering = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),
        node = _this$resolveArgument2[0],
        appearing = _this$resolveArgument2[1];
      var type = appearing ? 'appear' : 'enter';
      _this.addClass(node, type, 'active');
      if (_this.props.onEntering) {
        _this.props.onEntering(maybeNode, maybeAppearing);
      }
    };
    _this.onEntered = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),
        node = _this$resolveArgument3[0],
        appearing = _this$resolveArgument3[1];
      var type = appearing ? 'appear' : 'enter';
      _this.removeClasses(node, type);
      _this.addClass(node, type, 'done');
      if (_this.props.onEntered) {
        _this.props.onEntered(maybeNode, maybeAppearing);
      }
    };
    _this.onExit = function (maybeNode) {
      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),
        node = _this$resolveArgument4[0];
      _this.removeClasses(node, 'appear');
      _this.removeClasses(node, 'enter');
      _this.addClass(node, 'exit', 'base');
      if (_this.props.onExit) {
        _this.props.onExit(maybeNode);
      }
    };
    _this.onExiting = function (maybeNode) {
      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),
        node = _this$resolveArgument5[0];
      _this.addClass(node, 'exit', 'active');
      if (_this.props.onExiting) {
        _this.props.onExiting(maybeNode);
      }
    };
    _this.onExited = function (maybeNode) {
      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),
        node = _this$resolveArgument6[0];
      _this.removeClasses(node, 'exit');
      _this.addClass(node, 'exit', 'done');
      if (_this.props.onExited) {
        _this.props.onExited(maybeNode);
      }
    };
    _this.resolveArguments = function (maybeNode, maybeAppearing) {
      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`
      : [maybeNode, maybeAppearing];
    };
    _this.getClassNames = function (type) {
      var classNames = _this.props.classNames;
      var isStringClassNames = typeof classNames === 'string';
      var prefix = isStringClassNames && classNames ? classNames + "-" : '';
      var baseClassName = isStringClassNames ? "" + prefix + type : classNames[type];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames[type + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames[type + "Done"];
      return {
        baseClassName: baseClassName,
        activeClassName: activeClassName,
        doneClassName: doneClassName
      };
    };
    return _this;
  }
  var _proto = CSSTransition.prototype;
  _proto.addClass = function addClass(node, type, phase) {
    var className = this.getClassNames(type)[phase + "ClassName"];
    var _this$getClassNames = this.getClassNames('enter'),
      doneClassName = _this$getClassNames.doneClassName;
    if (type === 'appear' && phase === 'done' && doneClassName) {
      className += " " + doneClassName;
    } // This is to force a repaint,
    // which is necessary in order to transition styles when adding a class name.

    if (phase === 'active') {
      if (node) forceReflow(node);
    }
    if (className) {
      this.appliedClasses[type][phase] = className;
      _addClass(node, className);
    }
  };
  _proto.removeClasses = function removeClasses(node, type) {
    var _this$appliedClasses$ = this.appliedClasses[type],
      baseClassName = _this$appliedClasses$.base,
      activeClassName = _this$appliedClasses$.active,
      doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type] = {};
    if (baseClassName) {
      removeClass(node, baseClassName);
    }
    if (activeClassName) {
      removeClass(node, activeClassName);
    }
    if (doneClassName) {
      removeClass(node, doneClassName);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props,
      _ = _this$props.classNames,
      props = objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(_this$props, ["classNames"]);
    return /*#__PURE__*/react.createElement(esm_Transition, extends_extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };
  return CSSTransition;
}(react.Component);
CSSTransition.defaultProps = {
  classNames: ''
};
CSSTransition.propTypes =  false ? 0 : {};
/* harmony default export */ var esm_CSSTransition = (CSSTransition);
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/utils/ChildMapping.js

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */

function getChildMapping(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && (0,react.isValidElement)(child) ? mapFn(child) : child;
  };
  var result = Object.create(null);
  if (children) react.Children.map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */

function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};
  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  } // For each key of `next`, the list of keys to insert before that key in
  // the combined list

  var nextKeysPending = Object.create(null);
  var pendingKeys = [];
  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }
  var i;
  var childMapping = {};
  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  } // Finally, add the keys which didn't appear before any key in `next`

  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }
  return childMapping;
}
function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}
function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function (child) {
    return (0,react.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, 'appear', props),
      enter: getProp(child, 'enter', props),
      exit: getProp(child, 'exit', props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function (key) {
    var child = children[key];
    if (!(0,react.isValidElement)(child)) return;
    var hasPrev = (key in prevChildMapping);
    var hasNext = (key in nextChildMapping);
    var prevChild = prevChildMapping[key];
    var isLeaving = (0,react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)

    if (hasNext && (!hasPrev || isLeaving)) {
      // console.log('entering', key)
      children[key] = (0,react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      // item is old (exiting)
      // console.log('leaving', key)
      children[key] = (0,react.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0,react.isValidElement)(prevChild)) {
      // item hasn't changed transition states
      // copy over the last transition props;
      // console.log('unchanged', key)
      children[key] = (0,react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    }
  });
  return children;
}
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/TransitionGroup.js








var values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};
var defaultProps = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
};
/**
 * The `<TransitionGroup>` component manages a set of transition components
 * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
 * components, `<TransitionGroup>` is a state machine for managing the mounting
 * and unmounting of components over time.
 *
 * Consider the example below. As items are removed or added to the TodoList the
 * `in` prop is toggled automatically by the `<TransitionGroup>`.
 *
 * Note that `<TransitionGroup>`  does not define any animation behavior!
 * Exactly _how_ a list item animates is up to the individual transition
 * component. This means you can mix and match animations across different list
 * items.
 */

var TransitionGroup = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(TransitionGroup, _React$Component);
  function TransitionGroup(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear

    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited: handleExited,
      firstRender: true
    };
    return _this;
  }
  var _proto = TransitionGroup.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };
  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children,
      handleExited = _ref.handleExited,
      firstRender = _ref.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  } // node is `undefined` when user provided `nodeRef` prop
  ;

  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping) return;
    if (child.props.onExited) {
      child.props.onExited(node);
    }
    if (this.mounted) {
      this.setState(function (state) {
        var children = extends_extends({}, state.children);
        delete children[child.key];
        return {
          children: children
        };
      });
    }
  };
  _proto.render = function render() {
    var _this$props = this.props,
      Component = _this$props.component,
      childFactory = _this$props.childFactory,
      props = objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
    var contextValue = this.state.contextValue;
    var children = values(this.state.children).map(childFactory);
    delete props.appear;
    delete props.enter;
    delete props.exit;
    if (Component === null) {
      return /*#__PURE__*/react.createElement(TransitionGroupContext.Provider, {
        value: contextValue
      }, children);
    }
    return /*#__PURE__*/react.createElement(TransitionGroupContext.Provider, {
      value: contextValue
    }, /*#__PURE__*/react.createElement(Component, props, children));
  };
  return TransitionGroup;
}(react.Component);
TransitionGroup.propTypes =  false ? 0 : {};
TransitionGroup.defaultProps = defaultProps;
/* harmony default export */ var esm_TransitionGroup = (TransitionGroup);
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/common/utils/functionUtils.js
/*
 * Copyright 2020 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Returns whether the value is a function. Acts as a type guard. */
/* istanbul ignore next */
// eslint-disable-next-line @typescript-eslint/ban-types
function isFunction(value) {
  return typeof value === "function";
}
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/common/utils/domUtils.js
/*
 * Copyright 2020 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function elementIsOrContains(element, testElement) {
  return element === testElement || element.contains(testElement);
}
/**
 * Checks whether the given element is inside something that looks like a text input.
 * This is particularly useful to determine if a keyboard event inside this element should take priority over hotkey
 * bindings / keyboard shortcut handlers.
 *
 * @returns true if the element is inside a text input
 */
function elementIsTextInput(elem) {
  // we check these cases for unit testing, but this should not happen
  // during normal operation
  if (elem == null || elem.closest == null) {
    return false;
  }
  var editable = elem.closest("input, textarea, [contenteditable=true]");
  if (editable == null) {
    return false;
  }
  // don't let checkboxes, switches, and radio buttons prevent hotkey behavior
  if (editable.tagName.toLowerCase() === "input") {
    var inputType = editable.type;
    if (inputType === "checkbox" || inputType === "radio") {
      return false;
    }
  }
  // don't let read-only fields prevent hotkey behavior
  if (editable.readOnly) {
    return false;
  }
  return true;
}
/**
 * Gets the active element in the document or shadow root (if an element is provided, and it's in the shadow DOM).
 */
function getActiveElement(element, options) {
  var _a;
  if (element == null) {
    return document.activeElement;
  }
  var rootNode = (_a = element.getRootNode(options)) !== null && _a !== void 0 ? _a : document;
  return rootNode.activeElement;
}
/**
 * Throttle an event on an EventTarget by wrapping it in a
 * `requestAnimationFrame` call. Returns the event handler that was bound to
 * given eventName so you can clean up after yourself.
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/Events/scroll
 */
/* istanbul ignore next */
function throttleEvent(target, eventName, newEventName) {
  var throttledFunc = throttleImpl(function (event) {
    target.dispatchEvent(new CustomEvent(newEventName, event));
  });
  target.addEventListener(eventName, throttledFunc);
  return throttledFunc;
}
/**
 * Throttle a callback by wrapping it in a `requestAnimationFrame` call. Returns
 * the throttled function.
 *
 * @see https://www.html5rocks.com/en/tutorials/speed/animations/
 */
function throttleReactEventCallback(callback, options) {
  if (options === void 0) {
    options = {};
  }
  var throttledFunc = throttleImpl(callback, function (event2) {
    if (options.preventDefault) {
      event2.preventDefault();
    }
  },
  // prevent React from reclaiming the event object before we reference it
  function (event2) {
    return event2.persist();
  });
  return throttledFunc;
}
/**
 * Throttle a method by wrapping it in a `requestAnimationFrame` call. Returns
 * the throttled function.
 */
// eslint-disable-next-line @typescript-eslint/ban-types
function throttle(method) {
  return throttleImpl(method);
}
// eslint-disable-next-line @typescript-eslint/ban-types
function throttleImpl(onAnimationFrameRequested, onBeforeIsRunningCheck, onAfterIsRunningCheck) {
  var isRunning = false;
  var func = function func() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    onBeforeIsRunningCheck === null || onBeforeIsRunningCheck === void 0 ? void 0 : onBeforeIsRunningCheck.apply(void 0, args);
    if (isRunning) {
      return;
    }
    isRunning = true;
    onAfterIsRunningCheck === null || onAfterIsRunningCheck === void 0 ? void 0 : onAfterIsRunningCheck.apply(void 0, args);
    requestAnimationFrame(function () {
      onAnimationFrameRequested.apply(void 0, args);
      isRunning = false;
    });
  };
  return func;
}
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/portal/portal.js
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */






var REACT_CONTEXT_TYPES = {
  blueprintPortalClassName: function blueprintPortalClassName(obj, key) {
    if (obj[key] != null && typeof obj[key] !== "string") {
      return new Error(PORTAL_CONTEXT_CLASS_NAME_STRING);
    }
    return undefined;
  }
};
/**
 * Portal component.
 *
 * This component detaches its contents and re-attaches them to document.body.
 * Use it when you need to circumvent DOM z-stacking (for dialogs, popovers, etc.).
 * Any class names passed to this element will be propagated to the new container element on document.body.
 *
 * @see https://blueprintjs.com/docs/#core/components/portal
 */
var Portal = /** @class */function (_super) {
  __extends(Portal, _super);
  function Portal() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.context = {};
    _this.state = {
      hasMounted: false
    };
    _this.portalElement = null;
    return _this;
  }
  Portal.prototype.render = function () {
    // Only render `children` once this component has mounted in a browser environment, so they are
    // immediately attached to the DOM tree and can do DOM things like measuring or `autoFocus`.
    // See long comment on componentDidMount in https://reactjs.org/docs/portals.html#event-bubbling-through-portals
    if (typeof document === "undefined" || !this.state.hasMounted || this.portalElement === null) {
      return null;
    } else {
      return react_dom.createPortal(this.props.children, this.portalElement);
    }
  };
  Portal.prototype.componentDidMount = function () {
    if (this.props.container == null) {
      return;
    }
    this.portalElement = this.createContainerElement();
    this.props.container.appendChild(this.portalElement);
    /* eslint-disable-next-line react/no-did-mount-set-state */
    this.setState({
      hasMounted: true
    }, this.props.onChildrenMount);
  };
  Portal.prototype.componentDidUpdate = function (prevProps) {
    // update className prop on portal DOM element
    if (this.portalElement != null && prevProps.className !== this.props.className) {
      maybeRemoveClass(this.portalElement.classList, prevProps.className);
      maybeAddClass(this.portalElement.classList, this.props.className);
    }
  };
  Portal.prototype.componentWillUnmount = function () {
    var _a;
    (_a = this.portalElement) === null || _a === void 0 ? void 0 : _a.remove();
  };
  Portal.prototype.createContainerElement = function () {
    var container = document.createElement("div");
    container.classList.add(PORTAL);
    maybeAddClass(container.classList, this.props.className);
    if (this.context != null) {
      maybeAddClass(container.classList, this.context.blueprintPortalClassName);
    }
    return container;
  };
  Portal.displayName = "".concat(DISPLAYNAME_PREFIX, ".Portal");
  Portal.contextTypes = REACT_CONTEXT_TYPES;
  Portal.defaultProps = {
    container: typeof document !== "undefined" ? document.body : undefined
  };
  return Portal;
}(react.Component);

function maybeRemoveClass(classList, className) {
  if (className != null && className !== "") {
    classList.remove.apply(classList, className.split(" "));
  }
}
function maybeAddClass(classList, className) {
  if (className != null && className !== "") {
    classList.add.apply(classList, className.split(" "));
  }
}
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/overlay/overlay.js
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */









/**
 * Overlay component.
 *
 * @see https://blueprintjs.com/docs/#core/components/overlay
 */
var Overlay = /** @class */function (_super) {
  __extends(Overlay, _super);
  function Overlay() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.isAutoFocusing = false;
    _this.state = {
      hasEverOpened: _this.props.isOpen
    };
    // an HTMLElement that contains the backdrop and any children, to query for focus target
    _this.containerElement = null;
    // An empty, keyboard-focusable div at the beginning of the Overlay content
    _this.startFocusTrapElement = null;
    // An empty, keyboard-focusable div at the end of the Overlay content
    _this.endFocusTrapElement = null;
    _this.refHandlers = {
      // HACKHACK: see https://github.com/palantir/blueprint/issues/3979
      /* eslint-disable-next-line react/no-find-dom-node */
      container: function container(ref) {
        return _this.containerElement = (0,react_dom.findDOMNode)(ref);
      },
      endFocusTrap: function endFocusTrap(ref) {
        return _this.endFocusTrapElement = ref;
      },
      startFocusTrap: function startFocusTrap(ref) {
        return _this.startFocusTrapElement = ref;
      }
    };
    _this.maybeRenderChild = function (child) {
      if (isFunction(child)) {
        child = child();
      }
      if (child == null) {
        return null;
      }
      // add a special class to each child element that will automatically set the appropriate
      // CSS position mode under the hood.
      var decoratedChild = typeof child === "object" ? react.cloneElement(child, {
        className: classnames_default()(child.props.className, OVERLAY_CONTENT)
      }) : react.createElement("span", {
        className: OVERLAY_CONTENT
      }, child);
      var _a = _this.props,
        onOpening = _a.onOpening,
        onOpened = _a.onOpened,
        onClosing = _a.onClosing,
        transitionDuration = _a.transitionDuration,
        transitionName = _a.transitionName;
      return react.createElement(esm_CSSTransition, {
        classNames: transitionName,
        onEntering: onOpening,
        onEntered: onOpened,
        onExiting: onClosing,
        onExited: _this.handleTransitionExited,
        timeout: transitionDuration,
        addEndListener: _this.handleTransitionAddEnd
      }, decoratedChild);
    };
    /**
     * Ensures repeatedly pressing shift+tab keeps focus inside the Overlay. Moves focus to
     * the `endFocusTrapElement` or the first keyboard-focusable element in the Overlay (excluding
     * the `startFocusTrapElement`), depending on whether the element losing focus is inside the
     * Overlay.
     */
    _this.handleStartFocusTrapElementFocus = function (e) {
      var _a;
      if (!_this.props.enforceFocus || _this.isAutoFocusing) {
        return;
      }
      // e.relatedTarget will not be defined if this was a programmatic focus event, as is the
      // case when we call this.bringFocusInsideOverlay() after a user clicked on the backdrop.
      // Otherwise, we're handling a user interaction, and we should wrap around to the last
      // element in this transition group.
      if (e.relatedTarget != null && _this.containerElement.contains(e.relatedTarget) && e.relatedTarget !== _this.endFocusTrapElement) {
        (_a = _this.endFocusTrapElement) === null || _a === void 0 ? void 0 : _a.focus({
          preventScroll: true
        });
      }
    };
    /**
     * Wrap around to the end of the dialog if `enforceFocus` is enabled.
     */
    _this.handleStartFocusTrapElementKeyDown = function (e) {
      var _a;
      if (!_this.props.enforceFocus) {
        return;
      }
      // HACKHACK: https://github.com/palantir/blueprint/issues/4165
      /* eslint-disable-next-line deprecation/deprecation */
      if (e.shiftKey && e.which === TAB) {
        var lastFocusableElement = _this.getKeyboardFocusableElements().pop();
        if (lastFocusableElement != null) {
          lastFocusableElement.focus();
        } else {
          (_a = _this.endFocusTrapElement) === null || _a === void 0 ? void 0 : _a.focus({
            preventScroll: true
          });
        }
      }
    };
    /**
     * Ensures repeatedly pressing tab keeps focus inside the Overlay. Moves focus to the
     * `startFocusTrapElement` or the last keyboard-focusable element in the Overlay (excluding the
     * `startFocusTrapElement`), depending on whether the element losing focus is inside the
     * Overlay.
     */
    _this.handleEndFocusTrapElementFocus = function (e) {
      var _a, _b;
      // No need for this.props.enforceFocus check here because this element is only rendered
      // when that prop is true.
      // During user interactions, e.relatedTarget will be defined, and we should wrap around to the
      // "start focus trap" element.
      // Otherwise, we're handling a programmatic focus event, which can only happen after a user
      // presses shift+tab from the first focusable element in the overlay.
      if (e.relatedTarget != null && _this.containerElement.contains(e.relatedTarget) && e.relatedTarget !== _this.startFocusTrapElement) {
        var firstFocusableElement = _this.getKeyboardFocusableElements().shift();
        // ensure we don't re-focus an already active element by comparing against e.relatedTarget
        if (!_this.isAutoFocusing && firstFocusableElement != null && firstFocusableElement !== e.relatedTarget) {
          firstFocusableElement.focus();
        } else {
          (_a = _this.startFocusTrapElement) === null || _a === void 0 ? void 0 : _a.focus({
            preventScroll: true
          });
        }
      } else {
        var lastFocusableElement = _this.getKeyboardFocusableElements().pop();
        if (lastFocusableElement != null) {
          lastFocusableElement.focus();
        } else {
          // Keeps focus within Overlay even if there are no keyboard-focusable children
          (_b = _this.startFocusTrapElement) === null || _b === void 0 ? void 0 : _b.focus({
            preventScroll: true
          });
        }
      }
    };
    _this.handleTransitionExited = function (node) {
      var _a, _b;
      if (_this.props.shouldReturnFocusOnClose && _this.lastActiveElementBeforeOpened instanceof HTMLElement) {
        _this.lastActiveElementBeforeOpened.focus();
      }
      (_b = (_a = _this.props).onClosed) === null || _b === void 0 ? void 0 : _b.call(_a, node);
    };
    _this.handleBackdropMouseDown = function (e) {
      var _a;
      var _b = _this.props,
        backdropProps = _b.backdropProps,
        canOutsideClickClose = _b.canOutsideClickClose,
        enforceFocus = _b.enforceFocus,
        onClose = _b.onClose;
      if (canOutsideClickClose) {
        onClose === null || onClose === void 0 ? void 0 : onClose(e);
      }
      if (enforceFocus) {
        _this.bringFocusInsideOverlay();
      }
      (_a = backdropProps === null || backdropProps === void 0 ? void 0 : backdropProps.onMouseDown) === null || _a === void 0 ? void 0 : _a.call(backdropProps, e);
    };
    _this.handleDocumentClick = function (e) {
      var _a = _this.props,
        canOutsideClickClose = _a.canOutsideClickClose,
        isOpen = _a.isOpen,
        onClose = _a.onClose;
      // get the actual target even in the Shadow DOM
      var eventTarget = e.composed ? e.composedPath()[0] : e.target;
      var stackIndex = Overlay.openStack.indexOf(_this);
      var isClickInThisOverlayOrDescendant = Overlay.openStack.slice(stackIndex).some(function (_a) {
        var elem = _a.containerElement;
        // `elem` is the container of backdrop & content, so clicking on that container
        // should not count as being "inside" the overlay.
        return elem && elem.contains(eventTarget) && !elem.isSameNode(eventTarget);
      });
      if (isOpen && !isClickInThisOverlayOrDescendant && canOutsideClickClose) {
        // casting to any because this is a native event
        onClose === null || onClose === void 0 ? void 0 : onClose(e);
      }
    };
    /**
     * When multiple Overlays are open, this event handler is only active for the most recently
     * opened one to avoid Overlays competing with each other for focus.
     */
    _this.handleDocumentFocus = function (e) {
      // get the actual target even in the Shadow DOM
      var eventTarget = e.composed ? e.composedPath()[0] : e.target;
      if (_this.props.enforceFocus && _this.containerElement != null && eventTarget instanceof Node && !_this.containerElement.contains(eventTarget)) {
        // prevent default focus behavior (sometimes auto-scrolls the page)
        e.preventDefault();
        e.stopImmediatePropagation();
        _this.bringFocusInsideOverlay();
      }
    };
    _this.handleKeyDown = function (e) {
      var _a = _this.props,
        canEscapeKeyClose = _a.canEscapeKeyClose,
        onClose = _a.onClose;
      if (e.key === "Escape" && canEscapeKeyClose) {
        onClose === null || onClose === void 0 ? void 0 : onClose(e);
        // prevent other overlays from closing
        e.stopPropagation();
        // prevent browser-specific escape key behavior (Safari exits fullscreen)
        e.preventDefault();
      }
    };
    _this.handleTransitionAddEnd = function () {
      // no-op
    };
    return _this;
  }
  Overlay.getDerivedStateFromProps = function (_a) {
    var hasEverOpened = _a.isOpen;
    if (hasEverOpened) {
      return {
        hasEverOpened: hasEverOpened
      };
    }
    return null;
  };
  Overlay.prototype.render = function () {
    var _a;
    var _b;
    // oh snap! no reason to render anything at all if we're being truly lazy
    if (this.props.lazy && !this.state.hasEverOpened) {
      return null;
    }
    var _c = this.props,
      autoFocus = _c.autoFocus,
      children = _c.children,
      className = _c.className,
      enforceFocus = _c.enforceFocus,
      usePortal = _c.usePortal,
      isOpen = _c.isOpen;
    // TransitionGroup types require single array of children; does not support nested arrays.
    // So we must collapse backdrop and children into one array, and every item must be wrapped in a
    // Transition element (no ReactText allowed).
    var childrenWithTransitions = isOpen ? (_b = react.Children.map(children, this.maybeRenderChild)) !== null && _b !== void 0 ? _b : [] : [];
    var maybeBackdrop = this.maybeRenderBackdrop();
    if (maybeBackdrop !== null) {
      childrenWithTransitions.unshift(maybeBackdrop);
    }
    if (isOpen && (autoFocus || enforceFocus) && childrenWithTransitions.length > 0) {
      childrenWithTransitions.unshift(this.renderDummyElement("__start", {
        className: OVERLAY_START_FOCUS_TRAP,
        onFocus: this.handleStartFocusTrapElementFocus,
        onKeyDown: this.handleStartFocusTrapElementKeyDown,
        ref: this.refHandlers.startFocusTrap
      }));
      if (enforceFocus) {
        childrenWithTransitions.push(this.renderDummyElement("__end", {
          className: OVERLAY_END_FOCUS_TRAP,
          onFocus: this.handleEndFocusTrapElementFocus,
          ref: this.refHandlers.endFocusTrap
        }));
      }
    }
    var containerClasses = classnames_default()(OVERLAY, (_a = {}, _a[OVERLAY_OPEN] = isOpen, _a[OVERLAY_INLINE] = !usePortal, _a), className);
    var transitionGroup = react.createElement(esm_TransitionGroup, {
      appear: true,
      "aria-live": "polite",
      className: containerClasses,
      component: "div",
      onKeyDown: this.handleKeyDown,
      ref: this.refHandlers.container
    }, childrenWithTransitions);
    if (usePortal) {
      return react.createElement(Portal, {
        className: this.props.portalClassName,
        container: this.props.portalContainer
      }, transitionGroup);
    } else {
      return transitionGroup;
    }
  };
  Overlay.prototype.componentDidMount = function () {
    if (this.props.isOpen) {
      this.overlayWillOpen();
    }
  };
  Overlay.prototype.componentDidUpdate = function (prevProps) {
    if (prevProps.isOpen && !this.props.isOpen) {
      this.overlayWillClose();
    } else if (!prevProps.isOpen && this.props.isOpen) {
      this.overlayWillOpen();
    }
  };
  Overlay.prototype.componentWillUnmount = function () {
    this.overlayWillClose();
  };
  /**
   * @public for testing
   * @internal
   */
  Overlay.prototype.bringFocusInsideOverlay = function () {
    var _this = this;
    // always delay focus manipulation to just before repaint to prevent scroll jumping
    return this.requestAnimationFrame(function () {
      var _a;
      // container ref may be undefined between component mounting and Portal rendering
      // activeElement may be undefined in some rare cases in IE
      var activeElement = getActiveElement(_this.containerElement);
      if (_this.containerElement == null || activeElement == null || !_this.props.isOpen) {
        return;
      }
      var isFocusOutsideModal = !_this.containerElement.contains(activeElement);
      if (isFocusOutsideModal) {
        (_a = _this.startFocusTrapElement) === null || _a === void 0 ? void 0 : _a.focus({
          preventScroll: true
        });
        _this.isAutoFocusing = false;
      }
    });
  };
  Overlay.prototype.maybeRenderBackdrop = function () {
    var _a = this.props,
      backdropClassName = _a.backdropClassName,
      backdropProps = _a.backdropProps,
      hasBackdrop = _a.hasBackdrop,
      isOpen = _a.isOpen,
      transitionDuration = _a.transitionDuration,
      transitionName = _a.transitionName;
    if (hasBackdrop && isOpen) {
      return react.createElement(esm_CSSTransition, {
        classNames: transitionName,
        key: "__backdrop",
        timeout: transitionDuration,
        addEndListener: this.handleTransitionAddEnd
      }, react.createElement("div", _assign({}, backdropProps, {
        className: classnames_default()(OVERLAY_BACKDROP, backdropClassName, backdropProps === null || backdropProps === void 0 ? void 0 : backdropProps.className),
        onMouseDown: this.handleBackdropMouseDown
      })));
    } else {
      return null;
    }
  };
  Overlay.prototype.renderDummyElement = function (key, props) {
    var _a = this.props,
      transitionDuration = _a.transitionDuration,
      transitionName = _a.transitionName;
    return react.createElement(esm_CSSTransition, {
      classNames: transitionName,
      key: key,
      addEndListener: this.handleTransitionAddEnd,
      timeout: transitionDuration,
      unmountOnExit: true
    }, react.createElement("div", _assign({
      tabIndex: 0
    }, props)));
  };
  Overlay.prototype.getKeyboardFocusableElements = function () {
    var focusableElements = this.containerElement !== null ? Array.from(
    // Order may not be correct if children elements use tabindex values > 0.
    // Selectors derived from this SO question:
    // https://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus
    this.containerElement.querySelectorAll(['a[href]:not([tabindex="-1"])', 'button:not([disabled]):not([tabindex="-1"])', 'details:not([tabindex="-1"])', 'input:not([disabled]):not([tabindex="-1"])', 'select:not([disabled]):not([tabindex="-1"])', 'textarea:not([disabled]):not([tabindex="-1"])', '[tabindex]:not([tabindex="-1"])'].join(","))) : [];
    return focusableElements.filter(function (el) {
      return !el.classList.contains(OVERLAY_START_FOCUS_TRAP) && !el.classList.contains(OVERLAY_END_FOCUS_TRAP);
    });
  };
  Overlay.prototype.overlayWillClose = function () {
    document.removeEventListener("focus", this.handleDocumentFocus, /* useCapture */true);
    document.removeEventListener("mousedown", this.handleDocumentClick);
    var openStack = Overlay.openStack;
    var stackIndex = openStack.indexOf(this);
    if (stackIndex !== -1) {
      openStack.splice(stackIndex, 1);
      if (openStack.length > 0) {
        var lastOpenedOverlay = Overlay.getLastOpened();
        // Only bring focus back to last overlay if it had autoFocus _and_ enforceFocus enabled.
        // If `autoFocus={false}`, it's likely that the overlay never received focus in the first place,
        // so it would be surprising for us to send it there. See https://github.com/palantir/blueprint/issues/4921
        if (lastOpenedOverlay.props.autoFocus && lastOpenedOverlay.props.enforceFocus) {
          lastOpenedOverlay.bringFocusInsideOverlay();
          document.addEventListener("focus", lastOpenedOverlay.handleDocumentFocus, /* useCapture */true);
        }
      }
      if (openStack.filter(function (o) {
        return o.props.usePortal && o.props.hasBackdrop;
      }).length === 0) {
        document.body.classList.remove(OVERLAY_OPEN);
      }
    }
  };
  Overlay.prototype.overlayWillOpen = function () {
    var getLastOpened = Overlay.getLastOpened,
      openStack = Overlay.openStack;
    if (openStack.length > 0) {
      document.removeEventListener("focus", getLastOpened().handleDocumentFocus, /* useCapture */true);
    }
    openStack.push(this);
    if (this.props.autoFocus) {
      this.isAutoFocusing = true;
      this.bringFocusInsideOverlay();
    }
    if (this.props.enforceFocus) {
      // Focus events do not bubble, but setting useCapture allows us to listen in and execute
      // our handler before all others
      document.addEventListener("focus", this.handleDocumentFocus, /* useCapture */true);
    }
    if (this.props.canOutsideClickClose && !this.props.hasBackdrop) {
      document.addEventListener("mousedown", this.handleDocumentClick);
    }
    if (this.props.hasBackdrop && this.props.usePortal) {
      // add a class to the body to prevent scrolling of content below the overlay
      document.body.classList.add(OVERLAY_OPEN);
    }
    this.lastActiveElementBeforeOpened = getActiveElement(this.containerElement);
  };
  Overlay.displayName = "".concat(DISPLAYNAME_PREFIX, ".Overlay");
  Overlay.defaultProps = {
    autoFocus: true,
    backdropProps: {},
    canEscapeKeyClose: true,
    canOutsideClickClose: true,
    enforceFocus: true,
    hasBackdrop: true,
    isOpen: false,
    lazy: true,
    shouldReturnFocusOnClose: true,
    transitionDuration: 300,
    transitionName: OVERLAY,
    usePortal: true
  };
  Overlay.openStack = [];
  Overlay.getLastOpened = function () {
    return Overlay.openStack[Overlay.openStack.length - 1];
  };
  return Overlay;
}(AbstractPureComponent2);

;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/dialog/dialog.js
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */











/**
 * Dialog component.
 *
 * @see https://blueprintjs.com/docs/#core/components/dialog
 */
var Dialog = /** @class */function (_super) {
  __extends(Dialog, _super);
  function Dialog(props) {
    var _this = _super.call(this, props) || this;
    var id = uniqueId("bp-dialog");
    _this.titleId = "title-".concat(id);
    return _this;
  }
  Dialog.prototype.render = function () {
    return react.createElement(Overlay, _assign({}, this.props, {
      className: OVERLAY_SCROLL_CONTAINER,
      hasBackdrop: true
    }), react.createElement("div", {
      className: DIALOG_CONTAINER,
      ref: this.props.containerRef
    }, react.createElement("div", {
      className: classnames_default()(DIALOG, this.props.className),
      role: "dialog",
      "aria-labelledby": this.props["aria-labelledby"] || (this.props.title ? this.titleId : undefined),
      "aria-describedby": this.props["aria-describedby"],
      style: this.props.style
    }, this.maybeRenderHeader(), this.props.children)));
  };
  Dialog.prototype.validateProps = function (props) {
    if (props.title == null) {
      if (props.icon != null) {
        console.warn(DIALOG_WARN_NO_HEADER_ICON);
      }
      if (props.isCloseButtonShown != null) {
        console.warn(DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);
      }
    }
  };
  Dialog.prototype.maybeRenderCloseButton = function () {
    // show close button if prop is undefined or null
    // this gives us a behavior as if the default value were `true`
    if (this.props.isCloseButtonShown !== false) {
      return react.createElement(Button, {
        "aria-label": "Close",
        className: DIALOG_CLOSE_BUTTON,
        icon: react.createElement(Icon, {
          icon: "cross",
          size: IconSize.STANDARD
        }),
        minimal: true,
        onClick: this.props.onClose
      });
    } else {
      return undefined;
    }
  };
  Dialog.prototype.maybeRenderHeader = function () {
    var _a = this.props,
      icon = _a.icon,
      title = _a.title;
    if (title == null) {
      return undefined;
    }
    return react.createElement("div", {
      className: DIALOG_HEADER
    }, react.createElement(Icon, {
      icon: icon,
      size: IconSize.STANDARD,
      "aria-hidden": true,
      tabIndex: -1
    }), react.createElement(H6, {
      id: this.titleId
    }, title), this.maybeRenderCloseButton());
  };
  Dialog.defaultProps = {
    canOutsideClickClose: true,
    isOpen: false
  };
  Dialog.displayName = "".concat(DISPLAYNAME_PREFIX, ".Dialog");
  return Dialog;
}(AbstractPureComponent2);

;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/dialog/dialogBody.js
/*
 * Copyright 2023 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */




/**
 * Dialog body component.
 *
 * @see https://blueprintjs.com/docs/#core/components/dialog.dialog-body-props
 */
var DialogBody = /** @class */function (_super) {
  __extends(DialogBody, _super);
  function DialogBody() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  DialogBody.prototype.render = function () {
    var _a;
    return react.createElement("div", {
      role: "dialogbody",
      className: classnames_default()(DIALOG_BODY, this.props.className, (_a = {}, _a[DIALOG_BODY_SCROLL_CONTAINER] = this.props.useOverflowScrollContainer, _a))
    }, this.props.children);
  };
  DialogBody.defaultProps = {
    useOverflowScrollContainer: true
  };
  return DialogBody;
}(AbstractPureComponent2);

;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/forms/controls.js
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// we need some empty interfaces to show up in docs
// HACKHACK: these components should go in separate files
/* eslint-disable max-classes-per-file, @typescript-eslint/no-empty-interface */




/**
 * Renders common control elements, with additional props to customize appearance.
 * This component is not exported and is only used in this file for `Checkbox`, `Radio`, and `Switch` below.
 */
var Control = function Control(_a) {
  var _b;
  var alignIndicator = _a.alignIndicator,
    children = _a.children,
    className = _a.className,
    indicatorChildren = _a.indicatorChildren,
    inline = _a.inline,
    inputRef = _a.inputRef,
    label = _a.label,
    labelElement = _a.labelElement,
    large = _a.large,
    style = _a.style,
    type = _a.type,
    typeClassName = _a.typeClassName,
    _c = _a.tagName,
    tagName = _c === void 0 ? "label" : _c,
    htmlProps = __rest(_a, ["alignIndicator", "children", "className", "indicatorChildren", "inline", "inputRef", "label", "labelElement", "large", "style", "type", "typeClassName", "tagName"]);
  var classes = classnames_default()(CONTROL, typeClassName, (_b = {}, _b[DISABLED] = htmlProps.disabled, _b[INLINE] = inline, _b[LARGE] = large, _b), alignmentClass(alignIndicator), className);
  return react.createElement(tagName, {
    className: classes,
    style: style
  }, react.createElement("input", _assign({}, htmlProps, {
    ref: inputRef,
    type: type
  })), react.createElement("span", {
    className: CONTROL_INDICATOR
  }, indicatorChildren), label, labelElement, children);
};
/**
 * Switch component.
 *
 * @see https://blueprintjs.com/docs/#core/components/switch
 */
var Switch = /** @class */function (_super) {
  __extends(Switch, _super);
  function Switch() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Switch.prototype.render = function () {
    var _a = this.props,
      innerLabelChecked = _a.innerLabelChecked,
      innerLabel = _a.innerLabel,
      controlProps = __rest(_a, ["innerLabelChecked", "innerLabel"]);
    var switchLabels = innerLabel || innerLabelChecked ? [react.createElement("div", {
      key: "checked",
      className: CONTROL_INDICATOR_CHILD
    }, react.createElement("div", {
      className: SWITCH_INNER_TEXT
    }, innerLabelChecked ? innerLabelChecked : innerLabel)), react.createElement("div", {
      key: "unchecked",
      className: CONTROL_INDICATOR_CHILD
    }, react.createElement("div", {
      className: SWITCH_INNER_TEXT
    }, innerLabel))] : null;
    return react.createElement(Control, _assign({}, controlProps, {
      type: "checkbox",
      typeClassName: SWITCH,
      indicatorChildren: switchLabels
    }));
  };
  Switch.displayName = "".concat(DISPLAYNAME_PREFIX, ".Switch");
  return Switch;
}(AbstractPureComponent2);

/**
 * Radio component.
 *
 * @see https://blueprintjs.com/docs/#core/components/radio
 */
var Radio = /** @class */function (_super) {
  __extends(Radio, _super);
  function Radio() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Radio.prototype.render = function () {
    return react.createElement(Control, _assign({}, this.props, {
      type: "radio",
      typeClassName: RADIO
    }));
  };
  Radio.displayName = "".concat(DISPLAYNAME_PREFIX, ".Radio");
  return Radio;
}(AbstractPureComponent2);

/**
 * Checkbox component.
 *
 * @see https://blueprintjs.com/docs/#core/components/checkbox
 */
var Checkbox = /** @class */function (_super) {
  __extends(Checkbox, _super);
  function Checkbox() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.state = {
      indeterminate: _this.props.indeterminate || _this.props.defaultIndeterminate || false
    };
    // must maintain internal reference for `indeterminate` support
    _this.input = null;
    _this.handleInputRef = refHandler(_this, "input", _this.props.inputRef);
    _this.handleChange = function (evt) {
      var _a, _b;
      var indeterminate = evt.target.indeterminate;
      // update state immediately only if uncontrolled
      if (_this.props.indeterminate == null) {
        _this.setState({
          indeterminate: indeterminate
        });
      }
      // otherwise wait for props change. always invoke handler.
      (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, evt);
    };
    return _this;
  }
  Checkbox.getDerivedStateFromProps = function (_a) {
    var indeterminate = _a.indeterminate;
    // put props into state if controlled by props
    if (indeterminate != null) {
      return {
        indeterminate: indeterminate
      };
    }
    return null;
  };
  Checkbox.prototype.render = function () {
    var _a = this.props,
      defaultIndeterminate = _a.defaultIndeterminate,
      indeterminate = _a.indeterminate,
      controlProps = __rest(_a, ["defaultIndeterminate", "indeterminate"]);
    return react.createElement(Control, _assign({}, controlProps, {
      inputRef: this.handleInputRef,
      onChange: this.handleChange,
      type: "checkbox",
      typeClassName: CHECKBOX
    }));
  };
  Checkbox.prototype.componentDidMount = function () {
    this.updateIndeterminate();
  };
  Checkbox.prototype.componentDidUpdate = function (prevProps) {
    this.updateIndeterminate();
    if (prevProps.inputRef !== this.props.inputRef) {
      setRef(prevProps.inputRef, null);
      this.handleInputRef = refHandler(this, "input", this.props.inputRef);
      setRef(this.props.inputRef, this.input);
    }
  };
  Checkbox.prototype.updateIndeterminate = function () {
    if (this.input != null) {
      this.input.indeterminate = this.state.indeterminate;
    }
  };
  Checkbox.displayName = "".concat(DISPLAYNAME_PREFIX, ".Checkbox");
  return Checkbox;
}(AbstractPureComponent2);

;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/forms/radioGroup.js
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */







var counter = 0;
function nextName() {
  return "".concat(RadioGroup.displayName, "-").concat(counter++);
}
/**
 * Radio group component.
 *
 * @see https://blueprintjs.com/docs/#core/components/radio.radiogroup
 */
var RadioGroup = /** @class */function (_super) {
  __extends(RadioGroup, _super);
  function RadioGroup() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    // a unique name for this group, which can be overridden by `name` prop.
    _this.autoGroupName = nextName();
    return _this;
  }
  RadioGroup.prototype.render = function () {
    var label = this.props.label;
    return react.createElement("div", {
      className: this.props.className
    }, label == null ? null : react.createElement("label", {
      className: LABEL
    }, label), Array.isArray(this.props.options) ? this.renderOptions() : this.renderChildren());
  };
  RadioGroup.prototype.validateProps = function () {
    if (this.props.children != null && this.props.options != null) {
      console.warn(RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX);
    }
  };
  RadioGroup.prototype.renderChildren = function () {
    var _this = this;
    return react.Children.map(this.props.children, function (child) {
      if (isElementOfType(child, Radio)) {
        return react.cloneElement(child, _this.getRadioProps(child.props));
      } else {
        return child;
      }
    });
  };
  RadioGroup.prototype.renderOptions = function () {
    var _this = this;
    var _a;
    return (_a = this.props.options) === null || _a === void 0 ? void 0 : _a.map(function (option) {
      return react.createElement(Radio, _assign({}, _this.getRadioProps(option), {
        key: option.value,
        labelElement: option.label || option.value
      }));
    });
  };
  RadioGroup.prototype.getRadioProps = function (optionProps) {
    var name = this.props.name;
    var className = optionProps.className,
      disabled = optionProps.disabled,
      value = optionProps.value;
    return {
      checked: value === this.props.selectedValue,
      className: className,
      disabled: disabled || this.props.disabled,
      inline: this.props.inline,
      name: name == null ? this.autoGroupName : name,
      onChange: this.props.onChange,
      value: value
    };
  };
  RadioGroup.displayName = "".concat(DISPLAYNAME_PREFIX, ".RadioGroup");
  return RadioGroup;
}(AbstractPureComponent2);

;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/navbar/navbarDivider.js
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */





// this component is simple enough that tests would be purely tautological.
/* istanbul ignore next */
var NavbarDivider = /** @class */function (_super) {
  __extends(NavbarDivider, _super);
  function NavbarDivider() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  NavbarDivider.prototype.render = function () {
    var _a = this.props,
      className = _a.className,
      htmlProps = __rest(_a, ["className"]);
    return react.createElement("div", _assign({
      className: classnames_default()(NAVBAR_DIVIDER, className)
    }, htmlProps));
  };
  NavbarDivider.displayName = "".concat(DISPLAYNAME_PREFIX, ".NavbarDivider");
  return NavbarDivider;
}(AbstractPureComponent2);

;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/navbar/navbarGroup.js
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */





// this component is simple enough that tests would be purely tautological.
/* istanbul ignore next */
var NavbarGroup = /** @class */function (_super) {
  __extends(NavbarGroup, _super);
  function NavbarGroup() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  NavbarGroup.prototype.render = function () {
    var _a = this.props,
      align = _a.align,
      children = _a.children,
      className = _a.className,
      htmlProps = __rest(_a, ["align", "children", "className"]);
    var classes = classnames_default()(NAVBAR_GROUP, alignmentClass(align), className);
    return react.createElement("div", _assign({
      className: classes
    }, htmlProps), children);
  };
  NavbarGroup.displayName = "".concat(DISPLAYNAME_PREFIX, ".NavbarGroup");
  NavbarGroup.defaultProps = {
    align: Alignment.LEFT
  };
  return NavbarGroup;
}(AbstractPureComponent2);

;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/navbar/navbarHeading.js
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */





// this component is simple enough that tests would be purely tautological.
/* istanbul ignore next */
var NavbarHeading = /** @class */function (_super) {
  __extends(NavbarHeading, _super);
  function NavbarHeading() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  NavbarHeading.prototype.render = function () {
    var _a = this.props,
      children = _a.children,
      className = _a.className,
      htmlProps = __rest(_a, ["children", "className"]);
    return react.createElement("div", _assign({
      className: classnames_default()(NAVBAR_HEADING, className)
    }, htmlProps), children);
  };
  NavbarHeading.displayName = "".concat(DISPLAYNAME_PREFIX, ".NavbarHeading");
  return NavbarHeading;
}(AbstractPureComponent2);

;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/navbar/navbar.js
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */








// this component is simple enough that tests would be purely tautological.
/* istanbul ignore next */
/**
 * Navbar component.
 *
 * @see https://blueprintjs.com/docs/#core/components/navbar
 */
var Navbar = /** @class */function (_super) {
  __extends(Navbar, _super);
  function Navbar() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Navbar.prototype.render = function () {
    var _a;
    var _b = this.props,
      children = _b.children,
      className = _b.className,
      fixedToTop = _b.fixedToTop,
      htmlProps = __rest(_b, ["children", "className", "fixedToTop"]);
    var classes = classnames_default()(NAVBAR, (_a = {}, _a[FIXED_TOP] = fixedToTop, _a), className);
    return react.createElement("div", _assign({
      className: classes
    }, htmlProps), children);
  };
  Navbar.displayName = "".concat(DISPLAYNAME_PREFIX, ".Navbar");
  Navbar.Divider = NavbarDivider;
  Navbar.Group = NavbarGroup;
  Navbar.Heading = NavbarHeading;
  return Navbar;
}(AbstractPureComponent2);

;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/popover/popoverSharedProps.js
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/** `Position` with `"auto"` values, used by `Popover` and `Tooltip`. */
var PopoverPosition = _assign(_assign({}, Position), {
  AUTO: "auto",
  AUTO_END: "auto-end",
  AUTO_START: "auto-start"
});
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/core/lib/esm/components/index.js
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var ContextMenu = (/* unused pure expression or super */ null && (contextMenu));

































































// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(184);
;// CONCATENATED MODULE: ./src/components/layout/Footer.tsx
function Footer(){return/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"bp4-ui-text footer floating-box",children:"Footer links"});}
;// CONCATENATED MODULE: ./src/consts.ts
var ACTIVE_AREA=20;
;// CONCATENATED MODULE: ./src/fractals/utils.ts
function getSize(fullScreen){var windowHeight=window.innerHeight;var windowWidth=window.innerWidth;return getCanvasSize(windowHeight,windowWidth,fullScreen);}function getCanvasSize(windowHeight,windowWidth,fullScreen){var size=windowHeight<windowWidth?windowHeight-10:windowWidth;if(!fullScreen){var whitespace=30;size=windowHeight-whitespace<0.75*windowWidth?windowHeight-whitespace-15:0.75*windowWidth;}return Math.round(size);}function findAffectedPoint(points,cursorPosition){for(var point in points){if(withinRange(points[point],cursorPosition,ACTIVE_AREA))return point;}return null;}function withinRange(point,cursorPosition,range){if(point[0]>cursorPosition[0]+range)return false;if(point[0]<cursorPosition[0]-range)return false;if(point[1]>cursorPosition[1]+range)return false;if(point[1]<cursorPosition[1]-range)return false;return true;}function rescale(oldSize,newSize,points){if(oldSize===null)return points;var newPoints={};var ratio=newSize/oldSize;for(var p in points){var newPoint=[points[p][0]*ratio,points[p][1]*ratio];newPoints[p]=newPoint;}return newPoints;}function calculateActiveArea(point,extent){return{a:[point[0]-extent,point[1]+extent],b:[point[0]+extent,point[1]+extent],c:[point[0]+extent,point[1]-extent],d:[point[0]-extent,point[1]-extent]};}function highlightActiveArea(point,ctx,colour){var surroundingSquare=calculateActiveArea(point,ACTIVE_AREA);ctx.beginPath();var a=surroundingSquare.a,b=surroundingSquare.b,c=surroundingSquare.c,d=surroundingSquare.d;ctx.moveTo.apply(ctx,toConsumableArray_toConsumableArray(a));ctx.lineTo.apply(ctx,toConsumableArray_toConsumableArray(b));ctx.lineTo.apply(ctx,toConsumableArray_toConsumableArray(c));ctx.lineTo.apply(ctx,toConsumableArray_toConsumableArray(d));ctx.lineTo.apply(ctx,toConsumableArray_toConsumableArray(a));ctx.lineWidth=1;ctx.strokeStyle=colour||'#5d1a5d';ctx.stroke();}function getInitialPixelMap(canvasSize){var pixelMap={};var x=1;while(x<=canvasSize){pixelMap[x]={};var y=1;while(y<=canvasSize){pixelMap[x][y]=null;y++;}x++;}return pixelMap;}function findLineEnd(start,angle,length){var width=Math.floor(Math.sin(angle)*length);var height=Math.floor(Math.cos(angle)*length);return[start[0]-width,start[1]-height];}function getQuadraticCurveParams(start,angle,length,heightRatio,distanceRatio,side){var rightAngle=side==='left'?angle+Math.PI/2:angle-Math.PI/2;var _findLineEnd=findLineEnd(start,angle,length),_findLineEnd2=slicedToArray_slicedToArray(_findLineEnd,2),x=_findLineEnd2[0],y=_findLineEnd2[1];var midPoint=findLineEnd(start,angle,length*heightRatio);var _findLineEnd3=findLineEnd(midPoint,angle+rightAngle,length*distanceRatio),_findLineEnd4=slicedToArray_slicedToArray(_findLineEnd3,2),cpX=_findLineEnd4[0],cpY=_findLineEnd4[1];return[cpX,cpY,x,y];}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/1-sierpinski/algorithm.ts
function equilateralTriangle(size){var length=0.9*size;var startX=0.05*size;var startY=0.95*size;var a=[startX,startY];var b=[startX+length,startY];var c=[startX+0.5*length,startY+Math.cos(60)*length];return{a:a,b:b,c:c};}function middle(a,b){var xMax=Math.max(a[0],b[0]);var xMin=Math.min(a[0],b[0]);var yMax=Math.max(a[1],b[1]);var yMin=Math.min(a[1],b[1]);var x=xMin+(xMax-xMin)/2;var y=yMin+(yMax-yMin)/2;return[x,y];}function getNewTriangles(points){var a=points.a,b=points.b,c=points.c;return[{a:a,b:middle(a,b),c:middle(a,c)},{a:b,b:middle(b,c),c:middle(a,b)},{a:c,b:middle(c,b),c:middle(c,a)}];}function cutOutMiddleTriangle(points,ctx){var a=points.a,b=points.b,c=points.c;var newPoints={a:middle(a,b),b:middle(b,c),c:middle(c,a)};ctx.fillStyle="black";ctx.beginPath();drawTriangle(newPoints,ctx);ctx.closePath();ctx.fill();}function drawTriangle(points,ctx){var a=points.a,b=points.b,c=points.c;ctx.moveTo.apply(ctx,toConsumableArray_toConsumableArray(a));ctx.lineTo.apply(ctx,toConsumableArray_toConsumableArray(b));ctx.lineTo.apply(ctx,toConsumableArray_toConsumableArray(c));ctx.lineTo.apply(ctx,toConsumableArray_toConsumableArray(a));}function fillFirstTriangle(points,ctx){ctx.fillStyle="white";drawTriangle(points,ctx);ctx.fill();}function generate(points,iterations,ctx){drawTriangle(points,ctx);if(iterations===1){return;};cutOutMiddleTriangle(points,ctx);var newTriangles=getNewTriangles(points);newTriangles.forEach(function(triangle){generate(triangle,iterations-1,ctx);});}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/1-sierpinski/draw.ts
function draw_draw(args){var canvas=args.canvas,size=args.size;var parameters=args.parameters;var ctx=canvas.getContext("2d");canvas.style.background="black";var first={a:parameters.a,b:parameters.b,c:parameters.c};if(ctx){ctx===null||ctx===void 0?void 0:ctx.clearRect(0,0,size,size);ctx.beginPath();fillFirstTriangle(first,ctx);generate(first,parameters["iterations"],ctx);ctx.closePath();highlightActiveArea(first.a,ctx);highlightActiveArea(first.b,ctx);highlightActiveArea(first.c,ctx);}}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js

function defineProperty_defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      defineProperty_defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
;// CONCATENATED MODULE: ./src/components/icons/IconWrapper.tsx
function IconWrapper(props){return/*#__PURE__*/(0,jsx_runtime.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:props.width||16,height:props.height||16,fill:props.fill||'#31cece',className:props.className,viewBox:"0 0 16 16",children:props.children});}
;// CONCATENATED MODULE: ./src/components/icons/EnterFullScreen.tsx
function EnterFullScreen(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(IconWrapper,_objectSpread2(_objectSpread2({className:"bi bi-fullscreen"},props),{},{children:/*#__PURE__*/(0,jsx_runtime.jsx)("path",{d:"M1.5 1a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4A1.5 1.5 0 0 1 1.5 0h4a.5.5 0 0 1 0 1h-4zM10 .5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 16 1.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5zM.5 10a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 0 14.5v-4a.5.5 0 0 1 .5-.5zm15 0a.5.5 0 0 1 .5.5v4a1.5 1.5 0 0 1-1.5 1.5h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5z"})}));}
;// CONCATENATED MODULE: ./src/components/icons/ExitFullScreen.tsx
function ExitFullScreen(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(IconWrapper,_objectSpread2(_objectSpread2({className:"bi bi-fullscreen-exit"},props),{},{children:/*#__PURE__*/(0,jsx_runtime.jsx)("path",{d:"M5.5 0a.5.5 0 0 1 .5.5v4A1.5 1.5 0 0 1 4.5 6h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5zm5 0a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 10 4.5v-4a.5.5 0 0 1 .5-.5zM0 10.5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 6 11.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5zm10 1a1.5 1.5 0 0 1 1.5-1.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4z"})}));}
;// CONCATENATED MODULE: ./src/fractals/default-view/description-utils.tsx
function Def(props){var _useState=(0,react.useState)(false),_useState2=slicedToArray_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];function toggleOpen(){setOpen(open?false:true);}function handleKeyboardInput(e){if(e.key==='Enter'){toggleOpen();}if(e.key==="Escape"){setOpen(false);}}var def=props.definitionObject?/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"def-definition",children:props.definitionObject}):/*#__PURE__*/(0,jsx_runtime.jsxs)("span",{className:"def-definition",children:["( ",props.definition,") "]});return/*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[/*#__PURE__*/(0,jsx_runtime.jsxs)("span",{className:"def-phrase",onClick:toggleOpen,onKeyDown:function onKeyDown(e){return handleKeyboardInput(e);},tabIndex:props.tabIndex,children:[props.phrase," "]}),open&&def]});}function Media(props){var _useState3=(0,react.useState)(false),_useState4=slicedToArray_slicedToArray(_useState3,2),dialogOpen=_useState4[0],setDialogOpen=_useState4[1];function handleClick(){setDialogOpen(true);}function handleKeyboardInput(e){if(e.key==='Enter'){setDialogOpen(dialogOpen?false:true);}}var windowWidth=window.innerWidth;return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"image-container",onClick:handleClick,onKeyDown:handleKeyboardInput,children:[/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"thumbnail-container",tabIndex:props.tabIndex,children:[/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"img-instruction",children:"Click or press enter to see larger media"}),!props.video&&/*#__PURE__*/(0,jsx_runtime.jsx)("img",{alt:props.alt,className:"img",src:props.src}),props.video&&/*#__PURE__*/(0,jsx_runtime.jsx)("video",{width:windowWidth/4,autoPlay:true,muted:true,children:/*#__PURE__*/(0,jsx_runtime.jsx)("source",{src:props.src,type:"video/mp4"})})]}),/*#__PURE__*/(0,jsx_runtime.jsx)(Dialog,{autoFocus:true,canEscapeKeyClose:true,canOutsideClickClose:true,isOpen:dialogOpen,onClose:function onClose(){return setDialogOpen(false);},children:/*#__PURE__*/(0,jsx_runtime.jsxs)(DialogBody,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("p",{className:"dialog-info",children:"Press 'Esc' or click outside to close"}),!props.video&&/*#__PURE__*/(0,jsx_runtime.jsx)("img",{alt:props.alt,src:props.src,className:"dialog-img"}),props.video&&/*#__PURE__*/(0,jsx_runtime.jsx)("video",{controls:true,children:/*#__PURE__*/(0,jsx_runtime.jsx)("source",{src:props.src,type:"video/mp4"})})]})})]});}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/1-sierpinski/description.tsx
function Description(props){var ti=props.ti;return/*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"What is a fractal? Instead of using a formal definition, we will start with a simple example: Sierpi\u0144ski triangle."}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["Let's look at the big",/*#__PURE__*/(0,jsx_runtime.jsx)(Def,{phrase:" equilateral triangle",definition:"a triangle where all the sides are the same length",tabIndex:ti+1}),"on the left. If we join up the the midpoints of its sides, we get a smaller equilateral triangle. When we \u201Ccut\u201D it out like in the image, we are left with three small equilateral triangles and a \u201Chole\u201D in the middle. We can then cut out a middle triangle from each of those triangles we have left, and end up with twelve even smaller triangles. And then, we can cut out the middles from those twelve triangles, and so on\u2026"]}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Here, it would be useful to introduce a few terms."}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("strong",{children:"Iteration"})," \u2013 one step in the process that consists of repeating the same step. Here, we will consider one iteration as cutting out the middle out of every newly created triangle on the screen."]}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{className:"ex",children:"Use the slider or the number input to set the number of iterations yourself. The animation will then stop, and the image will show the triangle after the selected number of iterations."}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Creating any fractal involves iterative processes."}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("strong",{children:"Recursion"})," - you have probably noticed that every smaller triangle inside the Sierpi\u0144ski is also a Sierpi\u0144ski triangle. We could say that to make a Sierpi\u0144ski triangle, you need to put four Sierpi\u0144ski triangles together in a pyramid shape. This sounds similar to the old programming joke: \"to understand recursion, you need to understand recursion\". If an ",/*#__PURE__*/(0,jsx_runtime.jsx)(Def,{phrase:"algorithm",definition:"a sequence of instructions one needs to follow to achieve a specific outcome, e.g. a recipe - a list of things a human needs to do to cook a particular meal, or a computer program - a set of instructions for a computer to follow for anything a computer is supposed to do",tabIndex:ti+2})," involves invoking itself, it is recursive. Recursion is also known for being confusing to beginners."]}),/*#__PURE__*/(0,jsx_runtime.jsx)("h3",{children:"Sierpi\u0144ski triangle"}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"If you repeat the process described above infinite times, you get the Sierpi\u0144ski triangle, also known as Sierpi\u0144ski gasket or Sierpi\u0144ski sieve. Of course, you are not looking at an actual Sierpi\u0144ski triangle, because it would take literally forever for your device to generate an image by cutting out an infinite number of triangles out of infinite number of bigger triangles."}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"This pattern of triangles was first described in mathematical terms by Wac\u0142aw Sierpi\u0144ski in 1915.  Even though at the time the idea of fractals was not formed yet, it is a simple example of a fractal."}),/*#__PURE__*/(0,jsx_runtime.jsx)("h3",{children:"So, what makes it a fractal?"}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["Every smaller triangle inside a Sierpi\u0144ski triangle is a Sierpi\u0144ski triangle. If you zoomed in on an image in one of the corners, it would look the same no matter how much you zoom. This property is called ",/*#__PURE__*/(0,jsx_runtime.jsx)("strong",{children:"self-similarity"}),". In case of Sierpi\u0144ski triangle, all the smaller Sierpi\u0144ski triangles inside it are identical, but for some fractals the smaller parts are only similar."]}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{className:"ex",children:"Drag the corners of the outer triangle to change its shape (or use keyboard controls). All the inner triangles will become its smaller copies, and make a different self-similar fractal."}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{className:"info",children:[" Click on the ",/*#__PURE__*/(0,jsx_runtime.jsx)(EnterFullScreen,{})," icon to get a full screen view with no extra text and links. You can exit the full screen mode by using ",/*#__PURE__*/(0,jsx_runtime.jsx)(ExitFullScreen,{})," icon."]}),/*#__PURE__*/(0,jsx_runtime.jsx)("h3",{children:"More facts about Sierpi\u0144ski triangle"}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"The area of a (true) Sierpi\u0144ski triangle is 0. If you cut out an infinite number of holes out of a triangle, you have no area left."}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"There are many alternative ways of constructing a Sierpi\u0144ski triangle; we only showed the simplest one."}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"In the original paper, Sierpi\u0144ski triangle was described as a curve that branches out on its every point. Still, it's probably easier to understand it in terms of removing triangles from a larger triangle"})]});}
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/popover2/lib/esm/classes.js
/* !
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var classes_NS = getClassNamespace();
var CONTEXT_MENU2 = "".concat(classes_NS, "-context-menu2");
var CONTEXT_MENU2_VIRTUAL_TARGET = "".concat(CONTEXT_MENU2, "-virtual-target");
var CONTEXT_MENU2_POPOVER2 = "".concat(CONTEXT_MENU2, "-popover2");
var CONTEXT_MENU2_BACKDROP = "".concat(CONTEXT_MENU2, "-backdrop");
var POPOVER2 = "".concat(classes_NS, "-popover2");
var POPOVER2_ARROW = "".concat(POPOVER2, "-arrow");
var POPOVER2_BACKDROP = "".concat(POPOVER2, "-backdrop");
var POPOVER2_CAPTURING_DISMISS = "".concat(POPOVER2, "-capturing-dismiss");
var POPOVER2_CONTENT = "".concat(POPOVER2, "-content");
var POPOVER2_CONTENT_PLACEMENT = "".concat(POPOVER2, "-placement");
var POPOVER2_CONTENT_SIZING = "".concat(POPOVER2_CONTENT, "-sizing");
var POPOVER2_DISMISS = "".concat(POPOVER2, "-dismiss");
var POPOVER2_DISMISS_OVERRIDE = "".concat(POPOVER2_DISMISS, "-override");
var POPOVER2_MATCH_TARGET_WIDTH = "".concat(POPOVER2, "-match-target-width");
var POPOVER2_OPEN = "".concat(POPOVER2, "-open");
var POPOVER2_POPPER_ESCAPED = "".concat(POPOVER2, "-popper-escaped");
var POPOVER2_REFERENCE_HIDDEN = "".concat(POPOVER2, "-reference-hidden");
var POPOVER2_TARGET = "".concat(POPOVER2, "-target");
var POPOVER2_TRANSITION_CONTAINER = "".concat(POPOVER2, "-transition-container");
var TOOLTIP2 = "".concat(classes_NS, "-tooltip2");
var TOOLTIP2_INDICATOR = "".concat(TOOLTIP2, "-indicator");
;// CONCATENATED MODULE: ./node_modules/react-popper/lib/esm/Manager.js

var ManagerReferenceNodeContext = react.createContext();
var ManagerReferenceNodeSetterContext = react.createContext();
function Manager(_ref) {
  var children = _ref.children;
  var _React$useState = react.useState(null),
    referenceNode = _React$useState[0],
    setReferenceNode = _React$useState[1];
  var hasUnmounted = react.useRef(false);
  react.useEffect(function () {
    return function () {
      hasUnmounted.current = true;
    };
  }, []);
  var handleSetReferenceNode = react.useCallback(function (node) {
    if (!hasUnmounted.current) {
      setReferenceNode(node);
    }
  }, []);
  return /*#__PURE__*/react.createElement(ManagerReferenceNodeContext.Provider, {
    value: referenceNode
  }, /*#__PURE__*/react.createElement(ManagerReferenceNodeSetterContext.Provider, {
    value: handleSetReferenceNode
  }, children));
}
// EXTERNAL MODULE: ./node_modules/warning/warning.js
var warning_warning = __webpack_require__(391);
var warning_default = /*#__PURE__*/__webpack_require__.n(warning_warning);
;// CONCATENATED MODULE: ./node_modules/react-popper/lib/esm/utils.js


/**
 * Takes an argument and if it's an array, returns the first item in the array,
 * otherwise returns the argument. Used for Preact compatibility.
 */
var unwrapArray = function unwrapArray(arg) {
  return Array.isArray(arg) ? arg[0] : arg;
};
/**
 * Takes a maybe-undefined function and arbitrary args and invokes the function
 * only if it is defined.
 */

var safeInvoke = function safeInvoke(fn) {
  if (typeof fn === 'function') {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return fn.apply(void 0, args);
  }
};
/**
 * Sets a ref using either a ref callback or a ref object
 */

var utils_setRef = function setRef(ref, node) {
  // if its a function call it
  if (typeof ref === 'function') {
    return safeInvoke(ref, node);
  } // otherwise we should treat it as a ref object
  else if (ref != null) {
    ref.current = node;
  }
};
/**
 * Simple ponyfill for Object.fromEntries
 */

var fromEntries = function fromEntries(entries) {
  return entries.reduce(function (acc, _ref) {
    var key = _ref[0],
      value = _ref[1];
    acc[key] = value;
    return acc;
  }, {});
};
/**
 * Small wrapper around `useLayoutEffect` to get rid of the warning on SSR envs
 */

var useIsomorphicLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? react.useLayoutEffect : react.useEffect;
;// CONCATENATED MODULE: ./node_modules/react-popper/lib/esm/Reference.js




function Reference(_ref) {
  var children = _ref.children,
    innerRef = _ref.innerRef;
  var setReferenceNode = react.useContext(ManagerReferenceNodeSetterContext);
  var refHandler = react.useCallback(function (node) {
    utils_setRef(innerRef, node);
    safeInvoke(setReferenceNode, node);
  }, [innerRef, setReferenceNode]); // ran on unmount
  // eslint-disable-next-line react-hooks/exhaustive-deps

  react.useEffect(function () {
    return function () {
      return utils_setRef(innerRef, null);
    };
  }, []);
  react.useEffect(function () {
    warning_default()(Boolean(setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');
  }, [setReferenceNode]);
  return unwrapArray(children)({
    ref: refHandler
  });
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindow.js
function getWindow(node) {
  if (node == null) {
    return window;
  }
  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }
  return node;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js

function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}
function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}
function isShadowRoot(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }
  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}

;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/math.js
var math_max = Math.max;
var math_min = Math.min;
var round = Math.round;
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/userAgent.js
function getUAString() {
  var uaData = navigator.userAgentData;
  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
    return uaData.brands.map(function (item) {
      return item.brand + "/" + item.version;
    }).join(' ');
  }
  return navigator.userAgent;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js

function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js




function getBoundingClientRect(element, includeScale, isFixedStrategy) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  var clientRect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;
  if (includeScale && isHTMLElement(element)) {
    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;
  }
  var _ref = isElement(element) ? getWindow(element) : window,
    visualViewport = _ref.visualViewport;
  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
  var width = clientRect.width / scaleX;
  var height = clientRect.height / scaleY;
  return {
    width: width,
    height: height,
    top: y,
    right: x + width,
    bottom: y + height,
    left: x,
    x: x,
    y: y
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js

function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js




function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js

function getDocumentElement(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return ((isElement(element) ? element.ownerDocument :
  // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js



function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js

function getComputedStyle_getComputedStyle(element) {
  return getWindow(element).getComputedStyle(element);
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = getComputedStyle_getComputedStyle(element),
    overflow = _getComputedStyle.overflow,
    overflowX = _getComputedStyle.overflowX,
    overflowY = _getComputedStyle.overflowY;
  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js








function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round(rect.width) / element.offsetWidth || 1;
  var scaleY = round(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
} // Returns the composite rect of an element relative to its offsetParent.
// Composite means it takes into account transforms as well as layout.

function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== 'body' ||
    // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js
 // Returns the layout rect of an element relative to its offsetParent. Layout
// means it doesn't take into account transforms.

function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.
  // Fixes https://github.com/popperjs/popper-core/issues/1223

  var width = element.offsetWidth;
  var height = element.offsetHeight;
  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }
  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }
  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width,
    height: height
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js



function getParentNode(element) {
  if (getNodeName(element) === 'html') {
    return element;
  }
  return (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot ||
    // step into the shadow DOM of the parent of a slotted node
    element.parentNode || (
    // DOM Element detected
    isShadowRoot(element) ? element.host : null) ||
    // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(element) // fallback
  );
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js




function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }
  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }
  return getScrollParent(getParentNode(node));
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js




/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

function listScrollParents(element, list) {
  var _element$ownerDocumen;
  if (list === void 0) {
    list = [];
  }
  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList :
  // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents(getParentNode(target)));
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js







function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) ||
  // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle_getComputedStyle(element).position === 'fixed') {
    return null;
  }
  return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block

function getContainingBlock(element) {
  var isFirefox = /firefox/i.test(getUAString());
  var isIE = /Trident/i.test(getUAString());
  if (isIE && isHTMLElement(element)) {
    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
    var elementCss = getComputedStyle_getComputedStyle(element);
    if (elementCss.position === 'fixed') {
      return null;
    }
  }
  var currentNode = getParentNode(element);
  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }
  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle_getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }
  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.

function getOffsetParent(element) {
  var window = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle_getComputedStyle(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }
  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle_getComputedStyle(offsetParent).position === 'static')) {
    return window;
  }
  return offsetParent || getContainingBlock(element) || window;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/enums.js
var enums_top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [enums_top, bottom, right, left];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var enums_placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/orderModifiers.js
 // source: https://stackoverflow.com/questions/49875255

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);
        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }
  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}
function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/debounce.js
function debounce(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }
    return pending;
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/mergeByName.js
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/createPopper.js














var INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';
var INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';
var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};
function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}
function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }
  var _generatorOptions = generatorOptions,
    _generatorOptions$def = _generatorOptions.defaultModifiers,
    defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
    _generatorOptions$def2 = _generatorOptions.defaultOptions,
    defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }
    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(setOptionsAction) {
        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options);
        state.scrollParents = {
          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],
          popper: listScrollParents(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        }); // Validate the provided modifiers so that the consumer will get warned
        // if one of the modifiers is invalid for any reason

        if (false) { var _getComputedStyle, marginTop, marginRight, marginBottom, marginLeft, flipModifier, modifiers; }
        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }
        var _state$elements = state.elements,
          reference = _state$elements.reference,
          popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          if (false) {}
          return;
        } // Store the reference and popper rects to be read by modifiers

        state.rects = {
          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),
          popper: getLayoutRect(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        var __debug_loops__ = 0;
        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (false) {}
          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }
          var _state$orderedModifie = state.orderedModifiers[index],
            fn = _state$orderedModifie.fn,
            _state$orderedModifie2 = _state$orderedModifie.options,
            _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
            name = _state$orderedModifie.name;
          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };
    if (!areValidElements(reference, popper)) {
      if (false) {}
      return instance;
    }
    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref3) {
        var name = _ref3.name,
          _ref3$options = _ref3.options,
          options = _ref3$options === void 0 ? {} : _ref3$options,
          effect = _ref3.effect;
        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });
          var noopFn = function noopFn() {};
          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }
    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }
    return instance;
  };
}
var createPopper = /*#__PURE__*/(/* unused pure expression or super */ null && (popperGenerator())); // eslint-disable-next-line import/no-unused-modules


;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/eventListeners.js
 // eslint-disable-next-line import/no-unused-modules

var passive = {
  passive: true
};
function effect(_ref) {
  var state = _ref.state,
    instance = _ref.instance,
    options = _ref.options;
  var _options$scroll = options.scroll,
    scroll = _options$scroll === void 0 ? true : _options$scroll,
    _options$resize = options.resize,
    resize = _options$resize === void 0 ? true : _options$resize;
  var window = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }
  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }
  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }
    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules

/* harmony default export */ var eventListeners = ({
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getBasePlacement.js

function getBasePlacement(placement) {
  return placement.split('-')[0];
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getVariation.js
function getVariation(placement) {
  return placement.split('-')[1];
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js
function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/computeOffsets.js




function computeOffsets(_ref) {
  var reference = _ref.reference,
    element = _ref.element,
    placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;
  switch (basePlacement) {
    case enums_top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;
    case bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;
    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }
  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';
    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;
      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;
      default:
    }
  }
  return offsets;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js

function popperOffsets(_ref) {
  var state = _ref.state,
    name = _ref.name;
  // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules

/* harmony default export */ var modifiers_popperOffsets = ({
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/computeStyles.js







 // eslint-disable-next-line import/no-unused-modules

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref, win) {
  var x = _ref.x,
    y = _ref.y;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(x * dpr) / dpr || 0,
    y: round(y * dpr) / dpr || 0
  };
}
function mapToStyles(_ref2) {
  var _Object$assign2;
  var popper = _ref2.popper,
    popperRect = _ref2.popperRect,
    placement = _ref2.placement,
    variation = _ref2.variation,
    offsets = _ref2.offsets,
    position = _ref2.position,
    gpuAcceleration = _ref2.gpuAcceleration,
    adaptive = _ref2.adaptive,
    roundOffsets = _ref2.roundOffsets,
    isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x,
    x = _offsets$x === void 0 ? 0 : _offsets$x,
    _offsets$y = offsets.y,
    y = _offsets$y === void 0 ? 0 : _offsets$y;
  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
    x: x,
    y: y
  }) : {
    x: x,
    y: y
  };
  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = left;
  var sideY = enums_top;
  var win = window;
  if (adaptive) {
    var offsetParent = getOffsetParent(popper);
    var heightProp = 'clientHeight';
    var widthProp = 'clientWidth';
    if (offsetParent === getWindow(popper)) {
      offsetParent = getDocumentElement(popper);
      if (getComputedStyle_getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {
        heightProp = 'scrollHeight';
        widthProp = 'scrollWidth';
      }
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it

    offsetParent = offsetParent;
    if (placement === enums_top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height :
      // $FlowFixMe[prop-missing]
      offsetParent[heightProp];
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }
    if (placement === left || (placement === enums_top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width :
      // $FlowFixMe[prop-missing]
      offsetParent[widthProp];
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }
  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);
  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x: x,
    y: y
  }, getWindow(popper)) : {
    x: x,
    y: y
  };
  x = _ref4.x;
  y = _ref4.y;
  if (gpuAcceleration) {
    var _Object$assign;
    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }
  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}
function computeStyles(_ref5) {
  var state = _ref5.state,
    options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
    gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
    _options$adaptive = options.adaptive,
    adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
    _options$roundOffsets = options.roundOffsets,
    roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  if (false) { var transitionProperty; }
  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration,
    isFixed: state.options.strategy === 'fixed'
  };
  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }
  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules

/* harmony default export */ var modifiers_computeStyles = ({
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/applyStyles.js

 // This modifier takes the styles prepared by the `computeStyles` modifier
// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe[cannot-write]

    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];
      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}
function applyStyles_effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;
  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }
  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }
      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules

/* harmony default export */ var modifiers_applyStyles = ({
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: applyStyles_effect,
  requires: ['computeStyles']
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/offset.js

 // eslint-disable-next-line import/no-unused-modules

function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, enums_top].indexOf(basePlacement) >= 0 ? -1 : 1;
  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
      placement: placement
    })) : offset,
    skidding = _ref[0],
    distance = _ref[1];
  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}
function offset(_ref2) {
  var state = _ref2.state,
    options = _ref2.options,
    name = _ref2.name;
  var _options$offset = options.offset,
    offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = enums_placements.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
    x = _data$state$placement.x,
    y = _data$state$placement.y;
  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }
  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules

/* harmony default export */ var modifiers_offset = ({
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js
var hash = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js
var getOppositeVariationPlacement_hash = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return getOppositeVariationPlacement_hash[matched];
  });
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js




function getViewportRect(element, strategy) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    var layoutViewport = isLayoutViewport();
    if (layoutViewport || !layoutViewport && strategy === 'fixed') {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width: width,
    height: height,
    x: x + getWindowScrollBarX(element),
    y: y
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js




 // Gets the entire size of the scrollable document area, even extending outside
// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var _element$ownerDocumen;
  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = math_max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = math_max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;
  if (getComputedStyle_getComputedStyle(body || html).direction === 'rtl') {
    x += math_max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }
  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/contains.js

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && isShadowRoot(rootNode)) {
    var next = child;
    do {
      if (next && parent.isSameNode(next)) {
        return true;
      } // $FlowFixMe[prop-missing]: need a better way to handle this...

      next = next.parentNode || next.host;
    } while (next);
  } // Give up, the result is false

  return false;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/rectToClientRect.js
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js














function getInnerBoundingClientRect(element, strategy) {
  var rect = getBoundingClientRect(element, false, strategy === 'fixed');
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}
function getClientRectFromMixedType(element, clippingParent, strategy) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`

function getClippingParents(element) {
  var clippingParents = listScrollParents(getParentNode(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle_getComputedStyle(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
  if (!isElement(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414

  return clippingParents.filter(function (clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents

function getClippingRect(element, boundary, rootBoundary, strategy) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent, strategy);
    accRect.top = math_max(rect.top, accRect.top);
    accRect.right = math_min(rect.right, accRect.right);
    accRect.bottom = math_min(rect.bottom, accRect.bottom);
    accRect.left = math_max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent, strategy));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js

function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/expandToHashMap.js
function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/detectOverflow.js








 // eslint-disable-next-line import/no-unused-modules

function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options,
    _options$placement = _options.placement,
    placement = _options$placement === void 0 ? state.placement : _options$placement,
    _options$strategy = _options.strategy,
    strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,
    _options$boundary = _options.boundary,
    boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,
    _options$rootBoundary = _options.rootBoundary,
    rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
    _options$elementConte = _options.elementContext,
    elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,
    _options$altBoundary = _options.altBoundary,
    altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
    _options$padding = _options.padding,
    padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [enums_top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }
  return overflowOffsets;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js




function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options,
    placement = _options.placement,
    boundary = _options.boundary,
    rootBoundary = _options.rootBoundary,
    padding = _options.padding,
    flipVariations = _options.flipVariations,
    _options$allowedAutoP = _options.allowedAutoPlacements,
    allowedAutoPlacements = _options$allowedAutoP === void 0 ? enums_placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {
    return getVariation(placement) === variation;
  }) : basePlacements;
  var allowedPlacements = placements.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });
  if (allowedPlacements.length === 0) {
    allowedPlacements = placements;
    if (false) {}
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...

  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[getBasePlacement(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/flip.js






 // eslint-disable-next-line import/no-unused-modules

function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }
  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}
function flip(_ref) {
  var state = _ref.state,
    options = _ref.options,
    name = _ref.name;
  if (state.modifiersData[name]._skip) {
    return;
  }
  var _options$mainAxis = options.mainAxis,
    checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
    _options$altAxis = options.altAxis,
    checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
    specifiedFallbackPlacements = options.fallbackPlacements,
    padding = options.padding,
    boundary = options.boundary,
    rootBoundary = options.rootBoundary,
    altBoundary = options.altBoundary,
    _options$flipVariatio = options.flipVariations,
    flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
    allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];
  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];
    var _basePlacement = getBasePlacement(placement);
    var isStartVariation = getVariation(placement) === start;
    var isVertical = [enums_top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : enums_top;
    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }
    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];
    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }
    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }
    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }
    checksMap.set(placement, checks);
  }
  if (makeFallbackChecks) {
    // `2` may be desired in some cases – research later
    var numberOfChecks = flipVariations ? 3 : 1;
    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);
        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });
      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };
    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);
      if (_ret === "break") break;
    }
  }
  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules

/* harmony default export */ var modifiers_flip = ({
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getAltAxis.js
function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/within.js

function within(min, value, max) {
  return math_max(min, math_min(value, max));
}
function withinMaxClamp(min, value, max) {
  var v = within(min, value, max);
  return v > max ? max : v;
}
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js











function preventOverflow(_ref) {
  var state = _ref.state,
    options = _ref.options,
    name = _ref.name;
  var _options$mainAxis = options.mainAxis,
    checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
    _options$altAxis = options.altAxis,
    checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
    boundary = options.boundary,
    rootBoundary = options.rootBoundary,
    altBoundary = options.altBoundary,
    padding = options.padding,
    _options$tether = options.tether,
    tether = _options$tether === void 0 ? true : _options$tether,
    _options$tetherOffset = options.tetherOffset,
    tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };
  if (!popperOffsets) {
    return;
  }
  if (checkMainAxis) {
    var _offsetModifierState$;
    var mainSide = mainAxis === 'y' ? enums_top : left;
    var altSide = mainAxis === 'y' ? bottom : right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min = offset + overflow[mainSide];
    var max = offset - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? math_min(min, tetherMin) : min, offset, tether ? math_max(max, tetherMax) : max);
    popperOffsets[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset;
  }
  if (checkAltAxis) {
    var _offsetModifierState$2;
    var _mainSide = mainAxis === 'x' ? enums_top : left;
    var _altSide = mainAxis === 'x' ? bottom : right;
    var _offset = popperOffsets[altAxis];
    var _len = altAxis === 'y' ? 'height' : 'width';
    var _min = _offset + overflow[_mainSide];
    var _max = _offset - overflow[_altSide];
    var isOriginSide = [enums_top, left].indexOf(basePlacement) !== -1;
    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
    popperOffsets[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }
  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules

/* harmony default export */ var modifiers_preventOverflow = ({
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/arrow.js









 // eslint-disable-next-line import/no-unused-modules

var toPaddingObject = function toPaddingObject(padding, state) {
  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
};
function arrow(_ref) {
  var _state$modifiersData$;
  var state = _ref.state,
    name = _ref.name,
    options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';
  if (!arrowElement || !popperOffsets) {
    return;
  }
  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === 'y' ? enums_top : left;
  var maxProp = axis === 'y' ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = within(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}
function arrow_effect(_ref2) {
  var state = _ref2.state,
    options = _ref2.options;
  var _options$element = options.element,
    arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;
  if (arrowElement == null) {
    return;
  } // CSS selector

  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);
    if (!arrowElement) {
      return;
    }
  }
  if (false) {}
  if (!contains(state.elements.popper, arrowElement)) {
    if (false) {}
    return;
  }
  state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules

/* harmony default export */ var modifiers_arrow = ({
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: arrow_effect,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/hide.js


function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }
  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}
function isAnySideFullyClipped(overflow) {
  return [enums_top, right, bottom, left].some(function (side) {
    return overflow[side] >= 0;
  });
}
function hide(_ref) {
  var state = _ref.state,
    name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules

/* harmony default export */ var modifiers_hide = ({
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
});
;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/popper.js










var defaultModifiers = [eventListeners, modifiers_popperOffsets, modifiers_computeStyles, modifiers_applyStyles, modifiers_offset, modifiers_flip, modifiers_preventOverflow, modifiers_arrow, modifiers_hide];
var popper_createPopper = /*#__PURE__*/popperGenerator({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules


// EXTERNAL MODULE: ./node_modules/react-fast-compare/index.js
var react_fast_compare = __webpack_require__(77);
var react_fast_compare_default = /*#__PURE__*/__webpack_require__.n(react_fast_compare);
;// CONCATENATED MODULE: ./node_modules/react-popper/lib/esm/usePopper.js





var EMPTY_MODIFIERS = [];
var usePopper = function usePopper(referenceElement, popperElement, options) {
  if (options === void 0) {
    options = {};
  }
  var prevOptions = react.useRef(null);
  var optionsWithDefaults = {
    onFirstUpdate: options.onFirstUpdate,
    placement: options.placement || 'bottom',
    strategy: options.strategy || 'absolute',
    modifiers: options.modifiers || EMPTY_MODIFIERS
  };
  var _React$useState = react.useState({
      styles: {
        popper: {
          position: optionsWithDefaults.strategy,
          left: '0',
          top: '0'
        },
        arrow: {
          position: 'absolute'
        }
      },
      attributes: {}
    }),
    state = _React$useState[0],
    setState = _React$useState[1];
  var updateStateModifier = react.useMemo(function () {
    return {
      name: 'updateState',
      enabled: true,
      phase: 'write',
      fn: function fn(_ref) {
        var state = _ref.state;
        var elements = Object.keys(state.elements);
        react_dom.flushSync(function () {
          setState({
            styles: fromEntries(elements.map(function (element) {
              return [element, state.styles[element] || {}];
            })),
            attributes: fromEntries(elements.map(function (element) {
              return [element, state.attributes[element]];
            }))
          });
        });
      },
      requires: ['computeStyles']
    };
  }, []);
  var popperOptions = react.useMemo(function () {
    var newOptions = {
      onFirstUpdate: optionsWithDefaults.onFirstUpdate,
      placement: optionsWithDefaults.placement,
      strategy: optionsWithDefaults.strategy,
      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {
        name: 'applyStyles',
        enabled: false
      }])
    };
    if (react_fast_compare_default()(prevOptions.current, newOptions)) {
      return prevOptions.current || newOptions;
    } else {
      prevOptions.current = newOptions;
      return newOptions;
    }
  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);
  var popperInstanceRef = react.useRef();
  useIsomorphicLayoutEffect(function () {
    if (popperInstanceRef.current) {
      popperInstanceRef.current.setOptions(popperOptions);
    }
  }, [popperOptions]);
  useIsomorphicLayoutEffect(function () {
    if (referenceElement == null || popperElement == null) {
      return;
    }
    var createPopper = options.createPopper || popper_createPopper;
    var popperInstance = createPopper(referenceElement, popperElement, popperOptions);
    popperInstanceRef.current = popperInstance;
    return function () {
      popperInstance.destroy();
      popperInstanceRef.current = null;
    };
  }, [referenceElement, popperElement, options.createPopper]);
  return {
    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,
    styles: state.styles,
    attributes: state.attributes,
    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,
    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null
  };
};
;// CONCATENATED MODULE: ./node_modules/react-popper/lib/esm/Popper.js




var NOOP = function NOOP() {
  return void 0;
};
var NOOP_PROMISE = function NOOP_PROMISE() {
  return Promise.resolve(null);
};
var Popper_EMPTY_MODIFIERS = [];
function Popper(_ref) {
  var _ref$placement = _ref.placement,
    placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,
    _ref$strategy = _ref.strategy,
    strategy = _ref$strategy === void 0 ? 'absolute' : _ref$strategy,
    _ref$modifiers = _ref.modifiers,
    modifiers = _ref$modifiers === void 0 ? Popper_EMPTY_MODIFIERS : _ref$modifiers,
    referenceElement = _ref.referenceElement,
    onFirstUpdate = _ref.onFirstUpdate,
    innerRef = _ref.innerRef,
    children = _ref.children;
  var referenceNode = react.useContext(ManagerReferenceNodeContext);
  var _React$useState = react.useState(null),
    popperElement = _React$useState[0],
    setPopperElement = _React$useState[1];
  var _React$useState2 = react.useState(null),
    arrowElement = _React$useState2[0],
    setArrowElement = _React$useState2[1];
  react.useEffect(function () {
    utils_setRef(innerRef, popperElement);
  }, [innerRef, popperElement]);
  var options = react.useMemo(function () {
    return {
      placement: placement,
      strategy: strategy,
      onFirstUpdate: onFirstUpdate,
      modifiers: [].concat(modifiers, [{
        name: 'arrow',
        enabled: arrowElement != null,
        options: {
          element: arrowElement
        }
      }])
    };
  }, [placement, strategy, onFirstUpdate, modifiers, arrowElement]);
  var _usePopper = usePopper(referenceElement || referenceNode, popperElement, options),
    state = _usePopper.state,
    styles = _usePopper.styles,
    forceUpdate = _usePopper.forceUpdate,
    update = _usePopper.update;
  var childrenProps = react.useMemo(function () {
    return {
      ref: setPopperElement,
      style: styles.popper,
      placement: state ? state.placement : placement,
      hasPopperEscaped: state && state.modifiersData.hide ? state.modifiersData.hide.hasPopperEscaped : null,
      isReferenceHidden: state && state.modifiersData.hide ? state.modifiersData.hide.isReferenceHidden : null,
      arrowProps: {
        style: styles.arrow,
        ref: setArrowElement
      },
      forceUpdate: forceUpdate || NOOP,
      update: update || NOOP_PROMISE
    };
  }, [setPopperElement, setArrowElement, placement, state, styles, update, forceUpdate]);
  return unwrapArray(children)(childrenProps);
}
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/popover2/lib/esm/customModifiers.js
/*
 * Copyright 2022 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// tslint:disable object-literal-sort-keys
// adapted from https://popper.js.org/docs/v2/modifiers/community-modifiers/
var matchReferenceWidthModifier = {
  enabled: true,
  name: "matchReferenceWidth",
  phase: "beforeWrite",
  requires: ["computeStyles"],
  fn: function fn(_a) {
    var state = _a.state;
    state.styles.popper.width = "".concat(state.rects.reference.width, "px");
  },
  effect: function effect(_a) {
    var state = _a.state;
    var referenceWidth = state.elements.reference.getBoundingClientRect().width;
    state.elements.popper.style.width = "".concat(referenceWidth, "px");
  }
};
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/popover2/lib/esm/errors.js
/**
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var errors_ns = "[Blueprint]";
var POPOVER2_REQUIRES_TARGET = "".concat(errors_ns, " <Popover2> requires renderTarget prop or a child element.");
var POPOVER2_HAS_BACKDROP_INTERACTION = "".concat(errors_ns, " <Popover2 hasBackdrop={true}> requires interactionKind=\"click\".");
var POPOVER2_WARN_TOO_MANY_CHILDREN = "".concat(errors_ns, " <Popover2> supports only one child which is rendered as its target; additional children are ignored.");
var POPOVER2_WARN_DOUBLE_TARGET = errors_ns + " <Popover2> with children ignores renderTarget prop; use either prop or children.";
var POPOVER2_WARN_EMPTY_CONTENT = errors_ns + " Disabling <Popover2> with empty/whitespace content...";
var POPOVER2_WARN_HAS_BACKDROP_INLINE = errors_ns + " <Popover2 usePortal={false}> ignores hasBackdrop";
var POPOVER2_WARN_PLACEMENT_AND_POSITION_MUTEX = errors_ns + " <Popover2> supports either placement or position prop, not both.";
var POPOVER2_WARN_UNCONTROLLED_ONINTERACTION = errors_ns + " <Popover2> onInteraction is ignored when uncontrolled.";
var POPOVER2_WARN_TARGET_PROPS_WITH_RENDER_TARGET = errors_ns + " <Popover2> targetProps value is ignored when renderTarget API is used.";
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/popover2/lib/esm/utils.js
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Popper placement utils
// ======================
/** Converts a full placement to one of the four positions by stripping text after the `-`. */
function utils_getBasePlacement(placement) {
  return placement.split("-")[0];
}
/** Returns true if position is left or right. */
function isVerticalPlacement(side) {
  return ["left", "right"].indexOf(side) !== -1;
}
/** Returns the opposite position. */
function utils_getOppositePlacement(side) {
  switch (side) {
    case "top":
      return "bottom";
    case "left":
      return "right";
    case "bottom":
      return "top";
    default:
      return "left";
  }
}
/** Returns the CSS alignment keyword corresponding to given placement. */
function getAlignment(placement) {
  var align = placement.split("-")[1];
  switch (align) {
    case "start":
      return "left";
    case "end":
      return "right";
    default:
      return "center";
  }
}
// Popper modifiers
// ================
/** Modifier helper function to compute popper transform-origin based on arrow position */
function getTransformOrigin(placement, arrowStyles) {
  var basePlacement = utils_getBasePlacement(placement);
  if (arrowStyles === undefined) {
    return isVerticalPlacement(basePlacement) ? "".concat(utils_getOppositePlacement(basePlacement), " ").concat(getAlignment(basePlacement)) : "".concat(getAlignment(basePlacement), " ").concat(utils_getOppositePlacement(basePlacement));
  } else {
    // const arrowSizeShift = state.elements.arrow.clientHeight / 2;
    var arrowSizeShift = 30 / 2;
    // can use keyword for dimension without the arrow, to ease computation burden.
    // move origin by half arrow's height to keep it centered.
    return isVerticalPlacement(basePlacement) ? "".concat(utils_getOppositePlacement(basePlacement), " ").concat(parseInt(arrowStyles.top, 10) + arrowSizeShift, "px") : "".concat(parseInt(arrowStyles.left, 10) + arrowSizeShift, "px ").concat(utils_getOppositePlacement(basePlacement));
  }
}
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/popover2/lib/esm/popover2Arrow.js
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */





// these paths come from the Core Kit Sketch file
// https://github.com/palantir/blueprint/blob/develop/resources/sketch/Core%20Kit.sketch
var SVG_SHADOW_PATH = "M8.11 6.302c1.015-.936 1.887-2.922 1.887-4.297v26c0-1.378" + "-.868-3.357-1.888-4.297L.925 17.09c-1.237-1.14-1.233-3.034 0-4.17L8.11 6.302z";
var SVG_ARROW_PATH = "M8.787 7.036c1.22-1.125 2.21-3.376 2.21-5.03V0v30-2.005" + "c0-1.654-.983-3.9-2.21-5.03l-7.183-6.616c-.81-.746-.802-1.96 0-2.7l7.183-6.614z";
// additional space between arrow and edge of target
var ARROW_SPACING = 4;
var POPOVER_ARROW_SVG_SIZE = 30;
var TOOLTIP_ARROW_SVG_SIZE = 22;
/** Modifier helper function to compute arrow rotate() transform */
function getArrowAngle(placement) {
  if (placement == null) {
    return 0;
  }
  // can only be top/left/bottom/right - auto is resolved internally
  switch (utils_getBasePlacement(placement)) {
    case "top":
      return -90;
    case "left":
      return 180;
    case "bottom":
      return 90;
    default:
      return 0;
  }
}
/**
 * Popper's builtin "arrow" modifier options.padding doesn't seem to work for us, so we
 * need to compute our own offset in the direction of the popover relative to the reference.
 */
function getArrowReferenceOffsetStyle(placement) {
  var offset = POPOVER_ARROW_SVG_SIZE / 2 - ARROW_SPACING;
  switch (utils_getBasePlacement(placement)) {
    case "top":
      return {
        bottom: -offset
      };
    case "left":
      return {
        right: -offset
      };
    case "bottom":
      return {
        top: -offset
      };
    default:
      return {
        left: -offset
      };
  }
}
var Popover2Arrow = function Popover2Arrow(_a) {
  var _b = _a.arrowProps,
    ref = _b.ref,
    style = _b.style,
    placement = _a.placement;
  return (
    // data attribute allows popper.js to position the arrow
    react.createElement("div", {
      "aria-hidden": true,
      className: POPOVER2_ARROW,
      "data-popper-arrow": true,
      ref: ref,
      style: _assign(_assign({}, style), getArrowReferenceOffsetStyle(placement))
    }, react.createElement("svg", {
      viewBox: "0 0 ".concat(POPOVER_ARROW_SVG_SIZE, " ").concat(POPOVER_ARROW_SVG_SIZE),
      style: {
        transform: "rotate(".concat(getArrowAngle(placement), "deg)")
      }
    }, react.createElement("path", {
      className: POPOVER2_ARROW + "-border",
      d: SVG_SHADOW_PATH
    }), react.createElement("path", {
      className: POPOVER2_ARROW + "-fill",
      d: SVG_ARROW_PATH
    })))
  );
};
Popover2Arrow.displayName = "".concat(DISPLAYNAME_PREFIX, ".Popover2Arrow");
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/popover2/lib/esm/popover2PlacementUtils.js
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Convert a position to a placement.
 *
 * @param position the position to convert
 */
function positionToPlacement(position) {
  /* istanbul ignore next */
  switch (position) {
    case PopoverPosition.TOP_LEFT:
      return "top-start";
    case PopoverPosition.TOP:
      return "top";
    case PopoverPosition.TOP_RIGHT:
      return "top-end";
    case PopoverPosition.RIGHT_TOP:
      return "right-start";
    case PopoverPosition.RIGHT:
      return "right";
    case PopoverPosition.RIGHT_BOTTOM:
      return "right-end";
    case PopoverPosition.BOTTOM_RIGHT:
      return "bottom-end";
    case PopoverPosition.BOTTOM:
      return "bottom";
    case PopoverPosition.BOTTOM_LEFT:
      return "bottom-start";
    case PopoverPosition.LEFT_BOTTOM:
      return "left-end";
    case PopoverPosition.LEFT:
      return "left";
    case PopoverPosition.LEFT_TOP:
      return "left-start";
    case "auto":
    case "auto-start":
    case "auto-end":
      // Return the string unchanged.
      return position;
    default:
      return assertNever(position);
  }
}
/* istanbul ignore next */
function assertNever(x) {
  throw new Error("Unexpected position: " + x);
}
;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js
var resizeObservers = [];

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js

var hasActiveObservations = function hasActiveObservations() {
  return resizeObservers.some(function (ro) {
    return ro.activeTargets.length > 0;
  });
};

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js

var hasSkippedObservations = function hasSkippedObservations() {
  return resizeObservers.some(function (ro) {
    return ro.skippedTargets.length > 0;
  });
};

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js
var msg = 'ResizeObserver loop completed with undelivered notifications.';
var deliverResizeLoopError = function deliverResizeLoopError() {
  var event;
  if (typeof ErrorEvent === 'function') {
    event = new ErrorEvent('error', {
      message: msg
    });
  } else {
    event = document.createEvent('Event');
    event.initEvent('error', false, false);
    event.message = msg;
  }
  window.dispatchEvent(event);
};

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js
var ResizeObserverBoxOptions;
(function (ResizeObserverBoxOptions) {
  ResizeObserverBoxOptions["BORDER_BOX"] = "border-box";
  ResizeObserverBoxOptions["CONTENT_BOX"] = "content-box";
  ResizeObserverBoxOptions["DEVICE_PIXEL_CONTENT_BOX"] = "device-pixel-content-box";
})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/utils/freeze.js
var freeze = function freeze(obj) {
  return Object.freeze(obj);
};
;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js

var ResizeObserverSize = function () {
  function ResizeObserverSize(inlineSize, blockSize) {
    this.inlineSize = inlineSize;
    this.blockSize = blockSize;
    freeze(this);
  }
  return ResizeObserverSize;
}();

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js

var DOMRectReadOnly = function () {
  function DOMRectReadOnly(x, y, width, height) {
    this.x = x;
    this.y = y;
    this.width = width;
    this.height = height;
    this.top = this.y;
    this.left = this.x;
    this.bottom = this.top + this.height;
    this.right = this.left + this.width;
    return freeze(this);
  }
  DOMRectReadOnly.prototype.toJSON = function () {
    var _a = this,
      x = _a.x,
      y = _a.y,
      top = _a.top,
      right = _a.right,
      bottom = _a.bottom,
      left = _a.left,
      width = _a.width,
      height = _a.height;
    return {
      x: x,
      y: y,
      top: top,
      right: right,
      bottom: bottom,
      left: left,
      width: width,
      height: height
    };
  };
  DOMRectReadOnly.fromRect = function (rectangle) {
    return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);
  };
  return DOMRectReadOnly;
}();

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/utils/element.js
var isSVG = function isSVG(target) {
  return target instanceof SVGElement && 'getBBox' in target;
};
var isHidden = function isHidden(target) {
  if (isSVG(target)) {
    var _a = target.getBBox(),
      width = _a.width,
      height = _a.height;
    return !width && !height;
  }
  var _b = target,
    offsetWidth = _b.offsetWidth,
    offsetHeight = _b.offsetHeight;
  return !(offsetWidth || offsetHeight || target.getClientRects().length);
};
var element_isElement = function isElement(obj) {
  var _a;
  if (obj instanceof Element) {
    return true;
  }
  var scope = (_a = obj === null || obj === void 0 ? void 0 : obj.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;
  return !!(scope && obj instanceof scope.Element);
};
var isReplacedElement = function isReplacedElement(target) {
  switch (target.tagName) {
    case 'INPUT':
      if (target.type !== 'image') {
        break;
      }
    case 'VIDEO':
    case 'AUDIO':
    case 'EMBED':
    case 'OBJECT':
    case 'CANVAS':
    case 'IFRAME':
    case 'IMG':
      return true;
  }
  return false;
};

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/utils/global.js
var global = typeof window !== 'undefined' ? window : {};
;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js






var cache = new WeakMap();
var scrollRegexp = /auto|scroll/;
var verticalRegexp = /^tb|vertical/;
var IE = /msie|trident/i.test(global.navigator && global.navigator.userAgent);
var parseDimension = function parseDimension(pixel) {
  return parseFloat(pixel || '0');
};
var size = function size(inlineSize, blockSize, switchSizes) {
  if (inlineSize === void 0) {
    inlineSize = 0;
  }
  if (blockSize === void 0) {
    blockSize = 0;
  }
  if (switchSizes === void 0) {
    switchSizes = false;
  }
  return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);
};
var zeroBoxes = freeze({
  devicePixelContentBoxSize: size(),
  borderBoxSize: size(),
  contentBoxSize: size(),
  contentRect: new DOMRectReadOnly(0, 0, 0, 0)
});
var calculateBoxSizes = function calculateBoxSizes(target, forceRecalculation) {
  if (forceRecalculation === void 0) {
    forceRecalculation = false;
  }
  if (cache.has(target) && !forceRecalculation) {
    return cache.get(target);
  }
  if (isHidden(target)) {
    cache.set(target, zeroBoxes);
    return zeroBoxes;
  }
  var cs = getComputedStyle(target);
  var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();
  var removePadding = !IE && cs.boxSizing === 'border-box';
  var switchSizes = verticalRegexp.test(cs.writingMode || '');
  var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');
  var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');
  var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);
  var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);
  var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);
  var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);
  var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);
  var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);
  var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);
  var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);
  var horizontalPadding = paddingLeft + paddingRight;
  var verticalPadding = paddingTop + paddingBottom;
  var horizontalBorderArea = borderLeft + borderRight;
  var verticalBorderArea = borderTop + borderBottom;
  var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;
  var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;
  var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;
  var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;
  var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;
  var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;
  var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;
  var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;
  var boxes = freeze({
    devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),
    borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),
    contentBoxSize: size(contentWidth, contentHeight, switchSizes),
    contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)
  });
  cache.set(target, boxes);
  return boxes;
};
var calculateBoxSize = function calculateBoxSize(target, observedBox, forceRecalculation) {
  var _a = calculateBoxSizes(target, forceRecalculation),
    borderBoxSize = _a.borderBoxSize,
    contentBoxSize = _a.contentBoxSize,
    devicePixelContentBoxSize = _a.devicePixelContentBoxSize;
  switch (observedBox) {
    case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:
      return devicePixelContentBoxSize;
    case ResizeObserverBoxOptions.BORDER_BOX:
      return borderBoxSize;
    default:
      return contentBoxSize;
  }
};

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js


var ResizeObserverEntry = function () {
  function ResizeObserverEntry(target) {
    var boxes = calculateBoxSizes(target);
    this.target = target;
    this.contentRect = boxes.contentRect;
    this.borderBoxSize = freeze([boxes.borderBoxSize]);
    this.contentBoxSize = freeze([boxes.contentBoxSize]);
    this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);
  }
  return ResizeObserverEntry;
}();

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js

var calculateDepthForNode = function calculateDepthForNode(node) {
  if (isHidden(node)) {
    return Infinity;
  }
  var depth = 0;
  var parent = node.parentNode;
  while (parent) {
    depth += 1;
    parent = parent.parentNode;
  }
  return depth;
};

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js




var broadcastActiveObservations = function broadcastActiveObservations() {
  var shallowestDepth = Infinity;
  var callbacks = [];
  resizeObservers.forEach(function processObserver(ro) {
    if (ro.activeTargets.length === 0) {
      return;
    }
    var entries = [];
    ro.activeTargets.forEach(function processTarget(ot) {
      var entry = new ResizeObserverEntry(ot.target);
      var targetDepth = calculateDepthForNode(ot.target);
      entries.push(entry);
      ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);
      if (targetDepth < shallowestDepth) {
        shallowestDepth = targetDepth;
      }
    });
    callbacks.push(function resizeObserverCallback() {
      ro.callback.call(ro.observer, entries, ro.observer);
    });
    ro.activeTargets.splice(0, ro.activeTargets.length);
  });
  for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {
    var callback = callbacks_1[_i];
    callback();
  }
  return shallowestDepth;
};

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js


var gatherActiveObservationsAtDepth = function gatherActiveObservationsAtDepth(depth) {
  resizeObservers.forEach(function processObserver(ro) {
    ro.activeTargets.splice(0, ro.activeTargets.length);
    ro.skippedTargets.splice(0, ro.skippedTargets.length);
    ro.observationTargets.forEach(function processTarget(ot) {
      if (ot.isActive()) {
        if (calculateDepthForNode(ot.target) > depth) {
          ro.activeTargets.push(ot);
        } else {
          ro.skippedTargets.push(ot);
        }
      }
    });
  });
};

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/utils/process.js





var process_process = function process() {
  var depth = 0;
  gatherActiveObservationsAtDepth(depth);
  while (hasActiveObservations()) {
    depth = broadcastActiveObservations();
    gatherActiveObservationsAtDepth(depth);
  }
  if (hasSkippedObservations()) {
    deliverResizeLoopError();
  }
  return depth > 0;
};

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js
var trigger;
var callbacks = [];
var notify = function notify() {
  return callbacks.splice(0).forEach(function (cb) {
    return cb();
  });
};
var queueMicroTask = function queueMicroTask(callback) {
  if (!trigger) {
    var toggle_1 = 0;
    var el_1 = document.createTextNode('');
    var config = {
      characterData: true
    };
    new MutationObserver(function () {
      return notify();
    }).observe(el_1, config);
    trigger = function trigger() {
      el_1.textContent = "".concat(toggle_1 ? toggle_1-- : toggle_1++);
    };
  }
  callbacks.push(callback);
  trigger();
};

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js

var queueResizeObserver = function queueResizeObserver(cb) {
  queueMicroTask(function ResizeObserver() {
    requestAnimationFrame(cb);
  });
};

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/utils/scheduler.js



var watching = 0;
var isWatching = function isWatching() {
  return !!watching;
};
var CATCH_PERIOD = 250;
var observerConfig = {
  attributes: true,
  characterData: true,
  childList: true,
  subtree: true
};
var events = ['resize', 'load', 'transitionend', 'animationend', 'animationstart', 'animationiteration', 'keyup', 'keydown', 'mouseup', 'mousedown', 'mouseover', 'mouseout', 'blur', 'focus'];
var scheduler_time = function time(timeout) {
  if (timeout === void 0) {
    timeout = 0;
  }
  return Date.now() + timeout;
};
var scheduled = false;
var Scheduler = function () {
  function Scheduler() {
    var _this = this;
    this.stopped = true;
    this.listener = function () {
      return _this.schedule();
    };
  }
  Scheduler.prototype.run = function (timeout) {
    var _this = this;
    if (timeout === void 0) {
      timeout = CATCH_PERIOD;
    }
    if (scheduled) {
      return;
    }
    scheduled = true;
    var until = scheduler_time(timeout);
    queueResizeObserver(function () {
      var elementsHaveResized = false;
      try {
        elementsHaveResized = process_process();
      } finally {
        scheduled = false;
        timeout = until - scheduler_time();
        if (!isWatching()) {
          return;
        }
        if (elementsHaveResized) {
          _this.run(1000);
        } else if (timeout > 0) {
          _this.run(timeout);
        } else {
          _this.start();
        }
      }
    });
  };
  Scheduler.prototype.schedule = function () {
    this.stop();
    this.run();
  };
  Scheduler.prototype.observe = function () {
    var _this = this;
    var cb = function cb() {
      return _this.observer && _this.observer.observe(document.body, observerConfig);
    };
    document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);
  };
  Scheduler.prototype.start = function () {
    var _this = this;
    if (this.stopped) {
      this.stopped = false;
      this.observer = new MutationObserver(this.listener);
      this.observe();
      events.forEach(function (name) {
        return global.addEventListener(name, _this.listener, true);
      });
    }
  };
  Scheduler.prototype.stop = function () {
    var _this = this;
    if (!this.stopped) {
      this.observer && this.observer.disconnect();
      events.forEach(function (name) {
        return global.removeEventListener(name, _this.listener, true);
      });
      this.stopped = true;
    }
  };
  return Scheduler;
}();
var scheduler = new Scheduler();
var updateCount = function updateCount(n) {
  !watching && n > 0 && scheduler.start();
  watching += n;
  !watching && scheduler.stop();
};

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/ResizeObservation.js



var skipNotifyOnElement = function skipNotifyOnElement(target) {
  return !isSVG(target) && !isReplacedElement(target) && getComputedStyle(target).display === 'inline';
};
var ResizeObservation = function () {
  function ResizeObservation(target, observedBox) {
    this.target = target;
    this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;
    this.lastReportedSize = {
      inlineSize: 0,
      blockSize: 0
    };
  }
  ResizeObservation.prototype.isActive = function () {
    var size = calculateBoxSize(this.target, this.observedBox, true);
    if (skipNotifyOnElement(this.target)) {
      this.lastReportedSize = size;
    }
    if (this.lastReportedSize.inlineSize !== size.inlineSize || this.lastReportedSize.blockSize !== size.blockSize) {
      return true;
    }
    return false;
  };
  return ResizeObservation;
}();

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js
var ResizeObserverDetail = function () {
  function ResizeObserverDetail(resizeObserver, callback) {
    this.activeTargets = [];
    this.skippedTargets = [];
    this.observationTargets = [];
    this.observer = resizeObserver;
    this.callback = callback;
  }
  return ResizeObserverDetail;
}();

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/ResizeObserverController.js




var observerMap = new WeakMap();
var getObservationIndex = function getObservationIndex(observationTargets, target) {
  for (var i = 0; i < observationTargets.length; i += 1) {
    if (observationTargets[i].target === target) {
      return i;
    }
  }
  return -1;
};
var ResizeObserverController = function () {
  function ResizeObserverController() {}
  ResizeObserverController.connect = function (resizeObserver, callback) {
    var detail = new ResizeObserverDetail(resizeObserver, callback);
    observerMap.set(resizeObserver, detail);
  };
  ResizeObserverController.observe = function (resizeObserver, target, options) {
    var detail = observerMap.get(resizeObserver);
    var firstObservation = detail.observationTargets.length === 0;
    if (getObservationIndex(detail.observationTargets, target) < 0) {
      firstObservation && resizeObservers.push(detail);
      detail.observationTargets.push(new ResizeObservation(target, options && options.box));
      updateCount(1);
      scheduler.schedule();
    }
  };
  ResizeObserverController.unobserve = function (resizeObserver, target) {
    var detail = observerMap.get(resizeObserver);
    var index = getObservationIndex(detail.observationTargets, target);
    var lastObservation = detail.observationTargets.length === 1;
    if (index >= 0) {
      lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);
      detail.observationTargets.splice(index, 1);
      updateCount(-1);
    }
  };
  ResizeObserverController.disconnect = function (resizeObserver) {
    var _this = this;
    var detail = observerMap.get(resizeObserver);
    detail.observationTargets.slice().forEach(function (ot) {
      return _this.unobserve(resizeObserver, ot.target);
    });
    detail.activeTargets.splice(0, detail.activeTargets.length);
  };
  return ResizeObserverController;
}();

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/ResizeObserver.js


var ResizeObserver = function () {
  function ResizeObserver(callback) {
    if (arguments.length === 0) {
      throw new TypeError("Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.");
    }
    if (typeof callback !== 'function') {
      throw new TypeError("Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.");
    }
    ResizeObserverController.connect(this, callback);
  }
  ResizeObserver.prototype.observe = function (target, options) {
    if (arguments.length === 0) {
      throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.");
    }
    if (!element_isElement(target)) {
      throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element");
    }
    ResizeObserverController.observe(this, target, options);
  };
  ResizeObserver.prototype.unobserve = function (target) {
    if (arguments.length === 0) {
      throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.");
    }
    if (!element_isElement(target)) {
      throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element");
    }
    ResizeObserverController.unobserve(this, target);
  };
  ResizeObserver.prototype.disconnect = function () {
    ResizeObserverController.disconnect(this);
  };
  ResizeObserver.toString = function () {
    return 'function ResizeObserver () { [polyfill code] }';
  };
  return ResizeObserver;
}();

;// CONCATENATED MODULE: ./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js



;// CONCATENATED MODULE: ./node_modules/@blueprintjs/popover2/lib/esm/resizeSensor2.js
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */




var ResizeSensor2 = /** @class */function (_super) {
  __extends(ResizeSensor2, _super);
  function ResizeSensor2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.targetRef = react.createRef();
    _this.prevElement = undefined;
    _this.observer = new ResizeObserver(function (entries) {
      var _a, _b;
      return (_b = (_a = _this.props).onResize) === null || _b === void 0 ? void 0 : _b.call(_a, entries);
    });
    return _this;
  }
  ResizeSensor2.prototype.render = function () {
    var onlyChild = react.Children.only(this.props.children);
    // if we're provided a ref to the child already, we don't need to attach one ourselves
    if (this.props.targetRef !== undefined) {
      return onlyChild;
    }
    return react.cloneElement(onlyChild, {
      ref: this.targetRef
    });
  };
  ResizeSensor2.prototype.componentDidMount = function () {
    this.observeElement();
  };
  ResizeSensor2.prototype.componentDidUpdate = function (prevProps) {
    this.observeElement(this.props.observeParents !== prevProps.observeParents);
  };
  ResizeSensor2.prototype.componentWillUnmount = function () {
    this.observer.disconnect();
  };
  /**
   * Observe the DOM element, if defined and different from the currently
   * observed element. Pass `force` argument to skip element checks and always
   * re-observe.
   */
  ResizeSensor2.prototype.observeElement = function (force) {
    if (force === void 0) {
      force = false;
    }
    if (!(this.targetRef.current instanceof Element)) {
      // stop everything if not defined
      this.observer.disconnect();
      return;
    }
    if (this.targetRef.current === this.prevElement && !force) {
      // quit if given same element -- nothing to update (unless forced)
      return;
    } else {
      // clear observer list if new element
      this.observer.disconnect();
      // remember element reference for next time
      this.prevElement = this.targetRef.current;
    }
    // observer callback is invoked immediately when observing new elements
    this.observer.observe(this.targetRef.current);
    if (this.props.observeParents) {
      var parent_1 = this.targetRef.current.parentElement;
      while (parent_1 != null) {
        this.observer.observe(parent_1);
        parent_1 = parent_1.parentElement;
      }
    }
  };
  ResizeSensor2.displayName = "".concat(DISPLAYNAME_PREFIX, ".ResizeSensor2");
  return ResizeSensor2;
}(AbstractPureComponent2);

;// CONCATENATED MODULE: ./node_modules/@blueprintjs/popover2/lib/esm/popover2.js
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */











// eslint-disable-next-line import/no-cycle


var Popover2InteractionKind = {
  CLICK: "click",
  CLICK_TARGET_ONLY: "click-target",
  HOVER: "hover",
  HOVER_TARGET_ONLY: "hover-target"
};
/**
 * Popover (v2) component, used to display a floating UI next to and tethered to a target element.
 *
 * @template T target element props interface. Consumers wishing to stay in sync with Blueprint's default target HTML
 * props interface should use the `DefaultPopover2TargetHTMLProps` type (although this is already the default type for
 * this type param).
 * @see https://blueprintjs.com/docs/#popover2-package/popover2
 */
var Popover2 = /** @class */function (_super) {
  __extends(Popover2, _super);
  function Popover2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.state = {
      hasDarkParent: false,
      isOpen: _this.getIsOpen(_this.props)
    };
    /**
     * DOM element that contains the popover.
     * When `usePortal={true}`, this element will be portaled outside the usual DOM flow,
     * so this reference can be very useful for testing.
     */
    _this.popoverElement = null;
    /** DOM element that contains the target. */
    _this.targetElement = null;
    /** Popover ref handler */
    _this.popoverRef = refHandler(_this, "popoverElement", _this.props.popoverRef);
    /** Target ref handler */
    _this.targetRef = function (el) {
      return _this.targetElement = el;
    };
    // a flag that lets us detect mouse movement between the target and popover,
    // now that mouseleave is triggered when you cross the gap between the two.
    _this.isMouseInTargetOrPopover = false;
    // a flag that indicates whether the target previously lost focus to another
    // element on the same page.
    _this.lostFocusOnSamePage = true;
    _this.isControlled = function () {
      return _this.props.isOpen !== undefined;
    };
    // arrow is disabled if minimal, or if the arrow modifier was explicitly disabled
    _this.isArrowEnabled = function () {
      var _a, _b;
      return !_this.props.minimal && ((_b = (_a = _this.props.modifiers) === null || _a === void 0 ? void 0 : _a.arrow) === null || _b === void 0 ? void 0 : _b.enabled) !== false;
    };
    _this.isHoverInteractionKind = function () {
      return _this.props.interactionKind === Popover2InteractionKind.HOVER || _this.props.interactionKind === Popover2InteractionKind.HOVER_TARGET_ONLY;
    };
    /**
     * Instance method to instruct the `Popover` to recompute its position.
     *
     * This method should only be used if you are updating the target in a way
     * that does not cause it to re-render, such as changing its _position_
     * without changing its _size_ (since `Popover` already repositions when it
     * detects a resize).
     */
    _this.reposition = function () {
      var _a;
      return (_a = _this.popperScheduleUpdate) === null || _a === void 0 ? void 0 : _a.call(_this);
    };
    _this.renderTarget = function (_a) {
      var _b, _c;
      var _d, _e;
      var popperChildRef = _a.ref;
      var _f = _this.props,
        children = _f.children,
        className = _f.className,
        fill = _f.fill,
        openOnTargetFocus = _f.openOnTargetFocus,
        renderTarget = _f.renderTarget;
      var isOpen = _this.state.isOpen;
      var isControlled = _this.isControlled();
      var isHoverInteractionKind = _this.isHoverInteractionKind();
      var targetTagName = _this.props.targetTagName;
      if (fill) {
        targetTagName = "div";
      }
      var ref = mergeRefs(popperChildRef, _this.targetRef);
      var targetEventHandlers = isHoverInteractionKind ? {
        // HOVER handlers
        onBlur: _this.handleTargetBlur,
        onContextMenu: _this.handleTargetContextMenu,
        onFocus: _this.handleTargetFocus,
        onMouseEnter: _this.handleMouseEnter,
        onMouseLeave: _this.handleMouseLeave
      } : {
        // CLICK needs only one handler
        onClick: _this.handleTargetClick,
        // For keyboard accessibility, trigger the same behavior as a click event upon pressing ENTER/SPACE
        onKeyDown: function onKeyDown(event) {
          // eslint-disable-next-line deprecation/deprecation
          return isKeyboardClick(event.keyCode) && _this.handleTargetClick(event);
        }
      };
      // Ensure target is focusable if relevant prop enabled
      var targetTabIndex = openOnTargetFocus && isHoverInteractionKind ? 0 : undefined;
      var ownTargetProps = _assign({
        "aria-haspopup": (_d = _this.props.popupKind) !== null && _d !== void 0 ? _d : _this.props.interactionKind === Popover2InteractionKind.HOVER_TARGET_ONLY ? undefined : "true",
        // N.B. this.props.className is passed along to renderTarget even though the user would have access to it.
        // If, instead, renderTarget is undefined and the target is provided as a child, this.props.className is
        // applied to the generated target wrapper element.
        className: classnames_default()(className, POPOVER2_TARGET, (_b = {}, _b[POPOVER2_OPEN] = isOpen,
        // this class is mainly useful for button targets
        _b[ACTIVE] = isOpen && !isControlled && !isHoverInteractionKind, _b)),
        ref: ref
      }, targetEventHandlers);
      var targetModifierClasses = (_c = {},
      // this class is mainly useful for Blueprint <Button> targets; we should only apply it for
      // uncontrolled popovers when they are opened by a user interaction
      _c[ACTIVE] = isOpen && !isControlled && !isHoverInteractionKind,
      // similarly, this class is mainly useful for targets like <Button>, <InputGroup>, etc.
      _c[FILL] = fill, _c);
      var target;
      if (renderTarget !== undefined) {
        target = renderTarget(_assign(_assign({}, ownTargetProps), {
          className: classnames_default()(ownTargetProps.className, targetModifierClasses),
          // if the consumer renders a tooltip target, it's their responsibility to disable that tooltip
          // when *this* popover is open
          isOpen: isOpen,
          tabIndex: targetTabIndex
        }));
      } else {
        var childTarget = ensureElement(react.Children.toArray(children)[0]);
        if (childTarget === undefined) {
          return null;
        }
        var clonedTarget = react.cloneElement(childTarget, {
          className: classnames_default()(childTarget.props.className, targetModifierClasses),
          // force disable single Tooltip2 child when popover is open
          disabled: isOpen && isElementOfType(childTarget, Tooltip2) ? true : childTarget.props.disabled,
          tabIndex: (_e = childTarget.props.tabIndex) !== null && _e !== void 0 ? _e : targetTabIndex
        });
        var wrappedTarget = react.createElement(targetTagName, _assign(_assign({}, ownTargetProps), _this.props.targetProps), clonedTarget);
        target = wrappedTarget;
      }
      return react.createElement(ResizeSensor2, {
        targetRef: ref,
        onResize: _this.reposition
      }, target);
    };
    _this.renderPopover = function (popperProps) {
      var _a;
      var _b;
      var _c = _this.props,
        interactionKind = _c.interactionKind,
        shouldReturnFocusOnClose = _c.shouldReturnFocusOnClose,
        usePortal = _c.usePortal;
      var isOpen = _this.state.isOpen;
      // compute an appropriate transform origin so the scale animation points towards target
      var transformOrigin = getTransformOrigin(popperProps.placement, _this.isArrowEnabled() ? popperProps.arrowProps.style : undefined);
      // need to update our reference to this function on every render as it will change.
      _this.popperScheduleUpdate = popperProps.update;
      var popoverHandlers = {
        // always check popover clicks for dismiss class
        onClick: _this.handlePopoverClick,
        // treat ENTER/SPACE keys the same as a click for accessibility
        // eslint-disable-next-line deprecation/deprecation
        onKeyDown: function onKeyDown(event) {
          return isKeyboardClick(event.keyCode) && _this.handlePopoverClick(event);
        }
      };
      if (interactionKind === Popover2InteractionKind.HOVER || !usePortal && interactionKind === Popover2InteractionKind.HOVER_TARGET_ONLY) {
        popoverHandlers.onMouseEnter = _this.handleMouseEnter;
        popoverHandlers.onMouseLeave = _this.handleMouseLeave;
      }
      var basePlacement = utils_getBasePlacement(popperProps.placement);
      var popoverClasses = classnames_default()(POPOVER2, (_a = {}, _a[DARK] = _this.props.inheritDarkTheme && _this.state.hasDarkParent, _a[MINIMAL] = _this.props.minimal, _a[POPOVER2_CAPTURING_DISMISS] = _this.props.captureDismiss, _a[POPOVER2_MATCH_TARGET_WIDTH] = _this.props.matchTargetWidth, _a[POPOVER2_REFERENCE_HIDDEN] = popperProps.isReferenceHidden === true, _a[POPOVER2_POPPER_ESCAPED] = popperProps.hasPopperEscaped === true, _a), "".concat(POPOVER2_CONTENT_PLACEMENT, "-").concat(basePlacement), _this.props.popoverClassName);
      var defaultAutoFocus = _this.isHoverInteractionKind() ? false : undefined;
      return react.createElement(Overlay, {
        autoFocus: (_b = _this.props.autoFocus) !== null && _b !== void 0 ? _b : defaultAutoFocus,
        backdropClassName: POPOVER2_BACKDROP,
        backdropProps: _this.props.backdropProps,
        canEscapeKeyClose: _this.props.canEscapeKeyClose,
        canOutsideClickClose: _this.props.interactionKind === Popover2InteractionKind.CLICK,
        enforceFocus: _this.props.enforceFocus,
        hasBackdrop: _this.props.hasBackdrop,
        isOpen: isOpen,
        onClose: _this.handleOverlayClose,
        onClosed: _this.props.onClosed,
        onClosing: _this.props.onClosing,
        onOpened: _this.props.onOpened,
        onOpening: _this.props.onOpening,
        transitionDuration: _this.props.transitionDuration,
        transitionName: POPOVER2,
        usePortal: _this.props.usePortal,
        portalClassName: _this.props.portalClassName,
        portalContainer: _this.props.portalContainer,
        // if hover interaction, it doesn't make sense to take over focus control
        shouldReturnFocusOnClose: _this.isHoverInteractionKind() ? false : shouldReturnFocusOnClose
      }, react.createElement("div", {
        className: POPOVER2_TRANSITION_CONTAINER,
        ref: popperProps.ref,
        style: popperProps.style
      }, react.createElement(ResizeSensor2, {
        onResize: _this.reposition
      }, react.createElement("div", _assign({
        className: popoverClasses,
        style: {
          transformOrigin: transformOrigin
        },
        ref: _this.popoverRef
      }, popoverHandlers), _this.isArrowEnabled() && react.createElement(Popover2Arrow, {
        arrowProps: popperProps.arrowProps,
        placement: popperProps.placement
      }), react.createElement("div", {
        className: POPOVER2_CONTENT
      }, _this.props.content)))));
    };
    _this.handleTargetFocus = function (e) {
      if (_this.props.openOnTargetFocus && _this.isHoverInteractionKind()) {
        if (e.relatedTarget == null && !_this.lostFocusOnSamePage) {
          // ignore this focus event -- the target was already focused but the page itself
          // lost focus (e.g. due to switching tabs).
          return;
        }
        _this.handleMouseEnter(e);
      }
    };
    _this.handleTargetBlur = function (e) {
      if (_this.props.openOnTargetFocus && _this.isHoverInteractionKind()) {
        if (e.relatedTarget != null) {
          // if the next element to receive focus is within the popover, we'll want to leave the
          // popover open.
          if (e.relatedTarget !== _this.popoverElement && !_this.isElementInPopover(e.relatedTarget)) {
            _this.handleMouseLeave(e);
          }
        } else {
          _this.handleMouseLeave(e);
        }
      }
      _this.lostFocusOnSamePage = e.relatedTarget != null;
    };
    _this.handleTargetContextMenu = function (e) {
      // we assume that when someone prevents the default interaction on this event (a browser native context menu),
      // they are showing a custom context menu (as ContextMenu2 does); in this case, we should close this popover/tooltip
      if (e.defaultPrevented) {
        _this.setOpenState(false, e);
      }
    };
    _this.handleMouseEnter = function (e) {
      _this.isMouseInTargetOrPopover = true;
      // if we're entering the popover, and the mode is set to be HOVER_TARGET_ONLY, we want to manually
      // trigger the mouse leave event, as hovering over the popover shouldn't count.
      if (!_this.props.usePortal && _this.isElementInPopover(e.target) && _this.props.interactionKind === Popover2InteractionKind.HOVER_TARGET_ONLY && !_this.props.openOnTargetFocus) {
        _this.handleMouseLeave(e);
      } else if (!_this.props.disabled) {
        // only begin opening popover when it is enabled
        _this.setOpenState(true, e, _this.props.hoverOpenDelay);
      }
    };
    _this.handleMouseLeave = function (e) {
      _this.isMouseInTargetOrPopover = false;
      // wait until the event queue is flushed, because we want to leave the
      // popover open if the mouse entered the popover immediately after
      // leaving the target (or vice versa).
      _this.setTimeout(function () {
        if (_this.isMouseInTargetOrPopover) {
          return;
        }
        // user-configurable closing delay is helpful when moving mouse from target to popover
        _this.setOpenState(false, e, _this.props.hoverCloseDelay);
      });
    };
    _this.handlePopoverClick = function (e) {
      var _a, _b, _c, _d;
      var eventTarget = e.target;
      var eventPopover = eventTarget.closest(".".concat(POPOVER2));
      var eventPopoverV1 = eventTarget.closest(".".concat(POPOVER));
      var isEventFromSelf = (eventPopover !== null && eventPopover !== void 0 ? eventPopover : eventPopoverV1) === _this.getPopoverElement();
      var isEventPopoverCapturing = (_b = (_a = eventPopover === null || eventPopover === void 0 ? void 0 : eventPopover.classList.contains(POPOVER2_CAPTURING_DISMISS)) !== null && _a !== void 0 ? _a : eventPopoverV1 === null || eventPopoverV1 === void 0 ? void 0 : eventPopoverV1.classList.contains(POPOVER_CAPTURING_DISMISS)) !== null && _b !== void 0 ? _b : false;
      // an OVERRIDE inside a DISMISS does not dismiss, and a DISMISS inside an OVERRIDE will dismiss.
      var dismissElement = eventTarget.closest(".".concat(POPOVER2_DISMISS, ", .").concat(POPOVER2_DISMISS_OVERRIDE));
      // dismiss selectors from the "V1" version of Popover in the core package
      // we expect these to be rendered by MenuItem, which at this point has no knowledge of Popover2
      // this can be removed once Popover2 is merged into core in v5.0
      var dismissElementV1 = eventTarget.closest(".".concat(POPOVER_DISMISS, ", .").concat(POPOVER_DISMISS_OVERRIDE));
      var shouldDismiss = (_d = (_c = dismissElement === null || dismissElement === void 0 ? void 0 : dismissElement.classList.contains(POPOVER2_DISMISS)) !== null && _c !== void 0 ? _c : dismissElementV1 === null || dismissElementV1 === void 0 ? void 0 : dismissElementV1.classList.contains(POPOVER_DISMISS)) !== null && _d !== void 0 ? _d : false;
      var isDisabled = eventTarget.closest(":disabled, .".concat(DISABLED)) != null;
      if (shouldDismiss && !isDisabled && (!isEventPopoverCapturing || isEventFromSelf)) {
        _this.setOpenState(false, e);
      }
    };
    _this.handleOverlayClose = function (e) {
      var _a;
      if (_this.targetElement === null || e === undefined) {
        return;
      }
      var event = (_a = e.nativeEvent) !== null && _a !== void 0 ? _a : e;
      var eventTarget = event.composed ? event.composedPath()[0] : event.target;
      // if click was in target, target event listener will handle things, so don't close
      if (!elementIsOrContains(_this.targetElement, eventTarget) || e.nativeEvent instanceof KeyboardEvent) {
        _this.setOpenState(false, e);
      }
    };
    _this.handleTargetClick = function (e) {
      // ensure click did not originate from within inline popover before closing
      if (!_this.props.disabled && !_this.isElementInPopover(e.target)) {
        if (_this.props.isOpen == null) {
          _this.setState(function (prevState) {
            return {
              isOpen: !prevState.isOpen
            };
          });
        } else {
          _this.setOpenState(!_this.props.isOpen, e);
        }
      }
    };
    return _this;
  }
  // popper innerRef gives us a handle on the transition container, since that's what we render as the overlay child,
  // so if we want to look at our actual popover element, we need to reach inside a bit
  Popover2.prototype.getPopoverElement = function () {
    var _a;
    return (_a = this.popoverElement) === null || _a === void 0 ? void 0 : _a.querySelector(".".concat(POPOVER2));
  };
  Popover2.prototype.getIsOpen = function (props) {
    var _a;
    // disabled popovers should never be allowed to open.
    if (props.disabled) {
      return false;
    } else {
      return (_a = props.isOpen) !== null && _a !== void 0 ? _a : props.defaultIsOpen;
    }
  };
  Popover2.prototype.render = function () {
    var _a = this.props,
      disabled = _a.disabled,
      content = _a.content,
      placement = _a.placement,
      _b = _a.position,
      position = _b === void 0 ? "auto" : _b,
      positioningStrategy = _a.positioningStrategy;
    var isOpen = this.state.isOpen;
    var isContentEmpty = content == null || typeof content === "string" && content.trim() === "";
    if (isContentEmpty) {
      // need to do this check in render(), because `isOpen` is derived from
      // state, and state can't necessarily be accessed in validateProps.
      if (!disabled && isOpen !== false && !isNodeEnv("production")) {
        console.warn(POPOVER2_WARN_EMPTY_CONTENT);
      }
      // just render the target without a content overlay if there is no content to display
      return this.renderTarget({
        ref: popover2_noop
      });
    }
    return react.createElement(Manager, null, react.createElement(Reference, null, this.renderTarget), react.createElement(Popper, {
      innerRef: this.popoverRef,
      placement: placement !== null && placement !== void 0 ? placement : positionToPlacement(position),
      strategy: positioningStrategy,
      modifiers: this.getPopperModifiers()
    }, this.renderPopover));
  };
  Popover2.prototype.componentDidMount = function () {
    this.updateDarkParent();
  };
  Popover2.prototype.componentDidUpdate = function (props, state) {
    _super.prototype.componentDidUpdate.call(this, props, state);
    this.updateDarkParent();
    var nextIsOpen = this.getIsOpen(this.props);
    if (this.props.isOpen != null && nextIsOpen !== this.state.isOpen) {
      this.setOpenState(nextIsOpen);
      // tricky: setOpenState calls setState only if this.props.isOpen is
      // not controlled, so we need to invoke setState manually here.
      this.setState({
        isOpen: nextIsOpen
      });
    } else if (this.props.disabled && this.state.isOpen && this.props.isOpen == null) {
      // special case: close an uncontrolled popover when disabled is set to true
      this.setOpenState(false);
    }
  };
  Popover2.prototype.validateProps = function (props) {
    if (props.isOpen == null && props.onInteraction != null) {
      console.warn(POPOVER2_WARN_UNCONTROLLED_ONINTERACTION);
    }
    if (props.hasBackdrop && !props.usePortal) {
      console.warn(POPOVER2_WARN_HAS_BACKDROP_INLINE);
    }
    if (props.hasBackdrop && props.interactionKind !== Popover2InteractionKind.CLICK) {
      console.warn(POPOVER2_HAS_BACKDROP_INTERACTION);
    }
    if (props.placement !== undefined && props.position !== undefined) {
      console.warn(POPOVER2_WARN_PLACEMENT_AND_POSITION_MUTEX);
    }
    var childrenCount = react.Children.count(props.children);
    var hasRenderTargetProp = props.renderTarget !== undefined;
    var hasTargetPropsProp = props.targetProps !== undefined;
    if (childrenCount === 0 && !hasRenderTargetProp) {
      console.warn(POPOVER2_REQUIRES_TARGET);
    }
    if (childrenCount > 1) {
      console.warn(POPOVER2_WARN_TOO_MANY_CHILDREN);
    }
    if (childrenCount > 0 && hasRenderTargetProp) {
      console.warn(POPOVER2_WARN_DOUBLE_TARGET);
    }
    if (hasRenderTargetProp && hasTargetPropsProp) {
      console.warn(POPOVER2_WARN_TARGET_PROPS_WITH_RENDER_TARGET);
    }
  };
  Popover2.prototype.getPopperModifiers = function () {
    var _a, _b, _c, _d;
    var _e = this.props,
      matchTargetWidth = _e.matchTargetWidth,
      modifiers = _e.modifiers,
      modifiersCustom = _e.modifiersCustom;
    var popperModifiers = [_assign({
      enabled: this.isArrowEnabled(),
      name: "arrow"
    }, modifiers === null || modifiers === void 0 ? void 0 : modifiers.arrow), _assign(_assign({
      name: "computeStyles"
    }, modifiers === null || modifiers === void 0 ? void 0 : modifiers.computeStyles), {
      options: _assign({
        adaptive: true,
        // We disable the built-in gpuAcceleration so that
        // Popper.js will return us easy to interpolate values
        // (top, left instead of transform: translate3d)
        // We'll then use these values to generate the needed
        // css transform values blended with the react-spring values
        gpuAcceleration: false
      }, (_a = modifiers === null || modifiers === void 0 ? void 0 : modifiers.computeStyles) === null || _a === void 0 ? void 0 : _a.options)
    }), _assign(_assign({
      enabled: this.isArrowEnabled(),
      name: "offset"
    }, modifiers === null || modifiers === void 0 ? void 0 : modifiers.offset), {
      options: _assign({
        offset: [0, POPOVER_ARROW_SVG_SIZE / 2]
      }, (_b = modifiers === null || modifiers === void 0 ? void 0 : modifiers.offset) === null || _b === void 0 ? void 0 : _b.options)
    }), _assign(_assign({
      name: "flip"
    }, modifiers === null || modifiers === void 0 ? void 0 : modifiers.flip), {
      options: _assign({
        boundary: this.props.boundary,
        rootBoundary: this.props.rootBoundary
      }, (_c = modifiers === null || modifiers === void 0 ? void 0 : modifiers.flip) === null || _c === void 0 ? void 0 : _c.options)
    }), _assign(_assign({
      name: "preventOverflow"
    }, modifiers === null || modifiers === void 0 ? void 0 : modifiers.preventOverflow), {
      options: _assign({
        boundary: this.props.boundary,
        rootBoundary: this.props.rootBoundary
      }, (_d = modifiers === null || modifiers === void 0 ? void 0 : modifiers.preventOverflow) === null || _d === void 0 ? void 0 : _d.options)
    })];
    if (matchTargetWidth) {
      popperModifiers.push(matchReferenceWidthModifier);
    }
    if (modifiersCustom !== undefined) {
      popperModifiers.push.apply(popperModifiers, modifiersCustom);
    }
    return popperModifiers;
  };
  // a wrapper around setState({ isOpen }) that will call props.onInteraction instead when in controlled mode.
  // starts a timeout to delay changing the state if a non-zero duration is provided.
  Popover2.prototype.setOpenState = function (isOpen, e, timeout) {
    var _this = this;
    var _a, _b, _c, _d, _e;
    // cancel any existing timeout because we have new state
    (_a = this.cancelOpenTimeout) === null || _a === void 0 ? void 0 : _a.call(this);
    if (timeout !== undefined && timeout > 0) {
      this.cancelOpenTimeout = this.setTimeout(function () {
        return _this.setOpenState(isOpen, e);
      }, timeout);
    } else {
      if (this.props.isOpen == null) {
        this.setState({
          isOpen: isOpen
        });
      } else {
        (_c = (_b = this.props).onInteraction) === null || _c === void 0 ? void 0 : _c.call(_b, isOpen, e);
      }
      if (!isOpen) {
        // non-null assertion because the only time `e` is undefined is when in controlled mode
        // or the rare special case in uncontrolled mode when the `disabled` flag is toggled true
        (_e = (_d = this.props).onClose) === null || _e === void 0 ? void 0 : _e.call(_d, e);
      }
    }
  };
  Popover2.prototype.updateDarkParent = function () {
    if (this.props.usePortal && this.state.isOpen) {
      var hasDarkParent = this.targetElement != null && this.targetElement.closest(".".concat(DARK)) != null;
      this.setState({
        hasDarkParent: hasDarkParent
      });
    }
  };
  Popover2.prototype.isElementInPopover = function (element) {
    var _a, _b;
    return (_b = (_a = this.getPopoverElement()) === null || _a === void 0 ? void 0 : _a.contains(element)) !== null && _b !== void 0 ? _b : false;
  };
  Popover2.displayName = "".concat(DISPLAYNAME_PREFIX, ".Popover2");
  Popover2.defaultProps = {
    boundary: "clippingParents",
    captureDismiss: false,
    defaultIsOpen: false,
    disabled: false,
    fill: false,
    hasBackdrop: false,
    hoverCloseDelay: 300,
    hoverOpenDelay: 150,
    inheritDarkTheme: true,
    interactionKind: Popover2InteractionKind.CLICK,
    matchTargetWidth: false,
    minimal: false,
    openOnTargetFocus: true,
    // N.B. we don't set a default for `placement` or `position` here because that would trigger
    // a warning in validateProps if the other prop is specified by a user of this component
    positioningStrategy: "absolute",
    renderTarget: undefined,
    shouldReturnFocusOnClose: false,
    targetTagName: "span",
    transitionDuration: 300,
    usePortal: true
  };
  return Popover2;
}(AbstractPureComponent2);

function popover2_noop() {
  // no-op
}
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/popover2/lib/esm/tooltip2Context.js
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var noOpDispatch = function noOpDispatch() {
  return null;
};
var Tooltip2Context = react.createContext([{}, noOpDispatch]);
var tooltip2Reducer = function tooltip2Reducer(state, action) {
  switch (action.type) {
    case "FORCE_DISABLED_STATE":
      return {
        forceDisabled: true
      };
    case "RESET_DISABLED_STATE":
      return {};
    default:
      return state;
  }
};
var Tooltip2Provider = function Tooltip2Provider(_a) {
  var children = _a.children,
    forceDisable = _a.forceDisable;
  var _b = react.useReducer(tooltip2Reducer, {}),
    state = _b[0],
    dispatch = _b[1];
  react.useEffect(function () {
    if (forceDisable) {
      dispatch({
        type: "FORCE_DISABLED_STATE"
      });
    } else {
      dispatch({
        type: "RESET_DISABLED_STATE"
      });
    }
  }, [forceDisable]);
  return react.createElement(Tooltip2Context.Provider, {
    value: [state, dispatch]
  }, typeof children === "function" ? children(state) : children);
};
;// CONCATENATED MODULE: ./node_modules/@blueprintjs/popover2/lib/esm/tooltip2.js
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */





// eslint-disable-next-line import/no-cycle



/**
 * Tooltip (v2) component.
 *
 * @see https://blueprintjs.com/docs/#popover2-package/tooltip2
 */
var Tooltip2 = /** @class */function (_super) {
  __extends(Tooltip2, _super);
  function Tooltip2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.popoverRef = react.createRef();
    // any descendant ContextMenu2s may update this ctxState
    _this.renderPopover = function (ctxState) {
      var _a;
      var _b;
      var _c = _this.props,
        children = _c.children,
        compact = _c.compact,
        disabled = _c.disabled,
        intent = _c.intent,
        popoverClassName = _c.popoverClassName,
        restProps = __rest(_c, ["children", "compact", "disabled", "intent", "popoverClassName"]);
      var popoverClasses = classnames_default()(TOOLTIP2, intentClass(intent), popoverClassName, (_a = {}, _a[COMPACT] = compact, _a));
      return react.createElement(Popover2, _assign({
        modifiers: {
          arrow: {
            enabled: !_this.props.minimal
          },
          offset: {
            options: {
              offset: [0, TOOLTIP_ARROW_SVG_SIZE / 2]
            }
          }
        }
      }, restProps, {
        autoFocus: false,
        canEscapeKeyClose: false,
        disabled: (_b = ctxState.forceDisabled) !== null && _b !== void 0 ? _b : disabled,
        enforceFocus: false,
        lazy: true,
        popoverClassName: popoverClasses,
        portalContainer: _this.props.portalContainer,
        ref: _this.popoverRef
      }), children);
    };
    return _this;
  }
  Tooltip2.prototype.render = function () {
    var _this = this;
    // if we have an ancestor Tooltip2Context, we should take its state into account in this render path,
    // it was likely created by a parent ContextMenu2
    return react.createElement(Tooltip2Context.Consumer, null, function (_a) {
      var state = _a[0];
      return react.createElement(Tooltip2Provider, _assign({}, state), _this.renderPopover);
    });
  };
  Tooltip2.prototype.reposition = function () {
    var _a;
    (_a = this.popoverRef.current) === null || _a === void 0 ? void 0 : _a.reposition();
  };
  Tooltip2.displayName = "".concat(DISPLAYNAME_PREFIX, ".Tooltip2");
  Tooltip2.defaultProps = {
    compact: false,
    hoverCloseDelay: 0,
    hoverOpenDelay: 100,
    interactionKind: "hover-target",
    minimal: false,
    transitionDuration: 100
  };
  return Tooltip2;
}(react.PureComponent);

;// CONCATENATED MODULE: ./src/components/icons/ArrowDown.tsx
function ArrowDown(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(IconWrapper,_objectSpread2(_objectSpread2({className:"bi bi-arrow-down",fill:props.fill||"black"},props),{},{children:/*#__PURE__*/(0,jsx_runtime.jsx)("path",{fillRule:"evenodd",d:"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z"})}));}
;// CONCATENATED MODULE: ./src/components/icons/ArrowLeft.tsx
function ArrowLeft(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(IconWrapper,_objectSpread2(_objectSpread2({className:"bi bi-arrow-left",fill:props.fill||"black"},props),{},{children:/*#__PURE__*/(0,jsx_runtime.jsx)("path",{fillRule:"evenodd",d:"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"})}));}
;// CONCATENATED MODULE: ./src/components/icons/ArrowRight.tsx
function ArrowRight(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(IconWrapper,_objectSpread2(_objectSpread2({className:"bi bi-arrow-right",fill:props.fill||"black"},props),{},{children:/*#__PURE__*/(0,jsx_runtime.jsx)("path",{fillRule:"evenodd",d:"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z"})}));}
;// CONCATENATED MODULE: ./src/components/icons/ArrowUp.tsx
function ArrowUp(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(IconWrapper,_objectSpread2(_objectSpread2({className:"bi bi-arrow-up",fill:props.fill||"black"},props),{},{children:/*#__PURE__*/(0,jsx_runtime.jsx)("path",{fillRule:"evenodd",d:"M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z"})}));}
;// CONCATENATED MODULE: ./src/fractals/Components/Controls/controls.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var controls = ({});
;// CONCATENATED MODULE: ./src/fractals/Components/Controls/PositionControl.tsx
function PositionControl(props){var _useState=(0,react.useState)(props.x),_useState2=slicedToArray_slicedToArray(_useState,2),xPosition=_useState2[0],setXPosition=_useState2[1];var _useState3=(0,react.useState)(props.y),_useState4=slicedToArray_slicedToArray(_useState3,2),yPosition=_useState4[0],setYPosition=_useState4[1];var _useState5=(0,react.useState)(''),_useState6=slicedToArray_slicedToArray(_useState5,2),upClass=_useState6[0],setUpClass=_useState6[1];var _useState7=(0,react.useState)(''),_useState8=slicedToArray_slicedToArray(_useState7,2),downClass=_useState8[0],setDownClass=_useState8[1];var _useState9=(0,react.useState)(''),_useState10=slicedToArray_slicedToArray(_useState9,2),leftClass=_useState10[0],setLeftClass=_useState10[1];var _useState11=(0,react.useState)(''),_useState12=slicedToArray_slicedToArray(_useState11,2),rightClass=_useState12[0],setRightClass=_useState12[1];function moveLeft(){var _document$getElementB;var newX=xPosition-props.inc;setXPosition(newX);setLeftClass('active');(_document$getElementB=document.getElementById("".concat(props.id,"-arrow-left")))===null||_document$getElementB===void 0?void 0:_document$getElementB.focus();props.setPosition([newX,yPosition]);}function moveRight(){var _document$getElementB2;var newX=xPosition+props.inc;setXPosition(newX);setRightClass('active');(_document$getElementB2=document.getElementById("".concat(props.id,"-arrow-right")))===null||_document$getElementB2===void 0?void 0:_document$getElementB2.focus();props.setPosition([newX,yPosition]);}function moveUp(){var _document$getElementB3;var newY=yPosition-props.inc;setYPosition(newY);setUpClass('active');(_document$getElementB3=document.getElementById("".concat(props.id,"-arrow-up")))===null||_document$getElementB3===void 0?void 0:_document$getElementB3.focus();props.setPosition([xPosition,newY]);}function moveDown(){var _document$getElementB4;var newY=yPosition+props.inc;setYPosition(newY);setDownClass('active');(_document$getElementB4=document.getElementById("".concat(props.id,"-arrow-down")))===null||_document$getElementB4===void 0?void 0:_document$getElementB4.focus();props.setPosition([xPosition,newY]);}function resetClasses(){setDownClass('');setUpClass('');setLeftClass('');setRightClass('');}function handleKeyboardInput(e){if(!props.focused){return;}if(["ArrowLeft","ArrowRight","ArrowUp","ArrowDown"].includes(e.key)){e.preventDefault();// prevent scrolling
switch(e.key){case"ArrowLeft":moveLeft();break;case"ArrowRight":moveRight();break;case"ArrowUp":moveUp();break;case"ArrowDown":moveDown();break;}}if(props.nextFocus&&(e.key==="Tab"||e.key==="PageDown")){e.preventDefault();// prevent scrolling or focusing on the next key in the group
props.nextFocus.focus();}if(props.prevFocus&&e.key==="PageUp"){e.preventDefault();// prevent scrolling or focusing on the next key in the group
props.prevFocus.focus();}}function handleFocus(){if(props.setInFocus){props.setInFocus(props.id);}}if(props.invisible){return/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"position-control",onKeyDown:function onKeyDown(e){return handleKeyboardInput(e);},onKeyUp:function onKeyUp(){return resetClasses();},children:props.children});}return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"position-control",onKeyDown:function onKeyDown(e){return handleKeyboardInput(e);},onKeyUp:function onKeyUp(){return resetClasses();},onFocus:handleFocus,tabIndex:props.tabIndex,children:[/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"position-control-row",children:/*#__PURE__*/(0,jsx_runtime.jsx)("button",{onClick:moveUp,className:upClass,id:"".concat(props.id,"-arrow-up"),tabIndex:-1,children:/*#__PURE__*/(0,jsx_runtime.jsx)(ArrowUp,{})})}),/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"position-control-row",children:[/*#__PURE__*/(0,jsx_runtime.jsx)("button",{onClick:moveLeft,className:leftClass,id:"".concat(props.id,"-arrow-left"),tabIndex:-1,children:/*#__PURE__*/(0,jsx_runtime.jsx)(ArrowLeft,{})}),/*#__PURE__*/(0,jsx_runtime.jsx)("button",{onClick:moveRight,className:rightClass,id:"".concat(props.id,"-arrow-right"),tabIndex:-1,children:/*#__PURE__*/(0,jsx_runtime.jsx)(ArrowRight,{})})]}),/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"position-control-row",children:/*#__PURE__*/(0,jsx_runtime.jsx)("button",{onClick:moveDown,className:downClass,id:"".concat(props.id,"-arrow-down"),tabIndex:-1,children:/*#__PURE__*/(0,jsx_runtime.jsx)(ArrowDown,{})})})]});}
;// CONCATENATED MODULE: ./src/fractals/Components/ComplexPlane/altControls.tsx
function ComplexPlaneAltControls(props){var _useState=(0,react.useState)(false),_useState2=slicedToArray_slicedToArray(_useState,2),tracking=_useState2[0],setTracking=_useState2[1];var _useState3=(0,react.useState)([0,0]),_useState4=slicedToArray_slicedToArray(_useState3,2),position=_useState4[0],setPosition=_useState4[1];function handleKeyboardInput(e){if(props.inFocus!=='canvas'){return;}if(["ArrowLeft","ArrowRight","ArrowUp","ArrowDown"].includes(e.key)){e.preventDefault();// prevent scrolling
props.handleMouseMove(position);if(!tracking){startMovement();}}if(e.key==='+'){props.zoomIn();}if(e.key==='-'){props.zoomOut();}}function startMovement(){setTracking(true);props.handleMouseDown();}function endMovement(){setTracking(false);props.handleMouseUp();}var inc=Math.round(props.canvasSize/80);return/*#__PURE__*/(0,jsx_runtime.jsx)("div",{onKeyDown:function onKeyDown(e){return handleKeyboardInput(e);},onKeyUp:endMovement,children:/*#__PURE__*/(0,jsx_runtime.jsx)(PositionControl,{focused:props.inFocus==='canvas',id:"pan",inc:inc,invisible:true,setPosition:setPosition,x:position[0],y:position[1],children:props.children})});}
;// CONCATENATED MODULE: ./src/fractals/Components/ComplexPlane/ComplexPlane.tsx
var FullScreenContext=/*#__PURE__*/(0,react.createContext)(false);function ComplexPlaneFractalDisplay(props){var _useState=(0,react.useState)(false),_useState2=slicedToArray_slicedToArray(_useState,2),fullScreen=_useState2[0],setFullScreen=_useState2[1];var _useState3=(0,react.useState)(false),_useState4=slicedToArray_slicedToArray(_useState3,2),trackingMouse=_useState4[0],setTrackingMouse=_useState4[1];var _useState5=(0,react.useState)([0,0]),_useState6=slicedToArray_slicedToArray(_useState5,2),cursorPosition=_useState6[0],setCursorPosition=_useState6[1];var _useState7=(0,react.useState)(props.startValue),_useState8=slicedToArray_slicedToArray(_useState7,2),startValue=_useState8[0],setStartValue=_useState8[1];var _useState9=(0,react.useState)(props.range),_useState10=slicedToArray_slicedToArray(_useState9,2),range=_useState10[0],setRange=_useState10[1];var _useState11=(0,react.useState)(getSize(fullScreen)),_useState12=slicedToArray_slicedToArray(_useState11,2),canvasSize=_useState12[0],setCanvasSize=_useState12[1];var _useState13=(0,react.useState)([0,0]),_useState14=slicedToArray_slicedToArray(_useState13,2),pixelOffset=_useState14[0],setPixelOffset=_useState14[1];var _useState15=(0,react.useState)(null),_useState16=slicedToArray_slicedToArray(_useState15,2),inFocus=_useState16[0],setInFocus=_useState16[1];var imageData=(0,react.useMemo)(function(){return props.createImageData(canvasSize,startValue,range,props.xReal,props.xImaginary,props.drawParameters);},[canvasSize,range,startValue,props]);var startDragPosition=(0,react.useRef)([0,0]);var offset=(0,react.useRef)([0,0]);(0,react.useEffect)(function(){var func=function func(){var newSize=getSize(fullScreen);setCanvasSize(newSize);};window.addEventListener("resize",func);return function(){return window.removeEventListener("resize",func);};},[fullScreen,canvasSize]);function handleMouseDown(){setTrackingMouse(true);var start=cursorPosition;startDragPosition.current=start;}function moveImage(){var currentPosition=cursorPosition;if(startDragPosition.current){offset.current=[currentPosition[0]-startDragPosition.current[0],currentPosition[1]-startDragPosition.current[1]];}setPixelOffset(offset.current);}function recalculateImage(){var pixelIncrement=range/canvasSize;if(offset.current[0]!==0||offset.current[1]!==0){var newStartValue=[startValue[0]-offset.current[0]*pixelIncrement,startValue[1]+offset.current[1]*pixelIncrement];setPixelOffset([0,0]);setStartValue(newStartValue);offset.current=[0,0];}}function handleMouseMove(val){setCursorPosition(val);if(trackingMouse){moveImage();}}function handleMouseUp(){recalculateImage();setTrackingMouse(false);startDragPosition.current=[0,0];}function updateStartValue(range){var increment=range/canvasSize;var newValue=toConsumableArray_toConsumableArray(startValue);newValue[0]=startValue[0]+increment;newValue[1]=startValue[1]+increment;setStartValue(newValue);}function zoomIn(){var oldRange=range;updateStartValue(oldRange);setRange(oldRange*0.8);}function zoomOut(){var oldRange=range;updateStartValue(oldRange);setRange(oldRange*1.25);}var buttonPairs=[{label1:'zoom in',label2:'zoom out',handleClick1:zoomIn,handleClick2:zoomOut,tabIndex:1}];var canvasInputs={onMouseDown:{value:cursorPosition,toggle:function toggle(){return handleMouseDown();}},onMouseUp:{value:cursorPosition,toggle:function toggle(){return handleMouseUp();}},onMouseMove:{value:cursorPosition,setValue:handleMouseMove}};var complexDrawParameters=_objectSpread2(_objectSpread2({},props.drawParameters),{},{imageData:imageData,pixelOffset:pixelOffset,xReal:props.xReal,xImaginary:props.xImaginary});return/*#__PURE__*/(0,jsx_runtime.jsx)(FullScreenContext.Provider,{value:fullScreen,children:/*#__PURE__*/(0,jsx_runtime.jsx)(ComplexPlaneAltControls,{canvasSize:canvasSize,handleMouseUp:handleMouseUp,handleMouseMove:handleMouseMove,handleMouseDown:handleMouseDown,inFocus:inFocus,setCursorPosition:setCursorPosition,setInFocus:setInFocus,zoomIn:zoomIn,zoomOut:zoomOut,children:/*#__PURE__*/(0,jsx_runtime.jsx)(FractalDisplay,{buttonPairs:buttonPairs,canvasInputs:canvasInputs,controlsChildren:props.controlsChildren,canvasSize:canvasSize,description:props.description,descriptionTabIndex:props.descriptionTabIndex,footerTabIndex:props.footerTabIndex,draw:props.draw,drawParameters:complexDrawParameters,nextLink:props.nextLink,prevCanvasSize:100,prevLink:props.prevLink,setFullScreen:setFullScreen,setInFocus:setInFocus,sliders:props.sliders,title:props.title})})});}
;// CONCATENATED MODULE: ./src/fractals/Components/Canvas.tsx
function Canvas(props){var _c$current,_c$current2,_props$canvasInputs;var c=(0,react.useRef)(null);var offsetX=c===null||c===void 0?void 0:(_c$current=c.current)===null||_c$current===void 0?void 0:_c$current.getBoundingClientRect().left;var offsetY=c===null||c===void 0?void 0:(_c$current2=c.current)===null||_c$current2===void 0?void 0:_c$current2.getBoundingClientRect().top;var fullScreen=(0,react.useContext)(FullScreenContext);var navTabs=(0,react.useContext)(NavTabContext);var tabIndex=fullScreen?1:navTabs+1;var size=props.size;var tooltipText=fullScreen?'exit full screen':'full screen view';function handleKeyboardInput(e){if(e.key==='Enter'){props.handleClick();}}(0,react.useEffect)(function(){if(c&&c.current){var drawArgs={canvas:c.current,size:size,parameters:props.drawParameters};props.draw(drawArgs);}},[props,size,c,props.drawParameters]);function getCursorPosition(e){if(fullScreen||offsetX&&offsetY){return[Math.round(e.clientX-(offsetX||0)),Math.round(e.clientY-(offsetY||0))];}return[0,0];}function manageEventHandler(e,eventType){var eventHandler=props!==null&&props!==void 0&&props.canvasInputs?props.canvasInputs[eventType]:null;if(!eventHandler)return;if(eventHandler.setValue){eventHandler.setValue(getCursorPosition(e));}if(eventHandler.toggle)eventHandler===null||eventHandler===void 0?void 0:eventHandler.toggle();}return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"canvas-wrapper",children:[/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"tooltip-wrapper",children:/*#__PURE__*/(0,jsx_runtime.jsx)(Tooltip2,{content:/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"tooltip",children:tooltipText}),hoverOpenDelay:500,children:/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"change-view-icon",onClick:props.handleClick,onKeyDown:handleKeyboardInput,tabIndex:tabIndex+1,children:fullScreen?/*#__PURE__*/(0,jsx_runtime.jsx)(ExitFullScreen,{width:25,height:25}):/*#__PURE__*/(0,jsx_runtime.jsx)(EnterFullScreen,{width:25,height:25})})})}),/*#__PURE__*/(0,jsx_runtime.jsx)("canvas",{className:"floating-box",height:size,onFocus:function onFocus(){return props.setInFocus('canvas');},onMouseDown:function onMouseDown(e){return manageEventHandler(e,"onMouseDown");},onMouseMove:function onMouseMove(e){return manageEventHandler(e,"onMouseMove");},onMouseUp:function onMouseUp(e){return manageEventHandler(e,"onMouseUp");},ref:c,tabIndex:tabIndex,width:size},(_props$canvasInputs=props.canvasInputs)===null||_props$canvasInputs===void 0?void 0:_props$canvasInputs.key)]});}
;// CONCATENATED MODULE: ./src/components/icons/ChevronLeft.tsx
function ChevronLeft(){return/*#__PURE__*/(0,jsx_runtime.jsx)(IconWrapper,{className:"bi bi-chevron-compact-left",children:/*#__PURE__*/(0,jsx_runtime.jsx)("path",{fillRule:"evenodd",d:"M9.224 1.553a.5.5 0 0 1 .223.67L6.56 8l2.888 5.776a.5.5 0 1 1-.894.448l-3-6a.5.5 0 0 1 0-.448l3-6a.5.5 0 0 1 .67-.223z"})});}
;// CONCATENATED MODULE: ./src/components/icons/ChevronRight.tsx
function ChevronRight(){return/*#__PURE__*/(0,jsx_runtime.jsx)(IconWrapper,{className:"bi bi-chevron-compact-right",children:/*#__PURE__*/(0,jsx_runtime.jsx)("path",{fillRule:"evenodd",d:"M6.776 1.553a.5.5 0 0 1 .671.223l3 6a.5.5 0 0 1 0 .448l-3 6a.5.5 0 1 1-.894-.448L9.44 8 6.553 2.224a.5.5 0 0 1 .223-.671z"})});}
;// CONCATENATED MODULE: ./src/fractals/default-view/AppNav.tsx
function AppNav(props){var prevLink=props.prevLink,nextLink=props.nextLink;var prevTabIndex=prevLink?props.footerTabIndex+1:props.footerTabIndex;var nextTabIndex=prevTabIndex+1;return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"app-nav",id:"app-nav",children:[prevLink&&/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"floating-box",children:/*#__PURE__*/(0,jsx_runtime.jsxs)("a",{href:prevLink,tabIndex:prevTabIndex,children:[/*#__PURE__*/(0,jsx_runtime.jsx)(ChevronLeft,{}),"Previous fractal"]})}),nextLink&&/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"floating-box",children:/*#__PURE__*/(0,jsx_runtime.jsxs)("a",{href:nextLink,tabIndex:nextTabIndex,children:["Next fractal ",/*#__PURE__*/(0,jsx_runtime.jsx)(ChevronRight,{})]})})]});}
;// CONCATENATED MODULE: ./src/fractals/default-view/default-view.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var default_view = ({});
;// CONCATENATED MODULE: ./src/fractals/default-view/DefaultLayout.tsx
function DefaultLayout(props){if(document.fullscreenElement){document.exitFullscreen();}var height=props.canvasSize+30+"px";return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"default-layout",children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Header,{}),/*#__PURE__*/(0,jsx_runtime.jsx)("h1",{children:props.title}),/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"default-layout-inner",children:[/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"top-row",style:{height:height},children:[/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"canvas floating-box",tabIndex:-1,children:/*#__PURE__*/(0,jsx_runtime.jsx)(Canvas,{canvasInputs:props.canvasInputs,draw:props.draw,drawParameters:props.drawParameters,handleClick:props.handleClick,setInFocus:props.setInFocus,size:props.canvasSize})}),/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"controls floating-box",tabIndex:10,onFocus:function onFocus(){return props.setInFocus('controls');},children:props.controls}),/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"description",tabIndex:props.descriptionTabIndex,onFocus:function onFocus(){return props.setInFocus('description');},children:props.description})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"extra-controls",onFocus:function onFocus(){return props.setInFocus('extra-control');},children:[props.extraControls&&props.extraControls,/*#__PURE__*/(0,jsx_runtime.jsx)(AppNav,{footerTabIndex:props.footerTabIndex||props.descriptionTabIndex,prevLink:props.prevLink,nextLink:props.nextLink})]})]})]});}
;// CONCATENATED MODULE: ./src/fractals/full-screen-view/full-screen-view.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var full_screen_view = ({});
;// CONCATENATED MODULE: ./src/fractals/full-screen-view/FullScreenLayout.tsx
function FullScreenLayout(props){return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"full-screen-layout",children:[/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"canvas",children:/*#__PURE__*/(0,jsx_runtime.jsx)(Canvas,{canvasInputs:props.canvasInputs,draw:props.draw,drawParameters:props.drawParameters,handleClick:props.handleClick,setInFocus:props.setInFocus,size:props.canvasSize})}),/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"controls",children:props.controls})]});}
;// CONCATENATED MODULE: ./src/components/icons/ChevronUp.tsx
function ChevronUp(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(IconWrapper,_objectSpread2(_objectSpread2({className:"bi bi-chevron-compact-up"},props),{},{children:/*#__PURE__*/(0,jsx_runtime.jsx)("path",{fillRule:"evenodd",d:"M7.776 5.553a.5.5 0 0 1 .448 0l6 3a.5.5 0 1 1-.448.894L8 6.56 2.224 9.447a.5.5 0 1 1-.448-.894l6-3z"})}));}
;// CONCATENATED MODULE: ./src/components/icons/ChevronDown.tsx
function ChevronDown(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(IconWrapper,_objectSpread2(_objectSpread2({className:"bi bi-chevron-compact-down"},props),{},{children:/*#__PURE__*/(0,jsx_runtime.jsx)("path",{fillRule:"evenodd",d:"M1.553 6.776a.5.5 0 0 1 .67-.223L8 9.44l5.776-2.888a.5.5 0 1 1 .448.894l-6 3a.5.5 0 0 1-.448 0l-6-3a.5.5 0 0 1-.223-.67z"})}));}
;// CONCATENATED MODULE: ./src/fractals/Components/Controls/ControlsHeader.tsx
function ControlHeader(props){var tooltipText=props.allVisible?'hide':'show';function toggleVisible(){props.allVisible?props.setAllVisible(false):props.setAllVisible(true);}function handleKeyboardInput(e){if(e.key==='Enter'){toggleVisible();}if(e.key==='ArrowDown'){props.setAllVisible(true);}if(e.key==='ArrowUp'){props.setAllVisible(false);}}return/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"control-header",children:/*#__PURE__*/(0,jsx_runtime.jsx)(Tooltip2,{content:/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"tooltip-bottom",children:[" ",tooltipText]}),hoverOpenDelay:500,children:/*#__PURE__*/(0,jsx_runtime.jsxs)("h2",{onClick:toggleVisible,onKeyDown:function onKeyDown(e){return handleKeyboardInput(e);},children:[" Controls ",props.allVisible?/*#__PURE__*/(0,jsx_runtime.jsx)(ChevronUp,{width:25,height:25}):/*#__PURE__*/(0,jsx_runtime.jsx)(ChevronDown,{width:25,height:25})]})})});}
;// CONCATENATED MODULE: ./src/fractals/Components/Controls/Slider.tsx
function Slider(props){var _useState=(0,react.useState)(props.value),_useState2=slicedToArray_slicedToArray(_useState,2),localValue=_useState2[0],setLocalValue=_useState2[1];var step=props.stepSize||1;function getValidValue(operation){var change=operation==="+"?step:-step;var val=parseFloat((localValue+change).toFixed(props.inputRounding||1));if(val>props.maxValue){return props.maxValue;}if(val<props.minValue){return props.minValue;}return val;}function acceptValue(){props.setValue(localValue);props.setShowSliderInfo&&props.setShowSliderInfo(false);}function handleInput(){if(props.delayed){props.setShowSliderInfo&&props.setShowSliderInfo(true);}}function handleChange(e){var newValue=parseFloat(parseFloat(e.currentTarget.value).toFixed(props.inputRounding||1));setLocalValue(newValue);handleInput();}function handleKeyboardInput(e){if(["ArrowRight","ArrowUp","+"].includes(e.key)){var newValue=getValidValue("+");if(props.delayed){setLocalValue(newValue);handleInput();}else{e.preventDefault();setLocalValue(newValue);props.setValue(newValue);}}if(["ArrowLeft","ArrowDown","-"].includes(e.key)){var _newValue=getValidValue('-');if(props.delayed){setLocalValue(_newValue);handleInput();}else{e.preventDefault();setLocalValue(_newValue);props.setValue(_newValue);}}if(e.key==='Enter'&&props.delayed){e.preventDefault();acceptValue();}else{handleInput();}}return/*#__PURE__*/(0,jsx_runtime.jsx)("div",{tabIndex:-1,children:/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"slider-input-container slider-grid ".concat(props.sliderOnly?'vertical':''),tabIndex:-1,children:[!props.sliderOnly&&/*#__PURE__*/(0,jsx_runtime.jsxs)(react.Fragment,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("input",{max:props.maxValue,min:props.minValue,onBlur:function onBlur(){return setLocalValue(props.value);},onChange:function onChange(e){return handleChange(e);},onKeyDown:function onKeyDown(e){return handleKeyboardInput(e);},onMouseUp:acceptValue,tabIndex:props.tabIndex,type:"number",step:step,value:localValue}),/*#__PURE__*/(0,jsx_runtime.jsx)("div",{tabIndex:-1,className:"right",children:props.minValue})]}),/*#__PURE__*/(0,jsx_runtime.jsx)("input",{className:"slider-input ".concat(props.sliderOnly?'slider-only':''),id:props.id,max:props.maxValue,min:props.minValue,name:props.id,onBlur:function onBlur(){return setLocalValue(props.value);},onChange:function onChange(e){return handleChange(e);},onKeyDown:function onKeyDown(e){return handleKeyboardInput(e);},onMouseUp:acceptValue,step:step,tabIndex:props.tabIndex+1,type:"range",value:localValue}),!props.sliderOnly&&/*#__PURE__*/(0,jsx_runtime.jsx)("div",{tabIndex:-1,children:props.maxValue})]})},props.value);}
;// CONCATENATED MODULE: ./src/components/icons/Info.tsx
function Info(){return/*#__PURE__*/(0,jsx_runtime.jsxs)(IconWrapper,{className:"bi bi-info-square",children:[/*#__PURE__*/(0,jsx_runtime.jsx)("path",{d:"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"}),/*#__PURE__*/(0,jsx_runtime.jsx)("path",{d:"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"})]});}
;// CONCATENATED MODULE: ./src/fractals/Components/Controls/InfoLabel.tsx
function InfoLabel(props){var _useState=(0,react.useState)(false),_useState2=slicedToArray_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];function toggleIsOpen(){if(isOpen){setIsOpen(false);}else{setIsOpen(true);}}if(!props.info)return null;return/*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("label",{children:/*#__PURE__*/(0,jsx_runtime.jsx)("span",{onClick:toggleIsOpen,children:/*#__PURE__*/(0,jsx_runtime.jsx)(Info,{})})}),/*#__PURE__*/(0,jsx_runtime.jsx)(Collapse,{isOpen:isOpen,children:props.info})]});}
;// CONCATENATED MODULE: ./src/fractals/Components/Controls/SliderControl.tsx
function SliderControl(props){var _props$info;return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"slider-container",children:[/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"slider-label",children:[/*#__PURE__*/(0,jsx_runtime.jsx)(InfoLabel,{info:(_props$info=props.info)===null||_props$info===void 0?void 0:_props$info.toString()}),/*#__PURE__*/(0,jsx_runtime.jsx)("label",{htmlFor:props.id,children:props.label})]}),/*#__PURE__*/(0,jsx_runtime.jsx)("div",{children:/*#__PURE__*/(0,jsx_runtime.jsx)(Slider,{delayed:props.delayed,id:props.id,inputRounding:props.inputRounding,label:props.label,maxValue:props.maxValue,minValue:props.minValue,setShowSliderInfo:props.setShowSliderInfo,setValue:props.setValue,stepSize:props.stepSize||1,tabIndex:props.tabIndex,value:props.value,sliderOnly:props.sliderOnly||false})})]});}
;// CONCATENATED MODULE: ./src/fractals/Components/Controls/ButtonControlPair.tsx
function ButtonPairControl(props){return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"slider-container",children:[/*#__PURE__*/(0,jsx_runtime.jsx)(InfoLabel,{info:props.info}),/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Button,{onClick:props.handleClick1,tabIndex:props.tabIndex,children:props.label1}),/*#__PURE__*/(0,jsx_runtime.jsx)(Button,{onClick:props.handleClick2,tabIndex:props.tabIndex+1,children:props.label2})]})]});}
;// CONCATENATED MODULE: ./src/fractals/Components/Controls/RadioInput.tsx
function RadioInput(props){var options=props.options.map(function(o,index){return/*#__PURE__*/(0,jsx_runtime.jsx)(Radio,{label:o,value:o,tabIndex:props.tabIndex+index},o);});function handleChange(e){props.setValue(e.currentTarget.value);}return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"slider-container",children:[/*#__PURE__*/(0,jsx_runtime.jsx)(InfoLabel,{info:props.info}),/*#__PURE__*/(0,jsx_runtime.jsx)("div",{children:/*#__PURE__*/(0,jsx_runtime.jsx)(RadioGroup,{label:props.label,onChange:function onChange(e){return handleChange(e);},selectedValue:props.value,children:options})})]});}
;// CONCATENATED MODULE: ./src/config/colours.ts
var c={CREAM:'rgb(254, 246, 225)',PINK:'rgb(252, 207, 210)',GREEN:'rgb(150, 184, 150)',CORAL:'rgb(231, 99, 123)',BROWN:'rgb(139, 102, 110)'};var cArr={CREAM:[254,246,225],PINK:[252,207,210],GREEN:[150,184,150],CORAL:[231,99,123],BROWN:[139,102,110]};
;// CONCATENATED MODULE: ./src/fractals/Components/Controls/BezierCurveImage.tsx
function drawCurve(ctx,cWidth,cHeight,trunkEnd,angle,l,curveRatio,curveDistanceRatio){var leftEnd=findLineEnd(trunkEnd,angle,l);var _getQuadraticCurvePar=getQuadraticCurveParams(trunkEnd,-angle,l,curveRatio,curveDistanceRatio,"right"),_getQuadraticCurvePar2=slicedToArray_slicedToArray(_getQuadraticCurvePar,4),cpX=_getQuadraticCurvePar2[0],cpY=_getQuadraticCurvePar2[1],x=_getQuadraticCurvePar2[2],y=_getQuadraticCurvePar2[3];ctx.fillStyle=c.CREAM;ctx.strokeStyle=c.BROWN;ctx.fillRect(0,0,cWidth,cHeight);ctx.lineWidth=1;// draw trunk
ctx.beginPath();ctx.moveTo(cWidth/2,cHeight);ctx.lineTo.apply(ctx,toConsumableArray_toConsumableArray(trunkEnd));ctx.moveTo.apply(ctx,toConsumableArray_toConsumableArray(trunkEnd));// draw left branch
ctx.lineTo.apply(ctx,toConsumableArray_toConsumableArray(leftEnd));ctx.stroke();ctx.closePath();//draw curve and control point
ctx.lineWidth=3;ctx.beginPath();ctx.moveTo.apply(ctx,toConsumableArray_toConsumableArray(trunkEnd));ctx.quadraticCurveTo(cpX,cpY,x,y);ctx.stroke();ctx.closePath();ctx.beginPath();ctx.fillStyle=c.CORAL;ctx.arc(cpX,cpY,5,0,2*Math.PI,false);ctx.fill();ctx.closePath();}
;// CONCATENATED MODULE: ./src/fractals/Components/Controls/BezierCurveControl.tsx
function BezierCurveControl(props){var canvasRef=(0,react.useRef)(null);var cWidth=300;var cHeight=360;var l=120;var angle=Math.PI/180*props.angleDeg;// convert to radians
(0,react.useEffect)(function(){var _canvasRef$current;var trunkEnd=[cWidth/2,cHeight-150];var ctx=canvasRef===null||canvasRef===void 0?void 0:(_canvasRef$current=canvasRef.current)===null||_canvasRef$current===void 0?void 0:_canvasRef$current.getContext("2d");if(ctx){drawCurve(ctx,cWidth,cHeight,trunkEnd,angle,l,props.curveRatio,props.curveDistanceRatio);}},[props,angle]);return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"bezier-container",children:[/*#__PURE__*/(0,jsx_runtime.jsx)(InfoLabel,{info:props.info}),/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("h3",{children:"Adjust curve"}),/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"bezier-curve-grid",children:[/*#__PURE__*/(0,jsx_runtime.jsx)("div",{id:"bezier-canvas",children:/*#__PURE__*/(0,jsx_runtime.jsx)("canvas",{width:cWidth,height:cHeight,ref:canvasRef})}),/*#__PURE__*/(0,jsx_runtime.jsx)("div",{id:"bezier-vertical-slider",children:/*#__PURE__*/(0,jsx_runtime.jsx)(Slider,{label:props.label1,minValue:0,maxValue:1,setValue:props.setCurveRatio,tabIndex:props.tabIndex,value:props.curveRatio,stepSize:0.05,sliderOnly:true})}),/*#__PURE__*/(0,jsx_runtime.jsx)("div",{id:"bezier-horizontal-slider",children:/*#__PURE__*/(0,jsx_runtime.jsx)(Slider,{label:props.label2,minValue:-1,maxValue:1,setValue:props.setCurveDistanceRatio,tabIndex:props.tabIndex+1,value:props.curveDistanceRatio,stepSize:0.05,sliderOnly:true})})]})]})]});}
;// CONCATENATED MODULE: ./src/fractals/Components/Controls/ControlsBody.tsx
function renderSliderControls(initTabIndex,sliders,setShowSliderInfo){if(!sliders)return[];return sliders.map(function(slider){var _slider$label;var id=slider.id?slider.id:(_slider$label=slider.label)===null||_slider$label===void 0?void 0:_slider$label.toString();return/*#__PURE__*/(0,jsx_runtime.jsx)(SliderControl,{delayed:slider.delayed,inputRounding:slider.inputRounding,id:id,info:slider.info,label:slider.label,maxValue:slider.maxValue,minValue:slider.minValue,setShowSliderInfo:setShowSliderInfo,setValue:slider.setValue,sliderOnly:slider.sliderOnly,stepSize:slider.stepSize,tabIndex:2*slider.tabIndex+initTabIndex,value:slider.value},id);});}function renderButtonPairs(initTabIndex,buttonsPairs){if(!buttonsPairs)return[];return buttonsPairs.map(function(bp){return/*#__PURE__*/(0,jsx_runtime.jsx)(ButtonPairControl,{handleClick2:bp.handleClick2,handleClick1:bp.handleClick1,info:bp.info,label1:bp.label1,label2:bp.label2,tabIndex:initTabIndex},bp.info||bp.label1);});}function renderRadioInputs(radioInputs){if(!radioInputs)return[];return radioInputs.map(function(r){return/*#__PURE__*/(0,jsx_runtime.jsx)(RadioInput,{info:r.info,label:r.label,options:r.options,setValue:r.setValue,tabIndex:r.tabIndex,value:r.value},r.label);});}function renderBezierCurveInputs(inputs){if(!inputs)return null;return inputs.map(function(i){return/*#__PURE__*/(0,jsx_runtime.jsx)(BezierCurveControl,{curveRatio:i.curveRatio,curveDistanceRatio:i.curveDistanceRatio,angleDeg:i.angleDeg,setCurveDistanceRatio:i.setCurveDistanceRatio,setCurveRatio:i.setCurveRatio,info:i.info,label1:i.label1,label2:i.label2,tabIndex:i.tabIndex},i.info||i.label1);});}function AltControls(props){var _useState=(0,react.useState)(false),_useState2=slicedToArray_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];if(!show){return/*#__PURE__*/(0,jsx_runtime.jsx)("div",{children:/*#__PURE__*/(0,jsx_runtime.jsxs)("button",{className:"alt-button",onClick:function onClick(){return setShow(true);},tabIndex:12,children:["Show alternative keyboard-only controls",/*#__PURE__*/(0,jsx_runtime.jsx)(ChevronDown,{})]})});}return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{children:[/*#__PURE__*/(0,jsx_runtime.jsxs)("button",{className:"alt-button",onClick:function onClick(){return setShow(false);},tabIndex:12,children:["Hide alternative keyboard-only controls",/*#__PURE__*/(0,jsx_runtime.jsx)(ChevronUp,{})]}),props.children]});}function ControlsBody(props){var fullScreen=(0,react.useContext)(FullScreenContext);var navTabIndex=(0,react.useContext)(NavTabContext);var _useState3=(0,react.useState)(false),_useState4=slicedToArray_slicedToArray(_useState3,2),showSliderInfo=_useState4[0],setShowSliderInfo=_useState4[1];if(fullScreen&&!props.allVisible){return null;}var initTabIndex=fullScreen?3:navTabIndex+3;var sliders=renderSliderControls(initTabIndex,props.sliders,setShowSliderInfo);var buttons=renderButtonPairs(initTabIndex,props.buttonPairs);var radio=renderRadioInputs(props.radioInputs);var curves=renderBezierCurveInputs(props.curves);return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{children:[buttons,sliders,showSliderInfo&&/*#__PURE__*/(0,jsx_runtime.jsx)("p",{className:"slide-open",children:"To set the desired value, release the mouse button or press 'Enter'."}),radio,curves,!!props.altControls&&/*#__PURE__*/(0,jsx_runtime.jsx)(AltControls,{tabIndex:props.altTabIndex||-1,children:props.altControls})]});}
;// CONCATENATED MODULE: ./src/fractals/Components/Controls/index.tsx
function Controls(props){var fullScreen=(0,react.useContext)(FullScreenContext);var _useState=(0,react.useState)(!fullScreen),_useState2=slicedToArray_slicedToArray(_useState,2),allVisible=_useState2[0],setAllVisible=_useState2[1];var initTabIndex=fullScreen?3:10;return/*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"control-header-wrapper",children:fullScreen&&/*#__PURE__*/(0,jsx_runtime.jsx)(ControlHeader,{allVisible:allVisible,setAllVisible:setAllVisible})}),props.children,/*#__PURE__*/(0,jsx_runtime.jsx)(ControlsBody,_objectSpread2(_objectSpread2({},props),{},{allVisible:allVisible,altTabIndex:props.altTabIndex,initTabIndex:initTabIndex}))]});}
;// CONCATENATED MODULE: ./src/fractals/Components/FractalDisplay.tsx
function FractalDisplay(props){var adjustPropertiesToScreenSize=props.adjustPropertiesToScreenSize,canvasSize=props.canvasSize;var _useState=(0,react.useState)(null),_useState2=slicedToArray_slicedToArray(_useState,2),inFocus=_useState2[0],setInFocus=_useState2[1];var fullScreen=(0,react.useContext)(FullScreenContext);function handleChangeViewIconClick(){if(fullScreen){props.setFullScreen(false);}else{props.setFullScreen(true);document.documentElement.requestFullscreen();}}(0,react.useEffect)(function(){function handleResize(){adjustPropertiesToScreenSize&&props.prevCanvasSize&&adjustPropertiesToScreenSize(props.prevCanvasSize,props.canvasSize);}handleResize();window.addEventListener("resize",handleResize);return function(){return window.removeEventListener("resize",handleResize);};},[]);var controls=/*#__PURE__*/(0,jsx_runtime.jsx)(Controls,{sliders:props.sliders,buttonPairs:props.buttonPairs,curves:props.curves,radioInputs:props.radio,altControls:props.altControls,children:props.controlsChildren,altTabIndex:props.altTabIndex});// prevent focusing on MathJax equations
var equations=document.querySelectorAll('.MathJax');equations.forEach(function(element){element.setAttribute('tabIndex','-1');});if(fullScreen){return/*#__PURE__*/(0,jsx_runtime.jsx)(FullScreenLayout,{draw:props.draw,drawParameters:props.drawParameters,handleClick:handleChangeViewIconClick,canvasSize:canvasSize,canvasInputs:props.canvasInputs,controls:controls,altControls:props.altControls,setInFocus:props.setInFocus||setInFocus});}return/*#__PURE__*/(0,jsx_runtime.jsx)(DefaultLayout,{altControls:props.altControls,canvasInputs:props.canvasInputs,canvasSize:canvasSize,controls:controls,description:props.description,descriptionTabIndex:props.descriptionTabIndex,draw:props.draw,drawParameters:props.drawParameters,handleClick:handleChangeViewIconClick,nextLink:props.nextLink,prevLink:props.prevLink,setInFocus:props.setInFocus||setInFocus,title:props.title});}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/1-sierpinski/custom.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var custom = ({});
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/1-sierpinski/altControls.tsx
function SierpinskiAltControls(props){var _useState=(0,react.useState)(props.outerTriangle.a),_useState2=slicedToArray_slicedToArray(_useState,2),a=_useState2[0],setA=_useState2[1];var _useState3=(0,react.useState)(props.outerTriangle.b),_useState4=slicedToArray_slicedToArray(_useState3,2),b=_useState4[0],setB=_useState4[1];var _useState5=(0,react.useState)(props.outerTriangle.c),_useState6=slicedToArray_slicedToArray(_useState5,2),c=_useState6[0],setC=_useState6[1];var _useState7=(0,react.useState)(null),_useState8=slicedToArray_slicedToArray(_useState7,2),inFocus=_useState8[0],setInFocus=_useState8[1];var startTabIndex=(0,react.useContext)(NavTabContext)+7;var inc=Math.round(props.canvasSize/100);(0,react.useEffect)(function(){props.setOuterTriangle({a:a,b:b,c:c});});return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"alt-controls",children:[/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Use arrows keys to move triangle corners. Use 'Tab' or 'PageDown' key to focus on the next corner, and 'PageUp' to focus on the previous corner."}),/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"triangle-alt-controls top",children:/*#__PURE__*/(0,jsx_runtime.jsx)(PositionControl,{id:"c",inc:inc,setPosition:setC,x:c[0],y:c[1],nextFocus:document.getElementById('a-arrow-up'),focused:inFocus==='c',setInFocus:setInFocus,tabIndex:startTabIndex+1})}),/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"triangle-alt-controls bottom",tabIndex:-1,children:[/*#__PURE__*/(0,jsx_runtime.jsx)(PositionControl,{id:"a",inc:inc,setPosition:setA,x:a[0],y:a[1],nextFocus:document.getElementById('b-arrow-up'),prevFocus:document.getElementById('c-arrow-up'),focused:inFocus==='a',setInFocus:setInFocus,tabIndex:startTabIndex+2}),/*#__PURE__*/(0,jsx_runtime.jsx)(PositionControl,{id:"b",inc:inc,setPosition:setB,x:b[0],y:b[1],nextFocus:document.querySelector('.app-nav a'),prevFocus:document.getElementById('a-arrow-up'),focused:inFocus==='b',setInFocus:setInFocus,tabIndex:startTabIndex+3})]})]});}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/1-sierpinski/index.tsx
function getIterationsNumber(fullScreen){var size=getSize(fullScreen);return Math.round(Math.log(size)/Math.log(2)-1);}function SierpinskiTriangle(){var _useState=(0,react.useState)(false),_useState2=slicedToArray_slicedToArray(_useState,2),fullScreen=_useState2[0],setFullScreen=_useState2[1];var _useState3=(0,react.useState)(getIterationsNumber(fullScreen)),_useState4=slicedToArray_slicedToArray(_useState3,2),maxIterations=_useState4[0],setMaxIterations=_useState4[1];var _useState5=(0,react.useState)(1),_useState6=slicedToArray_slicedToArray(_useState5,2),iterations=_useState6[0],setIterations=_useState6[1];var _useState7=(0,react.useState)(false),_useState8=slicedToArray_slicedToArray(_useState7,2),trackingMouse=_useState8[0],setTrackingMouse=_useState8[1];var _useState9=(0,react.useState)([0,0]),_useState10=slicedToArray_slicedToArray(_useState9,2),cursorPosition=_useState10[0],setCursorPosition=_useState10[1];var _useState11=(0,react.useState)([0,0]),_useState12=slicedToArray_slicedToArray(_useState11,2),x=_useState12[0],setX=_useState12[1];var _useState13=(0,react.useState)(equilateralTriangle(getSize(fullScreen))),_useState14=slicedToArray_slicedToArray(_useState13,2),outerTriangle=_useState14[0],setOuterTriangle=_useState14[1];var _useState15=(0,react.useState)(getSize(fullScreen)),_useState16=slicedToArray_slicedToArray(_useState15,2),canvasSize=_useState16[0],setCanvasSize=_useState16[1];var _useState17=(0,react.useState)(null),_useState18=slicedToArray_slicedToArray(_useState17,2),prevCanvasSize=_useState18[0],setPrevCanvasSize=_useState18[1];var _useState19=(0,react.useState)(true),_useState20=slicedToArray_slicedToArray(_useState19,2),animation=_useState20[0],setAnimation=_useState20[1];var altControls=/*#__PURE__*/(0,jsx_runtime.jsx)(SierpinskiAltControls,{outerTriangle:outerTriangle,setOuterTriangle:setOuterTriangle,canvasSize:getSize(fullScreen)});function handleX(){if(trackingMouse){setX(cursorPosition);}}function reshapeTriangle(){var affectedPoint=findAffectedPoint(outerTriangle,x);if(affectedPoint){var t=outerTriangle;t[affectedPoint]=x;setOuterTriangle(t);}}function animate(){if(!animation)return;setTimeout(function(){var i=iterations;if(i<maxIterations){setIterations(i+1);}else{setIterations(1);}},1000);}function handleSliderInput(val){setIterations(val);setAnimation(false);}(0,react.useEffect)(function(){if(animation){animate();}});(0,react.useEffect)(function(){return handleX;});(0,react.useEffect)(function(){return reshapeTriangle;});(0,react.useEffect)(function(){var func=function func(){var oldSize=canvasSize;var newSize=getSize(fullScreen);setPrevCanvasSize(oldSize);setCanvasSize(newSize);var newTriangle=rescale(oldSize,newSize,outerTriangle);setOuterTriangle(newTriangle);};window.addEventListener("resize",func);return function(){return window.removeEventListener("resize",func);};},[fullScreen,canvasSize]);function adjustPropertiesToScreenSize(){if(prevCanvasSize&&prevCanvasSize!==canvasSize){var newTriangle=rescale(prevCanvasSize,canvasSize,outerTriangle);setOuterTriangle(newTriangle);}setMaxIterations(getIterationsNumber(fullScreen));if(iterations>maxIterations){setIterations(maxIterations);}}var sliders=[{value:iterations,label:"iterations",maxValue:getIterationsNumber(fullScreen),minValue:1,setValue:function setValue(value){return handleSliderInput(value);},tabIndex:0}];var canvasInputs={onMouseDown:{value:cursorPosition,toggle:function toggle(){return setTrackingMouse(true);}},onMouseUp:{value:cursorPosition,toggle:function toggle(){return setTrackingMouse(false);}},onMouseMove:{value:cursorPosition,setValue:setCursorPosition}};var navTabIndex=(0,react.useContext)(NavTabContext);var altTabIndex=fullScreen?6:navTabIndex+6;var description=/*#__PURE__*/(0,jsx_runtime.jsx)(Description,{ti:navTabIndex+11});return/*#__PURE__*/(0,jsx_runtime.jsx)(FullScreenContext.Provider,{value:fullScreen,children:/*#__PURE__*/(0,jsx_runtime.jsx)(FractalDisplay,{adjustPropertiesToScreenSize:adjustPropertiesToScreenSize,altControls:altControls,altTabIndex:altTabIndex,canvasInputs:canvasInputs,canvasSize:canvasSize,description:description,descriptionTabIndex:navTabIndex+11,draw:draw_draw,drawParameters:{iterations:iterations,a:outerTriangle.a,b:outerTriangle.b,c:outerTriangle.c},nextLink:"/#/cantor",prevCanvasSize:prevCanvasSize,setFullScreen:setFullScreen,sliders:sliders,title:"Sierpi\u0144ski triangle"})});}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/2-cantor/algorithm1d.ts
var INNER_MARGIN_HORIZONTAL=10;function getFirstLine(size){var innerMarginVertical=arguments.length>1&&arguments[1]!==undefined?arguments[1]:INNER_MARGIN_HORIZONTAL;var length=size-INNER_MARGIN_HORIZONTAL*2;var a=[INNER_MARGIN_HORIZONTAL,innerMarginVertical];var b=[INNER_MARGIN_HORIZONTAL+length,innerMarginVertical];return{a:a,b:b};}function drawLineSegment(points,ctx,colour){ctx.beginPath();ctx.strokeStyle=colour;ctx.moveTo.apply(ctx,toConsumableArray_toConsumableArray(points.a));ctx.lineTo.apply(ctx,toConsumableArray_toConsumableArray(points.b));ctx.stroke();ctx.closePath();}function getMiddleThird(seg){var length=seg.b[0]-seg.a[0];var a=[Math.round(seg.a[0])+length/3,seg.a[1]];var b=[Math.round(seg.b[0]-length/3),seg.b[1]];return{a:a,b:b};}function removeSegment(seg,ctx){drawLineSegment(seg,ctx,'black');}function divideSegment(seg,ctx){var middle=getMiddleThird(seg);removeSegment(middle,ctx);return[{a:seg.a,b:middle.a},{a:middle.b,b:seg.b}];}function generate1d(seg,iterations,ctx){drawLineSegment(seg,ctx,'white');if(iterations===1){return;};var leftovers=divideSegment(seg,ctx);leftovers.forEach(function(segment){generate1d(segment,iterations-1,ctx);});}function generateAll1d(seg,iterations,ctx,size){var distance=Math.round(size/iterations);var i=1;var segment=seg;while(i<=iterations){ctx.beginPath();generate1d(segment,i,ctx);ctx.closePath();segment={a:[segment.a[0],Math.round(segment.a[1]+distance)],b:[segment.b[0],Math.round(segment.b[1]+distance)]};i++;}}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/2-cantor/algorithm2d.ts
var CanvasRectangle=/*#__PURE__*/function(){function CanvasRectangle(topLeftX,topLeftY,width,height){classCallCheck_classCallCheck(this,CanvasRectangle);this.topLeftX=void 0;this.topLeftY=void 0;this.width=void 0;this.height=void 0;this.topLeftX=topLeftX;this.topLeftY=topLeftY;this.width=width;this.height=height;}createClass_createClass(CanvasRectangle,[{key:"getArgs",value:function getArgs(){return[this.topLeftX,this.topLeftY,this.width,this.height];}}]);return CanvasRectangle;}();function getFirstSquare(size,innerMargin){return new CanvasRectangle(innerMargin,innerMargin,size-innerMargin*2,size-innerMargin*2);}function drawRectangle(rect,ctx,colour){ctx.fillStyle=colour;ctx.beginPath();ctx.strokeStyle=colour;ctx.lineWidth=1;ctx.rect.apply(ctx,toConsumableArray_toConsumableArray(rect.getArgs()));ctx.stroke();ctx.closePath();ctx.fill();}function getInnerMargin(size){var possibleMaxIter=[4,5,6,7];// 8 iterations would be more than ultraHD monitor can handle
var powersOf3=possibleMaxIter.map(function(i){return Math.pow(3,i);});if(size<=81)return 0;var margin=0;var _iterator=createForOfIteratorHelper_createForOfIteratorHelper(powersOf3),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var pow=_step.value;if(size>=pow){margin=Math.round((size-pow)/2);}else{return margin;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return Math.round((Math.pow(3,11)-size)/2);}function getMiddleVertical(sq){var roundingErrorOffset=sq.width>20?4:2;var topLeftX=Math.round(sq.topLeftX+sq.width/3);var topLeftY=Math.round(sq.topLeftY-roundingErrorOffset);var width=Math.round(sq.width/3);var height=Math.round(sq.height+roundingErrorOffset*2);return new CanvasRectangle(topLeftX,topLeftY,width,height);}function getMiddleHorizontal(sq){var roundingErrorOffset=sq.width>20?4:2;var topLeftX=Math.round(sq.topLeftX-roundingErrorOffset);var topLeftY=Math.round(sq.topLeftY+sq.height/3);var width=Math.round(sq.width+roundingErrorOffset*2);var height=Math.round(sq.height/3);return new CanvasRectangle(topLeftX,topLeftY,width,height);}function removeRectangle(sq,ctx){drawRectangle(sq,ctx,'black');}function divideSquare(sq,ctx){var middleVertical=getMiddleVertical(sq);removeRectangle(middleVertical,ctx);var middleHorizontal=getMiddleHorizontal(sq);removeRectangle(middleHorizontal,ctx);var topLeftSquare=new CanvasRectangle(sq.topLeftX,sq.topLeftY,middleVertical.width,middleHorizontal.height);var topRightSquare=new CanvasRectangle(sq.topLeftX+2*middleVertical.width,sq.topLeftY,middleVertical.width,middleHorizontal.height);var bottomLeftSquare=new CanvasRectangle(sq.topLeftX,sq.topLeftY+2*middleHorizontal.height,middleVertical.width,middleHorizontal.height);var bottomRightSquare=new CanvasRectangle(sq.topLeftX+2*middleVertical.width,sq.topLeftY+2*middleHorizontal.height,middleVertical.width,middleHorizontal.height);return[topLeftSquare,topRightSquare,bottomLeftSquare,bottomRightSquare];}function generate2d(sq,iterations,ctx){if(iterations===1){return;};var leftovers=divideSquare(sq,ctx);leftovers.forEach(function(smallSquare){generate2d(smallSquare,iterations-1,ctx);});}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/2-cantor/draw.ts
var contextDict={"1 dimension - Cantor set":"2d","2 dimensions - Cantor dust":"2d","3 dimensions - 3D Cantor dust":"webgl"};function draw1d(args){var canvas=args.canvas,size=args.size;var parameters=args.parameters;var showIntermediate=parameters.showIntermediateStages==="yes";var ctx=canvas.getContext("2d");canvas.style.background="black";var innerMarginVertical=showIntermediate?undefined:Math.round(size/3);if(ctx){ctx===null||ctx===void 0?void 0:ctx.clearRect(0,0,size,size);ctx.beginPath();ctx.lineWidth=6;var first=getFirstLine(size,innerMarginVertical);drawLineSegment(first,ctx,'white');if(showIntermediate){generateAll1d(first,parameters.iterations,ctx,size);}else{generate1d(first,parameters.iterations,ctx);}ctx.closePath();}}function draw2d(args){var canvas=args.canvas,size=args.size;var parameters=args.parameters;var ctx=canvas.getContext("2d");canvas.style.background="black";var innerMargin=getInnerMargin(size);if(ctx){ctx===null||ctx===void 0?void 0:ctx.clearRect(0,0,size,size);ctx.beginPath();ctx.lineWidth=1;var first=getFirstSquare(size,innerMargin);drawRectangle(first,ctx,'white');generate2d(first,parameters.iterations,ctx);ctx.closePath();}}function _2_cantor_draw_draw(args){var parameters=args.parameters;var canvasContextType=contextDict[parameters.dimensions];if(canvasContextType==="2d"&&parameters.dimensions==="1 dimension - Cantor set"){draw1d(args);}if(canvasContextType==="2d"&&parameters.dimensions==="2 dimensions - Cantor dust"){draw2d(args);}}
;// CONCATENATED MODULE: ./node_modules/better-react-mathjax/esm/MathJaxContext/MathJaxContext.js
var __assign = undefined && undefined.__assign || function () {
  return (__assign = Object.assign || function (e) {
    for (var t, o = 1, n = arguments.length; o < n; o++) for (var a in t = arguments[o]) Object.prototype.hasOwnProperty.call(t, a) && (e[a] = t[a]);
    return e;
  }).apply(this, arguments);
};

var v2Promise,
  v3Promise,
  MathJaxBaseContext = (0,react.createContext)(void 0),
  DEFAULT_V2_SRC = "https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.9/MathJax.js?config=TeX-MML-AM_CHTML",
  DEFAULT_V3_SRC = "https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/es5/tex-mml-chtml.js",
  MathJaxContext = function MathJaxContext(e) {
    var n = e.config,
      t = e.version,
      t = void 0 === t ? 3 : t,
      o = e.src,
      o = void 0 === o ? 2 === t ? DEFAULT_V2_SRC : DEFAULT_V3_SRC : o,
      a = e.onStartup,
      r = e.onLoad,
      i = e.onError,
      s = e.typesettingOptions,
      h = e.renderMode,
      h = void 0 === h ? "post" : h,
      d = e.hideUntilTypeset,
      e = e.children,
      c = (0,react.useContext)(MathJaxBaseContext);
    if (void 0 !== (null == c ? void 0 : c.version) && (null == c ? void 0 : c.version) !== t) throw Error("Cannot nest MathJaxContexts with different versions. MathJaxContexts should not be nested at all but if they are, they cannot have different versions. Stick with one version of MathJax in your app and avoid using more than one MathJaxContext.");
    if (2 === t && void 0 !== v3Promise || 3 === t && void 0 !== v2Promise) throw Error("Cannot use MathJax versions 2 and 3 simultaneously in the same app due to how MathJax is set up in the browser; either you have multiple MathJaxContexts with different versions or you have mounted and unmounted MathJaxContexts with different versions. Please stick with one version of MathJax in your app. File an issue in the project Github page if you need this feature.");
    var u = (0,react.useRef)(c),
      c = (0,react.useRef)((null == c ? void 0 : c.version) || null);
    if (null === c.current) c.current = t;else if (c.current !== t) throw Error("Cannot change version of MathJax in a MathJaxContext after it has mounted. Reload the page with a new version when this must happen.");
    var v = o || (2 === t ? DEFAULT_V2_SRC : DEFAULT_V3_SRC);
    function f(t, o) {
      n && (window.MathJax = n);
      var e = document.createElement("script");
      e.type = "text/javascript", e.src = v, e.async = !1, e.addEventListener("load", function () {
        var e = window.MathJax;
        a && a(e), t(e), r && r();
      }), e.addEventListener("error", function (e) {
        return o(e);
      }), document.getElementsByTagName("head")[0].appendChild(e);
    }
    return void 0 === u.current && (c = {
      typesettingOptions: s,
      renderMode: h,
      hideUntilTypeset: d
    }, 2 === t ? void 0 === v2Promise && ("undefined" != typeof window ? (v2Promise = new Promise(f)).catch(function (e) {
      if (!i) throw Error("Failed to download MathJax version 2 from '".concat(v, "' due to: ").concat(e));
      i(e);
    }) : (v2Promise = Promise.reject()).catch(function (e) {})) : void 0 === v3Promise && ("undefined" != typeof window ? (v3Promise = new Promise(f)).catch(function (e) {
      if (!i) throw Error("Failed to download MathJax version 3 from '".concat(v, "' due to: ").concat(e));
      i(e);
    }) : (v3Promise = Promise.reject()).catch(function (e) {})), u.current = __assign(__assign({}, c), 2 === t ? {
      version: 2,
      promise: v2Promise
    } : {
      version: 3,
      promise: v3Promise
    })), react.createElement(MathJaxBaseContext.Provider, {
      value: u.current
    }, e);
  };
/* harmony default export */ var MathJaxContext_MathJaxContext = (MathJaxContext);

;// CONCATENATED MODULE: ./node_modules/better-react-mathjax/esm/MathJax/MathJax.js
var MathJax_assign = undefined && undefined.__assign || function () {
    return (MathJax_assign = Object.assign || function (t) {
      for (var e, n = 1, r = arguments.length; n < r; n++) for (var i in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
      return t;
    }).apply(this, arguments);
  },
  MathJax_rest = undefined && undefined.__rest || function (t, e) {
    var n = {};
    for (i in t) Object.prototype.hasOwnProperty.call(t, i) && e.indexOf(i) < 0 && (n[i] = t[i]);
    if (null != t && "function" == typeof Object.getOwnPropertySymbols) for (var r = 0, i = Object.getOwnPropertySymbols(t); r < i.length; r++) e.indexOf(i[r]) < 0 && Object.prototype.propertyIsEnumerable.call(t, i[r]) && (n[i[r]] = t[i[r]]);
    return n;
  };


var typesettingFailed = function typesettingFailed(t) {
    return "Typesetting failed: ".concat(void 0 !== t.message ? t.message : t.toString());
  },
  MathJax = function MathJax(t) {
    function r() {
      var t;
      "every" === h && m && "post" === v && null !== f.current && (f.current.style.visibility = null != (t = null == (t = p.style) ? void 0 : t.visibility) ? t : "visible"), _.current || ("first" === h && null !== f.current && (f.current.style.visibility = "visible"), n && n(), _.current = !0), o && o(), b.current = !1;
    }
    var e = t.inline,
      i = void 0 !== e && e,
      e = t.hideUntilTypeset,
      n = t.onInitTypeset,
      o = t.onTypeset,
      s = t.text,
      u = t.dynamic,
      a = t.typesettingOptions,
      l = t.renderMode,
      c = t.children,
      p = MathJax_rest(t, ["inline", "hideUntilTypeset", "onInitTypeset", "onTypeset", "text", "dynamic", "typesettingOptions", "renderMode", "children"]),
      y = (0,react.useRef)(""),
      f = (0,react.useRef)(null),
      d = (0,react.useContext)(MathJaxBaseContext),
      h = null != e ? e : null == d ? void 0 : d.hideUntilTypeset,
      v = null != l ? l : null == d ? void 0 : d.renderMode,
      g = null != a ? a : null == d ? void 0 : d.typesettingOptions,
      m = !1 !== u && (u || "production" !== "production"),
      _ = (0,react.useRef)(!1),
      b = (0,react.useRef)(!1);
    return !b.current && null !== f.current && m && "every" === h && "post" === v && (f.current.style.visibility = "hidden"), ("undefined" != typeof window ? react.useLayoutEffect : react.useEffect)(function () {
      if ((m || !_.current) && null !== f.current) {
        if (!d) throw Error("MathJax was not loaded, did you use the MathJax component outside of a MathJaxContext?");
        if ("pre" === v) {
          if (!("string" == typeof (t = s) && 0 < t.length)) throw Error("Render mode 'pre' requires text prop to be set and non-empty, which was currently \"".concat(s, '"'));
          if (!a || !a.fn) throw Error("Render mode 'pre' requires 'typesettingOptions' prop with 'fn' property to be set on MathJax element or in the MathJaxContext");
          if (2 === d.version) throw Error("Render mode 'pre' only available with MathJax 3, and version 2 is currently in use");
        }
        "post" !== v && s === y.current || b.current || (b.current = !0, 3 === d.version ? d.promise.then(function (e) {
          var n;
          "pre" === v ? (n = function n(t) {
            y.current = s, e.startup.document.clear(), e.startup.document.updateDocument(), null !== f.current && (f.current.innerHTML = t.outerHTML), r();
          }, a.fn.endsWith("Promise") ? e.startup.promise.then(function () {
            return e[g.fn](s, MathJax_assign(MathJax_assign({}, (null == g ? void 0 : g.options) || {}), {
              display: !i
            }));
          }).then(n).catch(function (t) {
            throw r(), Error(typesettingFailed(t));
          }) : e.startup.promise.then(function () {
            var t = e[g.fn](s, MathJax_assign(MathJax_assign({}, (null == g ? void 0 : g.options) || {}), {
              display: !i
            }));
            n(t);
          }).catch(function (t) {
            throw r(), Error(typesettingFailed(t));
          })) : e.startup.promise.then(function () {
            return e.typesetClear([f.current]), e.typesetPromise([f.current]);
          }).then(r).catch(function (t) {
            throw r(), Error(typesettingFailed(t));
          });
        }).catch(function (t) {
          throw r(), Error(typesettingFailed(t));
        }) : d.promise.then(function (t) {
          t.Hub.Queue(["Typeset", t.Hub, f.current]), t.Hub.Queue(r);
        }).catch(function (t) {
          throw r(), Error(typesettingFailed(t));
        }));
      }
      var t;
    }), react.createElement("span", MathJax_assign({}, p, {
      style: MathJax_assign(MathJax_assign({
        display: i ? "inline" : "block"
      }, p.style), {
        visibility: h ? "hidden" : null == (t = p.style) ? void 0 : t.visibility
      }),
      ref: f
    }), c);
  };
/* harmony default export */ var MathJax_MathJax = (MathJax);
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/2-cantor/description.tsx
function description_Description(props){var ti=props.ti+1;var intervalDef=/*#__PURE__*/(0,jsx_runtime.jsxs)(MathJax_MathJax,{children:["A set of all the real numbers between two specific numbers. A closed interval contains all the numbers including the \"edge\" numbers, and an open interval contains all the numbers except for the \"edge\" numbers. For example, all the numbers from ","\\(3\\)"," to  ","\\(6\\)"," including ","\\(3\\)"," and ","\\(6\\)"," make a closed interval, and such an interval is written as ","\\([3, 6]\\)",".  All the numbers from ","\\(3\\)"," to  ","\\(6\\)"," except for ","\\(3\\)"," and ","\\(6\\)"," are an open interval written as ","\\((3, 6)\\)",". There are also half-open intervals, for example ","\\([3, 6)\\)"," this will contain ","\\(3\\)",", ","\\(4.789\\)"," and ","\\(5.999....\\)",", but not ","\\(6\\)","."]});return/*#__PURE__*/(0,jsx_runtime.jsxs)(MathJax_MathJax,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Before we move onto more complicated fractals, let's look at the simplest one: the depiction of Cantor set. It was described even earlier than Sierpinski triangle, in 1874 Georg Cantor, so also before the idea of a fractal existed."}),/*#__PURE__*/(0,jsx_runtime.jsx)("h2",{children:"How to make a Cantor set"}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["Let's consider all the numbers between ","\\(0\\)"," and ","\\(1\\)",", including ","\\(0\\)"," and ","\\(1\\)",". The set of all those number is symbolised by the line segment on the top of the image. Now, like in the Sierpinski triangle, we'll \"cut out\" the middle - in this case the middle third of the set. What we're left are numbers from ","\\(0\\)"," to ","\\(\\frac{1}{3}\\)",", and numbers from ","\\(\\frac{2}{3}\\)"," to ","\\(1\\)"," (the middle ",/*#__PURE__*/(0,jsx_runtime.jsx)(Def,{phrase:"interval",definitionObject:intervalDef,tabIndex:ti})," that gets removed is always be open, so the ones that are left are closed). In the image, they are depicted as two line segments they we have left after removing the middle third of the first segment."]}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Then, we remove the middle thirds of the remaining sets of numbers (or line segments in the image), and do the same thing infinite times. The numbers that we have left after those operations make what is called Cantor set."}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["What could be the examples of those numbers? The most obvious ones are 0 and 1. Let's think about the interval on the very left: it starts as ","\\([0, 1]\\)",", after iteration becomes ","\\([0, \\frac{1}{3}]\\)",", then ","\\([0, \\frac{1}{9}]\\)",", ","\\([0, \\frac{1}{27}]\\)"," etc. - but the zero is always there. But exactly the same thing happens to every number that becomes and endpoint at any stage: once we've ended up with ","\\([\\frac{2}{9}, \\frac{1}{3}]\\)",", we know that ","\\(\\frac{2}{9}\\)"," and ","\\(\\frac{1}{3}\\)"," will survive all the iterations."]}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{className:"ex",children:"Use the slider (or number input) to add more iterations. You can also switch to hiding all the intermediate steps just to see the final effect of the selected number of iterations."}),/*#__PURE__*/(0,jsx_runtime.jsx)("h2",{children:"Some interesting properties of the Cantor set"}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Each time infinity gets involved in a mathematical problem (and with fractals it always lurks somewhere in the background), things get a bit counter-intuitive. So, of course, Cantor set has a few strange property."}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["How many numbers are there in the Cantor set? Let's see: there is infinite number of real numbers between ","\\(0\\)"," and ","\\(1\\)",". Then, we perform and infinite number of operations where we remove a third of what we have left. So, we take some numbers away, but always leave ","\\(\\frac{2}{3}\\)"," of the previous leftover set. We could make a series to calculate it, but that's not very easy or very helpful. But let's think about it from the different perspective - with every iteration we get new endpoints, and we know those endpoints are in the final set. And we have an infinite number of iteration, so we have an infinite number of the endpoints alone! (And these are not the only numbers proven to be in the Cantor set). OK, so we know the Cantor set is infinite without making difficult calculations."]}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Let's get back to the line segments in the image - if you add up all the \"leftovers\" from an infinite number of iterations, what will be the sum of all the lengths of the sub-segments? 0. Just like Sierpinski triangle has the area of 0, because this is what you get after cutting an infinite number of holes in a triangle, the length of Cantor set is 0 after cutting out an infinite number of middle thirds. All while having an infinite numbers of numbers in it."}),/*#__PURE__*/(0,jsx_runtime.jsx)("h2",{children:"Fractal dimension"}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"If you think that having the length of 0 and an infinite number of elements left after removing numbers from an infinite set is strange, wait 'till you hear about fractional dimensions!"}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["It would seem that a shape must have a natural number of dimensions: a line segment has one dimension, a square has two dimensions, and a cube has three dimensions. It seems that something having ","\\(0.6942\\)"," dimension doesn't make any sense."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["Let's think about scaling figures with a natural number of dimensions by ","\\(2\\)",". If we have a line segment that has 1 cm, and want to make it quite as large (2cm), we need to put two of those line segments side by side. If we have a square with a 1 cm side, to make a square with 2cm side we need to put four 1cm squares. If we want to make a 2 cm cube out of 1cm cube, we need eight of them."]}),/*#__PURE__*/(0,jsx_runtime.jsx)(Media,{src:__webpack_require__(214),alt:"A segment, a square and a cube placed above segments, squares and cubes needed to be put together to double the initial size of the object.",tabIndex:ti}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["In other words, we need to put ","\\(2^1\\)"," segments, ","\\(2^2\\)"," squares, and ","\\(2^3\\)"," cubes to make a shape of double the base size unit. The same happens if we want to triple the size: to make a 3cm-side square out of 1cm squares, we need ","\\(3^2\\)"," small squares. The power we use for scaling is the same as the number of dimensions of our shape."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["Now, let's try scaling a Cantor set. Because it involves a lot of dividing by three, it will be the easiest to triple it - instead of starting with the segment ","\\([0, 1]\\)",", we are starting with ","\\([0, 3]\\)",". After removing the middle third, we're left with ","\\([0, 1]\\)"," ( our original starting point), and ","\\([2, 3]\\)"," - another segment that has exactly the same size as our starting point. When we keep removing the next middle thirds, we end up with two Cantor sets. So, when we tripled the initial length our set became twice as large."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["Let's back to tripling the size of a square: we needed ","\\(1cm\\times3^2 \\)"," (or ","\\(9\\)"," ) 1cm-side squares to make a 3cm-side square. With a Cantor set, we need ","\\(2\\)"," or ","\\(1\\times3^d \\)"," Cantor sets to make a Cantor set three times as large, where ","\\(d\\)"," is the number of dimensions. So to find the number of dimensions, we need to solve the equation ","\\(3^d = 2\\)",", which gives us  ","\\(d = \\frac{log(2)}{log(3)}\\)",", or ","\\(d\u22480.63093\\)","."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["It's not just the Cantor set that has that strange dimension: let's try doubling Sierpinski triangle. If we want a Sierpinski triangle of double the size, we need to put three Sierpinski triangles together, which means that for Sierpinski triangle ","\\(2^d = 3\\)",", therefore ","\\(d = \\frac{log(3)}{log(2)}\\)",", or ","\\(d\u22481.5850\\)",". All fractals have dimensions of this kind."]}),/*#__PURE__*/(0,jsx_runtime.jsx)(Media,{src:__webpack_require__(6),alt:"An illustration of tripling the size of a square, a Cantor set, and doubling of a Sierpinski triangle",tabIndex:ti}),/*#__PURE__*/(0,jsx_runtime.jsx)("h2",{children:"Cantor dust"}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["We can follow a similar process to building a Cantor set by starting from a square instead of a line segment. From each square, we remove a horizontal and a vertical stripe from the middle, whose width is ","\\(\\frac{1}{3}\\)"," of the side of the square. "]}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{className:"ex",children:" Switch to the option \"2 dimensions - Cantor dust\". You can also adjust the number of iterations you see."}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Out of each square, there are four smaller squares left after each iteration. When we follow the process infinite number of time, the points we have left create Cantor dust."})]});}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/2-cantor/index.tsx
function getMaxIterations(size){var iterations=4;while(Math.pow(3,iterations)<=size){iterations++;}return iterations-1;}function CantorSet(){var _useState=(0,react.useState)(false),_useState2=slicedToArray_slicedToArray(_useState,2),fullScreen=_useState2[0],setFullScreen=_useState2[1];var _useState3=(0,react.useState)(getSize(fullScreen)),_useState4=slicedToArray_slicedToArray(_useState3,2),canvasSize=_useState4[0],setCanvasSize=_useState4[1];var _useState5=(0,react.useState)(4),_useState6=slicedToArray_slicedToArray(_useState5,2),iterations=_useState6[0],setIterations=_useState6[1];var _useState7=(0,react.useState)("1 dimension - Cantor set"),_useState8=slicedToArray_slicedToArray(_useState7,2),dimensions=_useState8[0],setDimensions=_useState8[1];var _useState9=(0,react.useState)("yes"),_useState10=slicedToArray_slicedToArray(_useState9,2),showIntermediateStages=_useState10[0],setShowIntermediateStages=_useState10[1];var maxIterations=getMaxIterations(canvasSize);var navTabIndex=(0,react.useContext)(NavTabContext);(0,react.useEffect)(function(){var func=function func(){var newSize=getSize(fullScreen);setCanvasSize(newSize);};window.addEventListener("resize",func);return function(){return window.removeEventListener("resize",func);};},[fullScreen,canvasSize]);var sliders=[{value:iterations,label:"iterations",maxValue:maxIterations,minValue:1,setValue:setIterations,tabIndex:0}];var radio=[];if(dimensions==="1 dimension - Cantor set"){radio.push({label:"Show intermediate steps",info:"If selected, it will show all the previous iterations. For example, if you select 4 iterations, you will see the images for 1, 2, 3, and 4 iterations",setValue:setShowIntermediateStages,tabIndex:navTabIndex+6,value:showIntermediateStages,options:["yes","no"]});}radio.push({value:dimensions.toString(),label:"dimensions",setValue:setDimensions,tabIndex:navTabIndex+5,options:["1 dimension - Cantor set","2 dimensions - Cantor dust"]});var description=(0,react.useMemo)(function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(description_Description,{ti:navTabIndex+13});},[navTabIndex]);return/*#__PURE__*/(0,jsx_runtime.jsx)(FullScreenContext.Provider,{value:fullScreen,children:/*#__PURE__*/(0,jsx_runtime.jsx)(FractalDisplay,{canvasInputs:{},canvasSize:canvasSize,description:description,descriptionTabIndex:navTabIndex+13,draw:_2_cantor_draw_draw,drawParameters:{iterations:iterations,dimensions:dimensions,showIntermediateStages:showIntermediateStages},nextLink:"/#/newton",prevLink:"/#/sierpinski",radio:radio,setFullScreen:setFullScreen,sliders:sliders,title:"Cantor set"})});}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/3-newton/draw.ts
function _3_newton_draw_draw(args){var canvas=args.canvas,size=args.size;var parameters=args.parameters;var offsetX=parameters.pixelOffset[0]||0;var offsetY=parameters.pixelOffset[1]||0;var ctx=canvas===null||canvas===void 0?void 0:canvas.getContext('2d');if(ctx){ctx.beginPath();ctx.clearRect(0,0,size,size);ctx.rect(0,0,size,size);ctx.fillStyle='black';ctx.fill();ctx.putImageData(parameters.imageData,offsetX,offsetY);}}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/3-newton/description.tsx
function _3_newton_description_Description(props){var ti=props.ti+1;var degreeDef=/*#__PURE__*/(0,jsx_runtime.jsxs)(MathJax_MathJax,{children:["Degree of an equation relates to the highest power of the ","\\(x\\)",". For example ","\\(x^2 + 7 = 0\\)"," is an equation of the second degree (or quadratic equation), and ","\\(x^6 + 7x^5 + x = 32\\)"," is an equation of the sixth degree."]});var cubicEqDef=/*#__PURE__*/(0,jsx_runtime.jsxs)(MathJax_MathJax,{children:["An equation of the third degree, or one with a ","\\(x ^ 3\\)"," as the highest power of ","\\(x\\)"]});var coefficientDef=/*#__PURE__*/(0,jsx_runtime.jsxs)(MathJax_MathJax,{children:["In the expression ","\\(3x^5 + 4x ^ 3 -2x\\)",", ","\\(3\\)"," is the coefficient for ","\\(x^5\\)",", ","\\(4\\)"," is the coefficient for ","\\(x^3\\)",", and ","\\(-2\\)"," is the coefficient for ","\\(x\\)"," "]});return/*#__PURE__*/(0,jsx_runtime.jsxs)(MathJax_MathJax,{children:[/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["When we intentionally draw nested similar shapes, it's no surprise we get nested similar shapes - or a fractal. But the really interesting thing about fractals is that they also to show up in less obvious unexpected circumstances. We will explore three mathematical procedures that produce a fractals. The one on the left is created by solving equations of ",/*#__PURE__*/(0,jsx_runtime.jsx)(Def,{phrase:"at least the third degree",definitionObject:degreeDef,tabIndex:ti}),". It will take a moment to explain, but it\u2019s worth it!"]}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"The fractal you see is a plot. First, we will explain what process the plot illustrates. Then, we will explain what we are plotting on, and finally, we will explain what the colours mean."}),/*#__PURE__*/(0,jsx_runtime.jsx)("h2",{children:"The process"}),/*#__PURE__*/(0,jsx_runtime.jsx)("h3",{children:"The problem with finding roots"}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["How much is ","\\(\\sqrt{5}\\)","? We know that it is an ",/*#__PURE__*/(0,jsx_runtime.jsx)(Def,{phrase:"irrational number",definition:"you cannot represent it as a simple fraction, and it has an infinite number of decimal places if you write it as a decimal",tabIndex:ti}),", so our answer will never be completely precise. If mathematicians want to be exact, they just represent it as ","\\(\\sqrt{5}\\)"," in, but sometimes a less exact, but more understandable solution is needed. After all, measuring out ","\\(\\sqrt{5}\\)"," inches of string would be a puzzling task."]}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"So, how can we go about finding out the approximate number?"}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:[" We need ","\\(x^2 \\)"," to equal ","\\(5\\)",". We know that ","\\(2^2 = 4 \\)",", and ","\\(3^2 = 9 \\)",". This means that ","\\( 2\\)"," is too little, but ","\\( 3\\)"," is too much, so the answer is somewhere in between . Let\u2019s try ","\\( 2.5\\)",":"]}),"\\(2.5^2 = 6.25 \\)",/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"It\u2019s still too much, so maybe let\u2019s try a bit less:"}),"\\(2.2^2 = 4.84 \\)",/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["Now, it\u2019s too little, so we need something between ","\\(2.2\\)"," and ","\\(2.5\\)"," - and we'll keep doing the same thing all over again (recursion!), until it's precise enough for our purpose. It will eventually work, but guessing is not too efficient, is it?"]}),/*#__PURE__*/(0,jsx_runtime.jsx)("h3",{children:"Newton\u2019s method"}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"To make the process quicker, we need a way to produce better guesses \u2013 it will take fewer iterations to get the precision we need. Isaac Newton found it around 1670, and later Joseph Raphson, another mathematician, made it simpler to use. The method works for all kinds of roots, but here, we will only follow the example of a square root - enough to get the idea where the fractal comes from. There is a more detailed explanation below if you're familiar with function derivatives."}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["We'll stay with ","\\(\\sqrt{5}\\)","."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["We are trying to solve ","\\(x ^ 2 = 5 \\)",", but now we want a zero on one side, and all the ","\\(x\\)","s and other numbers on the other, so let's make it ","\\(x ^ 2 \u2013 5 = 0 \\)","."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["Again, we are starting with a reasonable guess of ","\\( 2.5\\)",". We substitute  ","\\( 2.5\\)"," for  ","\\( x\\)"," and get:","\\(2.5^ 2 \u2013 5 = 1.25 \\)"]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["So far nothing new, we only wrote it differently. But now, we will use Newton\u2019s method to make a much better next guess. For a simple square root, when ","\\(x ^ 2 \u2013 c = 0\\)"," you use your first guess as the ","\\(x\\)"," and calculate:","\\[x - \\frac{x^2 - c}{2x}\\]"]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:[" In our example, our  ","\\( c = 5\\)",", and our first guess  ","\\( x = 2.5\\)",", so we get:"]}),"\\[2.5 - \\frac{2.5^2 - 5}{2\\times2.5} = 2.25\\]",/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["But let\u2019s say we want to know the root to four decimal places. What\u2019s next? We take the new guess,  ","\\( 2.5\\)",", make it our  ","\\( x\\)",", and repeat the process:"]}),"\\[2.25 - \\frac{2.25^2 - 5}{2\\times2.25} = 2.236111...\\]",/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"But how accurate is it? Let\u2019s check:"}),"\\(2.2361 ^ 2 = 5.00014321\\)",/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"That\u2019s pretty close to 5, and we just went through two iterations! And what if we went through another one? "}),"\\[2.236111... - \\frac{2.5^2 - 5}{2\\times2.236111...} = 2.236067977915804\\]",/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"And to check accuracy:"}),"\\(2.236067977915804 ^ 2 = 5.0000000018604736\\)",/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"It is worth noting that the formula for finding a square root used above had been known since the ancient times. The new thing in Newton's method is creating a procedure to find similar formulae for different equations."}),/*#__PURE__*/(0,jsx_runtime.jsx)("h2",{children:"What we are plotting on"}),/*#__PURE__*/(0,jsx_runtime.jsx)("h3",{children:"Complex numbers and complex plane"}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["The next piece of the puzzle are complex numbers. They are used in physics, engineering and computer graphics, but we can\u2019t really relate them to real life experience \u2013 so don\u2019t worry if it seems too abstract. We know that ","\\(\\sqrt{1} = 1\\)"," or ","\\(- 1\\)",", but how much is ","\\(\\sqrt{-1}\\)","? You might have heard negative numbers don't have square roots, but this is not exactly true. There is a square root of ","\\(- 1\\)",", it\u2019s just not a ",/*#__PURE__*/(0,jsx_runtime.jsx)("em",{children:"real"})," number. It\u2019s an ",/*#__PURE__*/(0,jsx_runtime.jsx)("strong",{children:"imaginary"})," number called ","\\( i\\)",", and this is all you need to know to understand the image. While you can eat ","\\( 3\\)"," or even ","\\( 3.5\\)"," apples, you can\u2019t eat ","\\( i\\)"," apples. Imaginary numbers won't make any if you try to apply them to everyday experience."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["\\( i\\)"," is also used as a basic imaginary unit. We know that:"]}),"\\(\\sqrt{4} = 2\\)"," or ","\\(- 2\\)",/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"and by analogy: "}),"\\(\\sqrt{-4} = 2i\\)"," or ","\\(- 2i\\)",".",/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["But not all numbers are either real or imaginary. There are numbers that have both real and imaginary part: for example in ","\\(4 - 7i\\)"," , ","\\(4\\)"," is the real part, and ","\\(- 7i\\)"," is the imaginary part. Many quadratic and higher degree equations, which seem to have no solutions, actually have complex solutions."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["Now, imagine two-dimensional Cartesian coordinate system (the most common boring one). Your ","\\(x\\)","-axis show the real part of a number, and the ","\\(y\\)","-axis shows the imaginary part, like this:"]}),/*#__PURE__*/(0,jsx_runtime.jsx)(Media,{src:__webpack_require__(876),alt:"Complex plane with examples of real, imaginary and complex numbers",tabIndex:ti}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"This is called a complex plane, and this is where a few very interesting fractals live."}),/*#__PURE__*/(0,jsx_runtime.jsx)("h2",{children:"What the image means"}),/*#__PURE__*/(0,jsx_runtime.jsx)("h3",{children:"Orbits"}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["Let's back to finding the square root of 5 using the Newton't method. We started with ","\\(2.5\\)",", and with each iteration of the process we produced a number closer to the solution. These numbers formed the following sequence:"]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("ul",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"\\(2.5\\)"}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"\\(2.25\\)"}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"\\(2.236111...\\)"}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"\\(2.236067977915804\\)"}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"\\(2.23606797749979\\)"}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"..."})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["Such a sequence is called an orbit, in this case the orbit of ","\\( 2.5\\)"," under ","\\[f(x)= x - \\frac{x^2 - c}{2x} \\]"]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["When you start with a number, perform an operation on it, then perform the same operation on the result you got, and so on, the orbit will be the sequence of all the results (we are dealing with recursion and iterations again). The first number you feed into the whole process is called ",/*#__PURE__*/(0,jsx_runtime.jsx)("strong",{children:"the seed"}),"."]}),/*#__PURE__*/(0,jsx_runtime.jsx)("h3",{children:"The image"}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["As mentioned above, Newton\u2019s method can be used for approximating all kinds of roots. Our example was for ","\\(x ^ 2 = 5\\)",", but the general method will also work for something like ","\\(x ^ 4 + 2x ^ 2 \u2013 3x + 1 = 0\\)",". To get a colourful fractal, we need to use Newton\u2019s method for at least a ",/*#__PURE__*/(0,jsx_runtime.jsx)(Def,{phrase:"cubic equation",definitionObject:cubicEqDef,tabIndex:ti}),"."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["Newton\u2019s method has a problem. If your starting guess (seed) is reasonably close to the solution, every iteration gets you a better approximation. This is OK for a simple ","\\(x^2 = 5 \\)",", but how would you even go about guessing a solution to something like ","\\(-3.05x ^ 4 + 2.78x ^ 2 \u2013 3.16x + 1.94 = 0\\)","? If you pick a random starting point, you will eventually approach a solutions, but if you pick wrong, you might follow a long winding orbit before finally getting \u201Csucked into\u201D an area close to a root. Also, if you start far from the solution, you can't predict which neighbourhood it will take you to."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["Let's look what happens when we solve ","\\(x^3 - 8 = 0 \\)"," This is what the fractal on the screen is about, unless you've already played around with the sliders. You can get it back by reloading the page."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["It has three solutions: ","\\(2\\)"," (that's the easy one), ","\\(-1 - i \\sqrt{3}\\)",", and ","\\(-1 - i \\sqrt{3}\\)",". The complex solutions can be approximated as ","\\(-1 - 1.73205080756888 i\\)"," and  ","\\(-1 - 1.73205080756888 i\\)","."]}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"To solve this equation with Newton's method, we need a different formula:"}),"\\[x - \\frac{x^3 - 8}{3x^2}\\]",/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["Let's see how it goes when we start close to a solution. We'll pick a familiar real number for a beginning: ","\\(-2.5\\)",". The orbit is approximately:"]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("ul",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"\\(2.5\\)"}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"\\(2.09333...\\)"}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"\\(2.004099512714061\\)"}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"\\(2.0000083800954678\\)"}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"\\(2.000000000035113\\)"}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"\\(2\\)"}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"\\(2\\)"}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"..."})]}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Indeed, we started close, got closer with each step, and even landed on the exact solution."}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["OK, so let's pick a complex number, say ","\\(5.5 - 0.2i\\)",". This orbit will be easier to follow on the complex plane:"]}),/*#__PURE__*/(0,jsx_runtime.jsx)(Media,{src:__webpack_require__(945),alt:"Orbit plotted on the complex plane with the approximate numbers: 5.5 -0.2i, 3.7545 -0.1269i, 2.6915 -0.0719i, 2.1617 -0.0283i, 2.0115 -0.0039i, 2",tabIndex:ti}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["Nothing special here - it's obviously approaching ","\\(2\\)",", just like the previous one, only with fancier numbers on the way."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["OK, so let's try ","\\(3.34 - 5.01i\\)",". The orbit for this number is completely different on the complex plane:"]}),/*#__PURE__*/(0,jsx_runtime.jsx)(Media,{src:__webpack_require__(994),alt:"Orbit plotted on the complex plane with the approximate numbers: 3.34 -5.01i, 2.1984 -3.2721i, 1.4007 -2.0225i, 0.7789 -0.9359i, 0.1925 +1.1448i, -1.7416 +0.1159i, -0.2935 +0.1933i, 8.3287 +19.9635i, 5.5485 +13.305i, 3.69 +8.860i",tabIndex:ti}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"We marked the results of eight iterations, and we still can't even tell where it's going. It changes direction and even makes a loop."}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["And now the best part. We'll take the previous seed (","\\(3.34 - 5.01i\\)",") and only round it to the first decimal place: ","\\(3.3 - 5i\\)",". Will the orbit be similar? Not really..."]}),/*#__PURE__*/(0,jsx_runtime.jsx)(Media,{src:__webpack_require__(673),alt:"Orbit plotted on the complex plane with the approximate numbers: 3.3, -5.0, 2.1708 -3.265, 1.3801 -2.0167, 0.7583 -0.9282, 0.1354 +1.2, -1.6924 +0.3925,-0.3351 +0.6506, -1.4742 +2.2291,-2.1075 +3.0753, -3.1144 +4.4873",tabIndex:ti}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"We changed the value only a little bit, and it followed a completely different path. This is how it's so hard to predict where an initial guess leads."}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Newton\u2019s fractal illustrates which solution each number lands on. The image is a complex plane, where every pixel represents a complex number. Each colour represents one solution to the equation. In other words, all the number with the same colour in the image will lead to the same solution. Of course, Newton and Raphson had no idea that the images that are produced like that - imagine trying to make it without a computer or even a calculator!"}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["\\(5.5 - 0.2i\\)"," and ","\\(2.5\\)",", the numbers with relatively straight orbits, lie in the middle of a patch of the same colour:"]}),/*#__PURE__*/(0,jsx_runtime.jsx)(Media,{src:__webpack_require__(139),alt:"2.5 and 5.5 -0.2i marked as black dots on the fractal",tabIndex:ti}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["The numbers with more complicated orbits tend to lie near the borders between colours: both ","\\(3.34 - 5.01i\\)"," and ","\\(3.3 - 5i\\)"," lie somewhere within the black dot:"]}),/*#__PURE__*/(0,jsx_runtime.jsx)(Media,{src:__webpack_require__(108),alt:"Black dot on them fractal representing the area within which 3.34-5.01i and 3.3-5i lie",tabIndex:ti}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{className:"ex",children:"Zoom in and out of the fractal image to see the how the structures look in different scales. You can either use the buttons, or you can focus on the image and use \"+\" and '-' keys. Drag the image to see another part of the plot or use arrow keys to do it."}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{className:"ex",children:["Use the sliders or number inputs to change the equation - you can get very different images. At the moment it is an only a 3rd degree equation - try the fourth and fifth degrees by changing the ",/*#__PURE__*/(0,jsx_runtime.jsx)(Def,{phrase:"coefficients",definitionObject:coefficientDef,tabIndex:ti})," for ","\\(x^4\\)"," and ","\\(x^5\\)"," to something else than zero."]}),/*#__PURE__*/(0,jsx_runtime.jsx)("hr",{}),/*#__PURE__*/(0,jsx_runtime.jsx)("h2",{children:"Newton's method - the details"}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"This is an extra section for more advanced readers who want to learn or brush up the details of the Newton's method - it is not necessary to understand the idea behind the fractal."}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"The general process is described above, but what was not explained is how we arrive at the main formula we use for each iteration. The answer is:"}),"\\[x_{n+1} = 1 - \\frac{f(x_n)}{f'(x_n)}\\]",/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["When we are looking for roots of the polynomial,we start with the yhe number ","\\(x_n\\)"," a to find our next (hopefully closer) approximation ","\\(x_{n+1}\\)"," we are using the formula above, where ","\\(f(x)\\)"," is our polynomial evaluated for ","\\(x_n\\)",", and ","\\(f'(x)\\)"," is the derivative of our polynomial evaluated for ","\\(x_n\\)","."]})]});}
// EXTERNAL MODULE: ./node_modules/gpu.js/dist/gpu-browser.js
var gpu_browser = __webpack_require__(2);
;// CONCATENATED MODULE: ./src/fractals/gpu-utils.ts
function getColor(i){if(i<25)return[0,0,0,255];if(i<30)return[50,50,50,255];if(i<40)return[100,100,100,255];if(i<50)return[150,150,150,255];if(i<100)return[180,180,180,255];return[200,200,200,255];}function xSqrPlusY(prev,c){var real=prev[0];var imaginary=prev[1];var squared=[Math.pow(real,2)-Math.pow(imaginary,2),2*real*imaginary];return[squared[0]+c[0],squared[1]+c[1]];};function distanceSq(val,c){// treating complex numbers as ordinary coordinates on the plane
// false if lies outside the circle with r=2 from the value
return Math.pow(val[0]-c[0],2)+Math.pow(val[1]-c[1],2);}function getComplexPartsForPixels(x,canvasY,size,startValueX,startValueY,inc){var y=size-canvasY;var multiplier=getMultiplier(inc)*1000;// to prevent GPU from rounding numbers; value established by trial and error
inc=inc*multiplier;var xInc=x*inc;var yInc=y*inc;xInc=xInc/multiplier;yInc=yInc/multiplier;var re=startValueX+xInc;var im=startValueY+yInc;return[re,im];};function convertKernelToImgData(kernelDump,size){var arr=new Uint8ClampedArray(size*size*4);var data=[];for(var i=0;i<kernelDump.length;i+=1){for(var j=0;j<kernelDump[i].length;j+=1){data.push.apply(data,toConsumableArray_toConsumableArray(kernelDump[i][j]));}}for(var _i=0;_i<arr.length;_i+=1){arr[_i]=data[_i];}return new ImageData(arr,size);}function getMultiplier(input){/** finds the order of magnitude a number should be multiplied by to prevent
   * rounding by he GPU
   */var multiplier=1;while(input*multiplier<1){multiplier=multiplier*10;}return multiplier;}function lengthNumArray(array){var i=0;while(array[i]!==undefined){i=i+1;}return i;}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/3-newton/maths-helpers.ts
function maths_helpers_c(r){//return a real number in array notation for complex numbers
return[r,0];}/*powers of complex numbers, where both input and output is the array [realPart, imaginaryPart] */function rp(n,p){var precision=Math.pow(10,p);var res=n*precision;res=Math.round(res)/precision;return res;}function pow2(x){// fallback to 0 to avoid getting -0
var real=Math.pow(x[0],2)-Math.pow(x[1],2);var imaginary=2*x[0]*x[1];if(real===-0){real=0;}if(imaginary===-0){imaginary=0;}return[real,imaginary];}function pow3(x){var real=Math.pow(x[0],3)-3*x[0]*Math.pow(x[1],2);var imaginary=-Math.pow(x[1],3)+3*Math.pow(x[0],2)*x[1];if(real===-0){real=0;}if(imaginary===-0){imaginary=0;}return[real,imaginary];}function pow4(x){var real=Math.pow(x[0],4)-6*Math.pow(x[0],2)*Math.pow(x[1],2)+Math.pow(x[1],4);var imaginary=4*Math.pow(x[0],3)*x[1]-4*x[0]*Math.pow(x[1],3);if(real===-0){real=0;}if(imaginary===-0){imaginary=0;}return[real,imaginary];}function pow5(x){var real=Math.pow(x[0],5)-10*Math.pow(x[0],3)*Math.pow(x[1],2)+5*x[0]*Math.pow(x[1],4);var imaginary=+Math.pow(x[1],5)+5*Math.pow(x[0],4)*x[1]-10*Math.pow(x[0],2)*Math.pow(x[1],3);if(real===-0){real=0;}if(imaginary===-0){imaginary=0;}return[real,imaginary];}function cByC(num,den){var constDiv=den[0]*den[0]+den[1]*den[1];var real=(num[0]*den[0]+num[1]*den[1])/constDiv;var imaginary=(num[1]*den[0]-num[0]*den[1])/constDiv;return[real,imaginary];}function rxC(r,c){return[r*c[0],r*c[1]];}function maths_helpers_lengthNumArray(array){var i=0;while(array[i]===0||array[i]<0||array[i]>0){i=i+1;}return i;}function sum2Complex(nums){// reduce or variable-length arrays not compatible with gpu
return[nums[0]+nums[2],nums[1]+nums[3]];}function addExpressionToPolynomial(poly,coefficient,degree,forView){var expr='';if(coefficient===0){return poly+expr;}if(poly&&coefficient>0){expr='+';}if(coefficient!==0){expr=forView?expr+coefficient:expr+coefficient*10;}expr=expr+'x';if(degree!==1){expr=expr+'^'+degree;}return poly+expr;}function getPolynomialStringForNroots(// assuming up to 5th degree polynomial
c,co1,co2,co3,co4,co5){var forView=arguments.length>6&&arguments[6]!==undefined?arguments[6]:false;var poly='';poly=addExpressionToPolynomial(poly,co5,5,forView);poly=addExpressionToPolynomial(poly,co4,4,forView);poly=addExpressionToPolynomial(poly,co3,3,forView);poly=addExpressionToPolynomial(poly,co2,2,forView);poly=addExpressionToPolynomial(poly,co1,1,forView);if(c){// multiply expressions by 10 because nroots only accepts integers
// and the inputs have up to 1 decimal point
var constantStr='';if(!forView){constantStr=c>0?"+".concat(c*10):String(c*10);}else{constantStr=c>0?"+".concat(c):String(c);}poly=poly+constantStr;}return poly;}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/3-newton/newton-algorithm.ts
var Algebrite=__webpack_require__(316);function removeZeroMultipliers(polynomial){var f=parse(polynomial);return simplify(f).toString();}function evaluateDerivative(x,co1,co2,co3,co4,co5){// the obvious return value would be '(x) => d.evaluate({ 'x': x }) but this would not work on GPUjs'
var deg2=rxC(2*co2,x);var deg3=rxC(3*co3,pow2(x));var deg4=rxC(4*co4,pow3(x));var deg5=rxC(5*co5,pow4(x));var args1=[co1,0,deg2[0],deg2[1]];var args2=[deg3[0],deg3[1],deg4[0],deg4[1]];var args3=[deg5[0],deg5[1],0,0];var sum1=sum2Complex(args1);var sum2=sum2Complex(args2);var sum3=sum2Complex(args3);var sum=sum2Complex([sum1[0],sum1[1],sum2[0],sum2[1]]);return sum2Complex([sum[0],sum[1],sum3[0],sum3[1]]);};function evaluatePolynomial(x,constant,co1,co2,co3,co4,co5){// the obvious return value would be '(x) => d.evaluate({ 'x': x }) but this would not work on GPUjs'
var deg1=rxC(co1,x);var deg2=rxC(co2,pow2(x));var deg3=rxC(co3,pow3(x));var deg4=rxC(co4,pow4(x));var deg5=rxC(co5,pow5(x));// // because longer arrays are not accepted :-(
var args1=[constant,0,deg1[0],deg1[1]];var args2=[deg2[0],deg2[1],deg3[0],deg3[1]];var args3=[deg4[0],deg4[1],deg5[0],deg5[1]];var sum1=sum2Complex(args1);var sum2=sum2Complex(args2);var sum3=sum2Complex(args3);var sum=sum2Complex([sum1[0],sum1[1],sum2[0],sum2[1]]);return sum2Complex([sum[0],sum[1],sum3[0],sum3[1]]);};function parseSolution(solutionObject){var _solutionObject$cons,_solutionObject$cons$,_solutionObject$cons$2,_solutionObject$cons$3,_solutionObject$cons$4,_solutionObject$cons$5,_solutionObject$cons$6,_solutionObject$cons$7,_solutionObject$cons$8,_solutionObject$cons$9,_solutionObject$cons2,_solutionObject$cons3,_solutionObject$cons4,_solutionObject$cons5;// real
if(solutionObject.d){return[parseFloat(solutionObject.d.toPrecision(4)),0];}//complex
if((_solutionObject$cons=solutionObject.cons)!==null&&_solutionObject$cons!==void 0&&(_solutionObject$cons$=_solutionObject$cons.cdr)!==null&&_solutionObject$cons$!==void 0&&(_solutionObject$cons$2=_solutionObject$cons$.cons)!==null&&_solutionObject$cons$2!==void 0&&(_solutionObject$cons$3=_solutionObject$cons$2.cdr)!==null&&_solutionObject$cons$3!==void 0&&(_solutionObject$cons$4=_solutionObject$cons$3.cons)!==null&&_solutionObject$cons$4!==void 0&&(_solutionObject$cons$5=_solutionObject$cons$4.car)!==null&&_solutionObject$cons$5!==void 0&&(_solutionObject$cons$6=_solutionObject$cons$5.cons)!==null&&_solutionObject$cons$6!==void 0&&(_solutionObject$cons$7=_solutionObject$cons$6.cdr)!==null&&_solutionObject$cons$7!==void 0&&(_solutionObject$cons$8=_solutionObject$cons$7.cons)!==null&&_solutionObject$cons$8!==void 0&&(_solutionObject$cons$9=_solutionObject$cons$8.car)!==null&&_solutionObject$cons$9!==void 0&&_solutionObject$cons$9.d){var solutions=solutionObject.cons.cdr.cons;var real=solutions.car.d;var _imaginary=solutions.cdr.cons.car.cons.cdr.cons.car.d;return[parseFloat(real.toPrecision(4)),parseFloat(_imaginary.toPrecision(4))];}//imaginary
var imaginary=((_solutionObject$cons2=solutionObject.cons)===null||_solutionObject$cons2===void 0?void 0:(_solutionObject$cons3=_solutionObject$cons2.cdr)===null||_solutionObject$cons3===void 0?void 0:(_solutionObject$cons4=_solutionObject$cons3.cons)===null||_solutionObject$cons4===void 0?void 0:(_solutionObject$cons5=_solutionObject$cons4.car)===null||_solutionObject$cons5===void 0?void 0:_solutionObject$cons5.d)||0;return[0,parseFloat(imaginary.toPrecision(4))];}function solve(equation){var _res,_res2;var res=[];var eq=Algebrite.run(equation);var sol=Algebrite.nroots(eq);var roots=sol.tensor.elem.map(function(e){return parseSolution(e);}).sort();var numOfRoots=roots.length;(_res=res).push.apply(_res,toConsumableArray_toConsumableArray(roots.flat()));(_res2=res).push.apply(_res2,[0,0,0,0,0,0,0,0,0,0]);res=res.slice(0,10);res.push(numOfRoots);return res;}function compareToAttractors(input,a0r,a0i,a1r,a1i,batch){if(rp(input[0],1)===rp(a0r,1)&&rp(input[1],1)===rp(a0i,1)){return 0+2*batch;}if(rp(input[0],1)===rp(a1r,1)&&rp(input[1],1)===rp(a1i,1)){return 1+2*batch;}return-1;}function newtonIteration(val,constant,co1,co2,co3,co4,co5){var num=evaluatePolynomial(val,constant,co1,co2,co3,co4,co5);var den=evaluateDerivative(val,co1,co2,co3,co4,co5);var div=rxC(-1,cByC(num,den));var sum=sum2Complex([val[0],val[1],div[0],div[1]]);return[sum[0],sum[1]];}function compareToKnownRoots(val,r0r,r0i,r1r,r1i,r2r,r2i,r3r,r3i,r4r,r4i,numOfRoots){var i=compareToAttractors(val,r0r,r0i,r1r,r1i,0);if(i!==-1)return i;i=compareToAttractors(val,r2r,r2i,r3r,r3i,1);if(i>numOfRoots-1)return-1;if(i!==-1){return i;}i=compareToAttractors(val,r4r,r4i,0,0,2);if(i>numOfRoots-1)return-1;return i;}function findIndexOfAttractor(r0r,r0i,r1r,r1i,r2r,r2i,r3r,r3i,r4r,r4i,numOfRoots,input,constant,co1,co2,co3,co4,co5){var val=input;val=newtonIteration(input,constant,co1,co2,co3,co4,co5);var i=compareToKnownRoots(val,r0r,r0i,r1r,r1i,r2r,r2i,r3r,r3i,r4r,r4i,numOfRoots);return[i,val[0],val[1]];}function findNewtonAttractor(r0r,r0i,r1r,r1i,r2r,r2i,r3r,r3i,r4r,r4i,numOfRoots,input,constant,co1,co2,co3,co4,co5){var index=-1;var value=input;var i=0;while(index===-1&&i<200){var res=findIndexOfAttractor(r0r,r0i,r1r,r1i,r2r,r2i,r3r,r3i,r4r,r4i,numOfRoots,value,constant,co1,co2,co3,co4,co5);index=res[0];value=[res[1],res[2]];i++;}return index;}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/3-newton/algorithm.ts
function getNewtonColour(i){if(i===0)return[252,207,210,255];if(i===1)return[139,102,110,255];if(i===2)return[254,246,225,255];if(i===3)return[150,184,150,255];if(i===4)return[231,99,123,255];return[0,0,0,255];};function getKernel(complexPlaneArgs,userInputs,roots){var gpu=new gpu_browser.GPU();gpu.addFunction(maths_helpers_lengthNumArray);gpu.addFunction(getComplexPartsForPixels);gpu.addFunction(compareToAttractors);gpu.addFunction(getNewtonColour);gpu.addFunction(getMultiplier);gpu.addFunction(sum2Complex);gpu.addFunction(findIndexOfAttractor);gpu.addFunction(newtonIteration);gpu.addFunction(compareToAttractors);gpu.addFunction(findNewtonAttractor);gpu.addFunction(evaluatePolynomial);gpu.addFunction(evaluateDerivative);gpu.addFunction(rxC);gpu.addFunction(cByC);gpu.addFunction(pow2);gpu.addFunction(pow3);gpu.addFunction(pow4);gpu.addFunction(pow5);gpu.addFunction(maths_helpers_c);gpu.addFunction(rp);gpu.addFunction(compareToKnownRoots);var kernel=gpu.createKernel(function(complexPlaneArgs,userInputs,roots){// passed as an array because GPU
var size=complexPlaneArgs[0];var startValueX=complexPlaneArgs[1];var startValueY=complexPlaneArgs[2];var inc=complexPlaneArgs[3];var constant=userInputs[0];var co1=userInputs[1];var co2=userInputs[2];var co3=userInputs[3];var co4=userInputs[4];var co5=userInputs[5];var r0r=roots[0];var r0i=roots[1];var r1r=roots[2];var r1i=roots[3];var r2r=roots[4];var r2i=roots[5];var r3r=roots[6];var r3i=roots[7];var r4r=roots[8];var r4i=roots[9];var numOfRoots=roots[10];var values=getComplexPartsForPixels(this.thread.x,this.thread.y,size,startValueX,startValueY,inc);var index=findNewtonAttractor(r0r,r0i,r1r,r1i,r2r,r2i,r3r,r3i,r4r,r4i,numOfRoots,values,constant,co1,co2,co3,co4,co5);var res=getNewtonColour(index);return res;}).setOutput([complexPlaneArgs[0],complexPlaneArgs[0]]);return kernel;}function createImageData(size,startValue,range,xReal,xImaginary,input){var inc=range/size;if(!input){var arr=new Uint8ClampedArray(size*size*4);return new ImageData(arr,size);}var polynomialString=getPolynomialStringForNroots(input===null||input===void 0?void 0:input.constant,input===null||input===void 0?void 0:input.co1,input===null||input===void 0?void 0:input.co2,input===null||input===void 0?void 0:input.co3,input===null||input===void 0?void 0:input.co4,input===null||input===void 0?void 0:input.co5);var attractors=solve(polynomialString);var kernel=getKernel([size,startValue[0],startValue[1],inc],[input===null||input===void 0?void 0:input.constant,input.co1,input.co2,input.co3,input.co4,input.co5],toConsumableArray_toConsumableArray(attractors));var kernelDump=kernel([size,startValue[0],startValue[1],inc],[input===null||input===void 0?void 0:input.constant,input.co1,input.co2,input.co3,input.co4,input.co5],toConsumableArray_toConsumableArray(attractors));return convertKernelToImgData(kernelDump,size);}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/3-newton/index.tsx
var sliderProps={maxValue:8,minValue:-8,stepSize:0.2,delayed:true};function controlsChildren(constant,co1,co2,co3,co4,co5){var poly=getPolynomialStringForNroots(constant,co1,co2,co3,co4,co5,true);return/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"large-eq",tabIndex:-1,children:/*#__PURE__*/(0,jsx_runtime.jsx)(MathJax_MathJax,{children:"\\(".concat(poly," = 0 \\)")},"".concat(co5).concat(co4).concat(co3).concat(co2).concat(co1).concat(constant))});}function Newton(){var _useState=(0,react.useState)(0),_useState2=slicedToArray_slicedToArray(_useState,2),co5=_useState2[0],setA5=_useState2[1];var _useState3=(0,react.useState)(0),_useState4=slicedToArray_slicedToArray(_useState3,2),co4=_useState4[0],setCo4=_useState4[1];var _useState5=(0,react.useState)(1),_useState6=slicedToArray_slicedToArray(_useState5,2),co3=_useState6[0],setCo3=_useState6[1];var _useState7=(0,react.useState)(0),_useState8=slicedToArray_slicedToArray(_useState7,2),co2=_useState8[0],setCo2=_useState8[1];var _useState9=(0,react.useState)(0),_useState10=slicedToArray_slicedToArray(_useState9,2),co1=_useState10[0],setCo1=_useState10[1];var _useState11=(0,react.useState)(8),_useState12=slicedToArray_slicedToArray(_useState11,2),constant=_useState12[0],setConstant=_useState12[1];var sliders=[_objectSpread2({value:constant,label:/*#__PURE__*/(0,jsx_runtime.jsx)(MathJax_MathJax,{children:"\\(".concat(constant,"\\)")}),setValue:setConstant,tabIndex:1,id:'const'},sliderProps),_objectSpread2({value:co1,label:/*#__PURE__*/(0,jsx_runtime.jsx)(MathJax_MathJax,{children:"\\(".concat(co1,"x\\)")}),setValue:setCo1,tabIndex:2,id:'x1'},sliderProps),_objectSpread2({value:co2,label:/*#__PURE__*/(0,jsx_runtime.jsx)(MathJax_MathJax,{children:"\\(".concat(co2,"x ^ 2\\)")}),setValue:setCo2,tabIndex:3,id:'x2'},sliderProps),_objectSpread2({value:co3,label:/*#__PURE__*/(0,jsx_runtime.jsx)(MathJax_MathJax,{children:"\\(".concat(co3,"x ^ 3\\)")}),setValue:setCo3,tabIndex:4,id:'x3'},sliderProps),_objectSpread2({value:co4,label:/*#__PURE__*/(0,jsx_runtime.jsx)(MathJax_MathJax,{children:"\\(".concat(co4,"x ^ 4\\)")}),setValue:setCo4,tabIndex:5,id:'x4'},sliderProps),_objectSpread2({value:co5,label:/*#__PURE__*/(0,jsx_runtime.jsx)(MathJax_MathJax,{children:"\\(".concat(co5,"x ^ 5\\)")}),setValue:setA5,tabIndex:6,id:'x5'},sliderProps)];var navTabIndex=(0,react.useContext)(NavTabContext);var description=(0,react.useMemo)(function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(_3_newton_description_Description,{ti:navTabIndex+17});},[navTabIndex]);return/*#__PURE__*/(0,jsx_runtime.jsx)(ComplexPlaneFractalDisplay,{controlsChildren:controlsChildren(constant,co1,co2,co3,co4,co5),createImageData:createImageData,description:description,descriptionTabIndex:navTabIndex+18,draw:_3_newton_draw_draw,drawParameters:{constant:constant,co1:co1,co2:co2,co3:co3,co4:co4,co5:co5},footerTabIndex:navTabIndex+26,nextLink:"/#/mandelbrot",prevLink:"/#/cantor",range:3,sliders:sliders,startValue:[-1.2,-1.5],title:"Newton's fractal",xImaginary:0,xReal:0});}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/4-mandelbrot/draw.ts
function _4_mandelbrot_draw_draw(args){var canvas=args.canvas,size=args.size;var parameters=args.parameters;var offsetX=parameters.pixelOffset[0]||0;var offsetY=parameters.pixelOffset[1]||0;var ctx=canvas===null||canvas===void 0?void 0:canvas.getContext('2d');if(ctx){ctx.beginPath();ctx.clearRect(0,0,size,size);ctx.rect(0,0,size,size);ctx.fillStyle='black';ctx.fill();ctx.putImageData(parameters.imageData,offsetX,offsetY);}}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/4-mandelbrot/description.tsx
function _4_mandelbrot_description_Description(props){var ti=props.ti+1;return/*#__PURE__*/(0,jsx_runtime.jsxs)(MathJax_MathJax,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"This image has a few things in common with Newton's fractal. It also represents a complex plane, and the colours also show what happens to the orbit when the number on the plane is the seed. The image might not look the most impressive at the first glance, but if you zoom in on one of the edges of the white shape, you will discover how complex it is."}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{className:"ex",children:"Spend some time exploring the patters by zooming and panning (using the same methods as in the previous image)"}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"This is even more complex that Newton't fractal. So what is the function that produces such a complicated image?"}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"\\(z^2 + c \\)"}),/*#__PURE__*/(0,jsx_runtime.jsx)("h3",{children:"What exactly is plotted in the image"}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"In case of Newton\u2019t fractal, the orbits gravitated towards one of the solutions of the equation. The higher the degree of the equation, the more solutions and more colours the fractal has Here, we are following only two options: the orbit creating a cycle, or the orbit escaping to infinity."}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["In the orbits we're following here, the seed, or the ","\\(z\\)"," in ","\\(z^2 + c \\)",", is equal to ","\\(0\\)",". What changes is the value of ","\\(c\\)"," \u2013 each pixel represents a number that becomes the ","\\(c\\)",". To illustrate what happens, we will follow the beginning of the orbit for ","\\(c = 1\\)",":"]}),/*#__PURE__*/(0,jsx_runtime.jsx)("table",{className:"iteration-table",children:/*#__PURE__*/(0,jsx_runtime.jsxs)("tr",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"Step 1"}),/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"\\(0^2 + 1 = 1 \\)"})]})}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Now, we\u2019re taking result of the first iteration, and use it as z:"}),/*#__PURE__*/(0,jsx_runtime.jsx)("table",{className:"iteration-table",children:/*#__PURE__*/(0,jsx_runtime.jsxs)("tr",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"Step 2"}),/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"\\(1^2 + 1 = 2 \\)"})]})}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"And so on:"}),/*#__PURE__*/(0,jsx_runtime.jsxs)("table",{className:"iteration-table",children:[/*#__PURE__*/(0,jsx_runtime.jsxs)("tr",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"Step 3"}),/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"\\(2^2 + 1 = 5 \\)"})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("tr",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"Step 4"}),/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"\\(5^2 + 1 = 26 \\)"})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("tr",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"Step 5"}),/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"\\(26^2 + 1 = 677 \\)"})]})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:[" This gives us an orbit starting with ","\\( 1, 2, 5, 26, 677\\)",". We can easily tell that the following numbers will only grow larger and larger; in other words, the orbit of ","\\(z^2 + 1 \\)"," under  ","\\(0\\)"," tends to infinity."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["But let's try a different c:  ","\\(-1\\)","."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("table",{className:"iteration-table",children:[/*#__PURE__*/(0,jsx_runtime.jsxs)("tr",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"Step 1"}),/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"\\(0^2 - 1 = -1 \\)"})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("tr",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"Step 2"}),/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"\\(-1^2 - 1 = 0 \\)"})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("tr",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"Step 3"}),/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"\\(0^2 - 1 = -1 \\)"})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("tr",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"Step 4"}),/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"\\(-1^2 - 1 = 0 \\)"})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("tr",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"Step 5"}),/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"\\(0^2 - 1 = -1 \\)"})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("tr",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"Step 6"}),/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"\\(-1^2 - 1 = 0 \\)"})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("tr",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"Step 7"}),/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"\\(0^2 - 1 = -1 \\)"})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("tr",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"Step 8"}),/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"\\(-1^2 - 1 = 0 \\)"})]})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["This one loops, with two numbers repeating forever:  ","\\( 1, 0, -1, 0, -1, 0...\\)",". This is called a cyclical, or periodic orbit."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["In the image, if the number produces a periodic orbit when used as ","\\(c\\)"," in ","\\(z^2 + 1 \\)",", it is white. If the orbit escapes, or tends to infinity, it is black."]}),/*#__PURE__*/(0,jsx_runtime.jsx)("h3",{children:"The discovery of Mandelbrot set"}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"The mathematical operations needed for this image are simple, even with complex numbers, but the sheer number of calculations is overwhelming. Just like with Newton's fractal, it would be really tedious to plot it by hand. No wonder it was discovered with the help of computers."}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["In 1979, in an IBM research centre, a mathematician called Benoit Mandelbrot tried using the latest technology to investigate iterative functions \u2013 the computer was a perfect tool to speed up repeated calculations. As he investigated into","\\(z^2 + 1 \\)",", he discovered how intricate patterns appear of you zoom on the edge of the shape. Mandelbrot was also the person who coined the term fractal, and he spend a lot of his career on researching fractals and related subjects."]}),/*#__PURE__*/(0,jsx_runtime.jsx)("h3",{children:"More on cycles and escaping orbits."}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["The example orbits described above are fairly simple, but there can always be more complicated cases. Firstly, the cycles can have different length: the one above is a 2-cycle, becaus the are two numbers repeating. In the Newton's fractal page, we saw a 1-cycle - there was an orbit approaching  ","\\(2\\)",", and once it reached  ","\\(2\\)",", every next step produced another  ","\\(2\\)",". The orbit can also meander through different values before is starts cycling."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["On the first glance, it may not always be obvious if n orbit would tend to infinity. Fortunately, in Mandelbrot set it is easy to tell - if any number on the orbit is further from the seed than ","\\(2\\)",", we know it will eventually escape. To explain it more visually, if you drew a circle with the radius of ","\\(2\\)"," around the seed, whenever the orbit leaves the circle, we know it will tend to infinity. This is referred as ",/*#__PURE__*/(0,jsx_runtime.jsx)("strong",{children:"the escape criterion"}),"."]}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Some images of the Mandelbrot set are very colourful - the colours usually show how long it takes for an orbit to start cycling or fulfil the escape criterion."}),/*#__PURE__*/(0,jsx_runtime.jsx)("h3",{children:"Cycles and bulbs"}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"The Mandelbrot set has many interesting properties, and we will look into a simple example. If you zoom anywhere on the edge of the set, you will see a lot of round shapes \"growing\" out of the main body, often called bulbs. Yes - there is whole terminology to describe parts and areas of the Mandelbrot set! These bulbs often have an \"antenna\" growing out of it, branching into several others. The exact number of the branches depends on the orbit of the number in the middle of the bulbl for example, if the orbit ends up cycling over four numbers, then the antenna growing out of the bulb will have four branches (including the one growing out of the bulb). Below, there are three example bulbs compared to the orbits their middle point makes."}),/*#__PURE__*/(0,jsx_runtime.jsx)(Media,{src:__webpack_require__(29),alt:"Values of c in the middle of the bulbs, and the orbits of those values",tabIndex:ti}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["The top-left bulb has ","\\(0.12 + 0.75 i\\)"," in the middle, which creates a 3-cycle. The antenna on top of it branches into two smaller ones, giving us three branches. The top-right bulb has a 4-cycle related to it, and grows an antenna with four branches etc."]})]});}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/4-mandelbrot/algorithm.ts
function cardioid(x,y){/* if res < 0.25, the point [x, y] lies within the main cardioid;
  returns number because GPUJS has problem handling Booleans
  */var ySq=Math.pow(y,2);var c=x-0.25;var res=(Math.pow(Math.pow(c,2)+ySq,2)+c*(Math.pow(c,2)+ySq))/ySq;return res;}function checkKnownSolidShapes(c){var withinLimits=0;//main cardioid
if(cardioid(c[0],c[1])<0.25){withinLimits=1;}// main bulb
if(distanceSq([-1,0],c)<0.0625){withinLimits=1;}return withinLimits;}function processPixel(c,iterations){if(checkKnownSolidShapes(c)===1){return[255,255,255,255];}var seed=[0,0];var val=xSqrPlusY(seed,c);for(var i=0;i<=iterations;i++){val=xSqrPlusY(val,c);var cr=distanceSq(val,c);if(cr>4){return getColor(i);}}return[255,255,255,255];}function algorithm_getKernel(size){var gpu=new gpu_browser.GPU();gpu.addFunction(getComplexPartsForPixels);gpu.addFunction(xSqrPlusY);gpu.addFunction(processPixel);gpu.addFunction(distanceSq);gpu.addFunction(getColor);gpu.addFunction(getMultiplier);gpu.addFunction(cardioid);gpu.addFunction(checkKnownSolidShapes);var kernel=gpu.createKernel(function(startValueX,startValueY,size,inc){var values=getComplexPartsForPixels(this.thread.x,this.thread.y,size,startValueX,startValueY,inc);var res=processPixel(values,200);return res;}).setOutput([size,size]);return kernel;}function algorithm_createImageData(size,startValue,range){var inc=range/size;var startReal=startValue[0];var startImaginary=startValue[1];var kernel=algorithm_getKernel(size);var kernelDump=kernel(startReal,startImaginary,size,inc);return convertKernelToImgData(kernelDump,size);}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/4-mandelbrot/index.tsx
function MandelbrotSet(){var navTabIndex=(0,react.useContext)(NavTabContext);var description=(0,react.useMemo)(function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(_4_mandelbrot_description_Description,{ti:navTabIndex+6});},[navTabIndex]);return/*#__PURE__*/(0,jsx_runtime.jsx)(ComplexPlaneFractalDisplay,{createImageData:algorithm_createImageData,description:description,descriptionTabIndex:navTabIndex+6,draw:_4_mandelbrot_draw_draw,nextLink:"/#/julia",prevLink:"/#/newton",range:3,startValue:[-2,-1.5],title:"Mandelbrot Set",xImaginary:0,xReal:0});}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/5-julia/draw.ts
function _5_julia_draw_draw(args){var canvas=args.canvas,size=args.size;var parameters=args.parameters;var offsetX=parameters.pixelOffset[0]||0;var offsetY=parameters.pixelOffset[1]||0;var ctx=canvas===null||canvas===void 0?void 0:canvas.getContext('2d');if(ctx){ctx.beginPath();ctx.clearRect(0,0,size,size);ctx.rect(0,0,size,size);ctx.fillStyle='black';ctx.fill();ctx.putImageData(parameters.imageData,offsetX,offsetY);}}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/5-julia/description.tsx
function _5_julia_description_Description(props){var ti=props.ti+1;return/*#__PURE__*/(0,jsx_runtime.jsxs)(MathJax_MathJax,{children:[/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["In the Mandelbrot set, the ","\\(z \\)"," is always ","\\(0 \\)"," in ","\\(z^2 + c \\)",", and the value of the pixel decides about the ","\\(c \\)",". We can also swap these: the ","\\(z \\)"," in the formula depends on the value of the pixel, and the ","\\(c \\)"," is constant. If we do this and leave the rest of the process the same, we get a Julia set, which you can see in the image. There is a little difference: the Mandelbrot set contains all the values ",/*#__PURE__*/(0,jsx_runtime.jsx)("em",{children:"inside"})," the big blob, while the Julia sets contains the values at the edge of th shape. There are infinitely many Julia sets, one for each value of ","\\(c \\)",", and they have different shapes. The one that this page starts with is called Douady rabbit because it looks a bit like a fractal rabbit head - with new rabbit heads growing out of each of the ears. "]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{className:"ex",children:[" Use the sliders or number inputs to change the values of  ","\\(c \\)","and see how the shape changes. Warning: start with very little changes, or you won't be able to track what is happening."]}),/*#__PURE__*/(0,jsx_runtime.jsx)("h2",{children:"How Julia sets and Mandelbrot set are related"}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Obviously, the two sets are related by using the same formula and process, but the connection is more complex."}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Julia sets have an interesting property: all the numbers in the set are either all connected, or all disconnected, like numbers in the Cantor set. There are no Julia sets in three or forty \"pieces\": it's either one, or infinitely many."}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["Some values of ","\\(c \\)"," make a Julia set in one piece, and some values of ","\\(c \\)"," make a Julia set in infinite many pieces - sounds like something we could mark on a complex plane with different colours. And this is how Mandelbrot was looking into when he discovered his set - all the ","\\(c \\)","s inside the Mandelbrot set create a connected Julia set, and the ones outside create dust."]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("p",{children:["There are other relationships between the sets. If you pick a value for your ","\\(c \\)"," somewhere in the Mandelbrot set, the patterns in Julia set with this ","\\(c \\)"," will look somewhat similar to the patterns in that area of the Mandelbrot set: "]}),/*#__PURE__*/(0,jsx_runtime.jsx)(Media,{src:__webpack_require__(473),alt:"Julia sets for the c of -0.24 + 0.84i and -0.47 -0.63i next to these values marked on the Mandelbrot set",tabIndex:ti})]});}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/5-julia/algorithm.ts
function algorithm_processPixel(x,iterations,cReal,cImaginary){var val=xSqrPlusY(x,[cReal,cImaginary]);for(var i=0;i<=iterations;i++){val=xSqrPlusY(val,[cReal,cImaginary]);if(distanceSq(val,x)>4){return getColor(i);}}return[255,255,255,255];}function _5_julia_algorithm_getKernel(size,xReal,xImaginary){var gpu=new gpu_browser.GPU();gpu.addFunction(getComplexPartsForPixels);gpu.addFunction(xSqrPlusY);gpu.addFunction(algorithm_processPixel);gpu.addFunction(distanceSq);gpu.addFunction(getColor);gpu.addFunction(getMultiplier);var kernel=gpu.createKernel(function(startValueX,startValueY,size,inc,xReal,xImaginary){var values=getComplexPartsForPixels(this.thread.x,this.thread.y,size,startValueX,startValueY,inc);var res=algorithm_processPixel(values,1000,xReal,xImaginary);return res;}).setOutput([size,size]);return kernel;}function _5_julia_algorithm_createImageData(size,startValue,range,xReal,xImaginary){var inc=range/size;var startReal=startValue[0];var startImaginary=startValue[1];var kernel=_5_julia_algorithm_getKernel(size,xReal,xImaginary);var kernelDump=kernel(startReal,startImaginary,size,inc,xReal,xImaginary);return convertKernelToImgData(kernelDump,size);}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/5-julia/index.tsx
function JuliaSet(){var _useState=(0,react.useState)(-0.12256),_useState2=slicedToArray_slicedToArray(_useState,2),cReal=_useState2[0],setCReal=_useState2[1];var _useState3=(0,react.useState)(0.74486),_useState4=slicedToArray_slicedToArray(_useState3,2),cImaginary=_useState4[0],setCImaginary=_useState4[1];var sliderProps={maxValue:1,minValue:-1,stepSize:0.01,delayed:true,inputRounding:2};var sliders=[_objectSpread2({value:cReal,info:"Real part for c (position on the x axis)",label:"c real part",setValue:setCReal,tabIndex:1},sliderProps),_objectSpread2({value:cImaginary,info:"Imaginary part for c (position on the y axis)",label:"c imaginary part",setValue:setCImaginary,tabIndex:2},sliderProps)];var navTabIndex=(0,react.useContext)(NavTabContext);var description=(0,react.useMemo)(function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(_5_julia_description_Description,{ti:navTabIndex+10});},[navTabIndex]);return/*#__PURE__*/(0,jsx_runtime.jsx)(ComplexPlaneFractalDisplay,{createImageData:_5_julia_algorithm_createImageData,descriptionTabIndex:navTabIndex+10,description:description,draw:_5_julia_draw_draw,nextLink:"/#/dummy",prevLink:"/#/mandelbrot",range:3,sliders:sliders,startValue:[-1.5,-1.5],title:"Julia Set",xImaginary:cImaginary,xReal:cReal});}
;// CONCATENATED MODULE: ./src/fractals/Components/CanvasFigure/CanvasFigure.ts
var CanvasFigure=/*#__PURE__*/function(){function CanvasFigure(ctx,iterations,size){classCallCheck_classCallCheck(this,CanvasFigure);this.ctx=void 0;this.iterations=void 0;this.size=void 0;this.edges=void 0;this.ctx=ctx;this.iterations=iterations;this.size=size;this.edges={'E':0,'N':0,"S":0,'W':0};}createClass_createClass(CanvasFigure,[{key:"withinBounds",value:function withinBounds(){if(this.edges.N<0||this.edges.W<0||this.edges.E>this.size||this.edges.S>this.size){return false;}return true;}},{key:"centreImageCoords",value:function centreImageCoords(){var x=0;var y=0;if(this.withinBounds()){return{x:x,y:y};}if(this.edges.S>this.size){y=this.size-this.edges.S-2;}if(this.edges.E>this.size){x=this.size-this.edges.E-2;}if(this.edges.N<0){y=-this.edges.N+2;}if(this.edges.W<0){x=-this.edges.W+2;}return{x:Math.floor(x),y:Math.floor(y)};}},{key:"updateEdges",value:function updateEdges(p){if(p[0]<this.edges.W){this.edges.W=Math.min(p[0],this.edges.W);}if(p[0]>this.size){this.edges.E=Math.max(p[0],this.edges.E);}if(p[1]<this.edges.N){this.edges.N=Math.min(p[1],this.edges.N);}if(p[1]>this.size){this.edges.S=Math.max(p[1],this.edges.S);}}},{key:"scaleRatio",value:function scaleRatio(){if(this.withinBounds())return 1;var height=this.edges.S-this.edges.N;height=height>this.size?height:this.size;var width=this.edges.E-this.edges.W;width=width>this.size?width:this.size;var ratio=Math.round(this.size/Math.max(height,width)*100)/100;console.log(ratio);return ratio;}}]);return CanvasFigure;}();
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/6-dragon/algorithm.ts
function getDirection(line){if(line.a[1]===line.b[1]){return line.a[0]>line.b[0]?'W':'E';}return line.a[1]>line.b[1]?'N':'S';}function addIteration(turns){return[true].concat(toConsumableArray_toConsumableArray(turns.map(function(t){return!t;}).reverse()));}function getLength(size,iterations){var length=Math.floor(size*0.5);length=length/Math.pow(2,iterations/2);if(length<0){length=1;}return length;}function getLineWidth(iterations){if(iterations<5)return 3;if(iterations<10)return 2;return 1;}var Dragon=/*#__PURE__*/function(_CanvasFigure){_inherits(Dragon,_CanvasFigure);var _super=_createSuper(Dragon);function Dragon(ctx,iterations,length,start,firstDirection,size){var _this;classCallCheck_classCallCheck(this,Dragon);_this=_super.call(this,ctx,iterations,size);_this.firstDirection=void 0;_this.iterationImages=void 0;_this.length=void 0;_this.lastLine=void 0;_this.turns=void 0;_this.nextDir={'N':{left:'W',right:'E'},'E':{left:'N',right:'S'},'S':{left:'E',right:'W'},'W':{left:'S',right:'N'}};_this.colours=[c.CREAM,c.BROWN,c.PINK,c.GREEN,c.CORAL];_this.length=length;_this.firstDirection=firstDirection;_this.turns=[];_this.lastLine={a:start,b:start};_this.iterationImages=[];_this.addIterationImages();return _this;}createClass_createClass(Dragon,[{key:"addIterationImage",value:function addIterationImage(i){var _newImage$path;var newTurns=i===1?[true]:addIteration(this.turns);var newImage={turns:newTurns,path:new Path2D(),iteration:i};this.turns=this.turns.concat(newImage.turns);(_newImage$path=newImage.path).moveTo.apply(_newImage$path,toConsumableArray_toConsumableArray(this.lastLine.b));this.getPath(newImage.path,newImage.turns);this.iterationImages.push(newImage);}},{key:"addIterationImages",value:function addIterationImages(){var _newImage$path2;var newImage={path:new Path2D(),turns:[],iteration:0};(_newImage$path2=newImage.path).moveTo.apply(_newImage$path2,toConsumableArray_toConsumableArray(this.lastLine.b));this.addLine(this.firstDirection,newImage.path);this.iterationImages.push(newImage);if(this.iterations===0)return;for(var i=1;i<=this.iterations;i++){this.addIterationImage(i);var trans=this.centreImageCoords();this.ctx.translate(trans.x,trans.y);}}},{key:"draw",value:function draw(animate){var _this2=this;var _iterator=createForOfIteratorHelper_createForOfIteratorHelper(this.iterationImages),_step;try{var _loop=function _loop(){var image=_step.value;setTimeout(function(){_this2.ctx.strokeStyle=_this2.colours[image.iteration%5];_this2.ctx.stroke(image.path);},animate?image.iteration*100:0);};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}}catch(err){_iterator.e(err);}finally{_iterator.f();}}},{key:"getEnd",value:function getEnd(start,direction){var end=[0,0];if(direction==="E"){end=[start[0]+this.length,start[1]];}else if(direction==="W"){end=[start[0]-this.length,start[1]];}else if(direction==="S"){end=[start[0],start[1]+this.length];}else{end=[start[0],start[1]-this.length];}this.updateEdges(end);return end;}},{key:"addLine",value:function addLine(direction,path){var end=this.getEnd(this.lastLine.b,direction);path.lineTo.apply(path,toConsumableArray_toConsumableArray(end));this.lastLine={a:this.lastLine.b,b:end};}},{key:"getPath",value:function getPath(path,turns){var _iterator2=createForOfIteratorHelper_createForOfIteratorHelper(turns),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var turn=_step2.value;var last=getDirection(this.lastLine);var currentTurn=turn?'right':'left';var next=this.nextDir[last][currentTurn];this.addLine(next,path);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}}]);return Dragon;}(CanvasFigure);function drawDragon(ctx,size,iterations,animate){var length=getLength(size,iterations);var start=[Math.floor(0.5*size),Math.floor(0.5*size)];ctx.strokeStyle="white";ctx.lineWidth=getLineWidth(iterations);ctx===null||ctx===void 0?void 0:ctx.clearRect(0,0,size,size);var dragon=new Dragon(ctx,iterations,length,start,'N',size);dragon.draw(animate);}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/6-dragon/draw.ts
function _6_dragon_draw_draw(args){var canvas=args.canvas,size=args.size;var parameters=args.parameters;var animate=parameters.animate==="on";var ctx=canvas.getContext("2d");canvas.style.background="black";if(ctx){ctx===null||ctx===void 0?void 0:ctx.clearRect(0,0,size,size);drawDragon(ctx,size,parameters.iterations,animate);}}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/6-dragon/description.tsx
function _6_dragon_description_Description(props){var ti=props.ti+1;return/*#__PURE__*/(0,jsx_runtime.jsxs)(MathJax_MathJax,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Let us leave the abstract realm of complex planes and imaginary numbers an get back to something more mundane: folding strips of paper."}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"What happens if we fold paper, but recursively? If you fold paper once, and then open it so the folds are at the right angles, nothing exciting happens. If you fold it once, and then fold your folded paper again, you will arrive at a different, though not very interesting shape. But it slowly gets more interesting."}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Watch the video below to observe the first four iterations of the process - in real life, with real paper!"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Media,{video:true,src:__webpack_require__(530),alt:"video of folding paper",tabIndex:ti}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"One could expect a simple pattern of bends to emerge from such a simple process, but the shape of the paper becomes more and more intricate the more iterations we add - it turns out it's a fractal. The generated image shows the idealised version of the shape achieved by folding paper more times. Of course, in real life, nobody would fold paper that neatly."}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{className:"ex",children:"Add the number of iterations one by one to see the emerging shape. You may also go through the first four to see see how the image mirror what was shown on the video."}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"This curve, Heighway dragon is an example of a dragon curve - a group of similar fractal shapes"})]});}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/6-dragon/index.tsx
function _6_dragon_getMaxIterations(size){return 20;}function HeighwayDragon(){var _useState=(0,react.useState)(false),_useState2=slicedToArray_slicedToArray(_useState,2),fullScreen=_useState2[0],setFullScreen=_useState2[1];var _useState3=(0,react.useState)(getSize(fullScreen)),_useState4=slicedToArray_slicedToArray(_useState3,2),canvasSize=_useState4[0],setCanvasSize=_useState4[1];var _useState5=(0,react.useState)(11),_useState6=slicedToArray_slicedToArray(_useState5,2),iterations=_useState6[0],setIterations=_useState6[1];var _useState7=(0,react.useState)("on"),_useState8=slicedToArray_slicedToArray(_useState7,2),animate=_useState8[0],setAnimate=_useState8[1];var maxIterations=_6_dragon_getMaxIterations(canvasSize);var navTabIndex=(0,react.useContext)(NavTabContext);(0,react.useEffect)(function(){var func=function func(){var newSize=getSize(fullScreen);setCanvasSize(newSize);};window.addEventListener("resize",func);return function(){return window.removeEventListener("resize",func);};},[fullScreen,canvasSize]);var sliders=[{value:iterations,label:"iterations",maxValue:maxIterations,minValue:0,setValue:setIterations,tabIndex:0}];var radio=[{label:"Add each iteration with a delay (animate)",options:["on","off"],setValue:setAnimate,tabIndex:2,value:animate}];var description=(0,react.useMemo)(function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(_6_dragon_description_Description,{ti:navTabIndex+13});},[navTabIndex]);return/*#__PURE__*/(0,jsx_runtime.jsx)(FullScreenContext.Provider,{value:fullScreen,children:/*#__PURE__*/(0,jsx_runtime.jsx)(FractalDisplay,{canvasInputs:{key:iterations.toString()},canvasSize:canvasSize,description:description,descriptionTabIndex:navTabIndex+13,draw:_6_dragon_draw_draw,drawParameters:{iterations:iterations,animate:animate},nextLink:"/#/julia",prevLink:"/#/l-system",radio:radio,setFullScreen:setFullScreen,sliders:sliders,title:"Heighway dragon"})});}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/7-l-system/algorithm.ts
function changeColour(rgb,change){rgb.forEach(function(c){var newValue=c+change;if(newValue>255||newValue<0){return rgb;}});return rgb.map(function(v){return v+change;});}function algorithm_getMaxIterations(branches){if(branches<3)return 16;if(branches<4)return 12;return 8;}var Tree=/*#__PURE__*/function(_CanvasFigure){_inherits(Tree,_CanvasFigure);var _super=_createSuper(Tree);function Tree(ctx,iterations,size,angle,lengthRatio,branchesNumber,cpXDistRatio,cpyRatio,noise){var _this;classCallCheck_classCallCheck(this,Tree);_this=_super.call(this,ctx,iterations,size);_this.angle=void 0;_this.lengthRatio=void 0;_this.branchesNumber=void 0;_this.colourStep=void 0;_this.cpXDistRatio=void 0;_this.cpYRatio=void 0;_this.iterationFigures=void 0;_this.noise=void 0;_this.lengthRatio=lengthRatio;_this.branchesNumber=branchesNumber;_this.cpXDistRatio=cpXDistRatio;_this.cpYRatio=cpyRatio;_this.angle=Math.PI/180*angle;_this.iterationFigures=[{i:0,paths:[]}];_this.colourStep=_this.getColourStep();_this.noise=noise;return _this;}createClass_createClass(Tree,[{key:"getColourStep",value:function getColourStep(){// values based on aesthetics
if(this.branchesNumber===2)return 13;if(this.branchesNumber>3)return 26;return 20;}},{key:"drawTrunk",value:function drawTrunk(){var length=Math.floor(this.size*0.4);var trunk=new Path2D();var start=[this.size/2,this.size-2];var end=[this.size/2,this.size-length-2];trunk.moveTo.apply(trunk,start);trunk.lineTo.apply(trunk,end);this.iterationFigures[0].paths.push(trunk);this.updateEdges(start);return{end:end,angle:0,length:length,path:trunk};}},{key:"addBranch",value:function addBranch(oldBranch,rawAngle,position){var branch=new Path2D();var cpYRatio=this.noise?(1-Math.random()*this.noise)*this.cpYRatio:this.cpYRatio;var cpXDistRatio=this.noise?(1-Math.random()*this.noise)*this.cpXDistRatio:this.cpXDistRatio;var length=Math.floor(oldBranch.length*this.lengthRatio);length=this.noise?Math.round(length*(1-Math.random()*this.noise)):length;var angle=this.noise?rawAngle*(1-Math.random()*this.noise):rawAngle;var _findLineEnd=findLineEnd(oldBranch.end,angle,length),_findLineEnd2=slicedToArray_slicedToArray(_findLineEnd,2),x=_findLineEnd2[0],y=_findLineEnd2[1];branch.moveTo.apply(branch,toConsumableArray_toConsumableArray(oldBranch.end));if(position==="middle"||this.cpXDistRatio===0){branch.lineTo(x,y);}else{var _getQuadraticCurvePar=getQuadraticCurveParams(oldBranch.end,angle,length,cpYRatio,cpXDistRatio,position),_getQuadraticCurvePar2=slicedToArray_slicedToArray(_getQuadraticCurvePar,4),cPx=_getQuadraticCurvePar2[0],cPy=_getQuadraticCurvePar2[1],_x=_getQuadraticCurvePar2[2],_y=_getQuadraticCurvePar2[3];branch.quadraticCurveTo(cPx,cPy,_x,_y);}this.updateEdges([x,y]);return{end:[x,y],angle:angle,length:length,path:branch};}},{key:"addBranches",value:function addBranches(branch){var branches=[];if(this.branchesNumber%2===1){var b0=this.addBranch(branch,branch.angle,"middle");branches.push(b0);}var b1=this.addBranch(branch,branch.angle+this.angle,"left");var b2=this.addBranch(branch,branch.angle-this.angle,"right");branches.push(b1,b2);if(this.branchesNumber>3){var b3=this.addBranch(branch,branch.angle+2*this.angle,"left");var b4=this.addBranch(branch,branch.angle-2*this.angle,"right");branches.push(b3,b4);}return branches;}},{key:"addIteration",value:function addIteration(branches){var _this2=this;var lastIter=this.iterationFigures.length-1;var newBranches=branches.map(function(b){return _this2.addBranches(b);}).flat();this.iterationFigures.push({i:lastIter,paths:newBranches.map(function(b){return b.path;})});return newBranches;}},{key:"draw",value:function draw(paths){var _this3=this;paths.forEach(function(p){_this3.ctx.stroke(p);});}},{key:"drawAll",value:function drawAll(animate){var _this4=this;var startColour=changeColour(cArr.GREEN,70);var _iterator=createForOfIteratorHelper_createForOfIteratorHelper(this.iterationFigures),_step;try{var _loop=function _loop(){var iter=_step.value;setTimeout(function(){var colour=changeColour(startColour,-_this4.colourStep*iter.i);_this4.ctx.strokeStyle="rgb(".concat(colour,")");_this4.draw(iter.paths);},animate?iter.i*100:0);};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}}catch(err){_iterator.e(err);}finally{_iterator.f();};}}]);return Tree;}(CanvasFigure);function algorithm_generate(iterations,angle,lRatio,size,animate,branchesNumber,curveRatio,curveDistanceRatio,noise,ctx){var tree=new Tree(ctx,iterations,size,angle,lRatio,branchesNumber,curveDistanceRatio,curveRatio,noise);if(algorithm_getMaxIterations(tree.branchesNumber)<iterations)return;var trunk=tree.drawTrunk();if(iterations===0)return;var branches=[trunk];for(var i=0;i<iterations;i++){branches=tree.addIteration(branches);}if(!tree.withinBounds()){var scaleRatio=tree.scaleRatio();ctx.scale(scaleRatio,scaleRatio);var trans=tree.centreImageCoords();ctx.translate(trans.x,trans.y);}tree.drawAll(animate);}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/7-l-system/draw.ts
function _7_l_system_draw_draw(args){var canvas=args.canvas,size=args.size;var parameters=args.parameters;var ctx=canvas.getContext("2d");canvas.style.background="black";if(ctx){ctx.setTransform(1,0,0,1,0,0);ctx===null||ctx===void 0?void 0:ctx.clearRect(0,0,size,size);ctx.lineWidth=1;ctx.strokeStyle=c.GREEN;ctx.beginPath();var animate=parameters.animate==="on";algorithm_generate(parameters.iterations,parameters.angle,parameters.lRatio,size,animate,parameters.branches,parameters.curveRatio,parameters.curveDistanceRatio,parameters.noise,ctx);ctx.closePath();}}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/7-l-system/description.tsx
function _7_l_system_description_Description(props){var ti=props.ti+1;return/*#__PURE__*/(0,jsx_runtime.jsx)(MathJax_MathJax,{children:/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"No description yet."})});}
;// CONCATENATED MODULE: ./src/fractals/fractal-configs/7-l-system/index.tsx
function LSystem(){var _useState=(0,react.useState)(false),_useState2=slicedToArray_slicedToArray(_useState,2),fullScreen=_useState2[0],setFullScreen=_useState2[1];var _useState3=(0,react.useState)(getSize(fullScreen)),_useState4=slicedToArray_slicedToArray(_useState3,2),canvasSize=_useState4[0],setCanvasSize=_useState4[1];var _useState5=(0,react.useState)(14),_useState6=slicedToArray_slicedToArray(_useState5,2),iterations=_useState6[0],setIterations=_useState6[1];var _useState7=(0,react.useState)(15),_useState8=slicedToArray_slicedToArray(_useState7,2),angle=_useState8[0],setAngle=_useState8[1];var _useState9=(0,react.useState)(0.8),_useState10=slicedToArray_slicedToArray(_useState9,2),lRatio=_useState10[0],setLRatio=_useState10[1];var _useState11=(0,react.useState)(2),_useState12=slicedToArray_slicedToArray(_useState11,2),branches=_useState12[0],setBranches=_useState12[1];var _useState13=(0,react.useState)(0.1),_useState14=slicedToArray_slicedToArray(_useState13,2),noise=_useState14[0],setNoise=_useState14[1];var _useState15=(0,react.useState)("on"),_useState16=slicedToArray_slicedToArray(_useState15,2),animate=_useState16[0],setAnimate=_useState16[1];var _useState17=(0,react.useState)(0.3),_useState18=slicedToArray_slicedToArray(_useState17,2),curveRatio=_useState18[0],setCurveRatio=_useState18[1];var _useState19=(0,react.useState)(0.1),_useState20=slicedToArray_slicedToArray(_useState19,2),curveDistanceRatio=_useState20[0],setCurveDistanceRatio=_useState20[1];var navTabIndex=(0,react.useContext)(NavTabContext);(0,react.useEffect)(function(){if(iterations>algorithm_getMaxIterations(branches)){setIterations(algorithm_getMaxIterations);}},[branches,iterations]);(0,react.useEffect)(function(){var func=function func(){var newSize=getSize(fullScreen);setCanvasSize(newSize);};window.addEventListener("resize",func);return function(){return window.removeEventListener("resize",func);};},[fullScreen,canvasSize]);var sliders=[{value:iterations,label:"iterations",maxValue:algorithm_getMaxIterations(branches),minValue:1,setValue:setIterations,tabIndex:0},{value:angle,label:"angle between branches (degrees)",maxValue:45,minValue:1,setValue:setAngle,tabIndex:1},{value:lRatio,label:"branch length ratio between iterations",maxValue:1,minValue:0.1,setValue:setLRatio,tabIndex:1,stepSize:0.1,info:"the ratio of 0.8 means the a branch will have 0.8 of the length of the branch from the previous iteration"},{value:branches,label:"number of branches growing out of each branch",maxValue:5,minValue:2,setValue:setBranches,tabIndex:2},{value:noise,label:"noise",maxValue:0.5,minValue:0,setValue:setNoise,tabIndex:1,stepSize:0.05,inputRounding:2,info:"the level of randomness introduced into generating the tree",sliderOnly:true}];var radio=[{label:"Add each iteration with a delay (animate)",options:["on","off"],setValue:setAnimate,tabIndex:2,value:animate}];var curves=[{curveRatio:curveRatio,curveDistanceRatio:curveDistanceRatio,angleDeg:angle,setCurveRatio:setCurveRatio,setCurveDistanceRatio:setCurveDistanceRatio,label1:"distance",label2:"ratio",tabIndex:3}];var description=(0,react.useMemo)(function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(_7_l_system_description_Description,{ti:navTabIndex+13});},[navTabIndex]);var canvasKey="".concat(canvasSize,"-").concat(iterations,"-").concat(angle,"-").concat(lRatio,"-").concat(branches,"-").concat(noise,"-").concat(canvasSize);return/*#__PURE__*/(0,jsx_runtime.jsx)(FullScreenContext.Provider,{value:fullScreen,children:/*#__PURE__*/(0,jsx_runtime.jsx)(FractalDisplay,{canvasInputs:{key:canvasKey},canvasSize:canvasSize,curves:curves,description:description,descriptionTabIndex:navTabIndex+13,draw:_7_l_system_draw_draw,drawParameters:{iterations:iterations,angle:angle,lRatio:lRatio,animate:animate,branches:branches,curveRatio:curveRatio,curveDistanceRatio:curveDistanceRatio,noise:noise},nextLink:"/#/dummy",prevLink:"/#/dragon",radio:radio,setFullScreen:setFullScreen,sliders:sliders,title:"L-system tree - work in progress"})});}
;// CONCATENATED MODULE: ./src/config/links.ts
var fractals=[{label:"Sierpiński triangle",url:'/sierpinski',component:SierpinskiTriangle},{label:"Cantor set",url:'/cantor',component:CantorSet},{label:"Newton's fractal",url:'/newton',component:Newton},{label:"Mandelbrot set",url:'/mandelbrot',component:MandelbrotSet},{label:"Julia set",url:'/julia',component:JuliaSet},{label:"Heighway dragon",url:'/dragon',component:HeighwayDragon},{label:"L-system tree",url:'/l-system',component:LSystem}];
;// CONCATENATED MODULE: ./src/components/layout/Header.tsx
function Header(){return/*#__PURE__*/(0,jsx_runtime.jsx)(Navbar,{className:"bp4-dark floating-box",children:/*#__PURE__*/(0,jsx_runtime.jsxs)(Navbar.Group,{align:"left",children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Link,{to:"/",children:/*#__PURE__*/(0,jsx_runtime.jsx)(Button,{className:"bp4-minimal",icon:"home",text:"Home",tabIndex:1})}),/*#__PURE__*/(0,jsx_runtime.jsx)(Link,{to:"/sierpinski",children:/*#__PURE__*/(0,jsx_runtime.jsx)(Button,{className:"bp4-minimal",text:"Start",tabIndex:2})}),/*#__PURE__*/(0,jsx_runtime.jsx)(Navbar.Divider,{}),/*#__PURE__*/(0,jsx_runtime.jsx)(FractalMenu,{})]})});}function FractalMenu(){var initTabIndex=3;return/*#__PURE__*/(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:fractals.map(function(f,index){return/*#__PURE__*/(0,jsx_runtime.jsx)(Link,{to:f.url,children:/*#__PURE__*/(0,jsx_runtime.jsx)(Button,{tabIndex:initTabIndex+index,text:f.label})},f.url);})});}
;// CONCATENATED MODULE: ./src/components/layout/Layout.tsx
function Layout(props){return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"App bp4-dark",children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Header,{}),props.children,/*#__PURE__*/(0,jsx_runtime.jsx)(Footer,{})]});}
;// CONCATENATED MODULE: ./src/components/Home.tsx
function Home(){return/*#__PURE__*/(0,jsx_runtime.jsx)("div",{className:"App bp4-dark",children:/*#__PURE__*/(0,jsx_runtime.jsx)(Layout,{children:/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{className:"three-cols",children:[/*#__PURE__*/(0,jsx_runtime.jsx)("section",{}),/*#__PURE__*/(0,jsx_runtime.jsxs)("section",{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(H1,{children:"Fractals for the people!"}),/*#__PURE__*/(0,jsx_runtime.jsx)(H2,{children:"Introduction"}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"Everyone learns some Mathematics at school, but a lot of people struggle with it or find it boring. There are people who see beauty in it and feel like they unravel the laws of nature through numbers by they all seem at the PhD level \u2013 for the rest of us, it\u2019s no more interesting than calculating taxes. However, in 1970s, a mathematicians started looking into objects that proved appealing not just to academics, but also school children, humanities students and the general public: fractals. You can admire their fantastic shapes and surprising properties even as a complete lay person."}),/*#__PURE__*/(0,jsx_runtime.jsx)(H2,{children:"About this page"}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"This website aims at providing an easy, laid-back introduction to fractals for users without strong mathematical background, or just people who are curious but do not feel like getting too deep into it. It relies on interactive visuals, examples and intuitive understanding rather than formal definitions. The page itself takes you through several examples of fractals, with some text explaining the crucial ideas behind it, and images that you can manipulate in real-time. There are some numbers and equations, but mostly simple, or not strictly necessary to get the general idea."}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"If you are looking for in-depth understanding of the subject, this site is not for you, but you might still find something interesting recommendations in the \u2018Resources\u2019 tab."}),/*#__PURE__*/(0,jsx_runtime.jsx)(H2,{children:"Why fractals?"}),/*#__PURE__*/(0,jsx_runtime.jsx)("p",{children:"In 1990s in the USA, there were several experimental programmes that taught fractal-related subjects to high school students, elementary school students, or university students following humanities. These turned out much more enthusiastically received than ordinary mathematical classes. Also, they often relied on computers with specialised software \u2013 a rare thing in a classroom at the time. With today\u2019s technology, it is easy to make this kind of resources available to many, many more people, so the fun and wonder doesn\u2019t have to be limited to the lucky few."})]}),/*#__PURE__*/(0,jsx_runtime.jsx)("section",{})]})})});}
;// CONCATENATED MODULE: ./src/App.tsx
var NavTabContext=/*#__PURE__*/(0,react.createContext)(0);var EXTRA_BUTTONS=2;var routes=fractals.map(function(fractal){return/*#__PURE__*/(0,jsx_runtime.jsx)(Route,{path:fractal.url,element:/*#__PURE__*/(0,jsx_runtime.jsx)(fractal.component,{})},fractal.url);});function App_App(){var navTabContext=EXTRA_BUTTONS+fractals.length;return/*#__PURE__*/(0,jsx_runtime.jsx)(react.StrictMode,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(MathJaxContext_MathJaxContext,{config:{inTabOrder:false},children:/*#__PURE__*/(0,jsx_runtime.jsx)(HashRouter,{basename:"/",children:/*#__PURE__*/(0,jsx_runtime.jsx)(NavTabContext.Provider,{value:navTabContext,children:/*#__PURE__*/(0,jsx_runtime.jsx)(Routes,{children:/*#__PURE__*/(0,jsx_runtime.jsxs)(Route,{path:"/",children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Route,{index:true,element:/*#__PURE__*/(0,jsx_runtime.jsx)(Home,{})}),routes]})})})})})});}/* harmony default export */ var src_App = (App_App);
;// CONCATENATED MODULE: ./src/index.tsx
var root=client.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/(0,jsx_runtime.jsx)(react.StrictMode,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(src_App,{})}));root.render(/*#__PURE__*/(0,jsx_runtime.jsx)(src_App,{}));
}();
/******/ })()
;
//# sourceMappingURL=main.89fb13ef.js.map